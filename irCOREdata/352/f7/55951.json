{"doi":"10.1002\/rob.20204","coreId":"55951","oai":"oai:eprints.lincoln.ac.uk:1615","identifiers":["oai:eprints.lincoln.ac.uk:1615","10.1002\/rob.20204"],"title":"Scan registration for autonomous mining vehicles using 3D-NDT","authors":["Magnusson, Martin","Lilienthals, Achim","Duckett, Tom"],"enrichments":{"references":[{"id":18439727,"title":"A method for registration of 3-D shapes.","authors":[],"date":"1992","doi":"10.1117\/12.57955","raw":"Besl, P. J., & McKay, N. D. 1992. A method for registration of 3-D shapes. IEEE Transactions on Pattern Analysis and Machine Intelligence, 142, 239\u2013256.","cites":null},{"id":18439728,"title":"The normal distributions transform: A new approach to laser scan matching.","authors":[],"date":"2003","doi":"10.1109\/iros.2003.1249285","raw":"Biber, P., & Strasser, W. 2003. The normal distributions transform: A new approach to laser scan matching. In Proceedings of the IEEE International Conference on Intelligent Robots and Systems IROS, Vol. 3, pp. 2743\u20132748.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2007","abstract":"Scan registration is an essential subtask when building maps based on range finder data from mobile robots. The problem is to deduce how the robot has moved between consecutive scans, based on the shape of overlapping portions of the scans. This paper presents a new algorithm for registration of 3D data. The algorithm is a generalization and improvement of the normal distributions transform (NDT) for 2D data developed by Biber and Strasser, which allows for accurate registration using a memory-efficient representation of the scan surface. A detailed quantitative and qualitative comparison of the new algorithm with the 3D version of the popular ICP (iterative closest point) algorithm is presented. Results with actual mine data, some of which were collected with a new prototype 3D laser scanner, show that the presented algorithm is faster and slightly more reliable than the standard ICP algorithm for 3D registration, while using a more memory efficient scan surface representation","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/55951.pdf","fullTextIdentifier":"http:\/\/eprints.lincoln.ac.uk\/1615\/1\/mm_al_td_jfr2007.pdf","pdfHashValue":"3f4477b8bf88cda3809c580afad3f6a5793a6df3","publisher":"Wiley Periodicals, Inc.","rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:eprints.lincoln.ac.uk:1615<\/identifier><datestamp>\n      2017-11-09T15:17:19Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      7375626A656374733D6A6163735F47:6A6163735F47373030<\/setSpec><setSpec>\n      7375626A656374733D6A6163735F47:6A6163735F47343030<\/setSpec><setSpec>\n      7375626A656374733D6A6163735F48:6A6163735F48363731<\/setSpec><setSpec>\n      74797065733D61727469636C65<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/eprints.lincoln.ac.uk\/1615\/<\/dc:relation><dc:title>\n        Scan registration for autonomous mining vehicles using 3D-NDT<\/dc:title><dc:creator>\n        Magnusson, Martin<\/dc:creator><dc:creator>\n        Lilienthals, Achim<\/dc:creator><dc:creator>\n        Duckett, Tom<\/dc:creator><dc:subject>\n        G700 Artificial Intelligence<\/dc:subject><dc:subject>\n        G400 Computer Science<\/dc:subject><dc:subject>\n        H671 Robotics<\/dc:subject><dc:description>\n        Scan registration is an essential subtask when building maps based on range finder data from mobile robots. The problem is to deduce how the robot has moved between consecutive scans, based on the shape of overlapping portions of the scans. This paper presents a new algorithm for registration of 3D data. The algorithm is a generalization and improvement of the normal distributions transform (NDT) for 2D data developed by Biber and Strasser, which allows for accurate registration using a memory-efficient representation of the scan surface. A detailed quantitative and qualitative comparison of the new algorithm with the 3D version of the popular ICP (iterative closest point) algorithm is presented. Results with actual mine data, some of which were collected with a new prototype 3D laser scanner, show that the presented algorithm is faster and slightly more reliable than the standard ICP algorithm for 3D registration, while using a more memory efficient scan surface representation.<\/dc:description><dc:publisher>\n        Wiley Periodicals, Inc.<\/dc:publisher><dc:date>\n        2007<\/dc:date><dc:type>\n        Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:format>\n        application\/pdf<\/dc:format><dc:language>\n        en<\/dc:language><dc:identifier>\n        http:\/\/eprints.lincoln.ac.uk\/1615\/1\/mm_al_td_jfr2007.pdf<\/dc:identifier><dc:identifier>\n          Magnusson, Martin and Lilienthals, Achim and Duckett, Tom  (2007) Scan registration for autonomous mining vehicles using 3D-NDT.  Journal of Field Robotics, 24  (10).   pp. 803-827.  ISSN 1556-4959  <\/dc:identifier><dc:relation>\n        http:\/\/www.journalfieldrobotics.org\/Home.html<\/dc:relation><dc:relation>\n        10.1002\/rob.20204<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/eprints.lincoln.ac.uk\/1615\/","http:\/\/www.journalfieldrobotics.org\/Home.html","10.1002\/rob.20204"],"year":2007,"topics":["G700 Artificial Intelligence","G400 Computer Science","H671 Robotics"],"subject":["Article","PeerReviewed"],"fullText":"Scan Registration for\nAutonomous Mining Vehicles\nUsing 3D-NDT\nMartin Magnusson and Achim Lilienthal\nAASS\nDepartment of Technology\n\u00d6rebro University\nSE-701 82 \u00d6rebro, Sweden\ne-mail: martin.magnusson@tech.oru.se,\nachim@lilienthals.de\nTom Duckett\nDepartment of Computing and Informatics\nUniversity of Lincoln\nBrayford Pool\nLincoln LN6 7TS UK\ne-mail: tduckett@lincoln.ac.uk\nReceived 24 September 2006; accepted 28 May 2007\nScan registration is an essential subtask when building maps based on range finder data\nfrom mobile robots. The problem is to deduce how the robot has moved between con-\nsecutive scans, based on the shape of overlapping portions of the scans. This paper pre-\nsents a new algorithm for registration of 3D data. The algorithm is a generalization and\nimprovement of the normal distributions transform \u0001NDT\u0002 for 2D data developed by\nBiber and Strasser, which allows for accurate registration using a memory-efficient rep-\nresentation of the scan surface. A detailed quantitative and qualitative comparison of the\nnew algorithm with the 3D version of the popular ICP \u0001iterative closest point\u0002 algorithm\nis presented. Results with actual mine data, some of which were collected with a new\nprototype 3D laser scanner, show that the presented algorithm is faster and slightly more\nreliable than the standard ICP algorithm for 3D registration, while using a more memory-\nefficient scan surface representation. \u00a9 2007 Wiley Periodicals, Inc.\n1. INTRODUCTION\nThe main application considered in this paper is tun-\nnel profiling \u0001that is, measuring and building three-\ndimensional models\u0002 by using a range sensor\nmounted on drill rigs that are commonly used for\ntunnel excavation \u0001see Figure 1\u0002. Profiling of mine\ntunnels is necessary to check that new tunnels have\n\u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022 \u2022\nJournal of Field Robotics 24(10), 803\u2013827 (2007) \u00a9 2007 Wiley Periodicals, Inc.\nPublished online in Wiley InterScience (www.interscience.wiley.com). \u2022 DOI: 10.1002\/rob.20204\nthe desired shape, to measure the volume of material\nremoved, to survey old tunnels and investigate\nwhether they are still safe, and to build three-\ndimensional maps that can be used for autonomous\noperation of drill rigs and other mining vehicles.\nToday\u2019s tools for tunnel profile scanning are ei-\nther very slow or very expensive, and profiling cur-\nrently needs to be performed separately from any\nother activity in the tunnel. The rock drill industry\nhas been searching for tools that give a fast and cheap\nsolution to this problem for a long time.\nThe long-term goal of this work is to make it pos-\nsible for mining vehicles to operate with minimal hu-\nman intervention, or completely autonomously. If un-\nderground operations could be performed by\nautonomous vehicles, the lives and health of thou-\nsands of mine workers could be saved in the future.\nThe paper is structured as follows. Section 2\nbriefly covers the basic algorithms for scan registra-\ntion that provided the foundation for this work. Sec-\ntion 3 describes the three-dimensional normal distri-\nbutions transform, a novel algorithm for registration\nof 3D surfaces, and Section 4 presents some variants\nand improvements to 3D-NDT. Section 5 gives the re-\nsults of experiments performed using scan data from\nan underground mine, and shows a detailed com-\nparison of the algorithms presented in the paper. Fi-\nnally, Section 6 concludes and summarizes the paper.\n2. EXISTING SCAN REGISTRATION\nALGORITHMS\nPairwise scan registration is the process of aligning\ntwo overlapping scans, given an estimate of the rela-\ntive transformation needed to match one with the\nother. When the scans are properly aligned, they are\nsaid to be in registration. Several algorithms for this\npurpose exist, the most common and well known of\nwhich is the ICP \u0001iterative closest point\u0002 algorithm\n\u0001Besl & McKay, 1992; Chen & Medioni, 1992\u0002. Follow-\ning the nomenclature of Besl & McKay, the scan that\nserves as the reference is called the model and the scan\nthat is moved into alignment with the model is called\nthe data scan.\n2.1. ICP\nICP works by iteratively searching for pairs of\nnearby points in the two scans and minimizing the\nsum of all point-to-point distances.\nTwo main problems of ICP are that it is point-\nbased, and as such does not make use of the local\nsurface shape around each point, and that the\nnearest-neighbor search in the central loop is rather\ntime consuming. One way to speed up the search is\nto use an efficient search data structure, such as a\nkd-tree with approximate nearest-neighbor search\n\u0001Greenspan & Yurick, 2003\u0002, but the search pass is\nstill the main bottleneck for the algorithm\u2019s running\ntime.\nIf the point pairs that are found in the first step\nof the algorithm indeed correspond to the same\npoint on the scanned surface, the computed transfor-\nmation will be exact. However, since the closest\npoint is used as a guess for the corresponding point,\nit is desirable to detect and filter bad correspon-\ndences and keep only the best ones. One strategy is\nto assign different weights to the pairs, as a kind of\n\u201csoft\u201d outlier rejection \u0001Rusinkiewicz, 2001\u0002. The\nstrategy is to assign more weight to point pairs that\nare likely to contribute more to the end result and\nless weight to pairs that are more likely to be incor-\nrect correspondences. One example of a weighting\ncriterion is to use the relative distance between the\npoints. The weight w of the correspondence between\npoints x and y can be set proportional to the point\npair with the largest distance so that\nFigure 1. An Atlas Copco drill rig in its natural environ-\nment. The vehicle is equipped with rock drills mounted on\ntelescopic booms and is used for drilling holes in the rock\nface before blasting.\n804 \u2022 Journal of Field Robotics\u20142007\nJournal of Field Robotics DOI 10.1002\/rob\nw = 1 \u2212\n\u0003x \u2212 y\u0003\nmax\u0003xi \u2212 yj\u0003\n. \u00011\u0002\nWe found that linear weighting based on distance\ndid not improve the results on our data. For tunnel\nor corridor data, distance-based weighting can in\nfact degrade performance. Because most points\nalong the walls and ceiling will generally be well-\naligned, their influence will overwhelm point pairs\nwith larger distances, which may correspond to cor-\nners and other features that are important. Therefore\nwe weighted all point pairs equally.\n2.2. 2D-NDT\nThe normal distributions transform \u0001NDT\u0002 is a more\nrecent method for registration developed for two-\ndimensional scan data \u0001Biber & Strasser, 2003\u0002. The\nkey element in this algorithm is its representation of\nthe model. Instead of using the individual points of\nthe model, it is represented by a combination of nor-\nmal distributions, describing the probability of find-\ning a surface point at a certain position. The normal\ndistributions give a piecewise smooth representation\nof the model point cloud, with continuous first and\nsecond order derivatives. Using this representation,\nit is possible to apply standard numerical optimiza-\ntion methods for registration. Numerical optimiza-\ntion is a problem that has been studied for centuries,\nand fast and reliable methods for optimizing func-\ntions such as a sum of normal distributions have\nbeen developed and tested over time. Because the\npoints in the model are not used directly for match-\ning, there is no need for the computationally expen-\nsive nearest-neighbor search that is done in the cen-\ntral loop of ICP. Storing the NDT representation of\nscans instead of storing the point clouds themselves\nalso requires much less memory. This is beneficial\nfor all large maps, where storing the complete point\ncloud data is uneconomical. Another application\nwhere a compact map representation is needed is\nwhen using multiple time scales for mapping dy-\nnamic environments, where multiple copies of the\nsame area are stored, representing different time\nscales. Computing the normal distributions is a\nquick one-off task that is done during a single pass\nthrough the points of the model.\nThe first step of the NDT algorithm is to subdi-\nvide the space occupied by the model into regularly\nsized cells \u0001squares in the 2D case, or cubes in 3D\u0002.\nThen, for each cell b that contains more than some\nminimum number of points, the mean vector q of\nthe points in the cell and the covariance matrix C are\ncalculated as\nq =\n1\nn\u0004k=1\nn\nxk, \u00012\u0002\nC =\n1\nn \u2212 1\u0004k=1\nn\n\u0001xk \u2212 q\u0002\u0001xk \u2212 q\u0002T, \u00013\u0002\nwhere xk=1,. . .,n are the points contained in the cell.\nThe probability that there is a point at position x\nin cell b can then be modeled by the normal distri-\nbution N\u0001q ,C\u0002. The probability density function\n\u0001PDF\u0002 is formulated as\np\u0001x\u0002 =\n1\nc\nexp\u0005\u2212 \u0001x \u2212 q\u0002TC\u22121\u0001x \u2212 q\u00022 \u0006 , \u00014\u0002\nwhere q and C are the mean vector and covariance\nmatrix for the cell that contains point x, and c is a\nnormalizing constant that can be set to one for prac-\ntical purposes. Setting the limit for which cells are\nconsidered occupied to five points per cell is reason-\nable, in order to get a sensible covariance matrix. A\n2D laser scan and its corresponding normal distribu-\ntions are shown in Figure 2.\nThe parameters to be optimized\u2014that is, the ro-\ntation and translation of the current pose estimate\u2014\ncan be encoded in a vector p. For 2D registration,\nthere are three transformation parameters to opti-\nmize. Let p= \u0007tx , ty ,\u0001\b be the parameter vector, where\ntx and ty are the translation parameters and \u0001 is the\nrotation angle. Using counter-clockwise rotation, the\n2D transformation function is\nT3\u0001p,x\u0002 = \tcos \u0001 \u2212 sin \u0001sin \u0001 cos \u0001 \nx + \ttxty\n . \u00015\u0002\nThe algorithm measures the fitness of a particular\npose by evaluating the PDFs at all points of the data\nscan. Since optimization problems are generally for-\nmulated as minimization problems, the score func-\ntion is defined so that good parameters yield a large\nnegative number.\nMagnusson et al.: Scan Registration for Autonomous Mining Vehicles Using 3D-NDT \u2022 805\nJournal of Field Robotics DOI 10.1002\/rob\nGiven a set of points X= \u000bx1 , . . . ,xn\f, a pose p,\nand a transformation function T\u0001p ,x\u0002 to transform a\npoint in space, the score s\u0001p\u0002 for the current set of\nparameters is defined as\ns\u0001p\u0002 = \u2212 \u0004\nk=1\nn\np\u0001T\u0001p,xk\u0002\u0002 . \u00016\u0002\nIn other words, the score is the negated sum of prob-\nabilities that the transformed points of the data scan\nare actually lying on the model surface.\nGiven the transformation parameters p, New-\nton\u2019s algorithm can be used to iteratively solve the\nequation H\u0002p=\u2212g, where H and g are the Hessian\nand gradient of s. The increment \u0002p is added to the\ncurrent estimate of the parameters in each iteration,\nso that p\u2190p+\u0002p.\nFor brevity, let\nx\u0001 \r T\u0001p,x\u0002 \u2212 q . \u00017\u0002\nIn other words, x\u0001 is the transformed point x, rela-\ntive to the center of the point distribution of the cell\nto which it belongs. The entries for the gradient of\nthe score function can be written as\ngi =\n\u0003s\n\u0003pi\n= \u0004\nk=1\nn\nxk\u0001\nTC\u22121\n\u0003xk\u0001\n\u0003pi\nexp\u0005\u2212 xk\u0001TC\u22121xk\u0001\n2\n\u0006 . \u00018\u0002\nThe entries of the Hessian are\nHij =\n\u0003s\n\u0003pi\u0003pj\n= \u0004\nk=1\nn\nexp\u0005\u2212 xk\u0001TC\u22121xk\u0001\n2\n\u0006\u0005\u0005xk\u0001TC\u22121\u0003xk\u0001\u0003pi \u0006\n\u0004\u0005\u2212 xk\u0001TC\u22121\u0003xk\u0001\u0003pj \u0006 + xk\u0001TC\u22121 \u0003\n2xk\u0001\n\u0003pi\u0003pj\n+\n\u0003xk\u0001\nT\n\u0003pj\nC\u22121\n\u0003xk\u0001\n\u0003pi\n\u0006 .\n\u00019\u0002\nThe first- and second-order partial derivatives of x\u0001\nin Eqs. \u00018\u0002 and \u00019\u0002 depend on the transformation\nfunction. Using the 2D transformation function from\nEq. \u00015\u0002, the first-order derivative \u0003x\u0001\/\u0003pi is given by\ncolumn i of the Jacobian matrix\nJ3 = \t1 0 \u2212 x1\u0001 sin \u0001 \u2212 x2\u0001 cos \u00010 1 x1\u0001 cos \u0001 \u2212 x2\u0001 sin \u0001 \n , \u000110\u0002\nand the second-order derivatives are\n\u00032x\u0001\n\u0003pi\u0003pj\n= \u000e\u0005\n\u2212 x1\u0001 cos \u0001 + x2\u0001 cos \u0001\n\u2212 x1\u0001 sin \u0001 \u2212 x2\u0001 cos \u0001\n\u0006 if i = j = 3,\n\u00050\n0\n\u0006 otherwise.\u000f\n\u000111\u0002\nThe NDT algorithm for registering two point sets X\nand Y \u0001finding the pose p that moves the data scan X\ninto registration with the model Y\u0002 is given in Algo-\nrithm 1.\nIn recent work carried out independently, a\nsemi-3D version of NDT was used to register large\nhigh-resolution outdoor scans \u0001Ripperda & Brenner,\n2005\u0002. In the work of Ripperda and Brenner, each 3D\nscan was divided into several horizontal slices and\n2D-NDT was applied on each pair of slices. Using N\nFigure 2. A 2D laser scan of part of a room and the NDT\nrepresentation describing the surface shape. The original\npoint cloud is shown with small squares, and the rounded\nshapes show the normal distributions of the occupied grid\ncells. Each cell is a square with 1 m side length. Brighter\nareas represent a higher probability.\n806 \u2022 Journal of Field Robotics\u20142007\nJournal of Field Robotics DOI 10.1002\/rob\nslices, and denoting the score for slice n by sn\u0001p\u0002, the\nscore function was defined as the sum over all slice\npairs\ns\u0001p\u0002 = \u0004\nn=1\nN\nsn\u0001p\u0002 . \u000112\u0002\nThe approach used by Ripperda and Brenner can\nonly perform registration in the horizontal plane,\nand only works under the assumption that the local\ncoordinate systems of all scans are aligned in the\nplane, meaning that the scanner must have the same\norientation at each scan pose. This assumption does\nnot hold for the majority of mobile robot applica-\ntions.\nAlgorithm 1 Register data scan X with model Y using\nNDT\nBuild cell structure B\nfor all points yi\u0001Y do\nFind the cell bk that contains yi\nStore yi in bk\nend for\nfor all cells bi\u0001B do\nY\u0001= \u000by1\u0001 , . . . ,yn\u0001\f\u2190all points in bi\nqi\u2190\n1\nn\n\u0004j=1\nn yj\u0001\nCi\u2190covariance of all points in Y\u0001\nend for\nwhile not converged do\nscore\u21900\ng\u21900\nH\u21900\nfor all points xi\u0001X do\nFind the cell bk that contains T\u0001p ,xi\u0002\nxi\u0001\u2190T\u0001p ,xi\u0002\nscore\u2190score\u2212p\u0001xi\u0001\u0002 \u0001see Eq. \u00014\u0002\u0002\nUpdate g \u0001see Eq. \u00018\u0002\u0002\nUpdate H \u0001see Eq. \u00019\u0002\u0002\nend for\nSolve H\u0002p=\u2212g\np\u2190p+\u0002p\nend while\n2.3. Registration with Approximants to the\nDistance Function\nMitra et al. presented an approach to 3D scan regis-\ntration that is similar to NDT \u0001Mitra, Gelfand, Pott-\nmann & Guibas, 2004\u0002. The idea behind their algo-\nrithm is to describe the model surface implicitly,\nusing quadratic approximants to the squared dis-\ntance function from the target surface, instead of the\nnormal distributions used by NDT or the original\npoint cloud data used by ICP. Registration then be-\ncomes the task of minimizing the sum of the dis-\ntance functions when evaluated at the points of the\ndata scan. Because the approximants used in their\nalgorithm are second-order approximations of the\nlocal surface shape that are valid within an interval\naround each point, and not just at the points where\nthey are computed, it is possible to use Newton it-\neration to solve the registration problem with this\nsurface representation, too. One way to use the ap-\nproximants is to compute them on demand for each\npoint in the model, using the normal vector and the\ntwo principal curvature directions at that point. The\nnormal and principal curvature vectors are com-\nputed in a preprocessing step, and the distance func-\ntions are computed at each step of the registration\nprocess. The other method presented by the authors\nis to subdivide the space occupied by the model into\na grid. For each grid cell \u0001both cells that are occupied\nby the surface and empty cells\u0002, a quadratic patch is\nfitted to the squared distance to the scan surface. The\nsecond method is quite similar to the NDT versions\ndescribed in this paper. For any point in the data\nscan, the algorithm queries the cell structure for the\ncorresponding approximant to the squared distance\nfunction to the surface and uses these values as the\n\u201cscore\u201d of the current pose.\nThe squared distance function used by Mitra et\nal. is in fact a generalization of the error metrics used\nby the most common versions of ICP: the point-to-\npoint distance mentioned in Section 2.1, and the\npoint-to-plane distance, which measures the dis-\ntance from a point in the data scan to the closest\npoint on the tangential plane of its closest neighbor\nin the model. In their paper, they showed that the\nsuggested functions lead to more reliable registra-\ntion from a larger number of initial pose estimates\nthan point-to-plane ICP. The algorithm behaves like\npoint-to-point ICP \u0001stable with regard to the initial\nerror, but slower\u0002 when the scans are far from each\nMagnusson et al.: Scan Registration for Autonomous Mining Vehicles Using 3D-NDT \u2022 807\nJournal of Field Robotics DOI 10.1002\/rob\nother, and like point-to-plane ICP \u0001faster, but less\nstable with regard to the initial error\u0002 when the scans\nare almost registered.\nThe quadratic patches approximate both the po-\nsition and the curvature of the surface, while the\nnormal distributions used in NDT only give an esti-\nmate of the position. As long as the surface is\nsmooth and the cells are small enough so that the\nsurface is approximately uni-modal within each cell,\nquadratic patches are a more descriptive representa-\ntion of the surface than the normal distribution of\npoints within the cell. Mitra et al. use the fitting error\nof the quadratic patch to deal with the problem of\nchoosing a good cell size, by building an octree cell\nstructure that has small cells where required and\nlarge cells where that is sufficient. Neighboring cells\nare merged if a patch fitted to the surface in the\nlarger cell has an acceptable fitting error. A similar\nmethod has also been implemented for NDT \u0001see\nSection 4.3.2\u0002.\nFor very noisy data, we hypothesize that surface\npatches are an inappropriate model of the scan data,\ncompared to the more context-free normal distribu-\ntion representation. The quadratic patches assume\nthat the scan points are sampled from a piece-wise\nsmooth surface, which is not always the case. In the\nmine mapping application, the walls of the tunnels\nare quite rough, and the the sample spacing is at a\nlarger scale than the surface roughness for areas of\nthe tunnel far away from the scanner. Using only the\nscan points or an approximated surface fitted to the\nscan points is likely to lead to misalignment of scans\nproportional to the roughness of the walls. The un-\neven walls will in this case behave like noisy mea-\nsurements. Smoothing the surface with the proposed\nnormal distributions is a good alternative in that\ncase. Mitra et al. did not report the execution times\nof their algorithm, but it would be interesting to\ncompare the speed and accuracy of their approach to\nthat of NDT. We did not compare the two algorithms\nfor the work presented here, because of time con-\nstraints and the lack of a publicly available imple-\nmentation. Though the storage requirements for the\nquadratic fit representation are smaller than storing\nthe point clouds themselves\u2014at least for densely\nsampled point clouds\u2014they are somewhat larger\nthan for NDT, because distance approximants are\nstored for all cells \u0001requiring nine parameters per\ncell\u0002, and not just the occupied ones.\n3. 3D-NDT\nThe main difference between 2D and 3D registration\nwith NDT lies in the spatial transformation function\nT\u0001p ,x\u0002 and its partial derivatives. In two dimensions,\nrotation is represented with a single value for the\nangle of rotation around the origin, and the most ob-\nvious transformation function is the one from Eq. \u00015\u0002.\nGeneral rotation in 3D is more complex. A robust 3D\nrotation representation requires both an axis and an\nangle. A straightforward way to represent a general\n3D transformation is to use seven parameters \u0001three\nparameters for the translation, three for the rotation\naxis, and one for the rotation angle\u0002. Using a right-\nhanded coordinate system and counter-clockwise ro-\ntations, the transformation of a 3D point x using a pa-\nrameter vector p can then be formulated as\nT7\u0001p,x\u0002 = \u0010 erx\n2 + c erxry \u2212 srz erxrz + sry\nerxry + srz ery\n2 + c eryrz \u2212 srx\nerxrz \u2212 sry eryrz + srx erz\n2 + c\n\u0011x + \u0010txty\ntz\n\u0011 ,\n\u000113\u0002\nwhere p= \u0007t\u0003r\u0003\u0001\b, t= \u0007tx , ty , tz\b is the translation, r\n= \u0007rx ,ry ,rz\b is the axis of rotation, s=sin \u0001, c=cos \u0001,\ne=1\u2212cos \u0001, and \u0001 is the rotation angle.\nA common way to represent 3D rotation in com-\nputer graphics is to use quaternions, which are a gen-\neralization of complex numbers. Quaternions have\nfavorable properties when used for rotation, most no-\ntably when composing several rotations. A normal-\nized quaternion always represents a valid rotation. A\ncombination of rotation matrices, on the other hand,\nmay become nonorthogonal as rounding errors in-\ncrease over time, and using a nonorthogonal transfor-\nmation matrix for rotation has undesired effects. The\naxis-angle rotation r, \u0001 can be represented by the\nquaternion cos \u0001+ \u0001rx cos \u0001\u0002i+ \u0001ry cos \u0001\u0002j+ \u0001rz cos \u0001\u0002k.\nThe partial derivatives that are needed for Eqs.\n\u00018\u0002 and \u00019\u0002 when using T7 can be found in the Jacobian\nand Hessian matrices \u000117\u0002 and \u000118\u0002. The Hessian is\npresented as a block matrix with 7\u00047 blocks, where\neach block is a three-element vector. Similarly to Eq.\n\u00017\u0002, define\nx\u0001 \r T7\u0001p,x\u0002 \u2212 q , \u000114\u0002\nwhere x is a 3D scan point, q is the mean vector of the\ncell in which it lies, and p is a vector of transformation\nparameters. Then\n808 \u2022 Journal of Field Robotics\u20142007\nJournal of Field Robotics DOI 10.1002\/rob\n\u0003x\u0001\n\u0003pi\n= the ith column of J7, \u000115\u0002\n\u00032x\u0001\n\u0003pi\u0003pj\n= Hij, \u000116\u0002\nJ7 = \u0010\n1 0 0\n0 1 0\n0 0 1\ne\u00012rxx1 + ryx2 + rzx3\u0002 eryx1 \u2212 sx3 erzx1 + sx2\nerxx2 + sx3 e\u0001rxx1 + 2ryx2 + rzx3\u0002 erzx2 \u2212 sx1\nerxx3 \u2212 sx2 eryx3 + sx1 e\u0001rxx1 + ryx2 + 2rzx3\u0002\nsA \u2212 cB sC \u2212 cD sE \u2212 cF\n\u0011\nT\n\u000117\u0002\nA = \u0001rx\n2 \u2212 1\u0002x1 + rxryx2 + rxrzx3, B = rzx2 \u2212 ryx3,\nC = rxryx1 + \u0001ry\n2 \u2212 1\u0002x2 + ryrzx3, D = \u2212 rzx1 + rxx3,\nE = rxrzx1 + ryrzx2 + \u0001rz\n2 \u2212 1\u0002x3, F = ryx1 \u2212 rxx2\nH7 = \u0010\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 a b c d\n0 0 0 b e f g\n0 0 0 c f h i\n0 0 0 d g i j\n\u0011 , \u000118\u0002\na = \u00102ex10\n0\n\u0011, b = \u0010ex2ex1\n0\n\u0011, c = \u0010ex30\nex1\n\u0011 ,\nd = \u0010s\u00012rxx1 + ryx2 + rzx3\u0002sryx1 \u2212 cx3\nsrzx1 + cx2\n\u0011 ,\ne = \u0010 02ex2\n0\n\u0011, f = \u0010 0ex3\nex2\n\u0011, g = \u0010 srxx2 + cx3s\u0001rxx1 + 2ryx2 + rzx3\u0002\nsrzx2 \u2212 cx1\n\u0011 ,\nh = \u0010 00\n2ex3\n\u0011, i = \u0010 srxx3 \u2212 cx2sryx3 + cx1\ns\u0001rxx1 + ryx2 + 2rzx3\u0002\n\u0011 ,\nFigure 3. The probability functions used by 3D-NDT for\na tunnel section. Brighter, denser parts represent higher\nprobabilities. The cells have a side length of 1 m.\nMagnusson et al.: Scan Registration for Autonomous Mining Vehicles Using 3D-NDT \u2022 809\nJournal of Field Robotics DOI 10.1002\/rob\nj = \u0010cA + sBcC + sD\ncE + sF\n\u0011 .\nIn \u000117\u0002 and \u000118\u0002, xn denotes the scalar nth component\nof the 3D vector xk. Figure 3 illustrates the 3D normal\ndistributions for a mine tunnel scan.\nThe equations above were implemented for the\nexperiments in Section 5. However, the angle param-\neter in the seven-element parameter vector is redun-\ndant. The angle can also be encoded implicitly in the\nthree axis parameters, so that the length of the rota-\ntion axis corresponds to the angle of rotation, instead\nof maintaining a normalized rotation axis separately.\nIn that case, only six parameters are needed.\n4. ALTERNATIVE METHODS IMPLEMENTED\nSeveral choices need to be made for a practical imple-\nmentation of 3D-NDT. This section describes differ-\nent methods and parameters that were tested, and\ntheir influence on the basic algorithm.\n4.1. Sampling Method\nWhen using 3D-NDT, the model is converted to a set\nof normal distributions. The points of the data scan\nare then aligned to these functions. Usually, a large\nnumber of scan points are redundant for the pur-\npose of describing the scanned surface shape. There-\nfore, it is normally desirable to subsample the data\nscan in order to improve running time. In many\ncases, not least when scanning in corridors and tun-\nnels, as well as in unstructured outdoor environ-\nments, the distribution of points is very much\ndenser near the scanner location than farther out. If\npoints are sampled in a uniformly random manner,\nthe sampled subset will have a similar distribution.\nConsequently, parts that are further from the scan-\nner contribute less to the registration. This is not spe-\ncific to NDT, but is common to all point-based reg-\nistration methods.\nSpatially distributed sampling is a sensible alter-\nnative method, that is, making sure that the spatial\ndistribution of points in the subsample is as even as\npossible. This can be done by grouping the points\ninto equally sized cells, similar to what is done when\nthe normal distributions are generated for the\nmodel. Then, a number of points are drawn from\neach cell. If the distribution of cells is adequate, this\nstrategy will give an even distribution of points.\nIt is also possible to implement subsampling\nmethods that consider the normals as well as posi-\ntions of points, either making the distribution of nor-\nmals as spread out as possible or primarily choosing\npoints with \u201cunusual\u201d normals \u0001Rusinkiewicz,\n2001\u0002. The normal at each surface point must then be\ncomputed from a sufficient number of its neighbors.\nGelfand et al. developed an improved sampling\nmethod for ICP, mainly for cases when the data con-\nsist of mostly planar regions with a few important\n\u201clock and key\u201d features \u0001Gelfand, Ikemoto, Rusink-\niewicz & Levoy, 2003\u0002. Such data are notoriously dif-\nficult to register correctly, since the scans can \u201cslide\u201d\nalong the planar regions without any big changes in\nthe error function. The stable sampling method of\nGelfand et al. requires that normals are computed\nfor all sample points. They reported that the algo-\nrithm takes about three times longer to execute than\nICP with uniform subsampling. In the work covered\nby this paper, point clouds without normal or con-\nnectivity information have been used, so these kinds\nof sampling methods have not been investigated in\ndetail. Though it was not tested, we believe that\nmost of the mine tunnel scans do not have the kind\nof shape that the stable ICP sampling method was\ndesigned for. While many of the scan pairs used in\nSection 5 are difficult to register for the same rea-\nsons, namely that the large-scale features are not\nenough for accurate registration, the important\nsmall-scale features are not generally as distinct as in\nthe incised plane data sets used by Gelfand et al.,\nbut are more evenly distributed over the rough sur-\nface and have characteristics similar to Gaussian\nnoise.\n4.2. Cell Size\nChoosing a good cell size is important when using\nNDT. Any feature that is much smaller then the size\nof a cell will be blurred out by the PDF that de-\nscribes the local surface shape around it. Choosing a\ncell size that is too large therefore often leads to less\naccurate registration. On the other hand, the region\nof influence of a cell only extends as far as its bound-\naries. That is, the cell will only contribute to the\nscore function for scan points within its bounds. The\nconsequence of this is that if the cells are too small,\nthe two scans must be close together before registra-\ntion for the algorithm to succeed. Using smaller cells\n810 \u2022 Journal of Field Robotics\u20142007\nJournal of Field Robotics DOI 10.1002\/rob\nalso requires more memory. The optimal size and\ndistribution of cells depend on the shape of the in-\nput data and on the application.\n4.3. Discretization Methods\nUsing a fixed lattice of square or cubic cells burdens\nthe user with the task of choosing a good cell size. A\nmore adaptive cell structure would be preferable, us-\ning finer subdivision in places where a single normal\ndistribution cannot describe the surface satisfyingly.\nThis section presents a number of alternative meth-\nods for handling the cells and their PDFs.\n4.3.1. Fixed Subdivision\nThe benefit of using a fixed lattice of cells is that the\noverhead for initializing the cell structure is very\nsmall. Only one set of PDF parameters needs to be\ncomputed for each cell, and the positioning of each\ncell is straightforward. Even more important for the\nperformance of the algorithm is that point-to-cell\nlook-up is also a very quick operation that can be\ndone in constant time, as the cells can be stored in a\nsimple array.\n4.3.2. Octree Subdivision\nAn octree is a tree structure that can be used to store\na hierarchical discretization of 3D space. In an oc-\ntree, each node represents a bounded partition of the\nspace. Each internal node has eight children that\nrepresent congruent and non-overlapping subdivi-\nsions of the space partition that corresponds to their\nparent node. When creating an octree, the root node\nis sized to encompass the whole model. The tree is\nthen built recursively, splitting all nodes containing\nmore than a threshold number of points. All data\npoints are contained in the leaf nodes of the octree.\nThe \u201coctree\u201d version of 3D-NDT starts with\nfixed regular cells, as described before, with the dif-\nference that each cell is the root node of an octree.\nEach cell in which the spread of the distribution is\nlarger than a certain threshold is then recursively\nsplit, thus making a forest of octrees. It is important\nfor the efficiency of the algorithm that the point-to-\ncell look-up is fast, and this is the main reason why\na forest of octrees was implemented, rather than\nhaving a single octree with a root node that spans\nthe whole scan. For many types of scan data, a rea-\nsonable cell size can be specified, so that only a few\ncells in parts where the scan surface is particularly\nuneven need to be split. Thus, for most points, find-\ning the correct cell only needs a single array access,\nwhile traversing a large octree once for each point\nwould take more time. Using a forest gives a very\nslight increase in memory consumption, since a few\nunnecessary cells need to be stored, but the effect of\nthis is negligible.\nWhen traversing the cell structure looking for\nthe corresponding cell to a point in the data scan, the\nleaf node that contains the point is chosen and its\nPDF is used to compute the score function.\n4.3.3. Additive Subdivision\nUsing octree subdivision gives a better representa-\ntion of the surface shape in areas where large cells\nwould hide many details, while keeping large cells\nwhere the surface is largely planar and further sub-\ndivision is unnecessary. However, the problem that\nsmall cells have a smaller region of influence re-\nmains: if corresponding points of the two scans are\nnot within the same cell, the extra fidelity is of no\nuse.\nA slight change to the octree subdivision scheme\ncan mitigate this limitation. Instead of using only\none leaf of the octrees, each point from the data scan\nhas its score function evaluated for all of the distri-\nbutions in the leaf cells. This effectively increases the\nsupport size of the leaf cells to that of their root cell,\nwithout sacrificing the extra refinement of the sur-\nface description that they give. This is illustrated in\nFigure 4.\n4.3.4. Iterative Subdivision\nAnother option is simply to perform a number of\nNDT runs with successively finer cell resolution, so\nthat the start pose for each iteration other than the\nfirst one is the end pose of the previous run. The first\nruns are good for bringing badly aligned scans\ncloser together, and later runs improve the rough\ninitial match.\nIf the different cell structures are computed from\nthe smallest cell size to the largest and the cell sizes\nare changed by a factor 2 in each iteration, the larger\ncells do not need to be computed from scratch, but\ncan be updated efficiently using the data from their\nsubcells. This method is a potential improvement to\nhow the implementation shown in Section 5.2 was\ndone.\nMagnusson et al.: Scan Registration for Autonomous Mining Vehicles Using 3D-NDT \u2022 811\nJournal of Field Robotics DOI 10.1002\/rob\nDuring the preparation of this paper, Takeuchi\nand Tsubouchi presented another way of using NDT\nfor 3D scan registration \u0001Takeuchi & Tsubouchi,\n2006\u0002. Their implementation is rather similar to the\nversion described in this paper in that they also use\nan iterative subdivision scheme similar to that de-\nscribed here. An important difference is that they\nused smaller cells in the space that is near the sensor\nlocation and larger cells farther away in the early\niterations, and used only the smaller size in the later\niterations, when the scans were almost aligned. The\nreasoning behind this is that error in the rotation\nestimate caused larger displacements further from\nthe sensor location, so larger cells are needed there\nto make sure that more points from the data scan are\nused. The linked cells strategy described in Section\n4.3.5 is another solution to the same problem. Takeu-\nchi and Tsubouchi tested their algorithm on data\nfrom a computer lab with good results, though they\ndid not make a direct comparison of their algorithm\nwith other registration algorithms.\n4.3.5. Linked Cells and Infinite Outer Bounds\nUsing the discretization methods described so far,\npoints from the data scan lying in unoccupied cells\nare discarded, thus rendering large parts of the input\nspace \u201cdead.\u201d Instead of doing so, the PDF from the\nclosest occupied cell can be used for those points.\nThis increases the region of influence of cells and is\nillustrated in Figure 5. Even though the value of the\nPDF of many cells is almost zero outside the cell\nbounds, so that it makes no substantial contribution\nto the score anyway, for cells with a very elongated\npoint distribution, the influence outside the cell can\nalso make a difference.\nThe same idea can also be applied to points fall-\ning outside of the cell lattice altogether. The score for\nthose points can be computed using the closest cell\non the edge of the lattice, so that the outer cells in\neffect have infinite outer bounds. However, doing so\nintroduces a certain \u201cdrag\u201d bias, as points from non-\noverlapping regions of the data scan will be at-\ntracted to border regions of the model.\nLinked cells can be implemented either by let-\nting each cell store a pointer to the nearest occupied\ncell, or by storing only occupied cells and putting\nthem in a kd-tree. The latter should be preferable if\nthere are many unoccupied cells.\n5. EXPERIMENTS\nThis section covers experiments performed with un-\nderground mine data to compare the performance of\ndifferent varieties of 3D-NDT and ICP.\nFigure 4. Comparing octree and additive subdivision. A\nsubdivided grid cell is shown on the left, and the tree\nstructure is shown on the right. The PDF of cell a has a\nlarge spread, because the points within the cell are not\naligned along a planar region. Therefore it is split, and the\nPDFs of eight subregions b\u2013 i are computed instead. Point\nx is within cell a, and, more specifically, within subcell g.\nUsing octree subdivision, x\u2019s contribution to the score\nfunction is computed from g alone. Using additive subdi-\nvision, the score is a sum computed from nodes b\u2013 i. In\nthis example, nodes b\u2013e are empty and will not add any-\nthing to the score.\nFigure 5. Matching two 2D scans of a tunnel section. The\ndotted scan is being registered to the solid scan. Occupied\ncells are shaded. If linked cells are not used, the parts of\nthe scan that are in unshaded cells will be skipped. Other-\nwise the linked cell \u0001shown with arrows\u0002 will be used. If\nusing infinite outer bounds, the outer cells extend as\nshown with dashed lines.\n812 \u2022 Journal of Field Robotics\u20142007\nJournal of Field Robotics DOI 10.1002\/rob\nThere are many parameters that can be changed,\nboth for ICP and 3D-NDT. To avoid a combinatorial\nexplosion in the number of possibilities, a default\n\u201cbaseline\u201d combination of variants was chosen that\nincorporates the following features:\n1. ICP parameters\n\u2022 Euclidean point-to-point distance error\nmetric,\n\u2022 outlier rejection using a 1 m fixed distance\nthreshold,\n\u2022 least squares optimization \u0001Besl & McKay,\n1992\u0002,\n\u2022 approximate kd-tree search structure with\n10 points per leaf node in the tree \u0001to mini-\nmize the amount of back-tracking needed\u0002\nand 1 cm error bound \u0001for each search, a\npoint that is no more than 1 cm from the\ntrue nearest neighbor is returned\u0002,\n\u2022 constant weighting of point pairs.\n2. NDT parameters\n\u2022 fixed cells with 1 m side length,\n\u2022 Newton\u2019s method with line search for op-\ntimization, with a maximum step length of\n0.05 \u0001\u0003\u0002p \u0003 =0.05\u0002 so that the maximum\nchange in the pose vector is 5 cm or\n0.05 rad at each iteration,\n\u2022 neither linked cells nor infinite outer\nbounds.\n3. Common parameters\n\u2022 convergence threshold when the change of\n\u0003p\u0003 is less than 0.0001.\nThe times reported in this paper include all required\npreprocessing: creating a kd-tree \u0001for ICP\u0002, building\nthe cell structure and computing all PDFs \u0001for NDT\u0002,\nand subsampling the data scan \u0001for both algorithms\u0002.\nModerate effort was made to optimize the effi-\nciency of the programs. The algorithms were imple-\nmented in C++. The ICP implementation uses the\nquite efficient approximate nearest neighbor library\nANN. The numerical optimization code used in 3D-\nNDT makes use of the C linear algebra library new-\nmat. This library claims to be most efficient for large\nmatrices, but the matrices involved in the computa-\ntions for 3D-NDT are no larger than 7\u00047. It is likely\nthat the numerical optimization can be performed\nfaster. The experiments were run on a computer with\nan AMD Athlon processor running at 1950 MHz and\n512 MB of memory.\n5.1. Data\nThree mine data sets were used in the comparison\nand evaluation of the registration algorithms. They\nwere collected in the Kvarntorp mine, south of \u00d6re-\nbro in Sweden. This mine is no longer in production,\nbut was once used to mine sandstone. The mine con-\nsists of more than 40 km of tunnels, all in one plane.\nParts of the mine are currently used as archives and\nstorage facilities, while others are used as a test bed\nfor mining equipment.\nBecause of the natural layers of sandstone, the\ntunnels have a rather characteristic shape, with flat\nceilings and relatively straight walls. Even though\nthe floor and ceiling are flat compared to many other\nmines and natural environments, the unevenness of\nthe floor makes a wheeled vehicle tilt considerably\nwhile driving over it. The roughness is comparable\nto that of a gravel road, and if scans were being reg-\nistered with only three degrees of freedom \u0001disre-\ngarding tilt and changes in floor height\u0002, there\nwould be large discrepancies between many scans.\nFigure 6 shows a photo from one of the tunnels.\nThe JUNCTION data set \u0001Figure 7\u0002 consists of two\nscans from the end section of a tunnel. At the far end\nof the tunnel, there is a flat cast concrete structure,\nand on one of the side walls there is a passage to a\nneighboring tunnel. Both the end face and this pas-\nsage are salient and large-scale features. These two\nscans were taken from the same pose, and only dif-\nfer in resolution. In other words, the ground truth\npose for the data scan with respect to the model is\nt=0, R= \u0001\u00070,0 ,1\b ,0\u0002. The data scan contains 139 642\npoints and the model contains 72 417 points.\nThe TUNNEL data set \u0001Figure 8\u0002 was collected fur-\nther down the same tunnel. Two scans were taken\nFigure 6. One of the tunnels in the Kvarntorp mine.\nMagnusson et al.: Scan Registration for Autonomous Mining Vehicles Using 3D-NDT \u2022 813\nJournal of Field Robotics DOI 10.1002\/rob\napproximately 4 m apart. The scans contain around\n27 500 points each. The scans in this set have much\nless obvious features. The only large-scale features\u2014\nthe walls and ceiling\u2014are not enough to give accu-\nrate registration, as the scans can \u201cslide\u201d along the\ndirection of the tunnel, and still have a large amount\nof overlap and close proximity of all surfaces, which\nare the usual criteria for a good match. The small-\nscale features, such as bumps on the walls and light\nfixtures in the ceiling, need to be matched in order to\nproperly register these scans. For these two scans,\nthe ground truth was determined visually, by run-\nning a number of registration attempts and picking\none that looked like the closest match. When collect-\ning this data set, we tried to measure the relative\ndisplacement between the scans using a so-called to-\ntal station \u0001that is, a tripod mounted laser measure-\nment device\u0002. The total station can be seen in Figure\n6 \u0001on a yellow tripod near the left wall\u0002. Three points\nwere marked on the scanner, and the total station\nwas set up at a fixed position further down the tun-\nnel. The distances to the three points on the scanner\nwere measured from each scanner pose, and the\ntransformation from each scanner pose to the next\nwas determined from these data. The resulting mea-\nsurements were not accurate enough to use as a\nground truth measurement, but they were good\nenough to provide an initial estimate for the regis-\ntration algorithms.\nBoth the JUNCTION and TUNNEL data sets were\ncollected with an early prototype of a 3D laser range\nfinder, built by Optab Optronikinnovation AB. The\nOptab scanner is based on a modulated infra-red la-\nser that is projected onto a rotating mirror. The range\nis measured by investigating the phase-shift of the\nreflected laser beam. The configuration of the scan-\nner was changed between the two data sets. For the\nTUNNEL data set, the scanner was oriented so that\nthe first scan plane was horizontal. The scanner was\nthen tilted upwards. This is a so-called pitching\nscan. Because of this configuration, the floor is not\nvisible in the TUNNEL data. For the JUNCTION data\nset, the scanner was mounted so that each scan\nplane was vertical, and the scanner was rotated\naround the vertical axis. This is known as a yawing\nscan \u0001Wulf & Wagner, 2003\u0002. The Optab scanner is\nshown in Figure 9.\nA larger data set, KVARNTORP-LOOP, was col-\nlected at a later date, using a SICK LMS 200 laser\nscanner mounted on our mobile robot platform\ncalled Tjorven \u0001shown in Figure 10\u0002. The SICK scan-\nner is a 2D scanner, but was mounted on a pan-tilt\nunit in order to collect 3D data sets. For the\nKVARNTORP-LOOP data set, the robot was driven\nmanually along two tunnels, forming a loop, with\n3D scans being taken about 4 to 5 m apart. The ro-\nbot was kept stationary during the scans, so that all\npoints in each scan were taken at the same physical\nlocation. The first 65 scans from this set are shown in\nFigure 11. The scans contain around 95 000 points\neach. The scanner on Tjorven is configured for pitch-\ning scans.\nThe scans of the KVARNTORP-LOOP data set are\nmore accurate than those of the JUNCTION and TUN-\nFigure 7. The data scan scan from the JUNCTION data set,\nseen from above.\nFigure 8. The two scans of the TUNNEL data set. The free-\nfloating points in the middle of the tunnel are noise.\n814 \u2022 Journal of Field Robotics\u20142007\nJournal of Field Robotics DOI 10.1002\/rob\nNEL sets, which show some disturbances due to the\nsomewhat unstable experimental state of the scan-\nner.\n5.2. Results\n5.2.1. Results with Single Scan Pairs\nTo test the performance of the algorithms with re-\nspect to different parameter values the two scan\npairs of the JUNCTION and TUNNEL data sets were\nused. A number of registration attempts were run\nfrom a set of start poses evenly distributed around\nthe ground truth pose. The magnitudes of the trans-\nlation and rotation components of the initial pose\nestimates were kept constant for each batch of tests,\nbut the directions were different for each run. In\nother words, the translation displacement for each\ntest run was a point on a sphere with a fixed radius.\nThe added rotation error had its axis pointing in a\nrandom direction for each run and the angle \u0001that is,\nthe amount of rotation\u0002 was fixed for each batch of\nruns. The pose offsets were taken from a set of\npoints evenly distributed on the unit sphere. The\ntranslation error of the initial pose estimate is de-\nnoted et and the rotation error is denoted er.\nFor these experiments, the following settings\nwere used in the \u201cbaseline\u201d setup:\n\u2022 10% of the points were sampled from the data\nscan with even spatial distribution,\n\u2022 no subsampling of the model \u0001all points were\nused\u0002,\nFigure 9. The Optab scanner lab prototype.\nFigure 10. Tjorven, our mobile robot platform. In addi-\ntion to the laser scanner used for 3D mapping, it is also\nequipped with a digital camera, an array of sonars, an\nomnidirectional camera \u0001not shown here\u0002, and a differen-\ntial GPS system.\nFigure 11. The first 65 scans from the KVARNTORP-LOOP\ndata set, seen from above, after registration with manual\nintervention where the registration algorithms failed and\nfor the scans without odometry information. The map\nmeasures approximately 55 m by 155 m, and is around\n6 m high. The traversed distance around the loop is\naround 330 m. The top left corner shows the accumulated\nerror after coming back to a previously visited location\nafter completing the loop. The error there is about 2.7 m.\nTo the right of this section is a clear \u201coffset\u201d in the tunnel.\nThis is not a registration error, but shows the actual shape\nof the tunnel. That shape is probably due to a mistake on\npart of the excavation crew when they were trying to\nphysically \u201cclose the loop.\u201d\nMagnusson et al.: Scan Registration for Autonomous Mining Vehicles Using 3D-NDT \u2022 815\nJournal of Field Robotics DOI 10.1002\/rob\n\u2022 initial translation error of 1 m,\n\u2022 initial rotation error of 0.1 rad,\n\u2022 100 tests for each set of parameters.\nTable I shows the parameters that were manipulated\nin the experiment. The results of these experiments\nare presented with box plots, with a line connecting\nthe median values of each set of runs. The box ex-\ntends to the upper and lower quartile of the data, and\nthe \u201cwhiskers\u201d extend to the maximum and mini-\nmum values of the sequence. The limits for what is\nconsidered a \u201cgood match\u201d are shown with dashed\nhorizontal lines. These are not hard limits, but were\nchosen according to what was considered acceptable\nfor the application and the accuracy with which the\nground truth pose could be estimated. If only the me-\ndian registration errors were shown, 3D-NDT would\nappear to be far superior to ICP in all cases. Even\nthough the median error was lower when using 3D-\nNDT for scan registration, there were problems with\nsome outlier poses for which the algorithm did not\nconverge. The box plots show a more complete de-\nscription of the distribution of the results, showing\nboth how the majority of the runs behaved and the\nextreme values.\nOn a similar note, the mean squared point-to-\npoint error is commonly used as a measure of the\nquality of registration. We did not include these\nnumbers here, as they are not an objective measure\nof the registration accuracy. The mean squared\npoint-to-point error is exactly the objective function\nthat ICP tries to minimize, and, if that were indeed\nthe best measure of registration accuracy, ICP would\nbe an optimal algorithm and would never fail. We\nchose instead to determine a ground truth pose for\neach scan pair and measure the deviance from that\npose, with some allowance for what is a close\nenough match, as described above. The ground truth\npose for the JUNCTION data set was zero rotation and\ntranslation, since the scanner did not move between\nthe two scans. For the TUNNEL data set the ground\ntruth was determined by running and inspecting a\nnumber of registration attempts, and an average of\nthe best matches was used as the ground truth pose.\nSample ratio: To test the sensitivity to the num-\nber of samples being used for registration, a number\nFigure 12. Sample ratio tests for the JUNCTION set.\n816 \u2022 Journal of Field Robotics\u20142007\nJournal of Field Robotics DOI 10.1002\/rob\nof test sequences were run with increasing numbers\nof samples. From 0.1% up to 50% of the points in the\ndata scan were sampled and used for matching to-\ngether with all of the points in the model. Figures 12\nand 13 show the results of tests where all other pa-\nrameters were set according to the baseline setup.\nThe conclusion is that ICP is less error-prone\nwhen using very low sample ratios \u0001less than a few\npercent\u0002, and that the execution time is around three\ntimes longer than for 3D-NDT. Even though 3D-\nNDT succeeds at registering the two scans from\nmost of the start poses tried, it fails for some poses\nwhen using a very low sample ratio. Around 10% of\nthe total number of points is enough to give reliable\nresults for the JUNCTION data set when the initial er-\nror is moderate. The median error is lower for 3D-\nNDT in all cases with larger sampling ratios, but\nthere are some outlier cases where the error is much\nlarger. There were failed registrations at up to 12%\nsample ratio. ICP gives acceptable results down to\naround 8% for the same data and initial error.\nAs can be seen from Figure 13, the TUNNEL data\nset is much more challenging than the JUNCTION set,\nboth for ICP and 3D-NDT. The median error is still\nsmaller for 3D-NDT than for ICP, but, with an initial\ntranslation error of 1 m and a rotation error of\n0.1 rad, the algorithms fail to register the scans from\na rather large number of the initial pose estimates.\nFigure 12 shows that the rotation error actually\nincreases for ICP as the sample ratio goes above 20%\nfor the JUNCTION data set. The reason for this could\nbe that more of the scan noise is used, in other\nwords, overfitting. A similar effect can be seen for\n3D-NDT on the TUNNEL data set in Figure 13. Be-\ncause the two scans in this data set are only partially\noverlapping, ICP tends to move the source scan a bit\ntoo much towards the center of the target scan to\nmaximize the amount of overlap. The pose that 3D-\nNDT converges to when using a high sample ratio is\nsimilar to the one that ICP converges to.\nIf both the data scan and the model are sub-\nsampled using the same ratio, and not just the data\nscan, the required sample ratio is much higher.\nSampling method: Spatially distributed sam-\npling is generally more robust than uniformly ran-\ndom sampling. The results of using a uniform prob-\nFigure 13. Sample ratio tests for the TUNNEL set, using spatially distributed sampling.\nMagnusson et al.: Scan Registration for Autonomous Mining Vehicles Using 3D-NDT \u2022 817\nJournal of Field Robotics DOI 10.1002\/rob\nability distribution when selecting the subset for\nmatching is shown in Figure 14. As discussed earlier,\nusing uniformly random sampling will preserve the\ngeneral distribution of points in the scan, and that is\nnot optimal for tunnel scans, where the concentra-\ntion of points is much higher near the sensor loca-\ntion than further away.\nComparing Figures 13 and 14, it can be seen that\nthe registration errors are larger when using uniform\nrandom sampling for 3D-NDT. Using spatially dis-\ntributed sampling with ICP with this data meant\nthat more non-overlapping points were selected.\nTherefore, it makes sense not to use this sampling\nmethod for ICP. For 3D-NDT, the interquartile range\nwas rather large for both sampling methods, but the\nmedian translation and rotation errors were signifi-\ncantly lower when using spatially distributed sam-\npling, because the more evenly distributed sampling\ngives a more representative view of the scan. For the\nJUNCTION set, uniformly random sampling works al-\nmost equally well compared to spatially distributed\nsampling, however, since the overlap of the data\nscan and model is 100%.\nCell size: To show the effect of different cell\nsizes for 3D-NDT, registration with sizes ranging\nfrom 0.5 m up to 3 m are shown in Figure 15. Each\nbox plot shows the results of 50 test runs.\nThe running times are shorter when the cells are\nlarger \u0001and fewer\u0002. The translation error is at its\nsmallest within a certain cell size range, and in-\ncreases with both smaller and larger cells. For\nFigure 14. Sample ratio tests for the TUNNEL set with uniform random subsampling instead of spatially distributed\nselection. The other settings are the same as in Figure 13.\nTable I. The parameters that were manipulated for ICP\nand NDT on the JUNCTION and TUNNEL and data sets.\nParameter ICP 3D-NDT\nSample ratio \u2022 \u2022\nSampling method \u2022 \u2022\nInitial translation error \u2022 \u2022\nInitial rotation error \u2022 \u2022\nCell size \u2013 \u2022\nDiscretization method \u2013 \u2022\n818 \u2022 Journal of Field Robotics\u20142007\nJournal of Field Robotics DOI 10.1002\/rob\nsmaller cells, the algorithm fails to register the two\nscans from many start poses, because of small re-\ngions of influence. This can be seen in Figure 15,\nwhere the upper quartile of the tests with JUNCTION\nand 0.75 m cells is comfortably below the acceptable\nthreshold, but the error of the worst few runs is\nmuch larger. This result is due to the fact that, de-\npending on the direction of the initial pose error, for\nsome test runs the small cells will not be able to\n\u201cattract\u201d enough points. For larger cells, the accu-\nracy decreases because of loss of surface shape infor-\nmation. Based on these results, a cell size of around\n1 to 2 m is most suitable for the given environment.\nBecause simple arrays were used for cell storage\n\u0001storing both occupied and unoccupied cells\u0002,\nmemory usage increased drastically for the tests\nwith the smallest cells. This also led to slower per-\nformance because of memory swapping, particularly\nfor the JUNCTION data set. The times reported here\nwere measured with the ANSI C clock\u0001\u0002 function,\nwhich only measures CPU time. The actual time was\nlarger for the tests with 0.5 m cell size. A straightfor-\nward way to fix this problem would be to store the\ncells in a data type more suitable for sparsely popu-\nlated data \u0001for example, run-length encoded lists\u0002.\nFor all other tests, where the NDT cells were not\npathologically small, memory allocation was not a\nproblem and the reported time and wall clock time\nwere the same.\nInitial error: The sensitivity of the algorithms\nwith respect to the amount of error in the initial pose\nestimate was also tested, both for the translational\nand rotational components. The results are shown in\nFigures 16 and 17. For the translation error tests, the\ninitial rotation error was set to zero, and the transla-\ntion error was set to zero when testing the sensitivity\nto the initial rotation error.\nAgain, 3D-NDT shows a smaller median error in\nmost cases, although failed registrations start to oc-\ncur at smaller values for the initial error than is the\ncase for ICP. The reason that the median error is\nsmaller for 3D-NDT is probably because the PDFs\nare a better surface description than point clouds,\nwhich have no information about the surface be-\nFigure 15. Comparing the effect of 3D-NDT registration with different cell sizes, using fixed cells. Each test sequence is\n50 runs. The initial error is \u0003et\u0003=1 and \u0003er\u0003=0.1.\nMagnusson et al.: Scan Registration for Autonomous Mining Vehicles Using 3D-NDT \u2022 819\nJournal of Field Robotics DOI 10.1002\/rob\ntween points. Without infinite outer bounds, fewer\npoints from the data scan are used when the initial\npose error is large. With the baseline settings for ICP,\nan initial translation error of up to 2.5 m \u0001when the\nerror in rotation is zero\u0002 or a rotation error of up to\n0.35 rad \u0001when the translation error is zero\u0002 can be\nhandled reliably for the JUNCTION data set. Using\n3D-NDT, failed registrations start to occur at 2 m\ntranslation error or 0.3 rad rotation error. The results\nfor the TUNNEL set show the same tendencies.\nThe time taken by ICP increases with the mag-\nnitude of the initial pose error, while 3D-NDT takes\nabout the same amount of time for all of the runs.\nDiscretization methods: Test results for 3D-\nNDT with different discretization methods on the\nJUNCTION and TUNNEL data sets are shown in Figure\n18. For these tests, cell sizes varying between 2 and\n1 m were used. The results for fixed 2 m cells are\nshown for comparison. The fixed cell plots are la-\nbelled F \u0001without infinite bounds\u0002 and FI \u0001with infi-\nnite bounds\u0002. With the initial error set according to\nthe baseline setup, all methods performed equally\nwell on the JUNCTION set. To show the differences in\nthe methods\u2019 efficiency, the initial pose error was in-\ncreased a little for the tests on the JUNCTION set so\nthat er=0.2. The different discretization methods are\ndescribed in Section 4.3.\n\u2022 Octree subdivision \u0001O, OI\u0002 did not lead to a\nnoticeable improvement for the JUNCTION\ndata set. A probable reason for this is that the\nadded detail was not needed for this data set,\nas it has clear and large features. Octree sub-\ndivision did improve the result for the TUN-\nNEL data set, approximately halving the me-\ndian error compared to using fixed cells.\n\u2022 Additive octree subdivision \u0001A, AI\u0002\u2014\ncomputing the score for each point by sum-\nming all leaves in the octree where it belongs\ninstead of using a single leaf\u2014improved the\nresult of the TUNNEL set slightly, at the cost of\na minor increase in execution time, because\nmore cells were investigated for each point.\nHowever, for an unknown reason, 3D-NDT\nFigure 16. Comparing the sensitivity to the initial error in the translation estimate for the JUNCTION set. The initial\nrotation error was 0 for these tests.\n820 \u2022 Journal of Field Robotics\u20142007\nJournal of Field Robotics DOI 10.1002\/rob\nwith additive octree subdivision failed for\ntwo of the initial pose estimates when run-\nning on the JUNCTION data set. The results for\nthe other 98 poses were still satisfactory.\n\u2022 Iterative subdivision with varying cell size \u0001I,\nII\u0002\u2014the more \u201cbrute-force\u201d method\u2014\nremoved all of the failed registrations for the\nJUNCTION data set, at the cost of longer execu-\ntion times. Iterative subdivision and additive\nsubdivision with infinite outer bounds were\nthe only methods that succeeded in accu-\nrately registering the TUNNEL data set from at\nleast 75% of the inital poses. For the tests\nshown here, the first iteration used 2 m cells.\nFor each subsequent iteration, the cell size\nwas multiplied by 0.75, and the registration\nwas stopped when the size was smaller than\n1 m. In other words, the cell sizes used were\n2, 1.5, and 1.125 m, respectively.\n\u2022 Using linked cells led to a slight improve-\nment for the TUNNEL data set, especially for\nthe rotation component of the pose. Interest-\ningly, it did not lead to an improvement for\nthe JUNCTION data set. The likely reasons for\nthis are that, firstly, the error in the initial\npose estimate was not large enough for the\nouter cells to have any significant effect, and,\nsecondly, that the scans overlap completely.\nBased on these results, the best performance was ob-\ntained using iterative subdivision with infinite outer\nbounds, at a slightly higher computational cost than\nthe noniterative variants of 3D-NDT, though it was\nstill faster than ICP.\n5.2.2. Results with Mobile Robot Data\nThe KVARNTORP-LOOP data set contains scans col-\nlected by a mobile robot, together with pose esti-\nmates for each scan, derived from the robot\u2019s two-\ndimensional odometry. This is more like the actual\nsituation that can be expected in the mine mapping\napplication than the artificial \u0001but more complete\u0002\nexperimental setup used for the other two data sets.\nFigure 17. Comparing the sensitivity to the initial error in the rotation estimate for the JUNCTION set. The initial transla-\ntion error was 0 for these tests.\nMagnusson et al.: Scan Registration for Autonomous Mining Vehicles Using 3D-NDT \u2022 821\nJournal of Field Robotics DOI 10.1002\/rob\nThe more artificial setup can be considered more\ncomplete because, for those experiments, the algo-\nrithms were tested from a larger set of possible start-\ning poses, and the properties of the algorithms were\ninvestigated more thoroughly.\nFor the results presented here, 8000 random\nsample points \u0001around 8%\u0002 from the data scan and\nall points from the model were used. Infinite outer\nbounds were used for 3D-NDT, but not linked cells.\nThe following text covers the effects of using differ-\nent cell sizes and discretization methods.\nBecause of some practical problems during the\ndata collection in the Kvarntorp mine, the odometry\nhad to be reset at three points \u0001after scans number\n11, 16, and 66\u0002. These results are for the longest con-\nsecutive scan sequence \u0001scans 17\u201366\u0002.\nThe pose error from odometry was up to around\n1.5 m and 0.2 rad from one scan to the next. Given\nthat the size of each scan is around 10 by 30 m, a\nrotation error of 0.2 rad is quite large. An example of\nhow bad the odometry can be when driving on\ngravel with a small mobile robot is shown in Figure\n19. Scan 49 is severely rotated with respect to the\nprevious scan, which was taken just 5 m earlier.\nMeasuring the turn angle from odometry is always\nproblematic, and especially so when driving over a\nsurface with loose rocks.\nThe results are presented as histograms in Fig-\nures 20\u201323. Two limits were chosen for each compo-\nnent of the error of the pose estimate after registra-\ntion. Because of the difficulty of finding a real\nground truth pose, all registrations that came within\na certain limit of the manually determined true pose\nwere considered successful. The ground truth poses\nwere determined by running and inspecting a num-\nber of registration attempts, and an average of the\nbest matches was used as the ground truth pose for\neach scan pair. A second limit was also picked. Reg-\nistrations that came inside this limit are not exact\nmatches, but \u201cacceptably\u201d close for the application.\nFigure 18. Comparing different discretization methods for 3D-NDT on the JUNCTION and TUNNEL data sets. For the\nJUNCTION tests, et=1 m and er=0.2 rad. For TUNNEL, et=1 m and er=0.1 rad. Baseline ICP is on the left. The next two plots\n\u0001F and FI\u0002 show 3D-NDT with fixed cells, O and OI show octree subdivision, A and AI show additive subdivision, and I\nand II show iterative subdivision, The rightmost plot in each NDT plot pair \u0001\u0001I\u0002 uses infinite outer bounds but not linked\ncells \u0001not applicable for ICP\u0002.\n822 \u2022 Journal of Field Robotics\u20142007\nJournal of Field Robotics DOI 10.1002\/rob\nThe limits for this data set were chosen to be 0.10 m\nand 0.005 rad for \u201cgood\u201d matches, and 0.20 m and\n0.010 rad for \u201cacceptable\u201d matches. Registrations\nwhere any of the pose components are outside of\nthis limit were regarded as failures. The most impor-\ntant feature of the plots to judge the quality of each\nregistration algorithm is the height of the leftmost\nhistogram box, showing the number of successful\nregistrations. The histogram boxes that only have\none entry are labelled with the corresponding scan\nnumber, to make it clearer which scans fail to be\nregistered. Also included in the plots are box plots\nshowing the distribution of the results.\nThe results from using 3D-NDT with fixed cells\nwith different sizes are shown in Figure 20. When\nthe cells are too small \u00010.5 m\u0002, scans where the\nodometry pose is too far from the actual pose fail.\nWhen the cells are too large, features that are needed\nfor accurate registration are smoothed out, also mak-\ning registration fail in more cases. Looking at Figure\n20, a cell size of around 2 m seems to be the prefer-\nable choice for this data set.\nThe orientation was generally easier to get right\nthan the position, because the large-scale features of\nthe tunnel scans were sufficient to get the correct\nrotation angle.\nFigure 21 shows the results of different adaptive\nsubdivision methods; starting with 2 m cells, and\nusing cells with 1 and 0.5 m side length as needed.\nOctree subdivision improves the registration of a\nnumber of the scans, compared to using fixed 2 m\ncells, resulting in 40 successful registrations. Using\nadditive subdivision instead of standard octree sub-\ndivision did not lead to an additional improvement\nfor the KVARNTORP-LOOP data set. Iterative subdivi-\nsion, however, registered 45 of the 50 scan pairs with\nvery high accuracy, and only failed with two scans\u2014\nthe difficult scans number 49 and 41. It is interesting\nto note that only the rotation component of scan 41\u2019s\npose and only the translation component of scan 49\u2019s\npose were wrong. The time needed for 3D-NDT with\niterative subdivision was longer than for the other\nsubdivision methods, because two extra runs of the\nalgorithm were performed for each scan. However,\nthe increase is not linearly proportional to the num-\nber of iterations. Iterative 3D-NDT took about twice\nas long as a single iteration of the other versions of\nthe algorithm, even though three passes were per-\nformed for each scan. The reason for this is that in\nmost cases, the scans are already in registration at\nthe last pass, so that the last iteration is very fast.\nFigure 22 shows the results of registering the\nsame data set with iterative 3D-NDT, with and with-\nout infinite outer bounds. Using linked cells did not\ngive an improvement for these scans. When not us-\ning infinite outer bounds, the translation component\nof scan 41 and the rotation component of scan 48\u2019s\nfinal pose estimate were worse than when using in-\nfinite bounds. This shows that using infinite bounds\nfor the outer cells helps in some cases. Apart from\nthat, the results were very similar to when using in-\nfinite bounds.\nThe KVARNTORP-LOOP data set was also regis-\ntered with ICP. For this experiment, a decreasing dis-\ntance threshold was used, starting at 2 m and de-\ncreasing to zero, instead of the fixed 1 m threshold\nfrom the baseline setup. The results are shown in\nFigure 23. The number of successful registrations\nwas comparable to that of 3D-NDT, though ICP had\na few more failures. The main difference lies in the\nrunning time of the two algorithms. 3D-NDT was\ntypically almost three times faster than ICP when\nusing the same sampling ratio.\n6. SUMMARY AND CONCLUSIONS\nA new method for registration of 3D range scans, 3D-\nNDT, has been presented. A detailed analysis of the\nalgorithm with respect to different methods and pa-\nrameters based on real-world experiments in a mine\nFigure 19. Scans 48 \u0001light, yellow\u0002 and 49 \u0001dark, blue\u0002\nbefore registration, seen from above.\nMagnusson et al.: Scan Registration for Autonomous Mining Vehicles Using 3D-NDT \u2022 823\nJournal of Field Robotics DOI 10.1002\/rob\nhas also been presented, along with a comparison to\nICP, the most common registration algorithm used to-\nday. The main reason why 3D-NDT is faster is be-\ncause it avoids the computationally challenging\nnearest-neighbor search, which is central to the ICP\nalgorithm. Using iterative subdivision for building\nNDT\u2019s model surface description overcomes the\nproblems associated with discretizing the scan vol-\nume into fixed grid cells. It has been shown that 3D-\nNDT with iterative subdivision and infinite outer\nFigure 20. NDT with fixed cells, ranging from 0.5 m \u0001top\u0002 to 3 m \u0001bottom\u0002. In order to make the plots easier to read, the\nscan labels are not shown in these plots.\n824 \u2022 Journal of Field Robotics\u20142007\nJournal of Field Robotics DOI 10.1002\/rob\nFigure 22. NDT with \u0001top row\u0002 and without \u0001bottom row\u0002 infinite outer bounds. Using linked cells did not give a\nnoticeable improvement for this data set, but increased the time substantially.\nFigure 21. 3D-NDT with different discretization methods. Octree split top, iterative split at bottom. Cells with sizes 2; 1;\nand 0.5 m were used. Iterative subdivision is clearly the best choice here, as it has only two failed registrations \u0001the\nposition of scan 49 and the orientation of scan 41\u0002 and three \u201cacceptable\u201d matches. The time taken is about twice that of\noctree subdivision. Additive octrees and standard octrees had very similar performance for this data set.\nMagnusson et al.: Scan Registration for Autonomous Mining Vehicles Using 3D-NDT \u2022 825\nJournal of Field Robotics DOI 10.1002\/rob\nbounds consistently leads to accurate registration of\ndifficult scan data, requiring less time than ICP.\nWith the experimental setup used in the work\npresented here, the alignment speed is not critical.\nSince the vehicle is stopped and moved between\nscans, the few seconds saved from using a faster reg-\nistration algorithm are not very important. In the real\napplication, however, the plan is to collect 3D scan\ndata while the vehicle is moving, possibly using a 3D\nlidar camera that collects a full-frame range image at\nvide frame rates. Also, the computer hardware on the\nintended platform \u0001Atlas Copco\u2019s drill rigs\u0002 is slower\nthan the system used for these tests. In such a sce-\nnario, the need for fast scan alignment will be much\nhigher.\nOne of the other main advantages of 3D-NDT is\nthat the scanned surface can be stored much more ef-\nficiently using the combined normal distributions\nthan if the point clouds themselves, or even sparse\nsubsamples of the point clouds, are stored. This is im-\nportant for any large 3D map. In a scenario where a\ndynamic map is maintained over a long time, the\nstorage requirements for 3D point cloud data would\nalso soon grow uncomfortably large. Storing the NDT\nrepresentations of the scans requires only a small\nfraction of the space required by ICP, and the NDT\nrepresentation is still powerful enough for registering\nnew scans to the collected data, as has been shown in\nthis paper.\nACKNOWLEDGMENTS\nThanks to Atlas Copco Rock Drills AB for financial\nsupport and access to the mine and equipment, and\nto Optab Optronikinnovation AB for providing the\nlaser scanner used for some of the experiments.\nREFERENCES\nBesl, P. J., & McKay, N. D. \u00011992\u0002. A method for registra-\ntion of 3-D shapes. IEEE Transactions on Pattern\nAnalysis and Machine Intelligence, 14\u00012\u0002, 239\u2013256.\nBiber, P., & Strasser, W. \u00012003\u0002. The normal distributions\ntransform: A new approach to laser scan matching. In\nProceedings of the IEEE International Conference on\nIntelligent Robots and Systems \u0001IROS\u0002, Vol. 3, pp.\n2743\u20132748.\nFigure 23. Results of using ICP on the KVARNTORP-LOOP data set, using a decreasing distance threshold of 2 m to 0 m.\nThe results using iterative 3D-NDT are shown above for comparison.\n826 \u2022 Journal of Field Robotics\u20142007\nJournal of Field Robotics DOI 10.1002\/rob\nChen, Y., & Medioni, G. \u00011992\u0002. Object modelling by regis-\ntration of multiple range images. Image and Vision\nComputing, 10\u00013\u0002, 145\u2013155.\nGelfand, N., Ikemoto, L., Rusinkiewicz, S., & Levoy, M.\n\u00012003\u0002. Geometrically stable sampling for the ICP al-\ngorithm. In Proceedings of the 4th International Con-\nference on 3-D Digital Imaging and Modeling, pp.\n260\u2013267, Banff, October 2003.\nGreenspan, M., & Yurick, M. \u00012003\u0002. Approximate k-d tree\nsearch for efficient ICP. Paper presented at Fourth In-\nternational Conference on 3-D Digital Imaging and\nModeling \u00013DIM \u201903\u0002.\nMitra, N. J., Gelfand, N., Pottmann, H., & Guibas, L.\n\u00012004\u0002. Registration of point cloud data from a geo-\nmetric optimization perspective. In Proceedings of the\n2004 Eurographics\/ACM SIGGRAPH Symposium on\nGeometry Processing, pp. 23\u201331, ACM Press, New\nYork, NY.\nRipperda, N., & Brenner, C. \u00012005\u0002. Marker-free registra-\ntion of terrestrial laser scans using the normal distri-\nbution transform. In Proceedings of the ISPRS Work-\ning Group V\/4 Workshop 3D-ARCH 2005, Mestre-\nVenice, Italy, 22-24 August, 2005.\nRusinkiewicz, S. M. \u00012001\u0002. Efficient variants of the ICP\nalgorithm. In Proceedings of the 3rd International\nConference on 3-D Digital Imaging and Modeling, pp.\n145\u2013152.\nTakeuchi, E., & Tsubouchi, T. \u00012006\u0002. A 3-D scan matching\nusing improved 3-D normal distributions transform\nfor mobile robotic mapping. In Proceedings of the\nIEEE International Conference on Intelligent Robots\nand Systems \u0001IROS\u0002, October 2006, pp. 3068\u20133073,\nBeijing, China.\nWulf, O., & Wagner, B. \u00012003\u0002. Fast 3D-scanning methods\nfor laser measurement systems. Paper presented at\nthe International Conference on Control Systems and\nComputer Science \u0001CSCS14\u0002.\nMagnusson et al.: Scan Registration for Autonomous Mining Vehicles Using 3D-NDT \u2022 827\nJournal of Field Robotics DOI 10.1002\/rob\n"}