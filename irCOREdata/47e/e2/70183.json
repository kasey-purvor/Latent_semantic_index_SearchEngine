{"doi":"10.1088\/0967-1846","coreId":"70183","oai":"oai:eprints.lancs.ac.uk:12976","identifiers":["oai:eprints.lancs.ac.uk:12976","10.1088\/0967-1846"],"title":"Experiences of Using RM-ODP to Build Advanced Mobile Applications","authors":["Davies, Nigel","Blair, Gordon S.","Cheverst, Keith","Friday, Adrian"],"enrichments":{"references":[{"id":16311044,"title":"A","authors":[],"date":"1991","doi":"10.1109\/tricom.1991.152885","raw":"[Abdel-Wahab91] Abdel-Wahab H M and Feit M A  1991 XTV A framework for sharing X window clients in remote synchronous collaboration Pmc. IEEE Tricomm 'PI: Communications  for Distributed Applications and Systems (Chapel Hill) Proerammine in ANSAware Document RM.102.02 [APM93] APM Ltd  1993 ANSAware 4.1  Application (CLmbridge-  APM) [Bender931 Bender M et a1  1993 Unix for nomads:  making Unix suppck mobile computing Proc. USENIX Symposiumon Mobile and Location Independent Computing (Cadridge, MA) (Berkeley, CA: USENIX Association) pp 53-67 [Blair921 Blair G S and Lea R The impact of distribution on the object-oriented approach to software development IEE Software Engng J. (Special Issue on Object-Oriented Systems) 7(2) 130-8 [C(lceres94] Caceres R and Iftode L 1994 The effects of mobility on reliable transport protocols Pmc. 14th Inc. Conj? on Distributed Computer Systems (Poznan, Poland, 22-24 June 1994) (Los Alamitos, CA: IEEE Press) pp 12-20 Stefani J B 1995 Supporting the real-time requirements of continuous media in open distributed processing Computer Networks and ISDN Systems, Special Issue on Open Distributed Processing  to appear [Davies92] Davies N, Coulson G,  Williams N and Blair G S 1992 Experiences of handling multimedia in distributed open systems Proc. 3rd Symp. on  Experiences with Distributed and Multiprocessor Svsrems (SEDMS 1111 [Coulson95] Coulson G,  Blair G S, Horn F,  Hazard L and (Newport Beach CAjpp 173-90.","cites":null},{"id":16311047,"title":"Issues in wireless mobile","authors":[],"date":"1992","doi":"10.1109\/wwos.1992.275698","raw":"[Duchamp92] Duchamp D 1992 Issues in wireless mobile January 1995 IIS095bl ISOflEC Recommendation X.902. International Standard 10746-2, ODP Reference Model:  Descriptive Model, January  1995 Standard 10746-3, ODP Reference Model:  Pressriptive Model, January  1995 [Friday951 Friday A, Blair G S, Cheverst K and Davies N 1995 Extensions to ANSAware for advanced mobile applications Internal Repon MPG-95-14 (Available from the Computing Department Lancaster University) Knvacic R T and Weiser M 1993 Experiences with X in a Wireless Environment Proc. USENIX Symp. on  Mobile and Location Independent Computing (Cambridge, MA. August 1993) (Berkeley, CA USENIX Association) pp 117-28 information systems IEEE Personal Commun. l(1)  6-17 Ferrari D 1993 Providing connection-oriented network services to mobile hosts Prac. USENIX Symp. on Mobile and Location Independent Computing (Cambridge, MA, August 1993) (Berkeley, CA:  USENIX Association) pp 83-102 [Lauwers90] Lauwen J C and Lank K A 1990 Collaboration awareness in support of collaboration transparency: requirements for the next generation of  shared window systems Proc. CH1'90 pp 303-310 Weuman931 Neuman B C, Augart S S and Upasani  S  1993 Using Prospero to support integrated location-independent computing Proc. USENIXSymp. on Mobile and Location Independent Computing (Cambridge, MA. August 1993) (Berkeley, CA USENIX Association) pp 29-34 [ISO95c] ISOlIEC Recommendntion X.903,  International iKantarjiev931 Kantarjiev C K, Demers A, Frederick R, [Katz94] Katz R H 1994 Adaption and mobility in wireless [Keeton931 Keeton K,  Mah B A, Seshan S,  Kao, R H and Experiences of using RM-ODP to build advanced mobile applicafions [Raymond931 Raymond K  1993 Reference model of open  IEE ConJ  on Telecommunications (Brighton) (IEE Press, UK) pp 342-348 (GRASS Information Center. US Army CERL, Champaign, distributed processing:  a tutorial F'rx  2nd fnt. IHP Conf: on Open Distributed Processing (Berlin.  September 1993) pp 3-14 technical challenges of the physical layer Proc. of the 5th [Westervelt911 Westervelt I 1991 Introduction to GRASS  4 [Razzell951 Razzell C 1995 TETRA radio terminal design:  IL, July","cites":null},{"id":16311045,"title":"Services to supp& distributed applications in a mobile environment Pmc. Jst Jnt. Worksbp on Services in Distributed and Nehvorked Environments","authors":[],"date":"1994","doi":null,"raw":"IDavies941 Davies N, Pink S and Blair G S  1994 Services to supp&  distributed applications in a mobile environment Pmc. Jst Jnt.  Worksbp on Services in Distributed and Nehvorked Environments (Prague, C:ech  Republic) (Los Alamitos, CA:  IEEE Press) Raven P F 1995 Mobile open systems technologies for the utilities industries CSCW Issues for Mobile and Tele-Workers ed A Dix (Berlin:  Springer) 1995 A network emulator to support the development of adaptive applications 2nd  USENIX Symposium on Mobile and Location Independent Comoutina (Ann Arbor. MI1 [DaviesSSa] Davies N, Blair G S, Friday A, Cross P D and [Davies95b] Davies N,  Blair C  S,  Cheverst K and Friday A .. (Berkeley, CA  USENIX Associatio;)' IDavies95cl Davies N, Blair G S, Cheverst K and Friday A 1995 Supporting collaborative applications in a heterogeneous mobile environment Computer Commun..","cites":null},{"id":16311046,"title":"Special Issue of Mobile Computing to appear computing Pmc. Third \\Vorkshop on Workstalion Operating Systems (Key Biscayne, FL) pp 2-10 [Ioannidis91] Ioannidis I,","authors":[],"date":"1991","doi":null,"raw":"Special Issue of Mobile Computing to appear computing Pmc. Third \\Vorkshop  on Workstalion Operating Systems (Key Biscayne, FL)  pp 2-10 [Ioannidis91] Ioannidis I, Duchamp D and Maguire G Q Jr 1991 IP-based protocols for mobile internetworking Proc. SIGCOMM'91 (Ziirich) vol  21 (New York  ACM) pp  235-45 DS095al ISOlIEC Draft Recommendation X.902,  International Standard 10746-1.  ODP Reference Model:  Overview. .","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"1995-09","abstract":"Significant advances have been made in recent years in tackling the problem of heterogeneity in distributed systems with ISO\/ITU-T standards for a Reference Model for Open Distributed Processing (RM-ODP) now approaching international agreement. It is important, however, that such standards are responsive to new developments in computer and communications technologies. This paper reports on experiences of applying RM-ODP technology and mobile communications in supporting field workers in the electricity industry. The results of the study show that the framework provided by RM-ODP offers a strong basis for the development of mobile applications. Particular benefits are gained from the object-oriented modelling approach, the model of selective distribution transparency and the concept of QoS-managed bindings in RM-ODP. However, our experiences indicate that care must be taken in the development of RM-ODP compliant platforms particularly with respect to the communications infrastructure","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/70183.pdf","fullTextIdentifier":"http:\/\/eprints.lancs.ac.uk\/12976\/1\/davies%2Drmodp%2Ddse1995.pdf","pdfHashValue":"b5191696239774d6eee49691d51bfe9abb81315c","publisher":null,"rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:eprints.lancs.ac.uk:12976<\/identifier><datestamp>\n      2018-01-24T00:04:33Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      74797065733D61727469636C65<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n    \n      \n        Experiences of Using RM-ODP to Build Advanced Mobile Applications<\/dc:title><dc:creator>\n        Davies, Nigel<\/dc:creator><dc:creator>\n        Blair, Gordon S.<\/dc:creator><dc:creator>\n        Cheverst, Keith<\/dc:creator><dc:creator>\n        Friday, Adrian<\/dc:creator><dc:description>\n        Significant advances have been made in recent years in tackling the problem of heterogeneity in distributed systems with ISO\/ITU-T standards for a Reference Model for Open Distributed Processing (RM-ODP) now approaching international agreement. It is important, however, that such standards are responsive to new developments in computer and communications technologies. This paper reports on experiences of applying RM-ODP technology and mobile communications in supporting field workers in the electricity industry. The results of the study show that the framework provided by RM-ODP offers a strong basis for the development of mobile applications. Particular benefits are gained from the object-oriented modelling approach, the model of selective distribution transparency and the concept of QoS-managed bindings in RM-ODP. However, our experiences indicate that care must be taken in the development of RM-ODP compliant platforms particularly with respect to the communications infrastructure.<\/dc:description><dc:date>\n        1995-09<\/dc:date><dc:type>\n        Journal Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:relation>\n        http:\/\/dx.doi.org\/10.1088\/0967-1846\/2\/3\/002<\/dc:relation><dc:identifier>\n        Davies, Nigel and Blair, Gordon S. and Cheverst, Keith and Friday, Adrian (1995) Experiences of Using RM-ODP to Build Advanced Mobile Applications. Distributed Systems Engineering, 2 (3). pp. 142-151. ISSN 1361-6390<\/dc:identifier><dc:relation>\n        http:\/\/eprints.lancs.ac.uk\/12976\/<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/dx.doi.org\/10.1088\/0967-1846\/2\/3\/002","http:\/\/eprints.lancs.ac.uk\/12976\/"],"year":1995,"topics":[],"subject":["Journal Article","PeerReviewed"],"fullText":"Distrib. Syst. Engng 2 (1995) 142-151. Printed in the UK \n1 Experiences of using RM-ODP to 1 build advanced mobile applications \nNigel Daviest, Gordon S Blairt, Keith Cheverstt and \nAdrian Fridayt \nDistributed Multimedia Research Group, Department of Computing, Lancaster \nUniversity, Lancaster, UK \nAbstract. Significant advances have been made in recent years in tackling the \nproblem of heterogeneity in distributed systems with ISOIITU-T standards for a \nReference Model for Open Distributed Processing (RM-ODP) now approaching \nintemational agreement. It is important, however, that such standards are \nresponsive to new developments in computer and communications technologies. \nThis paper reports on experiences of applying RM-ODP technology and mobile \ncommunications in supporting field workers in the electricity industry. The results of \nthe study show that'the framework provided by RM-ODP offers a strong basis for \nthe development of mobile applications. Particular benefits are gained from the \nobject-oriented modelling approach, the model of selective distribution transparency \nand the concept of QoS-managed bindings in RM-ODP. However, our experiences \nindicate that care must be taken in the development of RM-ODP compliant \nplatforms particularly with respect to the communications infrastructure. \n1. Introduction \nSignificant advances have been made in recent years \nin tackling the problem of heterogeneity in distributed \nsystems with ISO\/ITU-T standards for a Reference \nModel for Open Distributed Processing (RM-ODP) now \napproaching international agreement [1S095aa, IS095b. \nIS095cJ. Similarly, specific technologies such as \nOMG's CORBA and OSF's DCE are commercially \navailable. However, it is important that such standards \nand technologies remain responsive to new developments \nin computer and communications technologies. This paper \nrepom on experiences of applying ODP standards in the \nnew area of mobile computing. \nMobile computing [DuchampgZ, Katz941 is enabled by \nrecent improvements in both computer and communications \ntechnologies. For example. significant improvements have \nbeen made in portable computers in areas such as low- \npower processors and Thin-Film-Transistor (TFT) displays. \nSimilarly, major advances have been made in the area of \nwireless communications. For example, the pan-European \nGSM service offers both data and voice services over \na digital channel and provides computer users with a \ncorrected throughput of 9.6 kbps. In addition, a number of \norganizations exploit private mobile radio systems PMR) \noffering 1.2 kbps; this will rise to 4 x 7.2 kbps with \ndevelopments in TETRA [Razzell95]. \nThe work reported in this paper was carried out as part \nof the MOST Project (Mobile Open Systems Technology \nfor the Utilities Industries), a collaborative project involving \nf' Email  addresses: nigel. gordon, kc, adrian@comp.lancs.ac.uk \nEA Technology and Lancaster University, examining the \npotential of RM-ODP technology together with wireless \ncommunications in supporting the work practices of mobile \nworkers in the utilities industries IDavies95al. The paper \nis structured as follows. Section 2 summarizes the main \nbody of research carried out in the MOST Project. In \nparticular, this section describes the prototype application \ndeveloped over GSM technology which is designed to \nsupport field engineers in the power distribution network. \nSection 2 also describes the underlying distributed systems \nplatform developed in MOST. This ,platform is based \non ANSAware [APM93] but with extensions to support \noperation over mobile environments. Section 3 reflects \non the experience from this work and describes our \nview of the implications of mobile computing for RM- \nODP standards. Some guidelines are also given to aid \nthe development of specific RM-ODP-based platforms for \nmobile environments. Finally, section 4 presents some \nconcluding remarks. \n2. An experiment in applying RM-ODP to mobile \ncomputing \n2.1. Background on RM-ODP \nStandardization in the area of Open Diitributed Processing \nis a joint activity by both IS0 and ITU-T. The standard \nprovides a methodology based on the division of a \nspecification into a set of five viewpoints: enterprise, \ninformation, computational, engineering and technology \n(representing the full range of perspectives on a distributed \nsystem development from business objectives to detailed \n0967-1846\/95\/030142+10$19.50 0 1995 The British Computer Society, The Institution of Electrical 'Engineers and IOP Publishing Ltd \nExperiences of using RM-ODP to build advanced mobile applications \nimplementation choices). The focus of our work in the \nMOST project is on the computational viewpoint, and this \naspect\u2019 of the RM-ODP is described below. Note that a \nmore complete discussion of the features offered by the \nRM-ODP can be found in the literature [Raymond93]. \nThe RM-ODP computational viewpoint is based on \na location independent object-based model of distributed \nsystems. Objects can interact with their environment \nthrough one or more interfaces. Interfaces in the \ncomputational model are strongly-typed. In addition, \neach interface specification also contains an environment \ncontract which specifies a set of quality of service (QoS) \nconstraints placed on an object and its environment. \nInteractions between computational objects are essen- \ntially asynchronous and can take several forms including: \n(i) operations, that are similar to procedures, and are \n(ii) streams, that are abstractions of continuous sequences \ninvoked on designated interfaces, and \nof data between interfaces. \nInteractions between given computational interfaces \nis only possible if a binding (i.e. some communication \npath) has been established between them. A binding \nbetween interfaces can be established automatically by \nthe supporting infrastructure (binding is then said to be \nimplicir), or be created upon request by a computational \nobject (binding is then said to be explicit). \nAlso central to the RM-ODP is the notion of \ntransparency whereby selected aspects of systems can \nbe made invisible to applications. This is achieved \nby means of notional transparency functions interposed \nbetween the application and the support layers (it should \nbe noted that the application of transparency functions is \nunder user control and hence transparencies are selective). \nTransparencies identified in RM-ODP include location, \naccess, transaction, group, replication, and migration. \nFinally, RM-ODP defines a number of key services \nincluding the trading service (or trader). Objects offering \ninterfaces make these available by exporting them to a \ntrader. An object wishing to interact with a service \ninterface must import the interface by specifying a set \nof requirements in terms of service type and related \nconstraints. This will be matched against the avaikdbk \nservices and a suitable candidate selected. The service \noffer space may be structured into sets called contexts. \nIn addition, any number of traders can exist in a given \ndistributed system and these may be linked to allow access \nto services in different domains (interworking). \n2.2. An experimental RM-ODP-based application \n2.2.1. OveraU functionality. We have developed an \nexperimental application to investigate the potential of \nRM-ODP technology together with mobile communications \nin the electricity industry. This application allows field \nengineers to view geographical information (e.g. network \ndiagrams) using a public-domain Geographical Information \nSystem (CIS) called CRASS ~estervelt91]. Support for \ncollaboration with other field engineers is provided in two \nways. Firstly, field engineers are able to synchronize \nthe operations of their CIS with those of one or more \nremote engineers. In this way a common shared view of a \nparticular piece of information can be established. Once a \nshared view has been set up the application allows en,\u2019 mincers \nto annotate the display with highlight marks which are \nsubsequently propagated to all relevant remote engineers. \nSecondly, the application supports communication between \nfield engineers via audio communications. \nExample screen shots of the application\u2019s user interface \nare shown in figures I and 2. The conference manager \nor group co-ordinator component of the application is \nshown in figure 1. On the left-hand side of the group \nco-ordinator component are icons representing the sub- \napplications or modules which are available to the user \n(the globe represents CIS services) and on the right-hand \nside are icons representing users that can participate in \nconferences. In the centre is a list of the current conference \nparticipants. Under each participant\u2019s icon is a column of \nfurther icons which represent the modules which that user \nis currently running. By selecting appropriate icons in rows \nthe user is able to easily direct messages to a subset of the \nconference members. The user is able to select (by clicking \non a single button) whether or not an operation (for example \ndrawing a line in the GIs module) is propagated to those \ngroup members whose module icons have been selected. \nConsiderable emphasis has been placed on reporting to \nthe user the state of the communications links between local \nmodules and remote users\u2019 modules. In our prototype this \nis achieved by colouring the module icons under each user \nin the central portion of the display to reflect connectivity \n(using a spectrum of green representing full connectivity \nthrough to red representing no connectivity). Figure 2 \nshows the user interface to the GIS services. \n2.2.2. , Overall design philosophy. Our key design \nphilosophy is one of extensibility. From the users point \nof view this manifests itself in the tool-box feel to the \ninterface. In particular, the list of modules supported \ncan be expanded at any time and we anticipate field \nengineers configuring their applications to use sub-sets \nof the available modules. For example, the current \nimplementation also supports modules providing remote \ndatabase access (to look up customer records), a job \ndispatch application and an e-mail facility as well as the CIS \nand audio conferencing modules discussed above. We rely \non the host\u2019s windowing system to provide features to allow \nusers to make best use of their display (e.g. facilities to \niconize and re-size windows or virtual desktops to optimize \nthe use of a small screen). \nIn terms of implementation, the application is structured \nas a number of RM-ODP compatible service providers. \nMoreover, we enforce the computational model requirement \nthat all communication is via object invocation. Hence, we \nprohibit. for example. applications using the X protocol or \nX multiplexors (as used for example in [AbdeI-Wahab91]) \nto implement collaborative interfaces. Enforcing this \naspect of the computational model has a number of \nbenefits. Firstly, we are able to support operation in \na truly heterogeneous environment: since objects only \ncommunicate using invocations new implementations of \n143 \nN Davies et a\/ \nFigure 1 .  Interface to the Group Co-ordinator. \nFigure 2. Interface to the GIs module. \nour application need only support the basic invocation drawback, particularly given the specific nature of our \nmechanism and the prescribed service interfaces in order to application domain. In order to simplify the development \ninter-work with all existing implementations. In addition, of collaborative applications for use in our environment \nsince all communication is explicit we avoid building in we have implemented support for conference management \ndependencies on windowing systems (e.g. X or Microsoft within a single service, the group co-ordinator. This \nWindows) and the risk of incurring hidden overheads which ensures that all applications share a common view of the \nare often associated with windowing system protocols. participants in a conference and reduces the complexity \nFor example, the difficulties associated with using the X of the applications. Further details of the design of the \nprotocol for communication to mobile hosts is reported by prototype application and the associated RM-ODP services \nKantarjiev [Kantarjiev93]. can he found in [Davies9Sc]. \nThe drawback with our approach is that we require \ncustomized applications. However, since there has 2.3. The underlying plafform \nbeen little positive experience with using conventional \napplications in a collaborative context [Lauwers90], we \nbelieve that the benefits of our approach outweigh this \n1 44 \nA distributed systems platform has been developed to \nsupport the trial application described above. This platform \nExperiences of using RM-ODP to build advanced mobile applications \nis based on the RM-ODP standard to enable operation \nin a heterogeneous environment. More specifically, the \nimplementation of our platform is based on the ANSAware \nsoftware suite. This software suite is itself based on the \nANSA architecture which has had a profound influence on \nthe RM-ODP. \n2.3.1. The ANSAware distributed system. \nThe ANSAware computational model \nThe ANSAware computational model is a subset of \nthe corresponding computational model defined in RM- \nODP (see section 2.1). ANSAware only supports \noperational interfaces and implicit bindings. ANSAware \nis also currently restricted to the following transparency \nfunctions: location, access and group. RM-ODP features \nnot supported by ANSAware include: signals, flows, \nexplicit bindings, environmental contracts including QoS \nannotations, and more general transparency functions. \nANSAware provides an implementation of the trading \nfunction. Again, the ANSAware trader is a subset of trading \nas defined in RM-ODP. The ANSAware trader organizes \noffers according to service type and service properties. \nOffers are also organized into (hierarchical) contexts and \ntraders can be linked. The current implementation, \nhowever. limits the resultant graph to a one-level hierarchy. \nOne trader is nominated as the master trader with all other \ntraders binding a 1ocaVmaster context to this trader. The \nANSAware implementation of linking also prescribes the \npolicy for searching the resultant namespace; the local \ntrader is always searched first and, if a match is not found, \nthe master trader is then contacted. The ANSAware trader \nalso supports the concept of proxy offers. If a client \nattempts to import a proxy offer, then the import request \nis forwarded to another trader which should return the \nappropriate service. \nImplementation of ANSAware \nTo provide a platform conformant with the object \nmodel, the ANSAware suite augments a general purpose \nprogramming language with two additional languages. The \nfirst of these is IDL (Interface Definition Language), which \nallows interfaces to be precisely defined in terms of \noperations as required by the computational model. The \nsecond language, dpl (distributed processing language) is \nembedded in a host language, such as C, and allows \ninteractions to be specified between programs which \nimplement the behaviour defined by these interfaces. \nSpecifically, dpl statements allowlthe programmer to import \nand export interfaces, and to invoke operations in those \ninterfaces. A number of system services are supplied which \ninclude a trader service and a factory service for creating \nnew objects. \nIn the engineering infrastructure, the binding necessary \nfor invocations is provided by a remote procedure call \nprotocol known as REX (Remote Execution protocol) or a \ngroup execution protocol known as GEX (Group Execution \nProtocol). This is layered on top of a generic transport \nlayer interface known as a messuge passing service (MPS). \nIn the present implementation, MPS can select either UDP \nor TCP as the underlying transport service. A number of \nadditional protocols may be included at both the MPS and \nthe execution protocol levels and these may be combined \nin a nuinber of different configurations. The infrastructure \nalso supports lightweight threads within objects allowing \nmultiple concurrent invocations. \nAll the above engineering functionality is collected into \na single library, and an instance of this library is linked \nwith application code to form a capsule. Each capsule may \nimplement one or more computational objects. In the UNIX \noperating system, a capsule corresponds to a single UNIX \nprocess. Computational objects always communicate via \ninvocation at the conceptual level but, as may be expected, \ninvocation between objects in the same capsule is actually \nimplemented by straightforward procedure calls rather than \nby execution protocols. ANSAware currently runs on a \nvariety of operating systems platforms including various \nflavours of UNIX, VMS and MS-DOS\/Windows. \n2.3.2. Required extensions to support the prototype \napplication. We have extended the basic ANSAware \nplatform to support the transmission of continuous \nmedia and also to operate more efficiently in a mobile \nenvironment. The key changes are discussed below. \nExplicit QoS-managed bindings \nThe first major change has been to extend the support for \nbindings in ANSAware. A useful side-effect of this work is \nthat OUT version of the ANSAware platform is now aligned \nmore closely to the current RM-ODP standard. To meet \nthe requirement for an abstraction of real-time data flow \nover time, we have added the concept of explicit stream \nbindings (as described in the FW-ODP) to our ANSAware- \nbased platform. Stream bindings provide an end-to-end \nabstraction over continuous media communication and \nsupport arbitrary m:n connections, i.e. they allow m sources \nto be connected to n sinks. \nWithin our platform stream bindings are established \nusing an explicit bind operation which takes as parameters \nthe source and sink interfaces to be bound and a further \nset of desired QoS parameters. These parameters can \ninclude a specification of the desired throughput, latency \nand jitter associated with the binding (more details of \nthe specification of QoS parameters for continuous media \nbindings can be found in [Coulson95]). Clients are returned \na binding control interface as a result of an evplicit bind \noperation. To control the QoS of the flow once the binding \nhas been established the control interface includes a pair \nof operations setQoS() and getQoS(). These operations \ntake as arguments a set of QoS parameters which can \nthen be passed by the stream binding to the underlying \ntransport protocol. A call-back mechanism is also provided \nto inform client objects of QoS degradations reported by the \nunderlying transport service. \nWe have also added a new class of explicit binding \nfor use with operational interfaces. These bindings are \nestablished using the binder$Bind operation as above but \ntake as arguments operational interfaces. The resulting \nbinder control interface is identical to that used for stream \nbindings except that clients are allowed to specify and \nmonitor a different set of QoS parameters associated with \n145 \nN Davies et a\/ \nthe binding. This enables, for example, a client to ask \nto be informed when the QoS service supplied by the \nbinding falls below a specified threshold. Of particular \nrelevance to mobile applications is the ability to monitor the \npossibility of sending or receiving messages via a specified \nbinding without having to explicitly send application level \ntest messages, i.e. applications can delegate responsibility \nfor guaranteeing QoS assertions to the system. This is \nof significance since it allows mobile applications to be \nstructured in an event-based fashion (cf polling). For \nexample, through the use of our bindings it is possible to \nassert that the absence of messages on a given interface is \na result of their being no traffic intended for the specified \ninterface rather than a result of communications failure. \nIn addition, QoS driven bindings allow the system to \noptimize the use of test messages which might otherwise be \nduplicated if left to individual applications, e.g. if multiple \napplications wished to test QoS assertions between the same \npair of objects. Further details of the structural changes in \napplications and system services possible as the result of \nthe introduction of QoS driven bindings can be found in \nIDavies941. \nUnderlying protocols \nThe current execution protocols in ANSAware (i.e. REX \nand GEX) are not well suited to operation over mobile \nnetworks. The problem with the REX protocol is that it \ntakes no account of the characteristics of the underlying \nnetwork. More specifically, parameters such as the number \nof retry attempts and the interval between these attempts are \nfixed at installation time. Thus, when a system configured \nto operate over an Ethernet is run over a low-speed network \nthe absence of congestion control within REX means that \nalmost no data is actually communicated between user \nprocesses. Instead, the network becomes overloaded with \nREX control messages. \nTo solve the problems of REX, ANSAware has been \nextended with a new protocol called QEX (Quality-of- \nservice driven remote Execution). The general approach \nof QEX is to estimate the characteristics of the underlying \nchannel based on information obtained from round-trips \nof messages. This information is used by QEX to (if \nadjust retry intervals for invocations, and (ii) alter the rate \nof transmission and acknowledgement strategies for bulk \ndata transfer. QEX calculates these retry intervals and \ntransmission rates based on the size of the packet to be \nsent and the average throughput as deduced from previous \ntransmissions. Clearly, a key problem in making QEX \noperate over the full range of networks is how to extract \nlatency and throughput figures from the collected round-trip \ntimes. In our current platform, we attribute round-trip times \nentirely to throughput. This works satisfactorily on low and \nmedium speed networks where throughput is dominant but \ndoes not generalize to high speed wide-area networks. Note \nthat the calculation of round-trip times requires additional \nacknowledgements over REX but experimental evidence \nsuggests that these are compensated by the more selective \nuse of retries [Friday95]. \nQEX is designed primarily to operate over UDP (TCP \nduplicates many of the facilities of QEX). To facilitate \noperation over low bandwidth, mobile networks a new \n146 \nUDP-like service has also been introduced called S-UDP. \nS-UDP provides UDP semantics but offers additional \nsupport in the form of intelligent dialing and QoS \nfeedback. For example, S-UDP can inform applications \nwhen communication delays are due to re-dialling as \nopposed to congestion or network failure. S-UDP can \nalso provide information on the bearer service currently \nbeing used. QEX passes the QoS information on to clients \nthrough the explicit binding abstraction. This enables \napplications to adapt their own behaviour, e.g. by reducing \nthe amount of data produced as the bandwidth falls. \nSimilarly, the GEX protocol is wholly unsuitable for \nuse over many wireless networks. The protocol has \nbeen designed to avoid a central point of failure for \ngroup communication. Instead, group events such as \nmembership changes and message arrivals are co-ordinated \nby all group members exchanging state information using \nan internal token-based protocol. This generates multiple \nredundant messages if hardware broadcast is supported \nand involves the establishment of multiple point-to-point \nconnections between group members if hardware broadcast \nis not supported. We are currently designing a new group \nprotocol called G-QEX (Group-Quality-of-service driven \nremote Execution). We hope to be able to adjust the \nprotocol\u2019s approach to supporting groups (i.e. centralized \nor dismbuted) based on network and user QoS information. \nEnhanced trading functionality \nFinally, as described above, the implementation of the \ntrading function in ANSAware assumes a hierarchical \npattern of linking. This hierarchical arrangement while \npossibly adequate for fixed networks is inappropriate for \nmobile systems where each portable computer is likely \nto have its own trader in order that it can continue \noperation during periods of disconnection. Moreover, given \nthe nature of the communications network a link scheme \nwhich requires traversal up and down a hierarchy (possibly \nrequiring multiple dial-up connections to be established) is \nclearly unsuitable. \nWe have addressed this issue by introducing a \nmechanism to enable peer-to-peer linking of traders. The \nlinks thus established can have constraints imposed on them \nensuring that they are traversed only when there is a strong \nlikelihood of the remote trader being able to satisfy the \nrequest. For example, we can specify that services owned \nby a particular user are always found on a specified machine \nand traverse the link to that machine only when looking for \nthat user\u2019s services. Again, this change means that our \nimplementation of trading. is more closely aligned to the \nRM-ODP standard. \n2.4. Implementation status \nThe application and associated platform has been fully \nimplemented and demonstrated running in a heterogeneous \nenvironment consisting OF SUN workstations, desktop PCs \nand portable PCs (running Novell\u2019s UnixWare). Mobile \ncommunications is pmvided by either analogue cellular \nphones. operating at 2,400 bitdsec, or GSM at 9,600 \nbitskec. Alternatively, a network emulator can be used \nallowing us to simulate the varying degrees of connectivity \nExperiences of using RM-ODP to build advanced mobile applications \nlikely to be experienced by field engineers during a typical \noperational cycle [Davies95b]. \n3. Experiences of using RM-ODP in a mobile \nenvironment \nIn this section, we now reflect on the use of RM-ODP for \nmobile computing based on our implementation experience \nin the MOST Project. In this analysis, it is important to \ndistinguish clearly between the RM-ODP standard and more \nspecific RM-ODP-based platforms such as ANSAware. The \nRM-ODP standard describes a framework 'to enable the \nbenefits of distribution of information processing services to \nbe realised in an environment of heterogeneous IT resources \nand multiple organizational domains. In doing so, the \nstandard is rather general and is careful not to prescribe any \nparticular technical solutions to distributed processing. In \nproviding RM-ODP compliant platforms, however, specific \ndecisions must be made which might well have implications \nfor the behaviour of the platform in a mobile environment. \nThe analysis is therefore divided into two parts: \n(i) an overall assessment of the RM-ODP standard in \nsupporting mobile computing, and \n(ii) a set of guidelines, derived from experiences of \nusing ANSAware, for developing RM-ODP compliant \ndistributed systems platforms suitable for mobile \ncomputing. \nThe discussion is illustrated by various examples taken \nfrom the development of the MOST application and the \nextensions required to the associated ANSAware-based \nplatform. \n3.1. Assessment of the RM-ODP standard \nThe experiences of applying RM-ODP concepts has been \npositive. We have not discovered any aspect of the \ncurrent RM-ODP which would prohibit a compliant system \noperating in a mobile environment. Indeed, there are a \nnumber of features of the RM-ODP which make such \nsystems particular suitable for operation in a mobile \nenvironment. These aspects are discussed below. \n3.1.1. Benefits of the object-oriented approach. The \nbenefits of an object-oriented approach to distributed \nsystems are well documented [Blair92]. For example, \nthe loose coupling and tight cohesion implied by an \nobject-oriented approach is precisely what is required in \na distributed system. From our experiences, the major \nbenefits have been in terms of data abstraction arising \nfrom the use of public interfaces. Public interfaces enable \nbehaviour to be described in an implementation independent \nmanner. This implies that implementations can evolve over \ntime without affecting the overall design of the application. \nExample: implementation of remote database access \nThe current implementation of this service relies on \nthe underlying file system for the storage of records. \nQuerying is supported but this is not optimized \nfor large data sets. However, the implementation \nof this service could be replaced by a relational \nor object-oriented database while preserving the \nRM-ODP public interface. This reimplementation \nwould not be apparent to the application. \nSimilarly, different implementations can co-exist in the \nsame environment as long as they support the agreed public \ninterface. \nExample: supporting different CIS implementations \nThe current implementation relies on the GRASS \nGeographic Information System. It would be \npossible for some field engineers to replace this \nGIS with another system as long as they were \nable to support the public interface. This would \nnot compromise inter-working with other engineers \nusing other GIS systems. \nFinally, the RM-ODP approach enables legucy systems \nto be accessed in a heterogeneous distributed environment. \nThis can be achieved by providing an wrapping object \noffering an RM-ODP interface and interacting with the \nfacilities offered by the underlying legacy system. Again, \nthis is demonstrated by the use of the legacy system GRASS \nin the MOST application. \n3.1.2. Added benefits of distribution transparency. \nDistribution transparency enables the programmer to access \npotentially remote services without being concerned with \nthe complexities of the distributed environment. This \nproperty proved to be invaluable in developing il distributed \nprogram of the complexity of the MOST application. \nExample: benefits of location and migration transparency \nLocation and migration transparency enabled us \nto develop our application such that we can \ndynamically re-configure the mapping of objects \nto hosts in order to trade-off processing and \ncommunication overheads. This enabled us to \nexperiment with different configurations of objects \nto determine the optimum placement for a mobile \nenvironment. \nIn our experiences, it is also important to occasionally \nby-pass transparency mechanisms and to be aware of the \nlocation of objects (for example, to be able to co-locate \nobjects if the available bandwidth is expected to be low). \nRecent work in this area [Neuman93] has begun to explore \nhow location can be used as a parameter in trading to allow \nclients to use the best located service which meets their \nrequirements. It is also important to be aware of the level \nof connectivity of bindings to such objects. This second \nrequirement is addressed by the quality df service support \nas discussed below. \n3.1.3. QoS-managed bindings and adaptive services. \nThe concept of QoS-managed bindings has proved to be \nparticularly important in supporting the MOST application. \nFirstly. this feature enables the application to specify the \nrequired quality of service from a particular binding. This \n147 \nN Davies et al \ninformation can then be used by the infrastructure to guide \nresource management and scheduling. \nExample: introducing deadlines \nThe MOST application features a number of \ndifferent styles of invocations ranging from those \nsupporting real-time interaction to those canying \nasynchronous mail messages. In a low bandwidth \nenvironment, however, trade-offs must be made \nbetween the different styles of traffic. In the current \nimplementation, deadlines on messages enables \ninvocations for real-time interaction to take priority \nover e-mail messages. \nSecondly, applications can obtain feedback on the \nquality of service provided by the underlying infrastructure. \nThis is particularly important as we anticipate end-systems \nwhich will either be disconnected, weakly inter-connected \nby low speed wireless networks such as GSM or TETRA, or \nfully inter-connected by high speed networks ranging from \nEthernet to ATM with this level of connectivity varying \nover time as a consequence of the mobility of the modem \ncomputer user. It is therefore crucial that applications can \nbe informed of the current quality of service to enable them \nto adapt their behaviour. \nExample: remote database access \nThe service providing remote database access can \nadapt its behaviour by varying the amount of \ninformation returned depending on the available \nquality of service. For example, while connected \nto a high speed network, this service can return \nfull details of the results of a query. If, however, \nbandwidth is limited, the database service can \nreturn the number of hits together with the name \nfields of the records. Individual records can then \nbe pulled over on request. \nQuality of service information can also have a \nfundamental impact on the structuring of distributed \napplications as illustrated by the following example. \nExample: weather reports \nConsider a simple ANSAware application designed \nto inform field engineers of approaching bad \nweather (for example, to provide warnings of \nimpending lightning storms for engineers working \non pylons). The application consists of a single, \ncentral service which has access to national weather \ninformation and a number of client objects (one for \neach field engineer) which can query the service. \nEngineers need to be warned when bad weather \nis recorded in areas adjoining the one in which \nthey ,are woiking. Hence, there are two ways \nof structuring this application: either the client \napplications register an interest in the weather in \nparticular areas and the server notifies them of \nany subsequent changes in condition, or, the client \napplications poll the server at regular intervals for \nthe weather reports of the relevant areas. In a wired \nenvironment the former solution would almost \ncertainly be adopted to avoid the communications \n148 \nand processing overheads incurred by polling. \nHowever, in a wireless environment there are \nadditional factors to consider. Specifically, a call- \nback-based approach assumes that communications \nare reliable. If communications are unreliable, a \nlack of information can either mean that messages \nare getting lost or that there are no reporrs of bad \nweather. This ambiguity is clearly undesirable. \nThe provision of both stream and operation bindings \nalso proved to be helpful in constructing the MOST \napplication. In particular, the complexities of dealing \nwith audio communications are largely encapsulated \nbehind stream bindings. This also enables different \nimplementations of stream bindings to be provided. For \nexample, the application could readily be ported from GSM \nto a PMR system. \nThe authors have considerable experience in the use of \nstream bindings for the support of multimedia applications; \nthese experiences are discussed in detail in [DaviesgZ]. \n3.2. Additional guidelines for building RM-ODP \npIatForms \nWhile the RM-ODP provides a strong basis for developing \nmobile applications, developers of RM-ODP compliant \nsystems must meet some additional requirements to enable \nthe platform to perform well in a mobile environment. \nNote that this list is not intended to be a complete set of \nrequirements for mobile platforms but rather reflects the \nmost important issues raised by the development work in \nthe MOST project. A number of :he requirements cannot \nbe met by existing techniques or technologies and demand \nfurther research. \n3.2.1. Design choices in binding and trading. The RM- \nODP standard does not prescribe particular interfaces for \nthe QoS-management of bindings or a particular notation \nfor QoS specification. In our experience, it is crucial for \nbindings to support a rich interface which will enable both \nthe specification of the required QoS and provide feedback \non the QoS provided by the underlying infrastructure. \nFurthermore, QoS management should be end-to-end, i.e. \nencompassing both end system and network resources, to \nenable the required guarantees to be met in communication \nbetween objects. In identifying a notation for QoS \nspecification, it is also important to identify an appropriate \nmodel of QoS that can span the full range of heterogeneous \nnetworks. Cost is a particularly important metric for mobile \nnetworks. \nSimilarly, the RM-ODP specification for trading is \nrather open, both in terms of interfaces supported and \nin terms of policies for interworking. In our view, care \nmust be taken in designing such aspects of a trader \nto ensure the implementation is flexible enough for a \nmobile environment. As reported in section 2.3.2, the \nparticular policies in the ANSAware trader proved to be \ntoo prescriptive for such an environment. As a minimum \nrequirement, we believe that traders should be flexible \nenough to allow peer-to-peer linking. \nExperiences of using RM-ODP to build advanced mobile applications \n3.2.2. Communications infrastructure. In supporting \nRM-ODP over mobile networks, considerable attention \nmust be given to the engineering of the underlying \ncommunications architecture. We examine the impact of \nmobility on, firstly, the provision of transport services and, \nsecondly, higher level services supporting RM-ODP. \nTransport services \nIt is now becoming clear that existing transport services \nare not suitable for mobile networks [Ciiceres94]. For \nexample, the implementation of TCP confuses lost packets \nin unreliable networks with congestion and will therefore \nback-off. However, the most appropriate strategy for \nwireless networks in this case is to aggressively retry. \nProblems can also be identified with error control in TCP. \nFor example, forward error correction is often a more \nappropriate policy than re-transmission in low bandwidth \nnetworks. Similarly, many mobile networks are half-duplex \nwith the typical time to switch from send to receive mode \nbeing approximately half a second. In such a situation it is \nimportant to keep acknowledgements to a minimum. These \nexamples indicate that the protocol implementation should \nbe aware of the quality of service and should be able to \nadapt its internal behaviour accordingly. Hence, it is not \njust applications which should adapt to changes in quality \nof service; the underlying infrastructure should also have \nthis property. \nProblems can also be identified with the connectionless \nnature of UDP. For example, a connection-less protocol \ninevitably results in larger headers. This can be a problem \nwhen bandwidth is limited. In addition, conflicts can arise \nwhen running UDP over a connection-oriented wireless \nnetwork. In wide-area mobile radio systems the time to \nestablish a call is significant (typically several seconds). \nHence, considerable performance improvements can be \ngained by holding connections open for a time period. \nHowever, this can be expensive, depending on the type \nof call charging being used. It is therefore necessary to \nadopt intelligent dialling strategies which can trade-off the \nrequired quality of service against the cost of maintaining \nan open connection. Such strategies must overcome the \nlack of information in UDP (and connection-less protocols \nin general) on future traffic patterns. A similar problem \narises at the application level. UDP clients do not receive \nfeedback on delays caused by dialling whereas TCP clients \nwould block. This means that UDP clients may temporarily \nswamp the network leading to potential packet loss or \nsignificant delays. Higher level protocols may also assume \nthat the reason is more long term congestion and adopt an \ninappropriate strategy to recover. \nA number of advances have recently been made in \nprotocols for mobile networks. A significant body of work \non extensions to the IP addressing scheme now exists (e.g. \n[Ioannidis91]) and more recent work in this area has begun \nto examine how connections for continuous media can be \nmaintained as a mobile moves between cells [Keeton93]. \nHowever, considerable research is required before complete \nsolutions can be provided. \nHigher level services \nOur experiences have shown that problems also exist with \nhigher level protocols to support RM-ODP. In particular, \nsection 2.3.2 has discussed the problems with the REX \nand GEX protocols employed in ANSAware. The problem \nis similar to the problems identified above with TCP \nand UDP, namely that implementations make assumptions \nabout the underlying network. Both REX and GEX \nassume that the network will be relatively reliable and will \noffer low latency, high throughput communications. Our \ndevelopment of QEX illustrates that more adaptive higher \nlevel protocols can be provided. QEX dynamically adapts \nto changes in the underlying quality of service by changing \nits retry strategy. In addition, the protocol provides \nfeedback to the application through the QoS management \ninterface (as discussed above). These features enable the \nMOST application to run without change on a variety of \nnetwork types. The issue of providing protocol support for \ngroup services is more difficult and remains a matter for \nfurther research. \n3.2.3. Other issues. Other important issues raised by \nMOST include: \n(i) Support for multimedia. Existing mobile networks \nonly provide limited support multimedia traffic. For \nexample, the GSM phones used in the prototype \napplications support either (traditional) voice services \nor 9.6 kbifs\/s data services but not both at the same time. \nThe issue will be partially solved by further advances \nin mobile networks and'partially by the development \nof compression techniques suitable for low bandwidth \nnetworks. Advances in compression will also enable \nsupport for low quality video. From our experience, \nit is also important to consider techniques which can \nadapt the quality of service of continuous media streams \nto the available bandwidth, e.g. through filtering or \nhierarchical encodings. \n(ii) Operating system suppon Two issues have been identi- \nfied, both as a result of the limited resources available to \nsystems running on portable computers. The first issue \nrelates to the requirement to support frequent power- \ndowns to conserve battery life. Operating systems such \nas UNM incur substantial overheads on power-down \nand start-up: typical start-up times for a UNIX sys- \ntem are measured in minutes. In contrast, compara- \ntively simple operating systems such as MS-DOS are \nsubstantially faster at powering-down and starting-up. \nHowever, operating systems such as MS-DOS do not \nsupport the concurrent processing required to support a \ncomprehensive distributed systems platfora. Attempts \nto provide UNIX with checkpointing facilities to allow \nrapid power-downs and re-starts have had mixed SUC-, \ncess with average re-start times still being around two \nminutes [Bender93]. Emerging hardware architectures \nwhich allow automatic suspend and resume of proces- \nsors will have a significant impact in this area but addi- \ntional work is required to improve UNIX start-up\/shut- \ndown times when full power-downs are required. The \nsecond issue is that of supporting shared libraries in \na mobile environment. Shared libmies enable com- \nmonly used functions, such as graphics routines and \nuser-interface support, to be held in libraries which are \n149 \nN Davies et a\/ \ndynamically linked at run-time. However, shared li- \nbraries can be large and hence this solution does not \nwork well in mobile environments. Further discussion \nof this issue can be  found in [Davies94]. \n(iii) Supporting fault tolerance and safety critical applica- \ntions. The development of the MOST application high- \nlighted the difficulties of achieving fault tolerance and \nin supporting safety critical procedures in an environ- \nment of weak connectivity and long periods of discon- \nnection. For example, there are considerable difficulties \nwith ensuring all participants in a mobile conference \nshare the same view of the global state within an accept- \nable time limit. Similar problems exist with recovering \nthe state of the conference in a mobile environment (for \nexample after a period of disconnection). We believe it \nis imperative that future platforms should provide ser- \nvices to support the development of collaborative and \nsafety critical applications but that these services must \navoid implicit assumptions about the level of service \noffered by the network. \n4. Concluding remarks \nThis paper has reported on experiences with applying \nthe ISOATU-T standards for a Reference Model for \nOpen Distributed Processing in a mobile environment. \nRM-ODP provides a framework to enable services to \nbe accessed in a heterogeneous environment spanning \nmultiple organizational domains. Our experiences in the \nMOST Project indicate that this framework is sufficiently \ngeneral to accommodate the particular requirements of \nmobile applications. In addition, the particular object- \noriented philosophy in RM-ODP, the approach of selective \ndistribution transparency and the concept of QoS-managed \nbindings all provide strong support for mobile applications. \nOur experiences have also shown that the design decisions \nmade in the RM-ODP-based ANSAware platform limit \nits effectiveness in mobile environments. In particular, \nchanges were required to the communications infrastructure \nand to the implementation of trading. The paper concluded \nwith a set of guidelines for future developers of RM-ODP \ncompliant platforms in these and other areas. \nReferences \n[Abdel-Wahab91] Abdel-Wahab H M and Feit M A 1991 XTV \nA framework for sharing X window clients in remote \nsynchronous collaboration Pmc. IEEE Tricomm ' P I :  \nCommunications for Distributed Applications and Systems \n(Chapel Hill) \nProerammine in ANSAware Document RM.102.02 \n[APM93] APM Ltd 1993 ANSAware 4.1 Application \n(CLmbridge- APM) \n[Bender931 Bender M et a1 1993 Unix for nomads: making Unix \nsuppck mobile computing Proc. USENIX Symposiumon \nMobile and Location Independent Computing (Cadridge,  \nMA) (Berkeley, CA: USENIX Association) pp 53-67 \n[Blair921 Blair G S and Lea R The impact of distribution on the \nobject-oriented approach to software development IEE \nSoftware Engng J. (Special Issue on Object-Oriented \nSystems) 7(2) 130-8 \n[C(lceres94] Caceres R and Iftode L 1994 The effects of \nmobility on reliable transport protocols Pmc. 14th Inc. Conj? \n150 \non Distributed Computer Systems (Poznan, Poland, 22-24 \nJune 1994) (Los Alamitos, CA: IEEE Press) pp 12-20 \nStefani J B 1995 Supporting the real-time requirements of \ncontinuous media in open distributed processing Computer \nNetworks and ISDN Systems, Special Issue on Open \nDistributed Processing to appear \n[Davies92] Davies N, Coulson G, Williams N and Blair G S \n1992 Experiences of handling multimedia in distributed \nopen systems Proc. 3rd Symp. on Experiences with \nDistributed and Multiprocessor Svsrems (SEDMS 1111 \n[Coulson95] Coulson G, Blair G S, Horn F, Hazard L and \n(Newport Beach CAjpp 173-90. \nIDavies941 Davies N, Pink S and Blair G S 1994 Services to \nsupp& distributed applications in a mobile environment \nPmc. Jst Jnt. Worksbp on Services in Distributed and \nNehvorked Environments (Prague, C:ech Republic) (Los \nAlamitos, CA: IEEE Press) \nRaven P F 1995 Mobile open systems technologies for the \nutilities industries CSCW Issues for Mobile and \nTele-Workers ed A Dix (Berlin: Springer) \n1995 A network emulator to support the development of \nadaptive applications 2nd USENIX Symposium on Mobile \nand Location Independent Comoutina (Ann Arbor. MI1 \n[DaviesSSa] Davies N, Blair G S, Friday A, Cross P D and \n[Davies95b] Davies N, Blair C S, Cheverst K and Friday A \n. .  \n(Berkeley, C A  USENIX Associatio;)' \nIDavies95cl Davies N, Blair G S, Cheverst K and Friday A \n1995 Supporting collaborative applications in a \nheterogeneous mobile environment Computer Commun.. \nSpecial Issue of Mobile Computing to appear \ncomputing Pmc. Third \\Vorkshop on Workstalion Operating \nSystems (Key Biscayne, FL) pp 2-10 \n[Ioannidis91] Ioannidis I, Duchamp D and Maguire G Q Jr 1991 \nIP-based protocols for mobile internetworking Proc. \nSIGCOMM'91 (Ziirich) vol 21 (New York ACM) \npp 235-45 \nDS095al ISOlIEC Draft Recommendation X.902, International \nStandard 10746-1. ODP Reference Model: Overview. \n. \n[Duchamp92] Duchamp D 1992 Issues in wireless mobile \nJanuary 1995 \nIIS095bl ISOflEC Recommendation X.902. International \nStandard 10746-2, ODP Reference Model: Descriptive \nModel, January 1995 \nStandard 10746-3, ODP Reference Model: Pressriptive \nModel, January 1995 \n[Friday951 Friday A, Blair G S, Cheverst K and Davies N 1995 \nExtensions to ANSAware for advanced mobile applications \nInternal Repon MPG-95-14 (Available from the Computing \nDepartment Lancaster University) \nKnvacic R T and Weiser M 1993 Experiences with X in a \nWireless Environment Proc. USENIX Symp. on Mobile and \nLocation Independent Computing (Cambridge, MA. August \n1993) (Berkeley, C A  USENIX Association) pp 117-28 \ninformation systems IEEE Personal Commun. l(1) 6-17 \nFerrari D 1993 Providing connection-oriented network \nservices to mobile hosts Prac. USENIX Symp. on Mobile and \nLocation Independent Computing (Cambridge, MA, August \n1993) (Berkeley, CA: USENIX Association) pp 83-102 \n[Lauwers90] Lauwen J C and Lank K A 1990 Collaboration \nawareness in support of collaboration transparency: \nrequirements for the next generation of shared window \nsystems Proc. CH1'90 pp 303-310 \nWeuman931 Neuman B C, Augart S S and Upasani S 1993 \nUsing Prospero to support integrated location-independent \ncomputing Proc. USENIXSymp. on Mobile and Location \nIndependent Computing (Cambridge, MA. August 1993) \n(Berkeley, C A  USENIX Association) pp 29-34 \n[ISO95c] ISOlIEC Recommendntion X.903, International \niKantarjiev931 Kantarjiev C K, Demers A, Frederick R, \n[Katz94] Katz R H 1994 Adaption and mobility in wireless \n[Keeton931 Keeton K, Mah B A, Seshan S, Kao, R H and \nExperiences of using RM-ODP to build advanced mobile applicafions \n[Raymond931 Raymond K 1993 Reference model of open IEE ConJ on Telecommunications (Brighton) (IEE Press, \nUK) pp 342-348 \n(GRASS Information Center. US Army CERL, Champaign, \ndistributed processing: a tutorial F'rx 2nd fnt. IHP Conf: \non Open Distributed Processing (Berlin. September 1993) \npp 3-14 \ntechnical challenges of the physical layer Proc. of the 5th \n[Westervelt911 Westervelt I 1991 Introduction to GRASS 4 \n[Razzell951 Razzell C 1995 TETRA radio terminal design: IL, July \n151 \n"}