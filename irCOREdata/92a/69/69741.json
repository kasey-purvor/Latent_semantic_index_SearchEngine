{"doi":"10.1109\/ISCE.2006.1689509","coreId":"69741","oai":"oai:eprints.lancs.ac.uk:22913","identifiers":["oai:eprints.lancs.ac.uk:22913","10.1109\/ISCE.2006.1689509"],"title":"XEPS - Enabling card-based payment for Mobile Terminals","authors":["Garner, Philip","Edwards, Reuben","Coulton, Paul"],"enrichments":{"references":[{"id":1030067,"title":"A Battle\u2019s Breaking Out Over Phishing Prevention\u201d, Bank Technology News,","authors":[],"date":"2004","doi":null,"raw":null,"cites":null},{"id":1029247,"title":"Developing RFID-Enabled Phones\u201d,","authors":[],"date":"2004","doi":null,"raw":null,"cites":null},{"id":1028710,"title":"Electronic Payments International, Mobile Payments: Is there anybody out there?,","authors":[],"date":"2001","doi":null,"raw":null,"cites":null},{"id":1028984,"title":"Motorola turns mobile phone into wallet,","authors":[],"date":"2004","doi":null,"raw":null,"cites":null},{"id":1029824,"title":"R.Edwards, \u201cPerson to Person Mobile Commerce\u201d, presented at Mobile Multimedia Communications Conference,","authors":[],"date":"2003","doi":null,"raw":null,"cites":null},{"id":1029557,"title":"The Shosteck Group, \u201cPremium SMS becomes a significant contributor to AMPU\u201d,","authors":[],"date":"2003","doi":null,"raw":null,"cites":null},{"id":1029510,"title":"The WAP Gap: Wireless Security and the Wireless Application Protocol\u201d,","authors":[],"date":"2005","doi":null,"raw":null,"cites":null}],"documentType":{"type":null}},"contributors":[],"datePublished":"2006-07","abstract":"Mobile commerce applications that attempt to introduce a new payment method to the public experience a high failure rate. This mirrors the experience on the Web whereby a number of high profile `Web-money' solutions were withdrawn due to poor adoption. Despite their technological advantage and suitability for mobile payments (lower overheads, cheaper for small transactions) the need to attract a critical mass of merchants before substantial user uptake is often an insurmountable challenge. The public relations failure of WAP-based commerce has undoubtedly discouraged users from making remote purchases with their mobile terminal. Only recently with the rollout of high speed mobile data and higher-resolution colour devices has browsing and buying via a mobile terminal enabled a user-friendly experience. In this paper we present a solution for facilitating credit card payments, using an established XML architecture to wholly describe transactions. Developed with Python for Nokia Series 60 phones, XEPS (XML-enabled payment system) allows for standalone applications to integrate a mobile commerce element, complete with SSL-encrypted card processing. To demonstrate the need for a card payment solution for mobile, we analyse the alternative payment mechanisms present on the Web, and show how the integration of entrenched card networks is crucial for consumer acceptance. Furthermore, we chart the development of a major application on a relatively new platform for mobile, Python for Series 60 (PyS60), and show how the environment can be used for rapid development of applications which require more advanced interaction with the device hardwar","downloadUrl":"","fullTextIdentifier":null,"pdfHashValue":null,"publisher":"IEEE","rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:eprints.lancs.ac.uk:22913<\/identifier><datestamp>\n      2018-01-24T02:08:35Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      7375626A656374733D51:5141:51413736<\/setSpec><setSpec>\n      74797065733D626F6F6B5F73656374696F6E<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n    \n      \n        XEPS - Enabling card-based payment for Mobile Terminals<\/dc:title><dc:creator>\n        Garner, Philip<\/dc:creator><dc:creator>\n        Edwards, Reuben<\/dc:creator><dc:creator>\n        Coulton, Paul<\/dc:creator><dc:subject>\n        QA76 Computer software<\/dc:subject><dc:description>\n        Mobile commerce applications that attempt to introduce a new payment method to the public experience a high failure rate. This mirrors the experience on the Web whereby a number of high profile `Web-money' solutions were withdrawn due to poor adoption. Despite their technological advantage and suitability for mobile payments (lower overheads, cheaper for small transactions) the need to attract a critical mass of merchants before substantial user uptake is often an insurmountable challenge. The public relations failure of WAP-based commerce has undoubtedly discouraged users from making remote purchases with their mobile terminal. Only recently with the rollout of high speed mobile data and higher-resolution colour devices has browsing and buying via a mobile terminal enabled a user-friendly experience. In this paper we present a solution for facilitating credit card payments, using an established XML architecture to wholly describe transactions. Developed with Python for Nokia Series 60 phones, XEPS (XML-enabled payment system) allows for standalone applications to integrate a mobile commerce element, complete with SSL-encrypted card processing. To demonstrate the need for a card payment solution for mobile, we analyse the alternative payment mechanisms present on the Web, and show how the integration of entrenched card networks is crucial for consumer acceptance. Furthermore, we chart the development of a major application on a relatively new platform for mobile, Python for Series 60 (PyS60), and show how the environment can be used for rapid development of applications which require more advanced interaction with the device hardware<\/dc:description><dc:publisher>\n        IEEE<\/dc:publisher><dc:date>\n        2006-07<\/dc:date><dc:type>\n        Contribution in Book\/Report\/Proceedings<\/dc:type><dc:type>\n        NonPeerReviewed<\/dc:type><dc:relation>\n        http:\/\/dx.doi.org\/10.1109\/ISCE.2006.1689509<\/dc:relation><dc:identifier>\n        Garner, Philip and Edwards, Reuben and Coulton, Paul (2006) XEPS - Enabling card-based payment for Mobile Terminals. In: Consumer Electronics, 2006. ISCE '06. 2006 IEEE Tenth International Symposium on. IEEE. ISBN 1-4244-0216-6<\/dc:identifier><dc:relation>\n        http:\/\/eprints.lancs.ac.uk\/22913\/<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/dx.doi.org\/10.1109\/ISCE.2006.1689509","http:\/\/eprints.lancs.ac.uk\/22913\/"],"year":2006,"topics":["QA76 Computer software"],"subject":["Contribution in Book\/Report\/Proceedings","NonPeerReviewed"],"fullText":"1-4244-0216-6\/06\/$20.00 \u00a92006 IEEE \nXEPS \u2013 Enabling Card-Based Payment for Mobile \nTerminals \nPhilip D. Garner, Reuben C. Edwards and Paul Coulton, Member, IEEE \nAbstract \u2014 Mobile commerce applications that attempt to introduce \na new payment method to the public experience a high failure rate. This \nmirrors the experience on the web whereby a number of high profile \u2018web-\nmoney\u2019 solutions were withdrawn due to poor adoption. Despite their \ntechnological advantage and suitability for mobile payments (lower \noverheads, cheaper for small transactions) the need to attract a critical \nmass of merchants before substantial user uptake is often an \ninsurmountable challenge. The public relations failure of WAP-based \ncommerce has undoubtedly discouraged users from making remote \npurchases with their mobile terminal. Only recently with the rollout of \nhigh speed mobile data and higher-resolution colour devices has \nbrowsing and buying via a mobile terminal enabled a user-friendly \nexperience. In this paper we present a solution for facilitating credit card \npayments, using an established XML architecture to wholly describe \ntransactions. Developed with Python for Nokia Series 60 phones, XEPS \n(XML-Enabled Payment System) allows for standalone applications to \nintegrate a mobile commerce element, complete with SSL-encrypted card \nprocessing. To demonstrate the need for a card payment solution for \nmobile, we analyse the alternative payment mechanisms present on the \nweb, and show how the integration of entrenched card networks is crucial \nfor consumer acceptance. Furthermore, we chart the development of a \nmajor application on a relatively new platform for mobile, Python for \nSeries 60 (PyS60), and show how the environment can be used for rapid \ndevelopment of applications which require more advanced interaction \nwith the device hardware.\nIndex Terms \u2014 mobile, payment, commerce, XML \nI. INTRODUCTION \nMobile commerce continues to attract academic study and \ninterest from the business and banking communities but \nmobile terminals remain underused as a means of paying for \ngoods and services. As is so often the case with mobile \ntechnologies, the successful business models for transactions \non mobile terminals have confounded analysts\u2019 predictions, \nwith proximity payments stalling and the market for mobile \ncontent delivery booming. The UK market for content \ndelivered over mobile networks, such as ringtones, games \nand wallpapers is estimated to be worth a huge \u00a3740m per \nyear [1].  \nContrast this with turn-of-the-21st century predictions that \nover half of all mobile payments would be either in retail \nstores or via vending [2], and the need to re-evaluate our \nexpectations of mobile commerce is clear. The space where \nmobile terminals were expected to dominate, proximity \npayments, is now being filled with RF-enabled smartcards, \nsuch as the Octopus card popular in Hong Kong, and the \nOyster card used in London for public transport. Both of \nthese systems are known as stored value cards, and they can \nbe topped up at compatible kiosks. These systems both \nrequire user to physically touch (or at least come to within a \nfew centimetres of each other), but with contactless cards, \nusing Near Field Communications (NFC), even this is not \nalways necessary. Ideal for mass-transit applications, users \ncan potentially pay for their travel without even removing \nthe card from their wallet. Of course, with the modern push \ntowards convergence devices, it seems likely that such \ntechnology will become embedded into a mobile terminal, as \nseen with the Mastercard PayPass project [3]. This is \nexpected to become a pervasive technology, with 50% of \nterminals expected to be RFID\/NFC enabled by 2009 [4]. \nWhilst the future for proximity payments with mobile \nterminals appears bright, the models originally touted for \nmobile commerce flounder. With the popular introduction of \nthe Wireless Application Protocol (WAP) in 2000, an \nimplementation of SSL\/TLS was provided to allow \u2018secure\u2019 \nremote purchases. One of a number of public relations blows \nto befall the WAP concept was the \u2018WAP Gap\u2019 \u2013 the \nnecessary bridge between Wireless Transport Layer Security \n(WTLS) on the wireless internet and Secure Sockets Layer \n(SSL) that was present in the early implementation where an \nencrypted session from WTLS had to be decrypted to \nplaintext before being encrypted for an SSL session [5]. Of \ncourse, this meant that end-to-end security was \ncompromised, although the actual risk of a successful attack \nremains small, as the plaintext would usually only be present \nin a mobile network operator\u2019s (MNO) internal \ninfrastructure.  \nIn contrast the to the experience with WAP, the \nproliferation of SMS driven services continues to invigorate \nmobile commerce throughout Europe, with premium SMS \nservices expected to deliver 12% of non-voice operator \nrevenue by 2007 [6]. Users have adopted the technology \nwith a vigour that surprised most in the mobile community. \nThe success of SMS as a platform for m-commerce \ncompletely belies its fundamental lack of suitability for \ntransactions. Messages do not have guaranteed delivery and \ncan be delayed for days, are repudiatable and offer little \nassurance that the person who initiated the transaction is the \none paying. Despite all this, not only are premium SMS \nservices being used to pay for ringtones and games, but for \nother, more interesting models such as information service \nThis work was supported in part by Nokia.  \nP. D. Garner is a research student at the Department of Communication \nSystems, Lancaster University, UK (e-mail: p.garner@lancaster.ac.uk). \nR. C. Edwards is a lecturer at the Department of Communication \nSystems, Lancaster University, UK. (e-mail: r.edwards@lancaster.ac.uk). \nP. Coulton is a lecturer at the Department of Communication Systems, \nLancaster University, UK. (e-mail: p.coulton@lancaster.ac.uk). \nAuthorized licensed use limited to: Lancaster University Library. Downloaded on January 7, 2009 at 04:12 from IEEE Xplore.  Restrictions apply.\nsubscription and ticketing. While SMS is dominant for \nremote micropurchases (typically less than \u20ac10), it is \nunsuitable for higher priced goods and services, requiring a \nnumber of messages to complete a transaction and being \nprohibitively expensive to merchants, with SMS-operators \nretaining up to 50% of the transaction.  \nA number of factors can be identified when attempting to \nexplain the success of SMS as a payment platform: \nA. Installed user base \nSMS services are available to most GSM handsets from \nthe mid 1990s onwards; with handsets from 2000-on \nsupporting downloads via WAP, used for the delivery of \nringtones, games and wallpapers. This means that virtually \nall of the handsets in use in the GSM ecosystem can be used \nmake premium SMS transactions. \nB. Ease of use \nSMS use has accelerated strongly in the UK since true \ncross-operator messaging appeared in 1998. Nearly all users \nwill be comfortable using SMS, so applying the same \nprotocol to payments ensures a high degree of users willing \nto use premium SMS to purchase goods and services. \nC. Merchant Opportunity \nUnlike other m-commerce solutions, integrating SMS \npayments into merchants\u2019 business models is relatively \ninexpensive. Also, premium SMS does not suffer from the \ncrucial \u2018chicken-and-egg\u2019 problem of most new m-\ncommerce systems, where the success of the system is \ndependant on the client uptake, and of course, merchants are \nreluctant to commit to any new payment system without a \ncritical mass of users. With premium SMS m-commerce, the \nusers are already in place and in huge numbers.  \nWhilst SMS offers a pragmatic solution to low-value remote \npayments, there is a clear opportunity to provide a solution \nfor paying for higher value products and services in the \nmobile channel. To this end, we analyse card payments on \nthe fixed web, and consider how knowledge of handling card \npayments online can be transferred to mobile. \nII. CARD NETWORKS AND THE INTERNET\nThere have been a number of high-profile attempts to \ncreate a viable micropayment solution on the web, yet card \npayments are so entrenched in the offline space that online \npayment systems that did not successfully integrate cards \ninto their business model have failed. The two most often \ndiscussed are Flooz and Beenz, both of which collapsed in \nAugust 2001 [7]. Bridging the gap between voucher \npayment and traditional payment systems, users were free to \nspend Beenz at participating web merchants, or transfer \nthem to another Beenz account holder. However, users were \nnot able to convert any unused Beenz into a traditional \ncurrency, and when the service was dramatically suspended \nmany users lost a significant amount as retailers refused to \naccept Beenz as a means of payment. Four years on, no other \npayment mechanism has managed to challenge the \ndominance of card payments online, despite the clear need \nfor a workable micropayment solution. \nPayPal is the most successful of a number of online \npayment systems, but for many transactions simply acts as a \nway of enabling person-to-person transactions with their \ncredit or debit card [8]. It also enables merchants to \neconomically add web storefronts, as set-up costs are \nsignificantly lower than performing card-processing with a \ntraditional business bank account. By leveraging entrenched \ncard technology that has a high level of consumer trust into \nthe non-traditional payments arena, PayPal has been a \ntremendous success with $19Bn. total payment volume in \n2004 and over 70 million user accounts [10]. \nSome banks have partnered with card networks to \nimprove the security of card transactions by offering one-\ntime use credit card numbers for use when buying online. In \nthe US, Citibank, Discover and MBNA have implemented a \nsystem known as \u201ccontrolled payment numbers\u201d which \nallows cardholders to shop online without using their real \ncard number. Despite warnings from banks and card network \noperators, many merchants retain card numbers on their \nservers. This means that when a merchant database that \nholds live credit card numbers and is compromised by a \nhack attempt, losses due to fraud can be substantial.  By \nusing a one-time card number, any numbers gained from a \ncompromised database will not be able to be used in any \nfurther transactions. This kind of implementation requires \nthe end-user to download some software to the desktop in \norder to generate unique card numbers associated with their \nreal card. In some ways this improves the way the user \nmakes the transaction, in that they are never forced to leave \ntheir computer in order to find their wallet and retrieve their \ncard, interrupting the transactions and reducing the \nlikelihood it will complete successfully. Such schemes have \nnot been widely adopted however, and are disliked by \nmerchants as they prevent the questionable practice of \nstoring credit cards in order to easily facilitate repeat \ntransactions. American Express removed their \nimplementation of a similar system called \u201cPrivate \nPayments\u201d in April 2004, citing a lack of sufficient adoption \n[9]. \nCard fraud on the web continues to be a problem for card \nnetworks, with \u00a3505m lost to fraud in the UK during 2004 \n[11]. Some technical features have been added to modern \ncredit cards in order to further secure \u2018Cardholder Not \nPresent\u2019 transactions, such as the addition of Card \nVerification Value (CVV) digits. Not stored on the magnetic \nstrip, CVV is intended to ensure that whoever is initiating \nthe transaction actually holds the card in their possession. \nUnfortunately as most modern card harvesting techniques \ninvolve tricking users into submitting their card details to \nAuthorized licensed use limited to: Lancaster University Library. Downloaded on January 7, 2009 at 04:12 from IEEE Xplore.  Restrictions apply.\nwhat they believe to be a trustworthy source (known as \nphishing) and thus any attacker is likely to be able to attain \nthe CVV digits, rendering the system ineffective. Card \npayments on the web are by far the most popular way of \npaying for goods and services online, with 22m consumers \nusing cards to buy online in the UK in 2004 [12]. The heavy \ninvestment in smartcard technology rolled-out throughout \nEurope during 2005 has been relatively successful in \nreducing card fraud in the offline world, but the additional \nsecurity gained from smartcard implementation does nothing \nto prevent phising attacks or mitigate other card security \nthreats online. \nIII. CARD PAYMENTS FOR MOBILE\nBusiness models mooted with the launch of WAP services \nsuggested users may use a mobile wallet solution which \nwould allow WAP sites access to card details stored on the \nterminal authenticated with a user PIN. A good example is \nthe Nokia Wallet, first implemented in the Nokia 6310 \nphone from 2002, and present in most models since. \nMerchantMobile TerminalClient\nInitialises wallet with PIN \nat least 4 digits in length\nAdd credit card details\nClose wallet\nPoints WAP browser to commerce site\nProcess request and \nreturn checkout page\nPrompt user to enter card \ndetails to complete transaction\nChooses Wallet \noption from menu\nUser prompted to enter PIN\nDecrypts selected card with PIN\nAuto-fills form with card details\nPost details to merchant server\nFig. 1. UML diagram showing usual mobile wallet functionality. \nMobile wallets enabling macropayments can be \ncategorised as follows: \nA. Client-side Wallets \nClient wallets store payment information on a user\u2019s \nmobile terminal. They may integrate with the user\u2019s SIM in \norder to authenticate the user. Client side wallets are \nconceptually appealing to users, as they are analogous to \ncredit cards in the responsibility for keeping them safe relies \non the user. Wallets operating in hardware have a number of \ndisadvantages, namely that such systems are very hard to \nupdate once deployed, and are usually associated with a \nsingle bank or network operator.  \nB. MNO Server-side wallets \nHosted wallets mean that users\u2019 payment details are not \nheld on their device, but rather on a server operated by the \nMobile Network Operator. This server may store card details \nor other methods of payment for use with mobile commerce \ntransactions. For the user, such a system has a number of \nbenefits. If their device is lost or stolen, they can still easily \nuse their account on another device, unlike with a SIM-\nbased system. Also, MNOs are able to easily update the \nservices offered by the wallet solution, perhaps adding new \npayment methods. MNOs are in a strong position to provide \nsuch services, with great experience in pre-pay and post-pay \nconsumer billing. Also the consumer already has a trust \nrelationship with the MNO, a factor many new m-commerce \nstartups have found insurmountable. \nC. Third-party server side wallets \nAlthough most wallet-based solutions developed to date \nhave been provided by MNOs, third party wallets add a \ncritical feature; interoperability. The Vodafone m-pay \nsystem is limited to customers of Vodafone and works only \non pre-approved m-commerce sites. This kind of restriction \nclearly limits the potential of an MNO-run server, whereas a \nthird-party run system is free to recruit as many users and \npartners as possible. \nIV. REMOTE MOBILE MACROPAYMENT\nThe success of the proximity payment models developed \nin Asia is likely to power m-commerce growth in the near \nfuture as it is able to effectively leverage the synergy \nbetween the personal mobile terminal and payments in the \nproximity space. However, the authors believe there is scope \nfor solutions that allow users to make larger purchases, of a \nhigher value than currently common with m-commerce. \nIndeed, there are a number of critical factors converging that \nwill drive the use of mobile devices for remote \nmacropurchases. Consumers are now buying goods and \nservices online more than ever, and growth in e-commerce \ntransaction value continues to accelerate. In the second \nquarter of 2005, US retail e-commerce spending grew a \nstaggering 26% over the same period in 2004, with online \nsales accounting for 2.1% of total sales [16]. In the UK, \ndebit cards dominate offline purchases, with two thirds of \ncard sales made with debit cards. This trend is reversed \nonline, with 72% of all online sales made with a credit card \n[12]. These figures underline the dominance of card \npayments for online transactions. Consumer protection \nschemes with credit cards are significantly more robust than \nwith debit cards; if card users dispute a card transaction, \ncard companies usually refund the customer quickly and \nleave retailers to pursue the lost income. An interesting trend \nis some high-volume e-tailers, such as low-cost airlines, have \nintroduced a surcharge on users paying with a credit card \nrather than a debit card. This reflects the charging scheme \nAuthorized licensed use limited to: Lancaster University Library. Downloaded on January 7, 2009 at 04:12 from IEEE Xplore.  Restrictions apply.\nimposed on e-tailers, where often credit card processing fees \nare between 1% and 5% and debit cards are charged at a \nfixed fee.  \nPresently very few e-commerce websites are designed to \nallow mobile users to make purchases via a mobile browser. \nFew mobile browsers will render e-commerce sites well \nenough to a level to allow a pleasurable purchasing \nexperience for users. Alternatively e-commerce sites may \ndevelop special versions of their site to work specifically for \nmobile devices. However, the browsing capabilities of any \nPDA or phone that may access the page are so varied a \nconsistent user experience cannot be guaranteed. Also in the \nUK, mobile data (GPRS) costs remain high, at around \u00a31 per \nmegabyte for a casual user. Clearly for most customers, \npaying so much to browse a store and purchase an item is \nunlikely. \nIn the next section we detail our solution which allows \nmobile users to pay for goods and services with their mobile \nphone and a popular credit\/debit card. This system has a \nnumber of advantages over a browser-based application, \nincluding drastically reduced costs for mobile data and \nensuring consistent presentation on the target device. \nV. XEPS \u2013 XML-ENABLED PAYMENT SYSTEM\nA. Overview \nA number of major banks including HSBC, Barclays and \nNatWest use payment processing software from \nClearCommerce Corp. to allow their customers to take credit \ncard payments online to integrate payments into their e-\ncommerce solution. ClearCommerce provides an XML \npayment API for e-commerce website builders to send \ncomplete information about a transaction to a capturing \nserver at the associated financial institution. Typically an e-\ncommerce webserver will generate XML associated with a \ntransaction, including details about the products in the order, \nthe delivery address, total price etc. This document is then \nsent to the bank\u2019s processing servers, often with a HTTPS \n(Secure Sockets Layer-enabled) POST form. At this stage \nthe bank usually performs various levels of security analysis \non the transaction given the supplied data, and returns \nwhether the transaction has been allowed to proceed. If it \ndoes then the client\u2019s credit\/debit card will be charged. The \nXEPS (XML-Enabled Payment System) project attempts to \ncreate a framework whereby developers could add this \nfunctionality to mobile applications and complete a \ntransaction entirely from the device.  \nB. Python for Series 60 \nIn order to provide an environment for rapid prototyping \nand application development for more, Nokia have \ndeveloped Python for Series 60 (PyS60) [17] for use on their \nmost popular line of smartphones. Developing natively in \nC++ for Symbian requires significant code overhead just to \ncreate the correct GUI components. In Python, this is not \nrequired and users can start to test concepts in just a few \nlines of code. The platform also provides support for easy \nGUI development through a set of Python APIs specific to \nPyS60. With the release of version 1.2 the platform has been \nenhanced with HTTPS networking support for GPRS\/3G, \nBluetooth support, SMS sending and the ability to package \nprograms as a standalone installation. Python also enables \nrapid development by providing a command line \nenvironment which can be accessed in from a terminal on \nthe desktop over Bluetooth, ideal for algorithm testing.\nAlthough based on the 2.2.2 release of Python, PyS60 \ndoes not offer the complete XML package associated with \nstandard Python releases. Fortunately, researchers at the \nHelsinki Institute for Information Technology have ported \nthe pyexpat Python XML module from the full Python \nrelease for use with Python Series 60 [18]. This module \nenabled the generation of well-formed XML documents \nfrom the appropriate function calls. \nBrowsing \ncatalogue on \nmobile device\nAdd items to \ncart Checkout\nForm to enter \nshipping\/card \ndetails\nConfirm\nYes\/No\nxmPay \nperforms basic \nvalidation\nGenerate output \nXML\nPOST document over HTTPS\/SSL \nsecured GPRS conenction Returns output XML\nParse returned \nXML\nReturn status \nmessages to \napplication\nSuccess \u2013 generate receipt\nFig 2. Typical XEPS use case scenario \nC. Implementation \nThe application was tested using the most verbose output \nXML that may be used to describe a transaction. This is \nquite a sizeable document for a device with only limited \npower to generate, approximately 200 lines of XML. In a \nreal transaction, for something relatively simple, like a ticket \nfor a train, the necessary XML describing the transaction \nmay only be one-tenth of this length.  \nThe generated XML feed is able to completely describe a \ntransaction, including relevant shipping\/billing addresses, \nrecurrent order status, security features etc.  \nFrom the results show in table 3, it the current prototype \nimplementation takes a rather slow 65 seconds to simulate a \ncomplete transaction on a modern Nokia smartphone. \nHowever, this figure includes a number of complex steps: \n1) Generating a typical XML file \nAs demonstrated in table 1, this achieved relatively \nquickly and only contributes 5 seconds to the total \nAuthorized licensed use limited to: Lancaster University Library. Downloaded on January 7, 2009 at 04:12 from IEEE Xplore.  Restrictions apply.\nTABLE I \nMINIMAL XML GENERATION TIMES\nPlatform Time (seconds) \nNokia 3650, Python 2.2.2, Symbian 6, S60 v1.0 8 \nNokia 6600 Python 2.2.2, Symbian 7, S60 v2.0 8 \nNokia 6630, Python 2.2.2, Symbian 8, S60 v2.0 5 \nTime taken to generate the minimal XML required for a successful \ntransaction.\ntransaction time. \n2) Initiating GRPS session \nThis establishing a connection on the 2.5G packet \nnetworks used in GSM is often time consuming. On some \ndevices the connection remains permanently active. This \nis expected to drastically reduce the transaction time. \n3) HTTPS handshake \nOnly recently have regular (not more advanced PDA-style \ndevices) shipped with certificate authority (CA) root \ncertificates to facilitate an HTTP connection using SSL or \nTLS encryption. \nD. Use Case Scenarios \nThe XEPS software is available as a Python module, \ndeveloped as a proof of concept. It is envisaged that a \nrelease version would be suitable for inclusion by \napplication developers in commercial software.  \nAlthough it is certainly possible to buy goods and services \nwith a conventional mobile phone using a browser \ndeveloped specifically for the device, it is certainly not a \npleasant user experience. Despite the widespread rollout of \nUMTS across Western Europe, mobile data remains \nexpensive and high-speed coverage is patchy, particularly \noutside of urban centres.  \nWith larger screens and better interfaces, mobile devices \nare indeed capable of providing a comfortable browsing \nenvironment for a large range of products, but as described \nabove, using mobile data networks for user applications such \nas a product catalogue is infeasible. An enterprise could \ndeploy an install of its catalogue to customers offline to their \ndevices, and with XEPS, easily integrate online sales \ndirectly from the device. This would allow users to browse a \nproduct catalogue without having the cost and inconvenience \nof using mobile data networks. Of course, this will make the \nuser interface much quicker, as pages and images will not \nneed to be downloaded. Additionally, mobile browsers do \nnot allow for sophisticated user interface controls that would \nmake a product catalogue much easier to use on a \nconstrained device, such as softkey-accessible popup menus. \nFor a product catalogue that is regularly updated, when the \ndevice has access to a suitable broadband connection, \nupdates could be downloaded and the product catalogue \nupdated on the device. \nE. System Limitations \nIn order to operate XEPS, a merchant requires a card \nprocessing facility with a financial service provider that \nsupports the ClearCommerce payment gateway. XEPS sends \nauthentication information to the payment processing server \nwhen initiating a transaction, in order to identify the \nmerchant account. This is comprised of a username, \npassword and account number. In the current prototype \nsoftware, there is no way of protecting this information, and \ncan be read from the source Python files with any text-\nviewer. Clearly this represents an unacceptable security risk, \nas an attacker with these authentication details would be \neasily able to create fraudulent transactions. However, valid \ncredit card details would still be required so the impact of \nthe attack is diminished. A production version of the \nsoftware would most likely be in a compiled language so the \nattack would not be as trivial. However, this still represents \nan unacceptable security risk, so some other measures have \nbeen considered to alleviate the problem. \nA solution would be TrustZone technology championed \nby ARM, in order to provide a separate, secure domain at a \nchip level. TrustZone is implemented in within the processor \ncore, with system security elements designed into core \nhardware. A trusted application would be able to secure and \nencrypt the necessary login details to prevent the attack \ndescribed above. \nVI. CONCLUSION\nIt is clear from the sources presented herein that card \npayments are going to remain the de facto standard for \npersonal electronic payments in some form or another for the \nnear future. Many entrants more suited to use on either the \nweb or mobile devices have tried and failed to gain enough \nmarket share to present a viable payment solution; the \nmobile industry must look to familiar payment methods to \nencourage user adoption of new payment schemes. Although \nonly a proof of concept, the XEPS payment system \ndescribed here allows developers to utilise the consumer \nawareness enjoyed by card networks to easily deploy retail \nTABLE 2 \nCOMPLETE XML GENERATION TIMES\nPlatform Time (seconds) \nNokia 3650, Python 2.2.2, Symbian 6, S60 v1.0 16 \nNokia 6600 Python 2.2.2, Symbian 7, S60 v2.0 13 \nNokia 6630, Python 2.2.2, Symbian 8, S60 v2.0 7 \nTime taken to generate the complete XML document. \nTABLE 3 \nTOTAL TRANSACTION TIMES\nPlatform Time (seconds) \nNokia 3650, Python 2.2.2, Symbian 6, S60 v1.0 No https support \nNokia 6600 Python 2.2.2, Symbian 7, S60 v2.0 75 \nNokia 6630, Python 2.2.2, Symbian 8, S60 v2.0 65 \nGenerate minimal XML file, initiate GPRS connection, establish \nHTTPS connection with remote webserver, post generated document and \nwrite returned XML to a local file. \nAuthorized licensed use limited to: Lancaster University Library. Downloaded on January 7, 2009 at 04:12 from IEEE Xplore.  Restrictions apply.\napplications in a mobile environment, and provides a way of \npurchasing higher value goods and services in a way familiar \nto most end-users. \nACKNOWLEDGMENT\nThe authors wish to thank Nokia for the provision of \nphones for the development of this project \nREFERENCES\n[1] Mintel, Mobile Downloads, August 2005. \n[2] Electronic Payments International, Mobile Payments: Is there \nanybody out there?, vol. 167, May 2001. \n[3] IT Week, Motorola turns mobile phone into wallet, Oct. 2004, \nhttp:\/\/www.itweek.co.uk\/2126002\n[4] C. Swedberg, \u201cDeveloping RFID-Enabled Phones\u201d, RFID Journal, \nJuly 2004, http:\/\/www.rfidjournal.com\/article\/articleview\/1020\/1\/1\/  \n[5] K. Zafar, \u201cThe WAP Gap: Wireless Security and the Wireless \nApplication Protocol\u201d, viewed Oct. 2005, \nhttp:\/\/www.barnesandnoble.com\/offers\/wapgap.asp   \n[6] The Shosteck Group, \u201cPremium SMS becomes a significant \ncontributor to AMPU\u201d,  http:\/\/www.shosteck.com\/news\/jul03.htm, \nJuly 2003 \n[7] H. Godschalk, \u201cFailure of Beenz and Flooz Indicates the End of \nDigital Web-Currencies?\u201d, Electronic Payment Systems Observatory \nNewsletter, Nov. 2001. \n[8] P. Garner, R.Edwards, \u201cPerson to Person Mobile Commerce\u201d, \npresented at Mobile Multimedia Communications Conference, \nMunich, Germany, Oct. 6-8th, 2003. \n[9] J. Quittner, \u201cA Battle\u2019s Breaking Out Over Phishing Prevention\u201d, \nBank Technology News, July 2004, available \nhttp:\/\/tinyurl.com\/4zqwu  \n[10] BusinessWeekOnline \u201cPaypal Spreads Its Wings\u201d, May 2005, \navailable http:\/\/tinyurl.com\/bruk9\n[11] CardWatch, \u201cCard Fraud Overview\u201d, viewed Oct. 2005 available \nhttp:\/\/tinyurl.com\/bg8ka  \n[12] APACS, \u201cThe Way We Pay\u201d Sept. 2005, www.apacs.org.uk  \n[13] Octopus Cards, http:\/\/www.octopuscards.com Nov. 2005 \n[14] EuroStat, Quarterly Rail Passengers Transported, viewed Nov. 2005 \navailable http:\/\/epp.eurostat.cec.eu.int  \n[15] M. Brockerhoff. (2000, Sep.) \u201cAn Urbanizing World\u201d, Population \nBulletin \u2013 Population Reference Bureau, Vol. 55, No. 3 \n[16] US Census Bureau , \u201cQuarterly Retail E-Commerce Sales 2nd Quarter \n2005, available \nhttp:\/\/www.census.gov\/mrts\/www\/data\/html\/05Q2.html   viewed \nNov. 2005. \n[17] Nokia, Python for Series 60, \nhttp:\/\/www.forum.nokia.com\/main\/0,,034-821,00.html\n[18] Pyexpat for Series 60, \u201cHelsinki Institute for Information Research\u201d, \nhttp:\/\/pdis.hiit.fi\/pdis\/download\/pyexpat\/  \nP. Garner (M\u201901) is a PhD candidate at the \nDepartment of Communication Systems at Lancaster \nUniversity, UK. His primary research interest is \nmobile payment technology and has published a \nnumber of papers in the field. He holds a BEng in \nCommunication Engineering from Lancaster \nUniversity.  \nR. Edwards (M\u201900) Reuben has been a member of \nLancaster University since 1991, graduating with a \nBachelors degree in Electronic Engineering and a PhD \nin Communication Systems.  Reuben is currently the \nUniversity Dean at Lancaster University, a lecturer in \nCommunication Systems and Chair of the Lancaster \nUniversity Alumni Association. In his spare time \nReuben is an Executive Director of mobile software company m-ventions \nLtd. \nP. Coulton (M\u201998) is a Senior Lecturer in the \nDepartment of Communication Systems at Lancaster \nUniversity. Paul has over 10 years' research and \ndevelopment experience in mobile systems and \napplications and has published extensively. The main \nfocus of his current research surrounds innovative m-\ncommerce solutions with a particular emphasis on \nmobile entertainment. He holds a PhD from Lancaster University and \nrecently chosen as a founding member of the Forum Nokia Champion \nprogram, recognising leaders in mobile development.\nAuthorized licensed use limited to: Lancaster University Library. Downloaded on January 7, 2009 at 04:12 from IEEE Xplore.  Restrictions apply.\n"}