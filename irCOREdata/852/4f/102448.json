{"doi":"10.1109\/IGARSS.2002.1027166","coreId":"102448","oai":"oai:epubs.surrey.ac.uk:1908","identifiers":["oai:epubs.surrey.ac.uk:1908","10.1109\/IGARSS.2002.1027166"],"title":"Digital image-in-image watermarking for copyright protection of satellite images using the fast Hadamard transform","authors":["Ho, Anthony T. S.","Shen, Jun","Tan, Soon Hie","Kot, Alex C."],"enrichments":{"references":[],"documentType":{"type":1}},"contributors":[],"datePublished":"2002-06-24","abstract":"<p>In this paper, a robust and efficient digital image watermarking algorithm using the fast Hadamard transform (FFIT) is proposed for the copyright protection of satellite images. This algorithm can embed or hide an entire image or pattern as a watermark such as a company's logo or trademark directly into the original satellite image. The performance of the proposed algorithm is evaluated using a benchmarking tool called Stirmark. Results show that this algorithm is very robust and can survive up to 60% of all Stirmark attacks. These attacks were tested on a number of satellite test images of size 512\/spl times\/512\/spl times\/8 bit, embedded with a watermark image of size 64\/spl times\/64\/spl times\/8 bits. The simplicity of the fast Hadamard transform also offers a significant advantage in shorter processing time and ease of hardware implementation.<\/p","downloadUrl":"","fullTextIdentifier":null,"pdfHashValue":null,"publisher":null,"rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:epubs.surrey.ac.uk:1908<\/identifier><datestamp>\n      2017-10-31T14:03:36Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      74797065733D636F6E666572656E63655F6974656D<\/setSpec><setSpec>\n      6469766973696F6E733D656E67616E64706879736963616C736369656E636573:436F6D707574696E67<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/epubs.surrey.ac.uk\/1908\/<\/dc:relation><dc:title>\n        Digital image-in-image watermarking for copyright protection of satellite images using the fast Hadamard transform<\/dc:title><dc:creator>\n        Ho, Anthony T. S.<\/dc:creator><dc:creator>\n        Shen, Jun<\/dc:creator><dc:creator>\n        Tan, Soon Hie<\/dc:creator><dc:creator>\n        Kot, Alex C.<\/dc:creator><dc:description>\n        <p>In this paper, a robust and efficient digital image watermarking algorithm using the fast Hadamard transform (FFIT) is proposed for the copyright protection of satellite images. This algorithm can embed or hide an entire image or pattern as a watermark such as a company's logo or trademark directly into the original satellite image. The performance of the proposed algorithm is evaluated using a benchmarking tool called Stirmark. Results show that this algorithm is very robust and can survive up to 60% of all Stirmark attacks. These attacks were tested on a number of satellite test images of size 512\/spl times\/512\/spl times\/8 bit, embedded with a watermark image of size 64\/spl times\/64\/spl times\/8 bits. The simplicity of the fast Hadamard transform also offers a significant advantage in shorter processing time and ease of hardware implementation.<\/p><\/dc:description><dc:date>\n        2002-06-24<\/dc:date><dc:type>\n        Conference or Workshop Item<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:format>\n        text<\/dc:format><dc:language>\n        en<\/dc:language><dc:identifier>\n        http:\/\/epubs.surrey.ac.uk\/1908\/1\/fulltext.pdf<\/dc:identifier><dc:identifier>\n          Ho, Anthony T. S., Shen, Jun, Tan, Soon Hie and Kot, Alex C.  (2002) Digital image-in-image watermarking for copyright protection of satellite images using the fast Hadamard transform  In: IEEE International Geoscience and Remote Sensing Symposium.     <\/dc:identifier><dc:relation>\n        10.1109\/IGARSS.2002.1027166<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/epubs.surrey.ac.uk\/1908\/","10.1109\/IGARSS.2002.1027166"],"year":2002,"topics":[],"subject":["Conference or Workshop Item","PeerReviewed"],"fullText":"Digital Image-in-Image Watermarking For Copyright Protection \nOf Satellite Images Using the Fast Hadamard Transform \nAnthony T.S. Ho, Jun Shen, Soon Hie Tan, Alex C. Kot \n \nSchool of Electrical and Electronic Engineering \nNanyang Technological University \nNanyang Avenue \nSingapore 639798 \nEmail: etsho@ntu.edu.sg \n \nAbstract-In this paper, a robust and efficient digital image \nwatermarking algorithm using the fast Hadamard transform \n(FHT) is proposed for the copyright protection of satellite \nimages. This algorithm can embed or hide an entire image or \npattern as a watermark such as a company\u2019s logo or trademark \ndirectly into the original satellite image. \n \n      The performance of the proposed algorithm is evaluated \nusing a benchmarking tool called Stirmark. Results show that \nthis algorithm is very robust and can survive up to 60% of all \nStirmark attacks. These attacks were tested on a number of \nsatellite test images of size 512\u00d7512\u00d78bit, embedded with a \nwatermark image of size 64\u00d764\u00d78 bits. The simplicity of the fast \nHadamard transform also offers a significant advantage in \nshorter processing time and ease of hardware implementation. \n   \n      Index Terms:   Fast Hadamard Transform, Satellite Images, \nCopyright Protection, Digital Watermarking \n \nI   INTRODUCTION \n \n      With the advent of the Internet, the online purchasing and \ndistribution of satellite images can now be performed \nrelatively easily. Over the past few years, the technology of \ndigital watermarking has emerged as a leading candidate that \ncould solve the problems of legal ownership and content \nauthentications for digital multimedia data. \n \n       A great deal of research efforts has been focused on \ndigital image watermarking in recent years. The techniques \nproposed so far can be divided into two main groups. One is \nthe spatial domain approach. The simplest example is to \nembed a watermark into the least significant bits (LSBs) of \nthe image pixels [1]. The other is the frequency domain \napproach. Cox et al. [2] used the spread spectrum \ncommunication for digital multimedia watermarking. They \nembedded a Gaussian distributed sequence into the \nperceptually most significant frequency components of \ncontainer image. Hsu and Wu [3] embedded an image \nwatermark into the selectively modified middle frequency of \ndiscrete cosine transform (DCT) coefficients of the container \nimage.  \n \n     The major problem with many watermarking schemes is \nthat they are not very robust against different types of image \nmanipulations or attacks such as the ones found in Stirmark. \nMoreover, some of these techniques are quite complicated to \nimplement in real-time. In this paper, we propose a fast \nHadamard transform (FHT) based watermarking approach. \nGrayscale image can be used as watermark, which is inserted \ninto Hadamard coefficients of sub-blocks of the original \ncontainer image.  \n \n       This paper is organized as follows: the forward and \nreverse transformation of FHT and the choice of FHT domain \nis described in Section II. In Section III, image embedded \nwatermarking algorithms are discussed. Experiment results \nunder Stirmark attacks on a satellite image and the relevant \ndiscussions are presented in Section IV. Finally, the \nconclusion is given in Section V. \n \nII 2D-HADAMARD TRANSFROM OF IMAGE \n \n     The 2D-Hadamard transform has been used extensively in \nimage processing and image compression [4].  \n     Let [U] represents the original image and [V] the \ntransformed image, the 2D-Hadamard transform is given by:                    \n                                  [ ] [ ]\nN\nnHUnHV =                     (1) \nwhere Hn represents an N\u00d7N Hadamard matrix, N=2n, \nn=1,2,3\u2026, with element values either +1 or \u20131. The \nadvantages of Hadamard transform are that the elements of \nthe transform matrix Hn are simple: they are binary, real \nnumbers and the rows or columns of Hn are orthogonal.  \n      The inverse 2D-Hadamard transform (IHT) is given as:                     \n                       [ ] [ ] [ ]\nN\nHVH\nHVHU nnnn ==\n\u2212 *1         (2) \nIn our algorithm, the transform process is carried out based on \nthe 8\u00d78 sub-blocks of the whole image, the third order \nHadamard transform matrix H3 is used.  \n                       \n\uf8fa\uf8fa\n\uf8fa\uf8fa\n\uf8fa\uf8fa\n\uf8fa\uf8fa\n\uf8fa\uf8fa\n\uf8fa\n\uf8fb\n\uf8f9\n\uf8ef\uf8ef\n\uf8ef\uf8ef\n\uf8ef\uf8ef\n\uf8ef\uf8ef\n\uf8ef\uf8ef\n\uf8ef\n\uf8f0\n\uf8ee\n\u2212\u2212\u2212\u2212\n\u2212\u2212\u2212\u2212\n\u2212\u2212\u2212\u2212\n\u2212\u2212\u2212\u2212\n\u2212\u2212\u2212\u2212\n\u2212\u2212\u2212\u2212\n\u2212\u2212\u2212\u2212\n=\n11111111\n11111111\n11111111\n11111111\n11111111\n11111111\n11111111\n11111111\n3H\n         (3) \n33110-7803-7536-X\/02\/$17.00 (C) 2002 IEEE\n       In H3, the number of sign transitions for row 1 to row 8 is \n0, 7, 3, 4, 1, 6, 2 and 5 according to equation (3). The number \nof sign changes is referred to as sequency [4]. Zero sign \ntransitions correspond to DC and a large number of sign \ntransitions correspond to high frequency. In Hadamard matrix \nH3, the elements are not arranged in increasing sequency, but \nin Hadamard order. It is possible that in the watermarking \nprocess, some of the watermark information can be embedded \ninto the low frequency AC components. This increases the \nmark reliability and makes it more difficult to attack and \nremove. \n \n     Moreover, Hadamard transform has more useful middle \nand high frequency bands available, for hiding the watermark, \nas compared to other high coding gain transforms like DCT, \nat high noise environment. It has been shown that transforms \nincluding DCT are suitable for watermarking when the \nchannel noise is low [5]. But low channel noise is not always \nthe case. For low quality JPEG as well as some linear or \nnonlinear filtering, the processing noise is high. In these \ncases, the high gain transform watermarking methods are not \nvery robust. But middle and high frequency Hadamard \ntransform coefficients have components equivalent to where \nmany DCT low-frequency AC coefficients are located. So it \nis more likely that in high noise environment the Hadamard \ntransform bands would remain and unscathed. Another \nadvantage of using the FHT is that it has a shorter processing \ntime and its ease of hardware implementation. \n \nIII WATERMARKING IN FHT DOMAIN \n \n     The block diagram of the proposed watermarking system \nis shown in Figure 1: \n \n \n \n     \n               \n \n \n \n    Figure 1: Block diagram of \u201cblind\u201d watermarking system \n \n      The proposed watermarking algorithm can hide visually \nrecognizable patterns in the container image. In the \nwatermarking embedding process, the watermark image, \nw(x,y), is first transformed into FHT coefficients by equation \n(1). We use a grayscale image of size 64\u00d764 as a watermark \nfor testing. After transformation, 64\u00d764 Hadamard transform \ncoefficients are obtained. The DC component is stored in the \nkey file and the AC components are used for embedding.   \n \n       The original satellite image, f(x,y), is also decomposed \ninto a set of non-overlapped blocks of h\u00d7h, denoted by \nfk(x\u2019,y\u2019), k=0, 1, \u00b7\u00b7\u00b7, K-1, where the subscript k denotes the \nindex of blocks and K denotes the total number of blocks. In \nour experiment, the sub-block size of 8\u00d78 is used. The \nalgorithm pseudorandomly selects the sub-blocks for \nwatermark insertion using an m-sequence random number \ngenerator. The seed of m-sequence and initial state are stored \nin the key file. After that, FHT is performed on each selected \nsub-blocks of original image by equation (1). Thus for each \nsub-block, an 8\u00d78 matrix of Hadamard transform coefficients \nis obtained. Sixteen middle and high frequency components \nare used for embedding. If the watermark FHT coefficients \nare denoted by mi, the AC components of FHT coefficients of \noriginal image sub-blocks before and after inserting \nwatermark are denoted by xi and xi* respectively, and i\u2208(0, n], \nwith n the number of the watermarked coefficients which is \n16 in our experiment. The watermark strength factor is \ndenoted by\u03b1 . The embedding formula is \n                                       ii mx \u03b1=\n*                   (4) \n    We choose \u03b1 to be 0.8, an average value derived from the \nimage sub-block statistics. The original coefficient xi is \nreplaced by xi*. After the watermark insertion, a new 8\u00d78 \nmatrix of FHT coefficients of image sub-block is obtained. \nThe IFHT is then applied on the 8\u00d78 matrix using equation (2) \nto obtain the luminance value matrix of the watermarked \nimage sub-block, fk\u2019(x\u2019,y\u2019). After performing the watermark \ninsertion for all the relevant sub-blocks of the original image, \nthe watermarked image, f\u2019(x,y), is obtained and the hash file \nis generated for decoding process. The image-in-image \nwatermark embedding process is shown in Figure 2: (original \nimage spot.bmp marked with watermark image dmt.bmp) \n \n                                      \n       Original image                                                   Watermarked image      \n                                                 \n   Figure 2: Image-in-image watermarking embedding process \n \n     The received watermarked image is denoted by f\u2019\u2019(x,y). \nBy transforming all the relevant sub-blocks, fk\u2019\u2019(x\u2019,y\u2019), into \nthe FHT domain, we get all the Hadamard transform \ncoefficients embedded with the watermark. Using one of the \nsub-block FHT coefficients as an example, the watermark is \ninserted into the bottom right sixteen middle and high \nfrequency components. If these components are denoted by \nxi*\u2019, the retrieved watermark FHT coefficients are denoted by \nmi\u2019, and i\u2208 (0, n], with n the number of the watermarked \ncoefficients selected is 16. The watermark extraction formula \nis given as: \n                                      \n\u03b1\n'\n'\n\u2217\n=\ni\ni\nx\nm                          (5) \nAll the watermark FHT coefficients are extracted from the \nsub-blocks of the watermarked image. The AC coefficients \nOriginal Image \nWatermark  Watermark    \n    Insertion \nWatermarked \n     Image     Attack\/ \n  Distortion \n   Channel \n    Distorted \n Watermarked \n      Image \n \n   Watermark \n  Identification \nRecovered\nWatermark \nSecret Key \n+\nWatermark \n     image \n3312\n together with the DC component stored in hash file are \nrearranged into a 64\u00d764 FHT coefficients matrix. The \nextracted watermark image, w\u2019(x,y), is obtained by IFHT of \nthe 64\u00d764 Hadamard coefficients matrix using equation (2).  \n \nIV EXPERIMENT RESULTS AND DISCUSSIONS \n   \n      The experiment for the watermarking system is performed \nusing the MATLAB 6. Two container test images consist of \nspot.bmp and landsat.bmp are used. These images are of sizes \nof 512\u00d7512\u00d78bit. For the robustness test, we use the Stirmark \nthat contains approximately 90 different types of image \nmanipulations [6]. For our algorithm, a maximum image size \nof 256\u00d7256\u00d78bit can be hidden into the container satellite \nimage of size 512\u00d7512\u00d78bit. In the experiment, a grayscale \nimage dmt.bmp with size 64\u00d764\u00d78bit is used. The original \nand watermarked image examples are shown in figure 3: \n(spot.bmp marked with image dmt.bmp) \n \n                                   \n                Original image                    Watermarked image \n \n                                                                                                     \n             Original watermark               Extracted watermark   \n \n                Figure 3: Container and watermark image  \n \n      Results show that there were no perceptually visible \ndegradations on the watermarked images. The extracted \nwatermark is also highly correlated with the original \nwatermark with correlation factor 0.989. Sample results using \nStirmark are shown in Table 1: (spot.bmp is marked with \nimage dmt.bmp) \n Image operations  Extracted watermark         Correlation \n  Sharpening 3\u00d73 \n \n      0.9573 \n    1 rows 1 column   \n          removed \n                       \n     0.9866 \n   FMLR           \n       \n     0.9580 \n     Scaling 0.75 \n                       \n     0.9354 \n            JPEG \nCompression of factor   \n               30  \n     0.8688 \n   Change aspect ratio   \n      x_1.00_y_1.20 \n                       \n          0.8199 \n \n  Table 1: Results of some Stirmark tests for image-in-image \nembedding algorithm   \n \n     The image-embedding FHT domain watermarking \nalgorithm was able to survive up to 60% against the Stirmark \nattacks. This algorithm was robust under jitter attacks. \nCropping attacks up to 50% of the watermarked image could \nbe resisted. The proposed algorithm was able to resist \nfrequency mode Laplacian removal (FMLR) and 3\u00d73 \nsharpening attacks. It survived some level of JPEG \ncompression, up to a compression factor of 30. However, it \nperformed relatively poorly against 3\u00d73 Gaussian filtering, \n2\u00d72 median filtering and low factor JPEG compression \n(factor < 30).  It was not so effective against random \ngeometric transforms, such as shearing and general linear \ntransforms. However the simplicity of the FHT offered a \nsignificant advantage over the commonly used DCT and \nDWT techniques, in terms of ease of hardware \nimplementation. \n \nV CONCLUSION \n        \n      This paper has presented a watermarking technique for \nembedding grayscale image watermark into a container \nsatellite image based on the FHT. The experimental results \nshowed that the proposed method is robust against the \nStirmark attacks. Moreover, the Hadamard transform offers a \nsignificant advantage in shorter processing time and ease of \nhardware implementation. In future work, we plan to \ninvestigate the proposed algorithm against digital-analogue-\ndigital conversion attack that has potential application of \ncopyright protection for hardcopies and printed material of \nsatellite images.  \n \nREFERENCES \n \n[1]  R. G. van Schyndel, A. Z. Tirkel, and C. F. Osborne, \u201cA digital  \n       watermark,\u201d Proc. IEEE Int. Conf. Image Processing, vol. 2, pp. 86\u201390,  \n       1994. \n \n[2]  I. J. Cox, J. Kilian, F. T. Leighton, and T. Shamoon, \u201cSecure spread  \n      spectrum watermarking for multimedia,\u201d IEEE Trans. Image Processing,  \n      vol.6, pp. 1673\u20131687, Dec. 1997. \n \n[3]   C.-T. Hsu and J.-L. Wu, \u201cHidden digital watermarks in images,\u201d IEEE  \n        Trans. Image Processing, vol. 8, pp. 58\u201368, Jan. 1999. \n \n[4]   E. H. Hall, Computer Image Processing and Recognition, New York:  \n        Academic Press, 1979. \n \n[5]  A. N. Akansu and R. A. Haddad, Multiresolution Signal Decomposition:  \n       Transforms, Subbands and Wavelets, Academic Press Inc., 1992. \n \n[6] F. A. P. Petitcolas, R. J. Anderson, and M. G. Kuhn, \u201cAttacks on  \n      Copyright Marking Systems,\u201d in Proceedings of the Second International  \n      Workshop on Information Hiding, vol. 1525 of Lecture Notes in  \n      Computer Science, Springer,1998, pp 218-238.\n3313\n"}