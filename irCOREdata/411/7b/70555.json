{"doi":"10.1016\/S0097-8493(99)00119-3","coreId":"70555","oai":"oai:eprints.lancs.ac.uk:11649","identifiers":["oai:eprints.lancs.ac.uk:11649","10.1016\/S0097-8493(99)00119-3"],"title":"Design of an Object Model for a Context-Sensitive Tourist Guide","authors":["Cheverst, Keith","Davies, Nigel","Mitchell, Keith","Friday, Adrian"],"enrichments":{"references":[{"id":16305593,"title":"Balancing push and pull for data broadcast.","authors":[],"date":"1997","doi":"10.1145\/253260.253293","raw":"Acharya S, Franklin M, Zdonik S. Balancing push and pull for data broadcast. Proceedings of the ACM SIGMOG '97, Tuscon, Arizona, 1997.","cites":null},{"id":16305592,"title":"Broadcast disks: data management for asymmetric communication environments.","authors":[],"date":"1994","doi":"10.1145\/568271.223816","raw":"Acharya S, Alonso R, Franklin M, ZDonik S. Broadcast disks: data management for asymmetric communication environments. Proceedings SIGMOD '95, San Jose, California, 1994. p. 199}210.","cites":null},{"id":16305587,"title":"Caches in the air: disseminating information in the guide system.","authors":[],"date":"1999","doi":"10.1109\/mcsa.1999.749273","raw":"Davies N, Cheverst K, Mitchell K, Friday A. Caches in the air: disseminating information in the guide system. Proceedings of the Second IEEE Workshop on Mobile Computing Systems and Applications (WMCSA '99). New Orleans, US: IEEE Press, 1999. p. 11}9.","cites":null},{"id":16305590,"title":"Context-aware applications: from the laboratory to the market place.","authors":[],"date":"1997","doi":"10.1109\/98.626984","raw":"Brown PJ, Bovey JD, Chen X. Context-aware applications: from the laboratory to the market place. IEEE Personal Communications 1997;97:58}64.","cites":null},{"id":16305589,"title":"Context-aware computing applications.","authors":[],"date":"1994","doi":"10.1109\/wmcsa.1994.16","raw":"Schilit B, Adams N, Want R. Context-aware computing applications. Proceedings of the Workshop on Mobile Computing Systems and Applications, Santa Cruz, CA, U.S., 1994.","cites":null},{"id":16305586,"title":"Developing a context sensitive tourist guide.","authors":[],"date":"1998","doi":"10.1016\/s0097-8493(99)00119-3","raw":"Davies N, Mitchell K, Cheverst K, Blair G. Developing a context sensitive tourist guide. Proceedings of the First Workshop on HCI and Mobile Devices. UK: Glasgow, 1998.","cites":null},{"id":16305594,"title":"Lancaster's EDNET linking Lancaster's schools to the internet. Panel presentation at MobiCom97,","authors":[],"date":"1997","doi":null,"raw":"Forde B. Lancaster's EDNET linking Lancaster's schools to the internet. Panel presentation at MobiCom97, Budapest, Hungary, September 26}30, 1997. Source for slides available at: http:\/\/148.88.16.66\/techinfo\/ MobiCom97\/index.htm, 1997. K. Cheverst et al. \/ Computers & Graphics 23 (1999) 883}891 891","cites":null},{"id":16305591,"title":"Rapid prototyping of mobile context-aware applications: the cyberguide case study.","authors":[],"date":"1996","doi":"10.1145\/236387.236412","raw":"Long S, Kooper R et al. Rapid prototyping of mobile context-aware applications: the cyberguide case study. Proceedings of the Second ACM International Conference on Mobile Computing (MOBICOM), Rye, New York, U.S., 1996.","cites":null},{"id":16305588,"title":"The role of connectivity in supporting context-sensitive applications,","authors":[],"date":"1999","doi":"10.1007\/3-540-48157-5_19","raw":"Cheverst K, Davies N, Mitchell K, Friday A. The role of connectivity in supporting context-sensitive applications, Handheld Ubiquitous Computing '99, Karlsruhe, Germany, 1999, submitted for publication.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"1999-11","abstract":"This paper describes work carried out as part of the GUIDE project at Lancaster University. The overall aim of the project is to develop a context-sensitive tourist guide for visitors to the city of Lancaster. Visitors are equipped with portable GUIDE units which in turn provide interactive services and dynamically tailored web-based information reflecting the visitor's preferences and environmental context. In contrast to existing tourist systems all information in GUIDE is obtained dynamically using a city-wide wireless network infrastructure. The paper presents an overview of the GUIDE system, with particular focus on our design of an appropriate object model, capable of handling the high degree of flexibility required by GUIDE. In addition, the paper includes the results of our requirements analysis, the web-based application that has been developed to meet these requirements and our approach towards communicating information to portable GUIDE units in a timely and scaleable manner","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/70555.pdf","fullTextIdentifier":"http:\/\/eprints.lancs.ac.uk\/11649\/1\/cheverst%2Dc%26g%2Dimc1998.pdf","pdfHashValue":"cfacb1ccbb1847193ab4fd4f1a4f88fe20c69b70","publisher":"Elsevier Science Ltd.","rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:eprints.lancs.ac.uk:11649<\/identifier><datestamp>\n      2018-01-24T02:18:18Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      7375626A656374733D51:5141:51413735<\/setSpec><setSpec>\n      74797065733D6F74686572<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n    \n      \n        Design of an Object Model for a Context-Sensitive Tourist Guide<\/dc:title><dc:creator>\n        Cheverst, Keith<\/dc:creator><dc:creator>\n        Davies, Nigel<\/dc:creator><dc:creator>\n        Mitchell, Keith<\/dc:creator><dc:creator>\n        Friday, Adrian<\/dc:creator><dc:subject>\n        QA75 Electronic computers. Computer science<\/dc:subject><dc:description>\n        This paper describes work carried out as part of the GUIDE project at Lancaster University. The overall aim of the project is to develop a context-sensitive tourist guide for visitors to the city of Lancaster. Visitors are equipped with portable GUIDE units which in turn provide interactive services and dynamically tailored web-based information reflecting the visitor's preferences and environmental context. In contrast to existing tourist systems all information in GUIDE is obtained dynamically using a city-wide wireless network infrastructure. The paper presents an overview of the GUIDE system, with particular focus on our design of an appropriate object model, capable of handling the high degree of flexibility required by GUIDE. In addition, the paper includes the results of our requirements analysis, the web-based application that has been developed to meet these requirements and our approach towards communicating information to portable GUIDE units in a timely and scaleable manner.<\/dc:description><dc:publisher>\n        Elsevier Science Ltd.<\/dc:publisher><dc:date>\n        1999-11<\/dc:date><dc:type>\n        Other<\/dc:type><dc:type>\n        NonPeerReviewed<\/dc:type><dc:format>\n        application\/pdf<\/dc:format><dc:identifier>\n        http:\/\/eprints.lancs.ac.uk\/11649\/1\/cheverst%2Dc%26g%2Dimc1998.pdf<\/dc:identifier><dc:relation>\n        http:\/\/dx.doi.org\/10.1016\/S0097-8493(99)00119-3<\/dc:relation><dc:identifier>\n        Cheverst, Keith and Davies, Nigel and Mitchell, Keith and Friday, Adrian (1999) Design of an Object Model for a Context-Sensitive Tourist Guide. Elsevier Science Ltd., Computers & Graphics.<\/dc:identifier><dc:relation>\n        http:\/\/eprints.lancs.ac.uk\/11649\/<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/dx.doi.org\/10.1016\/S0097-8493(99)00119-3","http:\/\/eprints.lancs.ac.uk\/11649\/"],"year":1999,"topics":["QA75 Electronic computers. Computer science"],"subject":["Other","NonPeerReviewed"],"fullText":"*Corresponding author. Tel.: #44 (0)1524 594539.\nE-mail addresses: kc@comp.lancs.ac.uk (K. Cheverst),\nmitchelk@comp.lancs.ac.uk (K. Mitchell), nigel@comp.lancs.\nac.uk (N. Davies)\nComputers & Graphics 23 (1999) 883}891\nIMC '98\nDesign of an object model for a context sensitive tourist\nGUIDE\nKeith Cheverst*, Keith Mitchell, Nigel Davies\nDistributed Multimedia Research Group, Department of Computing, Lancaster University, Lancaster, LA1 4YR, UK\nAbstract\nThis paper describes work carried out as part of the GUIDE project at Lancaster University. The overall aim of the\nproject is to develop a context-sensitive tourist guide for visitors to the city of Lancaster. Visitors are equipped with\nportable GUIDE units which in turn provide interactive services and dynamically tailored web-based information\nre#ecting the visitor's preferences and environmental context. In contrast to existing tourist systems all information in\nGUIDE is obtained dynamically using a city-wide wireless network infrastructure. The paper presents an overview of the\nGUIDE system, with particular focus on our design of an appropriate object model, capable of handling the high degree\nof #exibility required by GUIDE. In addition, the paper includes the results of our requirements analysis, the web-based\napplication that has been developed to meet these requirements and our approach towards communicating information\nto portable GUIDE units in a timely and scaleable manner. ( 1999 Elsevier Science Ltd. All rights reserved.\n1. Introduction\nThe prospect of providing city visitors with dynamic\nand context-sensitive multimedia information whilst on\nthe move is both novel and exciting and raises many\ninteresting research issues. The GUIDE project [1}3] is\ncurrently examining these issues by developing systems\nand application-level support for hand-portable multi-\nmedia GUIDE units with wireless network connectivity,\nenabling context-sensitive information to be presented to\ncity visitors whilst they roam.\nThe support for context-sensitive information by\nGUIDE has been strongly in#uenced by the work of\nSchilit [4] and Brown [5]. In essence, the notion of\ncontext is required in order to provide GUIDE units\nwith the intelligence to adapt their behaviour in order to\nmeet both the preferences of the visitor and the state of\nthe visitor's current environment.\nAt an early design stage, the fundamental decision was\nmade to base the GUIDE system around a distributed\ncellular architecture, comprising a number of strategi-\ncally located base stations. This architecture enables in-\nformation to be broadcast to a portable GUIDE unit,\nonce it enters an area of cell coverage. For reasons of\nscalability and because of the limited amount of band-\nwidth available in any one cell, it was decided that some\nform of broadcast-based approach to data dissemination\nshould be used for transferring information to the port-\nables units. Each base station being responsible for\nbroadcasting information that is largely speci\"c to its\nown geographic location. However, because of the need\nto enable visitors to request speci\"c information, includ-\ning information held on the internet, each broadcast\nschedule shall also have some number of user request\nslots. Fig. 1 illustrates this basic GUIDE architecture\nand shows how the GUIDE system utilises web-based\ntechnologies in order to disseminate information to mobile\nGUIDE units. In e!ect, the overall GUIDE system may be\nviewed as a central web server that mobile clients access\nvia the WaveLAN wireless communications network.\nAn alternative to the network-based approach, would\nhave been to produce some form of stand-alone system in\n0097-8493\/99\/$ - see front matter ( 1999 Elsevier Science Ltd. All rights reserved.\nPII: S 0 0 9 7 - 8 4 9 3 ( 9 9 ) 0 0 1 1 9 - 3\nFig. 1. The GUIDE Architecture.\nwhich the entire working set of information is stored on\nthe end system. Such an approach was adopted by the\nCyberguide project [6]. This approach is, however,\nunsuitable for supporting the #exibility required by\nGUIDE. For example, the stand-alone approach cannot\nsupport dynamic changes to information. So, although\nsuch a system would be capable of presenting informa-\ntion based on a visitor's changing geographic coordi-\nnates, the information displayed could have become out\nof date since the units working set was loaded. Another\nproblem with this approach, concerns the size of the\nworking set which would need to be stored. A truly useful\nvisitor's guide should, for example, contain information\nstored in di!erent languages, for di!erent reading ages\nand assuming di!erent levels of background knowledge\nfor each location. The storage requirements for storing\nall the di!erent possible permutations would be consider-\nable and beyond the capacity of the current generation of\nportable machines. One further reason for rejecting this\napproach was based on the fact that, in the medium term,\nportable web-client-based machines will become avail-\nable which, compared to stand-alone PCs, will consume\nless power and be cheaper.\nIn this paper we present the results of our requirements\nanalysis and development work on the GUIDE system.\nIn particular, we focus on our design of an appropriate\nobject model, capable of handling the high degree of\n#exibility required by GUIDE.\n2. Requirements\nFollowing a series of semi-structured interviews with\nmembers of Lancaster's Tourist Information Centre\n(TIC), we obtained four key requirements for an intelli-\ngent visitor guide, namely: (i) the system needs to be\n#exible, (ii) the information presented by the system\nshould be context-sensitive, (iii) the system should sup-\nport dynamic information and (iv) the system should\no!er access to interactive services.\nThis set of requirements and examples of the way in\nwhich the GUIDE application meets each requirement is\ndescribed below:\n2.1. Flexibility\nOne key requirement for the GUIDE system is that\nvisitors should be able to use the system as much or as\nlittle as they desire. For this reason, the GUIDE applica-\ntion presents visitors with a variety of choices for using\nthe system, e.g. enabling the visitor to search the system\nfor speci\"c information using a keyword search facility or\nenabling the visitor to prompt the system for information\nregarding the current location. Fig. 2 illustrates the user\ninterface presented to the visitor in order to enable them\nto select from various options (i.e. hypertext links) on the\ncurrently displayed page or to select an option by touch-\ning one of the buttons on the customised browser.\nBy selecting the tour button shown in the bottom\ncentre of the screen, the visitor can request the system to\ncreate a tailored tour of the city by touching. A &Guide\nTour Wizard' is provided to enable a visitor to quickly\nand easily select those attractions she particularly wishes\nto visit. The system is capable of directing visitors from\none location to the next, providing relevant information\nthroughout the tour. For example, Fig. 3 demonstrates\nthe way in which the GUIDE system presents the city\nvisitor with both detailed textual descriptions and pic-\ntures in order to assist the visitor in reaching the next\npart of the tour.\nIn addition to receiving directions by description, we\nhave found that some users prefer to be presented with an\nannotated map showing the direction in which they\nshould travel to reach the next location. The GUIDE\n884 K. Cheverst et al. \/ Computers & Graphics 23 (1999) 883}891\nFig. 2. The GUIDE information page.\napplication provides such a facility and an example of the\nkind of map presented to the visitor by the GUIDE\nsystem is shown in Fig. 4.\nIf a visitor does not wish to be taken along a tour but\nwould rather be left to roam the city, but still have the\nability to ask the system for speci\"c pieces of information\nalong the way, then the visitor can simply opt not to\ncreate a tour and can interact with the system using the\ninterface shown in Fig. 2.\n2.2. Context-sensitive information\nA further requirement for GUIDE was that the in-\nformation presented to visitors should be context sensi-\ntive. There are two classes of context that should be used,\nnamely personal and environmental. Perhaps, the most\nsigni\"cant piece of personal context is the visitor's inter-\nests. Such interests can be as diverse as history, architec-\nture, maritime activities, cotton production and antique\ndealerships. Additional personal context that should be\nused includes: the visitor's current location, the amount\nof time they wish to spend on their visit, their budget (to\ncover entrance fees, etc.) and any refreshment preferences\nthey might have. Examples of environmental context to\nbe used as context include: the time of day, the weather,\nthe season and the state of the city's transport system, e.g.\nthe location of tra$c congestion or the closure of walk-\nways. If a visitor has requested a tour of the city, then the\nGUIDE system should use both personal and environ-\nmental context to create a suitably tailored tour. Context\nshould also be used when presenting information to the\ncity visitor. For example, information should be present-\ned in a way that is suitable given the age and technical\nbackground of the visitor and there preferred reading\nlanguage.\n2.3. Support for dynamic information\nDuring our study we found there to be a signi\"cant\nrequirement for the support of dynamic information.\nSuch information should be made available to visitors\nwhenever their context deems this to be appropriate. For\nexample, consider the hypothetical scenario in which\na visitor touring the city has expressed a particular\nK. Cheverst et al. \/ Computers & Graphics 23 (1999) 883}891 885\nFig. 3. The use of text and pictures to guide the visitor.\ninterest in Lancaster castle. When the visitor started their\ntour, the castle was closed to the public because the court\nroom, situated within the castle, was in session. The\nGUIDE system would, therefore, not have included\na visit to the castle in its recommended tour. However, if\nthe court session \"nished early then the GUIDE system\nshould use this dynamic information to notify the visitor\nthat the castle is now open to the public and optionally\nmodify their tour schedule to include a visit to the castle.\nFurther examples of dynamic information include\nchanges in the weather and average waiting times at local\nattractions.\n2.4. Support for interactive services\nStudying tourist activities in Lancaster revealed that\na surprising number of visitors make repeat visits to the\nTIC, often during the course of a single day. In most cases\nthis is because they require additional information on\nactivities or landmarks, they have speci\"c questions\nwhich require interaction with a member of the TIC, or\nthey wish to make use of a service o!ered by the TIC,\nmost commonly the booking of accommodation. In addi-\ntion to supporting interactive services based around the\nTIC, the GUIDE system also provides support for other\ninteractive services, such as the remote booking of cin-\nema tickets and accommodation as shown in Fig. 5.\n3. Object model\nA number of interesting issues arose during our design\nof an object model to satisfy the requirements described\nabove. One issue being how to manage the great variety\nof information which the GUIDE system should be ca-\npable of providing to city visitors. Our initial approach\nto this problem, was to create a large set of static HTML\npages, some of which would be stored locally and others\nwould be available via remote web servers. The problem\nwith this approach, was that it involved trying to create\na set of pages to match each possible permutation of\npersonal and environmental context for each and every\nlocation in the city. So, for example, a di!erent HTML\npage would be served for the Castle location if the visi-\ntor's main interest was refreshments to that served if the\nvisitor's main interest was medieval architecture. Clearly,\n886 K. Cheverst et al. \/ Computers & Graphics 23 (1999) 883}891\nFig. 4. The use of annotated maps to guide the visitor.\nthe two pages would contain a large degree of com-\nmonality, e.g. pictures of the castle and a summary of the\ncastle.\nIn an attempt to make use of this commonality, we\nadopted an approach which essentially involves the fus-\ning together of HTML-based packets of information,\nin order to dynamically compose the required HTML\npages. If we consider the castle-based example, then the\npackets of information would include various pictures of\nthe castle and the nearby cafeH and various pieces of text,\nincluding a summary of the castle, a description of the\ncastle's architecture and the menu o!ered by the nearby\ncafeH .\nThe actual interaction between the components of the\nobject model are illustrated below in Fig. 6. It is worth\nnoting that all components of the object model are Java\nbased.\nA visitor interacts with their GUIDE unit through\ntheir own local web browser. All HTTP requests are\nprocessed by the local web server object, which may in\nturn need to interact with other objects in order to service\nthe request. Should the visitor request other services,\nsuch as the creation of a tour, then the local web browser\ninvokes the services provided by the GUIDE control\nobject. This object is responsible for controlling and\ncommunicating with the various other system compo-\nnents, namely, the local position sensor object, the tour\ncreator object, the resolver object and the visitors pro\"le\nobject. The control object is also responsible for storing\nthe visitor's current location.\nThe function of the local position sensor object is to\nnotify the control object, via its receiveNewPosition\nmethod, whenever the city visitor enters a new or pre-\nviously visited location. A resolver object is then\nresponsible for creating new instances of landmark\nobjects based on the visitor's current preferences,\nwhich are stored in the visitor's pro\"le object. This\nobject supports a number of methods for returning\nthe visitor's details, e.g. the returnPreferredLanguage\nmethod, and these methods are invoked by either: the\ncontrol object, the tour creator object or the local\nweb server object.\nThe local web server object, interacts with the control\nand visitor's pro\"le objects in order to obtain the context\nfor dynamically creating a tailored HTML page formed\nfrom a collection of information packets. The local web\nserver also interacts with a local proxy object in case\nsome or all of the required information packets have been\nK. Cheverst et al. \/ Computers & Graphics 23 (1999) 883}891 887\nFig. 5. Booking cinema tickets via GUIDE's Interactive Services.\nFig. 6. The GUIDE object model.\ncached. If some of the packets are not available in the\nlocal cache then a request is made for the relevant\npackets to a remote web server using a free slot in the\nbroadcast schedule.\nThe design of this object model satis\"es the require-\nments for #exibility, context sensitivity, support for dy-\nnamic information and support for interactive services.\nThe following steps illustrate the way in which objects\n888 K. Cheverst et al. \/ Computers & Graphics 23 (1999) 883}891\nFig. 7. The GUIDE object model.\ninteract in order to provide context sensitive information\nto city visitors whilst they roam:\n(1) The position sensor object listens for beacons from\nremote base stations.\n(2) On hearing a beacon the position sensor object noti-\n\"es the control object that a beacon has been heard.\nThe control object checks the user's current position\nto the beacon heard.\n(3) If the beacon heard suggests the user has entered\na new location, e.g. the castle, then the control object\ninstantiates the appropriate landmark object (e.g. the\ncastle object). This is known as the active object.\nA landmark object stores state information (such as\ngeographic position and whether the location has\nbeen visited previously) and supports methods to\nmodify this state information and post messages to\nthe control object. The control object then queries\nthe active object for it's neighbours and instantiates\nthose objects also.\n(4) Once the control object has a handle to the active\nand neighbouring objects, the control object can in-\nvoke methods on those objects. These methods can\naccess or modify the state of an object. For example,\nif a user is searching for a cafeH in a particular area, the\nobjects can be queried by the GUIDE search engine\nto look for references to particular keywords or inter-\nests. The visitor can then use their local web browser\nto request information such as, &What are the local\nattractions near to me?'.\n(5) This request would be served by the local web server\nobject which would obtain the required information\n(based on the visitor's context) from the local proxy\nobject, or from the remote server object, if some or all\nof the information was not available locally.\nThe design of the object model is such that the integra-\ntion of new features to the GUIDE system should be\nrelatively straightforward and not require the rewriting\nof large sections of application code.\nA standard hypertext model is used to represent in-\nformation in the GUIDE system and this enables in-\nformation to be structured using standard and well\nunderstood techniques. A strong level of coupling exists\nbetween the hypertext model and the object model and\nthis relationship is illustrated in Fig. 7.\nInteraction between the object model and the hyper-\ntext model is achieved by providing location objects with\nreferences to hypertext pages. This enables applications\nto access the hypertext information base via multiple\nentry points. In addition, hypertext pages can reference\nand interrogate the state of objects within the object\nmodel. This functionality enables information, i.e. hyper-\ntext pages, to be displayed di!erently based on certain\naspects of a location object's status, e.g. the number of\ntimes that a visitor has visited a location. This is achieved\nby using special tags to query the object model. Such tags\nare embedded in the HTML code of hypertext pages\nand provide some control over the display of informa-\ntion. For example, a tag is used to represent the number\nof times that a visitor has visited the castle. Thus, when\ndisplaying the hypertext page associated with the castle,\nthe value of this tag can be checked and if it is greater\nthan zero then the page can include a message stating\nthat the visitor has visited the location previously.\n4. Communications approach\nThe communications support for GUIDE was de-\nveloped to address the following requirements:\nK. Cheverst et al. \/ Computers & Graphics 23 (1999) 883}891 889\nScalability: The system must be capable of supporting\na potentially large user community requiring access to data\nsimultaneously, therefore the system must adequately scale.\nRapid response times: Following on from the previous\nrequirement, the system should be able to respond to\na visitor's request for information in a rapid manner even\nwhen the number of visitors using the system is high.\nFlexibility of services: The system should support both\ndata broadcast and interactive services. Thus, it must\nprovide a high bandwidth down link channel for the\nbroadcast of data and also include spare time-slots with-\nin the broadcast schedule to enable clients to make ex-\nplicit requests for information or services.\nSupport for Disconnected operation: There will be areas\nof disconnection across the city of Lancaster which\nshould not overly disrupt the services provided by\nGUIDE as visitors roam around the city.\nMinimal usage of power: The fact that battery life is still\na major limitation with portable end-systems necessitates\nthat the power drain associated with supporting com-\nmunications be kept to a minimum.\nTo meet these requirements we have chosen to replace\nTCP as the means of communication between the mobile\nunits (clients) and base stations (servers) in favour of\na broadcast-based protocol. This protocol builds on the\nprevious work on broadcast disks as a means of dissemi-\nnating data [7,8]. In more detail, server-side proxies\nbuild up lists of pages to broadcast and periodically\ntransmit these pages within their cell. An index of the\npages to be broadcast is appended to the start and end of\neach transmission so that mobile units are able to deter-\nmine the current contents of the broadcast cycle. All of\nthe information is multicast to a well-known IP multicast\naddress. Client-side proxies listen for broadcasts and \"ll\nup their caches with the contents of the latest broadcast.\nIf a client machine enters a cell midway through a broad-\ncast it will only partially \"ll its cache but will be able to\ndetermine from the trailing index those pages which it\nhas missed but which will be retransmitted next cycle.\nAll user requests for pages are routed via client-side\nproxies. In the event of a request not being satis\"ed from\nthe current cache then the client will determine whether\nthe requested page is scheduled for transmission soon. If\nit is then it will await the transmission, otherwise it will\nissue an explicit request for the page. This explicit request\nwill be received by the server proxy which will fetch the\npage if it is not already cached locally and then schedule\nthe page for transmission in the next cycle.\nThis broadcast-based approach is well suited for meet-\ning the requirements described above. More speci\"cally,\nthe approach ful\"lls the requirement for scalability by\nenabling the system to support a large number of clients\nwithin each network cell by utilising the 2 Mbit\/s of\navailable bandwidth per cell. In addition, the system\nachieves extremely rapid response times in the majority\nof cases because, in general, the pages which visitors\nrequest will already have been cached on their mobile\nunit and therefore only local access will be required. The\nadopted approach is su$ciently #exible to support both\nthe broadcast of data to mobile units and (via the use of\nfree broadcast cycles) and interactive services. The fact\nthat mobile units cache information locally enables units\nto provide some useful functionally even when operating\noutside of communications coverage. The requirement\nfor minimising the use of power for communication pur-\nposes is also ful\"lled by the broadcast based approach\nbecause the WaveLAN cards utilised by GUIDE use con-\nsiderably less power when receiving than when transmit-\nting. The use of a broadcast approach means that, in\ngeneral use, clients rarely have to make transmissions and\nas a result the power drain on the portable end-systems\ndue to communications should be kept to a minimum.\nIt is, however, important to note that the bene\"ts of\nutilising a broadcast-based approach actually depend on\na number of factors. For example, in a situation where\nthere is a large degree of uniformity of page requests (i.e.\nmost users request the same subset of available pages)\nthen the system scales extremely well to support large\nnumbers of visitors per cell. However, as the uniformity\nof requests diminishes so the gains over a conventional\nrequest-reply system are reduced. Indeed, in the worst\ncase, i.e. where there is no commonality of page requests,\nthe system will perform worse than a conventional sys-\ntem since time will be spent re-broadcasting pages which\nare not required. For the GUIDE system, we predict that\na visitor's access patterns will be strongly in#uenced by\ntheir physical location. Consequently, we expect each\ncell's cache to gradually build up a broadcast schedule\nthat contains information relating to the physical loca-\ntion of the cell.\n5. Current status\n5.1. End systems\nWe considered a wide range of end-systems for use in\nGUIDE, including pen-based tablet PCs and PDAs, and\n\"nally selected the trans#ective version of the Fujitsu\nTeamPad 7600. This compact, ruggedised, unit measur-\ning 8A]9A]1.5A, is based on a 486 100 MHz processor.\nIts trans#ective, greyscale, screen enables the display to\nbe readable even in direct sunlight, which is currently not\npossible with colour screens. Further details on the\nTeamPad can be found in [9].\n5.2. Communications infrastructure\nWe have currently deployed seven communications\ncells in the city of Lancaster and hope to deploy further\nthree in the near future in order to provide coverage of\nmany of the main tourist attractions in Lancaster. Each\n890 K. Cheverst et al. \/ Computers & Graphics 23 (1999) 883}891\ncell consists of an HP Vectra 6\/200XU acting as a cell\nsever, a WaveLAN ISA card for broadcasting informa-\ntion to the cell and a link back to the University network.\nThis link is via either a leased line or, where this is not\navailable, the EDNET wireless network [10] which has\nbeen deployed by Lancaster University to provide inter-\nnet access to local schools.\nThe WaveLAN cards provide coverage with a radius\nof approximately 200 m in free space. However, the signal\nhas very poor propagation through buildings and hence\nin a city the actual cells tend to be bounded by the city\narchitecture. Within the context of GUIDE this is a\npositive feature since it allows us to create smaller,\nnon-overlapping cells and hence provide more accurate\nposition information and avoid the need to support\nWaveLAN roaming. Unfortunately, we have not found it\npossible to create very accurate cell boundaries due to\nthe re#ection of signals, interference and changes in\npropagation patterns resulting from #uctuations in the\ndensity and placement of objects within the cell.\n6. Concluding remarks\nIn this paper we have described our on-going deve-\nlopment of a context sensitive intelligent guide for city\nvisitors. The requirements for such a guide have been\npresented and we have outlined our design for an object\nmodel capable of providing the high level of #exibility\nrequired by the GUIDE system. In particular, the model\nsupports the provision of dynamic and context sensitive\ninformation by adopting an approach based on the com-\nposition of dynamically tailored web pages from a collec-\ntion of both locally, and remotely, stored information\npackets.\nThe GUIDE project is currently deploying its infra-\nstructure throughout the city of Lancaster and initial\nfeedback following the evaluation of the system by other\nmembers of our department has been very positive. The\nsystem is rapidly approaching the stage at which it can be\ndemonstrated and evaluated by members of the public.\nThis evaluation is likely to prove di$cult, not least be-\ncause of the need to observe city visitors interacting with\nthe system without a!ecting their behaviour. In addition,\nwe feel it important that a large cross section of people\nare used to evaluate the system. This is necessary in order\nto test the #exibility of the system, i.e. its ability to cope\nwith a range of di!ering user demands, its ability to\nprovide content tailored to each visitor's needs, i.e. their\npreferred reading language, age and interests, and the\nsystems usability by people both with and without famili-\narity with the web.\nAcknowledgements\nThis work was carried out as part of the EPSRC\nfunded GUIDE project (GR\/L05280) in cooperation\nwith Lancaster City Council and has received support\nfrom HP Labs, Bristol and Lucent Technologies.\nReferences\n[1] Davies N, Mitchell K, Cheverst K, Blair G. Developing\na context sensitive tourist guide. Proceedings of the First\nWorkshop on HCI and Mobile Devices. UK: Glasgow,\n1998.\n[2] Davies N, Cheverst K, Mitchell K, Friday A. Caches in\nthe air: disseminating information in the guide system.\nProceedings of the Second IEEE Workshop on Mobile\nComputing Systems and Applications (WMCSA '99). New\nOrleans, US: IEEE Press, 1999. p. 11}9.\n[3] Cheverst K, Davies N, Mitchell K, Friday A. The role of\nconnectivity in supporting context-sensitive applications,\nHandheld Ubiquitous Computing '99, Karlsruhe, Ger-\nmany, 1999, submitted for publication.\n[4] Schilit B, Adams N, Want R. Context-aware computing\napplications. Proceedings of the Workshop on Mobile\nComputing Systems and Applications, Santa Cruz, CA,\nU.S., 1994.\n[5] Brown PJ, Bovey JD, Chen X. Context-aware applica-\ntions: from the laboratory to the market place. IEEE\nPersonal Communications 1997;97:58}64.\n[6] Long S, Kooper R et al. Rapid prototyping of mobile\ncontext-aware applications: the cyberguide case study.\nProceedings of the Second ACM International Conference\non Mobile Computing (MOBICOM), Rye, New York,\nU.S., 1996.\n[7] Acharya S, Alonso R, Franklin M, ZDonik S. Broadcast\ndisks: data management for asymmetric communication\nenvironments. Proceedings SIGMOD '95, San Jose,\nCalifornia, 1994. p. 199}210.\n[8] Acharya S, Franklin M, Zdonik S. Balancing push\nand pull for data broadcast. Proceedings of the ACM\nSIGMOG '97, Tuscon, Arizona, 1997.\n[9] Fujitsu TeamPad Technical Page. http:\/\/www.fjicl.com\/\nTeamPad\/teampad76.htm, 1999.\n[10] Forde B. Lancaster's EDNET linking Lancaster's schools\nto the internet. Panel presentation at MobiCom97,\nBudapest, Hungary, September 26}30, 1997. Source\nfor slides available at: http:\/\/148.88.16.66\/techinfo\/\nMobiCom97\/index.htm, 1997.\nK. Cheverst et al. \/ Computers & Graphics 23 (1999) 883}891 891\n"}