{"doi":"10.1016\/j.infoecopol.2008.06.001","coreId":"8347","oai":"oai:eprints.brighton.ac.uk:5341","identifiers":["oai:eprints.brighton.ac.uk:5341","10.1016\/j.infoecopol.2008.06.001"],"title":"The institutions of open source software: examining the Debian community","authors":["Mateos-Garcia, Juan","Steinmueller, W. Edward"],"enrichments":{"references":[{"id":42745974,"title":"57 All electronically available documents last retrieved on the 28th","authors":[],"date":"2006","doi":null,"raw":"57 All electronically available documents last retrieved on the 28th September 2006.","cites":null},{"id":42745986,"title":"Community, joining, and specialization in open source software innovation: a case study.","authors":[],"date":"2003","doi":"10.2139\/ssrn.387500","raw":"von Krogh, Spaeth, S., Lakhani, K., 2003. Community, joining, and specialization in open source software innovation: a case study. Research Policy 32 (7), pp. 1217\u20131241.","cites":null},{"id":42745965,"title":"Cooking pot markets: an economic model for the trade in free goods and services on the Internet.","authors":[],"date":"1998","doi":"10.5210\/fm.v3i2.580","raw":"Ghosh, R., 1998. Cooking pot markets: an economic model for the trade in free goods and services on the Internet. First Monday 3(3). http:\/\/www.firstmonday.org\/issues\/issue3_3\/ghosh\/index.html Ghosh, R., Glott, R., Krieger, B., Robles, G., 2002. Free Libre and Open Source Software Survey and Study Final Report. International Institute of Infonomics, University of Maastricht and Berlecon Research GmbH.","cites":null},{"id":42745961,"title":"Decisions and nondecisions: An analytical framework.","authors":[],"date":"1964","doi":"10.2307\/1952568","raw":"References57 Bachrach, P. and Baratz, M., 1964. Decisions and nondecisions: An analytical framework. The American Political Science Review 57 (3), pp. 632-642.","cites":null},{"id":42745964,"title":"Epistemic communities, situated learning and open source software development. Working paper: http:\/\/opensource.mit.edu\/papers\/kasperedwardsec.pdf#search=%22kasper%20edwards%20epistemic%22","authors":[],"date":"2001","doi":null,"raw":"International Conference on Information Systems (ICIS), 2003. http:\/\/floss.syr.edu\/publications\/icis2003success.pdf#search=%22crowston%20open%20 source%20success%22 Edwards, K., 2001. Epistemic communities, situated learning and open source software development. Working paper: http:\/\/opensource.mit.edu\/papers\/kasperedwardsec.pdf#search=%22kasper%20edwards%20epistemic%22 Elliot, M. and Scacchi, W. 2003. Free Software Developers as an Occupational Community: Resolving Conflicts and Fostering Collaboration. Proceedings of the 2003 International ACM SIGGROUP Conference on Supporting Group Work, Santa Isabel Island, Florida.","cites":null},{"id":42745980,"title":"Evolution Patterns of Open Source Systems and Communities.","authors":[],"date":"2002","doi":"10.1145\/512035.512055","raw":"Nakakoji, K., Yamamoto, Y., Nishinaka, Y., Kishida, K. and Ye, Y., 2002: Evolution Patterns of Open Source Systems and Communities. Proceedings of the International Workshop on Principles of Software Evolution, Orlando, Florida.","cites":null},{"id":42745982,"title":"From Toy Story to Toy History: a deep analysis of Debian GNU\/Linux.","authors":[],"date":"2003","doi":null,"raw":"Robles, G., Gonz\u00e1lez-Barahona, J., 2003. From Toy Story to Toy History: a deep analysis of Debian GNU\/Linux.","cites":null},{"id":42745985,"title":"innovation networks - by and for users.","authors":[],"date":"2002","doi":null,"raw":"http:\/\/www.ischool.berkeley.edu\/~hal\/Papers\/2004\/linux-adoption-in-the-publicsector.pdf von Hippel, E., 2002.Horizontal innovation networks - by and for users. Sloan School of Management, MIT, Working Paper No. 4366-02. June.","cites":null},{"id":42745966,"title":"Introduction: Epistemic communities and international policy coordination.","authors":[],"date":"1992","doi":null,"raw":"http:\/\/www.infonomics.nl\/FLOSS\/report\/Final4.htm#_Toc13908258 Haas, P. M., 1992. Introduction: Epistemic communities and international policy coordination. International Organization 46 (1): 1-36 Herbsleb, J., Mockus, A., Finholt, T.A., Grinter, R.E., 2000. Distance, dependencies, and delay in a global collaboration. Proceedings of the 2000 ACM conference on Computer supported cooperative work, Philadelphia, Pennsylvania.","cites":null},{"id":42745984,"title":"Linux adoption in the public sector: An economic analysis.","authors":[],"date":"2004","doi":null,"raw":"Varian, H., Shapiro, C., 2004. Linux adoption in the public sector: An economic analysis.","cites":null},{"id":42745981,"title":"Managing the boundary of an \u2018open\u2019 project. Santa Fe Institute (SFI) Workshop on The Network Construction of Markets.","authors":[],"date":"2003","doi":null,"raw":"O\u2019Mahony, S. and Ferraro, F., 2003. Managing the boundary of an \u2018open\u2019 project. Santa Fe Institute (SFI) Workshop on The Network Construction of Markets. http:\/\/opensource.mit.edu\/papers\/omahonyferraro.pdf#search=%22o'mahony%202002%20de bian%22 O'Mahony, S., (2006). Developing community software in a commodity world. in M. Fisher, M. and Downey, G., Frontiers of Capital: Ethnographic Reflections on the New Economy. Duke University Press, Durham, NC, pp. 237-266.","cites":null},{"id":42745962,"title":"Open source software development as a special type of academic research (Critique of vulgar Raymondism).","authors":[],"date":"1999","doi":"10.5210\/fm.v4i10.696","raw":"Bezroukov, N., 1999. Open source software development as a special type of academic research (Critique of vulgar Raymondism). First Monday 4 (10). (http:\/\/www.firstmonday.dk\/issues\/issue4_10\/bezroukov\/index.html ) Brooks, F., 1982. The Mythical Man-Month : Essays on Software Engineering. AddisonWesley, Reading, Massachusetts.","cites":null},{"id":42745978,"title":"Organising for creativity: Community, economy and space,","authors":[],"date":"2003","doi":null,"raw":"Organising for creativity: Community, economy and space, Oxford University Press, Oxford. Michlmayr, M., 2003. Managing Debian. http:\/\/www.ukuug.org\/events\/linux2003\/papers\/michlmayr.pdf#search=%22managing%20de bian%22 Monga, M., 2004. From Bazaar to Kibbutz: how freedom deals with coherence in the Debian project. Collaboration, Conflict and Control: The 4th Workshop on Open Source Software Engineering W8S Workshop - 26th International Conference on Software Engineering.","cites":null},{"id":42745969,"title":"Putting it all in the trunk: incremental software development in the FreeBSD open source project.","authors":[],"date":"2001","doi":"10.1046\/j.1365-2575.2001.00113.x","raw":"J\u00f8rgensen, N, 2001. Putting it all in the trunk: incremental software development in the FreeBSD open source project. Information System Journal 11 (4) 321-336.","cites":null},{"id":42745979,"title":"Rebel Code: Linux and the Open Source Revolution.","authors":[],"date":"2002","doi":null,"raw":"Edinburgh, Scotland. http:\/\/homes.dico.unimi.it\/~monga\/lib\/ossicse04.pdf#search=%22monga%20bazaar% Moody, G., 2002. Rebel Code: Linux and the Open Source Revolution. Penguin Books, New York.","cites":null},{"id":42745972,"title":"The Boston Consulting Group Hacker Survey Release","authors":[],"date":"2002","doi":null,"raw":"Lakhani, K., Wolf, B., Bates, J., DiBona, C., 2002. The Boston Consulting Group Hacker Survey Release 0.73. http:\/\/www.ostg.com\/bcg\/bcg-0.73\/BCGHackerSurveyv0-73.html Lave, J., Wenger, E., 1991. Situated Learning: Legitimate Peripheral Participation, Cambridge University Press.","cites":null},{"id":42745983,"title":"The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary. O'Reilly and Associates,","authors":[],"date":"1999","doi":null,"raw":"http:\/\/es.tldp.org\/Presentaciones\/200309hispalinux\/20\/20-en.pdf#search=%22robles%20barahona%20toy%20story%22 Raymond, E. S., 1999. The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary. O'Reilly and Associates, Inc., Sebastopol, CA.","cites":null},{"id":42745987,"title":"The Debian New Maintainer Process: History and Aims.","authors":[],"date":"2005","doi":null,"raw":"Wallach, H., Allan, M., Harries, D., 2005. The Debian New Maintainer Process: History and Aims.","cites":null},{"id":42745968,"title":"The Hacker Ethic.","authors":[],"date":"2001","doi":null,"raw":"http:\/\/portal.acm.org\/citation.cfm?id=359003&coll=portal&dl=ACM Himanen, P., Torvalds, L., Castells, M., 2001. The Hacker Ethic. New York, Vintage.","cites":null},{"id":42745977,"title":"The open source way of working: A new paradigm for the division of labour in software development?.","authors":[],"date":"2002","doi":null,"raw":"Mateos-Garcia, J., Steinmueller, W. E., 2002. The open source way of working: A new paradigm for the division of labour in software development?. SPRU Electronic Working Paper Series No. 92, http:\/\/www.sussex.ac.uk\/Units\/spru\/publications\/imprint\/sewps\/sewp92\/sewp92.pdf Mateos-Garcia, J., Steinmueller, W. E., (forthcoming). Open, but how much? Growth, conflict and institutional evolution in open source communities. In. Amin, A., Roberts, J.","cites":null},{"id":42745973,"title":"The simple economics of open source.","authors":[],"date":"2000","doi":"10.2139\/ssrn.224008","raw":"Lerner, J., Tirole, J., 2000. The simple economics of open source. National Bureau of Economic Research, Cambridge MA, Working Paper 7600.","cites":null},{"id":42745990,"title":"The Success of Open Source.","authors":[],"date":"2004","doi":null,"raw":"http:\/\/www.srcf.ucam.org\/~hmw26\/publications\/debconf5.pdf#search=%22Wallach%2C%20 Allan%20and%20Harries%20%22 Weber, S., 2004. The Success of Open Source. Harvard University Press, Cambridge, Massachusetts.","cites":null},{"id":42745963,"title":"Three Ethical Moments in Debian.","authors":[],"date":"2005","doi":"10.2139\/ssrn.805287","raw":"Coleman, E.G., 2005. Three Ethical Moments in Debian. http:\/\/papers.ssrn.com\/sol3\/papers.cfm?abstract_id=805287 Crowston, K., Annabi, H. and Howison, J., 2003. Defining open source project success.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2008-12","abstract":"Free and open source software activities involve and, perhaps, evolve institutions (rules, norms and standards) that influence the formation, growth, and demise of communities. Community institutions are attractors for some individuals while discouraging other individuals from entering or continuing to participate. Their suitability may change as a community grows. This paper examines the institutions of the Debian community where issues of community identity, distribution of authority, and decentralisation have facilitated growth and development. These same institutions have also resulted in conflicts regarding community purposes and the quality and delivery of the community\u2019s output. We examine the institutional redesign undertaken to address these problems and derive implications for F\/LOS communities and companies","downloadUrl":"","fullTextIdentifier":null,"pdfHashValue":null,"publisher":null,"rawRecordXml":"<record><header><identifier>\n  \n    \n    \n      oai:eprints.brighton.ac.uk:5341<\/identifier><datestamp>\n      2014-05-21T11:01:17Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      7375626A656374733D4E303030:4E323030:4E323130:4E323135<\/setSpec><setSpec>\n      74797065733D61727469636C65<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/eprints.brighton.ac.uk\/5341\/<\/dc:relation><dc:title>\n        The institutions of open source software: examining the Debian community<\/dc:title><dc:creator>\n        Mateos-Garcia, Juan<\/dc:creator><dc:creator>\n        Steinmueller, W. Edward<\/dc:creator><dc:subject>\n        N215 Change and Innovation<\/dc:subject><dc:description>\n        Free and open source software activities involve and, perhaps, evolve institutions (rules, norms and standards) that influence the formation, growth, and demise of communities. Community institutions are attractors for some individuals while discouraging other individuals from entering or continuing to participate. Their suitability may change as a community grows. This paper examines the institutions of the Debian community where issues of community identity, distribution of authority, and decentralisation have facilitated growth and development. These same institutions have also resulted in conflicts regarding community purposes and the quality and delivery of the community\u2019s output. We examine the institutional redesign undertaken to address these problems and derive implications for F\/LOS communities and companies.<\/dc:description><dc:date>\n        2008-12<\/dc:date><dc:type>\n        Journal article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:format>\n        text<\/dc:format><dc:language>\n        en<\/dc:language><dc:rights>\n        <\/dc:rights><dc:identifier>\n        http:\/\/eprints.brighton.ac.uk\/5341\/1\/The_institutions_of_open_source_software-_IR.pdf<\/dc:identifier><dc:identifier>\n          Mateos-Garcia, Juan and Steinmueller, W. Edward  (2008) The institutions of open source software: examining the Debian community  Information, Economics and Policy, 20 (4).  pp. 333-344.  ISSN 0167-6245     <\/dc:identifier><dc:relation>\n        10.1016\/j.infoecopol.2008.06.001<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/eprints.brighton.ac.uk\/5341\/","10.1016\/j.infoecopol.2008.06.001"],"year":2008,"topics":["N215 Change and Innovation"],"subject":["Journal article","PeerReviewed"],"fullText":" 1 \n \nThe Institutions of Open Source Software: Examining the Debian \nCommunity1 \n \n \nJuan Mateos-Garcia* \nCENTRIM, Brighton University \nFreeman Centre \nUniversity of Sussex \nFalmer Brighton East Sussex \nUnited Kingdom BN1 9QE \nE: mail: J.Mateos-Garcia@brighton.ac.uk \n \nW. Edward Steinmueller \n \nSPRU \u2013 Science and Technology Policy Research \nFreeman Centre \nUniversity of Sussex \nFalmer Brighton East Sussex \nUnited Kingdom BN1 9QE \nE: mail: w.e.steinmueller@sussex.ac.uk \n \nAbstract \nFree and open source software activities involve and, perhaps, evolve institutions \n(rules, norms and standards) that influence the formation, growth, and demise of \ncommunities.  Community institutions are attractors for some individuals while \ndiscouraging other individuals from entering or continuing to participate.  Their \nsuitability may change as a community grows.  This paper examines the institutions of \nthe Debian community where issues of community identity, distribution of authority, \nand decentralisation have facilitated growth and development.  These same \ninstitutions have also resulted in conflicts regarding community purposes and the \nquality and delivery of the community\u2019s output. We examine the institutional redesign \nundertaken to address these problems and derive implications for F\/LOS communities \nand companies. \n \nJEL Codes: O31, L17 \nKeywords:  Open Source Software, Debian, Institutions \n \n*  Corresponding Author \n                                                \n1 The useful comments of two referees are gratefully acknowledged. The research reported in this \npresentation could not have been undertaken without the financial support received by the Stanford \nInstitute for Economic Policy Research (SIEPR) Project on the Economics of Free and Open Source \nSoftware from grants awarded by the National Science Foundation program on Digital Technology and \nSociety: IIS-0112962(2001-04) and IIS-0329259(2003-05). \n[See: http:\/\/siepr.stanford.edu\/programs\/OpenSoftware_David\/OS_Project_Funded_Announcmt.htm].  \n \n 2 \nIntroduction \n \nThis paper employs the concepts of epistemic community, situated learning and \nlegitimate peripheral participation to address the way in which communities of F\/LOS \n(Free\/Libre Open Source Software) developers define their purposes, co-ordinate their \nactivities and recruit new members, as well as the processes by which these novices \nare socialised.2 This framework is drawn from the literature on political science \n(Haas, 1992), scientific communities (Knorr Cetina, 1999) and communities of \npractice (Lave and Wenger, 1991), (Brown and Duguid, 1991).  It was first employed \nto the study of F\/LOS by Edwards (2001) as a means of focussing on F\/LOS \ncommunities\u2019 social features and work practices.  This focus is neglected in a large \npart of the existing literature, which primarily concentrates on individual motives for \nparticipation in F\/LOS projects and the advantages of the F\/LOS methodology when \ncompared with traditional (closed) paradigms for software development.3 These \nexisting approaches are most often set in a context in which F\/LOS projects are \nrelatively successful and untroubled.  Edwards\u2019 framework contributes to the opening \nof the \u201cblack box\u201d of the F\/LOS project, and we believe can be applied to contexts \nwhere we observe the presence of dysfunctional processes with a negative impact on \nperformance and participation expectations, something that is quite common and also \ncontrary to the sample of cases analysed by most researchers studying F\/LOS \ncommunities. \n \nIn extending and applying this framework to the specific case of the Debian Project, \nwe aim to illustrate its relevance for analysing the social structures of F\/LOS \ncommunities and for diagnosing some of their possible ills and to draw some \nconclusions regarding what institutions (rules, norms, and standards) might best serve \nsuch communities. \n \n                                                \n2 Throughout this paper we use the term \u201cFree\/Libre Open Source\u201d software (F\/LOS), to refer to our \nsubject of analysis in order to acknowledge both the more politicised (\u201cFree\/Libre\u201d) faction of \ndevelopers organised around the Free Software Foundation (http:\/\/www.fsf.org\/), and the more \npragmatic \u201cOpen\u201d community which emerged with the launch of the Open Source Initiative \n(http:\/\/www.opensource.org\/). \n3 For work focusing on the motivations of F\/LOS developers see, for example, Raymond (1999), \nLerner and Tirole (2000), Ghosh (1998), von Hippel (2002), Bezroukov (1999) or Himanen et al \n(2001). For some analyses of the comparative efficiencies of F\/LOS and other paradigms for software \ndevelopment see Raymond (1999), von Hippel (2002) and Varian and Shapiro (2004).  \n 3 \nThe advantages of F\/LOS projects are often depicted as a departure from a central \ntenet of existing theories of software development \u2013 \u2018Brooks law.\u2019 Brooks (1995) \nasserted that software development is subject to diminishing returns with the addition \nof greater number of developers.  By contrast, F\/LOS development is usually \ncharacterised by its advocates (and many scholars) as an activity that is subject to \nproportional or more than proportional increases in outputs (quantity and quality of \nthe software code produced) as more developers become involved in a project. This \ndeviation from conventional accounts of software development is explained by what \nEric Raymond calls \u201cLinus\u2019s Law,\u201d according to which \u201cGiven enough eyeballs, all \nbugs are shallow\u201d4.  This \u2018law\u2019 is focussed on one feature of the F\/LOS development \nprocess \u2013 the problem of producing reliable code to implement clearly specified \nrequirements, and on one consistent feature of software development \u2013 the un-\nintentioned introduction of error in code production.  This is an important, but by no \nmeans, sole determinant of the success of the organisational innovation that F\/LOS \nrepresents. \n \nFor example it does how contentions that may be offered by the people behind the \neyeballs are validated or how F\/LOS communities might seek to recruit individuals \nwith the most acute and relevant vision to the tasks at hand.  In this paper we examine \nhow these issues of validation and recruitment play out in one setting, the Debian \nF\/LOS community, which has faced and continues to face challenges that may affect \nits prospects for continued success. \n \nWe begin the paper by presenting a theoretical framework which, along the lines \nfollowed by Edwards, begins with the concepts of Epistemic Community, Situated \nLearning and Legitimate Peripheral Participation, and uses these concepts to pursue a \nmore detailed analysis of the role and functions of a project\u2019s \u2018administrator\u2019 \u2013 one of \nseveral roles that emerge from the socio-technical and epistemological dynamics of \nthe Debian project, and more broadly, F\/LOSS communities.  These dynamics also \nproduce institutions (rules, norms and standards) that regulate participation inside a \nproject as well as managing conflict and dissension which might diminish the quality \nof a project\u2019s outputs (and social processes). This discussion leads to the identification \n                                                \n4 In an extended form,  \u201cGiven a large enough beta-tester and co-developer base, almost every \nproblem will be characterized quickly and the fix obvious to someone\u201d (Raymond 1999), p. 41.  \n 4 \nof some mileposts in the evolution of a project, each of which suggests the need for \ninstitutional strategies in order to cope with the growth of the technical and social \ncomplexity of the project. We then use this framework to consider the case of the \nDebian Linux Distribution, using primary data from its mailing lists archives, \nhandbooks written to inform potential and actual community members, and previous \nanalyses of institutional evolution and political conflict in this project. \n \n1. F\/LOS development as a communitarian process \n \nKasper Edwards (2001) builds a conceptual framework based upon analytical tools \nborrowed from the fields of political science and sociology in order to analyse the \nsocial organisation of F\/LOS communities.  Of particular interest in his analysis are \nthe processes by which novices enter such communities and learn the technical skills \nand social norms that make their participation meaningful and valuable. In order to \nundertake this task he employs the concepts of \u201cepistemic communities\u201d and \u201csituated \nlearning,\u201d which we now briefly reprise. \n \nEpistemic communities and Situated Learning \n \nHaas (1992) introduces the concept of  \u201cepistemic communities\u201d in the field of \npolitical science to identify groups of individuals who share a number of normative \nand causal beliefs and knowledge validity notions.  Individuals in epistemic \ncommunities are in implicit or explicit agreement about the objectives of the \ncommunity.  In the case of Haas\u2019 domain of application, international policy, this is \nachieved through the accumulation of a body of knowledge, which is expected to \ninfluence policy makers\u2019 decisions in a desired direction.  A central feature of Haas\u2019 \napproach is that a shared epistemological framework regulates the knowledge \naccumulation process by establishing which methodologies and criteria are taken as \nmost useful for the production and validation of knowledge. \n \nThis framework seems particularly well suited for the analysis of the organisational \narrangements adopted by participants in F\/LOS projects because of its focus on \ncollective work practices and their linkages to a specific epistemological framework, \nand the characterisation of a common \u201cpolicy\u201d enterprise as one of the essential \n 5 \nfeatures of the community.  This instrumental approach for the definition of social \ninteractions makes it possible to encompass the \u201csocially-light\u201d and \u201cintimacy-averse\u201d \nenvironment in which a considerable share of F\/LOS development takes place.5  \nEdwards locates the emergence of socialisation and identity in relation to the process \nof open source working, and introduces Lave and Wenger\u2019s (1991) framework as the \nanalytical method for comprehending this process. \n \nThe practices, values and beliefs that characterise F\/LOS development and the \ninteractions between those people who take part in it6 create an environment that \nreduces the costs of re-negotiating purposes and facilitates decentralised collaboration \nbetween volunteers from heterogeneous backgrounds.  The epistemic community \napproach provides little guidance, however, in answering the question: how do \noutsiders start participation in the community, and through which processes do they \nlearn and internalise the community\u2019s set of shared normative and causal beliefs, \nnotions of validity and goals that substantiate their membership?  \n \nTo address this issue, Edwards utilises Lave and Wenger\u2019s (1991) concepts of \n\u201csituated learning\u201d and \u201clegitimate peripheral participation.\u201d This leads him to \nidentify a number of activities and structures through which novices start their \nparticipation in the social and technical spaces of a project and learn the norms and \npolicies that regulate behaviour inside them7. Of particular note, Edwards \ncontroversially construes the \u201cmentor\u201d (a pivotal figure in Lave and Wenger\u2019s case \nstudies) \u2013 the novice is \u2018guided\u2019 by what is embedded in the code, mailing lists and \nforum postings that the novice reads, adapts and contributes rather than an individual.8 \n                                                \n5 Respondents to FLOSS Survey (Ghosh et al., 2002) and the Boston Consulting Group Hacker Survey \n(Lakhani et al., 2002) emphasise acquisition of new skills and engagement in intellectually stimulating \nactivities as the primary aspects for participation in F\/LOS development, while social aspects remain \nsecondary.  \n6 Examples of which would be aversion to proprietary methods for software development, an emphasis \non technical arguments during discussions and a disregard for \u201cformal\u201d qualifications and \norganisational, social or economic status. See Levy (1985) and Himanen (2001) for overviews of the \nmoral precepts that constitute the basis of the F\/LOS movement, also referred to as \u201cthe Hacker Ethic\u201d. \n7 See Von Krogh et al (2003) for an empirical analysis of some of the joining and specialisation \npatterns through which novices start participation in the Freenet project.  \n8 Taking this view involves the supposition that the individual identities of insiders have effectively \n\u201ccoalesced\u201d into these artefacts as part of a collective, decentralised development process, an \nassumption that many who are sympathetic to Lave and Wenger\u2019s framework will find problematic \nsince it strips out and objectifies the interactive social processes involving the novice and the mentor \ninto a relation between the novice and the \u2018text.\u2019  As we will see below, however, interactivity is re-\nintroduced as the novice attempts to make contributions to the community effort. \n 6 \n \nThrough this social process the novice may come to internalise the values of the \ncommunity and learn how contributions are solicited and validated as well as the \nnorms that regulate social interactions inside the community.  Eventually, the novice \nbecomes recognised by others as a member of the community and may influence the \ncommunity through contributions to software code, documentation, technical \ndiscussions, Frequently Asked Question (FAQ) lists, etc. \n \n2. Distributed authority inside an epistemic community and knowledge \ndifferentials as its organising principle \n \nEdwards\u2019 framework is a useful starting point for the analysis of the organisational \narrangements through which F\/LOS communities carry out their activities, as it \nidentifies mechanisms in projects that address some of the pitfalls of decentralised \nsoftware development and, more generally, online interaction9. .  Elliot and Scacchi\u2019s \nanalysis of the GNUe documentation project concurs with this view, describing the \nway in which an alignment of participants\u2019 belief systems mitigates conflict.10 We \ncontend that these mechanisms are neither precise nor strong enough to effectively \nspecify the goals and organise the efforts of F\/LOS developers, nor necessarily \nsufficient to resolve conflicts that emerge on the day-to-day processes of F\/LOS \ndevelopment.  In these areas, the exercise of authority becomes a necessary source of \nstability and direction, which prompts the following discussion of authority in such \ncommunities. \n                                                \n9 See Herbsleb et al (2000) for an appraisal of the problems faced by (commercial) software projects \nundertaken by dislocated teams.  \n10 Elliot and Scacchi (2003). \n 7 \n \nThe exercise of authority in F\/LOS development work11 \n \nAcademic accounts of F\/LOS development often present a \u2018flat\u2019 hierarchical structure \nin which volunteers take the initiative of contributing software modules (fragments of \na program) that are integrated with each other through standardised interfaces12.  Our \ncontention is that the process of integration is more complicated than strategies for \nintegration of contributions play an essential role in determining the outcomes of a \nproject.  The organisational structure of most F\/LOS projects has a vertical \ncomponent which regulates its development and operation. \n \nOne figure common in F\/LOS projects who embodies these integration functions is \nthe administrator (elsewhere referred to as \u2018leader\u2019 or \u2018maintainer\u2019). The administrator \nof a project is, in Eric Raymond\u2019s terms, its \u2018owner\u2019, that is, the individual who starts \nit, inherits it from a previous owner or recovers it from abandonment, and has the \nright to distribute its official version.13 Raymond does not focus on the function \npreceding the exercise of this \u201cright to release\u201d, this is, the right to decide which \ncontributions go inside the official version and which do not, or the \u201cintegration \nfunction. Technocratic accounts of F\/LOSS development would perhaps present this \nas a trivial undertaking that does not deserve special attention: the project \nadministrator simply assembles the \u201cpuzzle\u201d of the software program with the \n\u201cpieces\u201d contributed following the rules and principles that characterise the F\/LOS \nepistemic community.  If a software project is large and technically complex, this \nmight be a difficult task, and because of the voluntary nature of F\/LOS development \nwork, some of the \u201cspaces in the puzzle\u201d (i.e. tedious tasks such as debugging and \ndocumentation) may not be completed in a timely way.14 Nevertheless, by a \ntechnocratic account, there exists a \u201cright\u201d solution for the software problem, which \nthe administrator will adopt, with guidance from the community when necessary. If \nshe does not, she will eventually face a rebellion from other developers, who have the \n                                                \n11 We do not enter on issues related to the definition of for example, authority versus influence and \npower (Bachrach and Baratz, 1963): in our framework, we use this concept to refer to attempts at \ninfluencing the actions of other participants in the project. \n12 This is, a Raymondian Bazaar (see Raymond, 1999).  \n13 Raymond (1999). \n14 Ibid. \n 8 \ncapacity to leave the project and to start a different branch (to \u201cfork\u201d the project) \nadopting the \u201cright solution\u201d that the administrator declined to adopt.15  \n \nAccounts such as this seem na\u00efve to social process and incorporate a technologically \ndeterministic view of software development which appears prevalent in ICT-savvy \ncircles (and sometimes, amongst social analysts of ICT).  Alternatively, we contend \nthat the \u201csoftware puzzle\u201d we have described presents, except in its simplest \nconfigurations, a diversity of possible \u201csolutions,\u201d each with merits and shortcomings. \nIn a context of uncertainty and diversity (i.e. heterogeneous, sometimes conflicting \nindividual goals and perspectives), there is space for choice about how to solve the \npuzzle, which arrangements of \u201csoftware pieces\u201d are more desirable, and also for \ndifferences between individuals about which solutions should be employed.16 Our \nunderstanding of development processes in F\/LOS projects adds a cautionary \ncorollary to Linus\u2019 Laws; \u201cGiven enough opinions, all development paths are \ncontested\u201d \n \nDecisions about which contributions and strategies are more useful for the solution of \na problem, which issues should be considered problems and which should not, and the \ncriteria according to which solutions to problems are to be judged are, in a context of \nuncertainty, made on the basis of values, beliefs and opinions.  Since the rules, \nprecepts and \u201cshared goals\u201d of a F\/LOS epistemic community are not defined in a \nsufficiently rigorous or complete way so as to dispel the need to make frequent \ndecisions with a degree of arbitrariness, exercises of authority cannot be completely \nbased on rational and technical arguments.  If these rules defined perfect protocols (in \neconomic terms, complete contracts) for conflict resolution with no individual making \nan \u2018arbitrary decision\u2019, it would still be true that the selection of the goals and values \nembedded in them constitute, again, exercises of authority.  \n \n                                                \n15 This sort of explanation is implicit in Raymond (1999) who assumes that a meritocratic process of \nleader selection and the existence of \u2018checks and balances\u2019 provided by capacity to \u2018fork\u2019 (take existing \ncode and develop it in a different way) guarantee the selection of optimal development paths. Similar \nexplanations of F\/LOS efficiency based on the allocation of stocks of information about user needs are \npresent in von Hippel (2002). \n16 Discussions in developer mailing lists (i.e. http:\/\/www.lists.debian.org) and forums (such as Slashdot \nor Kuro5hin) demonstrate the extent of disagreements about the relative merits of different programs \nand techniques, and the desirability of achieving different goals permeate day-to-day development \nactivities in the F\/LOS community.  \n 9 \nThe source of authority in F\/LOS projects: knowledge differentials between \nindividuals \n \nThe previous discussion shows the importance of situating authority at the foreground \nof our understanding of F\/LOS communities and their activities: determining its \nsources constitutes a promising approach to the understanding of the organisation of \nF\/LOS projects. \n \nWe contend that individuals obtain the right to exercise authority over a project\u2019s \ndevelopment process by demonstrating superior knowledge about it, and that this \nknowledge is acquired through participation.  By focussing on the social dynamics \nthrough which this knowledge is distributed throughout a project, it becomes possible \nto trace the emergence of the structure, usually hierarchical, by which development \nefforts inside are managed.  Our analysis complements and extends previous research \non the issue, much of which has concentrated on the motives for individuals\u2019 \ncontributions and have highlighted reputation building.17 \n \nInside our framework, \u201ccontributions\u201d are not, per se, direct sources of reputation and \nauthority in a project, but demonstrations of knowledge about its goals and its values, \nand of the skills necessary to fulfil a useful role inside its community.  In a social \nmilieu where sustaining a common purpose may be difficult and in which technical \nproficiency is given the utmost value, these demonstrations are rewarded with \nreputation, whose \u2018exchange value\u2019 is the right to exercise authority over the project \nand, if not its participants, then at least their contributions.18 This line of reasoning is \nmore fruitful for analysing the social dynamics inside F\/LOS communities than the \n\u201cGift Culture\u201d metaphor adduced by Raymond.  We consider authority as the \nembodiment of a community\u2019s respect and trust for the dedication and technical \nproficiency of those individuals who, through their sustained involvement in the \nproject, have demonstrated that they know better, not as some sort of deference to the \nreputation and property rights of more active or experienced developers. \n                                                \n17 Raymond (1999), Lerner and Tirole (2000). \n18 It is important to emphasise that the knowledge we are referring to is both technical (that is, about \nsoftware development and design), social (about the processes through which the community carries \nout its activities and the social norms that regulate interactions between participants) and \u201cpolitical\u201d \n(about the goals of the community and preferred ways of achieving them)  \n 10 \n \nIf, as we argue, the essential source of authority in a project is knowledge of purpose \nand technique (acquired and demonstrated through participation), then the community \nwill also be, to a degree, resistant to opportunistic behaviours aimed at maximising \nindividual reputations or manipulating the direction of its project. \n \n \nDistributed Authority \n \nOur analysis has so far amounted to an identification of \u201cinstitutional frameworks\u201d \n(norms of an epistemic community), \u201cmembership acquisition processes\u201d (through \nlegitimate peripheral participation) and \u201cgovernance\u201d (the accumulation of decision-\nmaking authority).  These three elements constitute the structure through which the \nefforts of a decentralised and heterogeneous community of volunteers are coordinated \nand focussed inside F\/LOS projects. In the simplest instantiation of this model, all \nthree of these elements are controlled directly or indirectly by the project \nadministrator, whose authority arises from her (perceived) superior knowledge of the \nproject. The authority to delegate, or to distribute authority, however, is an essential \naspect of the project administrator\u2019s authority, and the source of the emergence of \norganisational hierarchies such as the star-shaped structure characterising Linux, or \nthe team-based model followed by the BSD Unix project19.  \n \nWe contend that this authority delegation process is an inevitable consequence of the \ngrowth in the size and complexity of a project, and of the diversity of the population \nparticipating in it.  As new developers enter a project and specialise in different areas, \nthey implicitly appropriate these areas through their contributions, obtaining de facto \nresponsibility over them. If a conflict emerges between the project administrator and \nan expert in an area where the latter is perceived to be more knowledgeable, the \nabsence of clear criteria to determine who has the ultimate right to decide will result \nin confusion.20.  An administrator\u2019s delegation of authority to developers who have a \n                                                \n19 Moody (2002) and Weber (2004) characterise the GNU\/Linux organisational model. See Bezroukov \n(1999) for quotes from a former BSD Unix developer defending its centralised development model, as \nwell as J\u00f8rgensen (2001).  \n20 See Mateos-Garcia and Steinmueller (2002) and Moody (2002) for an account of this kind of conflict \nin the context of the GNU\/Linux and Emacs projects.  \n 11 \nhistory of high quality contributions is one way of addressing limitations in the \u2018span \nof control\u2019 in being well informed about the evolution of \u201cher\u201d project across a \nmultitude of fronts. This authority is exercised by decisions about an individual\u2019s \ncontributions to a project (either incorporating or rejecting them) which implies the \nacceptance or denial of that individual\u2019s access to the community.  Persistent \nacceptance of contributions in an area eventually leads to the developer become a \u2018de \nfacto\u2019 owner of it. This process will contribute to reducing the scope and intensity of \ncontroversies, inasmuch this delegation will be based on trust and experience.  It also \nsuggests that the administrator will delegate her authority on developers who are \naligned with her goals and values, and with whom she is less likely to conflict.  This \nis clearly a process of social structuration through accretion. \n \nAs Linus Torvalds, administrator of the GNU\/Linux kernel development team \nexplains in a mailing list: \n \n\u201cI take stuff that I feel is good. Often that feeling of goodness \ncomes from trusting the person who sends it to me, simply by past \nperformance. At other times, it is because I think the feature is \ncool, or well done, or whatever. Hint: if you want stuff in my tree, \nmake me trust you. Or work on things that I feel are innately \ninteresting. Don't bother dragging me into your flame-wars and \ntrying to convince me that I \u2018must\u2019 apply your patches.\u201d21  \n \nThe conceptual framework we have elaborated in this section has important \nimplications:  F\/LOS development comprises technological, social and institutional \naspects, which in our framework could be respectively referred to as \n\u201cdesign\/modularity\u201d, \u201clearning\/reputation\u201d and \u201cgovernance\/membership\u201d, and their \ninteraction will be an essential determinant of project policy and success22. Although \nwe acknowledge the existence of F\/LOS projects that function according to other \norganisational structures not necessarily based on the delegation of authority from an \n                                                \n21 http:\/\/www.lib.uaa.alaska.edu\/linux-kernel\/archive\/2002-Week-44\/0094.html  \n22 Defining project success is a difficult task (see Crowston et al, 2003), although we would lean \ntowards a definition that encompasses not only technical performance but also community \nsustainability. \n 12 \nadministrator, we hypothesise that their emergence can be traced using the conceptual \nframework we have presented before. \n \nIn the following section we undertake a case study of one such project, Debian, with \nthe aim of illuminating the relationships between the latter two spheres and \nsubstantiating the claims that we have introduced in the preceding analysis. It is one \nof our contentions that the absence of clear mechanisms for the exercise of authority \nin this project, including this delegation, that have become sources of conflict inside \nit. \n 13 \n \n3. Social Conflict and Organisational Structure in the Debian Community \n \nIn this section we develop a case study of the Debian GNU\/Linux distribution to \nprovide an empirical content to the preceding conceptual and theoretical discussion.  \nThe Debian community was chosen rather than some other F\/LOS community \nbecause 1) the process of deciding to include or exclude a package in the distribution \nis less complex and this unit of analysis affords greater comparability than analysis of \n\u2018submits\u2019 of code fragments in a F\/LOS community based upon coding, 2) the Debian \ncommunity has grown in size and complexity over time sufficiently to trigger \ninstitutional evolution, and 3) the Debian community has devoted considerable \n(public) effort to a reflexive discussion of its purposes and methods. \n \nThe case study was developed, and is presented, in two stages.  First, we investigate \nthe stated aims and philosophy, organisational structure and development practices of \nthe Debian community. Having done this, we examine its institutional evolution \nthrough a literature review and an analysis of available evidence including relevant \nnews items and, when possible, primary evidence extracted from mailing lists, online \nforums and other public discussions. In this second stage, we focus on periods of \ninstability that have led to the emergence of new organisational roles and structures to \nco-ordinate development efforts and regulate participation inside the project.  This \napproach is inductive in that it works back from manifestations of change to their \npossible sources and consequences.  By focussing on episodes in which organisational \nchange occurs, we are attempting balance expressions of dissent (which may be more \nor less continuous within the community) with statements defending current practice \nbecause, at the points of our analysis, the possibility of change of these practices is \nunder active discussion.  Nonetheless, this methodology is not capable of producing \nsystematic evidence about continuity, the periods in which dissent exists but is not \nmobilised into widespread or actively debated calls for or enactment of change. \nFinally, in the section entitle Analysis, we examine this historical account using as an \nanalytical prism the concepts and analytical tools presented in the previous section. \n 14 \n \nIntroducing Debian \n \nThe Debian project is a GNU\/Linux distribution (a collection of F\/LOS software \nprograms integrated with an operating system) that  was launched in August 1993. 23 \nDebian is developed by volunteers working in a decentralised fashion, and made \navailable for free.  Unlike several other distributions, Debian has not distributed a \n\u2018value added\u2019 package with user-friendly installer software, manuals, and CD or DVD \nimages of the software.24 \n \nThe Debian community has avowed its commitment to the F\/LOS philosophy with the \ninstitution of the Debian Social Contract and the Debian Free Software Guidelines \n(DFSG) which respectively codify the moral agenda of the project (to develop a \nF\/LOS Operating System that performs up to the highest standards of quality) and \ndefine a number of F\/LOS criteria with which the license of all the software included \nin the distribution must comply.25 \n \nThe organisation of Debian 26 \n \nAs we have mentioned, Debian is a distribution: its developers do not \u201ccode\u201d, but \n\u201cmaintain packages\u201d (initially developed by \u201cUpstream Authors\u201d who are not, \nusually, part of the community), an activity that involves reviewing those packages \nand integrating them into a release. These packages (4,500 source packages as of the \nrelease of Debian 3.0 and over 18,000 in Debian 4.0) contain the software \ncomponents that comprise an Operating System, as well as many other tools and \napplications (i.e. desktop environment, web-browser, database management, word \nprocessor etc.)27. Each maintainer is responsible for guaranteeing that her package \n                                                \n23 See Murdock (1993). \n24 Debian does identify companies that serve some of these functions for users and notes that these \ncompanies make a financial contributions to the Debian effort \n25 The Debian Free Software Guidelines constitute the kernel of the Open Source Definition. See \nhttp:\/\/www.debian.org\/social_contract (Debian Social Contract),  \nhttp:\/\/www.debian.org\/social_contract#guidelines (Debian Free Software Guidelines) and \nhttp:\/\/www.opensource.org\/docs\/definition_plain.html (Open Source Definition).. \n26 See Michlmayr (2003) for a more detailed overview of Debian\u2019s organisation. \n27 For more data about the size of different Debian distributions and its evolution, see Robles and \nGonz\u00e1lez-Barahona (2003).  \n 15 \ncontains high quality software that fits coherently with the rest of the distribution, and \nis licensed under terms complying with the Debian Free Software Guidance (DFSG). \n \nMaintainers upload packages to the Debian Archive, where they are checked for \nconsistency using automated scripts, and reviewed by an FTP Master who assesses \ntheir basic quality and copyright status.28. The packages that are accepted are, \ndepending on their level of reliability, incorporated to a file repository29: The project\u2019s \nRelease Manager periodically \u201cfreezes\u201d a sub-set of the packages in the most reliable \nrepository, which are then subject to further testing and eventually released as the \n\u201cstable Debian distribution\u201d. \n \nTeams such as Security or Quality Assurance take care of specific issues when the \nneed arises, such as when vulnerabilities in the code are detected or a package is \n\u2018orphaned\u2019 by its maintainer.30. \n \nA second institutional aspect that characterises Debian is the New Maintainer Process \n(NMP) through which individuals outside the project become maintainers.31 The \nNMP begins with the verification of an applicant\u2019s identity and an assessment of her \ntechnical expertise and understanding and commitment to Debian\u2019s norms and \nvalues32. The NMP usually takes several months to complete and has its own \norganisational apparatus. \n \nAnother essential element of Debian\u2019s organisation is an \u201cofficership\u201d in charge of \ndecision-making and conflict-resolution, with a structure established in the Debian \nConstitution (first ratified in its version 1.0 on December 1998). 33The Debian \nProject Leader (DPL) is chosen by Debian Developers in a yearly General Election; \n                                                \n28 The FTP Masters are also in charge of maintaining the technical infrastructure that supports the \narchive. For a summary of their functions refer to http:\/\/lists.debian.org\/debian-\nproject\/2005\/02\/msg00184.html.  \n29 See Monga (2004) for further details.. \n30 See http:\/\/www.infodrom.org\/~joey\/Vortraege\/2005-06-23 and http:\/\/qa.debian.org\/ for further \ninformation on these special teams.  \n31 For a detailed description of the New Maintainer Process see \nhttp:\/\/www.debian.org\/devel\/join\/newmaint and Wallach et al (2005) \n32 See O\u2019Mahony and Ferraro (2004), and Coleman (2005) for further details regarding the principles \naccording to which Debian\u2019s Web of Trust is organised, and examples of the procedures used to test an \napplicant\u2019s technical expertise and ideological commitment to Debian. \n33 See the Debian Constitution Version 1.2 (http:\/\/www.debian.org\/devel\/constitution) for a detailed \ndescription of each of the different positions and roles in the Debian organisational scheme. \n 16 \nshe is the official representative of Debian, responsible for defining the project\u2019s \nvision, and has the right to make urgent decisions, appoint a Technical Committee in \ncharge of conflict-resolution, and lend her authority to other developers (including the \naforementioned release manager). \n  \nDebian History \n \nDebian has often been described as an initiative that was launched with the aim of \ncreating a Linux Distribution that would be \u201ctrue\u201d to the Free Software principles. An \nanalysis of available documents and public discussions shows, however, that there \nwas an important element of pragmatism in the project founders\u2019 motivations.  \nAccording to one of them, the first reason for starting the project was discontent with \nthe quality of existing Linux distributions.34  \n \nIn contrast to the focus on \u2018Software Freedom\u2019 of these accounts, the initial Debian \nManifesto emphasises \u201cquality\u201d and \u201cresponsiveness to the needs of the user \ncommunity,\u201d without any references to the advancement of a specific political \nagenda. The Free Software Foundation (FSF) is only mentioned in the context of \npractical issues related to CD-ROM distribution. Although the FSF supported Debian \nwith a grant, there was an eventual split between both groups as a consequence of \nwhat was perceived to be the latter group\u2019s political interference with the activities of \nthe project35. \n \nDebian\u2019s association with FSF raised the profile of the project creating an influx of \npolitically motivated developers. This, together with the growing interest of \ncommercial firms and potential contributors not as knowledgeable or vocal about \nsoftware freedom issues, generated disagreements and confusion, and led to the \n                                                \n34 See the Debian Manifesto, which accompanied the Distribution\u2019s launch at \nhttp:\/\/www.debian.org\/doc\/manuals\/project-history\/ap-manifesto.en.html \n35 According to a former project leader \u201cWe had a little contretemps (sic) with FSF because we didn't \nwant to be under their direction, and Richard Stallman said some things that got people on the net \nangry, but it's not like it was some kind of war\u201d. http:\/\/lists.debian.org\/debian-\ndevel\/1996\/10\/msg01149.html  \n 17 \neventual definition of the project\u2019s policy on this area36. As a developer recalls in an \ninterview published in O\u2019Mahony (2002): \n \n\u201cA guy who is now with [open source firm] had suggested putting a \nparticular package in [to the Debian distribution]. And I felt that the \npackage was not free software. And I objected to it, [\u2026] I needed \nmore than \u201cI don\u2019t like it\u201d to be my objection [\u2026.] I got this idea that \nthere should be a social contract between Debian and the free software \ncommunity that says how that Linux distribution should behave. So I \ndecided that I could justify the choice of what goes in Debian and what \ndoes not, that we could have a Debian Social Contract.\u201d \n \nThe Debian Social Contract (DSC) and the Debian Free Software Guidelines (DFSG) \nmade explicit the project\u2019s ideological commitment to the tenets of Free Software, \ncodifying the beliefs and values that participants in the project were expected to \nuphold. This was associated with a shift from the initial pragmatism and focus on \nquality and usability towards a stronger emphasis on ideological and political issues. \nA developer, dissatisfied with this trend, states quite starkly \u201cFree software was a tail \nthat eventually wagged the dog\u201d37. \n \nThe next step in the institutional evolution of the project was the creation, in 1998, of \nthe Debian Constitution, a formal framework to regulate the election of the DPL: this \nwas made necessary by a number of conflicts between the extant leader (who had \ninherited his position from the project founder) and several developers. There were \nconcerns about a perceived illegitimacy in the exercise of authority by the DPL, \nexcessively heavy-handed and intrusive according to some developers38. Additionally, \nhis focus on \u201cbringing Debian to the masses\u201d went against the wishes of an important \n                                                \n36 See http:\/\/lists.debian.org\/debian-devel\/1996\/06\/msg00600.html for a discussion on this matter: \nWhen the Project leader suggests \u201cdropping the non-free directory anditscontents from Debian. We \ndon't really need anything in there, and it would be nice to get closer to the free software ideal\u201d some \ndevelopers reply that (most Debian users- and developers) \u201care probably interested more in a useful \nsystem and less in political goals like having 100% (not 99%) free software\u201d). \n37 http:\/\/lists.debian.org\/debian-devel\/2000\/06\/msg01194.html . This constitutes another illustration \nbetween the principles of \u2018free software\u2019 and \u2018freedom to choose whatever software does the job\u2019 \npresent in many F\/LOS communities (Elliot and Scacchi 92003)). \n38 See http:\/\/lists.debian.org\/debian-devel\/1997\/09\/msg00966.html for an example of a situation where \nthe project leader was perceived to be interfering with the development of the package \u201cDeity\u201d.   \n 18 \nsegment of the community (who preferred to focus on the technical needs of the \n\u201chacker\u201d audience)39.  \n \n\u201cWhile now a large number of people think that (second project leader) was \nthe best thing since sliced bread, lots of people were pissed off back then \nwith him commanding people around. And what was the result? A \nConstitution that would ensure that no leader would ever have such power \nagain\u201d40 \n \nDebian had reached the organisational milestone at which the size and degree of \ncomplexity where decision-making through protracted debate was unfeasible.  In \nsome cases it would be necessary for the leader to exercise her authority in order to \nsettle controversial matters. In order to do this she would need political legitimacy, \nobtained through her success in the Debian General Elections. Concerns about a \npotential slide of Debian into \u201cAuthoritarianism\u201d led to the inclusion in the Debian \nConstitution of safeguards to avoid an excessive concentration of power in the hands \nof the DPL and other officers.41  \n \nThe launch, in 1998, of the Open Source Initiative and the creation of a legal \u201cOpen \nSource Definition\u201d inspired by the DFSG raised Debian\u2019s profile even further, and led \nto a rapid surge in the number of new contributors, which resulted in what O\u2019Mahony \n(2003) and Coleman (2005) refer to as the \u201cmembership crisis,\u201d a second milestone in \nDebian\u2019s organisational evolution. Veteran members of the project put in doubt the \ntechnical expertise and commitment of these \u201cnovices\u201d: It was argued that they \nuploaded low quality packages to the distribution and were responsible for a growth \nin the project\u2019s bug-count (O\u2019Mahony (2004) p. 21) and that their ideological \ncommitment to the project was doubtful. Concerns were also voiced about the risk of \nmalicious new maintainers obtaining access to the project\u2019s code repositories and \nuploading security-compromised packages to the distribution.  \n \n                                                \n39 See his resignation notice at http:\/\/old.lwn.net\/lwn\/1998\/0319\/resign.html  \n40 http:\/\/www.cyrius.com\/journal\/2006\/03\/09 (2003-2004 DPL\u2019s blog). \n41 Including the possibility of the community overriding the DPL in a \u2018general resolution\u2019, or \nrestrictions of her rights including the expulsion of other developers.  \n 19 \nAccordingly, previous channels for entrance in the project were closed and eventually \nreplaced with the New Maintainer Process (NMP), a formal procedure for gaining \nmembership in Debian including a verification of the new maintainer\u2019s identity and \nan examination of her commitment to Debian\u2019s philosophy, as well as her technical \nexpertise42. \n \nAlthough the NMP constitutes the last step in Debian\u2019s institutional evolution as of \nthe Spring of 2007, there have been further controversies between developers that \nhave, for example, led some to propose further regulations in the project, such as a \nbinding Code of Conduct for the mailing lists43.  More interesting, for the purposes of \nthis paper, is the polemic concerning the (arguably) excessive power wielded by a \ncadre of individuals in special positions such as Debian Account Manager, FTP \nMaster and other special teams. This group (referred to as \u201cthe Cabal\u201d by \ndisenfranchised developers) has been accused of lack of responsiveness and \naccountability to the rest of the community and of trying to manipulate Debian\u2019s \nevolution secretly, making decisions about the project after private meetings outside \nof the community\u2019s scrutiny. The polemic proposal for Debian\u2019s future evolution \nelaborated by the release team (comprising release assistants and FTP Masters) during \na private meeting held Vancouver in March 2005 constitutes an example of this. This \nproposal, which implied the discontinuation of the project\u2019s support for several \nhardware architectures, was interpreted as an attempt to hijack the control of Debian \nfrom the community, and led to intense arguments in the developer mailing lists.44.  \n \nControversies about the balance of power inside Debian came to the forefront again in \nMarch 2006, when the then Stable Release Manager resigned from his position with \nthe following comment: \n \n\u201cI'm sick of being left in the void.  I'm sick of ftp masters not answering \nmails from the stable release manager to negotiate a timeline.  I'm sick of \nftp masters suddenly creating arbitrary preconditions for stable updates. \n                                                \n42 See Wallach, Allan and Harries (2005) for a history and detailed description of the process. \n43 See http:\/\/www.gatago.com\/linux\/debian\/vote\/8051951.html for a debate about this issue in the \ncontext of 2006 Debian General Elections. \n44 See http:\/\/lists.debian.org\/debian-devel\/2005\/12\/msg00574.html for criticisms in respect to the first \narea.  See Coleman (2005), as well as the original discussion at http:\/\/lists.debian.org\/debian-\ndevel\/2005\/03\/thrd2.html  regarding the Vancouver memo \u201cflamefest\u201d. \n 20 \nI'm sick of having to ask again and again and being constantly blocked by \nthem. I'm sick of this entire situation. It makes me ill, angry and utterly \nfrustrated.  It causes me being frustrated of Debian and unable to work on \nother issues, needing a rest more often than planned.  I should do better \nwith my limited life\u201d45 \n \nThis resignation led to requests for the dismissal of a particularly controversial \nFTP Master from his position. It was argued that according to the Debian \nConstitution, this individual could be relieved from his duties by the DPL. These \ncalls have so far been ignored or rebutted. It has been argued that individuals in \npositions such as FTP Master \u201cmight be better thought of as \"infrastructure \nmaintainers\" instead (of as project delegates), which implies a different \nrelationship to the DPL.\u201d46. Some developers have showed their concern about a \ndifficult transition for the project in case an aggressive course of action is taken. 47 \n \nAnalysis \n \nWe understand the history of Debian as a process in which project growth (both \nsocial and technical) has given rise to disruptive processes that have been addressed \nthrough the implementation of institutional strategies aimed at constraining diversity \n(by establishing the principles that regulate the functioning of the project, codifying \nits goals and values and promoting conformance by new participants) and reduce the \nco-ordination costs incurred as a consequence of increased complexity (by enforcing \na degree of standardisation in development procedures and techniques and \nestablishing a number of quality assurance measures). The values with which it is \nnecessary to agree in order to become a member of the Debian \u2018epistemic \ncommunity\u2019 have been clearly established in the Debian Social Contract, and the \nprocesses of legitimate peripheral participation through which this membership is \nacquired has been formalised into the New Maintainer Process. The Debian \nConstitution constitutes a third element legitimising the exercise of authority (the \nthird \u2018leg\u2019 of our conceptual triad). \n                                                \n45 http:\/\/lwn.net\/Articles\/174930\/ . See  \n46 Interview with 2005-2006 Debian Project Leader available at \nhttp:\/\/linux.slashdot.org\/article.pl?sid=06\/04\/11\/1931202  \n47 http:\/\/lists.debian.org\/debian-devel\/2005\/12\/msg00633.html  \n 21 \n \nThis process is rife with controversy, as the creation and rearrangement of \ninstitutional structures has been perceived to clash with essential tenets of F\/LOS \ndevelopment such as openness or freedom, and provoked shifts in the power (and \nknowledge) structure of the project. It is important to highlight that the establishment \nof goals, norms, participation criteria and standard work practices constitutes an \nexercise of authority by those individuals in positions of leadership inside the project, \nand has been opposed by participants who support different visions of its future. Their \nimplementation has contributed to reduce instability, but has also led to the \nemergence of new problems such as an alleged slowing of the admissions process, a \ndeficit in innovation and a sluggish cycle of releases. We now examine these issues. \n \nA selection mechanism for constraining diversity is necessary in order to minimise the \nscope of conflict between participants with different beliefs about desirable \ndevelopment techniques, architectures and intermediate and final goals for the project. \nAs we observed earlier, devising such a selection mechanism is not straightforward \nand it is nearly impossible if there is no clarity about what the participants in the \nproject are expected to believe or strive for.  In such cases, conflict will inevitably \nensue with the potentially catastrophic selection mechanism of exit or forking taking \nhold as different constituencies inside the community pull in different directions. The \npotential for this becomes higher as the project grows.  Debian\u2019s increasing popularity \nbrought an influx of developers with different \u201cvisions\u201d about the purposes of the \nproject, and this made it necessary to set down policies and goals (that until then had \nremained tacit and vague) in order to avoid continuous discussion and controversy \nwhich would stall or disrupt the project. \n  \nThe authority of the project leaders determined the result of this process: developers \nwho were strongly committed to the ideological tenets of Free Software had reached, \nthrough continuous, high quality contributions, influential positions inside the project, \nfrom which they set their political and technical agenda.  This agenda was \nimplemented in an explicit (and permanent) manner once their divergences with the \npragmatist faction (less strict about, for example, the inclusion of non-free software in \nthe distribution) became evident. The DSC and the DSFG were thus erected as \n 22 \nexplicit barriers to the entrance to the project of potential dissenters (sources of \nconflict), and as guides for current members. As O\u2019Mahony (2006) argues: \n \n\u201cThe process of creating these two documents formalized the \npreviously unarticulated values upon which the group was founded. It \nalso helped ensure that a growing body of contributors new to the \ngroup\u2019s history and norms could share them. Sources both internal and \nexternal to the project suggest that gaining internal consensus of the \ngroup\u2019s mission and articulating a basis of authority was critical in \npreserving the project from commercial interests\u201d. (p. 261). \n \nThe Debian Constitution can be seen as a codification of the project\u2019s vision that has \nthe goal of communicating to potential entrants what will be expected of them if they \ndecide to join the project, and discouraging from participation those individuals \nwhose values (e.g. more tolerant of proprietary software) conflict with the \u2018status \nquo\u2019. Nevertheless, if thought of as a \u2018contract,\u2019 its non-binding and abstract nature \nwould not have been sufficient to keep developers opposing or ill-informed about the \ntenets of F\/LOS software (or devoid of the necessary technical skills) from entering \nthe project.  In a context of rapid population growth (which made monitoring of \nparticipant behaviour increasingly difficult), this led to the \u2018membership crisis\u2019. This \nagain provoked institutional change, that is, the implementation of a New Maintainer \nProcess with the goal of guaranteeing that rules such as those codified in the DSC and \nDSFG would be understood and respected by new developers.  The aim was to \ndiminish the risk of malicious, unaware or rebellious individuals entering the project.   \n \nThe Debian NMP, with its period of \u201cinternship\u201d, during which a candidate works in \nclose collaboration with a sponsor (mentor) and an Application Manager formalises a \nlegitimate peripheral participation process that had previously been embedded in the \nday-to-day activities of the community. It specifies a number of criteria that an \napplicant should fulfil in order to become full member of Debian.  An applicant who \nhas gone through the NMP can be expected to know the rules of the project, and to \ncontribute according to them. \n \n 23 \nAlso, by raising the barriers to participation in the project, the NMP discourages \ncasual contributors whose inconsistent participation patterns (\u201cwrong attitude\u201d) might \nnegatively affect the quality of the distribution.  \n \nSome members of Debian have complained about the severity of the NMP \nrequirements (especially in respect to its philosophical and political topics), and the \nlength of time it takes to finalise it, which create important barriers to entrance into \nthe project. In response to these criticisms, it has been argued that casual applicants to \nDebian membership need to be filtered out of the NMP as soon as possible in order to \navoid wasting the time of volunteer Application Managers, and that the creation of an \nexplicit process for the acquisition of membership makes Debian \u201cmore inclusive\u201d \nthan other projects such as the BSD Unix Distribution where, while the \n \n\u201c\u2026gurus accepted contributions from those who were not already \nparticipating on the project, it was difficult to pierce the inner circle of \nauthority and become an actual member of the team. This (\u2026) produced \nan unacceptable form of project participation, characterized by a \ndegraded elitism that failed to equalize the terrain on which developers \ncould prove their worth\u201d. (Coleman, 2005, pp. 12-13) \n \nThe NMP establishes clearly the requisites for membership reduces the diversity of \nparticipant viewpoints to a manageable level through the enforcement of a specific \nDebian \u201cmindset\u201d or \u201cattitude\u201d (especially in the area of \u201csoftware freedom\u201d). It also \nlessens the costs of co-ordinating decentralised development efforts (and ensuring \nquality) by guaranteeing that new entrants are conversant with a number of skills and \nprocedures that regulate development inside the project. \n \nThus, the DSC, DSFG and NMP (and the technical policy manuals new applicants are \nexpected to become familiar with as part of the latter) constitute institutional \nstructures that promote specific goals and techniques inside the project and alignment \nin the understanding and compliance of new participants. However, this alignment \ndoes not preclude the need to make decisions about a multitude of issues such as \ndetermining the operational goals of a release, assessing the relative merits of \ndifferent implementations of the same feature, or the stability of a package, \n 24 \ninterpreting legal issues or appraising and punishing undesirable behaviours. The goal \nof the Debian Constitution is to legitimise decisions on these issues while avoiding \nexcessive concentration of authority in the hands of an elite of developers.  Debian \nachieves this legitimisation by using governance structure that is democratically \nelected (sustained high quality contributions- i.e. knowledge about the project- still \nconstitute one of the main appeals that a candidate offers), and second, exercised in a \nlimited way without stepping into the \u201careas of expertise\u201d (packages) of other \ndevelopers48.    \n \nThis emphasis on democratic selection of leaders is not present in technical decision-\nmaking, and using political tools such as Debian General Resolutions for these \nmatters is clearly discouraged (Coleman, 2005). It is argued that technical \ncontroversies have a right answer that can be reached through argument and \ndiscussion, and that \u201cvoting blocks the methodology of open debate\u201d49. Observation of \nthe levels of technical bickering in Debian\u2019s mailing list underscores the excessive \noptimism of this belief: there are several controversial areas where the possibility of \nclosing a debate are curtailed by technical uncertainty and the heterogeneity of \ndevelopers\u2019 goals (at an operational, not necessarily political level); the unwillingness \nto exercise authority or \u2018political leadership\u2019, perceived to interfere with processes of \ntechnical debate has, according to a growing number of developers, impacted the \nproject\u2019s release cycle negatively.50 Discussions between candidates for the project \nleadership in recent years show dissatisfaction with the actual lack of action from past \nleaders. It is argued that Debian Officers need to exercise their authority more \nforcefully in order to \u201cpush the project forward\u201d. \n \n \u201cI think that one of the biggest problems Debian is currently facing is \nthe inability to make decisions. There are so many endless, completely \nfutile (and repetitive) discussions going on. We need someone who \ncomes in, tells people to shut up and makes a decision on behalf of the \nproject. A decision people will follow, even if they personally disagree \n                                                \n48 One of the main complaints about the second project leader was his perceived interference with the \ninner workings of one of Debian\u2019s packages, Deity. \n49 Coleman (2005), p. 20. \n50 See 2007\u2019s Debian Project Leader debate for evidence regarding the perceived problems that \nconstant bickering and miscommunication have caused in the project (available at \nhttp:\/\/www.debian.org\/vote\/2007\/suppl_001_debate ) \n 25 \nwith it. But seriously, do you think our culture would currently accept \nsuch a leader? I can tell you from experience that even people who have \nbeen asking for a \"strong\" leader won't actually follow a leader who tells \nthem to take a certain course of action\u201d51 \n \nThis illustrates the strong barriers to modifying Debian\u2019s organisational \nstructure to establish more decisive structures and speed up decision-making \nand conflict resolution processes.  Such changes would clash with the main \nvalues of the project and would involve redistributions of power that were \nasymmetric with participants\u2019 expertise.  The exercise of authority by a leader \nover another maintainer\u2019s package would be difficult to legitimise in this \ncontext. According to our conceptual framework, the political processes through \nwhich authority is legitimised in Debian are not sufficiently aligned with the \nproject\u2019s informational architecture (which favours knowledge fragmentation, \nand henceforth, \u2018political decentralisation\u2019). If, as we argue, F\/LOS \ncommunities only tolerate an individual\u2019s exercise of authority over her areas of \nexpertise, it seems that participants in Debian will be confined to decisive \ndecision-making only inside the package they maintain.   \n \nThe conflict between de jure authority enacted through Debian elections, and de facto \nauthority acquired via sustained participation and the ensuing accumulation of \nexpertise is also illustrated by the divergences between the Debian officership and \nwhat dissenters have called \u2018The Cabal\u2019 (FTP Masters and Account Management). \nAlthough there is, in principle, a \u201cdivision of powers\u201d between these two groups, with \nthe former taking care of high level \u201cvision\u201d and \u201cco-ordination\u201d issues, and the latter \nof infrastructure and quality, it seems that, once again, goals and policy are not so \neasy to extricate from the technical substrate where they are embedded, and this \ncauses conflict. \n \n\u201cConstant politicking\u201d tolerated by a DPL without sufficient power to manage \nthe community pro-actively have slowed Debian\u2019s development to an extent \n                                                \n51 Post in the blog of a former DPL: http:\/\/www.cyrius.com\/journal\/2006\/03\/09#being-dpl  \n 26 \nsome fear might endanger its survival. As a developer argued in his 28th August \n2006 resignation note from the project: \n \n\u201c\u2026over the past few weeks (months? Years?) it's become clear to \nme that Debian doesn't really seem to know who or what it's for. \nArguments erupt over whether something is a deeply held principle \nor an accident of phrasing on the website; whether we should release \nmore often or less often; whether free software is more important \nthan our users having functional hardware.52\u201d \n \nConcerns about the growth of Ubuntu, a GNU\/Linux distribution based on \nDebian but developed more rapidly by a smaller team of paid developers have \nled to calls for the enforcement of a periodical release rate in Debian, for a more \nstreamlined process for the inclusion of advanced features in stable releases, and \neven for the creation of a fund-raising structure to pay core developers for their \nwork53.  Each of these examples aim to change the institutional setting of the \nproject in order to modify its development process and outcomes, and illustrate \nthe kind of debate about project goals (in this case innovation versus stability) \nthat periodically takes place inside the community54. \n                                                \n52 http:\/\/mjg59.livejournal.com\/66647.html  \n53 http:\/\/www.linux.com\/article.pl?sid=06\/09\/21\/1623232  \n54 See the following discussion at the news-site Slashdot for representations of both points of view: \nhttp:\/\/linux.slashdot.org\/comments.pl?threshold=5&mode=thread&commentsort=0&op=Change&sid=\n192057   \n 27 \n \n4. Conclusions \n \nIn this final section we outline the conclusions and limitations of our analysis and \nsuggest avenues for further research. \n \nA tale about the bazaar \n \nThis paper presents a cautionary tale about prevailing bazaar metaphor when \napplied to the analysis of F\/LOS activities, and also when implemented in it55. We \nhave focussed on a community where the conjugation of openness and growth has \ntaken its toll in output delivery schedules and social stability. As we have shown, \nthese problems have been tackled through institutional strategies that alter the \nbalance between openness and stability, but that also lead to unintended \nconsequences, such as development stagnation or decreases in participation.  \nThese observations suggest caution in employing an idealised model of the bazaar \nas an analytical metaphor: norms, values, membership processes and structures \nfor governance appear to be essential in order to understand the productive and \nsocial dynamics of a project. To the extent that open source ways of working \nconstitute an organisational innovation, it is an innovation with structural \nimplications and contents.56 \n \nHaving established the relevance of focussing on F\/LOS institutions, we have \nillustrated how the epistemic community and legitimate peripheral concepts, and \ntheir extension to include the emergence of hierarchies and processes governing \nauthority distribution constitute useful tools for analysis of the evolution of the \nDebian community. In the case of Debian, this latter process, the delegation of \npower based on trust, is constrained by the decentralisation of the structures \nthrough which development takes place. This explains the difficulties faced by the \nDebian project leader when trying to exercise any sort of meaningful authority \n                                                \n55 Our focus has been on Eric Raymond\u2019s vision of F\/LOS development, but our contention that \ndecentralised accounts of the advantages of this model needs to be complemented with an analysis on \nthe actual social and political institutions, and organisational structures through which work in F\/LOS \nprojects is accomplished are also relevant to the fruitful research program on User-Centric Innovations \ncarried out by Eric von Hippel and his colleagues (see von Hippel, 2002). \n56 Further elaboration of these ideas may found in Mateos-Garcia and Steinmueller (forthcoming). \n 28 \nover their projects \u2013 an experience that stands in contrast with the GNU\/Linux \nkernel or the BSD UNIX distribution.  It also illuminates how the nature of \ntechnical platform for development (Debian\u2019s package management system) \ninfluences the social structure of the community. In this sense, our specification \nof the processes of institutional emergence constrained by the nature of a project\u2019s \ntechnical architecture complements the classification of F\/LOS projects in \ndifferent categories depending on their purposes, participation patterns and \nstructures, (Nakakoji et al, 2002). It also appears linked to the description of the \nprocesses through which projects evolve (as for example, they move from initial \nstages of experimentation towards stability as more users start relying on them) \noffered in Nakakoji et al, 2002. \n \nImplications \n \nOur analysis has several implications relevant for F\/LOS projects and companies \nintent on fostering F\/LOS communities for support and co-development of their \nproducts: \n \n\u2022 Institutional structures are essential determinants of a project\u2019s outcomes \nsuggesting that special attention should be paid to their design and evolution \nincluding the explicit and implicit incentive structures that they create. \n\u2022 Technical knowledge about a project area is likely to be the primary source of \nlegitimacy for exercises of authority inside it. Therefore, the nature of the \nplatform adopted for development (which determines the form in which \nknowledge is accumulated or dispersed throughout the community), \nconstrains management actions inside a project. \n\u2022 Decentralised platforms with components that interlink using standardised \ninterfaces are easier to scale and employ to facilitate parallel development, but \nthey also make it difficult and costly to oversee the quality of contributions, \nand to exercise authority pro-actively.  This may hinder, for example, \narchitectural innovation or, as we have shown in the case of Debian, slow \ndown development speed. \n 29 \n\u2022 On the other hand, \u201cvertical structures\u201d where contributions are processed \nupstream through \u201cgatekeeper\u201d positions (such is the case of the GNU\/Linux \nproject) may be overloaded by growth. \n\u2022 Establishing goals and norms early in the project life may avoid unproductive \ndiscussions or struggles for control over the project\u2019s direction when the \nproject has accumulated a more diverse group of participants. \n\u2022 Formalisation of institutional structures through the codification of project \nnorms and values and joining procedures can simplify the negotiation \ninvolved in the legitimate participation processes, increase participants\u2019 \nfeeling of \u201cownership\u201d over the project and sharpen the focus of discussions. \nHowever, they do not guarantee the elimination of conflict and they may \ndiscourage participation as well as being costly in terms of resources. \n \nLimitations and issues for further research \n \nThe qualitative, exploratory and situated approach followed in this paper limits \nthe generalisation of its conclusions.  Our results are based on evidence that \nshould be interpreted with caution. \n \nIn particular, although our emphasis on controversies, disruptive processes and \ninstitutional reactions to them provides what we deem to be a healthy \ncounterpoint to other, more optimistic, accounts of these projects\u2019 evolution, on \nthe downside it might lead to excessive weight being placed on the opinions and \nperceptions of conflictive and disgruntled participants or minority groups. In the \nSpring of 2007, Debian released Debian 4.0 with four times as many packages as \nits prior release, demonstrating that despite the sharp conflicts that we consider in \nthis paper, the community is still very much alive and successful in its main \npurpose. \n \nThe extent to which our results can be applied to other projects is limited, \nalthough preliminary research on other projects (Mateos-Garcia and Steinmueller, \n2002) seems to support them. Nevertheless, further research focussing on other \nlarge projects such as for example Apache, BSD UNIX, Mozilla or Perl would be \nhelpful. It would be particularly interesting to engage in a larger-scale quantitative \n 30 \neffort using the data available in F\/LOS repositories such as SourceForge, \nFreshmeat or Savannah, in order to determine the extent to which our conclusions \ncan be generalised to a broader collection of (medium size to large) F\/LOS \nprojects. This would require an operational definition of several of the variables \nwe have defined in our analysis, such as \u201cconflict\u201d, \u201corganisation\u201d, \u201cbarriers to \nparticipation\u201d or \u201cproject social performance\u201d-- In terms of community \nsustainability -- a difficult but potentially rewarding effort. \n 31 \nReferences57 \n \nBachrach, P. and Baratz, M., 1964. Decisions and nondecisions: An analytical framework. \nThe American Political Science Review 57 (3), pp. 632-642.  \nBezroukov, N., 1999. Open source software development as a special type of academic \nresearch (Critique of vulgar Raymondism). First Monday 4 (10). \n(http:\/\/www.firstmonday.dk\/issues\/issue4_10\/bezroukov\/index.html ) \nBrooks, F., 1982. The Mythical Man-Month : Essays on Software Engineering. Addison-\nWesley, Reading, Massachusetts. \nColeman, E.G., 2005. Three Ethical Moments in Debian. \nhttp:\/\/papers.ssrn.com\/sol3\/papers.cfm?abstract_id=805287  \nCrowston, K., Annabi, H. and Howison, J., 2003. Defining open source project success. \nInternational Conference on Information Systems (ICIS), 2003. \nhttp:\/\/floss.syr.edu\/publications\/icis2003success.pdf#search=%22crowston%20open%20\nsource%20success%22  \nEdwards, K., 2001. Epistemic communities, situated learning and open source software \ndevelopment. Working paper: http:\/\/opensource.mit.edu\/papers\/kasperedwards-\nec.pdf#search=%22kasper%20edwards%20epistemic%22 \nElliot, M. and Scacchi, W. 2003. Free Software Developers as an Occupational \nCommunity: Resolving Conflicts and Fostering Collaboration. Proceedings of the 2003 \nInternational ACM SIGGROUP Conference on Supporting Group Work, Santa Isabel \nIsland, Florida. \nGhosh, R., 1998. Cooking pot markets: an economic model for the trade in free goods \nand services on the Internet. First Monday 3(3). \nhttp:\/\/www.firstmonday.org\/issues\/issue3_3\/ghosh\/index.html  \nGhosh, R., Glott, R., Krieger, B., Robles, G., 2002. Free Libre and Open Source Software \nSurvey and Study Final Report. International Institute of Infonomics, University of \nMaastricht and Berlecon Research GmbH. \nhttp:\/\/www.infonomics.nl\/FLOSS\/report\/Final4.htm#_Toc13908258  \nHaas, P. M., 1992. Introduction: Epistemic communities and international policy \ncoordination. International Organization 46 (1): 1-36 \nHerbsleb, J., Mockus, A., Finholt, T.A., Grinter, R.E., 2000. Distance, dependencies, and \ndelay in a global collaboration. Proceedings of the 2000 ACM conference on Computer \nsupported cooperative work, Philadelphia, Pennsylvania. \nhttp:\/\/portal.acm.org\/citation.cfm?id=359003&coll=portal&dl=ACM  \nHimanen, P., Torvalds, L., Castells, M., 2001. The Hacker Ethic. New York, Vintage. \nJ\u00f8rgensen, N, 2001. Putting it all in the trunk: incremental software development in the \nFreeBSD open source project. Information System Journal 11 (4) 321-336. \nLakhani, K., Wolf, B., Bates, J., DiBona, C., 2002. The Boston Consulting Group Hacker \nSurvey Release 0.73. http:\/\/www.ostg.com\/bcg\/bcg-0.73\/BCGHackerSurveyv0-73.html  \nLave, J., Wenger, E., 1991. Situated Learning: Legitimate Peripheral Participation, \nCambridge University Press. \nLerner, J., Tirole, J., 2000. The simple economics of open source. National Bureau of \nEconomic Research, Cambridge MA, Working Paper 7600. \n                                                \n57 All electronically available documents last retrieved on the 28th September 2006. \n 32 \nLevy, S., 1985. Hackers. Dell, New York. \nMateos-Garcia, J., Steinmueller, W. E., 2002. The open source way of working: A new \nparadigm for the division of labour in software development?. SPRU Electronic Working \nPaper Series No. 92, \nhttp:\/\/www.sussex.ac.uk\/Units\/spru\/publications\/imprint\/sewps\/sewp92\/sewp92.pdf  \nMateos-Garcia, J., Steinmueller, W. E., (forthcoming). Open, but how much? Growth, \nconflict and institutional evolution in open source communities. In. Amin, A., Roberts, J. \nOrganising for creativity: Community, economy and space, Oxford University Press, Oxford. \nMichlmayr, M., 2003. Managing Debian. \nhttp:\/\/www.ukuug.org\/events\/linux2003\/papers\/michlmayr.pdf#search=%22managing%20de\nbian%22 \nMonga, M., 2004. From Bazaar to Kibbutz: how freedom deals with coherence in the Debian \nproject. Collaboration, Conflict and Control: The 4th Workshop on Open Source Software \nEngineering W8S Workshop - 26th International Conference on Software Engineering. \nEdinburgh, Scotland. http:\/\/homes.dico.unimi.it\/~monga\/lib\/oss-\nicse04.pdf#search=%22monga%20bazaar%  \nMoody, G., 2002. Rebel Code: Linux and the Open Source Revolution. Penguin Books, New \nYork. \nNakakoji, K., Yamamoto, Y., Nishinaka, Y., Kishida, K. and Ye, Y., 2002: Evolution Patterns \nof Open Source Systems and Communities. Proceedings of the International Workshop on \nPrinciples of Software Evolution, Orlando, Florida. \nO\u2019Mahony, S. and Ferraro, F., 2003. Managing the boundary of an \u2018open\u2019 project. Santa Fe \nInstitute (SFI) Workshop on The Network Construction of Markets. \nhttp:\/\/opensource.mit.edu\/papers\/omahonyferraro.pdf#search=%22o'mahony%202002%20de\nbian%22  \nO'Mahony, S., (2006). Developing community software in a commodity world. in M. Fisher, \nM. and Downey, G., Frontiers of Capital: Ethnographic Reflections on the New Economy. \nDuke University Press, Durham, NC, pp. 237-266. \nRobles, G., Gonz\u00e1lez-Barahona, J., 2003. From Toy Story to Toy History: a deep \nanalysis of Debian GNU\/Linux. \nhttp:\/\/es.tldp.org\/Presentaciones\/200309hispalinux\/20\/20-\nen.pdf#search=%22robles%20barahona%20toy%20story%22  \nRaymond, E. S., 1999. The Cathedral and the Bazaar: Musings on Linux and Open \nSource by an Accidental Revolutionary. O'Reilly and Associates, Inc., Sebastopol, CA. \nVarian, H., Shapiro, C., 2004. Linux adoption in the public sector: An economic analysis. \nhttp:\/\/www.ischool.berkeley.edu\/~hal\/Papers\/2004\/linux-adoption-in-the-public-\nsector.pdf \nvon Hippel, E., 2002.Horizontal innovation networks - by and for users. Sloan School of \nManagement, MIT, Working Paper No. 4366-02. June. \nvon Krogh, Spaeth, S., Lakhani, K., 2003. Community, joining, and specialization in open \nsource software innovation: a case study. Research Policy 32 (7), pp. 1217\u20131241.  \nWallach, H., Allan, M., Harries, D., 2005. The Debian New Maintainer Process: History and \nAims. \nhttp:\/\/www.srcf.ucam.org\/~hmw26\/publications\/debconf5.pdf#search=%22Wallach%2C%20\nAllan%20and%20Harries%20%22  \nWeber, S., 2004. The Success of Open Source. Harvard University Press, Cambridge, \nMassachusetts.  \n 33 \n \n"}