{"doi":"10.1016\/j.jlap.2006.05.003","coreId":"193690","oai":"oai:lra.le.ac.uk:2381\/1828","identifiers":["oai:lra.le.ac.uk:2381\/1828","10.1016\/j.jlap.2006.05.003"],"title":"Structural and behavioural compatibility of graphical service specifications","authors":["Heckel, Reiko","Cherchago, A."],"enrichments":{"references":[],"documentType":{"type":null}},"contributors":[],"datePublished":"2007","abstract":"The ability of applications to dynamically discover required services is a key motivation for Web Services. However, this aspect is not entirely supported by current Web Services standards. It is our objective to develop a formal approach, allowing the automation of the discovery process. The approach is based on the matching of interface specifications of the required and provided services.\\ud\n\\ud\nIn the present paper, we establish an integral notion of structural and behavioural compatibility of service specifications. While structural information is represented by operation declarations, behavioural descriptions are provided by contracts expressed as graph transformation rules with positive and negative application conditions. The integration of structural and behavioural descriptions is facilitated by typed and parameterised graph transformation systems, augmenting the rule-based description of behaviour by a type graph and operation declarations representing the structural aspect.\\ud\n\\ud\nThe matching relation taking into account this combination is called parameterised substitution morphism. We show that substitution morphisms satisfy the semantic requirement inherent in its name: the substitutability of abstract operations by (calls to) concrete ones","downloadUrl":"","fullTextIdentifier":null,"pdfHashValue":null,"publisher":null,"rawRecordXml":"<record><header><identifier>\n        \n            \n                oai:lra.le.ac.uk:2381\/1828<\/identifier><datestamp>\n                2015-12-22T12:25:24Z<\/datestamp><setSpec>\n                com_2381_316<\/setSpec><setSpec>\n                com_2381_9549<\/setSpec><setSpec>\n                col_2381_1116<\/setSpec>\n            <\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:doc=\"http:\/\/www.lyncode.com\/xoai\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n            \nStructural and behavioural compatibility of graphical service specifications<\/dc:title><dc:creator>\nHeckel, Reiko<\/dc:creator><dc:creator>\nCherchago, A.<\/dc:creator><dc:description>\nThe ability of applications to dynamically discover required services is a key motivation for Web Services. However, this aspect is not entirely supported by current Web Services standards. It is our objective to develop a formal approach, allowing the automation of the discovery process. The approach is based on the matching of interface specifications of the required and provided services.\\ud\n\\ud\nIn the present paper, we establish an integral notion of structural and behavioural compatibility of service specifications. While structural information is represented by operation declarations, behavioural descriptions are provided by contracts expressed as graph transformation rules with positive and negative application conditions. The integration of structural and behavioural descriptions is facilitated by typed and parameterised graph transformation systems, augmenting the rule-based description of behaviour by a type graph and operation declarations representing the structural aspect.\\ud\n\\ud\nThe matching relation taking into account this combination is called parameterised substitution morphism. We show that substitution morphisms satisfy the semantic requirement inherent in its name: the substitutability of abstract operations by (calls to) concrete ones.<\/dc:description><dc:date>\n2009-12-08T16:13:50Z<\/dc:date><dc:date>\n2009-12-08T16:13:50Z<\/dc:date><dc:date>\n2007<\/dc:date><dc:type>\nArticle<\/dc:type><dc:identifier>\nJournal of Logic and Algebraic Programming, 2007, 70 (1), pp.15-33<\/dc:identifier><dc:identifier>\n1567-8326<\/dc:identifier><dc:identifier>\nhttp:\/\/www.sciencedirect.com\/science\/article\/pii\/S1567832606000282<\/dc:identifier><dc:identifier>\nhttp:\/\/hdl.handle.net\/2381\/1828<\/dc:identifier><dc:identifier>\n10.1016\/j.jlap.2006.05.003<\/dc:identifier><dc:language>\nen<\/dc:language><dc:relation>\nRAE 2007<\/dc:relation><dc:format>\nMetadata<\/dc:format>\n<\/oai_dc:dc>\n<\/metadata>\n        <\/record>","journals":[{"title":null,"identifiers":["1567-8326","issn:1567-8326"]}],"language":null,"relations":["RAE 2007"],"year":2007,"topics":[],"subject":["Article"],"fullText":null}