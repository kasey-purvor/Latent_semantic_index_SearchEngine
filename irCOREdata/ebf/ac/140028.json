{"doi":"10.1016\/j.conengprac.2010.08.002","coreId":"140028","oai":"oai:dspace.lib.cranfield.ac.uk:1826\/5215","identifiers":["oai:dspace.lib.cranfield.ac.uk:1826\/5215","10.1016\/j.conengprac.2010.08.002"],"title":"Identification and predictive control of a multistage evaporator","authors":["Atuonwu, J. C.","Cao, Yi","Rangaiah, G. P.","Tade, M. O."],"enrichments":{"references":[{"id":37958292,"title":"A formulation of nonlinear model predictive control using automatic differentiation.","authors":[],"date":"2005","doi":"10.1016\/j.jprocont.2005.04.007","raw":"Cao, Y. (2005). A formulation of nonlinear model predictive control using automatic differentiation. Journal of Process Control, 15(8), 851-858.","cites":null},{"id":37958319,"title":"A survey of industrial model predictive control technology.","authors":[],"date":"2003","doi":"10.1016\/s0967-0661(02)00186-7","raw":"Qin, J.S. and Badgwell, T.A. (2003). A survey of industrial model predictive control technology. Control Engineering Practice, 11(7), 733-764.","cites":null},{"id":37958307,"title":"An algorithm for least-squares estimation of nonlinear parameters.","authors":[],"date":"1963","doi":"10.1137\/0111030","raw":"Marquardt, D. (1963). An algorithm for least-squares estimation of nonlinear parameters. SIAM Journal of Applied Mathematics, 11, 431\u2013441.","cites":null},{"id":37958298,"title":"Application of recurrent neural networks for nonlinear inverse and predictive control of the heat transfer fluid temperature in a batch reactor.","authors":[],"date":"1998","doi":"10.1016\/s0140-6701(98)94253-9","raw":"Galvan, I.M. and Zaldivar, J.M. (1998). Application of recurrent neural networks for nonlinear inverse and predictive control of the heat transfer fluid temperature in a batch reactor. Chemical Engineerng and Processing, 37, 149-161.","cites":null},{"id":37958308,"title":"Approximate predictive versus adaptive control strategies of biodiesel reactors.","authors":[],"date":"2009","doi":"10.1021\/ie900930k","raw":"Mjalli, F.S. and Hussain, M.A. (2009). Approximate predictive versus adaptive control strategies of biodiesel reactors. Industrial Engineering Chemistry Research, 48 (24), 11034-11047.","cites":null},{"id":37958297,"title":"Approximation of dynamical systems by continuous-time recurrent neural networks.","authors":[],"date":"1993","doi":"10.1016\/s0893-6080(05)80125-x","raw":"Funahashi, K.L. and Nakamura, Y. (1993). Approximation of dynamical systems by continuous-time recurrent neural networks. Neural Networks, 6, 183-192.","cites":null},{"id":37958310,"title":"Artificial neural network based system identification and model predictive control of a flotation column.","authors":[],"date":"2009","doi":"10.1016\/j.jprocont.2009.01.001","raw":"Mohanty, S. (2009). Artificial neural network based system identification and model predictive control of a flotation column. Journal of Process Control, 19, 991-999.","cites":null},{"id":37958325,"title":"Artificial neural networks for nonlinear process identification, In: Nonlinear process","authors":[],"date":"1997","doi":null,"raw":"Su, H.T. and McAvoy, T.J. (1997). Artificial neural networks for nonlinear process identification, In: Nonlinear process control, M.A. Henson and D.E. Seborg Eds. New Jersey: Englewood Cliffs, Prentice-Hall.","cites":null},{"id":37958296,"title":"Controllability analysis of industrial five-effect evaporator system.","authors":[],"date":"2003","doi":null,"raw":"Ekawati, E., Bahri, P.A., Lepage, G. and Noraii, A. (2003). Controllability analysis of industrial five-effect evaporator system. The Foundations of Computer Aided Process Operations (FOCAPO) 2003 Conference, Coral Springs, Florida, US.","cites":null},{"id":37958290,"title":"Determining model structure for neural models by network stripping.","authors":[],"date":"1992","doi":"10.1016\/0098-1354(92)80047-d","raw":"Bhat, N.V. and McAvoy, T.J. (1992). Determining model structure for neural models by network stripping. Computers and Chemical Engineering, 16(4), 271-281.","cites":null},{"id":37958288,"title":"Differential recurrent neural network based predictive control.","authors":[],"date":"2008","doi":"10.1016\/j.compchemeng.2007.07.007","raw":"Al-Seyab, R.K and Cao, Y. (2008b). Differential recurrent neural network based predictive control. Computers and Chemical Engineering, 32(7), 1533-1545.Preprint submitted to CEP 1 2 August 2010 Atuonwu, J.C., Cao, Y., Rangaiah, G.P. and Tad\u00e9, M.O. (2009). Nonlinear model predictive control of a multistage evaporator system using recurrent neural networks. Proceedings, IEEE Conference on Industrial Electronics and Applications, Xian, China, 1662-1667.","cites":null},{"id":37958304,"title":"Dynamic modeling and geometric analysis of an industrial multi-stage evaporation unit,","authors":[],"date":"1997","doi":null,"raw":"Kam, K.M. and Tad\u00e9, M.O. (1997). Dynamic modeling and geometric analysis of an industrial multi-stage evaporation unit, Technical Report 1\/97. School of Chemical Engineering, Curtin University of Technology, Western Australia.","cites":null},{"id":37958312,"title":"Evaluation study of an efficient output feedback nonlinear model predictive control for temperature tracking in an industrial batch reactor.","authors":[],"date":"2007","doi":"10.1016\/j.conengprac.2006.05.004","raw":"Nagy, Z., Mahn, B., Franke, R. and Allg\u00f6wer, F. (2007). Evaluation study of an efficient output feedback nonlinear model predictive control for temperature tracking in an industrial batch reactor. Control Engineering Practice 15, 839-850.","cites":null},{"id":37958299,"title":"Genetic algorithms in search, optimization and machine learning.","authors":[],"date":"1989","doi":null,"raw":"Goldberge, D. E. (1989). Genetic algorithms in search, optimization and machine learning. Reading, MA: AddisionWesley.Preprint submitted to CEP 1 2 August 2010 Harnischmacher, G. and Marquardt, W. (2007). Nonlinear model predictive control of multivariable processes by blockstructured models. Control Engineering Practice, 15, 1238-1256.","cites":null},{"id":37958315,"title":"Grouped neural network modeling for model predictive control.","authors":[],"date":"2002","doi":"10.1016\/s0019-0578(07)60079-2","raw":"Ou, J. and Rhinehart, R.R. (2002). Grouped neural network modeling for model predictive control. ISA Transactions, 41, 195-202.","cites":null},{"id":37958329,"title":"Implementation of neural network predictive control to a multivariable chemical reactor.","authors":[],"date":"2003","doi":"10.1016\/s0967-0661(02)00258-7","raw":"Yu, D.L. and Gomm, J.B. (2003). Implementation of neural network predictive control to a multivariable chemical reactor.","cites":null},{"id":37958306,"title":"Improvement of the back-propagation algorithm for training neural networks.","authors":[],"date":"1990","doi":"10.1016\/0098-1354(90)87070-6","raw":"Leonard, J. A., & Kramer, M. A. (1990). Improvement of the back-propagation algorithm for training neural networks. Computers and Chemical Engineering, 14, 337\u2013341.","cites":null},{"id":37958291,"title":"Industrial predictive control for hot rolling mill co-ordination.","authors":[],"date":"2000","doi":"10.1109\/acc.2000.879563","raw":"Bulut, B., Katebi, M.R. and Johnson, M.A. (2000). Industrial predictive control for hot rolling mill co-ordination. Proceedings of the American Control Conference.","cites":null},{"id":37958305,"title":"Inverse model control using recurrent networks,","authors":[],"date":"2000","doi":"10.1016\/s0378-4754(99)00116-0","raw":"Kambhampati, C., Craddock, R. J., Tham, M. and Warwick, K. (2000), Inverse model control using recurrent networks, Mathematics and Computers in Simulation, 51, 181\u2013199.","cites":null},{"id":37958321,"title":"Learning internal representations by error propagation.","authors":[],"date":"1986","doi":"10.1016\/b978-1-4832-1446-7.50035-2","raw":"Rumelhart, D. E., Hinton, G. E., and Williams, R. J. (1986). Learning internal representations by error propagation. In Parallel Distributed Processing. Cambridge MA: MIT Press.","cites":null},{"id":37958311,"title":"Model based control of a yeast fermentation bioreactor using optimally designed artificial neural networks.","authors":[],"date":"2007","doi":"10.1016\/j.cej.2006.10.015","raw":"Nagy, Z.K. (2007). Model based control of a yeast fermentation bioreactor using optimally designed artificial neural networks. Chemical Engineering Journal, 127, 95-109.","cites":null},{"id":37958289,"title":"Model predictive control design for industrial applications.","authors":[],"date":"2006","doi":"10.1109\/cca.2006.285894","raw":"Balbis, L., Katebi, R. and Ordys, A. (2006). Model predictive control design for industrial applications. International Control Conference (ICC2006), Glasgow, UK.","cites":null},{"id":37958326,"title":"Model predictive control of an industrial packed reactor using neural networks.","authors":[],"date":"1995","doi":"10.1016\/0959-1524(95)95942-7","raw":"Temeng, K.O., Schenelle, P.D. and McAvoy, T.J. (1995). Model predictive control of an industrial packed reactor using neural networks. Journal of Process Control 5(1), 19-28.","cites":null},{"id":37958295,"title":"Modeling of Combustion Systems: A Practical Approach.","authors":[],"date":"2006","doi":"10.1201\/9780849333651","raw":"Colannino, J. (2006). Modeling of Combustion Systems: A Practical Approach. CRC Press, Taylor and Francis Group, USA Draeger, A., Engell, S. and Ranke, H. (1995). Model predictive control using neural networks. IEEE Control Systems Magazine, 61-66.","cites":null},{"id":37958303,"title":"Models of an industrial evaporator for education and research in process control Dev.","authors":[],"date":"2001","doi":"10.1002\/apj.5500100109","raw":"Kam, K.M., Saha, P., Tad\u00e9, M.O. and Rangaiah, G.P. (2001). Models of an industrial evaporator for education and research in process control Dev. Chem. Eng. Mineral Process, 10, 105-127.","cites":null},{"id":37958294,"title":"Neural network based predictive control for multivariable processes.","authors":[],"date":"2002","doi":"10.1080\/00986440213128","raw":"Chen, J. and Yea, Y. (2002). Neural network based predictive control for multivariable processes. Chemical Engineering Communications 189, 865-894.","cites":null},{"id":37958314,"title":"Neural networks for modeling and control of nonlinear systems. Springer-Verlag London Ltd., London.Preprint submitted to","authors":[],"date":"2000","doi":null,"raw":"N\u00f8rgaard, M., Ravn, O., Poulsen,N.K. and Hansen, L.K. (2000). Neural networks for modeling and control of nonlinear systems. Springer-Verlag London Ltd., London.Preprint submitted to CEP 1 2 August 2010 Norquay, S. J., Palazoglu, A., & Romagnoli, J. A. (1998). Model predictive control based on Wiener models. Chemical Engineering Science, 53(1), 75\u201384.","cites":null},{"id":37958318,"title":"Neurocontrol of nonlinear dynamic systems with Kalman filter trained recurrent neural networks.","authors":[],"date":"1994","doi":"10.1109\/72.279191","raw":"Puskorius, G.V. and Feldkamp, L.A. (1994). Neurocontrol of nonlinear dynamic systems with Kalman filter trained recurrent neural networks. IEEE Transactions on Neural Networks 5(2), 279-297.","cites":null},{"id":37958323,"title":"Nonlinear black-box modeling in system identification: a unified review.","authors":[],"date":null,"doi":"10.1016\/s0005-1098(96)00219-1","raw":"Nonlinear black-box modeling in system identification: a unified review. Automatica 31(12), 1691-1724.","cites":null},{"id":37958320,"title":"Nonlinear model predictive control of an industrial four-stage evaporator system via simulation.","authors":[],"date":"2002","doi":"10.1016\/s1385-8947(01)00240-6","raw":"Rangaiah, G.P., Saha, P. and Tad\u00e9, M.O. (2002). Nonlinear model predictive control of an industrial four-stage evaporator system via simulation. Chemical. Engineering. Journal, 87(3), 285-299.","cites":null},{"id":37958293,"title":"Nonlinear model predictive control using automatic differentiation, In:","authors":[],"date":"2003","doi":"10.1016\/j.jprocont.2007.10.012","raw":"Cao, Y. and Al-Seyab, R.K. (2003). Nonlinear model predictive control using automatic differentiation, In: European Control Conference\u20192003 (CDROM), Cambridge, UK.","cites":null},{"id":37958317,"title":"Nonlinear model predictive control using neural networks.","authors":[],"date":"2000","doi":"10.1109\/37.845038","raw":"Pich\u00e9, S., Sayyar-Rodsari, B., Johnson, D. and Gerules, M. (2000). Nonlinear model predictive control using neural networks. IEEE Control Systems Magazine, 20(3), 53-62.","cites":null},{"id":37958300,"title":"Nonlinear model predictive control: current status and future directions.","authors":[],"date":"1998","doi":"10.1016\/s0098-1354(98)00260-9","raw":"Henson, M.A. (1998). Nonlinear model predictive control: current status and future directions. Computers and Chemical Engineering 23(2), 187-202.","cites":null},{"id":37958331,"title":"Nonlinear predictive control based on Hammerstein models.","authors":[],"date":"1994","doi":null,"raw":"Zhu, X., & Seborg, D. E. (1994). Nonlinear predictive control based on Hammerstein models. Proceedings: Process Sysems Engineering, 995\u20131000.Preprint submitted to CEP 1 2 August 2010","cites":null},{"id":37958316,"title":"Nonlinear process identification, In: Nonlinear process","authors":[],"date":"1997","doi":"10.1016\/s0959-1524(00)00050-0","raw":"Pearson, R.K. and Ogunnaike, B.A. (1997). Nonlinear process identification, In: Nonlinear process control, M.A. Henson and D.E. Seborg Eds. New Jersey: Englewood Cliffs, Prentice-Hall.","cites":null},{"id":37958287,"title":"Nonlinear system identification for predictive control using continuous-time recurrent neural networks.","authors":[],"date":"2008","doi":"10.1016\/j.jprocont.2007.10.012","raw":"Al-Seyab, R.K and Cao, Y. (2008a). Nonlinear system identification for predictive control using continuous-time recurrent neural networks. Journal of Process Control, 18(6), 568-581.","cites":null},{"id":37958328,"title":"On the optimal number of hidden nodes in a neural network.","authors":[],"date":"1998","doi":"10.1109\/ccece.1998.685648","raw":"Wanas, N., Auda,G., Kamel, M.S. and Karray, F. (1998). On the optimal number of hidden nodes in a neural network. IEEE Canadian Conference on Electrical and Computer Engineering, 2, 918-921.Preprint submitted to CEP 1 2 August 2010 Werbos, P.J. (1990). Backpropagation through time: What it does and how to do it. Proceedings of the. IEEE, 78(10), 1550-1560.","cites":null},{"id":37958301,"title":"Progress in supervised neural networks.","authors":[],"date":"1993","doi":"10.1109\/79.180705","raw":"Hush, D.R. and Horne, B.G. (1993). Progress in supervised neural networks. IEEE Signal Processing Magazine, 10(1), 8-39.","cites":null},{"id":37958322,"title":"State space nonlinear process modeling: identification and uncertainty.","authors":[],"date":"1998","doi":"10.1002\/aic.690441011","raw":"Sentoni, G.B., Biegler, L.T., Guiver, J.B. and Zhao, H. (1998). State space nonlinear process modeling: identification and uncertainty. AIChE Journal, 44(10), 2229-2239 Schenker, B. and Agarwal, M. (2000). Online-optimized feed switching in semi-batch reactors using semi-empirical dynamic models. Control Engineering Practice, 8, 1393-1403.","cites":null},{"id":37958330,"title":"State-space neural network properties and applications.","authors":[],"date":"1998","doi":"10.1016\/s0893-6080(98)00074-4","raw":"Zamarreno, J.M. and Vega, P. (1998). State-space neural network properties and applications. Neural Networks 11, 1099-1112.","cites":null},{"id":37958302,"title":"The nonlinear model predictive control of a chemical plant using multiple neural networks.","authors":[],"date":"2004","doi":"10.1007\/s00521-004-0399-y","raw":"Jazayeri-Rad, H. (2004). The nonlinear model predictive control of a chemical plant using multiple neural networks. Neural Computers and Applications 13, 2-15.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2010-12-31T00:00:00Z","abstract":"A recurrent neural network-based nonlinear model predictive control (NMPC)\nscheme in parallel with PI control loops is developed for a simulation model of\nan industrial-scale five-stage evaporator. Input-output data from system\nidentification experiments are used in training the network using the Levenberg-\nMarquardt algorithm with automatic differentiation. The same optimization\nalgorithm is used in predictive control of the plant. The scheme is tested with\nset-point tracking and disturbance rejection problems on the plant while control\nperformance is compared with that of PI controllers, a simplified mechanistic\nmodel-based NMPC developed in previous work and a linear model predictive\ncontroller (LMPC). Results show significant improvements in control performance\nby the new parallel NMPC-PI control scheme","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/140028.pdf","fullTextIdentifier":"http:\/\/dx.doi.org\/10.1016\/j.conengprac.2010.08.002","pdfHashValue":"f17ced6c78ba5e8af63236e2a9fa253cb48f7740","publisher":"Elsevier Science B.V., Amsterdam.","rawRecordXml":"<record><header><identifier>\noai:dspace.lib.cranfield.ac.uk:1826\/5215<\/identifier><datestamp>2011-07-07T10:58:32Z<\/datestamp><setSpec>hdl_1826_19<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>Identification and predictive control of a multistage evaporator<\/dc:title><dc:creator>Atuonwu, J. C.<\/dc:creator><dc:creator>Cao, Yi<\/dc:creator><dc:creator>Rangaiah, G. P.<\/dc:creator><dc:creator>Tade, M. O.<\/dc:creator><dc:subject>Multiple-effect evaporators Nonlinear model predictive control Nonlinear system identification Recurrent neural networks Automatic differentiation recurrent neural-networks automatic differentiation multivariable processes system-identification models reactor backpropagation temperature inverse time<\/dc:subject><dc:description>A recurrent neural network-based nonlinear model predictive control (NMPC)\nscheme in parallel with PI control loops is developed for a simulation model of\nan industrial-scale five-stage evaporator. Input-output data from system\nidentification experiments are used in training the network using the Levenberg-\nMarquardt algorithm with automatic differentiation. The same optimization\nalgorithm is used in predictive control of the plant. The scheme is tested with\nset-point tracking and disturbance rejection problems on the plant while control\nperformance is compared with that of PI controllers, a simplified mechanistic\nmodel-based NMPC developed in previous work and a linear model predictive\ncontroller (LMPC). Results show significant improvements in control performance\nby the new parallel NMPC-PI control scheme.<\/dc:description><dc:publisher>Elsevier Science B.V., Amsterdam.<\/dc:publisher><dc:date>2011-04-19T23:09:40Z<\/dc:date><dc:date>2011-04-19T23:09:40Z<\/dc:date><dc:date>2010-12-31T00:00:00Z<\/dc:date><dc:type>Article<\/dc:type><dc:identifier>J.C. Atuonwu, Y. Cao, G.P. Rangaiah, M.O. Tade, Identification and predictive control of a multistage evaporator, Control Engineering Practice, Volume 18, Issue 12, December 2010, Pages 1418-1428<\/dc:identifier><dc:identifier>0967-0661<\/dc:identifier><dc:identifier>http:\/\/dx.doi.org\/10.1016\/j.conengprac.2010.08.002<\/dc:identifier><dc:identifier>http:\/\/dspace.lib.cranfield.ac.uk\/handle\/1826\/5215<\/dc:identifier><dc:language>en_UK<\/dc:language><dc:rights>\u201cNOTICE: this is the author\u2019s version of a work that was accepted for publication in Control Engineering Practice. Changes resulting from the publishing process, such as peer review, editing, corrections, structural formatting, and other quality control mechanisms may not be reflected in this document. Changes may have been made to this work since it was submitted for publication. A definitive version was subsequently published in Control Engineering Practice, Volume 18, Issue 12, December 2010, Pages 1418-1428 DOI10.1016\/j.conengprac.2010.08.002\u201d<\/dc:rights><\/oai_dc:dc><\/metadata><\/record>","journals":[{"title":null,"identifiers":["issn:0967-0661","0967-0661"]}],"language":{"code":"en","id":9,"name":"English"},"relations":[],"year":2010,"topics":["Multiple-effect evaporators Nonlinear model predictive control Nonlinear system identification Recurrent neural networks Automatic differentiation recurrent neural-networks automatic differentiation multivariable processes system-identification models reactor backpropagation temperature inverse time"],"subject":["Article"],"fullText":"Preprint submitted to CEP 1 2 August 2010\nIdentification and Predictive Control of a Multistage Evaporator\u25cb\nJ.C. Atuonwu a#, Y. Cao a*, G.P. Rangaiah b, M.O. Tad\u00e9 c\n\u25cb This paper was not presented at any IFAC meeting\na School of Engineering, Cranfield University, Bedford, UK\nb Department of Chemical and Biomolecular Engineering, National University of Singapore, Singapore,\nrangaiahGP@nus.edu.sg\nc Department of Chemical Engineering, Curtin University of Technology, Perth, Western Australia, m.o.tade@curtin.edu\n* Corresponding author: y.cao@cranfield.ac.uk Phone +44 (0) 1234750111 ext 5650 Fax +44 (0) 1234 754685\n# Current Address: Systems and Control Group, Wageningen University, Wageningen, Netherlands, james.atuonwu@wur.nl\nAbstract\nA recurrent neural network-based nonlinear model predictive control (NMPC) scheme in parallel with PI control loops is\ndeveloped for a simulation model of an industrial-scale five-stage evaporator. Input-output data from system identification\nexperiments are used in training the network using the Levenberg-Marquardt algorithm with automatic differentiation. The\nsame optimization algorithm is used in predictive control of the plant. The scheme is tested with set-point tracking and dis-\nturbance rejection problems on the plant while control performance is compared with that of PI controllers, a simplified me-\nchanistic model-based NMPC developed in previous work and a linear model predictive controller (LMPC). Results show\nsignificant improvements in control performance by the new parallel NMPC-PI control scheme.\nKey words: Multiple-effect evaporators, nonlinear model predictive control, nonlinear system identification, recurrent neural\nnetworks, automatic differentiation.\n1. Introduction\nThe class of control algorithms that utilize dynamic process models as a means of incorporating process knowledge into\nthe controller structure for solving open-loop optimal control problems at defined time steps over a receding time horizon\nhas received significant attention in recent times. Generically referred to as model predictive control (MPC), these algo-\nrithms have been well received in industry because of their effectiveness in the high performance control of multivariable\nsystems with strong process interactions and operating constraints, without the need for explicit input-output pairing. MPC\nPreprint submitted to CEP 1 2 August 2010\ntechniques have been implemented in various forms, some of which have found their way to the market place. Examples of\nsuch implementation algorithms are available in the review by Qin and Badgwell (2003).\nIn industrial processes, nonlinearity is the rule. Even for processes that are linear over a wide operating range, valve satu-\nration places a limit on the level of input for which the system remains linear (Atuonwu et al 2009). In spite of this, industri-\nal applications of MPC have relied mainly on linear dynamic models until recently (Al-Seyab and Cao, 2008a & b). This is\nbecause the assumption of process linearity greatly simplifies model development and control design (Henson, 1998). The\nperformance of an MPC system is inherently tied to the accuracy of prediction which in turn depends on the degree of\nmatching between the process and its prediction model (Atuonwu et al 2009). A linear model is often sufficient in cases\nwhere the process operates at a single set-point and the control problem amounts to the rejection of small disturbances\n(Pich\u00e9 et al, 2000). However, operating points of many chemical processes vary over large regions such that a linear model\nis unable to adequately capture the process dynamics (Al-Seyab and Cao, 2008a & b). Moreover, some processes are severe-\nly nonlinear even in the vicinity of steady state. In view of these, the last two decades or so have witnessed a tremendous\nincrease in research effort towards the use of nonlinear models. This has culminated in the development of various nonlinear\nmodel-based commercial products which include (Qin and Badgwell, 2003): Predictive Functional Control (PFC), courtesy\nof Adersa, Multivariable Control (MVC), courtesy of Continental Controls, Aspen Target, courtesy of Aspen Technologies,\nNOVA-NLC, courtesy of DOT Products and Process Perfecter, courtesy of Pavilion Technologies. Until recently, reported\nnonlinear model predictive control (NMPC) applications in the literature have focused mainly on small-size problems espe-\ncially single-input, single-output problems (Henson, 1998; Rangaiah et al, 2002; Yu and Gomm, 2003). The main objective\nof this work is to develop and apply a differential recurrent neural network (DRNN) model based NMPC scheme to a mod-\nerate-size problem, a 5-input, 5-output, 12-state industrial multistage evaporator system.\nAlthough the use of nonlinear models in the predictive control of nonlinear processes will in principle give better perfor-\nmance than the use of linear models, some other problems arise. First, the use of nonlinear models leads to a non-convex\noptimization problem for which a globally optimal solution is not guaranteed. Secondly, model development becomes more\ndifficult. The development of first principle models is usually time-consuming and effort-demanding especially for complex\nprocesses (Henson, 1998), and involves making assumptions which most times, negatively affect accuracy. In many cases\ntherefore, the use of empirical or black box models becomes an inevitable step in an NMPC project (Al-Seyab and Cao,\n2008a & b). One of the advantages of black box modeling is that there is no need for a priori knowledge of what is going on\nin the plant. All that is needed is a set of input-output data obtained from plant measurements from which a nonlinear ma-\nPreprint submitted to CEP 1 2 August 2010\nthematical description of the plant can be inferred. This is nonlinear system identification. However, due to the complexity\nof nonlinear systems, it is not possible to develop nonlinear system identification techniques by a straightforward extension\nof linear theory.\nA fundamental difficulty associated with empirical modeling approaches is the selection of a suitable modeling form (Hen-\nson, 1998). Pearson and Ogunnaike (1997) categorized the models utilized for NMPC including: Volterra, Hammerstein,\nWiener, polynomial autoregressive moving average model with exogenous inputs (polynomial ARMAX), its nonlinear\nform, (NARMAX), and artificial neural network (ANN) models. The use of block-structured nonlinear time series models,\ncontaining linear dynamic and nonlinear static elements (e.g. Wiener and Hammerstein models) for NMPC is well-reported\nin the literature. To reduce computational burden, the solution of such systems is usually based on the inversion of the non-\nlinear element such that the nonlinear dynamic optimization is avoided (Zhu and Seborg, 1994; Norquay et al, 1998; Pich\u00e9\net al, 2000). However, the fact that the nonlinear element must be invertible limits the applicability of this solution. Also, to\nobtain unique solutions with this method, the nonlinearity of the model must be bijective, which is not generally applicable.\nFor MIMO systems, more restrictions on the model structures are imposed. In response to this, Harnischmacher and Mar-\nquardt (2007) posed the NMPC problem as a nonlinear dynamic optimization problem constrained by the block-structured\nmodel. The result was an approximate model, which provides a viable compromise between the limited predictive capabili-\nties of a linear model and the costly development of a rigorous nonlinear dynamic model. The model is however inferior in\nprediction quality to a rigorous nonlinear model such as the one provided by recurrent neural networks. Moreover, using the\nso-called two-step model identification approach (Nagy, et al., 2007) for system identification (to be explained later) in re-\ncurrent neural network modeling, the high costs of physical system identification can be eliminated.\nThe nonlinear model types mentioned above are not suitable for the multi-effect evaporator process. Wiener\/ Hammers-\ntein type nonlinear models can only capture static nonlinearities, i.e. either static input nonlinearities e.g. )(ufAxx \uf02b\uf03d\uf026 ,\nor static output nonlinearities, e.g. )(xgy \uf03d . However, both models are unable to capture dynamic nonlinearities, e.g.\n),( uxfx \uf03d\uf026 . The mechanistic model equations of the evaporator (as presented in the Appendix) clearly indicate that the\nmultiple-effect evaporator is neither a Wiener nor a Hammerstein type system. For example, dtdT \/ is nonlinearly depen-\ndent on other states, 1h and 1\uf072 . Similarly, both dtdh \/1 and dtd \/1\uf072 are functions of 1E , which is nonlinearly depen-\ndent on 1\uf072 and 1T . Furthermore, due to the recycling of the multiple-effect evaporator, such dynamic nonlinearity streng-\nthens through internal state coupling. Therefore, Weiner \/ Hammerstein type nonlinear models are not sufficient to represent\nPreprint submitted to CEP 1 2 August 2010\nsuch a system. Some nonlinear models, such as NARMA and OBF-NARX, are one-step prediction models. The deficiency\nof such kind of models, e.g. FFNN, for NMPC is to be discussed below. On the other hand, Volterra series models require a\nlarge number of parameters to be optimized so that it is very difficult to apply such models to high order systems, such as\nthe multi-stage evaporator, which has 17 states. Finally, almost all of these methods are in discrete-time, which are only va-\nlid for a predetermined sampling rate. A continuous-time DRNN model is developed successfully in this work to capture the\ndynamic nonlinearity of the plant in satisfactory with a relatively small parameter space. This success together with others\nreported in the literature demonstrates the advantage of the continuous-time DRNN type model.\nOf all the nonlinear black box modeling techniques available, artificial neural networks are the most popular (Su and\nMcAvoy, 1997). One reason for the widespread application of artificial neural networks is that as parallel signal processing\ndevices they are inherently fast and so, hold the promise of solving problems that have proven difficult to solve by conven-\ntional computers. They also have the ability to learn from examples. The use of neural networks for the predictive control of\nnonlinear processes has been widely studied. Galvan and Zaldivar (1998) applied recurrent neural networks for nonlinear\npredictive control of the heat transfer fluid temperature in a batch reactor. Schenker and Agarwal (2000) employed an esti-\nmation-prediction approach involving two neural networks for the predictive control of a semi-batch reactor. More recently,\nMohanty (2009) applied neural networks to the predictive control of a flotation column, while Mjalli and Hussain (2009)\nused a feed-forward neural network with delayed inputs and outputs to capture the dynamics of a bio-diesel process. In these\nand all other cases, the most commonly used neural network architecture is the multilayer perceptron, MLP (N\u00f8rgaard et al,\n2000) which is categorized into two: the feed-forward (FFNN) and the recurrent neural networks (RNN). Majority of publi-\ncations on neural network-based system identification and predictive control report the use of FFNNs , e.g., Temeng et al\n(1995). The main problem with FFNNs is that they can only provide predictions for a predetermined number of steps,\nusually only one step (Al-Seyab and Cao, 2008a & b). One way of providing long range predictions using FFNNs is to cas-\ncade them by using the one-step-ahead output of an FFNN as an input to another so that for n FFNNs, an n -step-ahead\nprediction is realized (Werbos, 1990). This approach, however, faces the problem of error propagation which degrades long-\nrange prediction accuracy (Ou and Rhinehart, 2002). Jazayeri-Rad (2004), proposed the use of multiple FFNNs with one\nhidden layer to model an m -input, n -output nonlinear dynamic system. This system was made up of a two-dimensional\narray of FFNN blocks with each block consisting of a one-step-ahead predictive neural model, identified to represent each\noutput of the MIMO system. Though this approach has been proven to solve the multi-step-ahead prediction problem of\nFFNNs, it demands the training of a new FFNN for every extension to the prediction horizon.\nPreprint submitted to CEP 1 2 August 2010\nRecurrent neural networks (RNNs), on the other hand, are able to provide long-range predictions, even in the presence of\nmeasurement noise (Su and McAvoy, 1997). Models based on RNNs have proven to have considerably greater representa-\ntional capabilities than FFNN-based models (Puskorius and Feldkamp, 1994). They have the capability of capturing various\nplant nonlinearities (Funahashi and Nakamura, 1993), and require less number of neurons to model dynamic systems (Hush\nand Horne, 1993). RNNs are also more suitable for representation in state space form which is commonly used in most con-\ntrol algorithms (Zamarreno and Vega, 1998). The main problem with RNNs is in their training due to the large number of\nsensitivity equations to be solved in the associated nonlinear optimization problem. Ou and Rhinehart (2002) considered the\ncomputational burden in RNN training so prohibitive that they preferred implementing an FFNN to approximate the dynam-\nics of a case-study mixing flow system. Sentoni et al (1998) also identified this problem and proposed the development of\n\u201cefficient and feasible training methods\u201d. They then, developed another model scheme consisting of a decoupled linear dy-\nnamic system cascaded with a single hidden layer perceptron (nonlinear static map). The efficient training problem however\nremained unresolved. Various training strategies for neural networks have been suggested in the literature, such as the back-\npropagation method (Rumelhart et al, 1986), the conjugate gradient method (Leonard and Kramer, 1990), Levenberg\u2013\nMarquardt optimization (Marquardt, 1963), or methods based on genetic algorithms (Goldberge, 1989). Among these, the\nLevenberg\u2013Marquardt algorithm is known to be a robust and fast gradient-based method because of its second-order con-\nverging speed without having to compute the Hessian matrix (Al Seyab and Cao, 2008a & b). Recently, automatic differen-\ntiation and Taylor series techniques have been used to simplify the dynamic sensitivity equations associated with the net-\nwork training and NMPC algorithms (Cao and Al-Seyab, 2003; Cao, 2005), thus increasing the efficiency of, and reducing\nthe computational burden associated with solving online, the associated nonlinear differential equations and nonlinear dy-\nnamic optimization problems in real time.\nRNNs can be formulated in discrete-time (Zamarreno and Vega, 1998), or continuous-time (Funahashi and Nakamura,\n1993). Discrete-time RNNs can only work for a particular sampling frequency and no information is given about the model\ntrajectories between the sampling instants. If the sampling frequency is to change, the model has to be re-built. On the other\nhand, a continuous-time RNN can be used for any sampling frequency (Kambhampati et al, 2000) even for continuous-time\nNMPC. Although a continuous-time RNN has clear advantages, it has rarely been used in NMPC. The main reason proba-\nbly is due to the difficulty in solving the differential parameter optimization problem associated with the continuous-time\nnonlinear model identification problems.\nPreprint submitted to CEP 1 2 August 2010\nIn this work, a continuous-time DRNN model of a five-stage evaporator is developed, trained using automatic differentia-\ntion techniques and implemented as the internal model of the NMPC scheme for the prediction of the dynamic behavior of\nthe plant. The example evaporator is the first step in the liquor burning process at an alumina refinery. The plant is open-\nloop unstable due to the integrating properties of the flash tank levels. An open-loop identification experiment cannot be\ncarried out without a stabilizing controller in place because of the open-loop unstable nature. Therefore, closed-loop system\nidentification was adopted in this work. The PI controller plays the role of stabilizing the plant so that a wide range of input-\noutput data can be collected. In addition, as pointed out by Draeger , et al (1995), closed loop system identification with PI\ncontrollers is a more practical and effective approach than open-loop system identification since the plant is always under\ncontrol, and the excitation becomes much more similar to the one that will be encountered under the final nonlinear control\nscheme. A previously developed feedback stabilizing PI controller (Rangaiah et al., 2002) is used in stabilizing the plant\nduring closed-loop identification where the perturbations are added directly to the manipulated inputs. The new control al-\ngorithm is then implemented with the PI controller in place.\nThe remainder of the paper is organized as follows. Section 2 gives details of the evaporator system and the identification\nresults. The developed model is used for NMPC as described in Section 3. Finally, the work is concluded in Section 4.\n2. Evaporator System Identification\n2.1. The Multistage Evaporator: System Description\nEvaporation is a key unit operation applied in a wide variety of process industries such as the food and beverage, pharma-\nceutical, pulp and paper, mineral processing industries, amongst others. The evaporator system chosen for predictive control\nis the first step in the liquor burning process associated with the Bayer process for alumina production at the Wagerup alu-\nmina factory in Western Australia. This evaporator system has being identified in previous studies (Ekawati et al, 2003) as\nbeing \u201cnotoriously\u201d nonlinear and interacting so that linear control schemes are inadequate. The system consists of one fall-\ning-film, three forced circulation and one super-concentration evaporator connected in series. Each of these five stages basi-\ncally consists of a flash tank (FT), a heater (HT) and a flash pot. Fig. 1 shows a schematic of the system with the flash pot\nomitted for simplicity. Fresh liquor, recovered after precipitation of the alumina from its solution is fed to the falling film\nstage (FT#1). The volatile component, water is removed under high recycle rate and further concentrated through the\nforced-circulation stages, FT#2 \u2013 FT#4 (Fig. 1). FT#5 is a super-concentration stage that serves the purpose of further con-\ncentrating the product without recycling. In each of the forced-circulation and super-concentration stages, the spent liquor is\nPreprint submitted to CEP 1 2 August 2010\nheated through a shell and tube heat exchanger (heater) and water is removed as vapour at a lower pressure in the flash tank.\nThe flashed vapour is then used as the pre-heating medium in upstream of the heaters. The flashed vapour from FT#3 and\nFT#4 are combined and used in HT#2 while the vapour from FT#2 is used in HT#1. The flashed vapour from FT#5 is sent\ndirectly to the condenser, C. The steam condensates from the heaters are collected in the flash pots. Live steam is used as the\nheating medium for HT#3, 4 and 5. Live steam to HT#3 is set in ratio to the amount of live steam entering HT#4, while the\namount of live steam to HT#5 is set depending on the amount of residual \u2018flashing\u2019 to be removed. The cooling water flow\nto the contact condenser is set such that all remaining flashed vapour is condensed. The evaporator system is crucial in the\naluminium refinery operation and is difficult to control due to recycle streams, strong process interaction, nonlinearities and\nthe integrating properties of the flash tank level which makes the system open loop unstable. These flash tank levels there-\nfore have to be controlled in addition to product density which gives an indication of quality. Two mechanistic models M1\nand M2 of the first four stages of the evaporator have been developed (Kam and Tad\u00e9, 1997) and implemented in various\nplatforms (Kam et al, 2001). Complete details of the models are available in Kam and Tad\u00e9 (1997). To appreciate the differ-\nence between the models, an overview of the equations of the first stage is presented in Appendix 1 (for both models). Also, the assump-\ntions made in their development and more importantly, the differences between the models are presented. Because of the fewer assump-\ntions made in its development, model M1 gives a much better approximation to the true process than model M2. Hence, in this work, M1\nis adopted to represent the process.\nFor this process, there are 12 state variables whose steady-state values are shown in Table 1. The first five states (flash\ntank levels 4,3,2,1\uf03dihi and the product liquor density of the 4th stage 4\uf072 ) are output variables. Other states are, the prod-\nuct liquor temperatures 1T , 2T , 3T and 4T for which online measurements are available in the actual plant situation togeth-\ner with the unmeasured states which consist of the densities 1\uf072 , 2\uf072 and 3\uf072 of the product liquors from the first three stag-\nes. Control is achieved by manipulating the product liquor flows, )4,3,2,1,( \uf03diQPi from each of the first four stages and\nthe steam flowrate to the 4th heater )( 4Sm .\nPreprint submitted to CEP 1 2 August 2010\nFig. 1. The Multistage Evaporator System\nApplications of neural networks to the predictive control of multi-input, multi-output (MIMO) processes are rare in lite-\nrature. A few reported cases (e.g. Chen and Yea, 2002; Yu and Gomm, 2003) usually decompose the system into a number\nof multi-input, single-output (MISO) subsystems which are later combined to form a parallel process model. This leads to\nsub-optimal results. In this work, the MIMO system is represented in a single recurrent neural network model.\n2.2. Model Development\nThe evaporator system can be modeled in state space as\n\uf028 \uf029uxx pp ,pf\uf03d\uf026 (1)\n\uf028 \uf029uxy pp ,pg\uf03d (2)\nwhere pf and hence pg are unknown nonlinear functions of state px and input u . The input, state and output vectors are\ndefined respectively as:\nPreprint submitted to CEP 1 2 August 2010\n\uf05b \uf05dTSPPPP mQQQQ 44321\uf03du (3)\n\uf05b \uf05dTTTTThhhh 321432144321 \uf072\uf072\uf072\uf072\uf03dpx (4)\n\uf05b \uf05dThhhh 44321 \uf072\uf03dpy (5)\nTable 1. Steady-state Values of Input & State Variables\nInput Description Value State Description Value\n1PQ\n2PQ\n3PQ\n4PQ\n4Sm\n1st stage product flowrate\n2nd stage product flowrate\n3rd stage product flowrate\n4th stage product flowrate\n4th stage steam flowrate\n32.736 m 3\/ h\n27.713 m 3\/ h\n28.350 m 3\/ h\n21.642 m 3\/ h\n24 kg \/ h\n1h\n2h\n3h\n4h\n4\uf072\n1T\n2T\n3T\n4T\n1\uf072\n2\uf072\n3\uf072\n1st stage flash tank level\n2nd stage flash tank level\n3rd stage flash tank level\n4th stage flash tank level\n4th stage product density\n1st stage product temperature\n2nd stage product temperature\n3rd stage product temperature\n4th stage product temperature\n1st stage product density\n2nd stage product density\n3rd stage product density\n1.5 m\n2.25 m\n2.25 m\n2.25 m\n1.54 g \/ cm 3\n66 C\uf06f\n90.6 C\uf06f\n129 C\uf06f\n135 C\uf06f\n1.357 g \/ cm 3\n1.422 g \/ cm 3\n1.49 g \/ cm 3\nTo approximate the unknown functions, an RNN model is developed with the general form:\n\uf028 \uf029\u03b8uxx ,,f\uf03d\uf026 (6)\nPreprint submitted to CEP 1 2 August 2010\n\uf028 \uf029\u03b8uxy ,,g\uf03d (7)\nwhere \u03b8 is the network parameter vector comprising of the weights and biases, f and g are nonlinear functions, which\nare determined by iteratively adjusting model parameters, \u03b8 until the sum of squared errors (SSE) represented in (8) is mi-\nnimized.\nEEee T\nN\nk\nk\nT\nk 2\n1\n2\n1\n1\n\uf03d\uf03d\uf06a \uf0e5\n\uf03d\n(8)\nHere, the error vector at each sampling point k is defined as:\n\uf028 \uf029 \uf028 \uf029\u03b8yye p ,kkk \uf02d\uf03d (9)\nHence,\n\uf028 \uf029 \uf05b \uf05dTTnT ee\u03b8EE \uf04c1\uf03d\uf03d (10)\nThe Jacobian J of the error and the sensitivity \u03b8\uf06a are calculated iteratively using automatic differentiation (Cao, 2005) as\nfollows:\n\uf028 \uf029\n\u03b8\nE\u03b8J\n\uf0b6\n\uf0b6\uf03d (11)\n\uf028 \uf029 \uf028 \uf029\u03b8E\u03b8J\n\u03b8\u03b8\n\uf03d\uf06a\uf03d\uf06a\nd\nd\n(12)\nThe variable \u03b8 is iteratively adjusted using the Levenberg- Marquardt nonlinear least squares algorithm as follows\n\uf028 \uf029 \uf028 \uf029\uf05b \uf05d \uf028 \uf029 \uf028 \uf029jjjjj1j \u03b8E\u03b8JI\u03b8J\u03b8J\u03b8\u03b8 TT \u03bc 1\uf02d\uf02b \uf02b\uf02d\uf03d (13)\nwhere 1j\u03b8 \uf02b is the vector of updated model parameters, j\u03b8 the current parameter vector, \u03bc a scalar which is to be adjusted\nby the algorithm during the iteration and I the identity matrix.\nThe governing equations of the model (as shown in Fig. 2) are:\n\uf028 \uf029 21uxs2 bbuWxW\u03c3Wx \uf02b\uf02b\uf02b\uf03d\uf026 (14)\nPreprint submitted to CEP 1 2 August 2010\nCxy \uf03d (15)\nwhere xh xnn\uf0c2\uf0cexW , uh xnn\uf0c2\uf0ceuW and hxxnn\uf0c2\uf0ce2W are connection weights, and hn\uf0c2\uf0ce1b and xn\uf0c2\uf0ce2b are bias vec-\ntors. hn represents the number of hidden nodes, xn represents the number of network states while un and yn represent the\nnumbers of input and output nodes, respectively. Each element of the vector \uf028 \uf029 hn\uf0c2\uf0ce\uf0b7s\u03c3 represents the sigmoid-tanh acti-\nvation function defined as follows:\n\uf028 \uf029 z\nz\ns z\u03c3 2\n2\n1\n1\n\uf02d\n\uf02d\n\uf02b\n\uf02d\uf03d\ne\ne\n(16)\nwhere from equation 14,\n1xu bxWuWz \uf02b\uf02b\uf03d (17)\nFig. 2 Structure of the differential recurrent neural network\nThe parameter vector \u03b8 is thus defined as\n\uf028 \uf029 \uf028 \uf029 \uf028 \uf029\uf05b \uf05d \uf071nTTTTT vecvecvec \uf0c2\uf0ce\uf03d 221ux bWbWW\u03b8 (18)\nwhere the number of elements of \u03b8 is\n\uf028 \uf029 \uf028 \uf02911 \uf02b\uf02b\uf02b\uf02b\uf03d uxhhx nnnnnn\uf071 (19)\nThe output linear activation function C is defined as\n\uf028 \uf029\uf05b \uf05dnynxnynyny \uf02d\uf0b4\uf0b4\uf03d 0IC , (20)\nPreprint submitted to CEP 1 2 August 2010\n2.3. Model Topology\nThe predictive power of an artificial neural network (ANN) depends largely on its topology. The topology consists of the\nnumber of model parameters as well as their distribution in the input, hidden and output layers. The errors in the parameter\nestimates are directly proportional to the number of model parameters ( \uf071n ) and inversely proportional to the number of data\npoints (Ns). For a given number of data points, the number of model parameters should be kept as small as possible, but\nlarge enough to learn the system dynamics, while carrying out model parameter estimation (Sjoberg, et al., 1995). A number\nof studies have been done in this respect. For instance, Bhat and McAvoy (1992) formulated an optimization problem with a\ntwo-term objective function. The first term, a complexity term attempts to force all weights towards zero while the error\nterm selectively favours the positive increment of weights that contribute largely to error minimization. The result is that\nonly the least contributing weights are driven to the zero region where they are deleted or stripped. This method is thus\ncalled \u201cnetwork stripping\u201d. More recently, Nagy (2007) proposed a pruning method based on the so-called optimal brain\nsurgeon algorithm. In this approach, weights that do not contribute significantly to performance are eliminated thus, pre-\nventing over fitting and reducing training time. In this work, the size of the network is defined by equation (18) correspond-\ning to the structure shown in Fig. 2. The plant to be identified in this study consists of 5 inputs, 5 outputs and 17 states com-\nprising the original 12 plant states and 5 additional states from PI controllers. Each input is represented by an input neuron\nand each output is represented by an output neuron, while the number of network state parameters is 17. The system is thus\nconstrained to 5\uf03d\uf03d yu nn and xn =17. The only decision variable therefore is the number of hidden nodes, hn .This was\ndetermined by varying hn during training and checking training errors (for learning performance) and validation errors (for\ngeneralization). Table 2 shows the sum of squared errors at the end of training and at the end of validation with a fresh data-\nset. Using 1251 data points for both training and validation (to be discussed in the next section), it is seen that for 3\uf03chn ,\nunder fitting occurs as both training and validation results are poor. For 3\uf03ehn , over fitting occurs as validation becomes\npoorer even though training results are still good. Moreover, training time is severely increased. Thus, an optimal number\n3\uf03dhn is chosen and correspondingly the total number of model parameters given in (19) is 137. This corroborates the re-\nsults of Wanas, et al. (1998), who showed empirically that neural networks perform best when the number of hidden nodes\nequals to the logarithm of the number of training samples.\nPreprint submitted to CEP 1 2 August 2010\nTable 2. Error dependence on number of hidden nodes\nNumber of hidden nodes SSE for training data SSE for validation data\n1 27.4191 29.7812\n2 16.1644 21.6379\n3 14.2811 21.4595\n4 14.1660 404.3486\n2.4. Model Training and Validation\nThe identification of industrial plants is a costly and time-consuming exercise involving many experiments. The detailed\nmechanistic model M1 (Kam and Tad\u00e9, 1997) is a good approximation to the plant due to fewer assumptions and the incor-\nporation of some plant measurements in addition to the heat and mass balances. However, it is too complex to be used in\ncontroller design (Rangaiah, et al., 2002). Thus in this study, a two-step model identification approach (Nagy, et al., 2007) is\nexploited as follows:\n\uf0b7 The development of M1 from the actual plant done in previous work was taken as the first step.\n\uf0b7 The RNN model is then subsequently identified from the mechanistic model M1. The identification scheme as-\nsumes that the plant model equations are unknown and the only available information is the input\u2013output data\nwhich are generated through various runs of model M1.\nThe above approach has the advantage of eliminating extensive real plant experiments. In addition, it is valid as M1 closely\napproximates the actual plant. For training, 1251\uf03dN samples of input-output data were collected by applying normally\ndistributed random signals randu to the process which consists of M1 with the PI controllers connected in closed loops as\nshown in Fig. 3. randu , which represents the perturbations of the input variables from their steady-state values, is the input\nwhile y is the output. In this identification, the sampling rate was 10 samples per hour (6 min per sample) over a period of\n125 hours. At the same time, another dataset consisting of 1251 points but at a higher sampling rate of 20 samples per hour\n(3 min per sample) was collected and used for validation over a period of 62.5 hours. The excitation input was chosen to be\nrandom such that it contains a wide range of frequencies capable of persistent excitation. The sampling time was chosen to\nbe 0.1 hours, about a quarter of the smallest time constant in the system and hence, it is low enough to capture the system\ndynamics. At the same time, the sampling time together with the amplitude of the input perturbations were chosen to be\nhigh enough to ensure output amplitudes are driven to the expected range of operation. For instance, the first flash tank lev-\nel, 1h is made to cover the range from below 1.5 to above 1.8 m so that the neural network is trained adequately in the re-\nPreprint submitted to CEP 1 2 August 2010\ngion relevant to one of the previously studied set-point tracking cases (Rangaiah, et al., 2002) to be examined in this work.\nFig. 4 shows the training and validation input excitations. The training results (Fig. 5) show a good approximation with the\ncoefficient of determination, 2\uf067 of 95%. The statistical tool \u201ccoefficient of determination\u201d (Colannino, 2006) in this case, is\nthe proportion of the variations in the plant output data explainable by the neural network model. Numerically, it satisfies\nthe inequality 10 2 \uf0a3\uf067\uf0a3 . Mathematically, it is defined as:\n\uf028 \uf029 \uf028 \uf029\uf028 \uf029 \uf028 \uf029 \uf028 \uf029\uf028 \uf029\n\uf028 \uf029 \uf028 \uf029\uf028 \uf029 \uf028 \uf029 \uf028 \uf029\uf028 \uf029\uf0e5\n\uf0e5\n\uf03d\n\uf03d\n\uf03d\n\uf03d\n\uf02d\uf02d\n\uf02d\uf02d\n\uf02d\uf03d Nni\ni\npp\nT\npp\nNni\ni\np\nT\np\ny\ny\niyiyiyiy\niyiyiyiy\n1\n12 1\uf067 (21)\nwhere py is the mean value of py over N plant output measurements, and y is the neural network output. The validation\nresults (Fig. 6) show reasonably good generalization properties with the 2\uf067 of 78%.\n+\n\u2013\nPID Controller Plant (M1)+\n+\ny\nsy y\nrandu\nu\nFig. 3. Schematic signal connections in system identification experiments\nPreprint submitted to CEP 1 2 August 2010\n0 20 40 60 80 100 120\n-20\n0\n20\ndQ\nP1\n(m\n3 \/\nh)\npe\nrt\nur\nba\ntio\nn\nin\nQ\nP1\n(time hours)\n0 20 40 60 80 100 120\n-2\n0\n2\ndQ\nP2\n(m\n3 \/\nh)\npe\nrt\nur\nba\ntio\nn\nin\nQ\nP2\ntime (hours)\n0 20 40 60 80 100 120\n-1\n0\n1\ndQ\nP3\n(m\n3 \/\nh)\npe\nrt\nur\nba\ntio\nn\nin\nQ\nP3\ntime (hours)\n0 20 40 60 80 100 120\n-0.5\n0\n0.5\ndQ\nP4\n(m\n3 \/\nh)\npe\nrt\nur\nba\ntio\nn\nin\nQ\nP4\ntime (hours)\n0 20 40 60 80 100 120\n-20\n0\n20\ndm\nS\n4\n(k\ng\/\nh)\npe\nrt\nur\nba\ntio\nn\nin\nm\nS\n4\ntime (hours)\nFig. 4.(a) Training input excitation\nPreprint submitted to CEP 1 2 August 2010\n0 10 20 30 40 50 60\n-20\n0\n20\ndQ\nP1\n(m\n3 \/\nh)\npe\nrt\nur\nba\ntio\nn\nin\nQ\nP1\ntime (hours)\n0 10 20 30 40 50 60\n-2\n0\n2\ndQ\nP2\n(m\n3 \/\nh)\npe\nrt\nur\nba\ntio\nn\nin\nQ\nP2\ntime (hours)\n0 10 20 30 40 50 60\n-1\n0\n1\ndQ\nP3\n(m\n3 \/\nh)\npe\nrt\nur\nba\ntio\nn\non\nQ\nP3\ntime (hours)\n0 10 20 30 40 50 60\n-0.5\n0\n0.5\ndQ\nP4\n(m\n3 \/\nh)\npe\nrt\nur\nba\ntio\nn\nin\nQ\nP4\ntime (hours)\n0 10 20 30 40 50 60\n-20\n0\n20\ndm\nS\n4\n(k\ng\/\nh)\npe\nrt\nur\nba\ntio\nn\nin\nm\nS\n4\ntime (hours)\nFig. 4(b).Validation input excitation\nPreprint submitted to CEP 1 2 August 2010\n0 50 100\n1.4\n1.6\n1.8\n2\n1s\ntf\nla\nsh\nta\nnk\nle\nve\nlh\n1\n(m\n)\ntime (hours)\n0 50 100\n2\n2.5\n3\n2n\nd\nfla\nsh\nta\nnk\nle\nve\nlh\n2\n(m\n)\ntime (hours)\nMeasured outputs\nCTRNN outputs\n0 50 100\n1.8\n2\n2.2\n2.4\n2.6\n3r\nd\nfla\nsh\nta\nnk\nle\nve\nlh\n3\n(m\n)\ntime (hours)\n0 50 100\n1.8\n2\n2.2\n2.4\n2.6\n4t\nh\nfla\nsh\nta\nnk\nle\nve\nlh\n4\n(m\n)\ntime (hours)\n0 20 40 60 80 100 120\n1.4\n1.6\n1.8\n2\nP\nro\ndu\nct\nde\nns\nity\nrh\no 4\n(g\n\/c\nm\n3 )\ntime (hours)\nFig. 5. Model training results\n3. Implementation of NMPC on the Evaporator System\nDue to its open-loop unstable nature, the plant was identified with the PI controller in place (as shown in Fig. 3). Hence, the\ncontrol configuration adopted in this work is an NMPC-PID parallel supervisory control scheme which has been adopted in\nprevious works (e.g. Bulut et al., 2000; Balbis, et al., 2006) to improve closed-loop performance. This set-up permits the\nNMPC to directly manipulate the input in parallel with the PID controllers, which stabilize the plant. An alternative ar-\nrangement (not adopted in this study) is the cascade control configuration where the NMPC dictates, based primarily on\neconomics through a higher level economic optimizer, the set-point of the lower level regulatory PID, while the PID does all\nthe regulation. The PI controller parameters determined in previous work (Rangaiah et al., 2002) are\n\uf05b \uf05d05.015.9362.9345.10628.53 \uf02d\uf02d\uf02d\uf02d\uf03dcK and \uf05b \uf05d0501.02112.013.1053.19528.2\uf03di\u03c4 for\nproportional gain and integral time, respectively. Fig. 7 shows the final control scheme incorporating the PID and NMPC\ncontrollers, with the NMPC represented by a dashed box containing the components, namely the RNN and optimizer. The\nPreprint submitted to CEP 1 2 August 2010\nRNN performs model predictions which are then used by the optimizer to generate an input sequence to track the set-point\nof the plant. The manipulated input to the plant is the sum of the outputs of both controllers configured in a parallel supervi-\nsory control structure (Balbis et al., 2006).\n0 20 40 60\n1.4\n1.6\n1.8\n2\n1s\ntf\nla\nsh\nta\nnk\nle\nve\nlh\n1\n(m\n)\ntime(hours)\nMeasuredoutputs\nCTRNNoutputs\n0 20 40 60\n2\n2.2\n2.4\n2n\nd\nfla\nsh\nta\nnk\nle\nve\nlh\n2\n(m\n)\ntime (hours)\n0 20 40 60\n1.8\n2\n2.2\n2.4\n2.6\n3r\nd\nfla\nsh\nta\nnk\nle\nve\nlh\n3\n(m\n)\ntime (hours)\n0 20 40 60\n1.8\n2\n2.2\n2.4\n2.6\n4t\nh\nfla\nsh\nta\nnk\nle\nve\nlh\n4\n(m\n)\ntime (hours)\n0 20 40 60\n1.4\n1.6\n1.8\nP\nro\ndu\nct\nde\nns\nity\nrh\no 4\n(g\n\/c\nm\n3 )\ntime (hours)\nFig. 6. Model validation results\nFig. 7. Block diagram of control scheme\nPreprint submitted to CEP 1 2 August 2010\nThe NMPC optimization problem is formulated as:\nk\nM\nk\nT\nkk\nP\nk\nT\nkuuu\n\u03a6\nM\nuR\u0394\u0394ueQe yy \uf0e5\uf0e5\n\uf03d\uf03d\n\uf02b\uf03d\n\uf02d 11\n,, 2\n1\nmin\n11,0 \uf04b\n(22)\nSubject to:\n\uf028 \uf029 \uf028 \uf029 \uf028 \uf029\uf028 \uf029ttft uxx ,\uf03d\uf0b7 \uf05b \uf05dPttt ,0\uf0ce\n\uf028 \uf029 \uf028 \uf029 \uf028 \uf029ttt dCxy \uf02b\uf03d (23)\n\uf028 \uf029sk kTt \uf02b\uf03d 0xx\n\uf028 \uf029 \uf028 \uf029ttkk uuu \uf03d\uf03d \uf05b \uf05d1, \uf02b\uf0ce kk ttt\nkkk sy yye \uf02d\uf03d \uf05b \uf05dPk ,1\uf0ce\nkkk uu\u0394u \uf02d\uf03d \uf02b1 \uf05b \uf05dMk ,1\uf0ce (24)\n1\uf02d\uf03d Mk uu \uf05b \uf05d1, \uf02d\uf0ce PMk\nmaxmin uuu \uf0a3\uf0a3 k\nIn these equations, \u03a6 is the cost function and d is the difference between measurements and model predictions added at\neach time step to reduce process-model mismatch. M and P are the control and prediction horizons respectively while sy\nis the set point vector. Q and R are weighting matrices penalizing output errors and input signal changes respectively.\nPerforming online tuning heuristically, the controller parameters are chosen as sampling time sT = 0.05 hours, Q = di-\nag \uf05b \uf05d10010010050100 , R = diag \uf05b \uf05d6.0112.01 , 1\uf03dM and 5\uf03dP for optimum performance.\nProblem 1: Disturbance Rejection\nThe disturbances that commonly affect the evaporator can be divided into two categories: changes in upstream of the plant,\nsuch as feed flowrate, temperature and density, and changes in the heat transfer coefficients of the heaters. To demonstrate\nits effectiveness, the proposed NMPC is applied to the following case studies (Rangaiah, et al., 2002):\nPreprint submitted to CEP 1 2 August 2010\n1. Simultaneous changes of an increase in feed flow rate fQ from the nominal value of 37.7 to 39.7 m\n3\/h and a 15%\ndecrease in the heat transfer coefficients, 1UA and 2UA in heaters 1 and 2.\n2. A step decrease in feed density f\uf072 from the nominal value of 1.310 to1.245 3cmg\n3. A step increase in feed temperature fT from the nominal value of 60 to C\uf0b066\nThe NMPC results of the above cases are presented in Figs. 8, 9 and 10 respectively with comparison to those of pre-\nviously developed decentralized PI controllers. From these, it is seen that the new NMPC scheme performs better than pre-\nviously developed PI controllers, particularly in terms of settling time.\n0 50\n1.4\n1.5\n1.6\n1s\ntf\nla\nsh\nta\nnk\nle\nve\nlh\n1\n(m\n)\ntime (hours) 0 50\n2.2\n2.3\n2.4\n2n\nd\nfla\nsh\nta\nnk\nle\nve\nlh\n2\n(m\n)\ntime (hours)\nPI\nSetPoint\nNMPC\n0 50\n2.2\n2.3\n2.4\n3r\nd\nfla\nsh\nta\nnk\nle\nve\nlh\n3\n(m\n)\ntime (hours) 0 50\n2.2\n2.25\n2.3\n4t\nh\nfla\nsh\nta\nnk\nle\nve\nlh\n4\nm\ntime (hours)\n0 10 20 30 40 50\n1.5\n1.55\n1.6\nP\nro\ndu\nct\nde\nns\nity\nrh\no 4\n(g\n\/c\nm\n3 )\ntime (hours)\nFig. 8. NMPC & PI Control performance for simultaneous step changes in feed flowrate and heat transfer coefficients of heaters.\nPreprint submitted to CEP 1 2 August 2010\n0 50\n1.4\n1.5\n1.6\n1s\ntf\nla\nsh\nta\nnk\nle\nve\nlh\n1\n(m\n)\ntime (hours) 0 50\n2.2\n2.3\n2.4\n2n\nd\nfla\nsh\nta\nnk\nle\nve\nlh\n2\n(m\n)\ntime (hours)\nPI\nSetPoint\nNMPC\n0 50\n2.2\n2.3\n2.4\n3r\nd\nfla\nsh\nta\nnk\nle\nve\nlh\n3\n(m\n)\ntime (hours) 0 50\n2.2\n2.25\n2.3\n4t\nh\nfla\nsh\nta\nnk\nle\nve\nlh\n4\n(m\n)\ntime (hours)\n0 10 20 30 40 50\n1.5\n1.55\n1.6\nP\nro\ndu\nct\nde\nns\nity\nrh\no 4\n(g\n\/c\nm\n3 )\ntime (hours)\nFig. 9. NMPC & PI Control performance for a step decrease in feed density from 1.310 to 1.245 3cmg\n0 50\n1.46\n1.48\n1.5\n1.52\n1.54\n1s\ntf\nla\nsh\nta\nnk\nle\nve\nlh\n1\n(m\n)\ntime (hours) 0 50\n2.23\n2.24\n2.25\n2.26\n2n\nd\nfla\nsh\nta\nnk\nle\nve\nlh\n2\n(m\n)\ntime (hours)\nPI\nSetPoint\nNMPC\n0 50\n2.26\n2.28\n3r\nd\nfla\nsh\nta\nnk\nle\nve\nlh\n3\n(m\n)\ntime (hours) 0 50\n2.26\n2.28\n4t\nh\nfla\nsh\nta\nnk\nle\nve\nlh\n4\n(m\n)\ntime (hours)\n0 10 20 30 40 50\n1.535\n1.54\n1.545\n1.55\nP\nro\ndu\nct\nde\nns\nity\nrh\no 4\ng\/\ncm\n3\ntime (hours)\nFig. 10. NMPC & PI Control performance for a step increase in feed temperature from 60 to C\uf0b066 .\nPreprint submitted to CEP 1 2 August 2010\nProblem 2: Set point Tracking\nChanges in product specification may necessitate set point tracking. The following servo problems (Rangaiah, et al., 2002)\nare considered:\nA. Step increase in the 4th stage product density 4\uf072 from the steady-state value of 1.54 to 1.62 g\/cm3\nB. Simultaneous step changes in set points of the 1st flash tank level 1h from the steady state value of 1.5 to 1.8 m and\nof the 4th stage product density 4\uf072 from 1.54 to 1.46 g\/cm3\nThe results of the above two cases presented in Figs. 11 and 12 respectively show superior servo performance of the new\nNMPC scheme over the PI controllers. Fig. 13 shows the input behaviour for the Case B: Simultaneous step changes in set\npoints of the 1st flash tank level 1h from the steady state value of 1.5 to 1.8 m and of the 4\nth stage product density 4\uf072 from\n1.54 to 1.46 g\/cm3\n0 50\n1.46\n1.48\n1.5\n1.52\n1.54\n1s\ntf\nla\nsh\nta\nnk\nle\nve\nlh\n1\n(m\n)\ntime (hours) 0 50\n2.23\n2.24\n2.25\n2.26\n2n\nd\nfla\nsh\nta\nnk\nle\nve\nlh\n2\n(m\n)\ntime (hours)\nPI\nSetPoint\nNMPC\n0 50\n2.23\n2.24\n2.25\n2.26\n3r\nd\nfla\nsh\nta\nnk\nle\nve\nlh\n3\n(m\n)\ntime (hours) 0 50\n2.25\n2.26\n2.27\n4t\nh\nfla\nsh\nta\nnk\nle\nve\nlh\n4\n(m\n)\ntime (hours)\n0 10 20 30 40 50\n1.5\n1.55\n1.6\n1.65\nP\nro\ndu\nct\nde\nns\nity\nrh\no 4\n(g\n\/c\nm\n3 )\ntime (hours)\nFig. 11. NMPC &PI Control Performance for a step increase in 4th stage product density from 1.54 to 1.62 g\/cm3.\nPreprint submitted to CEP 1 2 August 2010\n0 50\n1.4\n1.6\n1.8\n2\n1s\ntf\nla\nsh\nta\nnk\nle\nve\nlh\n1\n(m\n)\ntime (hours) 0 50\n2.15\n2.2\n2.25\n2.3\n2n\nd\nfla\nsh\nta\nnk\nle\nve\nlh\n2\n(m\n)\ntime (hours)\nPI\nSetPoint\nNMPC\n0 50\n2\n2.2\n2.4\n3r\nd\nfla\nsh\nta\nnk\nle\nve\nlh\n3\n(m\n)\ntime (hours) 0 50\n2.2\n2.3\n2.4\n4t\nh\nfla\nsh\nta\nnk\nle\nve\nlh\n4\n(m\n)\ntime (hours)\n0 10 20 30 40 50\n1.5\n1.55\n1.6\nP\nro\ndu\nct\nde\nns\nity\nrh\no 4\n(g\n\/c\nm\n3 )\ntime (hours)\nFig. 12. NMPC &PI Control Performance for simultaneous step changes in 1st flash tank level & 4th stage product density\n0 50\n0\n20\n40\n1s\nts\nta\nge\npr\nod\nuc\nt\nflo\nw\nra\nte\nQ\nP\n1\n(m\n3 \/\nh)\ntime (hours) 0 50\n0\n10\n20\n30\n2n\nd\nst\nag\ne\npr\nod\nuc\nt\nflo\nw\nra\nte\nQ\nP\n2\n(m\n3 \/\nh)\ntime (hours)\n0 50\n0\n20\n3r\nd\nst\nag\ne\npr\nod\nuc\nt\nflo\nw\nra\nte\nQ\nP\n3\n(m\n3 \/\nh)\ntime (hours) 0 50\n0\n10\n20\n30\n4t\nh\nst\nag\ne\npr\nod\nuc\nt\nflo\nw\nra\nte\nQ\nP\n4\n(m\n3 \/\nh)\ntime (hours)\n0 10 20 30 40 50\n10\n20\n30\n40\nS\nte\nam\nm\nas\ns\nflo\nw\nra\nte\nm\nS\n4\n(k\ng\/\nh)\ntime (hours)\nFig. 13. Plant input behaviour for simultaneous step changes in 1st flash tank level & 4th stage product density\nPreprint submitted to CEP 1 2 August 2010\n3.1. Quantitative Evaluation of NMPC Performance: Comparative Assessment\nThe control performance of the newly developed DRNN based NMPC scheme (denoted by NMPCNN in Table 3) is eva-\nluated using the Integral of Squared Errors (ISE) which mathematically is defined as:\n\uf028 \uf029 \uf028 \uf029\uf028 \uf029 \uf028 \uf029 \uf028 \uf029\uf028 \uf029\uf0f2 \uf02d\uf02d\uf03d\nft\nT dtttttISE\n0\nspsp yyyy (25)\nTable 3. Quantitative Comparison of NMPC & PI Control Performances using Integral of Squared Errors (ISE)\nIntegral-Squared Errors for each output and Total\nCase Control\n1h 2h 3h 4h 4\uf072 Total\n1\n2\n3\nA\nB\nNMPCNN\nNMPCM2\nPI\nLMPC\nNMPCNN\nNMPCM2\nPI\nLMPC\nNMPCNN\nNMPCM2\nPI\nLMPC\nNMPCNN\nNMPCM2\nPI\nLMPC\nNMPCNN\nNMPCM2\nPI\nLMPC\n2.5E-6\n0.0035\n0.0026\n0.0018\n5.6E-6\n0.0240\n0.0017\n0.0012\n4.0E-6\n2.4E-4\n3.3E-5\n3.2E-5\n4.6E-6\n0.0810\n1.8E-4\n0.013\n2.2E-6\n0.0850\n2.2E-4\n0.0023\n7.5E-5\n0.0226\n0.0037\n0.0091\n1.6E-4\n0.0230\n0.0091\n0.0102\n1.0E-4\n9.3E-5\n2.5E-5\n3.9E-5\n1.3E-4\n0.0940\n0.0025\n0.0061\n6.2E-5\n0.0920\n0.0042\n0.0094\n4.6E-5\n6.3E-5\n0.0032\n0.0027\n9.1E-5\n2.3E-4\n0.0086\n0.0076\n5.5E-5\n1.6E-6\n1.8E-5\n3.0E-5\n7.4E-5\n2.6E-5\n0.0031\n0.0058\n3.4E-5\n5.6E-5\n0.0047\n0.0097\n8.0E-8\n1.0E-5\n1.3E-4\n1.5e-5\n4.9E-8\n4.2E-5\n9.1E-5\n2.0E-4\n7.2E-8\n4.7E-7\n2.9E-7\n2.7E-7\n5.7E-8\n2.7E-5\n7.0E-6\n2.1E-4\n1.0E-7\n9.6E-6\n7.3E-6\n3.3E-4\n1.3E-4\n7.1E-6\n0.0057\n0.0037\n1.6E-4\n1.3E-6\n0.0048\n0.3493\n1.1E-4\n8.7E-4\n1.9E-4\n6.1E-4\n1.4E-4\n0.0026\n0.0256\n0.2991\n7.6E-5\n0.0020\n0.0264\n0.5180\n2.6E-4\n0.0616\n0.0153\n0.0119\n3.9E-4\n0.0465\n0.0243\n0.3685\n2.7E-4\n3.4E-4\n2.6E-4\n7.1E-4\n3.5E-4\n0.178\n0.0314\n0.3124\n1.7E-4\n0.1790\n0.0355\n0.5397\nThe results are computed over a simulation time ft =50 hours and performance compared with those of other control\nschemes. The control schemes used for comparison are the mechanistic model based NMPC scheme (NMPCM2) developed\nin Rangaiah et al. (2002), the system of decentralized PI controllers and a linear model predictive control (LMPC) scheme,\nwhich has the same parameters as the NMPC but takes the linear model around the operating point as the internal model.\nThe new NMPC scheme is seen to have superior performance as seen in Table 3. The superior performance of the DRNN\nPreprint submitted to CEP 1 2 August 2010\nbased NMPC compared to the mechanistic model M2 based NMPC is explained thus. The mechanistic model NMPC was\nbased on a simplified model of the plant, M2 with additional assumptions (see Appendix) which introduce errors, but whose\nuse was justified in that it was simple enough for fast control (Rangaiah et al., 2002). The DRNN was however determined\nusing a highly detailed model M1 (Rangaiah et al., 2002) which better approximates the plant. Further, an NMPC scheme\nwas implemented directly (i.e., without any PI controller) in the earlier study whereas the DRNN-based NMPC is imple-\nmented in parallel with PI controllers in the present work. This is another possible reason for the improved performance.\nHowever, due to the strong nonlinearity of the process, the LMPC, although it is also configured in parallel with the PI con-\ntrollers, interferes with the PI control loops, making the performance worse particularly for large set-point tracking cases as\nindicated in cases A and B (Table 3).\n4. Conclusions\nIn this paper, a continuous-time DRNN model of an industrial, five-stage evaporator is developed, and its suitability for\nrepresenting the plant nonlinear dynamics demonstrated. An efficient training algorithm based on the Levenberg-Marquardt\nmethod and automatic differentiation is applied to the network. The trained network, which shows good generalization\nproperties, has been implemented as the internal prediction model of an NMPC scheme. The developed controller, imple-\nmented in parallel with PI controllers, has been tested and proven to perform well in disturbance rejection and set-point\ntracking with significant improvements over PI controllers, LMPC and a previously developed approximate mechanistic\nmodel based NMPC implemented without PI controllers. The parallel NMPC-PI scheme is similar to the well-known com-\nbined feed-forward and feedback scheme. In this scheme, the NMPC enhances the PI control through prediction and optimi-\nzation. The advantage of this scheme is demonstrated by the superior performance of the new NMPC. Nevertheless, the re-\nsults of the LMPC also indicate that in such a parallel scheme, if the MPC is configured with a poor internal model, it can\nalso severely upset the PI control so that the control performance is significantly deteriorated. Therefore, a good internal\nmodel is essential to the success of a parallel NMPC-PI control system.\nReferences\nAl-Seyab, R.K and Cao, Y. (2008a). Nonlinear system identification for predictive control using continuous-time recurrent\nneural networks. Journal of Process Control, 18(6), 568-581.\nAl-Seyab, R.K and Cao, Y. (2008b). Differential recurrent neural network based predictive control. Computers and\nChemical Engineering, 32(7), 1533-1545.\nPreprint submitted to CEP 1 2 August 2010\nAtuonwu, J.C., Cao, Y., Rangaiah, G.P. and Tad\u00e9, M.O. (2009). Nonlinear model predictive control of a multistage\nevaporator system using recurrent neural networks. Proceedings, IEEE Conference on Industrial Electronics and\nApplications, Xian, China, 1662-1667.\nBalbis, L., Katebi, R. and Ordys, A. (2006). Model predictive control design for industrial applications. International\nControl Conference (ICC2006), Glasgow, UK.\nBhat, N.V. and McAvoy, T.J. (1992). Determining model structure for neural models by network stripping. Computers and\nChemical Engineering, 16(4), 271-281.\nBulut, B., Katebi, M.R. and Johnson, M.A. (2000). Industrial predictive control for hot rolling mill co-ordination.\nProceedings of the American Control Conference.\nCao, Y. (2005). A formulation of nonlinear model predictive control using automatic differentiation. Journal of Process\nControl, 15(8), 851-858.\nCao, Y. and Al-Seyab, R.K. (2003). Nonlinear model predictive control using automatic differentiation, In: European\nControl Conference\u20192003 (CDROM), Cambridge, UK.\nChen, J. and Yea, Y. (2002). Neural network based predictive control for multivariable processes. Chemical Engineering\nCommunications 189, 865-894.\nColannino, J. (2006). Modeling of Combustion Systems: A Practical Approach. CRC Press, Taylor and Francis Group, USA\nDraeger, A., Engell, S. and Ranke, H. (1995). Model predictive control using neural networks. IEEE Control Systems\nMagazine, 61-66.\nEkawati, E., Bahri, P.A., Lepage, G. and Noraii, A. (2003). Controllability analysis of industrial five-effect evaporator sys-\ntem. The Foundations of Computer Aided Process Operations (FOCAPO) 2003 Conference, Coral Springs, Florida, US.\nFunahashi, K.L. and Nakamura, Y. (1993). Approximation of dynamical systems by continuous-time recurrent neural\nnetworks. Neural Networks, 6, 183-192.\nGalvan, I.M. and Zaldivar, J.M. (1998). Application of recurrent neural networks for nonlinear inverse and predictive\ncontrol of the heat transfer fluid temperature in a batch reactor. Chemical Engineerng and Processing, 37, 149-161.\nGoldberge, D. E. (1989). Genetic algorithms in search, optimization and machine learning. Reading, MA: Addision-\nWesley.\nPreprint submitted to CEP 1 2 August 2010\nHarnischmacher, G. and Marquardt, W. (2007). Nonlinear model predictive control of multivariable processes by block-\nstructured models. Control Engineering Practice, 15, 1238-1256.\nHenson, M.A. (1998). Nonlinear model predictive control: current status and future directions. Computers and Chemical\nEngineering 23(2), 187-202.\nHush, D.R. and Horne, B.G. (1993). Progress in supervised neural networks. IEEE Signal Processing Magazine, 10(1), 8-\n39.\nJazayeri-Rad, H. (2004). The nonlinear model predictive control of a chemical plant using multiple neural networks. Neural\nComputers and Applications 13, 2-15.\nKam, K.M., Saha, P., Tad\u00e9, M.O. and Rangaiah, G.P. (2001). Models of an industrial evaporator for education and research\nin process control Dev. Chem. Eng. Mineral Process, 10, 105-127.\nKam, K.M. and Tad\u00e9, M.O. (1997). Dynamic modeling and geometric analysis of an industrial multi-stage evaporation\nunit, Technical Report 1\/97. School of Chemical Engineering, Curtin University of Technology, Western Australia.\nKambhampati, C., Craddock, R. J., Tham, M. and Warwick, K. (2000), Inverse model control using recurrent networks, Ma-\nthematics and Computers in Simulation, 51, 181\u2013199.\nLeonard, J. A., & Kramer, M. A. (1990). Improvement of the back-propagation algorithm for training neural networks.\nComputers and Chemical Engineering, 14, 337\u2013341.\nMarquardt, D. (1963). An algorithm for least-squares estimation of nonlinear parameters. SIAM Journal of Applied Mathe-\nmatics, 11, 431\u2013441.\nMjalli, F.S. and Hussain, M.A. (2009). Approximate predictive versus adaptive control strategies of biodiesel reactors.\nIndustrial Engineering Chemistry Research, 48 (24), 11034-11047.\nMohanty, S. (2009). Artificial neural network based system identification and model predictive control of a flotation\ncolumn. Journal of Process Control, 19, 991-999.\nNagy, Z.K. (2007). Model based control of a yeast fermentation bioreactor using optimally designed artificial neural\nnetworks. Chemical Engineering Journal, 127, 95-109.\nNagy, Z., Mahn, B., Franke, R. and Allg\u00f6wer, F. (2007). Evaluation study of an efficient output feedback nonlinear model\npredictive control for temperature tracking in an industrial batch reactor. Control Engineering Practice 15, 839-850.\nN\u00f8rgaard, M., Ravn, O., Poulsen,N.K. and Hansen, L.K. (2000). Neural networks for modeling and control of nonlinear\nsystems. Springer-Verlag London Ltd., London.\nPreprint submitted to CEP 1 2 August 2010\nNorquay, S. J., Palazoglu, A., & Romagnoli, J. A. (1998). Model predictive control based on Wiener models. Chemical En-\ngineering Science, 53(1), 75\u201384.\nOu, J. and Rhinehart, R.R. (2002). Grouped neural network modeling for model predictive control. ISA Transactions, 41,\n195-202.\nPearson, R.K. and Ogunnaike, B.A. (1997). Nonlinear process identification, In: Nonlinear process control, M.A. Henson\nand D.E. Seborg Eds. New Jersey: Englewood Cliffs, Prentice-Hall.\nPich\u00e9, S., Sayyar-Rodsari, B., Johnson, D. and Gerules, M. (2000). Nonlinear model predictive control using neural\nnetworks. IEEE Control Systems Magazine, 20(3), 53-62.\nPuskorius, G.V. and Feldkamp, L.A. (1994). Neurocontrol of nonlinear dynamic systems with Kalman filter trained\nrecurrent neural networks. IEEE Transactions on Neural Networks 5(2), 279-297.\nQin, J.S. and Badgwell, T.A. (2003). A survey of industrial model predictive control technology. Control Engineering\nPractice, 11(7), 733-764.\nRangaiah, G.P., Saha, P. and Tad\u00e9, M.O. (2002). Nonlinear model predictive control of an industrial four-stage evaporator\nsystem via simulation. Chemical. Engineering. Journal, 87(3), 285-299.\nRumelhart, D. E., Hinton, G. E., and Williams, R. J. (1986). Learning internal representations by error propagation. In Pa-\nrallel Distributed Processing. Cambridge MA: MIT Press.\nSentoni, G.B., Biegler, L.T., Guiver, J.B. and Zhao, H. (1998). State space nonlinear process modeling: identification and\nuncertainty. AIChE Journal, 44(10), 2229-2239\nSchenker, B. and Agarwal, M. (2000). Online-optimized feed switching in semi-batch reactors using semi-empirical\ndynamic models. Control Engineering Practice, 8, 1393-1403.\nSjoberg, J., Zhang., Q., Ljung, L., Benveniste, A., Delyon., B., Glorennec, Y. Hjalmarsson., H. and Juditsky, A. (1995).\nNonlinear black-box modeling in system identification: a unified review. Automatica 31(12), 1691-1724.\nSu, H.T. and McAvoy, T.J. (1997). Artificial neural networks for nonlinear process identification, In: Nonlinear process\ncontrol, M.A. Henson and D.E. Seborg Eds. New Jersey: Englewood Cliffs, Prentice-Hall.\nTemeng, K.O., Schenelle, P.D. and McAvoy, T.J. (1995). Model predictive control of an industrial packed reactor using\nneural networks. Journal of Process Control 5(1), 19-28.\nWanas, N., Auda,G., Kamel, M.S. and Karray, F. (1998). On the optimal number of hidden nodes in a neural network. IEEE\nCanadian Conference on Electrical and Computer Engineering, 2, 918-921.\nPreprint submitted to CEP 1 2 August 2010\nWerbos, P.J. (1990). Backpropagation through time: What it does and how to do it. Proceedings of the. IEEE, 78(10),\n1550-1560.\nYu, D.L. and Gomm, J.B. (2003). Implementation of neural network predictive control to a multivariable chemical reactor.\nControl Engineering Practice, 11, 1315-1323.\nZamarreno, J.M. and Vega, P. (1998). State-space neural network properties and applications. Neural Networks 11, 1099-\n1112.\nZhu, X., & Seborg, D. E. (1994). Nonlinear predictive control based on Hammerstein models. Proceedings: Process Sysems\nEngineering, 995\u20131000.\nPreprint submitted to CEP 1 2 August 2010\nAppendix 1: Mechanistic models of the evaporator\nModel M1 for Stage 1\n\uf0fa\n\uf0fb\n\uf0f9\n\uf0ea\n\uf0eb\n\uf0e9 \uf02d\uf02d\uf03d\nw\nPf\nE\nQQ\nAdt\ndh\n\uf072\n1\n1\n1\n1 1\n\uf0fa\n\uf0fa\n\uf0fb\n\uf0f9\n\uf0ea\n\uf0ea\n\uf0eb\n\uf0e9\n\uf0f7\uf0f7\uf0f8\n\uf0f6\n\uf0e7\uf0e7\uf0e8\n\uf0e6\n\uf02d\n\uf072\n\uf072\uf072\uf02d\uf0f7\uf0f7\uf0f8\n\uf0f6\n\uf0e7\uf0e7\uf0e8\n\uf0e6 \uf02d\n\uf072\n\uf072\uf03d\uf072 111 111\n11\n1\nf\nff\nw\nQE\nAhdt\nd\n\uf028 \uf029\n\uf0fa\n\uf0fa\n\uf0fb\n\uf0f9\n\uf0ea\n\uf0ea\n\uf0eb\n\uf0e9\n\uf0f7\n\uf0f7\n\uf0f8\n\uf0f6\n\uf0e7\n\uf0e7\n\uf0e8\n\uf0e6\n\uf0f7\n\uf0f7\n\uf0f8\n\uf0f6\n\uf0e7\n\uf0e7\n\uf0e8\n\uf0e6\n\uf0f7\uf0f7\uf0f8\n\uf0f6\n\uf0e7\uf0e7\uf0e8\n\uf0e6\n\uf02d\uf02d\uf0f7\uf0f7\uf0f8\n\uf0f6\n\uf0e7\uf0e7\uf0e8\n\uf0e6 \uf02d\uf02d\n\uf0fa\n\uf0fa\n\uf0fb\n\uf0f9\n\uf0ea\n\uf0ea\n\uf0eb\n\uf0e9\n\uf0f7\uf0f7\uf0f8\n\uf0f6\n\uf0e7\uf0e7\uf0e8\n\uf0e6\n\uf0f7\uf0f7\uf0f8\n\uf0f6\n\uf0e7\uf0e7\uf0e8\n\uf0e6 \uf02d\uf02d\uf02b\uf02d\n\uf02d\n\uf03d\n11\n11\n11\n11\n1\n11\n1\n1\n1\n1111\n1111\n1\nf\nff\nw\nw\nPfVV\nQE\nAh\nCoRho\nCoT\nE\nQQmE\nAhVCoTdt\ndT\n\uf072\n\uf072\uf072\n\uf072\n\uf072\n\uf072\n\uf072\nwhere\n1\n111111\n1\nV\nSSPfff mTcQcQE\n\uf06c\n\uf06c\uf072\uf072 \uf02b\uf02d\n\uf03d\n21 VS mm \uf03d\n11 EmV \uf03d\n82.12869.102 11 \uf02d\uf03d \uf072BPE\n\uf028 \uf0291111 1.273 BPETRMPV \uf02d\uf02b\uf03d\uf072\n\uf0f7\uf0f7\uf0f8\n\uf0f6\n\uf0e7\uf0e7\uf0e8\n\uf0e6\n\uf02d\uf02b\uf02b\n\uf02d\uf03d\n11\n1 1.273\nexp133.0\nBPETC\nB\nAP\n\uf028 \uf029 \uf0f7\uf0f7\uf0f8\n\uf0f6\n\uf0e7\uf0e7\uf0e8\n\uf0e6\n\uf02d\uf02b\n\uf02d\n\uf02d\uf02b\uf02b\n\uf072\uf03d\n11\n2\n11\n11 1.273\n1\n1.273 BPETBPETC\nB\nCoT V\nModel M2 for Stage 1\n\uf0fa\n\uf0fb\n\uf0f9\n\uf0ea\n\uf0eb\n\uf0e9\n\uf072\n\uf02d\uf02d\uf03d\nw\npf\nE\nQQ\nAdt\ndh 1\n1\n1\n1 1\nPreprint submitted to CEP 1 2 August 2010\n\uf0fa\n\uf0fa\n\uf0fb\n\uf0f9\n\uf0ea\n\uf0ea\n\uf0eb\n\uf0e9\n\uf0f7\uf0f7\uf0f8\n\uf0f6\n\uf0e7\uf0e7\uf0e8\n\uf0e6\n\uf02d\n\uf072\n\uf072\uf072\uf02d\uf0f7\uf0f7\uf0f8\n\uf0f6\n\uf0e7\uf0e7\uf0e8\n\uf0e6 \uf02d\n\uf072\n\uf072\uf03d\uf072 111 111\n11\n1\nf\nff\nw\nQE\nAhdt\nd\n\uf028 \uf029 \uf0fa\uf0fa\uf0fb\n\uf0f9\n\uf0ea\n\uf0ea\n\uf0eb\n\uf0e9\n\uf0f7\uf0f7\uf0f8\n\uf0f6\n\uf0e7\uf0e7\uf0e8\n\uf0e6\n\uf0f7\uf0f7\uf0f8\n\uf0f6\n\uf0e7\uf0e7\uf0e8\n\uf0e6\n\uf072\n\uf02d\uf02d\uf072\uf02b\uf02d\n\uf02d\n\uf03d\nw\nPfVV\nE\nQQmE\nAhVCoTdt\ndT 1\n1111\n1111\n1 11\n96.3375.0 11 \uf02d\uf03d TP\n\uf028 \uf029 \uf028 \uf029 \uf0f7\uf0f7\uf0f8\n\uf0f6\n\uf0e7\uf0e7\uf0e8\n\uf0e6\n\uf02d\uf02b\n\uf072\uf02d\n\uf02d\uf02b\n\uf02d\uf03d\n11\n1\n11\n1111 1.2731.273\n75.0\nBPETBPETR\nM\nhAVCoT V\nTable A1 Assumptions made in the derivation of models (Kam and Tad\u00e9, 1997)\nAssumptions for both Models M1 and M2 Additional assumptions for Model M2\n1.Dynamics of instrumentation and control valves\nare very fast and negligible when compared to\nthe dynamics of flash tanks\n8. Liquor boiling point elevation in each flash tank\nremains constant\n2. Liquor density and temperature in each flash tank\nare respectively the same as those of correspond-\ning discharged stream since perfect mixing is\nusually achieved in each flash tank\n9. Vapour pressure-temperature relation of flashed\nvapour is linear\n3. Specific heat capacities of all process streams\nremain constant\n10. Latent heat of vaporization of liquor remains\nconstant\n4. Effect of falling film on the heat transfer rate and\nthe dynamics of heater discharge temperatures\nare neglected\n11. No accumulation of vapour in the flash tanks\nand the steam space in the shell side of the hea-\nters remains unchanged.\n5. Liquor in each flash tank is in equilibrium with\nthe corresponding flashed vapour\n6. Heat losses from the evaporator system are neg-\nligible\n7. No flashing of liquor in the heaters\n"}