{"doi":null,"coreId":"10439","oai":"oai:eprints.gla.ac.uk:47875","identifiers":["oai:eprints.gla.ac.uk:47875",null],"title":"Constraint specification by example in a Meta-CASE tool","authors":["Qattous, H.K."],"enrichments":{"references":[{"id":683888,"title":"A survey of robot learning from demonstration.","authors":[],"date":"2009","doi":"10.1016\/j.robot.2008.10.024","raw":"Argall,  B.,  Chernova,  S.,  Veloso,  M.,  &  Browning,  B. (2009).  A  survey  of  robot  learning  from  demonstration. Robotics and Autonomous Systems , 57 (5), 469-483. DOI= 10.1016\/j.robot.2008.10.024.","cites":null},{"id":18089242,"title":"A Synergistic Approach to Specifying Simple Number Independent Layouts by Example.","authors":[],"date":"1993","doi":"10.1145\/169059.169221","raw":"Hudson, S., & Hsi, C.-N. (1993). A Synergistic Approach to Specifying  Simple  Number  Independent  Layouts  by Example.  Conference  on  Human  Factors  in  Computing Systems  (pp.  285-292).  New  York,  USA:  ACM.  DOI= http:\/\/doi.acm.org\/10.1145\/169059.169221.","cites":null},{"id":18089246,"title":"A Visual Language and Environment for Specifying User Interface Event Handling","authors":[],"date":"2007","doi":"10.1109\/vlhcc.2005.13","raw":"Liu,  N.,  Hosking,  J.,  &  Grundy,  J.  (2007).  A  Visual Language  and  Environment  for  Specifying  User  Interface Event Handling in Design Tools. Conferences in Research and  Practice  in  Information  Technology  Series;  Vol.  241 (pp.  87  -  94).  Ballarat,  Victoria,  Australia  :  Australian Computer Society, Inc., Australia.","cites":null},{"id":18089248,"title":"An Evaluation of Using Programming by Demonstration and Guided Walkthrough Techniques for Authoring and Utilizing Documentation.","authors":[],"date":"2006","doi":"10.1145\/1124772.1124809","raw":"Prabaker,  M.,  Bergman,  L.,  &  Castelli,  V.  (2006).  An Evaluation  of  Using  Programming  by  Demonstration  and Guided Walkthrough Techniques for Authoring and Utilizing Documentation.  Conference  on  Human  Factors  in Computing Systems, Proceedings of the SIGCHI conference on Human Factors  in computing systems (pp. 241 - 250). Montr\u00e9al, Qu\u00e9bec, Canada: ACM, New York, USA. DOI= http:\/\/doi.acm.org\/10.1145\/1124772.1124809","cites":null},{"id":18089243,"title":"CASE Environments and MetaCASE Tools.","authors":[],"date":"1997","doi":"10.1007\/978-1-4615-5915-3_25","raw":"Isazadeh,  H., & Lamb, D. A.  (1997). CASE Environments and MetaCASE Tools. Technical Report 1997-403, Queen's University.","cites":null},{"id":18089250,"title":"Characterising CASE Constraints.","authors":[],"date":"2000","doi":"10.1145\/352515.352533","raw":"Scott,  L.,  Horvath,  L.,  &  Day,  D.  (2000).  Characterising CASE  Constraints.  Communications  of  the  ACM,  43  (11), 232-238. DOI= http:\/\/doi.acm.org\/10.1145\/352515.352533.","cites":null},{"id":18089238,"title":"Defining Constraints Graphically.","authors":[],"date":"1986","doi":"10.1145\/22339.22362","raw":"Borning,  A.  (1986).  Defining  Constraints  Graphically. Conference on Human Factors in Computing Systems (pp. 137-143).  Boston,  USA:  ACM,  USA.  DOI= http:\/\/doi.acm.org\/10.1145\/22627.22362","cites":null},{"id":18089244,"title":"Domain-Specific Modeling: A Toolmaker Perspective. MetaEdit+ Workbench questions.","authors":[],"date":"2009","doi":null,"raw":"Kelly,  S. (2009). Domain-Specific Modeling: A Toolmaker Perspective.  MetaEdit+  Workbench  questions.  [online]. Available  at: http:\/\/www.metacase.com\/faq\/showfaq.asp?cate=MWB","cites":null},{"id":18089241,"title":"Increasing the flexibility of modelling tools via constraint-based specification.","authors":[],"date":"1999","doi":null,"raw":"Gray, P., & Welland, R. (1999). Increasing the flexibility of modelling  tools  via  constraint-based  specification. Proceedings  of  the  1999  conference  of  the  Centre  for Advanced  Studies  on  Collaborative  research.  Mississauga, Canada: IBM Press.","cites":null},{"id":18089245,"title":"Inferring Constraints From Multiple Snapshots.","authors":[],"date":"1993","doi":"10.1145\/159730.159731","raw":"Kurlander,  D.,  &  Feiner,  S.  (1993).  Inferring  Constraints From Multiple Snapshots. ACM Transactions on Graphics , 12  (4),  277-304.  New  York,  USA:  ACM.  DOI= http:\/\/doi.acm.org\/10.1145\/159730.159731","cites":null},{"id":18089251,"title":"KidSim: programming agents without a programming language.","authors":[],"date":"1994","doi":"10.1145\/176789.176795","raw":"Smith, D., Cypher, A., & Spohrer, J. (1994). KidSim: programming agents without a programming language. Communications of the ACM , 37 (7), 54-67. DOI= http:\/\/doi.acm.org\/10.1145\/176789.176795.","cites":null},{"id":18089240,"title":"MetaBuilder: The Diagrammer's Diagrammer.","authors":[],"date":"2000","doi":"10.1007\/3-540-44590-0_34","raw":"Ferguson,  R.,  &  Hunter,  A.  (2000).  MetaBuilder:  The Diagrammer's  Diagrammer.  Lecture  Notes  In  Computer Science; Vol. 1889 (pp. 407 - 421). London, UK: SpringerVerlag.","cites":null},{"id":18089249,"title":"Open source fuzzy inference engine for Java.","authors":[],"date":"2004","doi":null,"raw":"Sazonov, E. (2004). Open source fuzzy inference engine for Java.  [online].  Available  at: http:\/\/people.clarkson.edu\/~esazonov\/FuzzyEngine.htm","cites":null},{"id":18089247,"title":"Peridot: Creating User Interfaces by Demonstration. In","authors":[],"date":"1993","doi":"10.1145\/169059.169225","raw":"Myers,  B.  (1993).  Peridot:  Creating  User  Interfaces  by Demonstration.  In  A.  Cypher,  Watch  What  I  Do: Programming  by  Demonstration.  Cambridge,  Mass.:  MIT Press.","cites":null},{"id":18089239,"title":"Watch What I Do: Programming by Demonstration.","authors":[],"date":"1993","doi":"10.1006\/jvlc.1994.1016","raw":"Cypher,  A.  (1993).  Watch  What  I  Do:  Programming  by Demonstration. Cambridge, Mass.: MIT Press.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2009","abstract":"CASE tools are very helpful to software engineers in different ways and in different phases of software development. However, they are not easy to specialise to meet the needs of particular application domains or particular software modelling requirements. Meta-CASE tools offer a way of providing such specialisation by enabling a designer to specify a tool which is then generated automatically. Constraints are often used in such meta-CASE tools as a technique for governing the syntax and semantics of model elements and the values of their attributes. However, although constraint definition is a difficult process it has attracted relatively little research attention. The PhD research described here presents an approach for improving the process of CASE tool constraint specification based on the notion of programming by example (or demonstration). The feasibility of the approach will be demonstrated via experiments with a prototype using the meta-CASE tool Diagram Editor Constraints System (DECS) as context","downloadUrl":"","fullTextIdentifier":null,"pdfHashValue":null,"publisher":null,"rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:eprints.gla.ac.uk:47875<\/identifier><datestamp>\n      2015-12-14T12:39:48Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      74797065733D626F6F6B5F73656374696F6E<\/setSpec><\/header><metadata><rioxx xmlns=\"http:\/\/www.rioxx.net\/schema\/v2.0\/rioxx\/\" xmlns:ali=\"http:\/\/ali.niso.org\/2014\/ali\/1.0\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:dcterms=\"http:\/\/purl.org\/dc\/terms\/\" xmlns:rioxxterms=\"http:\/\/docs.rioxx.net\/schema\/v2.0\/rioxxterms\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.rioxx.net\/schema\/v2.0\/rioxx\/ http:\/\/www.rioxx.net\/schema\/v2.0\/rioxx\/rioxx.xsd\" ><ali:free_to_read>\n    \n      <\/ali:free_to_read><dc:description>CASE tools are very helpful to software engineers in different ways and in different phases of software development. However, they are not easy to specialise to meet the needs of particular application domains or particular software modelling requirements. Meta-CASE tools offer a way of providing such specialisation by enabling a designer to specify a tool which is then generated automatically. Constraints are often used in such meta-CASE tools as a technique for governing the syntax and semantics of model elements and the values of their attributes. However, although constraint definition is a difficult process it has attracted relatively little research attention. The PhD research described here presents an approach for improving the process of CASE tool constraint specification based on the notion of programming by example (or demonstration). The feasibility of the approach will be demonstrated via experiments with a prototype using the meta-CASE tool Diagram Editor Constraints System (DECS) as context.<\/dc:description><dc:format>application\/pdf<\/dc:format><dc:identifier>http:\/\/eprints.gla.ac.uk\/47875\/1\/ID47875.pdf<\/dc:identifier><dc:language>en<\/dc:language><dc:source>Proceedings of the ESEC\/FSE'09 Joint 12th European Software Engineering Conference (ESEC) and 17th ACM SIGSOFT Symposium on the Foundations of Software Engineering (FSE-17)<\/dc:source><dc:title>Constraint specification by example in a Meta-CASE tool<\/dc:title><rioxxterms:author>Qattous, H.K.<\/rioxxterms:author><rioxxterms:publication_date>2009<\/rioxxterms:publication_date><rioxxterms:type>Book chapter<\/rioxxterms:type><rioxxterms:version>NA<\/rioxxterms:version><rioxxterms:version_of_record>http:\/\/dx.doi.org\/10.1145\/1595782.1595787<\/rioxxterms:version_of_record><\/rioxx><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":[],"year":2009,"topics":[],"subject":[],"fullText":""}