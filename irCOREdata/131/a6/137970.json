{"doi":"10.1243\/095440502760291826","coreId":"137970","oai":"oai:dspace.lib.cranfield.ac.uk:1826\/1050","identifiers":["oai:dspace.lib.cranfield.ac.uk:1826\/1050","10.1243\/095440502760291826"],"title":"Implementation of STEP Application Protocol 224 in an automated manufacturing planning system.","authors":["Sharma, R.","Gao, James X."],"enrichments":{"references":[{"id":38117047,"title":"A Feature Model Editor for Process Planning of Sheet Metal Products.","authors":[],"date":"1999","doi":"10.1016\/s0924-0136(00)00670-1","raw":"Sharma, R. and Gao, J.X. A Feature Model Editor for Process Planning of Sheet Metal Products. In Proceedings of the 15 th International Conference on Computer-Aided Production Planning (CAPE \u201999), Durham, UK, 19-21 April 1999, Conference Proceedings, 187-194","cites":null},{"id":38117024,"title":"A modular modeling approach by integrating feature recognition and featurebased design.","authors":[],"date":"1999","doi":"10.1016\/s0166-3615(98)00142-0","raw":"Tseng, Y.-J.  A modular modeling approach by integrating feature recognition and featurebased design. Computers in Industry, 1999, 39 (2), 113-125","cites":null},{"id":38116938,"title":"A state-of-the-art survey on product design and process planning integration mechanisms.","authors":[],"date":"1994","doi":null,"raw":"Alego, M.E.A., Feng, S.C. and Ray, S.R. A state-of-the-art survey on product design and process planning integration mechanisms. Technical report No. NISTIR 5584, 1994 (National Institute of Standards and Technology, USA)","cites":null},{"id":38117035,"title":"A STEP-Based Object-Oriented Product Model for Process Planning.","authors":[],"date":"1996","doi":"10.1016\/0360-8352(96)00107-6","raw":"Usher, J.M.  A STEP-Based Object-Oriented Product Model for Process Planning. Computers & Industrial Engineering, 1996, 31 (1-2), 185-188","cites":null},{"id":38117045,"title":"A technology-driven architecture for developing highly configurable CAx software.","authors":[],"date":"2001","doi":"10.1243\/0954405011515226","raw":"Sharma, R., J. X. Gao and William Bowland  A technology-driven architecture for developing highly configurable CAx software. Proceedings of the Inttitute of Mechanical Engineers, Part B, Journal of Engineering Manufacture, 2001, 215, 277-281","cites":null},{"id":38117038,"title":"Alam A STEP-based geometrical representation as part of product data model of a plastics part.","authors":[],"date":null,"doi":"10.1016\/s0924-0136(97)00342-7","raw":"Shaharoun, A.M., J. Ab Razak and M. R. Alam  A STEP-based geometrical representation as part of product data model of a plastics part. Journal of Materials Processing Technology,","cites":null},{"id":38117032,"title":"and Kam Chan Product modelling using STEP. Computer-Aided Design,","authors":[],"date":"1995","doi":"10.1016\/0010-4485(95)95867-e","raw":"Gu, P. and Kam Chan  Product modelling using STEP. Computer-Aided Design, 1995, 27 (3), 163-179","cites":null},{"id":38117022,"title":"and Kwangsoo Kim A feature-based approach to extracting machining features. Computer-Aided Design,","authors":[],"date":"1998","doi":"10.1016\/s0010-4485(98)00055-4","raw":"Yeol Lee, J. and Kwangsoo Kim  A feature-based approach to extracting machining features. Computer-Aided Design, 1998, 30 (13), 1019-1035","cites":null},{"id":38117041,"title":"and Rakesh Nagi STEP-based feature extraction from STEP geometry for Agile Manufacturing. Computers in Industry,","authors":[],"date":"2000","doi":"10.1016\/s0166-3615(99)00040-8","raw":"Bhandarkar, M.P. and Rakesh Nagi STEP-based feature extraction from STEP geometry for Agile Manufacturing. Computers in Industry, 2000, 41 (1), 3-24","cites":null},{"id":38116937,"title":"and Yun -Tau Hsiao A collaborative data management framework for concurrent product and process development.","authors":[],"date":"1997","doi":"10.1080\/095119297131020","raw":"Chen, Y.-M.  and Yun -Tau Hsiao  A collaborative data management framework for concurrent product and process development. International Journal of Computer Integrated Manufacturing, 1997, 10 (6), 446-469","cites":null},{"id":38117044,"title":"CLIPS User's Guide,","authors":[],"date":"2000","doi":null,"raw":"Giarratano, J.C. CLIPS User's Guide, 2000 (NASA, USA).","cites":null},{"id":38117037,"title":"Conference Proceedings,","authors":[],"date":"1998","doi":"10.1109\/euma.1998.338081","raw":"-10, 1998, Conference Proceedings, pp 200-205","cites":null},{"id":38117049,"title":"Embedded knowledge-based functionality for process planning software.","authors":[],"date":"1999","doi":null,"raw":"Bowland, W. and Gao, J.X. Embedded knowledge-based functionality for process planning software. In 2nd International Workshop in Intelligent Manufacturing Systems, Leuven, Belgium, 22-24 September 1999, Conference Proceedings, 497-504","cites":null},{"id":38117048,"title":"Gao A Progressive design and manufacturing evaluation system incorporating","authors":[],"date":"2002","doi":"10.1016\/s0166-3615(01)00146-4","raw":"Sharma, R. and J. X. Gao A Progressive design and manufacturing evaluation system incorporating AP224. Computers in Industry, 2002, 47 (2), 155-167","cites":null},{"id":38116953,"title":"Gao Feature Technology: An overview.","authors":[],"date":"1993","doi":"10.1080\/09511929308944549","raw":"Case, K. and J. X. Gao  Feature Technology: An overview. International Journal of Computer Integrated Manufacturing, 1993, 6 (1-2) , 2-12","cites":null},{"id":38117042,"title":"Hannu Peltonen, Asko Martio and Reijo Sulonen Modelling generic product structures in STEP. Computer-Aided Design,","authors":[],"date":"1998","doi":"10.1016\/s0010-4485(98)00067-0","raw":"Mannisto, T., Hannu Peltonen, Asko Martio and Reijo Sulonen  Modelling generic product structures in STEP. Computer-Aided Design, 1998, 30 (14), 1111-1118","cites":null},{"id":38117027,"title":"Industrial Automation Systems and Integration - Product data representation and exchange --Part 11: Description methods:","authors":[],"date":"1994","doi":"10.3403\/01507065u","raw":"Industrial Automation Systems and Integration - Product data representation and exchange --Part 11: Description methods: The EXPRESS language reference manual, ISO 10303, 1994, (International Organisation for Standardisation, Geneva, Switzerland).","cites":null},{"id":38117026,"title":"Industrial automation systems and integration -- Product data representation and exchange --Part 1: Overview and principles, ISO 10303, 1999, (International Organisation for Standardisation,","authors":[],"date":null,"doi":"10.3403\/00572116","raw":"Industrial automation systems and integration -- Product data representation and exchange --Part 1: Overview and principles, ISO 10303, 1999, (International Organisation for Standardisation, Geneva, Switzerland).","cites":null},{"id":38117036,"title":"Integration of heterogeneous CAD database using STEP and the Internet.","authors":[],"date":null,"doi":"10.1016\/s0167-9236(99)00097-4","raw":"Shin, Y. and Han, S.H. Integration of heterogeneous CAD database using STEP and the Internet. In International Conference on Electronic Commerce \u201898, Seoul, South Korea, April","cites":null},{"id":38117029,"title":"Introduction to ISO 10303 - The STEP Standard for Product Data Exchange. (Technical note).","authors":[],"date":"2001","doi":"10.1115\/1.1354995","raw":"Pratt, M.J.  Introduction to ISO 10303 - The STEP Standard for Product Data Exchange. (Technical note). Journal of Computing and Information Science in Engineering, 2001, 1 (1),","cites":null},{"id":38117040,"title":"Martin Hardwick and Rakesh Nagi Migrating from IGES to STEP: one to one translation of IGES drawing to STEP drafting data. Computers in Industry,","authors":[],"date":"2000","doi":"10.1016\/s0166-3615(99)00052-4","raw":"Bhandarkar, M.P., Blair Downie, Martin Hardwick and Rakesh Nagi  Migrating from IGES to STEP: one to one translation of IGES drawing to STEP drafting data. Computers in Industry, 2000, 41 (3), 261-277","cites":null},{"id":38117033,"title":"Nyaluke A Product Data Exchange Integration Structure Using PDES\/STEP for Automated Manufacturing Applications.","authors":[],"date":"1995","doi":"10.1016\/0360-8352(95)00160-3","raw":"An, D., H. R. Leep, H. R. Parsaei and A. P. Nyaluke  A Product Data Exchange Integration Structure Using PDES\/STEP for Automated Manufacturing Applications. Computers & Industrial Engineering, 1995, 29 (1-4), 711-715","cites":null},{"id":38117034,"title":"PamiesTeixeira Implementation of computer integrated manufacturing systems using SIP: CIM case studies using a STEP approach.","authors":[],"date":null,"doi":"10.1080\/095119297131273","raw":"Jardim-Goncalves, R., H. Silva, M. Vital, P. Sousa, A. Seiger-Garcao and J. PamiesTeixeira  Implementation of computer integrated manufacturing systems using SIP: CIM case studies using a STEP approach. International Journal of Computer Integrated Manufacturing,","cites":null},{"id":38117031,"title":"Pro Engineer User Guide,","authors":[],"date":"1995","doi":null,"raw":"Pro Engineer User Guide, 1995 (Parametric Technology Corporation, PTC, USA)","cites":null},{"id":38117025,"title":"Recognising manufacturing features from a design-byfeature model. Computer-Aided Design, In Press,","authors":[],"date":null,"doi":"10.1016\/s0010-4485(01)00156-7","raw":"Li, W.D., S. K. Ong and Nee A.Y. C.  Recognising manufacturing features from a design-byfeature model. Computer-Aided Design, In Press, Uncorrected (Accepted)","cites":null},{"id":38116951,"title":"Shah Challenges in feature-based manufacturing research. CACM,","authors":[],"date":"1996","doi":"10.1145\/230798.230808","raw":"Mantyla, M., Dana S. Nau and Jami J. Shah Challenges in feature-based manufacturing research. CACM, 1996, 39 (2) 85-103   15","cites":null},{"id":38117028,"title":"STEP for Data Management, Exchange and Sharing,","authors":[],"date":"1995","doi":null,"raw":"Fowler, J.  STEP for Data Management, Exchange and Sharing, 1995 (Technology Appraisals, London, United Kingdom).","cites":null},{"id":38117030,"title":"The UK Navy Mechanical RAMP Project. Project report,","authors":[],"date":"1999","doi":null,"raw":"The UK Navy Mechanical RAMP Project. Project report, 1999 (LSC Group, United Kingdom).","cites":null},{"id":38117043,"title":"Wang An Internet based STEP data exchange framework for virtual enterprises. Computers in Industry,","authors":[],"date":"2000","doi":"10.1016\/s0166-3615(99)00039-1","raw":"Zhang, Y., Chun Zhang and H. P. Wang  An Internet based STEP data exchange framework for virtual enterprises. Computers in Industry, 2000, 41 (1), 51-63","cites":null},{"id":38117046,"title":"XML Step by Step,","authors":[],"date":"2000","doi":"10.4324\/9780080575094","raw":"Young, M. XML Step by Step, 2000 (Microsoft Press, USA).","cites":null},{"id":38117039,"title":"Zhizhong Li and Chin Kwai-Sang STEP-based product modeling for concurrent stamped part and die development.","authors":[],"date":"2001","doi":"10.1016\/s0166-3615(01)00116-6","raw":"Dunbing, T., Zheng Li, Zhizhong Li and Chin Kwai-Sang  STEP-based product modeling for concurrent stamped part and die development. Computers in Industry, 2001, 46 (1), 75-94   16","cites":null},{"id":38116952,"title":"Zhu Automated feature validation for creating\/ editing feature-based component data models.","authors":[],"date":"1998","doi":"10.1080\/002075498192643","raw":"Gindy, N.N.Z., Y. Yue and C. F. Zhu Automated feature validation for creating\/ editing feature-based component data models. International Journal of Production Research, 1998,","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2002-09","abstract":"This paper reports the results of an on-going research project at Cranfield University in collaboration with a leading consultant company. A major objective of the research to develop a new generation process planning system using the latest tools and technologies, and to fully comply with the international standard for the exchange of product model data (STEP) Application Protocol 224 (AP224) for process planning using machining features. Although AP224 has been accepted as an international standard, there is a surprising lack of compatible software packages in the market. The developed prototype STEP-enabled manufacturing planning system (SMPS) can generate process plans and associated documents from AP224 files automatically, without any user interaction. The system consists of decision logic stored in an external database that makes it generic and compatible with any manufacturing application. A graphical tool is provided for knowledge\/logic capture. The system can also accept a feature tree generated using the feature model editor (FME), which has been developed as an add-on to the system. The FME is intended to be a tool for conceptual design of simple components. The FME feature tree is used in the early design stage while the AP224 file generated from the detailed design model is used in the later stages. The prototype system is intended for single-piece machined (prismatic) parts and has been tested with case studies provided by the project collaborators","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/137970.pdf","fullTextIdentifier":"https:\/\/dspace.lib.cranfield.ac.uk\/bitstream\/1826\/1050\/4\/Implementation_Step_224_2002.pdf","pdfHashValue":"14459fcc4cee85b67c6a1c43c10b713251352e34","publisher":"Professional Engineering Publishing","rawRecordXml":"<record><header><identifier>\noai:dspace.lib.cranfield.ac.uk:1826\/1050<\/identifier><datestamp>2010-04-29T14:06:20Z<\/datestamp><setSpec>hdl_1826_24<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>Implementation of STEP Application Protocol 224 in an automated manufacturing planning system.<\/dc:title><dc:creator>Sharma, R.<\/dc:creator><dc:creator>Gao, James X.<\/dc:creator><dc:description>This paper reports the results of an on-going research project at Cranfield University in collaboration with a leading consultant company. A major objective of the research to develop a new generation process planning system using the latest tools and technologies, and to fully comply with the international standard for the exchange of product model data (STEP) Application Protocol 224 (AP224) for process planning using machining features. Although AP224 has been accepted as an international standard, there is a surprising lack of compatible software packages in the market. The developed prototype STEP-enabled manufacturing planning system (SMPS) can generate process plans and associated documents from AP224 files automatically, without any user interaction. The system consists of decision logic stored in an external database that makes it generic and compatible with any manufacturing application. A graphical tool is provided for knowledge\/logic capture. The system can also accept a feature tree generated using the feature model editor (FME), which has been developed as an add-on to the system. The FME is intended to be a tool for conceptual design of simple components. The FME feature tree is used in the early design stage while the AP224 file generated from the detailed design model is used in the later stages. The prototype system is intended for single-piece machined (prismatic) parts and has been tested with case studies provided by the project collaborators.<\/dc:description><dc:publisher>Professional Engineering Publishing<\/dc:publisher><dc:date>2006-04-28T15:30:53Z<\/dc:date><dc:date>2006-04-28T15:30:53Z<\/dc:date><dc:date>2002-09<\/dc:date><dc:type>Article<\/dc:type><dc:format>218635 bytes<\/dc:format><dc:format>application\/pdf<\/dc:format><dc:identifier>Sharma, R. and Gao, J. X. Implementation of STEP Application Protocol 224 in an automated manufacturing planning system. Proceedings of the Institution of Mechanical Engineers Part B Engineering Manufacture, Sep 2002, Vol. 216 Iss. 9, p1277-1289.<\/dc:identifier><dc:identifier>0954-4054<\/dc:identifier><dc:identifier>http:\/\/hdl.handle.net\/1826\/1050<\/dc:identifier><dc:identifier>http:\/\/dx.doi.org\/10.1243\/095440502760291826<\/dc:identifier><dc:language>en<\/dc:language><\/oai_dc:dc><\/metadata><\/record>","journals":[{"title":null,"identifiers":["0954-4054","issn:0954-4054"]}],"language":{"code":"en","id":9,"name":"English"},"relations":[],"year":2002,"topics":[],"subject":["Article"],"fullText":" IMPLEMENTATION OF STEP 224 IN AN AUTOMATED MANUFACTURING \nPLANNING SYSTEM \nR. Sharma and J.X. Gao* \nSchool of Industrial and Manufacturing Science \nCranfield University, Cranfield, Bedford, MK43 0AL \nEmail: james.gao@cranfield.ac.uk \n \nABSTRACT: This paper reports the results of an on-going research project at Cranfield University \nin collaboration with a leading consultant company. A major objective of the research to develop a \nnew generation process planning system using the latest tools and technologies, and to fully comply \nwith the international standard for exchange of product data (STEP) Application Protocol 224 \n(AP224) for process planning using machining features. Although AP224 has been accepted as an \ninternational standard, there is a surprising lack of compatible software packages in the market. The \ndeveloped prototype STEP-enabled Manufacturing Planning System (SMPS) can generate process \nplans and associated documents from AP224 files automatically, without any user interaction. The \nsystem consists of decision logic stored in an external database that makes it generic and compatible \nwith any manufacturing application. A graphical tool is provided for knowledge\/ logic capture. The \nsystem can also accept a feature tree generated using the Feature Model Editor (FME) which has \nbeen developed as an add-on to the system. FME is intended to be a tool for conceptual design of \nsimple components. FME feature tree is used in the early design stage while the AP224 file \ngenerated from detailed design model is used in the later stages. The prototype system is intended \nfor single piece machined (prismatic) parts and has been tested with case studies provided by the \nproject collaborators. \nKEYWORDS: Manufacturing Planning, Knowledge Management, STEP, CAD\/CAM \n \n1 INTRODUCTION \nProduct delivery process is defined as the series of steps that take levels of product functional \nrequirements, and using the tools and methods available, translate them into technically sound \nproducts that meet these requirements [1]. CAPP (Computer-Aided Process Planning) is the activity \nwhich links design with manufacturing. It is also the critical element in deciding the response time \nand accuracy of a flexible\/ agile manufacturing system [2]. A major challenge in providing quality-\nmanufactured products on demand is the rapid creation of manufacturing plans, shop floor \ndocuments, routing slips and NC (Numerical Control) codes. The process planner has the essential \nand critical job of interpreting the design data and creating these documents. Computerised planning \nsystems can help reduce planning time, and increase consistency and efficiency. But the main \nproblem of transferring CAD (Computer-Aided Design) data to a downstream CAMP (Computer-\n                                                 \n* Corresponding author \n 2\nAided Manufacturing Planning) system is the lack of neutral formats as well as content to convey \nthe CAD information. \nIt has been universally recognised that geometric model of a part designed using conventional CAD \nsystems is not sufficient for process planning or other reasoning and planning purposes [3]. Feature \ntechnology is an emerging tool for this purpose. Historically, the concept of a feature originated in \nprocess planning of machined parts. It therefore follows that linking CAD to CAMP for machined \nproducts using features has become the focus of numerous research efforts in recent years. A vast \nnumber of publications on feature technology are available. Gindy et al [4] provide a good literature \nreview on the current state of feature technology. \nFeature-based product information model (for manufacturing planning) means identifying the \ndesign geometry in terms of holes, slots, pockets, bosses, fillets, chamfers and other design \nelements that can be machined. Manufacturing planning requires additional information such as the \nknowledge of the characteristic shape and features producible by the various processes, their \ndimensions, locations, tolerances and surface finish. The information should also cover more \nspecialised factors such as tool accessibility, fixturing possibilities and inspectability. Many choices \nexist for creating feature models in a geometric-modelling context, such as automatic feature \nrecognition, design by features [5], interactive feature definition\/ identification, and parametric \ngeometric modelling. Future CAD systems will no doubt use a combination of these techniques to \nachieve the aim of total system integration between design and manufacturing [6, 7, 8]. \nManufacturing features can be directly related to the volumes or surfaces to be machined in various \noperations. More importantly, feature-based models complement knowledge-based manufacturing \nas machining features can be linked to corresponding machining logic. If features to be machined \ncan be identified, explicitly or implicitly, the entire process of design to manufacturing has the \npotential to be fully automated. It is this direct association between a manufacturing feature and its \nrealisation process that makes this field so attractive to researchers. \nPreparation of product (feature) data for computer-aided manufacturing planning is a difficult task, \nas features are domain dependent. This implies that the same design needs to be expressed in \ndiffering feature-based descriptions to satisfy different downstream applications. There have been \nattempts to extract data directly (Feature-based modelling) or indirectly (feature recognition) from \nthe CAD database. In order to develop a procedure for consistent, unambiguous data abstraction \nfrom a generic data structure, the foundation or the standard on which the procedure is based is very \ncrucial. ISO 10303 is the result of International Standards effort to develop such a neutral \nmechanism capable of completely representing the product data throughout the life cycle of a \nproduct. The emphasis of the research is the implementation of STEP Application Protocol 224 \n(AP224). The prototype STEP-enabled Manufacturing Planning System (SMPS) can generate \nprocess plans and associated documents from AP224 files automatically, without any user \ninteraction. A graphical tool is provided for knowledge\/ logic capture, which is stored in an external \ndatabase. The system can also accept a feature tree generated using the Feature Model Editor (FME) \ndeveloped as an add-on to the system. FME is intended to be a tool for conceptual design of simple \ncomponents. FME feature tree is used in the early design stage while the AP224 file generated from \ndetailed design model is used in the later stages. \n 3\n2 STEP AND ITS APPLICATIONS \n2.1 Introduction to STEP \nSTEP, standing for STandard for the Exchange of Product Model Data, is officially titled ISO \n10303 [9]. The International organisation for Standardisation has been working on this project since \n1984 which is also one of its largest development efforts ever. The aim of STEP is to provide a \nrepresentation of product information along with the necessary mechanisms and definitions to \nenable product data to be exchanged. The exchange of data is intended between different computer \nsystems and environments associated with the complete product lifecycle including design, \nmanufacture, utilisation, maintenance, and disposal. STEP represents an open standard to meet \nproduct data requirements over the entire life cycle of a product, including geometry, topology, \ntolerances, relationships, attributes, assemblies and configuration. To accomplish its ambitious goal, \nSTEP has been constructed as a multipart ISO standard and is organised as a series of parts and \neach part is published separately \nSTEP uses a formal specification language, EXPRESS [10], to specify the product information to \nbe represented. EXPRESS is a data specification language that can be used to define data structures \nand constraints. It provides comprehensive facilities for the definition of entities, attributes and \nrelationships in context of modular (multi-schema) data models [11]. The use of a formal language \nenables precision and consistency of representation and facilitates development of implementations. \nTo transfer this information, STEP usually employs the neutral file approach. Transfer of data from \none application to another is usually a two step process requiring an export and an import. The \nactual medium is an ASCII file. STEP covers a very wide range of products such as electronic, \nelectro-mechanical, mechanical and sheet metal fabrications.  STEP uses application protocols \n(APs) to specify the representation of product information for one or more applications. The APs \ndefine the scope, the information to be exchanged, the means of testing and a user guide for \nimplementing the application. The nature of this description makes it suitable not only for neutral \nfile exchange, but also forms a basis for implementing and sharing product databases and archiving. \nThe ultimate goal is an integrated product information database that is accessible and useful for all \nthe resources necessary to support a product. It is this characteristic which makes STEP computer \nsensible. It supports design reuse, data retention, and provides access to data across a product's \nentire life cycle. Fowler [12] and Pratt [13] provide a good introductory text on this subject.  \n2.2 STEP Application Protocols \nThe STEP Application Protocol of interest for this project is Application Protocol 224 [14] \n(Mechanical product definition for process planning using machining features). AP224 contains all \nthe information needed to manufacture the required part including the materials, part geometry, \ndimensions and tolerances. The product definition in AP224 contains the shape representation as \nwell as definition of the machining features. The definition also contains the initial shape of the \nmaterial before machining. This is very important for production of valid process plans. This project \nmainly implements and tests AP224 for machining applications. Within AP224, the machining \nfeatures are divided into 16 categories, such as boss, pocket, hole, slot and knurl. The standard also \ndescribes three different types of feature transitions namely, fillet, edge_round and chamfer. There \nis also a mechanism for describing a pattern of features. Each feature is 'explicitly' described using \nparameters. Union of one or more feature yields a compound feature. Features are constructed using \na combination of profiles and paths. Profiles are 2D shapes and Paths are 3D. \u2018Features\u2019 are created \nby defining a profile over the entire length of a path. For example, a complete circular profile along \na linear path defines a round hole. Several standard profiles, both open and closed are defined in the \n 4\nAP. Several standard paths are also defined. A combination of these paths and profiles can be used \nto represent all the features. Tolerances are very important for manufacturing. AP224 caters for \ndimensional tolerances, size tolerances, location tolerances and geometric tolerances. The model \ndescription also contains various other miscellaneous manufacturing information like material, \nalternate material, material properties, notes and specifications. Administrative information about \nmanufacturing of the part is also included in the model. The digital STEP definition AP224, used \nfor individual mechanical components, carries all the necessary information to enable modern \nComputer Aided Manufacturing Planning systems to determine the optimum manufacturing route \nand machining process needed for both cost estimating and actual manufacturing with a high degree \nof automation [15]. \n2.3 Application of STEP in Manufacturing \nThe commercial world is just beginning to embrace STEP as the standard for data exchange. \nParametric Technology Corporation's Pro\/ENGINEER\u00ae CAD system [16] was one of the first CAD \nsystems to generate STEP AP203 data.  This AP203 file contains a Boundary Representation (B-\nrep) solid model of the Pro\/ENGINEER\u00ae part model, as well as configuration management data. \nOther CAD systems like Unigraphics and I-DEAS are also beginning to provide facility to export\/ \nimport AP 203 files. \nThere have been attempts to develop generic STEP based CAD systems and databases like the \nGPM (Generic Product Modelling) system proposed by Gu and Chan [17]. GPM system was \ndesigned and implemented according to the integrated resources of STEP. The GPM could integrate \na variety of manufacturing activities in a concurrent engineering environment. An et al [18] propose \nan integration structure based on STEP as the central repository. Jardim et al [19] report on the SIP \ntoolkit which is another initiative to enhance the adaptability and productivity of the commercial \nsoftware tools utilising STEP.  Usher [20] proposed an object-oriented paradigm for the \nrepresentation of STEP data. The proposal however covered only STEP AP 224 product model for \nprocess planning and was not a generic integration product model.  Other notable discussions on \nSTEP implementations in the industry include [21, 22, 23]. There have been other academic \nimplementations such as [24, 25, 26, 27]. Many researchers believe that the future of CAD-CAMP \nintegration lies on the widespread acceptance of the STEP standard. \nThe Generative Process Planning Environment (GPPE) system [2] is a STEP enabled process \nplanning system from South Caroline Research Authority (SCRA) which provides feature-driven \ngenerative process planning capability for mechanical parts. SCRA developed a technique called \nRapid Acquisition of Manufactured Part (RAMP) for the US Department of Defense [15], which \ndemonstrated the feasibility of commercial implementation of STEP-based technology in industry. \nThis technology was transferred to the UK navy in an attempt to make this the de-facto standard for \nthe NATO armed forces. The UK Navy RAMP project was a pilot project supported by Naval \nSupport Command [15]. The process planning software used in the project was LOCAM CAPP \nsoftware from LSC Group UK, which was extended to use data from AP224 files and was also \nintegrated with GraphCAM NC package. \n3 THE STEP-ENABLED MANUFACTURING PLANNING SYSTEM (SMPS) \nThe final deliverable of this project is a STEP-enabled Manufacturing Planning System (SMPS) \nbased on the AP224 protocol. It has been developed as suite of applications, which are linked to \neach other through intermediate files\/ databases. This has been done for a number of reasons. \nBreakdown of the system into individual functional applications allows for better code development \n 5\nand maintenance. Another advantage is that the individual applications can be upgraded as long as \nthe intermediate file structure compatibility is maintained. The system can be run on different \nphysical machines if the intermediate file drive is shared. For example, the AP224 viewer could be \non the CAD workstations and the database editors could be installed on the PC of the process \nplanner. Also the execution of the system could be done in a batch mode, i.e., the bulk files could be \nprocessed to get the intermediate and the post-processed files together. The overall flow of the \napplication is shown in figure 1 as a block diagram. The physical disk files and applications are \nclearly marked in the diagram. Each function of the system will be further explained in this section. \nEach application needs to make a distinct boundary between the application itself and the data it \nuses. In this system, the Data Access Layer (DAL) has been compiled as a separate ActiveX \nDynamic Link Library (DLL). This DLL exposes a single class, which provides the necessary \nmethods and properties for all the bi-directional data access requirements of the program using \nstandard Sequenced Query Language (SQL) calls. Making the appropriate changes to the DAL can \neasily accommodate any changes to the database schema. If binary compatibility is maintained with \nthe older version, the main system using this DAL needs not be recompiled. All external file access \nis done using the data access layer. Windows NT\u00ae4.0 was selected as the base operating system, \nFigure 1: Program information flow \nLogic Engine\nLogic Database\nLogic Designer\nAP 224\nSTEP\nFile\nConfiguration Files\/\nROSE Library\nIntermediate\nFile\nPost-processor Resource Manager\nManufacturing\nDatabase\nDocument\nGenerator\/ Viewer\nCrystal Report Tempelates\/\n XML Stylesheets\nOutput Plan\nDatabase\nFINISHED PLAN\n(*.XML)\nDisk File\nProgram\nDatabase\nFINISHED PLAN\n(*.RTF)\nNC Code\nAP224 Viewer\nFME\nPart File\nCLIPS\n 6\nalthough the compiled version has also been tested under Windows 95\/98\u00ae. All executable \napplications have been developed in Visual BasicTM\u00ae 6.0 (Service Pack 5) and C++. \n3.1 The AP224 Viewer\/Reader  \nThe AP224 viewer\/reader (see figure 2) is an application for reading and viewing AP224 files. The \napplication is capable of reading the AP224 file and displaying the solid model as well as displaying \nthe feature tree of the component including all the attributes of the features. As shown in figure 2, \nthe AP224 reader application window is divided into two panes. The left side of the pane displays \nthe feature tree of the component whereas the right side displays the solid model. Clicking on a \nparticular feature in the feature tree highlights the feature in the solid model. The feature can also be \nselected from the drop-down list in the toolbar. \nThe STEP files, as discussed earlier are plain ASCII text files. These files are read into the viewer \nand displayed using ST-Developer from Steptools, Inc [28]. ST-Developer from StepTools Inc., is a \nset of Computer-Aided Software Engineering (CASE) tools that reduce the effort required in \nimplementing STEP applications. ST-Developer includes programming libraries for working with \nEXPRESS information models and EXPRESS-defined data sets. ST-Developer tools can be used \nfor information modeling, application development, and conformance checking for STEP files. ST-\nDeveloper contains programming environments that can be used to build software that works with \nSTEP data in object-oriented databases, relational databases, and traditional files. An important \ncomponent of ST-Developer is the ROSE C++ library. This library makes it possible for application \nprograms to read, write, create, and manipulate STEP digital product information. This library has \nbeen used to develop the AP224 functionality of the system \nFigure 2: AP224 viewer \n 7\n3.2 The Logic Designer and Database \nIn the SMPS system shown in figure 1, the analytical logic, or more specifically the domain and \nempirical knowledge is kept in an external database. This logic can be edited and viewed \ngraphically as a flowchart using the Logic Designer as shown in figure 3. The user also has the \noptions of having multiple nested logic flowcharts. The point of entry into the logic, or the starting \nflowchart can be selected\/ configured by the user. This is very convenient in case the same system \nis to be used for different domains. For example, the user could develop the logic for process \nplanning of prismatic mechanical parts and sheet metal parts as two separate flowcharts and use \nthem as appropriate. Further flexibility is offered by allowing nesting of flowcharts.  This approach \nto storing the logic has proved immensely successful not only in making the application flexible and \nupdateable, but also helping in breaking down the domain specific barriers and making the \napplication more generic. The application itself is only a shell to run the logic. Simple development \nof new analytical logic allows the application to be used in a completely new domain. The logic \ndeveloped graphically using the Logic Developer is run (or executed) by the Logic Engine shown in \nfigure 1. The logic is captured using a set of standard commands. The system provides an extensive \nvocabulary of commands for almost every situation. The system also provides commands for \nintegrating with CLIPS expert system [29]. Acronym CLIPS stands for \u201cC\u201d Language Integration \nProduction System. It was developed in the 1980s at NASA\u2019s Johnson Space Centre to enable \nintegration of state-of-the-art artificial intelligence and rule-based applications with existing ones. \nComponent object (COM or COM+) technology [30] is used to enable the user to add more \ncommands. A component is described as a reusable piece of software in binary form that can be \nFigure 3: Logic Designer \n 8\nplugged into other components or software with relatively little effort. Using component software \nprovides a much more productive way to design, build and reuse software [31].  \n3.3 The Resource Manager and Manufacturing Database \nThe manufacturing database editor allows the user to edit and maintain the resources data and other \ntables in the database. The manufacturing database editor can be accessed as a standalone \napplication or accessed from within the Logic Designer for easier navigation. This manufacturing \ndatabase represents the empirical knowledge of the assembly-planning expert. Various types of \nresource tables are provided to hold data such as standard questions, explanation and help lines, \noperation macros and standard texts. It is also used to store the CLIPS rules. The system also \nprovides a generic table similar to a spreadsheet in which any type of data can be structured and \nstored. There are various commands to interrogate the tables and use the data in them from within \nthe flowchart or CLIPS rules. \n3.4 The Logic Engine and post-processor \nThe logic engine is the heart of the system. It is responsible for actually running the logic stored in \nthe logic database. The logic engine also processes and executes any calls to the CLIPS expert \nsystem. The logic engine uses the functionality of the AP224 viewer\/reader to open AP224 file and \ngenerate a feature tree of the component in the memory. This feature tree is loaded into an internal \nmemory data structure and can be interrogated by using the appropriate flowchart commands. For \nexample, the developer could write a logic to load a AP 224 feature tree in the memory and then \nwrite a recursive loop to interrogate the features one-by-one and process them depending on their \nattributes. During a planning session, the Logic Engine runs the stored logic, retrieves the required \ndata from the database and generates an intermediate file. The intermediate file contains macro calls \nand not the planning details. For example, if the requirement was to manufacture a hole feature \nFigure 4: RTF and XML output from the planning system \n 9\nusing a drilling operation, the intermediate file would only have a call to the macro which contains \nthe detailed operations for manufacturing the hole feature. These macro calls are translated into \ncomprehensive detailed output by the post-processor. The NC code is also generated in a similar \nway. In fact the NC code is similar to any other planning document but is written out directly by the \npost-processor instead of being derived from an output database like the planning documents. \n3.5 Generating and Directing the Output  \nThe output of the logic postprocessor is an output plan database (see figure 1). This database is a \nrelational database arranged in a hierarchy. Each output plan has a header section and a series of \noperations. Each operation has a series of detail lines for that operation. Each detail line has 10 \nBoolean flags corresponding to the 10 user defined documents. The Boolean flags are used for \nfiltering the detail lines for generating the documents. The system is capable of generating the 10 \nuser defined output documents either in Rich Text Format (RTF) files or as Extensible Mark-up \nLanguage (XML) [32] as shown in figure 4. The format and layout of RTF documents is decided by \nthe report templates. The XML data is formatted for viewing using Extensible Stylesheet Language \n(XSL). Each XSL stylesheet describes rules for presenting an XML document source. XSL \ntransformations can turn XML into a grammar and structure suitable for display in a browser and \nthereby make the output viewable on any hardware platform. The output in the form of RTF and \nXML documents offers tremendous flexibility in dissemination and annotation of the plans. The \nsystem also provides an output plan database editor. This editor allows the user to make minor \nchanges directly to the output plan database and regenerate the output documents, rather than \nhaving to reprocess the AP224 file all over again.  \nFigure 5: Feature Model Editor \n 10\n3.6 Feature Model Editor (FME) \nThe Feature Model Editor (FME) [33] has been developed as an alternate method of generating \ninput for the planning system. Using AP224 as the input has its advantages but is restricted to \ndetailed design stage as AP224 can be generated only from a detailed design model. FME consists \nof feature libraries, which can be edited by the user. The user can open only one library at a time \nalthough any number of part files can be opened simultaneously. The features in the library can be \ngrouped into Families and Sub-Families. This allows for a more logical grouping of the features. \nThe features inherit all the attributes of their parent family or sub-family. This minimises the \nnumber of individual feature attributes as most of the common attributes can be entered at family or \nsub-family level. Features also have a \u2018picture\u2019 attribute, which can be associated with a bit-map \nrepresenting the feature. Feature instances can be added to the part by simple drag-and-drop \noperations. The features can also be repositioned within a part using the drag-and-drop operation. \nThe application also provides facilities for cut-and-paste operations. When imported into the \nplanning system, each feature in the tree has a check box that can be used for include or exclude the \nfeature from the analysis. Figure 5 shows a screen shot of the application. \nThe feature tree (as well as the library) created by the FME is stored as a plan ASCII file. The \nfeature tree has all the constituent features of the part being generated as well the attributes of that \nfeature. It must be noted that the FME does not try to generate a 3D model or a view of the part \nbeing designed. The emphasis is only on entering all the information required for planning analysis \nof the part. For this reason it is not suited for making complex parts. However, it has been found to \nbe extremely useful in redesign of existing parts in the trial case studies. Once the template of an \nexisting part family has been generated using the FME, the user can use it as a tool during the \nconceptual design to change the part parameters and see the effect it has on manufacturing time and \ncosts by analysing it.  \n21.000 30.000 18.000\n14.000\n18.000\n25.000\n45 0'\n45 0'\n10.500\n3.400\nFigure 6: Stepped bolt dimensions \n 11\n4 CASE STUDY \nIn order to judge the system\u2019s effectiveness it is necessary to conduct a case study. In this case, the \naim of the study was to generate a process plan for a machined part. A pre-requisite for this part was \nthat it should contain a fair combination and permutation of standard features representing a process \nplan of average complexity. The part considered hare is a stepped bolt shown in figure 6. The \nconstituent features of the part as derived from the STEP file by the STEP reader are shown in \nfigure 7. It may be seen from figure 7 that the features are not arranged in any hierarchy. The \nstepped bolt as a machined part also permits dimensional variations. These dimensional variations \nmay not only result in a stepped bolt of different dimensions, but also imply different manufacturing \noperations. Similar stepped bolts of different dimensions can easily be grouped into families. \nThe logic for generating the process plan of the stepped bolt has been developed by collecting as \nmuch information as possible from the machine shop process planners. This component represents a \ntypical high volume production component where the conventional planning activity is well \ndeveloped in the industry. Since the stepped bolt is a relatively simple part, its process plan is \nsequential process shown in figure 7. The planning flowchart in figure 7 represents a generative \nprocess plan. It can be seen from the flowchart that each step in the plan is based on one constituent \nfeature of the component. The planning logic has been developed by associating each feature with a \nset of machining operations required to realise the feature. The feature parameters or attributes are \nused as input for deciding the parameters of the machining operations like the cutting speed and \nfeed. Figure 8 shows the constituent features of the case study component. It also shows the \nmachining operations, which are necessary to realise each feature. The resource database for this \nRough turn bolt head\nface\nRough turn OD\n(Major)\nFinish turn bold head\nface\nRough turn ODs\nFinish turn ODs\nMachine groove\nMachine thread\nchamfer\nMachine thread\nMachine knurl\nMachine chamfer\nPart Off\nCylindrical Base Shape\nOuter Round\nOuter Round\nRevolved Profile\nThread\nTurned Knurl\nChamfer\nChamfer\nChamfer\nFigure 7: Stepped bolt \u2013 Planning flowchart and constituent features \n 12\ncase study has been developed by gathering as much data about the machines as possible. This \nresource data includes information about the shape, dimensions, specifications and cost of raw \nmaterial stock. The database also has data about the available inserts, jig, fixtures and tools. The \nmachine database contains specifications of the available machines like rated power, maximum size \nof job, maximum cutting and feed speeds. This is used for deciding the optimum cutting and \nmachining parameters based on the material specifications. \nThe resultant process plan document is shown in figure 9. The system is capable of generating up to \n10 user-defined documents. The manufacturing process plan being discussed here (and shown in \nfigure 9) is just one of the output documents. The top part of the table shows the plan header. This \ncontains miscellaneous information such as part name, description and part number. Some of this \ninformation like part name is derived directly from the AP224 definition. Other information \nrequired for the plan header is entered by the user. Figure 9 also shows the sequence of operations \nrequired to manufacture the part. Each operation has an operation number. Operation numbers are \nincremented in steps of 10. This is to allow additional operations to be inserted, if required, by \ndirectly editing the output plan database. The machining centre for each operation is decided by the \nsystem depending on the selection logic entered. In the case of the stepped bolt, the system selects \nthe machining centre based on the material and the batch size of the job. The most important \nSerial FEATURE  Remark\/ Information\/ Operation \n1 Cylindrical Base \nShape \nBasic shape and size of raw material \nRough\/ Finish turn and face \n2 Outer Round Rough\/Finish turn \n3 Outer Round Rough\/ Finish turn \n4 Revolved Profile Plunge Groove \n5 Thread Metric thread \n6 Turned Knurl Knurl \n7 Chamfer 45 degree chamfer \n8 Chamfer 45 degree chamfer \n9 Chamfer 45 degree chamfer \n \nFigure 8: Constituent features and operation information \nPROCESS PLAN \nPart No: Step_Bolt Customer: Cranfield Uni. Material: \nDescription: SCREW, KNURLED Planner: Rohit Sharma Material: Aluminium \nStore Number: XXX-XXX-XXX Date: 28 October 2000 Drawing No.: XXX-XXX \nOpNo Description Machine \n10 Collate Docs ME010 \n20 Material Order ME027 \n30 Kitting ME024 \n40 Sawing 107165 \n50 Turning 13137 \n60 Inspection MC130 \n70 QA Clear ME016 \n80 Store MF031 \n90 Dispatch MF033 \n100 Clear Order CLOME \n \nFigure 9: Output process plan  \n 13\noperation in manufacturing the stepped bolt is the turning operation, which is highlighted as \noperation 50 in figure 9. The details of the turning operation are shown in figure 10. This table is \nthe detailed manufacturing turning operation instructions. \nDepending upon the material specifications and the feature to be manufactured, the system decides \non a manufacturing process. The material specifications and the feature attributes are available from \nthe AP224 definition. For each combination of feature to be machined, material and machine, the \nsystem has a look-up table, which is in the resource database. This table gives the cutting \nparameters like speed and feed. The table also gives the macro (detailed instructions) for that \nfeature. In the next step, the system retrieves the macro commands and passes the required variables \nto it. Take rough facing as example, the attribute of the feature \u2013 \u2018face\u2019 and the amount of material \nremoved and the time taken are the variables. The value of material removed is calculated from the \ndepth-of-cut given in the resource table. The machining time is calculated from the number of cuts \nrequired to remove the required material. Then macro references a Text string and passes the \nvariables to this Text string. These strings are actually what appear in the output as text. The text \nstrings can be selectively directed to different documents. For example, machining instructions can \nbe directed to the process plan and time sheet documents. \nThe SMPS system also interfaces with the GraphCAM \u00ae NC package for simulation and generation \nof NC code. This NC package is driven by a physical text file which is also generated as a standard \nsystem document. This file contains standard GraphCAM commands. The parameters of the \nfeatures to be manufactured are used to generate the NC commands to machine that feature. \n4.1 Support for early design \nTo demonstrate the use of FME in early design stage (of the same case study component), the \nconstituent features of AP224 step library are represented in the FME library. A standard template \nOperation No: 50 Description : Turning \nMachine 13137 Department: \nSerial Operating Instruction Speed Feed Cut \n1 Rough face 30.00mm dia down to 0mm dia removing 0.50mm from \nface \n1200 0.45 mm\/rev 1 \n2 Rough turn the 30.00mm dia. to 25.25mm dia. by length 69.50mm 1200 0.45 mm\/rev 1 \n3 Finish face 25.25mm down to 0mm dia 1200 0.25 mm\/rev 1 \n4 Rough turn the 25.25mm dia. to 18.25mm dia. by length 51.00mm 1200 0.45 mm\/rev 1 \n5 Rough turn the 18.25mm dia. to 14.25mm dia. by length 21.00mm 1200 0.45 mm\/rev 1 \n6 Finish turn the 25.00mm dia. by length 18.00mm 1200 0.25 mm\/rev 1 \n7 Finish turn the 18.00mm dia. by length 30.00mm 1200 0.25 mm\/rev 1 \n8 Finish turn the 14.00mm dia. by length 21.00mm 1200 0.25 mm\/rev 1 \n9 Plunge Internal Groove. dia. 18.00mm with width 3.40mm Depth of \ngroove is 3.50mm \n1200 0.01 mm\/rev 1 \n10 Machine the 45 degree chamfer by 1.38mm deep on the 14.00mm \ndiameter \n1200 0.10 mm\/rev 2 \n11 Machine 14.00mm dia External thread by length 17.60mm with a \nthread pitch of 2.00mm Thread form is M \n1136 2.00 mm\/rev 1\n12 Knurl 25.00mm Dia by 15.00mm long 318 0.38 mm\/rev 12\n13 Machine the 45 degree chamfer by 1.00mm deep on the 25.00mm \ndiameter \n1200 0.10 mm\/rev 1\n14 Part off 66.00mm long 1200 0.12 mm\/rev 1\n \nFigure 10: Process plan \u2013 Details for turning operation number 50 \n 14\nfor the bolt family is created using this library. All the features have the attributes required for input \nto the planning system. The user needs to provide suitable values to these attributes. Some of the \nattributes can be automatically derived from CLIPS rules in case they have been left out. For \nexample, the diameter of the bolt is usually related to the length of the bolt (although this is a thumb \nrule) and the thread parameters are dependent on the diameter. Therefore, if the user enters the \nlength of the bolt and leaves the diameter and thread parameters out, the system can generate these \nparameters from the CLIPS rules (if entered). More details of using the system for early design can \nbe found in [34]. \n5 CONCLUSIONS AND FURTHER WORK \nSMPS is based on sequential flowchart-type logic. In extensive user trials of the SMPS system, this \nhas not been found to be a shortcoming and most manufacturing and process planning logic was \neasily mapped on to a flowchart. However, the technique described here is not limited to sequential \nlogic. The user can embed commands within the flowchart to call an external non-conventional \nlogic solving system like an expert system. This technique of combining the CLIPS expert system \nwith sequential logic processing shell has also been successfully demonstrated in a previously \nrelated research work [35]. AP224 physical files are not editable directly and in most cases the only \nway to edit them is to edit the solid model and regenerate the AP224 definition by translation. \nIntegration with the Feature Model Editor allows the user some flexibility in this by generating \nmodel files, which can be used as alternate input to the system in the early design stage. This is to \novercome the problem of generating and editing AP224 physical files. It is envisaged that this will \nallow the designers to evaluate their early designs with respect to the available manufacturing \nprocesses and resources. It also provides quick evaluation of \u201cwhat-if\u201d scenarios by relocating a \nfeature, changing its parameters or excluding it from the analysis logic. Initial case studies reveal \nthat the system is a highly desirable conceptual design and editing aid. But the file generated by \nFME is for purpose of analysis only and cannot be imported into a CAD system for detailed design. \nWork is presently on to allow construction of a solid model from the FME part file which can then \nbe imported into the CAD system. This will provide seamless support for progressive design, which \nis the end aim of this project. It is also proposed to increase the range of documents generated by \nthe system to include production scheduling documents. \nACKNOWLEDGEMENT \nThe authors gratefully acknowledge the support of LSC Group, UK Ltd. during this research, \nespecially Mr Alan Crawford and Mr Ray Muldoon, without whose support this would not have \nbeen possible.  \nREFERENCES \n \n1   Chen, Y.-M.  and Yun -Tau Hsiao  A collaborative data management framework for \nconcurrent product and process development. International Journal of Computer Integrated \nManufacturing, 1997, 10 (6), 446-469 \n2   Alego, M.E.A., Feng, S.C. and Ray, S.R. A state-of-the-art survey on product design and \nprocess planning integration mechanisms. Technical report No. NISTIR 5584, 1994 (National \nInstitute of Standards and Technology, USA) \n3   Mantyla, M., Dana S. Nau and Jami J. Shah Challenges in feature-based manufacturing \nresearch. CACM, 1996, 39 (2) 85-103 \n 15\n4   Gindy, N.N.Z., Y. Yue and C. F. Zhu Automated feature validation for creating\/ editing \nfeature-based component data models. International Journal of Production Research, 1998, \n36 (9), 2479-2495 \n5   Case, K. and J. X. Gao  Feature Technology: An overview. International Journal of \nComputer Integrated Manufacturing, 1993, 6 (1-2) , 2-12 \n6   Yeol Lee, J. and Kwangsoo Kim  A feature-based approach to extracting machining features. \nComputer-Aided Design, 1998, 30 (13), 1019-1035 \n7   Tseng, Y.-J.  A modular modeling approach by integrating feature recognition and feature-\nbased design. Computers in Industry, 1999, 39 (2), 113-125 \n8   Li, W.D., S. K. Ong and Nee A.Y. C.  Recognising manufacturing features from a design-by-\nfeature model. Computer-Aided Design, In Press, Uncorrected (Accepted)  \n9   Industrial automation systems and integration -- Product data representation and exchange -- \nPart 1: Overview and principles, ISO 10303, 1999, (International Organisation for \nStandardisation, Geneva, Switzerland). \n10   Industrial Automation Systems and Integration - Product data representation and exchange -- \nPart 11: Description methods: The EXPRESS language reference manual, ISO 10303, 1994, \n(International Organisation for Standardisation, Geneva, Switzerland). \n11   Kramer, T.R., Morris, K.C. and Sauder, D.A. A structural EXPRESS editor. Technical \nreport No. NISTIR 4903, 1992 (National Institute of Standards and Technology, USA) . \n12   Fowler, J. STEP for Data Management, Exchange and Sharing, 1995 (Technology \nAppraisals, London, United Kingdom). \n13   Pratt, M.J.  Introduction to ISO 10303 - The STEP Standard for Product Data Exchange. \n(Technical note). Journal of Computing and Information Science in Engineering, 2001, 1 (1), \n1-4 \n14   Industrial automation systems and integration -- Product data representation and exchange -- \nPart 224: Application protocol: Mechanical product definition for process planning using \nmachining features, ISO 10303, 2001, (International Organisation for Standardisation, \nGeneva, Switzerland). \n15   The UK Navy Mechanical RAMP Project. Project report, 1999 (LSC Group, United \nKingdom). \n16   Pro Engineer User Guide, 1995 (Parametric Technology Corporation, PTC, USA) \n17   Gu, P. and Kam Chan  Product modelling using STEP. Computer-Aided Design, 1995, 27 \n(3), 163-179 \n18   An, D., H. R. Leep, H. R. Parsaei and A. P. Nyaluke  A Product Data Exchange Integration \nStructure Using PDES\/STEP for Automated Manufacturing Applications. Computers & \nIndustrial Engineering, 1995, 29 (1-4), 711-715 \n19   Jardim-Goncalves, R., H. Silva, M. Vital, P. Sousa, A. Seiger-Garcao and J. Pamies-\nTeixeira  Implementation of computer integrated manufacturing systems using SIP: CIM case \nstudies using a STEP approach. International Journal of Computer Integrated Manufacturing,  \n1997, 10 (1-4) , 172-180 \n20   Usher, J.M.  A STEP-Based Object-Oriented Product Model for Process Planning. \nComputers & Industrial Engineering, 1996, 31 (1-2), 185-188 \n21   Shin, Y. and Han, S.H. Integration of heterogeneous CAD database using STEP and the \nInternet. In International Conference on Electronic Commerce \u201898, Seoul, South Korea, April \n6-10, 1998, Conference Proceedings, pp 200-205 \n22   Shaharoun, A.M., J. Ab Razak and M. R. Alam  A STEP-based geometrical representation \nas part of product data model of a plastics part. Journal of Materials Processing Technology, \n1998, 76 (1-3), 115-119 \n23   Dunbing, T., Zheng Li, Zhizhong Li and Chin Kwai-Sang  STEP-based product modeling \nfor concurrent stamped part and die development. Computers in Industry, 2001, 46 (1), 75-94 \n 16\n24   Bhandarkar, M.P., Blair Downie, Martin Hardwick and Rakesh Nagi  Migrating from \nIGES to STEP: one to one translation of IGES drawing to STEP drafting data. Computers in \nIndustry, 2000, 41 (3), 261-277 \n25   Bhandarkar, M.P. and Rakesh Nagi STEP-based feature extraction from STEP geometry \nfor Agile Manufacturing. Computers in Industry, 2000, 41 (1), 3-24 \n26   Mannisto, T., Hannu Peltonen, Asko Martio and Reijo Sulonen  Modelling generic \nproduct structures in STEP. Computer-Aided Design, 1998, 30 (14), 1111-1118 \n27   Zhang, Y., Chun Zhang and H. P. Wang  An Internet based STEP data exchange \nframework for virtual enterprises. Computers in Industry, 2000, 41 (1), 51-63 \n28   ST-Developer Tools Reference, 2000 (StepTools, USA). \n29   Giarratano, J.C. CLIPS User's Guide, 2000 (NASA, USA). \n30   Rogerson, D. Inside COM, 1995 (Microsoft Press, USA ) \n31  Sharma, R., J. X. Gao and William Bowland  A technology-driven architecture for \ndeveloping highly configurable CAx software. Proceedings of the Inttitute of Mechanical \nEngineers, Part B, Journal of Engineering Manufacture, 2001, 215, 277-281 \n32   Young, M. XML Step by Step, 2000 (Microsoft Press, USA). \n33   Sharma, R. and Gao, J.X. A Feature Model Editor for Process Planning of Sheet Metal \nProducts. In Proceedings of the 15th International Conference on Computer-Aided Production \nPlanning (CAPE \u201999), Durham, UK, 19-21 April 1999, Conference Proceedings, 187-194 \n34   Sharma, R. and J. X. Gao A Progressive design and manufacturing evaluation system \nincorporating AP224. Computers in Industry, 2002, 47 (2), 155-167 \n35 Bowland, W. and Gao, J.X. Embedded knowledge-based functionality for process planning \nsoftware. In 2nd International Workshop in Intelligent Manufacturing Systems, Leuven, \nBelgium, 22-24 September 1999, Conference Proceedings, 497-504 \n \n"}