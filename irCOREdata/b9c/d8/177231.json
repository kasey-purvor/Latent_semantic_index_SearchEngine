{"doi":"10.1007\/s10550-006-0029-6","coreId":"177231","oai":"oai:aura.abdn.ac.uk:2164\/1131","identifiers":["oai:aura.abdn.ac.uk:2164\/1131","10.1007\/s10550-006-0029-6"],"title":"Delivering services by building and running virtual organisations","authors":["Nguyen, D","Thompson, S G","Patel, J","T Teacy, L W","Jennings, N R","Luck, M","Dang, V","Chalmers, Stuart William","Oren, Nir","Norman, T J","Preece, Alun David","Gray, Peter Michael David","Shercliff, G","Stockreisser, P J","Shao, J","Gray, W A","Fiddian, N J"],"enrichments":{"references":[{"id":3705,"title":"A manifesto for agent technology: Towards next generation computing,","authors":[],"date":"2004","doi":"10.1023\/B:AGNT.0000038027.29035.7c","raw":"M. Luck, P. McBurney, C. Preist, A manifesto for agent technology: Towards next generation computing, Journal of Autonomous Agents and Multi-Agent Systems 9 (3) (2004) 203{252.","cites":null},{"id":3712,"title":"A parametrization of the auction design space,","authors":[],"date":"2001","doi":"10.1006\/game.2000.0828","raw":"P. R. Wurman, M. P. Wellman, W. E. Walsh, A parametrization of the auction design space, Games and Economic Behavior 35 (2001) 304{338. URL citeseer.nj.nec.com\/wurman00parametrization.html","cites":null},{"id":3724,"title":"Agent-based virtual organisations for the grid,","authors":[],"date":"2005","doi":"10.1007\/s10550-006-0029-6","raw":"J. Patel, W. T. L. Teacy, N. R. Jennings, M. Luck, S. Chalmers, N. Oren, T. J. Norman, A. Preece, J. Shao, A. Gray, N. Fiddian, S. Thompson, Agent-based virtual organisations for the grid, International Journal of Multiagent and Grid Systems 1 (4) (2005) to appear.","cites":null},{"id":3711,"title":"An agent-based model to support the formation of virtual enterprises, in:","authors":[],"date":"2000","doi":null,"raw":"S. A. Petersen, M. Gruninger, An agent-based model to support the formation of virtual enterprises, in: International ICSC Symposium on Mobile Agents and Multi-agents in Virtual Organisations and E-Commerce, 2000.","cites":null},{"id":3714,"title":"Can we trust trust?, in: Trust: Making and Breaking Cooperative Relations, chapter 13,","authors":[],"date":"1988","doi":"10.2307\/2234217","raw":null,"cites":null},{"id":3718,"title":"Computational models, argumentation theories and legal practice, in:","authors":[],"date":"2003","doi":"10.1007\/978-94-017-0431-1_4","raw":"T. Bench-Capon, J. B. Freeman, H. Hohmann, H. Prakken, Computational models, argumentation theories and legal practice, in: C. A. Reed, T. J. Norman (Eds.), Argumentation Machines: New Frontiers in Argument and Computation, Kluwer, 2003, pp. 85{120.","cites":null},{"id":3708,"title":"Conoise: Agent-based formation of virtual organisations, in:","authors":[],"date":"2003","doi":"10.1016\/j.knosys.2004.03.005","raw":"T. J. Norman, A. Preece, S. Chalmers, N. R. Jennings, M. Luck, V. D. Dang, T. D. Nguyen, V. Deora, J. Shao, A. Gray, N. Fiddian, Conoise: Agent-based formation of virtual organisations, in: Proceedings of the twenty-third Annual International Conference of the British Computer Society's Specialist Group on Arti\u00afcial Intelligence (SGAI), Cambridge, UK, 2003, pp. 353{366.","cites":null},{"id":3710,"title":"Constraint-based scheduling: Applying constraint programming to scheduling problems,","authors":[],"date":null,"doi":"10.1016\/s1574-6526(06)80026-x","raw":"P. Baptiste, C. Le Pape, W. Nuijten, Constraint-based scheduling: Applying constraint programming to scheduling problems, International Series in Operations Research and Management Science 39.","cites":null},{"id":3717,"title":"Coping with inaccurate reputation sources: Experimental analysis of a probabilistic trust model, in:","authors":[],"date":"2005","doi":"10.1007\/s10458-006-5952-x","raw":"W. T. L. Teacy, J. Patel, N. R. Jennings, M. Luck, Coping with inaccurate reputation sources: Experimental analysis of a probabilistic trust model, in: In AAMAS 05: Proceedings of 4th International Joint Conference on Autonomous Agents and Multiagent Systems, 2005, pp. 997{1004.","cites":null},{"id":3709,"title":"Cumulative scheduling with task intervals, in:","authors":[],"date":"1996","doi":null,"raw":"Y. Caseau, F. Laburthe, Cumulative scheduling with task intervals, in: In Logic Programing Proceedings of the 1996 Joint International Conference and Syposium on Logic Programming, 1996, pp. 363{377.","cites":null},{"id":6016023,"title":"E\u00b1cient selection and monitoring of qos-aware web services with the ws-qos framework, in:","authors":[],"date":"2004","doi":"10.1109\/wi.2004.10084","raw":"M. Tian, A. Gramm, H. Ritter, J. Schiller, E\u00b1cient selection and monitoring of qos-aware web services with the ws-qos framework, in: In Web Intelligence, 2004, pp. 152{158.","cites":null},{"id":3722,"title":"Efficient selection and monitoring of qos-aware web services with the ws-qos framework, in:","authors":[],"date":"2004","doi":"10.1109\/MC.2007.41","raw":null,"cites":null},{"id":3723,"title":"Granitenights a multiagent visit scheduler utilising semantic web technology, in:","authors":[],"date":"2003","doi":"10.1007\/978-3-540-45217-1_10","raw":"G. Grimnes, S. Chalmers, P. Edwards, A. Preece, Granitenights a multiagent visit scheduler utilising semantic web technology, in: In 7th InternationalWorkshop on Cooperative Information Agents, 2003, pp. 137 { 151.","cites":null},{"id":6016022,"title":"Incorporating qos speci\u00afcations in service discovery, in:","authors":[],"date":"2004","doi":"10.1007\/978-3-540-30481-4_25","raw":"V. Deora, J. Shao, G. Shercli\u00ae, P. J. Stockreisser, W. A. Gray, N. J. Fiddian, Incorporating qos speci\u00afcations in service discovery, in: In Proceedings of Second International Web Services Quality Workshop (WQW 2004), 2004, pp. 252{263.","cites":null},{"id":3721,"title":"Incorporating qos specifications in service discovery, in:","authors":[],"date":"2004","doi":"10.1007\/978-3-540-30481-4_25","raw":null,"cites":null},{"id":3707,"title":"Next generation systems architecture - the matrix,","authors":[],"date":"2005","doi":"10.1007\/s10550-005-0107-1","raw":"C. J. Strang, Next generation systems architecture - the matrix, BT Technology Journal 23 (1) (2005) 55{68.","cites":null},{"id":3713,"title":"Optimal clearing algorithms for multi-unit single item and multi-unit combinatorial auctions with demand\/supply function bidding, in:","authors":[],"date":"2003","doi":"10.1145\/948005.948009","raw":"V. D. Dang, N. R. Jennings, Optimal clearing algorithms for multi-unit single item and multi-unit combinatorial auctions with demand\/supply function bidding, in: Proceedings of the Fifth International Conference on Electronic Commerce, 2003, pp. 25{30. 20[10] D. Gambetta, Can we trust trust?, in: Trust: Making and Breaking Cooperative Relations, chapter 13, Basil Blackwell, 1988, pp. 213 { 237.","cites":null},{"id":3715,"title":"Regret: A reputation model for gregarious societies, in:","authors":[],"date":"2001","doi":"10.1145\/844331.844337","raw":"J. Sabater, C. Sierra, Regret: A reputation model for gregarious societies, in: In Fourth Workshop on Deception Fraud and Trust in Agent Societies, 2001, pp. 61{70.","cites":null},{"id":3720,"title":"Supporting qos assessment and monitoring in virtual organisations, in:","authors":[],"date":"2005","doi":"10.1007\/s10550-006-0029-6","raw":"G. Shercli\u00ae, P. Stockreisser, J. Shao, W. Gray, N. Fiddian, Supporting qos assessment and monitoring in virtual organisations, in: In Proceedings IEEE International Conference on Services Computing, 2005, pp. 249{ 250.","cites":null},{"id":3706,"title":"Toward autonomic web services trust and selection, in:","authors":[],"date":"2004","doi":"10.1145\/1035167.1035198","raw":"E. M. Maximilien, M. P. Singh, Toward autonomic web services trust and selection, in: In ICSOC04: Proceedings of the 2nd international conference on Service oriented computing, 2004, pp. 212{221.","cites":null},{"id":3716,"title":"Travos: Trust and reputation in the context of inaccurate information sources,","authors":[],"date":"2006","doi":"10.1007\/s10458-006-5952-x","raw":"J. Patel, W. T. L. Teacy, N. R. Jennings, M. Luck, Travos: Trust and reputation in the context of inaccurate information sources, Journal of Autonomous Agents and Multi-Agent Systems (2006) to appear.","cites":null},{"id":3719,"title":"Ws-agreement: Agreementbased grid service management, in:","authors":[],"date":"2003","doi":null,"raw":"K. Czajkowski, Dan, A., J. Rofrano, S. Tuecke, M. Xu, Ws-agreement: Agreementbased grid service management, in: In Global Grid Forum, 2003.","cites":null}],"documentType":{"type":1}},"contributors":["University of Aberdeen, Natural & Computing Sciences, Computing Science"],"datePublished":"2006-01","abstract":"Non peer reviewedPostprin","downloadUrl":"","fullTextIdentifier":null,"pdfHashValue":null,"publisher":null,"rawRecordXml":"<record><header><identifier>\n        \n            \n                oai:aura.abdn.ac.uk:2164\/1131<\/identifier><datestamp>\n                2018-01-05T21:46:05Z<\/datestamp><setSpec>\n                com_2164_673<\/setSpec><setSpec>\n                com_2164_370<\/setSpec><setSpec>\n                com_2164_331<\/setSpec><setSpec>\n                com_2164_705<\/setSpec><setSpec>\n                col_2164_674<\/setSpec><setSpec>\n                col_2164_706<\/setSpec>\n            <\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:doc=\"http:\/\/www.lyncode.com\/xoai\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n            \nDelivering services by building and running virtual organisations<\/dc:title><dc:creator>\nNguyen, D<\/dc:creator><dc:creator>\nThompson, S G<\/dc:creator><dc:creator>\nPatel, J<\/dc:creator><dc:creator>\nT Teacy, L W<\/dc:creator><dc:creator>\nJennings, N R<\/dc:creator><dc:creator>\nLuck, M<\/dc:creator><dc:creator>\nDang, V<\/dc:creator><dc:creator>\nChalmers, Stuart William<\/dc:creator><dc:creator>\nOren, Nir<\/dc:creator><dc:creator>\nNorman, T J<\/dc:creator><dc:creator>\nPreece, Alun David<\/dc:creator><dc:creator>\nGray, Peter Michael David<\/dc:creator><dc:creator>\nShercliff, G<\/dc:creator><dc:creator>\nStockreisser, P J<\/dc:creator><dc:creator>\nShao, J<\/dc:creator><dc:creator>\nGray, W A<\/dc:creator><dc:creator>\nFiddian, N J<\/dc:creator><dc:contributor>\nUniversity of Aberdeen, Natural & Computing Sciences, Computing Science<\/dc:contributor><dc:subject>\nQA76 Computer software<\/dc:subject><dc:subject>\nQA76<\/dc:subject><dc:description>\nNon peer reviewed<\/dc:description><dc:description>\nPostprint<\/dc:description><dc:date>\n2011-02-14T16:58:32Z<\/dc:date><dc:date>\n2011-02-14T16:58:32Z<\/dc:date><dc:date>\n2006-01<\/dc:date><dc:type>\nJournal article<\/dc:type><dc:identifier>\nNguyen , D , Thompson , S G , Patel , J , T Teacy , L W , Jennings , N R , Luck , M , Dang , V , Chalmers , S W , Oren , N , Norman , T J , Preece , A D , Gray , P M D , Shercliff , G , Stockreisser , P J , Shao , J , Gray , W A & Fiddian , N J 2006 , ' Delivering services by building and running virtual organisations ' BT Technology Journal , vol 24 , no. 1 , pp. 141-152 . DOI: 10.1007\/s10550-006-0029-6<\/dc:identifier><dc:identifier>\n1573-1995<\/dc:identifier><dc:identifier>\nPURE: 540980<\/dc:identifier><dc:identifier>\nPURE UUID: ce2d2031-e1ce-4209-beca-2b296f472a31<\/dc:identifier><dc:identifier>\nWOS: 000237661100016<\/dc:identifier><dc:identifier>\nScopus: 33646819301<\/dc:identifier><dc:identifier>\nhttp:\/\/hdl.handle.net\/2164\/1131<\/dc:identifier><dc:identifier>\nhttp:\/\/eprints.ecs.soton.ac.uk\/13310\/<\/dc:identifier><dc:identifier>\nhttp:\/\/dx.doi.org\/10.1007\/s10550-006-0029-6<\/dc:identifier><dc:language>\neng<\/dc:language><dc:relation>\nBT Technology Journal<\/dc:relation><dc:format>\n12<\/dc:format>\n<\/oai_dc:dc>\n<\/metadata>\n        <\/record>","journals":[{"title":null,"identifiers":["1573-1995","issn:1573-1995"]}],"language":{"code":"en","id":9,"name":"English"},"relations":["BT Technology Journal"],"year":2006,"topics":["QA76 Computer software","QA76"],"subject":["Journal article"],"fullText":"Delivering Services by Building and Running\nVirtual Organisations\nDuong Nguyen, Simon Thompson\nBritish Telecommunication, Adastral Park, Ipswich, UK\nJigar Patel, Luke W T Teacy, Nicholas R Jennings\nMike Luck, Viet Dang\nSchool of Electronics and Computer Science, University of Southampton, UK\nStuart Chalmers, Nir Oren, Timothy J Norman\nAlun Preece, Peter M D Gray\nDepartment of Computing Science, University of Aberdeen, UK\nGareth Shercliff, Patrick J Stockreisser\nJianhua Shao, W Alex Gray, Nick J Fiddian\nSchool of Computer Science, Cardiff University, UK\nAbstract\nIn our view, customers in the future are likely to obtain their services from coali-\ntions of service providers. These coalitions can be described as virtual organisations\n(VOs); they are group of service providers that form relationships to service cus-\ntomers\u2019 demands on an ad-hoc basis. For a VO to be effective, it must be reliable\nand scalable, and realistically, it must be created and maintained in a dynamic,\nopen and competitive environment. The CONOISE-G project has focused on re-\nsolving the technology challenges that emerged from these requirements. Specifi-\ncally, CONOISE-G provides mechanisms to assure effective operation of VOs in the\nface of failure, unexpected events and changing requirements in dynamic, open and\ncompetitive environment. In this paper, we describe the CONOISE-G system; moti-\nvated by a scenario based on mobile service provision; outline its use in the context\nof VO formation and perturbation and review current efforts to progress the work\nto deal with unreliable information sources. 1\n1 Primary contact: Duong Nguyen, PP12 Orion 1, Adastral Park, Martlesham\nHeath, Ipswich IP5 3RE, United Kingdom\nEmail: duong.nguyen@bt.com\nTelephone: +44 1473 605 894\nPreprint submitted to BTTJ 25 November 2005\n1 Introduction\nThe engineering of systems using approaches that establish a fixed organi-\nsational structure is not sufficient to handle many of the issues inherent in\nlarge-scale open environments (in particular, the heterogeneity of the differ-\nent actors, trust and accountability, failure handling and recovery, and societal\nchange (1; 2)). This restriction is especially significant for companies such as\nBT, who are currently adopting Service Oriented Architectures (SOA) for\ntheir IT infrastructures and service provision platforms. SOA are networks of\nweb services and other software components connected together using indus-\ntry standard middleware and they are basic components of BT\u2019s 21CN vision\n(3). In addition, customers are increasingly demanding a high degree of cus-\ntomisation which adds to service complexity. In this paper we report on our\nattempts to develop a system that can address these requirements.\nIn more detail, VOs are composed of a number of software agents. A software\nagent is an computer program representing different individuals, departments\nand organisations that possess a range of problem-solving capabilities and re-\nsources. While such agents are typically self-interested, there are sometimes\npotential benefits to be obtained from pooling resources: either with a com-\npetitor (to form a coalition) or with an entity with complementary expertise\n(to offer a new type of service). This can be used as the cue for the formation\nof a VO in which distinct, autonomous agents come together to exploit a per-\nceived niche. When this is successful, the collection of independent agents acts\nas a single conceptual unit in the context of the proposed service, requiring\nthat the participants cooperate and coordinate their activities in delivering\nthe services of this newly formed organisation.\nThis requires that the participants have the ability to manage the VO ef-\nfectively. In dynamic environments, however, the context may change at any\ntime, so that the VO may no longer be viable. It must then either disband or\nre-arrange itself into a new organisation that better fits the circumstances.\nThis paper describes technologies developed to address both these phases. VOs\nprovide a way of abstracting the complexity of open systems to make them\namenable to service development. The organisational structure, participant\nresponsibilities, synchronisation concerns and economic mechanics of the VO\nare hidden from the VO customer. This has two benefits:\n\u2022 Agents can be used to bridge between requester and providers to organise\nthe VO and to provide a layer of flexibility between requesting services and\nthe underlying infrastructure.\n2\n\u2022 The VO fulfils the role of information hiding in that the internal mechanics\nare abstracted away from the requesting service, and the VO formation and\nmanagement system either supports a request or fails at well-defined points.\nIn the current generation of composed service applications, VOs are statically\ndefined by developers using, for example, technologies such as WS-BPEL. This\nmeans that such applications are incapable of handling dynamic situations\nand reconfiguring themselves in an automated manner. Automated formation\nand ongoing management of VOs in open environments constitutes a major\nresearch challenge, a key objective of which is to ensure that they are both\nagile (can adapt to changing circumstances) and resilient (can achieve their\naims in a dynamic and uncertain environment). In addition to constraints\nthat relate to issues such as resource management and bidding strategies, we\nmust also consider softer constraints relating to contract management, trust\nbetween VO participants and policing of contracts.\nAgainst this background, the CONOISE-G project (Constraint-Oriented Ne-\ngotiation in an Open Information Services Environment for the Grid 2 ) is\ndirected at addressing just these issues. The CONOISE-G vision is a set of\nsystem agents, operating at the application layer of the architecture, working\ntogether to support robust and resilient VO formation and operation. It aims\nto provide mechanisms to assure effective operation of agent-based VOs in a\ndynamic, open and competitive environments, where entities compete for lim-\nited resources and unexpected events must be considered. Furthermore, this\nabstraction facilitates the development of highly personalized applications.\nMoreover, to operate an effective VO, we are required to monitor QoS levels\n(see section 3) and use this data to support mechanisms for recognising and\naddressing contract violations, once they have occured. Addressing these con-\ncerns is integral to the wide-scale acceptance of agent-based VOs. To that end,\nin this paper, we describe the CONOISE-G system, in which VO formation is\ngrounded on three key technologies (4):\n\u2022 Decision-making, including coalition formation.\n\u2022 Trust and reputation management, including contract enforcement.\n\u2022 Quality of service (QoS) assessment in the context of sparse short term\ninteractions between entities.\nIn addition, CONOISE-G has made a contribution by the construction of a\nfunctional prototype for dynamic re-formation of VOs through the integration\nof several different techniques.\nThe structure of this paper is as follows. First, a motivating example that\nintroduces the need for VO formation and operation is given in section 2. Sec-\n2 http:\/\/www.conoise.org\n3\nond, the system architecture, elaborating the different aspects identified above\nin support of robust and resilient operation is described in section 3. Third,\nthe implemented prototype that underlies the core of the current work in the\nproject is reported in section 4 together with some experiences gathered dur-\ning the implementation in section 5. Finally, a brief recap and some directions\nfor future work in section 6 conclude this paper.\n2 A Motivating Scenario - Lucy at the Olympics\nIn this section, we describe a scenario that shows the kind of application that\ndemonstrates the utility of using CONOISE-G technology. Lucy visits London\nin 2012 for the Olympic Games, using her PDA to access various multimedia\nservices (news, clips from the Games, tickets for events, text messaging, and\nad-hoc entertainment opportunities, such as streaming video). Many service\nproviders offer such services, so Lucy must determine available providers, select\nan optimal package, and then track the changing market for better deals.\nThis kind of decision is typically made by users on the basis of recommen-\ndations from friends, or because of the influence of marketing. Here we are\npresenting the CONOISE-G system as empowering Lucy to make a rational\nchoice very quickly. The application allows her to specify her service choices,\nand the infrastructure will form the VO that will most closely match those\nrequirements at the best balance of price, probable quality of service and\nprobable reliability. Of course this is a complex task.\nSuppose there are five service providers (SP1, . . . , SP5), as in Table 1, each\noffering relevant multimedia services. These services form three groups: video\ncontent (Entertainment and Game Clips services), HTML content (News and\nTicketing services) and text messaging (Text service). They can be requested\nindividually or taken as a package, with the constraint that the two services\noffered by SP2 must be taken together.\nSP Entertainment News Text Games Tickets\nSP1 30 20 5\nSP2 10 50\nSP3 100 30 5\nSP4 30 10 60\nSP5 50 45 10\nTable 1\nPotential Service Providers\nWe assume that these providers may demand different prices for the same\n4\nservice, depending on the number of units requested. For example, SP1 may\noffer 20 news updates per day at \u00a330 per month, and 10 updates at \u00a325 per\nmonth. Also, the quality of services may not be stable: SP4 may offer Games\nclips with a frame rate of no less than 24 frames per second, but actually\nprovide a rate that drops below that level. Finally, not all service providers\nare trustworthy, and what they claim may not be what a requester will get:\nSP5 may advertise sought-after tickets that it does not possess, and orders for\ntickets through SP5 may not always be honoured.\nNow, suppose that Lucy wishes to purchase the service package of Table 2. It\nshould be clear from Table 1 that many different solutions are possible. For\nexample, for 50 minutes of entertainment, both SP1 and SP4 must be used,\nbut different compositions of the two services are possible, with different price,\nquality and degree of trust.\nService Required Units Required\nEntertainment 50 mins per month\nNews 10 updates per day\nText messages 100 per month\nGame Clips 60 mins per day\nTicketing 10 alerts per day\nTable 2\nExample service package request\nDuring VO formation, multiple service providers may offer broadly similar\nservices, each described by multiple attributes including, for example, price,\nquality, reputation and delivery time. We need to determine how the relevant\nservices for a given service request may be discovered and how an optimal\npackage may be selected, based on the above attributes. After VO formation,\nwhen the services are being provided, the VO enters the operation stage.\nDuring VO operation, however, the services available may change over time:\nnew services may become available or providers may alter the way in which\nexisting services are offered. In addition, the services provided may be subject\nto fluctuations in their quality and, in some cases, a service provider may\nsimply break the contract and stop providing the service, leaving the VO\nshort of one service. So we need to monitor the performance of the members\nof a VO in terms of their trustworthiness, quality of service and conformance\nto contract, and to restructure the VO in light of perturbations so that the\nintegrity and usefulness of the VO are maintained. Thus, a poorly performing\nservice may be replaced, a contract-breaking service may be dropped, and a\nnew user requirement may be accommodated.\nCreating and then effectively managing a VO in this type of dynamic environ-\nment thus poses significant research challenges. In seeking to address them,\n5\nwe have developed a system for dynamic formation and operation of VOs. In\nthe following sections, we outline the system architecture and describe its key\ncomponents.\n3 The CONOISE-G Architecture\nThe CONOISE-G architecture comprises several different agents, including\nsystem agents and service providers (SPs), as shown in Figure 1. The system\nagents are those needed to achieve core system functionality for VO formation\nand operation, while the service providers are those involved in the VO itself.\nFor simplicity, we omit the discussion of some specific components that per-\nform basic functions, such as a Yellow Pages (YP) agent, since they add little\nto the elaboration of the issues to be discussed here. The system agents that\nare shown in Figure 1 are discussed in more detail in the relevant subsections\nthat follow.\nDecision\nMaking\nComponent\nUtility\nCalculation\nTrust\nComponent\nVOM\nSPs\nActual\nService\nProvision\nQoSC\nQ-DB\nQA\nSummarised\nData Stream\nPricing\nRequest\nTo\nMonitor\nService\nQoS Report\/\nService\nDegradation\nReport\nVOMs\/SPs\nReputation\nBroker\nTrust\nGive\nQoS\nAssesment\nReputation\nReal-time\nService\nDependent\nQoS Data\nStream\nAgent\nInteraction\nEnd User\nNetwork Sensor\nDatabase\nKEY\nInternal Component\nInform QoS\nHistory On\nRequest\nUpdate\nTrust\nYellow Pages\nQuery\nQuery\nresults\nClearing Agent\nSend group of\npotential\npartners for VO\nReply with\noptimal coalition\nfor the VO\nService\nUsers\nQoS\nData\nContract Management\nComponent\nContract\nStore\nRegister\/\nInform\nContract\nContract\nUtility\nReputation\nService Provision\nSensor Data\nPolicing Agent\nQueries\nand\nVerdict\nArguments\nand Evidence\nFig. 1. The CONOISE-G system architecture\nAssuming that service providers have already advertised their services to a\nYP, the VO formation process starts with a particular SP acting on behalf of\na user, known as the Requester Agent (RA), which analyses the requester\u2019s\nservice requirements, locates the relevant providers through the YP, and then\ninvites the identified providers to bid for the requested services. The quality\nand trustworthiness of the received bids are assessed by the Quality Agent\n6\n(QA) and the trust component, respectively, and the outcome is combined\nwith the price structure by a Clearing Agent (CA) (4) to determine which\ncombination of the services\/providers will form an optimal VO (in terms of\nprice, quality and trust) for the requester. At this point, the VO is formed\nand the RA takes on the role of VO Manager (VOM), responsible for ensuring\nthat each member of the VO provides its service according to contract.\nDuring the operational phase of the VO, the VOM may request a QoS Con-\nsultant (QoSC) to monitor services provided by any members of the VO and\nany member of the VO may invoke a Policing Agent to investigate a potential\ndispute regarding service provision. Ultimately, our aim is to inform the user\nwhen the actual service level diverges from the agreed service level for the ag-\ngregate service previously specified. At present, however, policing is achieved\non a per-component (service) basis.\nWhen the QoS provision of a service (say the news service in the scenario)\nin the VO falls below an acceptable level, or some breach of contract is ob-\nserved, the QoSC alerts the VOM, which initiates a VO re-formation process;\nthe VOM passes relevant information (including service provider name and\noutcome of the contract held with that provider) to the trust component to\nensure that the provider concerned is penalised to an appropriate level by\nupdating its record of trust.\nIn this re-formation process, the VOM issues another message to the YP re-\nquesting a list of SPs that can provide the news service. As before, the YP\nidentifies possible SPs, and bids are received and evaluated, resulting in the\nCA determining the best SP to replace the failed provider. At this point, the\nVOM re-forms the VO with the new SP replacing the old one, and instructs the\nQoSC to stop monitoring the old SP and to monitor the new one instead. We\nnow proceed by discussing the core technical components of the architecture\nin more detail.\n3.1 Decision Making in VO Formation\nIn developing a model of VO formation, there are a number of issues that\nmust be taken into account including:\n\u2022 An agent that is considering whether to join a VO must determine the\nconditions under which it is profitable for it to do so (see section 3.1.1).\n\u2022 The agent that initiates the VO formation process must, given a number of\noffers, determine the best coalition it can create (see section 3.1.2).\n7\nSP4 RA\nSP1\nSP2\nSP3\nformed\nVO\naccept\nreject\nform a VO\ndecision to\ncall\noffers\nWhat to\nRA\nRequirements\nCustomer\nSP1\nSP2\nSP3\nSP4 RA\nSP4\nAccept\nDetermining\nDetermining\nWhat to Offer\nDelivery\nService\nSP1\nSP2\nSP3\nFig. 2. The agent decision making process.\n3.1.1 Determining What to Offer\nThe purpose of a service provider agent is to be able to create a bid in reply to\na call for services, and decide how much resource it can, and more importantly,\nhow much resource it wants to provide as a bid for the procurement of that\nservice. Furthermore, any agent may, when considering what to offer, take on\nthe role of the requester agent in figure 2 and issue a call for bids if it identifies\na shortfall in its available resources. Each agent must, therefore, be able to\nact as a contractor and supplier in any given situation.\nTo give such dual-purpose functionality, we have designed a Constraint Sat-\nisfaction Program (CSP) that models the decision making process the agent\nmust take in such scenarios.\nFigure 3 shows one such scenario, where the agent acts as the supplier and\nreceives a call for bids. It has the following possible responses: (i) it can decide\nnot to bid for the service; (ii) it can bid using just its own resources; (iii)\nit can provide a bid from within an existing VO collaboration utilising the\ncombined VO\u2019s resources; or (iv) it identifies a need for extra resources not\navailable within the existing VO. We can see that the last option represents\nthe scenario where the agent becomes the contractor, and itself begins the\nprocess of issuing a call for bids to other agents in the environment.\nThe technique used to provide the decision making process is based on a cumu-\nlative scheduling CSP (5). Usually, this is defined as the maximum allowable\nlimit from a finite \u2018pool\u2019 of resource that can be used collectively by the agents\n8\nCall for bids\nDecide not to bid\nUse existing VO\nBid on its ownOffer\nOffer\nOffer\nCSP Agent\n(new VO formation)\nCall for bidsCSP Agent\nCSP Agent\nCSP Agent\nCSP Agent\nFig. 3. The agent decision making process.\nat any given time (6). We define our problem differently; rather than the agents\ntaking resources from a communal resource, we have the agents contributing\nto the communal pool, and we define a minimum allowable limit so that the\nset of agents must provide this service at least or above the required threshold\nlimit over the required time. If it is not possible, then we use the CSP to\nhighlight the deficit and can then look to contracting-out for the provision of\nthis shortfall.\nTo explain our cumulative scheduling based algorithm, we first define the\nproblem. Given a set of n agents in a VO, each of whom can provide a specific\nfinite amount of a resource R \u2208 {R1..Rn}, a set of start times describing\nwhen the agent can begin providing each of the resources {S1..Sn} and a set\nof durations over which the resource is available {D1..Dn} we can say, for an\nagent i \u2208 {1 . . . n}, that the function \u03b4i(t) evaluates to 1 if the current time\nt is within the agent\u2019s resource start and end time (Si < t \u2264 (Si +Di)), and\n0 otherwise. Then, an amount r of resource R is available over a time period\n1..v iff \u2200t \u2208 {1..v} (\u2211ni=1Ri\u03b4i(t)) \u2265 r. In other words, the total sum of the\nresource provided by the set of agents with indices {1 . . . n} in a VO at any\ntime between 1..t does not fall below the resource limit r specified. Using this\nrepresentation means that we can also use constraints on the agent resource\ndomains to represent existing commitments on those resources.\nIn our scenario, this helps us to model the decision making process as the\nagent can look at the existing partners in its VO, as well as its own resources\nand the existing commitments, and see whether it can accommodate the new\nallocation of resources asked of it. As an example, let us look at an agent a1\nwho is in a VO with two other agents a2,a3. All can provide a certain amount\n9\ntime\nAgent\n30\n20\n10\na3\na2\na1\n10 20 30 40 50 60 70 800\nt3+t2 t3+t1\nresource\nalloaction=40\nFig. 4. An example schedule.\nof bandwidth (10, 20 and 30 units respectively). Agent a1 is asked to provide\na total bandwidth amount of 40 units (as described in the introduction) from\ntime 0 to 80, so it uses the knowledge of the amount of resources contributed\nfrom the other agents in the VO (along with its own) to work out if this is\npossible. Figure 4 shows an example allocation. A total rate of 40 units is\nprovided by a3 and a2 between 0 and 50, then by a3 and a1 between 50 and\n80. We can also add constraints on the resources available for each agent at\neach point in time to represent commitments under other contracts.\nOf course there are many permutations that we can have in this resource\nallocation process. What we have described so far shows what the agent can\ndo, but we also want to be able to model a utility that allows the agent to\nchoose between competing viable allocations (i.e. decide what it wants to do).\nWe have implemented this utility using constraint reification, where each con-\nstraint on the domain of the resource has an associated value, 1 or 0, which\ndepends on the success or failure of the constraint. For instance, using SICStus\nProlog 3 notation, X < Y# <=> B states that if X is less than Y, the variable\nB is set to 1, otherwise it is set to 0. When the agents try to provide a new\nresource we take into account the current commitments of the agents (all the\nconstraints currently posted against the resources) and we get a set of reified\nvalues for each commitment which we can then use to see which constraints\nare satisfiable alongside the new call for bids, and which ones \u2018fail\u2019, and so\nhave a 0 value in their reification, that is, the resources cannot be allocated in\nthe current situation. We can also highlight where the new bid is failing and\nidentify the shortfall. Using this information, we also have a basis on which\nwe can look at quality and pricing metrics (see section 3.4) for commitments\n3 The cumulative scheduling algorithm is implemented using the finite domain con-\nstraint library in SICStus (see http:\/\/www.sics.se\/isl\/sicstuswww\/site\/index.html).\n10\nin comparison to the new resource being bid for, and this therefore allows\nus to prioritise the commitments we have against any new ones that might\narise. Before we discuss quality issues, however, we will address the problem\nof which offers the agent initiating VO formation should accept to create the\nbest, or at least a satisfactory, VO.\n3.1.2 Determining What to Accept\nSince VOs do not have a rigid organisational framework, the selection of part-\nners is one of the most important activities in the formation of the VO (7).\nHowever, there are three requirements that need to be met by this process:\n(1) The most suitable set of partners from those that are available should be\nselected. In this context, most suitable means the ones with lowest price\nbids. Note that the price here does not just mean the monetary value of\nthe bids but may be a combined rating value, calculated from monetary\nvalue and other attributes of the goods\/services offered by the partners\n(e.g. delivery time).\n(2) The selection should occur within a computationally reasonable time\nframe so that the market niche can be exploited as it becomes available.\n(3) The potential partners should be able to vary their bid depending on their\ninvolvement in the VO. Thus, for example, a partner may be willing to\ncomplete services more cheaply if it has a high degree of involvement\nin the VO (because the intrinsic costs can be depreciated over many\ninstances). In contrast, if a partner has a comparatively small involvement\nthen the unit cost may be much higher.\nGiven the open nature of the environment and the lack of a pre-ordained\nstructure, we believe this creation process is best achieved using some form of\nmarketplace structure (auction). This is because markets are a highly effective\nstructure for allocating resources in situations in which there are many self-\ninterested and autonomous stake-holders. There are, however, many different\ntypes of auction (see (8) for a classification) but in this work it was decided\nto adopt a combinatorial auction approach.\nIn a combinatorial auction, bidders may bid for arbitrary combinations of\nitems. For example, a single bid may be for 5 movies, 24 news updates (per\nday) and 20 minutes of phone at a total price p per month. A more complicated\nbid may be for q1 movies and q2 news updates at price (30 \u2217 q1 + 3 \u2217 q2) if\nq1 < 10 or q2 < 24, and at price (20 \u2217 q1 + 2 \u2217 q2) if q1 \u2265 10 and q2 \u2265 24. This\nparticular type of auction is suitable for this problem because the degree of\nflexibility in expressing offers allows the potential partners to vary their bid\ndepending on their involvement in the VO. However, the main disadvantages\nof combinatorial auctions stem from the lack of a compact and expressive\n11\nbid representation and efficient clearing algorithms for determining the prices,\nquantities and trading partners as a function of the bids made. Without such\nalgorithms, because of the computational complexity of the problem, there\nmay be unacceptable delays for auctions that have only a medium number\nof participants. Thus, in the CONOISE context, a compact and expressive\nbid representation language and efficient clearing algorithms for combinatorial\nauctions have been developed (9).\nSpecifically, we developed a bid presentation language where the price of a\npackage, Pi(r1, . . . , rm) is specified as: \u03c9i(t1, . . . , tm) \u00b7 (\u2211mj=1 P ji (rj)), where P ji\nis the price function of agent i for item j, in the form of a piecewise linear\ncurve (i.e. the function\u2019s graph is composed of many segments, each of which is\nlinear), tj is the segment number of P\nj\ni that rj belongs to and \u03c9i is a function\nthat expresses correlations between items in the set of segments.\nMore precisely, each piece-wise linear function P ji is composed of N\nj\ni linear\nsegments, numbered from 1 to N ji . Each individual segment with segment\nnumber l, 1 \u2264 l \u2264 N ji , is described by a starting quantity sji,l and an ending\nquantity eji,l, a unit price pi\nj\ni,l and a fixed price c\nj\ni,l, with the meaning that:\nbidder i wants to trade any r units of item j, sji,l \u2264 r \u2264 eji,l with the price\nP = piji,l \u00b7 r + cji,l.\nNote that the segments are not required to be continuous; that is, (sji,l+1\u2212eji,l)\nmay not equal 1. Also, for convenience, we call segment number 0 the segment\nin which the starting quantity, the ending quantity, the unit price and the\nfixed price are all equal to 0. Thus, the number of segments of P ji , including\nthis special segment, will equal N ji + 1.\nHaving developed a compact representation language as described above, two\nsets of clearing algorithms have been implemented. One algorithm has poly-\nnomial complexity and was shown to produce a solution within a finite bound\nof the optimal, while the other is not polynomial but is guaranteed to produce\nthe optimal allocation (9). In particular, the former uses a greedy approach,\nand has a running time of O(n2), where n is the number of bidders. The so-\nlution it produces is shown to be within a finite bound of the optimal, which\nis proportional to n and Km\u22121, where m is the number of items and K is a\nsmall constant. On the other hand, the latter is guaranteed to produce the\noptimal allocation, and has a worst-case running time that is proportional to\nmn \u00b7 (K \u2032 + 1)mn, where K \u2032 is the upper bound on the number of segments\nof P ji . As these two sets of algorithms provide a trade-off between running\ntime and optimality of solution, they provide the user with more flexibility.\nIn cases where the running time is more crucial, the polynomial algorithms\nwould be more appropriate, while in cases where optimality of the solution is\nmore desirable, the optimal algorithms will be better suited.\n12\n3.2 Establishing Trust and Reputation\nWhenever interactions take place between different agents, the issues of trust\nand reputation become important. In particular, during the formation of a\nVO, we often have a choice of service providers to whom we may delegate\ntasks. In such cases, trust serves as an indicator of which of these possible\npartners are likely to carry out the task as specified, but its usefulness also\nextends into the other stages of the VO lifecycle.\nIn CONOISE-G, we take trust to be a particular level of the subjective proba-\nbility with which an agent assesses that another agent will perform a particular\naction, both before it can monitor such an action and in a context in which it\naffects its own action (based on the definition from (10)). This probabilistic\nview of trust allows us to determine the subjective probability by consider-\ning the outcomes of previous encounters (known as direct interaction-based\ntrust). However, in an open community it is likely that an agent will inter-\nact with many unknown entities with which it may not share an interaction\nhistory. In the absence of this shared history, the CONOISE-G trust system\nuses reputation information to establish the level of trust to place in another.\nHere reputation is defined as a commonly held set of opinions about an entity\n(11), and it is the aggregation of these common opinions that forms a level of\ntrust. In more detail, the trust and reputation system (12; 13) consists of two\ndistinct parts:\n\u2022 The first is a trust component which is internal to all agents that require\na trust metric in their decision-making process, as shown in Figure 1. Its\nfunction is to provide its owner agent with a level of trust for a given service\nand service provider, and it is insulated from the external environment by\nthe agent that embodies it. As the agent interacts with others in the com-\nmunity, the outcomes of these interactions are stored in this component and\nare subsequently used to determine a trust value when required. In addition\nto calculating trust, the trust component calculates a level of confidence to\nbe placed in that trust value. It is used by the trust component to reason\nabout whether an agent itself has adequate evidence or whether it needs to\nobtain further (reputation) information from others.\n\u2022 The second part of the trust system is a reputation brokering agent, several\nof which may serve as a distributed store of reputation information. These\nreputation brokers provide aggregated stores of trust information relating to\nspecific service provider agents and each of their services. However, before\nany agent can query the broker, the broker must obtain the trust information\nthat will form the query result. We achieve this using a subscribe and publish\nmechanism, by which the broker subscribes to agents in the community\nwhich then publish their internal information (the store of outcomes based\non their individual direct experiences) to the broker.\n13\n3.3 Policing within a VO\nWhile trust and reputation ratings can reduce the likelihood of poorly per-\nforming (or malicious) agents becoming part of a VO, they do not offer any\nmechanism for minimising the impact of undesirable behaviour, such as an\nagent contracting to provide services it does not deliver. Given this, the goal\nof the policing system is to determine whether a party is in breach of a con-\ntract, determine if any corrective action (as stipulated in the contract) should\nbe taken, and inform the trust mechanism to allow sanctions to be imposed.\nGiven the scalability concerns inherent in large, open distributed systems, the\nCONOISE-G system responds to reported exceptional circumstances, rather\nthan monitoring all operations.\nIn more detail, the policing system initiates an investigation following the re-\nceipt of a complaint from a VO participant. The process begins by obtaining\nthe relevant contract at the centre of the dispute, and gathering evidence to\ndetermine the actual state of affairs. This can take on a number of forms,\nincluding reports from agents in the system and other artifacts; it is recursive,\nin that one piece of evidence may have further evidence supporting or rebut-\nting it. Furthermore, agents can submit evidence in support of, or against, a\nconclusion. The evidence gathered, therefore, constitutes a set of defeasible\narguments in support of, and in defence of, the complaint. Given this, our ap-\nproach borrows ideas from computational models of legal reasoning and legal\nargumentation (14).\nIn CONOISE-G, the representation of contracts is based on the emerging Web\nServices standard for agreements, WS-Agreement (15). However, due to the\ncomplexity of the environment, extensions to WS-Agreement are required,\nwhile we ignore some parts of the specification which are not useful in our\ndomain.\n3.4 QoS Assessment and Monitoring\nIn an open and dynamic service environment, QoS monitoring is characterised\nby the need to handle many sparse interactions over an extended period of\ntime. In our model we consider assessment and monitoring to be part of a\nwider QoS lifecycle: the specification, assessment, monitoring and logging of\nQoS for service provision, supported by information flows between each stage\nand a QoS taxonomy for expressing user requirements.\nIn CONOISE-G we take a user centric approach in fully supporting the QoS\nlifecycle (16). Specifically, service providers are able to specify their QoS\npromises, and service users specify their QoS requirements using a DAML-\n14\nS derived QoS taxonomy (17). To allow for diverse services with potentially\nconflicting definitions of a particular QoS attribute, within this taxonomy we\nseparate QoS attribute specifications from their measurement methods and al-\nlow mappings between the two to be established by individual services. That\nis, individual providers may define any QoS attributes in an expression they\nprefer for their services, but how such attributes will be monitored depends\non which measurement methods the providers choose. This enhances the ap-\nplicability and generality of our proposed framework.\nIn particular, three components are responsible for supporting the QoS lifecy-\ncle within the CONOISE-G architecture, as shown in Figure 1:\n\u2022 First, during the operation of a VO the QoS Consultant (QoSC) monitors\nthe performance of each of the delivered services against their promised\nQoS, so as to ensure that the VO as a whole is performing to agreed levels\nas well as each participating entity.\n\u2022 Second, the streamed information that is generated from the QoS moni-\ntoring stage is summarised and stored within the QoS Database (QDB)\ncomponent providing a permanent record of the performance of each ser-\nvice provider within the environment.\n\u2022 Third, the QoS Assessment (QoSA) component provides for the effective\nhandling of a user\u2019s QoS requirements at the service discovery stage and\nuses the QDB to establish the likelihood that a particular service provider\nwill be able to meet those requirements. In our work, we extend current\napproaches to the incorporation of QoS Assessment in service discovery\n(2; 18). This aspect of our work is particularly relevant to the area of Grid\ncomputing, where dynamic, near instantaneous discovery, assessment and\ncomposition of resources is the norm.\n4 The CONOISE-G Implementation\nThe CONOISE-G environment is FIPA 4 compliant and the implementation\nuses the JADE 5 agent platform. Agents communicate by exchanging FIPA\nACL (agent communication language) messages, the content of which is de-\nfined using lightweight ontologies expressed in Semantic Web (SW) repre-\nsentations (following experience from previous work (19)). We chose these\nrepresentations in preference to the more conventional use of FIPA-SL in the\ncontent of FIPA messages for a number of reasons. First, the SW represen-\ntations are more widely used than FIPA-SL, so CONOISE-G is lent greater\ninteroperability by aligning with W3C recommendations. Second, we can reuse\n4 http:\/\/www.fipa.org\n5 http:\/\/sharon.cselt.it\/projects\/jade\n15\nexisting schemas and ontologies; for example, we borrowed heavily from the\nDAML-S service ontology. Thus, we would be in a position to exploit any\nexisting schemas or ontologies in a particular application domain. Third, par-\nticularly at the lower (RDF) layers of the SW formalism stack, the semantics\nof the data model are much simpler than FIPA-SL (while still adequate for\noperational use), so there is less of a learning curve for designers and imple-\nmentors of CONOISE-G agents (and much well-tested software for processing\nRDF, unlike FIPA-SL).\nIn the current system, we have created a set of interrelated ontologies ex-\npressed in a relatively lightweight manner as RDF schemas. For now, RDFS\nis sufficiently expressive to capture usable structures, and has allowed us to\nrapidly develop the necessary message formats for inter-agent communication\nin our scenario. We envisage the definitions in the ontologies being refined\nwith the addition of OWL (Web Ontology Language) statements once the for-\nmats have stabilised through further testing and refinement. A sample RDF\nmessag expressed using a number of the ontologies is shown in Figures 5. This\nis a sample call for bids, as issued to SPs. This consists of an instance of a\nuser Requirement structure, stating a number of services that the user\u2019s re-\nquirement consistsOf, and also a qualityPreference property, indicating that\nthe most important thing for this user is lowest cost. The descriptions of each\nrequired service are adorned with service-specific properties; for example, the\nMovieContent requirement specifies a number of movies (per month), a sub-\nscription preference, and a genre type. This illustrates the use of terms from\nthree CONOISE-G ontologies:\n\u2022 the package ontology describes service packages, defining terms such as the\nclass Requirement and the property consistsOf ;\n\u2022 the quality ontology describes domain-independent quality-of-service terms\nsuch as the qualityPreference property, and its various settings such as \u201cmin-\nCost\u201d;\n\u2022 the media ontology defines all application domain-specific terms for the\nOlympics scenario, including the service classes MovieContent, Html-\nContent, PhoneCalls, and TextMessaging, all of which the ontology\ndefines to be (indirect) sub-classes of the generic CONOISE ServicePro-\nfile class (closely based on DAML-S).\nAs can been seen, the capability to create modular, interlocking ontologies\nusing the SW formalisms allow us to build up quite elaborate information\nrepresentations, all of which are easily serialisable in a portable, open XML\nsyntax, and easily parsed and processed using tools such as Jena2 6 .\nIn terms of the user interface, the GUI (in Figure 6) shows two large windows.\n6 http:\/\/www.hpl.hp.com\/semweb\/jena2.htm\n16\n<rdf:RDF\nxmlns:rdf=\u2018\u2018http:\/\/www.w3.org\/1999\/02\/22-rdf-syntax-ns#\u2019\u2019\nxmlns:quality=\u2018\u2018http:\/\/conoise.org\/ontologies\/quality#\u2019\u2019\nxmlns:media=\u2018\u2018http:\/\/conoise.org\/ontologies\/media#\u2019\u2019\nxmlns:package=\u2018\u2018http:\/\/conoise.org\/ontologies\/package#\u2019\u2019>\n<package:Requirement rdf:about=\u2018\u2018http:\/\/conoise.org\/samples\/request\u2019\u2019>\n<quality:qualityPreference rdf:resource=\n\u2018\u2018http:\/\/conoise.org\/ontologies\/quality#minCost\u2019\u2019\/>\n<package:consistsOf\nrdf:type=\u2018\u2018http:\/\/conoise.org\/ontologies\/media#PhoneCalls\u2019\u2019\nmedia:numberOfMinutes=\u2018\u201825\u2019\u2019\/>\n<package:consistsOf>\n<media:MovieContent media:numberOfMovies=\u2018\u201872\u2019\u2019>\n<media:subscriptionType rdf:resource=\n\u2018\u2018http:\/\/conoise.org\/ontologies\/media#monthly\u2019\u2019\/>\n<media:mediaStyle rdf:resource=\n\u2018\u2018http:\/\/conoise.org\/ontologies\/media#scienceFiction\u2019\u2019\/>\n<\/media:MovieContent>\n<\/package:consistsOf>\n<package:consistsOf>\n<media:HtmlContent media:updateFrequency=\u2018\u201824\u2019\u2019>\n<media:mediaStyle rdf:resource=\n\u2018\u2018http:\/\/conoise.org\/ontologies\/media#news\u2019\u2019\/>\n<\/media:HtmlContent>\n<\/package:consistsOf>\n<package:consistsOf\nrdf:type=\u2018\u2018http:\/\/conoise.org\/ontologies\/media#TextMessaging\u2019\u2019\nmedia:numberOfMessages=\u2018\u2018100\u2019\u2019\/>\n<\/package:Requirement>\n<\/rdf:RDF>\nFig. 5. RDF call for bids sent to SPs\nThe window split into four columns (in the background) shows the require-\nments made by a user for a composite service, the registered SPs and their\nservices, the bids that the SPs make in response to a VOM\u2019s request and the\nlast column shows the SPs that make up the VO. When the VO is re-formed,\nthe new SP is incorporated into the fourth column display. The window in\nthe foreground simulates a service provision episode of a movie service on a\nPDA. Here, the monitored (simulated) quality of service providers is also rep-\nresented. Currently, the GUI shows the QoS being provided by each software\nagent in a VO as a dynamically expanding line graph. The QoS of a VO is a\nfunction of its members\u2019 QoS in two ways: (i) if the agent responsible for a\nparticular service is changed, then the QoS provided by the VO is a function\nof the new agent\u2019s performance, rather than the old agent\u2019s; (ii) the QoS of a\nVO may be a function not only of the performance of the agent responsible\nfor that resource, but also of other agents in the VO that provide prerequisite\nresources.\n5 The CONOISE-G experiences\nDuring the CONOISE-G project, there were various difficulties that were en-\ncountered. In this section, we present the challenges we faced and what we\n17\nFig. 6. The CONOISE-G user interface\nlearnt in addressing these challenges.\nEarly in the design process we were faced with an important decision, which\nwas to decide whether we wanted to create the CONOISE demo using GRID\nsoftware or FIPA standard agents. The GRID option would allow other to see\nthe direct application of CONOISE technology to the GRID domain; however\nit also meant using, as a foundation for the demo, software that at the time\nwas unstable and in a process of transition between releases. It was decide that\ninstead of trying to create a new agent platform, which would have absorbed\nmany man-hours from the CONOISE team, the demo would be created using\nopen source, FIPA standard implementations. It was hoped at the time that\nsignificant functionalities from the selected platforms would be used in the\nCONOISE-G demo. However, in practice, the main benefit has been to provide\na standard messaging infrastructure.\nAnother example of problems with the core CONOISE mechanisms were the\nissues related to the CSP mechanism that was used by the CONOISE service\nproviders. After the first rudimentary version of the demo, the CSP mecha-\nnisms were implemented in Prolog, but had to be re-designed because of the\nmulti-agent nature of the demo. To make the mechanism more efficient they\nhad to be rewritten in Java. Additional problems with the CSP mechanism,\ncaused by the need to run concurrent multiple CSPs in Prolog, were addressed\n18\nby redesigning the CSP using the same algorithm but using utility functions\nto model the reification, a feature that was only available in SICStus Prolog\n(see section 3.1).\n6 Conclusions and Future Work\nIn this paper, we have described an agent architecture for re-forming VOs in\nthe face of unreliable information, through the use of a range of techniques that\nsupport robust and resilient VO formation and operation for application to\nrealistic scenarios. Specifically, the paper described our implemented prototype\nof the system (based on the original CONOISE work (4)), and highlighted the\nwork being done on extending the system to incorporate more sophisticated\napplication scenarios. The key problems encountered in the design phase of\nthe system were those of standardising communication between agents and\ndefining ontologies in a sufficiently detailed manner so as to allow agents to\nuse them in their reasoning. These problems were overcome, wherever possible,\nby adopting standard technologies, such as RDF, FIPA and WS-Agreement.\nHowever, in other cases new technologies were needed, due to the change in\napplication domain and technology since the CONOISE project. In the short\nterm future it is important that the CONOISE-G mechanisms are made robust\nand resilient to failure (due to unforeseen circumstances and due to malicious\nintent). For this it will be necessary to develop strict policing mechanisms and\nevolve the trust mechanism to allow for representing the trust for a group and\nto enhance the ability to filter opinions given by liars.\nIt\u2019s not possible to provide a quantified evaluation of the business value of\nthe CONOISE technology, after all this is research. However, it is clear that\neach of the technology challenges that we outlined in section 2 have been\naddressed head on by the techniques we have described. This will make it\npossible to implement applications that can take advantage of the open service\nenvironments (like the GRID, or possibly, exposure of BT\u2019s capabilities in the\n21CN) to provide dynamic and optimal applications to particular users at\nparticular times, and by doing this this technology has the potential to be\nthe means by which the energy (money) which is required to make any rich\necosystem (service ecosystem) florish.\nAs we noted in the introduction of this paper, SOA are becoming the archi-\ntectures of choice for service provisions in the telecommunication industry.\nAt the same time, a wider variety value added services are becoming avail-\nable. To exploit this opportunity, the technology presented in this paper has\nbeen developed to support seamless, efficient, secure and convenient service\nprovision.\n19\n6.1 Acknowledgements\nThis paper is based on earlier work (20), which has been revised and extended.\nCONOISE-G is funded by the DTI and EPSRC through the Welsh e-Science\nCentre, in collaboration with the Research and Venture division of BT Group\nCTO. The research in this paper is also funded in part by the EPSRC Mohican\nProject (Reference no: GR\/R32697\/01).\nReferences\n[1] M. Luck, P. McBurney, C. Preist, A manifesto for agent technology: To-\nwards next generation computing, Journal of Autonomous Agents and\nMulti-Agent Systems 9 (3) (2004) 203\u2013252.\n[2] E. M. Maximilien, M. P. Singh, Toward autonomic web services trust and\nselection, in: In ICSOC04: Proceedings of the 2nd international conference\non Service oriented computing, 2004, pp. 212\u2013221.\n[3] C. J. Strang, Next generation systems architecture - the matrix, BT Tech-\nnology Journal 23 (1) (2005) 55\u201368.\n[4] T. J. Norman, A. Preece, S. Chalmers, N. R. Jennings, M. Luck, V. D.\nDang, T. D. Nguyen, V. Deora, J. Shao, A. Gray, N. Fiddian, Conoise:\nAgent-based formation of virtual organisations, in: Proceedings of the\ntwenty-third Annual International Conference of the British Computer\nSociety\u2019s Specialist Group on Artificial Intelligence (SGAI), Cambridge,\nUK, 2003, pp. 353\u2013366.\n[5] Y. Caseau, F. Laburthe, Cumulative scheduling with task intervals, in: In\nLogic Programing Proceedings of the 1996 Joint International Conference\nand Syposium on Logic Programming, 1996, pp. 363\u2013377.\n[6] P. Baptiste, C. Le Pape, W. Nuijten, Constraint-based scheduling: Apply-\ning constraint programming to scheduling problems, International Series\nin Operations Research and Management Science 39.\n[7] S. A. Petersen, M. Gruninger, An agent-based model to support the for-\nmation of virtual enterprises, in: International ICSC Symposium on Mo-\nbile Agents and Multi-agents in Virtual Organisations and E-Commerce,\n2000.\n[8] P. R. Wurman, M. P. Wellman, W. E. Walsh, A parametrization of the\nauction design space, Games and Economic Behavior 35 (2001) 304\u2013338.\nURL citeseer.nj.nec.com\/wurman00parametrization.html\n[9] V. D. Dang, N. R. Jennings, Optimal clearing algorithms for multi-unit\nsingle item and multi-unit combinatorial auctions with demand\/supply\nfunction bidding, in: Proceedings of the Fifth International Conference\non Electronic Commerce, 2003, pp. 25\u201330.\n20\n[10] D. Gambetta, Can we trust trust?, in: Trust: Making and Breaking Co-\noperative Relations, chapter 13, Basil Blackwell, 1988, pp. 213 \u2013 237.\n[11] J. Sabater, C. Sierra, Regret: A reputation model for gregarious societies,\nin: In Fourth Workshop on Deception Fraud and Trust in Agent Societies,\n2001, pp. 61\u201370.\n[12] J. Patel, W. T. L. Teacy, N. R. Jennings, M. Luck, Travos: Trust and\nreputation in the context of inaccurate information sources, Journal of\nAutonomous Agents and Multi-Agent Systems (2006) to appear.\n[13] W. T. L. Teacy, J. Patel, N. R. Jennings, M. Luck, Coping with inaccurate\nreputation sources: Experimental analysis of a probabilistic trust model,\nin: In AAMAS 05: Proceedings of 4th International Joint Conference on\nAutonomous Agents and Multiagent Systems, 2005, pp. 997\u20131004.\n[14] T. Bench-Capon, J. B. Freeman, H. Hohmann, H. Prakken, Computa-\ntional models, argumentation theories and legal practice, in: C. A. Reed,\nT. J. Norman (Eds.), Argumentation Machines: New Frontiers in Argu-\nment and Computation, Kluwer, 2003, pp. 85\u2013120.\n[15] K. Czajkowski, Dan, A., J. Rofrano, S. Tuecke, M. Xu, Ws-agreement:\nAgreementbased grid service management, in: In Global Grid Forum,\n2003.\n[16] G. Shercliff, P. Stockreisser, J. Shao, W. Gray, N. Fiddian, Supporting qos\nassessment and monitoring in virtual organisations, in: In Proceedings\nIEEE International Conference on Services Computing, 2005, pp. 249\u2013\n250.\n[17] V. Deora, J. Shao, G. Shercliff, P. J. Stockreisser, W. A. Gray, N. J.\nFiddian, Incorporating qos specifications in service discovery, in: In Pro-\nceedings of Second International Web Services Quality Workshop (WQW\n2004), 2004, pp. 252\u2013263.\n[18] M. Tian, A. Gramm, H. Ritter, J. Schiller, Efficient selection and moni-\ntoring of qos-aware web services with the ws-qos framework, in: In Web\nIntelligence, 2004, pp. 152\u2013158.\n[19] G. Grimnes, S. Chalmers, P. Edwards, A. Preece, Granitenights a multi-\nagent visit scheduler utilising semantic web technology, in: In 7th Inter-\nnationalWorkshop on Cooperative Information Agents, 2003, pp. 137 \u2013\n151.\n[20] J. Patel, W. T. L. Teacy, N. R. Jennings, M. Luck, S. Chalmers, N. Oren,\nT. J. Norman, A. Preece, J. Shao, A. Gray, N. Fiddian, S. Thompson,\nAgent-based virtual organisations for the grid, International Journal of\nMultiagent and Grid Systems 1 (4) (2005) to appear.\n21\n"}