{"doi":"10.1016\/j.websem.2011.05.001","coreId":"177337","oai":"oai:aura.abdn.ac.uk:2164\/2135","identifiers":["oai:aura.abdn.ac.uk:2164\/2135","10.1016\/j.websem.2011.05.001"],"title":"Enhancing Workflow with a Semantic Description of Scientific Intent","authors":["Pignotti, Edoardo","Edwards, Peter","Gotts, Nick","Polhill, Gary"],"enrichments":{"references":[{"id":6018416,"title":"[10] I.Taylor, M.Shields, I.Wang, A.Harrison,","authors":[],"date":"2005","doi":"10.1007\/s10723-005-9007-3","raw":"[10] I.Taylor, M.Shields, I.Wang, A.Harrison, Visualgridwork\ufb02owintriana, Journal of Grid Computing 3 (3) (2005) 153\u2013169. doi:10.1007\/s10723-005-9007-3.","cites":null},{"id":5910,"title":"[35] J. Kim, E. Deelman, Y.","authors":[],"date":"1002","doi":null,"raw":"[35] J. Kim, E. Deelman, Y. Gil, G. Mehta, V. Ratnakar, Provenance trails in the wings-pegasus system, Concurr. Comput. : Pract. Exper. 20 (2008) 587\u2013597. doi:10.1002\/cpe.v20:5. URLhttp:\/\/portal.acm.org\/citation.cfm?id=1350745.1350748 [36] T. Heinis, G. Alonso, Ecient lineage tracking for scienti\ufb01c work\ufb02ows, in: SIGMOD \u201908: Proceedings of the 2008 ACM SIGMOD international conference on Management of data, ACM, New York, NY, USA, 2008, pp. 1007\u20131018. doi:http:\/\/doi.acm.org\/10.1145\/1376616.1376716.","cites":null},{"id":6018464,"title":"[43] J. Golbeck, J. Hendler,","authors":[],"date":null,"doi":"10.1002\/cpe.1238","raw":"[43] J. Golbeck, J. Hendler, A semantic web approach to the provenance challenge, Concurrency and Computation: Practice and Experience 20 (5) (2008) 431\u2013439. doi:http:\/\/dx.doi.org\/10.1002\/cpe.v20:5.","cites":null},{"id":5917,"title":"[43] J. Golbeck, J. Hendler, A semantic","authors":[],"date":null,"doi":"10.1007\/978-3-540-45217-1_18","raw":null,"cites":null},{"id":6018465,"title":"[44] I.","authors":[],"date":null,"doi":null,"raw":"[44] I. Altintas, O. Barney, E. Jaeger-Frank, Provenance collection support in thekeplerscienti\ufb01cwork\ufb02owsystem, ProvenanceandAnnotationofData (2006) 118\u2013132doi:10.1007\/11890850 14.","cites":null},{"id":5918,"title":"[44] I. Altintas, O. Barney, E. Jaeger-Frank, Provenance collection","authors":[],"date":null,"doi":"10.1007\/11890850_14","raw":null,"cites":null},{"id":5922,"title":"[48] A. S. Rao, M. P. George\u21b5, Bdi-agents: from theory to practice, in: Proceedings of the First Intl. Conference on Multiagent","authors":[],"date":null,"doi":null,"raw":null,"cites":null},{"id":6018469,"title":"[48] A. S. Rao, M. P. George\u21b5, Bdi-agents: from theory to practice, in: Proceedings of the First Intl. Conference on Multiagent Systems,","authors":[],"date":null,"doi":null,"raw":"[48] A. S. Rao, M. P. George\u21b5, Bdi-agents: from theory to practice, in: Proceedings of the First Intl. Conference on Multiagent Systems, San Francisco,, 1995.","cites":null},{"id":5926,"title":"[54] F. Hielkema, P. Edwards, C. Mellish, J. Farrington, A flexible interface to community-driven metadata, in: Proceedings of the eSocial Science conference 2007, Ann Arbor, Michigan 2007, 2007.","authors":[],"date":null,"doi":null,"raw":null,"cites":null},{"id":5870,"title":"A framework for information systems architecture,","authors":[],"date":"1987","doi":"10.1147\/sj.263.0276","raw":"[16] J. A. Zachman, A framework for information systems architecture, IBM Systems Journal 26 (3) (1987) 276\u2013292.","cites":null},{"id":5899,"title":"A proposal for an owl rules language, in:","authors":[],"date":"2004","doi":"10.1145\/988672.988771","raw":"[26] I. Horrocks, P. F. Patel-Schneider, A proposal for an owl rules language, in: WWW \u201904: Proceedings of the 13th international conference on World Wide Web, ACM, New York, NY, USA, 2004, pp. 723\u2013731. doi:http:\/\/doi.acm.org\/10.1145\/988672.988771. [27] K. Verma, A. Kass, Model-assisted software development: Using a \u2019semantic bus\u2019 to automate steps in the software development process, (Accepted) Semantic Web \u2013 Interoperability, Usability, Applicability.","cites":null},{"id":5896,"title":"A re\ufb01ned goal model for semantic web services, in:","authors":[],"date":"2007","doi":"10.1109\/iciw.2007.7","raw":"[25] M. Stollberg, M. Hepp, A re\ufb01ned goal model for semantic web services, in: Proceedings of the Second International Conference ion Internet and Web Applications and Services. ICIW apps; 07, 2007, pp. 17\u201323.","cites":null},{"id":5867,"title":"A survey of data provenance in e-science,","authors":[],"date":"2005","doi":"10.1145\/1084805.1084812","raw":"[13] Y. L. Simmhan, B. Plale, D. Gannon, A survey of data provenance in e-science, SIGMOD Rec. 34 (3) (2005) 31\u201336. doi:http:\/\/doi.acm.org\/10.1145\/1084805.1084812.","cites":null},{"id":5924,"title":"A.","authors":[],"date":null,"doi":"10.1145\/1242572.1242680","raw":null,"cites":null},{"id":5868,"title":"An architecture for provenance systems,","authors":[],"date":"2006","doi":"10.1007\/11890850_21","raw":"[14] P. Groth, S. Jiang, S. Miles, S. Munroe, V. Tan, S. Tsasakou, L. Moreau, An architecture for provenance systems, Tech. rep., ECS, University of Southampton (2006).","cites":null},{"id":5856,"title":"An emerging view of scienti\ufb01c collaboration: Scientists\u2019 perspectives on collaboration and factors that impact collaboration,","authors":[],"date":"2003","doi":"10.1002\/asi.10291","raw":"[1] N. Hara, P. Solomon, S.-L. Kim, D. H. Sonnenwald, An emerging view of scienti\ufb01c collaboration: Scientists\u2019 perspectives on collaboration and factors that impact collaboration, Journal of the American Society for Information Science and Technology 54 (10) (2003) 952\u2013965. doi:10.1002\/asi.10291.","cites":null},{"id":5884,"title":"Analysis of incentive schemes for biodiversity using a coupled agent-based model of land use change and species metacommunity model, in: Modelling for Environment\u2019s Sake. International Congress on Environmental Modelling and Software,","authors":[],"date":"2010","doi":"10.1016\/j.envsoft.2012.11.011","raw":"[20] G. Polhill, G. Gimona, N. Gotts, Analysis of incentive schemes for biodiversity using a coupled agent-based model of land use change and species metacommunity model, in: Modelling for Environment\u2019s Sake. International Congress on Environmental Modelling and Software, Ottawa, Ontario, Canada, 5th-8th July 2010, 2010.","cites":null},{"id":6018468,"title":"and","authors":[],"date":null,"doi":"10.1177\/092137408900200207","raw":"[47] M. Bratman, Intentions, Plans, and Practical Reason, Harvard University Press, 1987.","cites":null},{"id":6018459,"title":"ascher, S. Cohen, S. B. Davidson,","authors":[],"date":null,"doi":null,"raw":"[39] S. Bowers, T. M. McPhillips, B. Lud\u00a8 ascher, S. Cohen, S. B. Davidson, A model for user-oriented data provenance in pipelined scienti\ufb01c work\ufb02ows, in: IPAW, Vol. 4145, 2006, pp. 133\u2013147.","cites":null},{"id":5913,"title":"B. Luda\u00a8scher, S. Cohen, S. B.","authors":[],"date":null,"doi":null,"raw":null,"cites":null},{"id":5863,"title":"Business process execution for web services, version 1.1,","authors":[],"date":"2003","doi":"10.1007\/springerreference_66106","raw":"[8] T. Andrews, Business process execution for web services, version 1.1, ftp:\/\/www6.software.ibm.com\/software\/developer\/library\/wsbpel.pdf (2003).","cites":null},{"id":5871,"title":"Bussche, The open provenance model core speci\ufb01cation (v1.1), Future Generation Computer Systems.","authors":[],"date":"2005","doi":"10.1016\/j.future.2010.07.005","raw":"[17] L. Moreau, B. Cli\u21b5ord, J. Freire, J. Futrelle, Y. Gil, P. Groth, N. Kwasnikowska, S. Miles, P. Missier, J. Myers, B. Plale, Y. Simmhan, E. Stephan, J. V. den Bussche, The open provenance model core speci\ufb01cation (v1.1), Future Generation Computer Systems. URL http:\/\/eprints.ecs.soton.ac.uk\/21449\/ [18] G. Polhill, E. Pignotti, N. Gotts, P. Edwards, A. Preece, An ontology for experimentation with a social simulation of land use change, in: Representing Social Reality, (ed. Klaus G. Troitzsch). European Simulation Association, 3rd Annual Conference, Koblenz, Germany 5-9 September 2005, 2005, pp. 324\u2013330.","cites":null},{"id":5890,"title":"Cyberenvironments: adaptive middleware for scienti\ufb01c cyberinfrastructure, in:","authors":[],"date":"2007","doi":"10.1145\/1376780.1376788","raw":"[22] J. D. Myers, R. E. McGrath, Cyberenvironments: adaptive middleware for scienti\ufb01c cyberinfrastructure, in: ARM \u201907: Proceedings of the 6th international workshop on Adaptive and re\ufb02ective middleware, ACM, New York, NY, USA, 2007, pp. 1\u20133. doi:http:\/\/doi.acm.org\/10.1145\/1376780.1376788. [23] K. V. Hindriks, F. S. de Boer, W. V. D. Hoek, J. jules Ch. Meyer, Agent programming with declarative goals, in: Intelligent Agents VII.","cites":null},{"id":5857,"title":"Cyberinfrastructure for e-science,","authors":[],"date":"2005","doi":"10.1126\/science.1110410","raw":"[2] T. Hey, A. E. Trefethen, Cyberinfrastructure for e-science, Science 308(5723) (2005) 817\u2013821.","cites":null},{"id":5901,"title":"Enterprise Service Bus,","authors":[],"date":"2004","doi":"10.1007\/springerreference_64100","raw":"[28] D. A. Chappell, Enterprise Service Bus, O\u2019Reilly Media, 2004.","cites":null},{"id":5907,"title":"Experiences of designing and implementing grid database services in the ogsa-dai project, in: Global Grid Forum Workshop on Designing and Building Grid Services,","authors":[],"date":"2003","doi":"10.1007\/11423287_1","raw":"[32] M. Antonioletti, N. C. Hong, A. Hume, M. Jackson, A. Krause, C. Palansuriya, T. Sugden, M. Westhead, Experiences of designing and implementing grid database services in the ogsa-dai project, in: Global Grid Forum Workshop on Designing and Building Grid Services, October 2003, 2003.","cites":null},{"id":6018474,"title":"F. Hielkema, P. Edwards, C. Mellish, J. Farrington, A \ufb02exible interface to community-driven metadata, in: Proceedings of the eSocial Science conference 2007, Ann Arbor, Michigan 2007, 2007.","authors":[],"date":null,"doi":null,"raw":"[54] F. Hielkema, P. Edwards, C. Mellish, J. Farrington, A \ufb02exible interface to community-driven metadata, in: Proceedings of the eSocial Science conference 2007, Ann Arbor, Michigan 2007, 2007.","cites":null},{"id":5914,"title":"Goble, R. Stevens, D. Turi, Mining","authors":[],"date":null,"doi":"10.1002\/cpe.1231","raw":null,"cites":null},{"id":5858,"title":"Grid services for distributed system integration,","authors":[],"date":"2002","doi":"10.1109\/MC.2002.1009167","raw":"[3] I. Foster, C. Kesselman, J. Nick, S. Tuecke, Grid services for distributed system integration, Morgan- Kaufmann, 2002.","cites":null},{"id":5916,"title":"Groth, S. Munroe, S. Jiang, T. Assandri, L.","authors":[],"date":null,"doi":"10.1002\/cpe.1236","raw":null,"cites":null},{"id":6018457,"title":"Heidemann, Provenance in sensornet republishing, in: Proceedings","authors":[],"date":null,"doi":"10.1007\/978-3-540-89965-5_28","raw":"[37] U. Park, J. Heidemann, Provenance in sensornet republishing, in: Proceedings of the 2nd International Provenance and Annotation Worksho, Springer-Verlag, Berlin, Heidelberg, 2008, pp. 280\u2013292.","cites":null},{"id":5872,"title":"Imitative versus nonimitative strategies in a land use simulation,","authors":[],"date":"2001","doi":"10.1080\/019697201300001885","raw":"24[19] J. G. Polhill, N. M. Gotts, A. N. R. Law, Imitative versus nonimitative strategies in a land use simulation, Cybernetics and Systems 32 ((1-2)) (2001) 285\u2013307.","cites":null},{"id":5923,"title":"in support of large-scale science, ACM,","authors":[],"date":null,"doi":"10.1145\/1273360.1273361","raw":null,"cites":null},{"id":5911,"title":"J. Heidemann, Provenance in sensornet republishing, in:","authors":[],"date":null,"doi":"10.1007\/978-3-540-89965-5_28","raw":null,"cites":null},{"id":6018473,"title":"M.","authors":[],"date":null,"doi":"10.1007\/s11761-007-0009-9","raw":"[53] T. Vitvar, A. Mocan, M. Kerrigan, M. Zaremba, M. Zaremba, M. Moran, E. Cimpian, T. Haselwanter, D. Fensel, Semantically-enabled service oriented architecture : concepts, technology and application, Service Oriented Computing and Applications 1 (2) (2007) 129\u2013154. doi:10.1007\/s11761-007-0009-9.","cites":null},{"id":5909,"title":"Managing large-scale work\ufb02ow execution from resource provisioning to provenance tracking: The cybershake example, in:","authors":[],"date":"2006","doi":"10.1109\/e-science.2006.261098","raw":"[34] E. Deelman, S. Callaghan, E. Field, H. Francoeur, R. Graves, N. Gupta, V. Gupta, T. H. Jordan, C. Kesselman, P. Maechling, J. Mehringer, G. Mehta, D. Okaya, K. Vahi, L. Zhao, Managing large-scale work\ufb02ow execution from resource provisioning to provenance tracking: The cybershake example, in: E-SCIENCE \u201906: Proceedings of the Second IEEE International Conference on e-Science and Grid Computing, IEEE Computer Society, Washington, DC, USA, 2006, p. 14. doi:http:\/\/dx.doi.org\/10.1109\/E-SCIENCE.2006.99.","cites":null},{"id":5915,"title":"Mehta, V. Ratnakar, Provenance trails in the wings-pegasus system,","authors":[],"date":null,"doi":"10.1002\/cpe.1228","raw":null,"cites":null},{"id":5925,"title":"Mocan,","authors":[],"date":null,"doi":"10.1007\/s11761-007-0009-9","raw":null,"cites":null},{"id":6018466,"title":"Modelling","authors":[],"date":null,"doi":"10.1007\/springerreference_64204","raw":"[45] S. Miles, S. Munroe, M. Luck, L. Moreau, Modelling the provenance of data in autonomous systems, in: AAMAS \u201907: Proceedings of the 6th international joint conference on Autonomous agents and multiagent systems, ACM, New York, NY, USA, 2007, pp. 1\u20138. doi:http:\/\/doi.acm.org\/10.1145\/1329125.1329185.","cites":null},{"id":6018412,"title":"Moml \u2014 a modeling markup language in xml \u2014 version 0.4,","authors":[],"date":"2000","doi":null,"raw":"[7] A. Lee, S. Neuendor\u21b5er, Moml \u2014 a modeling markup language in xml \u2014 version 0.4, Technical report, University of California at Berkeley (2000).","cites":null},{"id":5862,"title":"Moml\u2014 a modeling markup language in xml\u2014 version 0.4,","authors":[],"date":"2000","doi":null,"raw":null,"cites":null},{"id":5919,"title":"Moreau,","authors":[],"date":null,"doi":"10.1145\/1329125.1329185","raw":null,"cites":null},{"id":5893,"title":"On the semantics of functional descriptions of web services, in:","authors":[],"date":"2006","doi":"10.1007\/11762256_44","raw":"[24] U. Keller, H. Lausen, M. Stollberg, On the semantics of functional descriptions of web services, in: Proceedings of the 3rd European Semantic Web Conference (ESWC 2006), Montenegro, 2006, pp. 605\u2013619.","cites":null},{"id":5921,"title":"Plans,","authors":[],"date":null,"doi":"10.1177\/092137408900200207","raw":null,"cites":null},{"id":5869,"title":"Position statement: Musings on provenance, work\ufb02ow and (semantic web) annotation for bioinformatics,","authors":[],"date":"2002","doi":null,"raw":"[15] C. Goble, Position statement: Musings on provenance, work\ufb02ow and (semantic web) annotation for bioinformatics, Workshop on Data Derivation and Provenance, Chicago (2002).","cites":null},{"id":6018461,"title":"R. Stevens, D. Turi, Mining taverna\u2019s","authors":[],"date":null,"doi":"10.1002\/cpe.1231","raw":"[40] J. Zhao, C. Goble, R. Stevens, D. Turi, Mining taverna\u2019s semantic web of provenance, Concurrency and Computation: Practice and Experience 20 (5) (2008) 463\u2013472. doi:http:\/\/dx.doi.org\/10.1002\/cpe.v20:5.","cites":null},{"id":5887,"title":"Reasoning about provenance with owl and swrl rules,","authors":[],"date":"2008","doi":null,"raw":"[21] R. E. Mcgrath, J. Futrelle, Reasoning about provenance with owl and swrl rules, Presented at AAAI 2008 Spring Symposium, \u201dAI Meets Business Rules and Process Management\u201d. Stanford, CA. March 24-26, 2008. (2008).","cites":null},{"id":6018463,"title":"S. Munroe, S. Jiang, T. Assandri, L. Moreau,","authors":[],"date":null,"doi":"10.1002\/cpe.1236","raw":"[42] S. Miles, P. Groth, S. Munroe, S. Jiang, T. Assandri, L. Moreau, Extracting causal graphs from an open provenance data model, Concurr. Comput. : Pract. Exper. 20 (5) (2008) 577\u2013586. doi:http:\/\/dx.doi.org\/10.1002\/cpe.v20:5.","cites":null},{"id":5866,"title":"Scienti\ufb01c work\ufb02ow management and the kepler system, Concurrency and Computation: Practice and","authors":[],"date":"2005","doi":"10.1002\/cpe.994","raw":"[11] B. Lud\u00a8 ascher, I. Altintas, C. Berkley, D. Higgins, E. Jeager, M. Jones, E. Lee, J. Tao, Scienti\ufb01c work\ufb02ow management and the kepler system, Concurrency and Computation: Practice and Experience 18 (2005) 1039 \u2013 1065. URL http:\/\/doi.wiley.com\/10.1002\/cpe.994 [12] R. Bose, J. Frew, Lineage retrieval for scienti\ufb01c data processing: a survey, ACM Comput. Surv. 37 (1) (2005) 1\u201328. doi:http:\/\/doi.acm.org\/10.1145\/1057977.1057978.","cites":null},{"id":5920,"title":"Searle, The intentionality of intention and","authors":[],"date":null,"doi":"10.1080\/00201747908601876","raw":null,"cites":null},{"id":6018471,"title":"Sheth,","authors":[],"date":null,"doi":"10.1145\/1242572.1242680","raw":"[52] K. Anyanwu, A. Maduko, A. Sheth, Sparq2l: Towards support for subgraph extraction queries in rdf databases, in: WWW \u201907: Proceedings of the 16th international conference on World Wide Web, ACM, New York, NY, USA, 2007, pp. 797\u2013806. doi:http:\/\/doi.acm.org\/10.1145\/1242572.1242680.","cites":null},{"id":5906,"title":"Soap speci\ufb01cations,","authors":[],"date":"2003","doi":null,"raw":"[31] M. Gudgin, M. Hadley, N. Mendelsohn, J. J. Moreau, H. F. Nielsen, Soap speci\ufb01cations, Tech. rep., W3C (2003).","cites":null},{"id":6018470,"title":"support of large-scale science, ACM, New","authors":[],"date":null,"doi":"10.1145\/1273360.1273361","raw":"[49] C. A. Goble, D. C. De Roure, myexperiment: Social networking for work\ufb02ow-using e-scientists, in: WORKS \u201907: Proceedings of the 2nd workshop on Work\ufb02ows in support of large-scale science, ACM, New York, NY, USA, 2007, pp. 1\u20132. doi:10.1145\/1273360.1273361. URL http:\/\/dx.doi.org\/10.1145\/1273360.1273361 [50] A. Goderis, D. D. Roure, C. Goble, J. Bhagat, D. Cruickshank, P. Fisher, D. Michaelides, F. Tanoh, Discovering scienti\ufb01c work\ufb02ows: The myexperiment benchmarks, Tech. rep., School of Electronics and Computer Science, University of Southampton (April 2008). URL http:\/\/eprints.ecs.soton.ac.uk\/15662\/ [51] W. Michener, J. Beach, S. Bowers, L. Downey, M. Jones, B. Lud\u00a8 ascher, D. Pennington, A. Rajasekar, S. Romanello, M. Schildhauer, D. Vieglais, J. Zhang, Data integration and work\ufb02ow solutions for ecology, Data Integration in the Life Sciences (2005) 321\u2013324.","cites":null},{"id":5861,"title":"Supporting large-scale science with work\ufb02ows, in:","authors":[],"date":"2007","doi":"10.1109\/WORKS.2008.4723955","raw":"[6] D. Pennington, Supporting large-scale science with work\ufb02ows, in: Proceedings of the 2nd workshop on Work\ufb02ows in support of large-scale science, High Performance Distributed Computing, 2007, pp. 45\u201352.","cites":null},{"id":5864,"title":"Taverna: a tool for the composition and enactment of bioinformatics work\ufb02ows,","authors":[],"date":"2004","doi":"10.1093\/bioinformatics\/bth361","raw":"[9] T. Oinn, M. Addis, J. Ferris, D. Marvin, M. Senger, M. Greenwood, T. Carver, K. Glover, M. Pocock, A. Wipat, P. Li, Taverna: a tool for the composition and enactment of bioinformatics work\ufb02ows, Bioinformatics Journal 20(17) (2004) 3045\u20133054.","cites":null},{"id":6018467,"title":"The intentionality of intention and action,","authors":[],"date":null,"doi":"10.1207\/s15516709cog0401_3","raw":"[46] J. R. Searle, The intentionality of intention and action, Cognitive Science 1 (4) (1980) 27\u201370.","cites":null},{"id":5859,"title":"The semantic grid: a future escience infrastructure, Grid Computing: Making the Global Infrastructure a Reality","authors":[],"date":"2003","doi":"10.1002\/0470867167.ch17","raw":"[4] D. De Roure, N. Jennings, N. Shadbolt, The semantic grid: a future escience infrastructure, Grid Computing: Making the Global Infrastructure a Reality (2003) 437\u2013470.","cites":null},{"id":5860,"title":"The semantic web,","authors":[],"date":"2001","doi":"10.1038\/scientificamerican0501-34","raw":"[5] T. Berners-Lee, J. Hendler, O. Lassila, The semantic web, Scienti\ufb01c American (284) (2001) 28\u201337.","cites":null},{"id":5908,"title":"The Triana Work\ufb02ow Environment: Architecture and Applications, in:","authors":[],"date":"2007","doi":"10.1177\/1094342007086226","raw":"[33] I. Taylor, M. Shields, I. Wang, A. Harrison, The Triana Work\ufb02ow Environment: Architecture and Applications, in: I. Taylor, E. Deelman, D. Gannon, M. Shields (Eds.), Work\ufb02ows for e-Science, Springer, New York, Secaucus, NJ, USA, 2007, pp. 320\u2013339.","cites":null},{"id":6018458,"title":"Tracking provenance in a virtual data grid, Concurrency and Computation: Practice","authors":[],"date":null,"doi":"10.1002\/cpe.1256","raw":"[38] B. Cli\u21b5ord, I. Foster, J.-S. Voeckler, M. Wilde, Y. Zhao, Tracking provenance in a virtual data grid, Concurrency and Computation: Practice and Experience 20 (5) (2008) 565\u2013575. doi:http:\/\/dx.doi.org\/10.1002\/cpe.v20:5.","cites":null},{"id":6018462,"title":"V. Ratnakar, Provenance trails in the wings-pegasus system, Concurrency","authors":[],"date":"2008","doi":"10.1002\/cpe.1228","raw":"[41] J. Kim, E. Deelman, Y. Gil, G. Mehta, V. Ratnakar, Provenance trails in the wings-pegasus system, Concurrency and Computation: Practice and Experience 20 (5) (2008) 587\u2013597. doi:http:\/\/dx.doi.org\/10.1002\/cpe.v20:5.","cites":null},{"id":5865,"title":"Visual grid workflow in triana,","authors":[],"date":"2005","doi":"10.1007\/s10723-005-9007-3","raw":null,"cites":null},{"id":5904,"title":"Web services description language (wsdl)","authors":[],"date":"2001","doi":null,"raw":"[30] E. Christensen, F. Curbera, G. Meredith, S. Weerawarana, Web services description language (wsdl) 1.1, Tech. rep., W3C (2001).","cites":null},{"id":5902,"title":"Web services resource framework (wsrf),","authors":[],"date":"2006","doi":null,"raw":"[29] T. Banks, Web services resource framework (wsrf), Tech. rep., Primer v.1.2. OASIS, Committee Draft 02, 23 May 2006 (2006).","cites":null},{"id":5912,"title":"Y. Zhao, Tracking provenance in a virtual data grid, Concurrency and","authors":[],"date":null,"doi":"10.1002\/cpe.1256","raw":null,"cites":null}],"documentType":{"type":1}},"contributors":["University of Aberdeen, PolicyGrid II","University of Aberdeen, Natural & Computing Sciences, Computing Science"],"datePublished":"2011-07-01","abstract":"Peer reviewedPreprin","downloadUrl":"","fullTextIdentifier":null,"pdfHashValue":null,"publisher":null,"rawRecordXml":"<record><header><identifier>\n        \n            \n                oai:aura.abdn.ac.uk:2164\/2135<\/identifier><datestamp>\n                2018-01-02T00:05:10Z<\/datestamp><setSpec>\n                com_2164_320<\/setSpec><setSpec>\n                com_2164_319<\/setSpec><setSpec>\n                com_2164_318<\/setSpec><setSpec>\n                com_2164_673<\/setSpec><setSpec>\n                com_2164_370<\/setSpec><setSpec>\n                com_2164_331<\/setSpec><setSpec>\n                com_2164_705<\/setSpec><setSpec>\n                col_2164_321<\/setSpec><setSpec>\n                col_2164_674<\/setSpec><setSpec>\n                col_2164_706<\/setSpec>\n            <\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:doc=\"http:\/\/www.lyncode.com\/xoai\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n            \nEnhancing Workflow with a Semantic Description of Scientific Intent<\/dc:title><dc:creator>\nPignotti, Edoardo<\/dc:creator><dc:creator>\nEdwards, Peter<\/dc:creator><dc:creator>\nGotts, Nick<\/dc:creator><dc:creator>\nPolhill, Gary<\/dc:creator><dc:contributor>\nUniversity of Aberdeen, PolicyGrid II<\/dc:contributor><dc:contributor>\nUniversity of Aberdeen, Natural & Computing Sciences, Computing Science<\/dc:contributor><dc:subject>\nworkflow<\/dc:subject><dc:subject>\nsemantic grid<\/dc:subject><dc:subject>\nprovenance<\/dc:subject><dc:subject>\nscientist\u2019s intent<\/dc:subject><dc:subject>\nrules<\/dc:subject><dc:subject>\nQA75 Electronic computers. Computer science<\/dc:subject><dc:subject>\nQA75<\/dc:subject><dc:description>\nPeer reviewed<\/dc:description><dc:description>\nPreprint<\/dc:description><dc:date>\n2011-09-28T13:56:31Z<\/dc:date><dc:date>\n2011-09-28T13:56:31Z<\/dc:date><dc:date>\n2011-07-01<\/dc:date><dc:type>\nJournal article<\/dc:type><dc:identifier>\nPignotti , E , Edwards , P , Gotts , N & Polhill , G 2011 , ' Enhancing Workflow with a Semantic Description of Scientific Intent ' Web semantics: science, services and agents on the World Wide Web , vol 9 , no. 2 , pp. 222-244 . DOI: 10.1016\/j.websem.2011.05.001<\/dc:identifier><dc:identifier>\n1570-8268<\/dc:identifier><dc:identifier>\nPURE: 5344962<\/dc:identifier><dc:identifier>\nPURE UUID: 112c5176-5b8e-4aae-ad3d-e68844088484<\/dc:identifier><dc:identifier>\nBibtex: urn:08ab29fb11293384c80225db690f5826<\/dc:identifier><dc:identifier>\nScopus: 80051544965<\/dc:identifier><dc:identifier>\nhttp:\/\/hdl.handle.net\/2164\/2135<\/dc:identifier><dc:identifier>\nhttp:\/\/dx.doi.org\/10.1016\/j.websem.2011.05.001<\/dc:identifier><dc:language>\neng<\/dc:language><dc:relation>\nWeb semantics: science, services and agents on the World Wide Web<\/dc:relation><dc:rights>\nNOTICE: this is the author\u2019s version of a work that was accepted for publication in Web Semantics Science Services and Agents on the World Wide Web. Changes resulting from the publishing process, such as peer review, editing, corrections, structural formatting, and other quality control mechanisms may not be reflected in this document. Changes may have been made to this work since it was submitted for publication. A definitive version was subsequently published in Pignotti, E, Edwards, P, Gotts, N & Polhill, G 2011, 'Enhancing Workflow with a Semantic Description of Scientific Intent', Web Semantics Science Services and Agents on the World Wide Web, vol 9, no. 2, pp. 222-244. 10.1016\/j.websem.2011.05.001<\/dc:rights><dc:format>\n23<\/dc:format>\n<\/oai_dc:dc>\n<\/metadata>\n        <\/record>","journals":[{"title":null,"identifiers":["issn:1570-8268","1570-8268"]}],"language":{"code":"en","id":9,"name":"English"},"relations":["Web semantics: science, services and agents on the World Wide Web"],"year":2011,"topics":["workflow","semantic grid","provenance","scientist\u2019s intent","rules","QA75 Electronic computers. Computer science","QA75"],"subject":["Journal article"],"fullText":"Enhancing Workflow with a Semantic Description of Scientific Intent\nEdoardo Pignottia, Peter Edwardsa, Nick Gottsb, Gary Polhillb\naComputing Science, University of Aberdeen, Aberdeen AB24 5UE, UK\nbThe Macaulay Institute, Ceaigirbuckler, Aberdeen AB15 8QH, UK\nAbstract\nScientists are becoming increasingly dependent upon resources available through the Internet including, for example, datasets and\ncomputational modelling services, which are changing the way they conduct their research activities. This paper investigates the use\nof workflow tools enhanced with semantics to facilitate the design, execution, analysis and interpretation of workflow experiments\nand exploratory studies. Current workflow technologies do not incorporate any representation of experimental constraints and\ngoals, which we refer to in this paper as scientist\u2019s intent. This paper proposes an abstract model of intent based on the Open\nProvenance Model (OPM) specification. To realise this model a framework based upon a number of Semantic Web technologies\nhas been developed, including the OWL ontology language and the Semantic Web Rule Language (SWRL). Through the use of\nsocial simulation case studies the paper illustrates the benefits of using this framework in terms of workflow monitoring, workflow\nprovenance and annotation of experimental results.\nKeywords: workflow, semantic grid, provenance, scientist\u2019s intent, rules\n1. Introduction\nCollaborations between large groups of scientists are increas-\ningly seen as essential in order to address the complex chal-\nlenges facing society [1]. Researchers rely extensively on com-\nputer and communication technologies to bring together di\u21b5er-\nent expertise, using the Web as a convenient vehicle of commu-\nnication. This paper investigates the issues related to the docu-\nmentation of scientific processes and their products in order to\nsupport reproducibility, scientific discovery and result interpre-\ntation.\nA number of so-called e-Science1 activities have focused on\nfacilitating and promoting collaboration between scientists us-\ning advanced distributed information management systems [2].\nThe original vision of e-Science was to facilitate large scale\nscience using Grid technologies [3] as a fundamental com-\nputing infrastructure to manage distributed computational re-\nsources and data. However, a major gap exists between current\ntechnologies and the original vision of e-Science. Where Grid\ntechnologies overcome some of the limitations of existing Web\ntools in terms of managing computational tasks, there is still\na need for technologies to support truly flexible collaboration.\nFor these reasons the concept of a Semantic Grid [4] emerged,\nwhich integrates Semantic Web [5] and Grid technologies.\nA number of scientific Grid infrastructures have emerged in\nrecent years, such as the UK National Grid Service2 (NGS),\nEmail addresses: e.pignotti@abdn.ac.uk (Edoardo Pignotti),\np.edwards@abdn.ac.uk (Peter Edwards), n.gotts@macaulay.ac.uk\n(Nick Gotts), g.polhill@macaulay.ac.uk (Gary Polhill)\n1http:\/\/www.rcuk.ac.uk\/escience\n2http:\/\/www.ngs.ac.uk\/\nDistributed European Infrastructure for Supercomputing Ap-\nplications3 (DEISA), Enabling Grids for e-Science4 (EGEE),\nand Open Science Grid5 (OSG). These are changing the way\nin which research is conducted with increasing emphasis on \u2018in\nsilico\u2019 experiments as a way to test hypotheses. Scientific work-\nflow technologies [6] have emerged to allow researchers to cre-\nate and execute experiments given a pool of available services\nin such environments [7, 8, 9, 10, 11]. These languages and\ntools are designed to capture the flow of information between\nservices (e.g. service addresses and relations between inputs\nand outputs). However, in order to fully characterise scientific\nanalysis it is necessary to go beyond such low-level descriptions\nby capturing the experimental conditions.\nOpenness and accountability is an important aspect of sci-\nence and proper documentation of scientific activities is there-\nfore essential in order to understand and reproduce experimen-\ntal processes. As scientific workflows become ever more com-\nplex, so does the problem of workflow documentation and man-\nagement of provenance information. Provenance is increas-\ningly seen as an essential aspect of scientific workflow in order\nto support result interpretation, problem diagnosis and scientific\ndiscovery [12, 13]. Provenance (also referred to as lineage or\nheritage) aims to provide additional documentation about the\nprocesses that led to the creation of a resource [14]. [15] ex-\npands on the Zachman Framework [16] by presenting the \u20187\nW\u2019s of Provenance\u2019: Who, What, Where, Why, When, Which,\n& (W)How. While some progress has been made in terms of\ndocumenting processes (Who, What, Where, When, Which, &\n3http:\/\/www.deisa.eu\/\n4http:\/\/www.eu-egee.org\/\n5http:\/\/www.opensciencegrid.org\/\nPreprint submitted to Journal of Web Semantics April 8, 2011\n(W)How), little e\u21b5ort has been devoted to capturing the Why\naspect of research methodology.\nThe International Provenance and Annotation Workshop se-\nries (IPAW06, IPAW08)6 has investigated issues related to data\nprovenance and process documentation which has lead to the\ndevelopment of an open model for describing provenance. The\nOpen Provenance Model (OPM) [17] was developed to address\nissues in managing provenance information in workflow-driven\nscience. OPM is designed to make assertions about causa-\ntion between processes and data and between processes and\nagents. However, the OPM model does not reflect that scien-\ntists (agents) can make decisions about the experiment that they\nare conducting based on their intent and that such decisions can\ninfluence how the processes are executed.\nOur work aims to make the constraints and goals of a sci-\nentific workflow, which we describe as the scientist\u2019s intent,\ntransparent. Existing workflow languages are unable to convey\nsuch intent information because they are designed to capture\nlow-level service composition rather than higher-level descrip-\ntions of the experimental process. We argue that a represen-\ntation of scientist\u2019s intent can provide the following benefits:\n(1) reduced human e\u21b5ort in inspecting workflow documenta-\ntion (e.g. checking constraints and ensuring goals are met); (2)\nbetter management of workflow execution.\nThe remainder of this paper is organised as follows:\nIn Section 2, we present a social simulation case study that\nillustrates how agent-based simulation can be supported by the\nuse of workflow technologies. The case-study is used through-\nout this paper to highlight some of the limitations of current\nworkflow technologies and to illustrate the issues that need to be\naddressed in order to make workflow experiments more trans-\nparent. In Section 3, we describe the formal representation of\nthe Open Provenance Model and discuss the challenges that we\nface in order to represent scientist\u2019s intent using the existing\nOPM representation. Section 4 introduces an extended version\nof the Open Provenance Model capturing aspects of scientist\u2019s\nintent. Section 5 describes an OWL7 binding of our scientist\u2019s\nintent model which combines an existing OWL realisation of\nOPMwith SWRL-based8 rules and a scientist\u2019s intent ontology.\nSection 6 discusses a semantic workflow architecture based on\nan extension of Kepler and a number of Semantic Grid andWeb\nservices. In Section 7, we present the result of an evaluation\nof the new intent formalism, realisation and implementation.\nSection 8 covers related work, in particular existing workflow\nlanguages and systems, provenance frameworks and scientific\nworkflow applications and identifies the limitations of current\nworkflow documentation solutions. Finally, in Section 9 we\npresent our conclusions and possible future directions.\n2. Simulation Case Study\nOne of the main challenges in simulation is the need to im-\nprove the scientific rigour of agent-based modelling. An agent-\n6http:\/\/www.ipaw.info\/\n7http:\/\/www.w3.org\/2004\/OWL\n8http:\/\/www.w3.org\/Submission\/SWRL\/\nbased model (ABM) is a class of computational models for sim-\nulating the actions and interactions of autonomous agents. An\nimportant aspect of science is that work should be repeatable\nand verifiable. In this context, workflow technologies can facil-\nitate the design, execution, analysis and interpretation of sim-\nulation experiments and exploratory studies. However, current\nworkflow technologies can only capture the method and not the\nscientist\u2019s intent which we have argued [18] is essential to mak-\ning the experiment truly transparent.\n2.1. Biodiversity Scenario\nWe now present an analysis of the benefits and limitations\nof workflow technologies in describing scientist\u2019s intent by ex-\nploring a simulation case study where workflow technologies\nwere used to automate a simulation experiment. The focus of\nthe case study is on investigating the e\u21b5ects of various agri-\nenvironment incentive schemes on biodiversity. The specific re-\nsearch question is whether there is any di\u21b5erence between the\ne\u21b5ectiveness of activity- or outcome-based incentive schemes\nin maintaining what here we call, for brevity, biodiversity, i.e.\nthe number of species and their persistence time before extinc-\ntion. To study these issues the FEARLUS model [19] has been\ncoupled with an ecological metacommunity model SPOMM\n(Stochastic Patch Occupancy Metacommunity Model [20]).\n2.2. Methodology\nWe are interested in the range of dynamics that the\nFEARLUS-SPOMM model can generate using each incentive\nscheme, which arises more from the relationships among the\nparameters than their absolute values, and the consequences for\nbiodiversity. The approach being taken is as follows:\n\u2022 Perform an initial interactive exploration of parameter\nspace to find the range of dynamics the model is capable\nof producing, and identify a set of parameters to explore\nwith more rigorous experiments;\n\u2022 Identify outcomes that are unrealistic given empirical evi-\ndence (e.g. an annual bankruptcy rate of more than 5%)\nand reject permutations of parameters generating these\noutcomes;\n\u2022 Identify outcomes of interest (e.g. runs where the habitat\nfor a certain species drops below a specified level in any\none year);\n\u2022 Use batch runs of the model to explore the parameter per-\nmutations identified;\n\u2022 Build a regression tree of the results and inspect whether\nor not it contains the incentive scheme as an explanatory\nvariable.\nThe workflow shown in Figure 1 is designed to perform\nthe parameter exploration phase of the biodiversity case study.\nA range of possible combinations of parameters are explored\n(e.g. combinations of Activity-Species Reward Ratio, Aspira-\ntion Threshold, etc.). The generation of parameters (Generate\n2\nFigure 1: Example Workflow for the FEARLUS-SPOMM Case Study (Param-\neter Exploration).\nParameters activity) is based on the combination of parame-\nters set generated by the permutation activity and real data (\nSpecies Dispersal Rate and Species Distribution). As many\nruns as possible are carried out by the Simulation Grid Task\n(e.g. 50). Such workflow activity9 distributes simulation runs\nacross computing hosts available on the Grid. The results of\nall runs are than collected and used to generate a set of classi-\nfication\/regression trees. Di\u21b5erent combinations of parameters\nare used for the classification\/regression algorithm (e.g. Cross-\nvalidation-set size and Min. Number of cases per Node ).\n2.3. Issues and Requirements\nDuring the investigation of this case study we encountered\nseveral issues related to workflow documentation that need to\nbe addressed in order to satisfy the requirements posed by the\nmethodology used in this simulation experiment. The general\nissue applies to scientific workflows and is related to the work-\nflow not being able to capture the goals and constraints as-\nsociated with an experiment. Such goals and constraints are\nvery important in order to understand the intent of the scientists\nwhile running a particular experiment. We recognise that un-\nderstanding the scientist\u2019s intent is essential in order to make a\nsimulation experiment truly transparent.\nFor example, in the workflow in Figure 1 it is not clear from\nthe workflow itself what the goal of this experiment is.\nGoal 1. The goal of this experiment is to obtain at least one\ncross-validated tree that explains 5% of the deviation of the re-\nsult data.\nThe subgoal of the experiment is:\n9A workflow activity is an implementation of the behaviour of a particular\noperational step of a workflow.\nGoal 2. To obtain a similar number of valid runs between\noutcome-based and activity-based incentive schemes.\nThe researcher might also have constraints associated with the\nexperiment.\nConstraint 1. If a simulation run has a bankruptcy rate of more\nthan 5%, drop the entire parameter set.\nConstraint 2. If any habitat type, at any time step, drops below\na specified threshold, alert the user.\nConstraint 3. If a tree does not identify an Incentive Scheme\nas an influential variable, alert the user.\nConstraint 4. If in a simulation run, one land manager owns\nmore than half of the land, the entire simulation can be dis-\ncarded.\nConstraint 5. If the platform is not compatible with IEEE\n75410 the test might be invalid as this could change the results\nof the comparison test.\nWe have illustrated through the use of a biodiversity case\nstudy how agent-based simulation can be supported by the use\nof workflow technologies. Although the workflow metaphor\nis important in terms of facilitating the transparency and re-\npeatability of simulation experiments, we have explained our\nconcern that the goals and constraints associated with such ex-\nperiments cannot be su\u0000ciently described in a workflow.\nThe workflow, goals and constraints are used as examples to\nillustrate the design, realisation and implementation of a sci-\nentist\u2019s intent model. Moreover, these examples are used as a\nbasis for the evaluation of the scientist\u2019s intent model and its\nimplementation.\nIn order to summarise the requirements emerged from this\ncase-study we now present a set of intent queries 11:\n\u2022 (CS1) What was the intent of the scientists while running\nthis experiment?\n\u2022 (CS2) Have the goals of this experiment been achieved?\n\u2022 (CS3) Did the experiment violate any of the constraints\ndefined by the scientists?\n\u2022 (CS4) What decisions were made while executing this ex-\nperiment?\n3. Capturing the Provenance of an Experiment\nUsing workflow technologies to perform scientific experi-\nments has a significant advantage in terms of annotating, dis-\ncovering and reasoning about processes and data [21, 22]. In-\nformation on the computational outcome of a scientific work-\nflow, the data and the processes involved are essential in order\n10http:\/\/grouper.ieee.org\/groups\/754\/\n11We acknowledge that the queries presented here are extracted from the spe-\ncific case-studies investigated in our work and that there may be more queries\nrelated to intent.\n3\nto understand an experiment, and it is therefore important to\nprovide an accurate account of the provenance of a workflow\nexperiment.\nIn this section we introduce the formal representation of the\nOpen Provenance Model and discuss the challenges that we\nface in order to represent scientific intent information using the\nexisting OPM specification.\n3.1. An Open Provenance Model\nThe Open Provenance Model [17] is an abstract model which\nprovides a specification to express data provenance, process\ndocumentation and data derivation. OPM is designed to enable\nsystems to exchange information about processes and data ar-\ntifacts without forcing semantics and schema for the data. The\nOPM defines a model based on three kind of nodes:\n\u2022 Artifact: Immutable piece of state, which may have a\nphysical embodiment in a physical object, or a digital rep-\nresentation in a computer system;\n\u2022 Process: Action or series of actions performed on or\ncaused by artifacts, and resulting in new artifacts;\n\u2022 Agent: Contextual entity acting as a catalyst of a process,\nenabling, facilitating, controlling, or a\u21b5ecting its execu-\ntion.\nAnd a simple semantics of observation and causation based\non five causal relationships:\n\u2022 a process used an Artifact;\n\u2022 an Artifact was generated by a process;\n\u2022 a process was triggered by a process;\n\u2022 an Artifact was derived from an Artifact;\n\u2022 a process was controlled by a agent\nThe combination of the nodes and the relationships allow the\ncreation of causality graphs. OPM allows for di\u21b5erent accounts\nof \u201cpast execution\u201d to be represented in the same graph there-\nfore o\u21b5ering di\u21b5erent levels of explanation of such executions.\nFigure 2 shows an example of a provenance account using OPM\nrepresenting a baking process controlled by John (the agent)\nwhich used flour, butter, sugar and eggs (input artifacts) to bake\na cake (output artifact).\nThe OPM also defines completion rules that can be applied to\nthe provenance graph. For example the causal relation wasTrig-\ngeredBy can be inferred from the existence of a used and was-\nGeneratedBy relation.\nThe Open Provenance Model allows for indirect relation-\nships to be inferred by providing multi-step versions of the\nexisting relationships, namely Used*, WasTriggeredBy*, Was-\nDerivedFrom* and WasTriggeredBy*. Such relationships are\nused in order to find the causes of an artifact or a process involv-\ning multiple transitions, for example the artifact a1 was derived\nfrom artifact a2 possibly using multiple steps.\n100g\nButter\n2 eggs\n100g\nSugar\n100g\nFlour\nBake Cake\nwasGeneratedBy(cake)\nJohn\nwasControlledBy(cook)\nused(flour)\nused(butter)\nused(sugar)\nused(eggs)\n20g\nFlour\nused(flour)\nFigure 2: An Example of Provenance Graph (adapted from [17]).\nProvenance is perceived as an important component of work-\nflow systems to provide documentation about scientific analy-\nses and processes. Provenance documentation is particularly\nimportant in the scientific method in order to understand and\nreproduce such processes. In the introduction we discussed the\nneed to capture the scientist\u2019s intent associated with a workflow\nin order to better characterise an experiment. As provenance\nshould enable users to understand, verify, reproduce, and as-\ncertain the quality of data products generated by processes we\nargue that intent information should be a kay element of the\nprovenance documentation.\nAs stated above, the Open Provenance Model is designed to\nmake assertions about causation between processes and data\nand between processes and agents. However, OPM does not\ntake into account the fact that agents can make decisions about\nthe processes that they are controlling based on intent and that\nthey can influence how the process is executed as a result of this.\nTo better understand this concept let us consider the provenance\nexample presented in [17]. Assuming the agent \u201dJohn\u201d is driven\nby a goal (\u201dbake a cake of an acceptable quality\u201d) and has a\nconstraint (\u201dthe mix must have an hydration level between 50%\nand 60%\u201d), the resulting provenance graph may be as shown\nin Figure 2. However, if an additional 20g of flour was used\nby \u201dJohn\u201d during the baking process as a result of violating the\nconstraint, it is not possible to understand from Figure 2 why\nthis was the case.\nIn intelligent software agents, goals and constraints are in-\ntroduced to explain and specify an agent\u2019s proactive behaviour.\nIn this view, agents are assumed to have their own goals which\ninitiate behaviour that can be influenced by certain constraints\n[23]. Such concepts resonate very well with the idea of intent\nand the concept of an agent in OPM. For example, a scientist\n(Agent) can make decisions (Action) about the experiment he is\nconducting (Process) based on certain desires about the experi-\nment (Scientist\u2019s Intent).\nIn order to answer the intent queries presented in the case-\nstudy section we need to incorporate the concept of intent into\nthe provenance graph. This will allow us to address specific\nqueries based on the OPM formalism such as the following:\n4\n\u2022 (Q1) What was the intent of agent Agx?\n\u2022 (Q2) What was the intent of agent Agx while controlling a\nprocess Px?\n\u2022 (Q3)What decisions has agent Agx made while controlling\na process Px?\n\u2022 (Q4) Were any constraints defined by the agent Agx vio-\nlated?\n\u2022 (Q5) Did an agent Agx achieved his goal\/goals?\n\u2022 (Q6) What are the decisions made by agent Agx that have\ninfluenced an artifact Ax?\n4. Scientist\u2019s Intent\nIn Section 3 we discussed how the Open Provenance Model\ndoes not take into account agents making decisions about the\nprocesses that they are controlling. In this Section, we intro-\nduce an extended version of the Open Provenance Model cap-\nturing aspects of a scientist\u2019s intent. An OWL binding of the\nextended OPM model is also presented that combines an OWL\nrealisation of OPM (including SWRL rules) and a scientist\u2019s\nintent ontology.\n4.1. An Abstract Model of Scientist\u2019s Intent\nWe have introduced a minimal set of concepts providing a\nformal representation of a scientist\u2019s intent based on an exten-\nsion of the Open Provenance Model. In this model, we take\nthe view that agents are driven by intent and they can therefore\nmake decisions about the processes that they are controlling.\nOur scientist\u2019s intent model is based on four entities that we\ndefine below:\nDefinition 1. (State) A kind of artifact describing the internal\nproperties of a process.\nDefinition 2. (Intent) An anticipated outcome that guides the\nagent\u2019s planned actions based on a set of goals and constraints.\nDefinition 3. (Goal) A specification of a desired state of the\nprocess (e.g. properties associated with the state) that an agent\nis currently controlling.\nDefinition 4. (Constraint) A specification of a restriction on\nthe properties associated with the state of a process.\nDefinition 5. (Decision) A course of action based on the con-\nsideration of a goal or a constraint.\nIn order to capture the causal dependencies between the en-\ntities presented above and the entities defined by OPM (Agent,\nArtifact and Process), we introduce five causal relationships:\nDefinition 6. (WasDrivenBy) An edge \u201cwas driven by\u201d be-\ntween an agent Ag1 and an intent In1 indicates that the agent\nwas driven by the intent defined by I1.\nDefinition 7. (WasMadeBy) A connection between a decision\nDe1 and an agent Ag1 by a \u201cwas made by\u201d edge indicates that\nthe decision De1 was made by the agent Ag1 .\nDefinition 8. (WasInfluencedBy) The assertion of an edge\n\u201cwas influenced by\u201d between a process P1 and a decision De1\nor between an artifact A1 and a decision De1 indicates respec-\ntively that the process P1 was influenced by the decision De1 or\nthe artifact A1 was influenced by the decision De1.\nDefinition 9. (Shaped) An edge \u201cshaped\u201d between a goal Gl1\nand an intent In1 or a constraint Co1 and an intent In1 indicates\nthat the goalGl1 or the constraintCo1 has shaped the intent In1.\nDefinition 10. (WasBasedOn) The assertion of an edge \u201cwas\nbased on\u201d between a decision De1 and a goal Gl1 or constraint\nCo1 indicates that the decision De1 was influenced by the goal\nGl1 or the constraint Co1.\nAn overview on this model is presented in Figure 3.\nA P\nused()\nA\nwasGeneratedBy()\nAg\nwasControlledBy()\nIntentwasDrivenBy()\nshaped()\nshaped()\nDecision\nwasMadeBy()\nwasBasedOn()\nwasInfluencedBy()\nGoal\nConstraint\nFigure 3: An Abstract Model of Scientist\u2019s Intent Based on the extended OPM\nSpecification.\nWe expand the OPM provenance graph definition with the\nthe following rules:\n\u2022 Intent, Goal, Constraint and Decision entities are defined\nby unique identifiers belonging respectively to the set of\nIntentId, GoalId, ConstraintId and DecisionID.\n\u2022 in represents the ID of an intent, gl represents the ID of a\ngoal, co represents the ID of a constraint and de represents\nthe ID of a decision.\n\u2022 Functions In,Gl, Co and De are defined in order to access\ninformation about specific intents, goals, constraints and\ndecisions.\n\u2022 An OPM graph is defined in our model as\ngr = hA, P, AG,U,G,T, D,C,Ov,Re, In,Gl,Co\n, De, Db, Mb, Ib, Df , Boi where A 2 Arti f act, P 2\nProcess, AG 2 Agent, U \u2713 Used, G \u2713 WasGeneratedBy,\nT \u2713 WasTriggeredBy, D \u2713 WasDerivedFrom,\nC \u2713 WasControlledBy, Ov \u2713 Overlapping,\nRe \u2713 Re f inement, In 2 Intent, Gl 2 Goal,\nCo 2 Constraint, De 2 Decision, , Db \u2713 WasDrivenBy,\nMb \u2713 WasMadeBy, Ib \u2713 WasIn f luencedBy,\nDf \u2713 S haped, Bo \u2713 WasBasedOn .\n5\n\u2022 Structural equality applies to the edges introduced in this\nmodel: two edges wasDrivenBy, wasMadeBy, wasInflu-\nencedBy, Shaped, wasbasedOn are equal if they have the\nsame source, the same destination and the same accounts.\nFigure 4 shows the extensions introduced to the OPM model\nby scientist\u2019s intent.\nIntentId : primitive set\nDecisionId : primitive set\nGoalId : primitive set\nConstraintId : primitive set\nIntent = IntentId ! ValueP(Account)\nDecision = DecisionId ! ValueP(Account)\nGoal = GoalId ! ValueP(Account)\nConstraint = ConstraintId ! ValueP(Account)\nWasDrivenBy = Agent \u21e5 Role \u21e5 Intent \u21e5 P(Account) \u21e5 OTime0\nWasMadeBy = Decision \u21e5 Role \u21e5 Agent \u21e5 P(Account) \u21e5 OTime0\nWasInfluencedBy = Process \u21e5 Arti f act \u21e5 Decision \u21e5 P(Account) \u21e5 OTime0\nWasBasedOn = Decision \u21e5Goal \u21e5Constraint \u21e5 P(Account) \u21e5 OTime0\nShaped = Intent \u21e5Goal \u21e5Constraint\nOPMGraph = Arti f act \u21e5 Process \u21e5 Agent \u21e5 Intent \u21e5 Decision\n\u21e5Goal \u21e5 Constraint \u21e5 P(Used) \u21e5 P(WasGeneratedBy)\n\u21e5 P(WasTriggeredBy) \u21e5 P(WasDerivedFrom)\n\u21e5 P(WasControlledBy) \u21e5 P(Overlaps)\n\u21e5 P(WasDrivenBy) \u21e5 P(WasMadeBy)\n\u21e5 P(WasInfluencedBy) \u21e5 P(WasBasedOn) \u21e5 P(Shaped)\nFigure 4: An Extension of the OPM Causality Graph Data Model.\nFigure 5 presents an alternative account of the provenance\nexample described in Figure 2. We now demonstrate through\nthis example that the set of concepts introduced in this section\nare minimal. In this example, we are showing an alternative\nderivation of the process \u201cbaking\u201d using our model of intent.\nIn this provenance account, \u201cJohn\u201d (the agent) is driven by the\nintent defined by a goal \u201cbake a cake of an acceptable quality\u201d\nand a constraint \u201cif the mix is too runny, you need to add more\nflour\u201d. Without the concept of Intent, Goal and Constraint it\nwill not be possible to describe the intent behind the agent.\nMoreover, the use of the relationships shaped and wasDrivenBy\nallow the correlation between the goal, constraints and intent\nand the agent. In order to represent a Goal it is also necessary\nto characterise the State of a Process as a goal is a specification\nof a desired state, e.g. cake of an acceptable quality.\nFigure 5 illustrates that while adding the flour to the cake\nmix (\u201cAdd Flour to Mix\u201d process), the agent \u201cJohn\u201d made the\ndecision to add an additional 20g of flour based on the goal\nand constraints defined in his intent. In this case, the concept\nof Decision is required in order to justify the additional 20g of\nflour added into the mix.\nComparing the example in Figure 2 with the account of\nprovenance in Figure 5 using our model of intent we can in-\nfer the following:\n\u2022 The agent John was driven by the intent: goal \u201cbake a\ncake of an acceptable quality\u201d, constraint \u201cif the mix is\ntoo runny, you need to add more flour\u201d, (requires Goal,\nConstraint, Intent, Shaped and wasDrivenBy);\n\u2022 The existence of the \u201c20g Flour\u201d artifact is influenced by\nthe agent\u2019s decision to add more flour to the mix (requires\nDecision and wasMadeBy).\n\u2022 The decision to add more flour to the mix was based on the\ngoals and constraints defined in the agent\u2019s intent (requires\nwasBasedOn).\n\u2022 The\u201cAdd Flour to Mix\u201d process and the\u201cCake Mix\u201d ar-\ntifact were influenced by the decision to add more flour\n(requires wasInfluencedBy).\n4.1.1. Inference Rules\nWe now introduce a set of inference rules that can be per-\nformed on our extended version of the Open ProvenanceModel.\nIf an artifact a1 was influenced by a decision de1 we can infer\nthat if a process p1 used an artifact a1 it was also influenced by\nthe decision de1 as presented by definition 11.\nDefinition 11. (WasInfluencedBy) A process p1 was influ-\nenced by a decision de1 if the artifact a1 used by the process\np1 was influenced by de1.\nIf a process p1 was influenced by a decision de1 it is unrea-\nsonable to infer that an artifact a1 was also influenced by the\ndecision de1 unless implicitly defined in the provenance graph;\nhowever it is useful to infer that such relationship may exist (see\nexample in Figure 6). We introduce a new edgeMayHaveBeen-\nInfluencedBy and an definition (Definition12 ) to define such a\nrelationship.\nDefinition 12. (MayHaveBeenInfluencedBy) A process p1\nmay have been influenced by a decision de1 if the artifact a1\ngenerated by the process p1 was influenced by de1.\nA P\nused()\nA\nwasGeneratedBy()\nDecision\nwasInfluencedBy() mayHaveBeenInfluencedBy()\nFigure 6: Example of MayHaveBeenInfluencedBy Relationship Inferred About\nan Artifact.\nThe MayHaveBeenInfluencedBy relationship only works if\nthere is direct causality between a Process or an Artifact and a\nDecision. However, we are also interested to find out the de-\ncisions that may influence an Artifact or a Process based on\ntheir relationship with other Artifacts or Processes using multi-\nple steps.\n6\n100g\nButter\n2 eggs\n100g\nSugar\n100g\nFlour\nCake\nJohn\nIntentwasDrivenBy() shaped()\nAdd more \nflour\nwasMadeBy()\nwasBasedOn()\n\"the mix must have an \nhydration level between \n50% and 60%\"\nBlend Cake Mix Add Flour to Mix Cake Mix Bake\nwasControlledBy(cook)\n20g\nFlour\nwasInfluencedBy()\n\"bake a cake of an \nacceptable quality\"\nFigure 5: An Alternative Account of the Provenance Presented in Figure 2 Using our Model of Intent.\nThe Open Provenance Model allows for indirect causality\nrelationships to be inferred by providing transitive versions of\nthe basic causal relationships namelyUsed*,WasTriggeredBy*,\nWasDerivedFrom* andWasTriggeredBy*. We introduce a tran-\nsitive version of the mayHaveBeenInfluencedBy relationship\n(namely MayHaveBeenInfluencedBy*) which is described by\ndefinitions 13, 14, 15 and 16.\nDefinition 13. (Multi-Step MayHaveBeenInfluencedBy) A\nprocess p may have been influenced by a decision de (possi-\nbly using multiple steps) written as p !\u21e4 de, if the process p\nused (possibly using multiple steps) artifact a and a may have\nbeen influenced by decision de.\nDefinition 14. (Multi-Step MayHaveBeenInfluencedBy) A\nprocess p may have been influenced by a decision de (possi-\nbly using multiple steps) written as p !\u21e4 de, if the process p\nwas triggered by (possibly using multiple steps) process p1 and\np1 may have been influenced by decision de.\nDefinition 15. (Multi-Step MayHaveBeenInfluencedBy) An\nartifact a may have been influenced by a decision de (possibly\nusing multiple steps) written as a !\u21e4 de, if the artifact a was\ngenerated by (possibly using multiple steps) process p and p\nmay have been influenced by decision de.\nDefinition 16. (Multi-Step MayHaveBeenInfluencedBy) An\nartifact a may have been influenced by a decision de (possibly\nusing multiple steps) written as a !\u21e4 de, if the artifact a was\nderived from (possibly using multiple steps) artifact a1 and a1\nmay have been influenced by decision de.\n5. An OWL + Rules Binding of the Scientist\u2019s Intent Model\nIn this section we introduce a realisation of the model pre-\nsented in Section 4.1 achieved by combining an OWL binding\nof the Open Provenance Model, an OWL ontology describing\nthe Scientist\u2019s Intent extensions and rules based on the SWRL\nontology.\n5.1. An OWL Binding of the Open Provenance Model\nAs part of the PolicyGrid project12 we have created a prove-\nnance framework to support evidence-based policy assessment\nwhere the focus is on how a particular piece of evidence was\nderived. The framework consists of a generic provenance on-\ntology developed in OWL, which defines basic entities of OPM\n(such as Artifact, Process, Agent, CausalRelationship, Role,\nAccount and OTime) as OWL classes. Furthermore, the frame-\nwork supports additional domain-specific provenance ontolo-\ngies that can be created by extending the concepts defined in\nthe OPM ontology with domain specific classes. For exam-\nple, in a \u201cSocial Simulation\u201d domain ontology we might have\na Simulation Model and a Simulation Environment State as a\ntype of Artifact and a Parameter Exploration as a type of Pro-\ncess. To date we have developed a domain-specific prove-\nnance ontology describing aspects of \u201cSocial Simulation\u201d and\na \u201cGeneric Provenance\u201d ontology describing generic Artifacts\nand Processes such as Image, Questionnaire and Interview.\nThe diagram in Figure 7 shows an extract of the ontologies\ndefined in our provenance framework.\n5.2. The Scientist\u2019s Intent Ontology\nWe now present the design of an ontology implementing the\nScientist\u2019s Intent model as described in Section 4.1 by extend-\ning the provenance ontology outlined in Section 5.1.\nWe define the concept of a Workflow Experiment as a\ntype of opm:Process designed to automate one or more\nopm:Processes defined in our provenance ontologies (e.g.\nParmeterExploration, DataCollection, etc.). A Work-\nflowExperiment uses one or more ComputationalRe-\nsource instances which represent the computational services\n(Grid, Web or local) associated with a workflow activity. Each\nComputationalResource might have an associated ontol-\nogy describing the resource as an entity but also describing\n12www.policygrid.org\n7\nSocial Simulation ProvenanceGeneral Provenance\nOPM Provenance\nArtifact\nProcess\nRole\nCausalRelation\nAgent\nhasCause\nhasEffect\nhasRole\nArtifact Process\nSimulation \nEnvironment \nState\nPararameters \nExploration\nText File\nParameter \nFile\nAccount\nbelongsToAccount*\nhasOTime\nSimulation \nModel\nArtifact Process\nImage\nQuestionnaire\nInterviewText File\nOTime\noverlaps*\nbelongsToAccount*\nbelongsToAccount*\nOPM OWL \nEntity\nSpecialised \nProvenance \nEntities\nis-a\nproperty\nhasCause\nhasEffect\nFigure 7: An Extract of our OWL-based Provenance Framework.\nproperties of the resource at run-time (e.g. a simulation ser-\nvice). A WorkflowExperiment inherits the characteristics of\nopm:Process and it can therefore use (role:input) and gen-\nerate (role:output) opm:Artifacts.\nA WorkflowExperiment can be controlled by a Work-\nflowEngine agent which characterises a specific software im-\nplementation, e.g. Kepler [11]. A WorkflowExperiment can\nalso be controlled by an SI Agent which represents an Agent\nthat is driven by scientist\u2019s intent. All opm:Artifact and\nopm:Process instances associated with a WorkflowExperi-\nment may contain metadata produced by the workflow system.\nWe can conveniently group such metadata in a WorkflowState\naccount. A WorkflowExperiment may belong to more than\none WorkflowState account capturing the temporal changes\nof workflow metadata. This is based on the idea of Abstract\nState Spaces [24] where a particular execution of a process de-\nnotes a sequence of state transitions \u2327 = (s0, . . . , sm) [25]. Pro-\ncess transitions in conjunction with time annotations (OTime)\nare required by our scientist\u2019s intent framework to reason about\nthe Workflow State at runtime.\nIn the ontological framework presented in Section 5.1, RDF\nand OWL are used to express domain specific knowledge (e.g.\nSimulation Mode). While the OWL (version 1) language in-\ncludes a rich set of class constructors, the language provided for\nproperties is much weaker as there is no composition construc-\ntor, so it is impossible to capture relationships between a com-\nposite property and another (possibly composite) property [26].\nSuch a limitation makes it di\u0000cult to define the logic behind the\nconcept of goal and constraint in an OWL (version 1) ontology\nas introduced by definitions 3 and 4 in Section 4.1. Goals and\nconstraints are concerned with a desire or a restriction on a com-\nposition of properties associated with the state of a workflow.\nWe have identified SWRL13 (Semantic Web Rule Language) as\na language for capturing rules associated with scientist\u2019s intent.\nSWRL enables Horn-like rules to be combined with metadata.\nThe rules take the form of an implication between an antecedent\n(ruleml:head) and consequent (ruleml:body). SWRL rules\ncan reason about OWL individuals, primarily in terms of OWL\nclasses and properties. This formalism is particularly suitable\nfor capturing scientist\u2019s intent as the rules can capture the logic\nbehind goals and constraints, while the ontology and metadata\nabout the workflow provide the \u2018knowledge base\u2019 upon which\nthe rules can operate.\nFor example, a SWRL rule expressing that \u201ca simulation run-\nning on a platform compatible with the IEEE 754 floating point\nstandard will produce valid results\u201d require us to capture the\nconcepts of \u201csimulation\u201d, \u201cplatform\u201d, \u201cresult\u201d and \u201cvalid re-\nsult\u201d in OWL. The concept of simulation can be captured using\nan OWL class called Simulation, the concepts of platform,\nresult and valid result can be expressed using OWL properties\nrunsOnPlatform, hasResult and hasValidResult which\nare attached to Simulation. The rule in SWRL would then\nbe:\nS imulation(?x1) ^ hasResult(?x1, ?x2) ^\nrunsOnPlat f orm(?x1, \u201cIEEE75400) !\nhasValidResult(?x1, ?x2)\nWe choose SWRL to capture rules associated with scientist\u2019s\nintent because it is a declarative language not bound to a spe-\ncific execution algorithm. Instead, a formal semantics is defined\nin order to determine when the algorithm used provides sound\nand complete results. This means that the scientist is able to de-\nfine rules without being aware of any side e\u21b5ects that the rules\nmight have as well as the algorithm that is used to execute the\nrules. This facilitates the use of the same rules across di\u21b5erent\nscenarios. Moreover, SWRL overcomes many of the limitations\nof OWL in describing specific restrictions to properties. For ex-\nample, OWL does not capture relationships between composite\nproperties while SWRL does.\nWe introduce to our ontology the concept of Intent (see\nFigure 8) which is defined by a set of Goal and Constraint\nstatements. An SI Agent might be driven by one or more\nIntent instances. Goal and Constraint are defined as\nsubtypes of ruleml:impl which represent a rule axiom in\nSWRL. A PreCondition is a condition that can be satis-\nfied on a WorkflowState [25] and is defines as a conjunc-\ntion of swrl:Atoms. Atoms can represent an RDF resource\nor a built in formula. Both the Goal and Constraint class\nis characterised by a Pre Condition which contains a list of\nswrl:Atom instances.\nWe finally introduce the class Decision as a subtype of Ac-\ntion (see Figure 8) which is defined as a decision to carry on an\n13http:\/\/www.w3.org\/Submission\/SWRL\/\n8\naction based on a Goal or Constraint (see definition 4 and 5\nin Section 4.1. An Action is also a conjunction of swrl:Atom\ninstances which can represent an RDF resource, a built in for-\nmula or a WorkflowAction. Each WorkflowEngine agent\nmay support zero or more WorkflowActions, e.g. stop work-\nflow, pause workflow, show message.\n6. Scientist\u2019s Intent Framework\nTo test the ideas presented in Section 4 we have implemented\na framework for capturing and managing the scientist\u2019s intent\nassociated with a workflow experiment. This framework is\nbased on a semantically enriched workflow environment where\nmetadata is used to annotate and describe workflow compo-\nnents. We have chosen to implement this framework based on\nthe Kepler [11] workflow management system because it al-\nready provides basic semantic support. We have developed a\nsemantic workflow architecture based on a combination of ex-\nisting workflow and Semantic Web technologies (see Figure 9)\nin order to bridge the gap that exists between state-of the art\nworkflow systems (e.g. Taverna, Triana, Kepler) and the type\nof workflow functionality required to support scientist\u2019s intent.\nWe begin by presenting a semantic workflow architecture\nbased on an extension of Kepler and a number of semantic Grid\nand Web services. We then present an overview of the im-\nplementation of our scientist\u2019s intent framework which corre-\nsponds to the formal model and ontologies presented in Section\n4.\n6.1. Semantic Workflow Architecture\nOur architecture is composed of three di\u21b5erent layers. The\ntop layer consists of components such as Workflow Editor,\nWorkflow Engine, Web\/Grid Services etc. which are required\nto design and enact scientific experiments. In our architecture,\nsuch components are described by metadata and also produce\nand consume metadata themselves. A the bottom layer, on-\ntologies ( e.g. OWL-S, Kepler Ontology, WSMO) are used to\ndescribe the various types of metadata produced and consumed\nby the other components. In the middle layer, the Semantic Bus\n[27] provides the means to transport metadata content between\ncomponents.\nThe Semantic Bus in this context is a variation of the Enter-\nprise Service Bus (ESB) ([28]) architecture used in the field of\napplication integration. An enterprise service bus is designed\nto facilitate the integration of services by any application (in-\ndependent of computer language or operating system) by pro-\nviding an event-driven and standards-based messaging system\n(Bus). The key di\u21b5erence between a standard ESB architecture\nand the one we employ is that our Semantic Bus acts exclusively\nas a transport medium for semantic metadata between di\u21b5erent\napplications and services.\nThe Semantic Bus provides several adapters for integrating\nnew applications\/services and ontologies into the bus (e.g. S.\nI. Framework, S.I. Ontology, Simulation Ontology described in\nsection 6.2). The Semantic Bus allows di\u21b5erent applications\nor services to exchange metadata by configuring incoming and\noutgoing endpoints.\nWorkflow Editor\/Tool\nSemantic BUS\nWorkflow Components \nCatalogue\nWorkflow Enactment\nService\nWeb and Grid Services\nOWL-S WSDL WSMO S.I. Ontology\nSimulation \nOntology\nS.I. Framework\nKepler\nOntology\nProvenance \nOntology\nOntologies and components\ndeveloped as part of the S.I. Framework\nFigure 9: Semantic Workflow Infrastructure.\nThe top layer of our semantic workflow architecture consists\nof applications and services that are required to design and en-\nact workflow experiments. This architecture is based on the\ncore components which are common across existing workflow\nsystems. A crucial aspect of our framework is that the workflow\nand its component activities (e.g. SimulationGridTask, Classifi-\ncation\/Regression) must have supporting ontologies and should\nproduce metadata that can be used against scientist\u2019s intent to\nreason about the workflow. In this section, we explain the vari-\nous components of the architecture and the associated metadata\nsupport. We also discuss how adapters had to be created to al-\nlow such components to interoperate via the Semantic Bus.\nIn our semantic framework theWorkflow Editormust support\nthe creation of metadata about the workflow. Di\u21b5erent editors\nallow di\u21b5erent contextual information to be specified. Some of\nthe most common are title, author, date of creation, description.\nIn order to align Kepler with our provenance ontology we ex-\ntended the editor to allow users to describe additional metadata\ne.g. AutomateTasks defines what high level tasks the work-\nflow is designed to automate; Evaluate defines what specific\nhypothesis the workflow is designed to evaluate.\nThe Workflow Editor makes use of metadata available from\nthe Workflow Catalogue. Such metadata can be used to auto-\nmatically check if the pipeline between tasks is semantically\ncorrect (i.e. if the right type of output has been used for the\nright type of input). Metadata can also be used to suggest to the\nuser suitable workflow activities based on the characteristics of\ntheir inputs and outputs. Kepler is able to import OWL ontolo-\ngies and to use such ontologies to describe workflow activities.\nHowever, Kepler integrates semantic annotation directly into\nthe workflow language (MOML) by defining properties that\nmap to classes in an ontology. Because MOML is an XML-\nbased language we have created an adapter to convert semantic\nannotations as defined in MOML to RDF statements that can be\nexchanged via the Semantic Bus.\nThe Workflow Catalogue contains a list of local and remote\nservices that can be used as part of a workflow. This is a com-\nmon component in workflow systems and is designed to keep an\nindex of service locations and their characteristics, e.g. inputs,\noutputs, invocation details. An important function of a Work-\nflow Catalogue in the context of our framework is to represent\nthe semantic characteristics of workflow activities in a unified\n9\nAction\n = \nruleml:body\nWasBasedOn\n<COLLECTION>\nDecision\nWasMadeBy\nWasBasedOn\nWasInfluencedBy\nWasInfluencedBy\nWorkflow \nAction\nsupportsAction*\nConstraint Goal\nPre Condition \n= \nruleml:head\nShaped* Shaped*\nhasPreCondition hasPreCondition\nswrl:Atom\n<COLLECTION>\nruleml:imp\nWasDrivenBy*\nIntentwasSatisfiedOn*\nrole:service\nCausalRelation\nWorkflow \nState\nopm:Account\nopm:Process\nrole:input\nWasGeneratedBy\nrole:output\nbelongsToAccount*\nOPM OWL \nEntity\nIntent\nis-a\nproperty\nWorkflow \nExperiment\nComputational \nResource\nSI  Agent\nWorkflow \nEngine\nWasControlledBy*\nopm:Artifact\nWasControlledBy*\nopm:AgentUsed\nrole:Service\nbelongsToAccount*\nFigure 8: Intent Ontology.\nway. This is complicated by the fact that the Workflow Cat-\nalogue can employ di\u21b5erent mechanisms for discovering ser-\nvices and populating the catalogue and such mechanisms may\nrely on di\u21b5erent metadata representations. In order to solve\nthis problem the Kepler system supports annotation of work-\nflow activities in the catalogue with \u201csemantic type\u201d properties.\nWhere Kepler allows a user to manually add semantic annota-\ntions, adapters have to be created to automatically gather such\ninformation from UDDI, WSDL and OWL-S.\nThe recent convergence of Web and Grid technologies has\nfacilitated the emergence of standard specifications and proto-\ncols for Web and Grid service descriptions and communication.\nThe main specifications are the Web Services Resource Frame-\nwork (WSRF) ([29]), the Web Services Description Language\n(WSDL) ([30]) and SOAP ([31]). We have created adapters for\nWSDL,WSRF, OWL-S andWSMO so that metadata about ser-\nvices can be shared between components of our semantic work-\nflow architecture. Of course the usefulness of this metadata in\nterms of defining scientist\u2019s intent greatly depends on the stan-\ndard used to describe the service. OWL-S and WSMO provide\nsu\u0000cient support for the semantic description of services. An-\nother important aspect of Web and Grid services in the context\nof our framework is that they might produce metadata at run-\ntime. We have implemented software components to allow the\ncreation of such metadata at run-time by a Grid or Web service.\nThis metadata can be made available to other components of\nthe architecture via the Semantic Bus.\nThe Workflow Engine manages the execution of the work-\nflow by scheduling the invocation of services and procedures\nbased on the workflow definition. AWorkflow Engine is tightly\ncoupled with the Workflow Editor and the Workflow Catalogue\nby a Workflow Language so semantic support is usually lim-\nited to what the underlying language is designed to provide. In\nthe Kepler system, the only semantic information available to\nthe Workflow Engine are the semantic properties in the work-\nflow definition itself and no additional metadata can be created.\nHowever, Kepler allows for use of customised director compo-\nnents that control the execution of the workflow in the work-\nflow engine. We have created a director component ( SIDirec-\ntor described in section 6.2) that can extract metadata from the\nworkflow and associate it with temporal information from the\ninternal scheduler. Moreover, our director component can ex-\nchange data with other components via the Semantic Bus and is\nthus able to associate metadata from the services and the meta-\ndata from the workflow with temporal information. This is the\nkey for creating workflow states as introduced in Section 4.\nTo summarise, we have created a semantic workflow archi-\ntecture to provide a semantic environment within which work-\nflow experiments can be created and executed. We have identi-\nfied the following sources of metadata that can be used to sup-\nport our scientist\u2019s intent framework:\n\u2022 Workflow Contextual Metadata: metadata\n10\nabout the workflow, e.g. author, date of cre-\nation, etc. Sources: Kepler Component On-\ntology (http:\/\/seek.ecoinformatics.org\/kepler-\ncomponent), Kepler Annotation Schema\n(http:\/\/seek.ecoinformatics.org\/annotation-schema);\n\u2022 Task Metadata: metadata about a workflow activity,\ne.g. task, input and output and metadata about the data\ngenerated at the end of an activity within the work-\nflow or sub-workflow. Sources: Kepler Base Ontology\n(http:\/\/seek.ecoinformatics.org\/ontology);\n\u2022 Service Metadata: metadata about external ser-\nvices used by the workflow. Sources: OWL-S\n(http:\/\/www.daml.org\/services\/owl-s\/1.2), WSDL\n(http:\/\/schemas.xmlsoap.org\/wsdl\/),\nWSMO: ( http:\/\/www.wsmo.org\/2004\/d2);\n\u2022 RuntimeMetadata: metadata about the status of an activ-\nity over time, for example while the workflow is running.\nSources: Simulation Ontology\n(http:\/\/www.policygrid.org\/ontologies\/simulation.owl)\n6.2. Implementation of the Scientist\u2019s Intent Framework (SIF)\nWe have created a framework for capturing and managing\nscientist\u2019s intent associated with a workflow - Scientist\u2019s Intent\nFramework (SIF) based on the semantic workflow architecture\npresented in Section 6.1. Figure 10 presents the various compo-\nnents of such a framework and how it interacts with the Work-\nflow Management System and Web and Grid services via the\nSemantic Bus. Each of the software components within this\nframework can exchange metadata.The implementation of the\nSemantic Bus consists of a set of standard APIs allowing soft-\nware applications to exchange metadata.\nSe\nm\nan\ntic\n B\nUS\n A\nPI\nKepler\nSIDirector\nRule Engine\nSIManager\nMetadata \nRepository \nManager\nRules KnowledgeBase\nScientist's Intent User Interface\nStatistical \nService\nData-Access \nService\nSimulation \nService RDF\nRDF\nRepository\nFigure 10: Scientist\u2019s Intent Management System.\nAt the centre of this infrastructure we have the Kepler work-\nflow management system which allows the user to design a\nworkflow from a catalogue of workflow activities and enact it\nby directly invoking local and remote services. We have im-\nplemented a number of Semantic Grid services with supporting\nontologies:\n\u2022 A data access service to enable access to large-scale data-\nsets. This service is based on the existing OGSA-DAI\n([32]) middleware for distributed data management with\nextended semantic capabilities;\n\u2022 A service for statistical analysis based on R14 which is able\nto provide statistical data alongside basic semantic infor-\nmation about the type of statistical method used;\n\u2022 A number of simulation services running di\u21b5erent versions\nof land-use and ecology simulation models with extensive\nrun-time semantic metadata support.\nKepler can communicate with the rest of the framework via\nthe Semantic Bus through the SIDirector. The SIDirector is an\nextension of a Synchronous Dataflow (SDF) Kepler Director\ncomponent. The SDF Kepler Director executes a single work-\nflow action at a time with one thread of execution. The SDF\nDirector pre-calculates the schedule for actor execution in or-\nder to improve e\u0000ciency and reduce overhead. Moreover, a\nSDF director requires the same consumption and production\nrate of each actor e.g. an actor can only read and produce a\nsingle token of data. In our SIDirector implementation the SDF\nKepler Director have been extended to extract metadata from\nthe workflow actors (including input an output tokes) and to\nmonitor and control the execution of the actors based on the\nassumptions resulting from the reasoning process in the Scien-\ntist\u2019s Intent Framework.\nIf the execution of a service produces a large amount of meta-\ndata at run-time (e.g. a simulation service), a local RDF reposi-\ntory for each of the service instances is created in order to avoid\noverloading the main RDF repository.\nThe core of our framework is the knowledge-base repository\nwhere metadata from the workflow and the services is translated\ninto \u201cfacts\u201d (represented as n-place predicates) by the SIMan-\nager and the Metadata Repository Manager. The SIIMan-\nager collects metadata every time it becomes available from\nthe workflow. When some services generate a large amount\nof metadata, the Metadata Repository Manager is used to ex-\ntract only the metadata required by the intent rules from the\ndistributed RDF repositories. For example, in the FEARLUS-\nSPOMM Biodiversity case-study the FEARLUS model imple-\nments a mechanism to describe the status of the agents during\nthe simulation using RDF metadata. This is facilitated by the\nfact that rules are expressed in SWRL and the metadata required\nis explicitly referenced in the rule formalism. The scientist\u2019s\nintent is defined by a set of rules that are stored in the Rules\nRepository. The Rule Engine processes such rules when new\nfacts become available and stores the inferred facts back into\n14http:\/\/www.r-project.org\/\n11\nthe knowledge-base. The same engine is also able to perform\nreasoning over an OWL ontology to infer additional facts.\nThe SIDirector can query the Knowledge Base at any time\nvia the SIManager to detect if new facts have become available\nand if actions are required by the workflow engine. A detailed\nexample of the use of this framework is presented in section\n6.2.2.\n6.2.1. Scientist\u2019s Intent Grid Service\nThe core of SIF is developed as a Globus Toolkit Grid ser-\nvice. We have used the WS-Resource15 factory pattern so it is\npossible to create multiple instances of this service.\nFigure 11 contains a UML class diagram describing the in-\nternal components of the Grid Service. The SIFactory is in-\nvoked to create one or more SIManager instances. An instance\nof SIManager is associated to a specific workflow experiment.\nAccessing individual instances of the SIManager is possible by\nthe endpoint reference generated by the SIFactory when a new\ninstance is created. For example, the endpoint reference is used\nby the SIDirector in Kepler for locating the appropriate SIMan-\nager instance to use.\nAn instance of the SIManager has an associated Knowledge-\nBase instance where facts derived from the workflow and ser-\nvices metadata are kept. The SIManager harvests RDF meta-\ndata from the workflow via the SIDirector component and\nfrom the services using the MetadataRepositoryManager. The\nSIManager has one or more MetadataRepositoryManager in-\nstances depending on how many services with a remote meta-\ndata repository are associated to a specific workflow. The\nmetadata provided from the SIDirector and the metadata har-\nvested from the MetadataRepositoryManager are stored as\nWorkflowSession instances. Such instances represent changes\nof the workflow and services metadata over time during the ex-\necution of the workflow.\nThe SIManager has one or more associated RulesContainer\ninstances. Each RulesContainer represents a collection of\nRules associated with a particular intent statement. Finally, the\nSIManager has a RuleEngine which is designed to run all of\nthe Rules contained in the RulesContainers against the Knowl-\nedgeBase thus inferring new facts. If new facts are created a\nnew WorkflowSession instance is created with the correspond-\ning metadata.\n6.2.2. Example of Usage: Baking a Cake\nIn this section, we present a simple scenario to illustrate the\nusage of the Scientist\u2019s Intent Framework in the context of the\nBaking a Cake example presented in Figure 5. The UML se-\nquence diagram in Figure 12 illustrates the interaction between\nthe software component of SIF in this example. In this scenario\nwe will assume that we have a workflow describing the \u201crecipe\u201d\nfor baking a cake and such workflow is enacted by a workflow\nengine.\nThe SIDirector communicates to the SIManager that the\nworkflow engine is beginning to run a workflow and provides\n15http:\/\/www.globus.org\/wsrf\/\naddRule(String)\nremoveRule(Integer)\nrulesToSPARQL():String\nrules:Rule\nAttribute\nRulesContainer\nnamespaces:namespace\nrule:String\nRule\n*\n1\ncreateWorkflowSession(RDF)\nrunRuleEngine(Integer): String\nquery(String):RDF\naddMetadata(namespaces, RDF)\nkb:KnowledgeBase\nrules:RulesContainer\nsessions:WorkflowSession\nrepositories:MetadataRepositoryManager\nengine:RuleEngine\nSIManager\ngetRDFModel():RDFModel\naddRDFtoModel(RDF)\naddRepository(URL)\nrdfModel:Model\nWorkflowSession*\n1\naddFact(Fact)\naddRDFasFacts(String, RDF)\nnamespaces:Namespace\nfacts:Fact\nKnowledgeBase\nnamespaces:Namespace\nfact:String\nFact\n*1\n1\n1\nquery(String query):RDF\nurl:URL\nrepositories:Repository\nMetadataRepositoryManager\n*1\n*1\ncreateSIManager()\nSIFactory\nloadKB(KnowledgeBase)\nloadRules(Rules)\nrun(): String\nask(): String\nRuleEngine\n1\n1\n*\n1\nFigure 11: UML Class Diagram Describing the Scientist\u2019s Intent Grid Service.\nRDF metadata describing the initial state of the workflow. This\nmetadata is used by the SIManager in order to create a new\nWorkflowSession and to update the KnowledgeBase with the\nfacts describing the initial state of the workflow. Once the\nKnowledgeBase is updated, the SIManager instantiates and\nruns a new RuleEngine which begins by loading rules from the\nRulesContainer and facts from the KnowledgeBase. The Rule-\nsContainer contains a rule describing the constraint that \u201cif wa-\nter content of the cake mix is above 30% the mix is too runny\nand an additional 20g of flour needs to be added\u201d and is de-\nscribed in rule form below:\nExample 1. Rule Describing a Constraint Related to the Bak-\ning a Cake Example.\nPreCondition:\nCakeMix( ?x1 ) ^\nhasWaterContent( ?x1, ?x2 ) ^\n[more-than ( ?x2, 30%) = true]\nDecision:\nACTION:addFlourTo(?x1, \"20g\")\nThe SIDirector is implemented to communicate asyn-\nchronously to the SIManager in order to reflect the \u201csepara-\ntion of concerns\u201d between the workflow engine executing the\nworkflow, and the SIF framework monitoring and controlling\nthe workflow based on intent. During the execution of the\nworkflow, SIDirector detects that new metadata is available as a\nworkflow activity (e.g. add flour, eggs and water to the mix) has\njust been completed. The SIManager therefore sends an update\nmessage to the SIManager containing RDFmetadata describing\nthe output of the completed activity. In this example, such meta-\ndata also contains the information that the cake mix contains\n50% of water. The new metadata received by the SIManager is\n12\nSIManager Rules Container WorkflowSessionRuleEngine\nKnowledge\nBase\nnewSession()\naddFacts()\nrun() load()\nload()\nupdate()\nupdate()\nrun()\nSIDIrector\nrunningWorkflow(i)\nupdate(cakeMix = 50% water)\nnewSession()\naddFacts()\nload()\nquery()\nquery()\naction(add flower)\nFigure 12: UML Sequence Diagram Illustrating the Baking a Cake Example.\nused in order to create a newWorkflowSession and to update the\nKnowledgeBase with the additional facts about the workflow.\nThe RuleEngine then checks the facts from the KnowledgeBase\nagainst the rules and any new inferred facts are stored in the\nKnowledgeBase. In this case, the fact that the cake mix contains\n50% of water triggers the rule introduced above which gener-\nates the decision to add 20g of flour to the mix. This decision\nand related causal relationships (see Figure 5) are recorded into\na newWorkflowSession. Throughout the process the SIDirector\ncan query the SIManager to check if actions were originated\nfrom the RuleEngine and, if possible, act upon them (e.g. add\n20g of flour to the mix).\n6.3. Example of Usage: Workflow Control\nWe now present another scenario to illustrate how the Scien-\ntist\u2019s Intent Framework interacts with the Kepler director dur-\ning the execution of a workflow. We will assume that a work-\nflow experiment with associated intent rules is currently being\nexecuted, and a SIManager instance has already been created.\nThe UML sequence diagram in Figure 13 illustrates the inter-\nactions between the software components of SIF. The SIDirec-\ntor detects that new metadata is available from the workflow as\na workflow activity has just been completed. The SIDirector\ntherefore sends an update message (via the Semantic Bus) to\nthe SIManager containing RDF statements describing the out-\nput of the completed activity. Assuming that there are some as-\nsociated RDF repositories describing simulation run-time meta-\ndata, the SIManager generates a SPARQL query based on the\nrules available from the RulesContainers. This is done by in-\nvoking the rulesToSPARQL method. For example, if the Rule-\nsContainer contains the rule shown in Example 2, then the\nrulesToSPARQL method will return the query in Example 3\nthat can be used against the remote repositories to obtain the\nmetadata necessary to check the rule.\nExample 2. Rule Describing a Constraint used for Monitoring\nthe Experiment in the Biodiversity Case-study.\nPreCondition:\nSimulation( ?x1 ) ^\nhasSimulationRun( ?x1, x2 ) ^\nhasYear(?x2, ?x3 ) ^\nhasLandManagerPopulationSize( ?x3, ?x4 ) ^\nhasBankruptcies(?x3, ?x5 ) ^\n[more-than( ?x5 \/ ?x4, 0.5 )]\nDecision:\nhasInvalidRun( ?x1, ?x2) ^\nACTION:stop(?x1)\nExample 3. Query for Obtaining Metadata to Validate the\nConstraint in the Example 2\nDESCRIBE ?x1 ?x2 ?x3 ?x4 ?x5\nWHERE\n{\n?x1 rdf:Type Simulation .\n?x1 hasSimulationRun ?x2 .\n?x2 hasYear ?x3 .\n?x3 hasLandManagerPopulationSize ?x4 .\n?x3 hasBankruptcies ?x5\n}\nThe query is sent to all instances of the MetadataReposito-\nryManager via the Semantic Bus which returns a collection of\nRDF instances. The RDF resulting from the queries is com-\nbined with the RDF received from the SIDirector to form a new\nWorkflowSession. The same RDF is converted into facts by\ninvoking the addRDFasFacts method of the KnowledgeBase\nclass.\nThe SIManager then runs the RuleEngine which begins by\nloading rules from the RulesContainer and facts from the\nKnowledgeBase. The rules are checked against the facts and\nany new inferred facts are stored in the KnowledgeBase and\nalso converted to RDF and stored in the WorkflowSession. The\nnew inferred facts about the current workflow are stored in the\nWorkflowSession. Throughout the workflow execution process\nthe SIDirector can query the SIManager via the Semantic Bus\nto check if actions were generated by the RuleEngine and have\nbeen asserted in the current WorkflowSession. Depending on\nthe ability of the SIDirector instance to interact with the work-\nflow engine, the SIDirector will act upon any detected actions\nby invoking the control functions in the workflow engine that\ncoordinates suspend or resume executions.\nExternal applications and services can access the metadata\nstored in theWorkflowSession using the Semantic Bus API. For\ninstance, the new facts inferred as a result of the rule in Example\n13\n2 are visualised in the timeline widget of the user interface as\nillustrated in Figure 14. Such facts are presented in temporal\norder of when an action was triggered by a specific intent rule.\nSIManager Rules Container\nMetadata \nRepository\nManager\nrulesToSPARQL\nWorkflowSessionRuleEngine KnowledgeBase\nquery\nnewSession\naddFacts\nrun\nload\nload\nupdate\nupdate\nrun\nSIDIrector\nquery\nquery\nquery\nupdate\nFigure 13: UML Sequence Diagram Illustrating the Workflow Control Exam-\nple.\n6.3.1. User Interface\nWe have implemented a prototype web-based user interface\nto create and explore scientist\u2019s intent. Figure 14 shows a\nscreenshot of the interface in which a user is defining one of\nthe constraints presented in the case study section.\nThe interface provides the user with metadata classes and\nproperties that can be used as part of a goal or constraint (Meta-\ndata panel). Such metadata is based on the ontologies used to\ndescribe the workflows available to the user (Workflow panel).\nThe definition of a goal or constraint is specified by the user\nby dragging and dropping metadata elements from the meta-\ndata panel to text boxes forming the rule statement. Built-in\nfunctions (e.g. more-than, less-than) can also be selected\nfrom the drop-down menus associated with the rule statements.\nWorkflows on the workflow panel can be associated with one or\nmore intent definitions and executed.\nThe metadata generated from the scientist\u2019s intent during the\nexecution of a workflow is collected by the web interface via\nthe Semantic Bus and presented back to the user in the form of\na timeline using a timeline widget16 (lower part of Figure 14).\nThe timeline widget presents metadata elements originated by\nscientist\u2019s intent rules when they occurred during the execution\nof the workflow.\n6.4. Technical and Ontological Requirements\nThe following are a set of requirements that are necessary for\na software application or service to be used in conjunction with\nthis software framework:\nTechnical Requirements\n16http:\/\/simile.mit.edu\/timeline\/\n1. The application can be encapsulated in a Web or Grid ser-\nvice.\n2. The application can run independently without user inter-\nvention at runtime.\n3. OPTIONAL: The application can be controlled at runtime\nby another software process or service.\n4. The workflow engine can be extended to communicate\nwith the SI Framework via the Semantic Bus via Web or\nGrid services middleware.\nOntological Requirements\n1. Standard service description metadata (WSDL or OWL-S\nor WSMO).\n2. Metadata description of inputs and outputs.\n3. If the service is \u201cinteractive\u201d, metadata description of the\nstatus of the service at runtime.\n4. If the framework is associated to an existing provenance\nontology, the ontology must be compatible with the OPM\nspecifications.\n7. Evaluation\nIn this Section, we evaluate how the implementation of the\nscientist\u2019s intent framework meets the aims of our research in\ntwo stages: (a) An analysis of the capability of our implemen-\ntation to provide additional workflow documentation; (b) An\nanalysis of the capability of the implementation to control and\nmonitor the execution of a workflow. We conclude this section\nwith a summary of a study investigating the benefits of using\nour scientist\u2019s intent framework in the context of social simula-\ntion.\n7.1. Providing Additional Workflow Documentation\nIn the first stage of this evaluation we assess the capability of\nour implementation to provide additional workflow documenta-\ntion. We demonstrate this by discussing how the sample intent\nqueries introduced at the end of Section 3.1 can be performed\nusing our software framework and how constraints can be used\nin order to enrich workflow results.\nWe first need to demonstrate how goals and constraints can\nbe represented by using our framework. We therefore introduce\na number of example rules using a relatively informal \u201chuman\nreadable\u201d syntax. In this syntax a rule takes the form:\nPreCondition : (a1^ ...^an), (optional)Decision : (a1^ ...^an)\nPreCondition and Decision are conjunctions of atoms (a1 ^\n... ^ an) and variables are indicated using the standard conven-\ntion of prefixing them with a question mark (e.g., ?x).\nThe rule below defines the goal of the Biodiversity case study\n(see Goal 1, Section 2):\nExample 4. Rule Describing the Goal of the Experiment of the\nBiodiversity Case Study (see Goal 1, Section 2).\n14\nFigure 14: Intent User Interface (Biodiversity Example).\nPre Condition\nDataSet( ?x1 ) ^\nClassificationTree( ?x2 ) ^\nhasDataSet( ?x2, ?x1 ) ^\nhasDeviance( ?x1, ?x3 ) ^\nhasMeanLeafNodeDeviance( ?x2, ?x4 ) ^\n[more-than ( ?x4 \/ ?x3, 0.05) = true]\nThis rule states that the goal is to obtain at least one cross-\nvalidated tree that explains 5% of the deviation of the results\ndata. This is achieved when the pre-condition occurs based\non the Artifacts and Processes belonging to a Workflow-\nState. DataSet, and ClassificationTree refer to onto-\nlogical classes developed as part of the PolicyGrid provenance\nframework (see Section 5.1), hasDataSet, hasDeviance and\nhasMeanLeafNodeDeviance are properties in those classes\nand more-than is a built-in function used to test the di\u21b5erence\nbetween hasDeviance and hasMeanLeafNodeDeviance.\nThe rule below represents the subgoal of the Biodiversity\ncase study (see Goal 2 Section 2):\nExample 5. Rule Describing a SubGoal of the Experiment in\nthe Biodiversity Case Study (see Goal 2, Section 2).\nPre Condition\nParameterPermutationsExperiment( ?x1 ) ^\nhasSimulationRun( ?x1, ?x2 ) ^\nhasOutcomeBasedIncentiveScheme( ?x2, ?x3 ) ^\nhasActivityBasedIncentiveScheme( ?x2, ?x4 ) ^\n[more-than ( ?x3 \/ ?x4, 0.8) = true]\nThe rule explains that a subgoal of the experiment is to ob-\ntain a similar number of valid runs between outcome-based and\nactivity-based incentive schemes.\nThe rule below demonstrates how a constraint can be defined\nusing our framework by describing Constraint 1 from Section\n2.\nExample 6. Rule Describing a Experimental Constraint in the\nBiodiversity Case Study (see Constraint 4, Section 2).\nPreCondition:\nSimulation( ?x1 ) ^\nhasSimulationRun( ?x1, ?x2 ) ^\nhasLandManager( ?x2, ?x3 ) ^\nownsLandParcels( ?x3, ?x4 ) ^\n[more-than ( ?x4, 50%) = true]\nDecision:\nACTION:discard(?x1)\nThe rule states that the condition: \u201ca simulation run ?x2 has\none land manager ?x3 that owns more than half of the land\u201d\nforms the bases for the decision: \u201cdiscard the entire simulation\n?x1\u201d. The rule can also be read in reverse: \u201cThe decision to\ndiscard the entire simulation ?x1 was based on the condition\nthat a simulation run ?x2 has one land manager ?x3 that owns\nmore than half of the land\u201d.\n15\n7.1.1. Querying Intent\nIn order to leverage the expressivity of provenance queries\nwe have combined an OWL realisation of an OPM provenance\ngraph with an OWL realisation of intent using a custom ontol-\nogy in combination with user-defined SWRL rules. This com-\nbination enables a user to issue not only provenance queries\nrelated to the primary concepts described in OPM (e.g. Arti-\nfact, Process and Agent) but also based on concepts associated\nwith intent (e.g. Decision, Intent, Goal and constraint). More-\nover, the realisation of intent using an OWL ontology linked to\nuser-defined SWRL rules allow provenance queries to contain\nlinks to horn-like rules describing goals and constraints, e.g.\npre-condition, decision\/action. Using our framework it is pos-\nsible to express a wider range of queries than the one allowed\nby the OPM OWL ontology alone. We now discuss one by one\nthe intent queries introduced earlier in this paper.\n(Q1) What was the intent of agent Agx ? (also related to query\nCS1)\nIn the model of scientist\u2019s intent presented in this pa-\nper we state that the intent of agent is defined by a set\nof goals and constraints. In our model, we represent In-\ntent, Goal and Constraint and we associate them with an\nAgent in the OPM by providing two causal relationships:\n\u201cwas driven by\u201d ( hag1, in1, acci 2 WasDrivenBy), and \u201cwas\nbased on\u201d (hin1, gl1, acci 2 WasBasedOn and hin1, co1, acci 2\nWasBasedOn). Note that the edges resulting from both rela-\ntionship are members of an account.\nIn order to answer the query: \u201cWhat was the intent of agent\nAgx?\u201d we need to find all the goals and constraints associated\nwith an account as described by the following equation:\nFor ag1, acc f ind all gl1, co1 where 9in1,\nhag1, in1, acci 2 WasDrivenBy\n( ^ hin1, gl1, acci 2 S haped\n_ hin1, co1, acci 2 S haped )\n(1)\nwhich can easily be applied to our provenance repository us-\ning the SPARQL query as demonstrated in Example 7.\nExample 7. Query for Obtaining the List of Goals and Con-\nstraints Associated with an Agent in a Specific Account.\nSELECT ?goalOrConstraint\nWHERE\n{\n?agent rdf:Type opm:Agent .\n?wdb rdf:Type si:WasDrivenBy .\n?wdb opm:hasCause ?agent .\n?wdb opm:hasEffect ?intent .\n?wdb opm:belongsToAccount ?account .\n?wdfb rdf:Type si:Shaped .\n?wdfb opm:hasCause ?intent .\n?wdfb opm:hasEffect ?goalOrConstraint .\n?wdfb opm:belongsToAccount ?account .\nFILTER (?agent = <ag1> || ?account = <acc1>)\n}\n(Q2) What was the intent of agent Agx while controlling a pro-\ncess Px? (also related to query CS1)\nIn order to answer this query we can use a similar approach to\nthe one that we use in Q1 but restrict the query to only a specific\nprocess by using the relationship WasControlledBy between an\nAgent and a Process. In order to answer the query: \u201cWhat was\nthe intent of agent Agx while controlling a process Px?\u201d we\nneed find all the goals and constraints associated with a process\nPx, as described by the following equation:\nFor ag1, p1 f ind all gl1, co1 where 9in1,\nhag1, in1, acci 2 WasDrivenBy\n^ hp1, ag1, acci 2 ControlledBy\n( ^ hin1, gl1, acci 2 S haped\n_ hin1, co1, acci 2 S haped )\n(2)\nwhich can be applied to our provenance repository using the\nSPARQL query as demonstrated in Example 8.\nExample 8. Query for Obtaining the List of Goals and Con-\nstraints Associated with an Agent while Controlling a Specific\nProcess.\nSELECT ?goalOrConstraint\nWHERE\n{\n?agent rdf:Type opm:Agent .\n?crel rdf:Type opm:WasControlledBy .\n?crel opm:hasCause ?process .\n?crel opm:hasEffect ?agent .\n?wdb rdf:Type si:WasDrivenBy .\n?wdb opm:hasCause ?agent .\n?wdb opm:hasEffect ?intent .\n?wdfb rdf:Type si: Shaped .\n?wdfb opm:hasCause ?intent .\n?wdfb opm:hasEffect ?goalOrConstraint .\nFILTER (?agent = <ag1> || ?process = <p1>)\n}\nThe case-study query \u201c(CS1) What was the intent of the sci-\nentists while running this experiment?\u201d can now be answered\nby the solutions described for (Q1) and (Q2).\n(Q3) What decisions has agent Agx made while controlling a\nprocess Px? (also related to query CS4)\nIn order to answer this query we need find all the decisions\nthat an agent Agx made by controlling a process Px as described\nby the following equation:\nFor ag1, p1 f ind all de1 where 9de1,\n^hde1, ag1, acci 2 WasMadeBy\n^ hp1, ag1, acci 2 ControlledBy\n(3)\nwhich can be applied to our provenance repository using the\nSPARQL query as demonstrated in Example 9.\nExample 9. Query for Obtaining the List of Decisions made\nby the Agent while Controlling a Process.\n16\nSELECT ?constraint\nWHERE\n{\n?agent rdf:Type opm:Agent .\n?wmb rdf:Type si:WasMadeBy .\n?wmb opm:hasCause ?decision .\n?wmb opm:hasEffect ?agent .\n?wib rdf:Type si:WasInfluencedBy .\n?wib opm:hasCause ?process .\n?wib opm:hasEffect ?decision .\nFILTER (?agent = <ag1> || ?process = <p1>)\n}\n(Q4) Were any constraints defined by the agent Agx violated?\n(also related to query CS3)\nIn order to answer the query: \u201cWere any constraints defined\nby the agent Agx violated?\u201d we need to find if any constraint\ndefining the intent of an agent Agx influenced a decision as de-\nscribed by the following equation:\nFor ag1, acc1 f ind all co1 where 9de1,\nhag1, in1, acci 2 WasDrivenBy\n^ hp1, ag1, acci 2 ControlledBy\n^hin1, co1, acci 2 S haped\n^hde1, co1, acci 2 WasBasedOn\n(4)\nwhich can be applied to our provenance repository using the\nSPARQL query as demonstrated in Example 10.\nExample 10. Query for Obtaining the List of Constraints Vio-\nlated by a Specific Process.\nSELECT ?constraint\nWHERE\n{\n?agent rdf:Type opm:Agent .\n?wdb rdf:Type si:wasDrivenBy .\n?wdb opm:hasCause ?agent .\n?wdb opm:hasEffect ?intent .\n?wdb opm:belongsToAccount ?account .\n?wdfb rdf:Type si: Shaped .\n?wdfb opm:hasCause ?intent .\n?wdfb opm:hasEffect ?constraint .\n?wfdb opm:belongsToAccount ?account .\n?constraint rdf:Type si:Constraint .\n?wbo rdf:Type si:wasBasedOn .\n?wbo opm:hasCause ?decision .\n?wbo opm:hasEffect ?constraint .\n?wbo opm:belongsToAccount ?account .\nFILTER (?agent = <ag1> || ?account = <acc1>)\n}\n(Q5) Did an agent Agx achieve his goal\/goals? (also related to\nquery CS2)\nThe abstract model of intent presented in Section 4 lacks the\nexpressive power to answer this query as there are no any causal\nrelationships that we can use to infer or assert that a Goal has\nbeen achieved by an Agent. Asserting that a Goal has been\nachieved depends on the way that the goal is constructed (im-\nplemented) and it is beyond the scope of the Scientist\u2019s Intent\nabstract model to represent this. However, the realisation of the\nmodel using OWL and rules can o\u21b5er support for such a query.\nFor example, consider the goal described below (see Goal 1,\nSection 2) using the rule formalism introduced in our Scien-\ntist\u2019s Intent model:\nExample 11. Rule Describing the Goal of the Experiment of\nthe Biodiversity Case Study (see Goal 1, Section 2).\nPre Condition\nParameterSet( ?x1 ) ^\nDataSet( ?x2 ) ^\nComparisonTest( ?x3 ) ^\ncompares( ?x3, ?x1 ) ^\ncompares( ?x3, ?x2 ) ^\nsimilarity( ?x3, ?x4 ) ^\n[more-than ( ?x4, 0.95) = true]\nThis states that the goal is to obtain at least one match where\nthe real data falls within a 95% confidence interval of the model\nvalue. This is can be checked against the provenance reposi-\ntory when the Pre Condition occurs based on the Workflow\nState using the reasoning capabilities of the Rule Engine de-\nveloped as part of the Scientist\u2019s Intent Framework. The exam-\nple in Figure 14 shows how such a capability is put into action\nvia the user interface. The timeline in Figure 14 shows when\nthe experimental goal has been achieved.\n(Q6) What are the decisions made by agent Agx that have influ-\nenced an artifact Ax?\nIn order to answer this query we need find all the decisions\nmade by an agent Agx that might or have influenced an artifact\nAx as described by the following equation:\nFor ag1, a1 f ind all de1 where ,\n^hde1, ag1, acci 2 WasMadeBy\n( ^ha1, de1, acci 2 WasIn f luencedBy\n_ha1, de1, acci 2 MayHaveBeenIn f luencedBy\u21e4)\n(5)\nNote that in the equation above we are using the transitive\nversion of the MayHaveBeenInfluencedBy relationship in order\nto find all of the decisions that may have indirectly influenced\nthe artifact involving multiple transitions. This type of query\nis not possible in our repository as SPARQL 1.0 does not sup-\nport constraint path expressions of arbitrary length. We have\ntherefore to limit this kind of query only to direct occurrences\nof the WasInfluencedBy relationship between an Artifact and a\nDecision. An example of such a query is shown in Example 12.\n17\nExample 12. Query for Obtaining the List of Decisions made\nby and Agent that have Influenced an Artifact.\nSELECT ?decision\nWHERE\n{\n?agent rdf:Type opm:Agent .\n?wmb rdf:Type si:wasMadeBy .\n?wmb opm:hasCause ?decision .\n?wmb opm:hasEffect ?agent .\n?owib rdf:Type si:wasInfluencedBy .\n?owib opm:hasCause ?artifact .\n?owib opm:hasEffect ?decision .\nOPTIONAL {\n?crel rdf:Type opm:WasGeneratedBy .\n?crel opm:hasCause ?artifact .\n?crel opm:hasEffect ?process .\n?owib rdf:Type si:wasInfluencedBy .\n?owib opm:hasCause ?process .\n?owib opm:hasEffect ?decision .\n} .\n?agent opm:belongsToAccount ?account .\n?intent si:Shaped ?constraint .\n?constraint rdf:Type si:Constraint .\n?decision si:wasBasedOn ?constraint .\nFILTER (?agent = <ag1> || ?account = <acc1>)\n}\nIn order to answer the query (Q6), a reasoning engine based\non the inference rules introduced by the Open Provenance\nModel and our Scientist\u2019s Intent Model has to be developed.\nFor this reason we can only provide a partial solution to answer\n\u201c(CS4) What decisions were made while executing this exper-\niment?\u201d. Developing such a reasoning engine is beyond the\nscope of this paper and it is currently under development by the\nPolicyGrid project.\n7.1.2. Facilitating the Interpretation of Experimental Results\nTo demonstrate the capability of our implementation to pro-\nvide additional workflow documentation, we introduce addi-\ntional example rules based on the simulation case-study. In\nthe Biodiversity experiment if any habitat type, at any time\nstep, drops below a specified threshold, it is interesting to ex-\nplore the simulation. The constraint below adds a new property\n(hasHabitatBelowThreshold) to the Simulation instance.\nExample 13. Rule Describing a Constraint used for Result En-\nrichment in the Biodiversity Case Study (see Constraint 2, Sec-\ntion 2).\nPreCondition:\nSimulation( ?x1 ) ^\nhasSimulationRun( ?x1, ?x2 ) ^\nhasHabitatType( ?x2, ?x3 ) ^\n[less-than ( ?x3, 10) = true]\nDecision:\nhasHabitatBelowThreshold(?x1, ?x2 )\nUsing this new property, it is possible to explore the sim-\nulation data after the workflow has been completed by fol-\nlowing the annotations provided by the scientist\u2019s intent, e.g.\nhasHabitatBelowThreshold. The simulation instance con-\ntains a link to the repository containing the relevant simulation\nmetadata. By exploring such metadata the scientist can gain\nan insight into the simulation model status and understand the\nmechanism(s) that triggered a particular event. For example,\nthis new information about the simulation model can be used to\ndefine new constraints that can be used during another experi-\nment.\nAnother example constraint is presented below:\nExample 14. Rule Describing a Constraint used for Result En-\nrichment in the Biodiversity Case Study (see Constraint 3, Sec-\ntion 2 ).\nPreCondition:\nClassificationTree( ?x1 ) ^\nIncentiveScheme( ?x2 ) ^\nneg hasVariable(?x1, ?x2 ) ^\nDecision:\nhasNotIncentiveSchemeVariable( ?x1, ?x1 )\nThis informs the user when a classification\/regression tree\ndoes not identify Incentive Scheme as an influential variable.\nIn this constraint, the statement neg hasVariable(?x1, ?x2\n) is a negation as failure based on the closed world assumption\n(what is not currently known to be true is false). As a conse-\nquence, if the variable IncentiveScheme was never used by\nthe ClassificationTree such a statement is considered to\nbe false.\n7.2. Monitoring and Controlling Workflow\nIn the second stage of this evaluation, we assess the capa-\nbility of our implementation to control and monitor the exe-\ncution of a workflow. We demonstrate this by discussing how\nactions on the workflow execution can be triggered by intent\nconstraints. We also discuss the performance issues related to\nthe use of intent to monitor the execution of a workflow.\nUsing our framework, it is possible to control the execution\nof a workflow by specifying a post action from a number of\noptions coded in an ontology, e.g. stop workflow, pause\nworkflow, etc. As described in the usage example in section\n6.2.2, the SIF is able to monitor the execution of the workflow\nby receiving continuous updates from the workflow engine re-\ngarding the state of the workflow over time. If a particular\ncondition occurs that requires an action to be performed in the\nworkflow, the SIF is able to generate action statements that can\nbe used to control the executions of the workflow. For example,\nthe constraint below is used to check if the simulation is run-\nning on a platform compatible with the IEEE 754 floating point\nstandard:\n18\nExample 15. Rule Describing a Constraint on the Platform\nRunning a Simulation (see Constraint 5, Section 2).\nPreCondition:\nGridTask( ?x1 ) ^\nSimulation( ?x2 ) ^\nrunsSimulation( ?x1, ?x2 ) ^\nneg runsOnPlatform( ?x1, \u2018IEEE754\u2019 ) ^\nhasResult( ?x2, ?x3)\nDecision:\nhasInvalidResults( ?x2, ?x3 )\nACTION:resubmitTask(?x1)\nActions based on scientist\u2019s intent (e.g. resubmit-\nTask(?x1) ) depend on the ability of the workflow to process\nevents triggered by the scientist\u2019s intent framework. In our case,\nthe extended Kepler Director component is able to understand\nthe above action and therefore re-submits a Grid task.\nIn the Biodiversity experiment, a wide range of possible com-\nbinations of parameter values are explored. It is interesting here\nto narrow the parameter space to be searched in order to save\ncomputing resources and to gain understanding of the relative\nimportance and major interactions between input parameters.\nFor example, if a simulation run has a bankruptcy rate of more\nthan 5%, ignore this parameter set. The constraint in Example 2\ndemonstrates how this can be achieved. The action stop(?x1)\nstops the entire simulation when one of the runs violates the pre\ncondition.\n7.2.1. Performance Issues\nIn a scientist\u2019s intent aware workflow engine, intent informa-\ntion can be used to reduce the time an experiment takes to com-\nplete. However, there are some performance issues to consider\nwhen using our Scientist\u2019s Intent Framework.\nWe introduce here a T-Complexity formula of the Biodiver-\nsity workflow experiment introduced in Section 2:\n(per \u21e5 t1) + (per \u21e5 f iles \u21e5 t2) + (per \u21e5 t3 \u21e5 runs) + (per \u21e5 t4)\nWhere: per = Number of parameter permutation, t1 = Time\nto generate a parameter permutation, t2 = Time to upload a pa-\nrameter file, t3 = Time to execute a simulation run, t4 = Time to\nexecute a classification\/regression activity, f iles = Number of\nfiles in a parameter set, runs = Runs per parameter permutation.\nActivities in a workflow are commonly executed in a hetero-\ngeneous environment (e.g. a Grid cluster), the time that it takes\nfor an activity to complete can not be reliably predicted. There-\nfore, we have conducted a number of workflow experiments in\na controlled computing environment to test the system perfor-\nmance. We used a dedicated machine to calculate the average\ntime that the activities (t1, t2, t3 and t4) take in the Biodiversity\nworkflow under di\u21b5erent scenarios:\n\u2022 With or without metadata support (MD = Y, MD = N),\ne.g. metadata generated by the simulation service, meta-\ndata about the comparison test;\n\u2022 Without the support of the Scientist\u2019s Intent Framework\n(IN = N);\n\u2022 With full support from the Scientist\u2019s Intent Framework\n(IN = F), i.e. checking every change in workflow state\nincluding runtime metadata from the simulation service;\n\u2022 With partial support from the Scientist\u2019s Intent Frame-\nwork: checking every change in workflow state and (a)\nEvery 4 interactions (years) of the simulation run (IN =\n4Y) (b) At the beginning and end of the simulation (IN =\nBE);\n\u2022 Dropping simulation runs as a result of actions influenced\nby intent: no drops (SIM DROP = N), 50% drops (SIM\nDROP = 50%).\nTable 1 shows a summary of the data generated by the per-\nformance experiment. The first row of data on the table shows\nthe \u201ccontrolled\u201d scenario where the workflow experiment was\nperformed without generating metadata and without the aid of\nthe Scientist\u2019s Intent Framework. The other rows of data show\nthe di\u21b5erent scenarios tested by the experiment. We notice here\nthat in order to reduce the time it takes to run the \u201ccontrolled\nscenario\u201d (15,581.17 CPU\/hours) it is necessary to reduce the\ntimes that intent is checked against the simulation data (IN =\n4Y) and to drop 50% of the simulation runs as a result of intent\nactions.\nBased on the data generated by this performance experiment,\nwe can infer the following:\n\u2022 With full intent support, in order to achieve a reduction\non the time it takes to perform the experiment 75% of the\nsimulation runs have to be dropped as a result of intent.\n\u2022 With intent support for every 4 interactions of the simu-\nlation run, in order to achieve a reduction on the time it\ntakes to perform the experiment, 45% of the simulation\nruns have to be dropped as a result of the intent.\n\u2022 With intent support at the beginning and end of the simula-\ntion, in order to achieve a reduction on the time it takes to\nperform the experiment 39% of the simulation runs have\nto be dropped as as result of the intent.\n7.3. Using the Scientist\u2019s Intent Framework for Social Simula-\ntion\nAs part of our evaluation we conducted a focus group dis-\ncussion with three social simulation scientists involved in our\ncase studies in order to discuss four key issues surrounding the\nuse of our Scientist\u2019s Intent framework : (a) Result enrichment\nand annotation; (b) Reusability of experimental goals and con-\nstraints; (c) Provenance about the experiment; (d) Monitoring\nof an experiment.\nWe now present some of the most significant points to\nemerge from that discussion:\nAll participants agreed that workflow technologies can pro-\nvide a structured record of the execution of a social simulation\n19\nper t1 t2 t3 t4 files runs T (CPU\/hr) MD IN DR\n5188 0.10 1.03 1.52 0.24 17 18 15,581.17 N N N\n5188 0.10 1.03 12.44 0.24 17 18 24,079.12 Y N N\n5188 0.10 1.03 63.00 0.24 17 18 63,424.91 Y F N\n5188 0.10 1.03 16.94 0.24 17 18 27,581.02 Y 4Y N\n5188 0.10 1.03 13.14 0.24 17 18 24,623.86 Y BE N\n5188 0.10 1.03 63.00 0.24 17 9 32,098.47 Y F 50%\n5188 0.10 1.03 16.94 0.24 17 9 14,176.52 Y 4Y 50%\n5188 0.10 1.03 13.14 0.24 17 9 12,697.94 Y BE 50%\nTable 1: Summary of Workflow Experiments Conducted to Evaluate the System Performance.\nexperiment; this facilitates researchers discovering and inter-\npreting experimental data. However, participants also agreed\nthat the workflow execution log does not help to identify invalid\nor unrealistic simulation results. For instance, in an experiment\ninvolving the Biodiversity case-study, scientists found that it\nwas very di\u0000cult to remember the exact details of the experi-\nmental parameters. One of the scientists said: \u201cwe could have\neasily defined a rule saying, any set of runs in which there exists\na certain proportion of the runs where the bankruptcy rate was\nmore than 5% can be discarded\u201d.\nThe group also discussed the issue of reusability of agent-\nbased models. If a scientist wants to replicate a simulation ex-\nperiment (s)he will need to reuse the workflow designed for the\nexperiment. However, there are a number of constraints that\nhave to be respected in order to replicate an experiment. For in-\nstance, the SPOMM model has some general constraints, such\nas: \u201cyou might drop runs where there is extinction after 50\ntime steps\u201d. A participant concluded that \u201cif it was standard\npractice to define constraints for an experiment it will be impor-\ntant to re-use such constraints\u201d. Another participant suggested\nthat you could have a spatial metadata constraint such as: \u201cthis\nmodel is only appropriate to the kind of social system that you\nfind in Scotland\u201d.\nThe group suggested that there might be situations in which\nscientist\u2019s intent could be used to facilitate the interface be-\ntween research and management. For example, in any politi-\ncally contentious areas where simulation models are involved,\nresearchers are likely to be faced with questions such as: Does\nthe model show what it intended to show? How are the ex-\npected results obtained? Our scientist\u2019s intent framework could\nprovide some clues to answer such questions.\nThe group also discussed issues about provenance suggesting\nthat a constraint exists in the area of social simulation where a\nmodel should be based on evidence. Specifically, no data can\nbe used in such a model that has not come from some piece of\nevidence. This issue has deep implications in terms document-\ning and assessing how the data used in the workflow has been\ncollected. However, the group indicated that it is no longer the\ncase that the workflow is a su\u0000cient representation of what has\nbeen done in an experiment, the workflow plus the goals and\nconstraints associated with such provenance are needed in or-\nder to adequately reflect the experiment.\nIn terms of monitoring, the group agreed that it will be ideal\nto be able to see how many runs are left, what has been done so\nfar, how long it has taken, an estimate of how long it will take to\ncomplete the runs left, how much memory the runs have been\nusing, etc. It was also agreed that scientist\u2019s intent can help as\nit is possible to define constraints about the service (running the\nmodel), the model, and the processes itself. It is also possible to\ndefine constraints that help to monitor and control the execution\nof the experiment, a participant said \u201cif you are running an ex-\nperiment with thousands of simulations and a lot of simulations\nstart to go wrong because of certain a condition happening,\n(e.g. too much memory or wrong type of parameters) it is not\nnecessary to keep using computing resources\u201d.\n8. Related Work\nIn this section, we explore the current literature on workflow\ntechnologies, identifying the limitations of current workflow\nlanguages and provenance frameworks in capturing aspects of\nscientist\u2019s intent.\n8.1. Workflow Languages and Systems\nMany of the concepts underlying today\u2019s e-Science work-\nflow technologies originated from business workflows. These\ntypically describe the automation of a business process, usu-\nally related to a flow of documents. A scientific workflow, on\nthe other hand, is about the composition of structured activities\n(e.g. database queries, simulations, data analysis activities, etc.)\nthat arise in scientific problem solving [11]. However, the un-\nderlying representation of the workflow remains the same (data\nand control flow). Workflow technologies have emerged as an\nalternative for constructing scientific experiments compared to\nad-hoc approaches such as shell scripts [11, 9, 33]. We now\npresent a number of workflow languages and systems relevant\nto our work.\nThe BPEL language [8], originally designed for business, has\nbeen adapted for scientific workflow use. BPEL4WS is an ex-\ntension of BPEL that provides a language for the formal speci-\nfication of processes by extending the Web services interaction\nmodel to enable support for business transactions. The main\nlimitation of BPEL is that it does not support the use of seman-\ntics to describe the workflow components and their interactions\nbut instead relies entirely on Web services described by WSDL\n(Web Service Description Language). This type of language\nin not suitable for documenting aspects of scientist\u2019s intent as\nwe need rich metadata support for the workflow to describe\nnot only service related information (e.g. platform, inputs\n20\nand outputs) but also high level concepts (e.g. Simulation,\nLandmanager and LandParcel).\nXScufl [9] is a simple workflow orchestration language for\nWeb services which can handle WSDL based web service invo-\ncation. The main di\u21b5erence from BPEL is that XScufl is their\ncontrol logic, were XScufl is only capable of sequential invoca-\ntion of workflow activities, BPEL implements both sequential\nand event triggered control logics. Taverna [9], is a tool devel-\noped by the myGrid17 project to support \u2018in silico\u2019 experimen-\ntation in biology, which interacts with arbitrary services that\ncan be wrapped around Web services. The semantic support in\nTaverna allows the description of workflow activities but is lim-\nited to facilitating the discovery of suitable services during the\ndesign of a workflow via an ontology-driven search facility.\nMoML [7] is a language for building models as clustered\ngraphs of entities with inputs and outputs. Kepler [11] is a\nworkflow tool based on the MoML language where Web and\nGrid services, Globus Grid jobs, and GridFTP can be used as\ncomponents in the workflow. Central to Kepler is the use of\nDirectors which define execution models and monitor the ex-\necution of the workflow. Kepler also supports the use of on-\ntologies to describe actors\u2019 inputs and outputs, enabling it to\nsupport automatic discovery of services and facilitate the com-\nposition of workflows. Like other workflow tools, Kepler does\nnot allow the use of metadata at runtime. However, we believe\nthat Kepler is well suited for documenting and managing sci-\nentist\u2019s intent as the Director component and the integration of\nontologies with workflow activities provide an ideal framework\nfor our work.\nTriana [33] is a workflow environment that focuses on inte-\ngrating di\u21b5erent types of middleware such as peer-to-peer and\nGrid. The approach in Triana is similar to the one in Kepler\nin that the workflow is constructed from \u201cactors\u201d that encap-\nsulate local or remote processes. This makes Triana another\npotential environment for the documentation of scientist\u2019s in-\ntent, providing access not only to Grid or local services but also\nto peer-to-peer services.\nPegasus (Planning for Execution in Grids) [34] was devel-\noped as part of the GriPhyN18 project. Pegasus is a system\ndesigned to map and execute complex workflows using Grid-\nbased middleware. Pegasus is able to map an abstract workflow\nto a concrete workflow and submit it to Condor\u2019s DAGMan19\nfor execution. The abstract workflow describes processes and\ndata by their logical names while the concrete workflow con-\ntains the location of the data and the execution platforms. In the\ncontext of our scientist\u2019s intent framework it will be interesting\nto explore the idea of abstract workflows. Abstract workflows\nmay give us the advantage to hide the operationalisation of the\nworkflow while allowing intent to be defined as a higher level\nelement of the workflow.\nAs part as the Pegasus project, Kim et al. [35] present some\ninteresting work on generating and validating large workflows\nby reasoning on the semantic representation of workflow. Their\n17www.mygrid.org.uk\n18http:\/\/www.usatlas.bnl.gov\/computing\/grid\/griphyn\/\n19http:\/\/www.cs.wisc.edu\/condor\/\napproach relies on semantic descriptions of workflow templates\nand workflow instances. This description includes require-\nments, constraints and data products which are represented in\nontologies. This information is used to support the validation\nof the workflow but also to incrementally generate workflow\ninstances. Although in our research we are not focusing on as-\nsisted workflow composition, we do share the same interest in\nthe benefit of enhanced semantics in workflow representation.\nWhile both our requirements rely on the existence of higher-\nlevel workflow metadata, we are taking a more user-centred ap-\nproach by capturing higher level methodological information\nrelated to scientist\u2019s intent, e.g. valid simulation result,\nland manager, etc.\n8.2. Provenance of Scientific Workflows\nDocumenting the provenance of a scientific workflow has\nbeen identified as an essential step to support reproducibility,\nscientific discovery and result interpretation [13, 12]. In gen-\neral terms, provenance (also referred to lineage or audit trail)\ncaptures the derivation history of a data product, including the\noriginal data sources, intermediate data products, and the steps\nthat were applied to produce the data product. Heinis et al. [36]\nargues that \u201cwithout lineage information, a data set is often use-\nless from a scientific point of view\u201d. In the context of workflow\nexperiments lineage information is used to support scientists\nin di\u21b5erent ways [37]: (a) to explore data sources (and their\nderivation) used and produced by the workflow; (b) to verify\nthe data produced by the workflow for correctness; (c) to allow\ninvalid data sources to be corrected and re-run only the activi-\nties that have been a\u21b5ected by the invalid data.\nCli\u21b5ord et al. [38] introduce three distinct form of prove-\nnance: retrospective provenance which captures information\nabout the steps that were executed in order to derive some data,\nprospective provenance which captures the specification of the\nsteps that need to be followed to obtain some data and user-\ndefined provenance which represents provenance information\nprovided by the user. A workflow can be used to trace the lin-\neage of a data set as it already describes what tasks were per-\nformed in order to produce a data set. Existing workflow sys-\ntems (e.g Kepler, Taverna and Triana) capture such information\nimplicitly in an event log or can be easily instrumented to cap-\nture data provenance. However, the basic lineage information\nprovided by the workflow systems are not enough because sci-\nentists are interested not only in queries related to basic lineage\ninformation such as \u201cWhat algorithms were used to derive this\ndata set?\u201d, \u201cWhich data sets have been produced with this algo-\nrithm?\u201d, \u201cWhat data sets have been derived from this data set?\u201d\n[36] but also to the kind of provenance queries presented in this\npaper. Despite the developments of user-oriented provenance\nframeworks [39, 40], little support exists in current frameworks\nto allow \u201cscientifically meaningful\u201d provenance queries, in par-\nticular when the information available about a workflow goes\nbeyond data lineage (e.g. by also describing aspects of scien-\ntist\u2019s intent).\nTo date several approaches have been discussed to capture\nand model provenance [40, 41, 42, 43, 38, 44]. Some of these\napproaches [40, 43] combine together workflow systems with\n21\nSemantic Web technologies (e.g ontologies, reasoning, and\nrules). The SemanticWeb is an ideal environment for represent-\ning provenance information as the semantics of RDF and OWL\nallow us to define terms such that a reasoner can infer connec-\ntions among di\u21b5erent aspects of a workflow (e.g. process, data,\nservices). One of the most relevant provenance models dis-\ncussed in the literature is the Open Provenance Model (OPM)\n[17], an abstract model developed to address issues in exchang-\ning provenance information in workflow-driven science. The\nOpen Provenance Model is designed to make assertions about\ncausation between processes and data and between processes\nand agents and also defines inference rules that can be applied\nto a provenance graph. However, while OPM defines the con-\ncept of an agent as an entity which is in charge of controlling\na process, it does not acknowledge that agents might be au-\ntonomous (e.g. a scientist) able to make their own decisions\ndriven by intent (goals and constraints). Relevant to this is the\nmodel of provenance in autonomous systems presented by [45].\nMiles argues that \u201c... the intent behind any process that takes\nplace is not fixed in the original design of the application and\nso cannot be understood solely by examining that design...\u201d.\nTo overcome this problem the model presented by Miles com-\nbines a description of goal-oriented aspects of agency with ex-\nisting provenance frameworks in service-oriented architectures.\nWhile such a model allows the goals of autonomous agents to\nbe made explicit in the process documentation it does not take\ninto account other aspects related to intent such as constraints\nand decisions. The work presented by Miles also does not ex-\nplore the potential of using intent information to control, moni-\ntor and annotate a process.\n8.3. Belief, Desire and Intention\nResearch related to the role of intent in plans, actions, ratio-\nnality and intelligence has been the subject of study for many\nyears [46]. Bratman [47] in his work on rational agents takes\nthe view that intention is the attitude that shapes future plan-\nning. He also argues that much of our understanding of our-\nselves and others is based on a framework where intentions are\nused to characterise people\u2019s actions and their minds. The im-\nportance of intentions has been recognised in the field of intel-\nligent agents in developing agent theories, languages and archi-\ntectures. The most relevant work in this field is the model of\nBelief, Desire and Intent (BDI) developed by Rao and George\u21b5\n[48]. Rao and George\u21b5 explain that beliefs represent the \u2018infor-\nmative component\u2019 of a system state (i.e. the current knowledge\nabout the world). Desires represent the objectives which the\nagent is trying to accomplish. Intentions are the chosen course\nof action in order to achieve the agent\u2019s objectives, and are gen-\nerally expressed as plans and post-conditions. Agents may have\nmultiple desires and multiple intentions running concurrently at\nany given time.\nThe rationale behind the scientist\u2019s intent discussed in this\npaper is closely related to the BDI model introduced by Rao\nand George\u21b5. Belief is what the scientists know about the ex-\nperiment (e.g. the state of the workflow during execution). De-\nsire is what the scientist is aiming to achieve with the experi-\nment (goals) without violating certain constraints. The plan of\naction for performing the experiment is described by the work-\nflow created by the scientist. However, one must be aware that\nplans sometimes do not behave as intended. Intent represent the\nset of actions that are required to change the initial plan (work-\nflow) in order to achieve the scientist\u2019s goals and to respect the\nscientist\u2019s constraints.\n8.4. Scientific Applications of Workflow\nThe myExperiment project [49] is a social web site for sci-\nentists based on the Web 2.0 approach. myExperiment aims\nto deliver a social web site where scientists can safely publish\nand share their scientific workflows and related artifacts. The\nsite also provides support for credit, attributions, licensing, and\nfine control over privacy to meet the requirements of their re-\nsearch users. myExperiment is also designed to share and dis-\ncuss workflows and their related scientific objects, most notably\nprovenance logs. It would be interesting to explore the e\u21b5ect of\nsharing scientist\u2019s intent information in a social networking en-\nvironment like myExperiment.\nGoderis et al. [50] argues that scientific research has an im-\nportant social element as scientists share publications and ex-\nperimental workflows with each other and it is therefore im-\nportant that scientific workflows can be properly reproduced\nand interpreted. For this reason, myExperiment is designed to\nsupport workflow discovery, re-use and re-purposing. Goderis\net al. present some interesting queries related to the re-use of\nworkflows, for example: \u201cFind a workflow able to replace my\nfaulty workflow fragment\u201d and \u201cFind a workflow that extends\nmy current annotation pipeline with a visualisation step\u201d. We\nargue that scientist\u2019s intent information could be used in this\ncontext to enable queries such as: \u201cFind an alternative workflow\nto satisfy my goal\u201d, \u201cFind a workflow able to replace the frag-\nment of my workflow that violates my constraints\u201d. Goderis\net al. also present many queries related to workflow retrieval\n(navigation and search), most notably: \u201cWhich workflow has\nused this data as input?\u201d, \u201cWhich workflows has successfully\nused this service?\u201d and \u201cPeople who used this workflow also\nused that workflow\u201d. Scientist\u2019s intent information is not cur-\nrently represented in myExperiment and could potentially allow\nthe extension of the range of retrieval queries currently possi-\nble, for example: \u201cWhich workflow is designed to achieve this\ngoal?\u201d, \u201cWhich workflow has successfully achieved this goal?\u201d\nor \u201cWhich workflow has violated these constraints?\u201d.\nThe SEEK project [51] aims to support acquisition, integra-\ntion and analysis of ecological and biodiversity data. The Se-\nmantic Mediation System (SMS) is one of the components of\nthe SEEK architecture and is designed to support scientists\u2019\nworkflow modeling and design processes. In particular, this\ncomponent exploits domain ontologies to facilitate the discov-\nery of data sets and components, binding of data sets to com-\nponents, and smart linking of components to each other as part\nof the overall design process. The Kepler workflow tools in\nthe SEEK architecture leverage the Semantic Mediation Sys-\ntem by providing knowledge-based data integration and work-\nflow composition services, as well as basic services used in\nworkflow modeling, such as ensuring that workflows are \u201cse-\nmantically\u201d type-safe and component and data discovery via\n22\nconcept-based searching. In such an environment information\nabout scientist\u2019s intent could also be used to support the work-\nflow design process by allowing: (a) the discovery of new com-\nponents based on intent (e.g. could meet the scientist\u2019s goal);\n(b) the discovery of existing workflows that meet the scientist\u2019s\ngoals; (c) to check if any components of the workflow violate\nthe scientist\u2019s constraints.\n9. Conclusions & Future Work\nIn this paper we have investigated the idea that augmenting\nscientific workflow with a machine-processable representation\nof a scientist\u2019s intent provides benefits in terms of improved\nworkflow documentation, monitoring and control. From our\nevaluation we can conclude that a representation of scientist\u2019s\nintent can reduce human e\u21b5ort in inspecting workflow docu-\nmentation and can provide better management of workflow ex-\necution. As part of our investigation we have presented the for-\nmal representation of OPM and discussed the challenges that\nwe faced in order to capture scientist\u2019s intent using the existing\nOPM provenance representation. We introduced an extended\nversion of OPM capturing aspects of scientist\u2019s intent. We de-\nscribed an OWL binding of our scientist\u2019s intent model which\ncombines an existing OWL realisation of OPM with SWRL-\nbased rules and a scientist\u2019s intent ontology. We presented\na software framework for capturing, managing and reasoning\nabout the scientist\u2019s intent associated with a workflow experi-\nment. This framework can be used across di\u21b5erent workflow\nengine implementations. In this section we discuss limitations\nof our framework and how these can be addressed in future\nwork.\n9.1. Discussion\nSWRL and OWL provide a useful mechanism to express\nmost of the concepts defined by our scientist\u2019s intent abstract\nmodel. Our evaluation showed that most of the sample in-\ntent queries introduced in this paper can be answered using our\nframework with some exceptions: In order to answer the query:\n\u201c(Q6) What are the decisions made by agent Agx that have in-\nfluenced an artifact Ax?\u201d, we need to use the transitive version\nof the MayHaveBeenWasInfluencedBy relationship in order to\nfind all of the decisions that may have indirectly influenced the\nartifact involving multiple transitions. This type of query is not\npossible with our framework as SPARQL 1.0 does not support\nnested queries or recursion [52]. In our future work, it will\nbe interesting to develop a reasoning engine capable of such\nqueries.\nOur framework was built based on the assumption that the\nworkflow system: (a) allow to control and monitor the exe-\ncution of a workflow; (b) allow the execution of Web or Grid\nservices as workflow activities; (c) provide rich metadata sup-\nport describing the services invoked by the workflow. Based\non these assumptions, the Kepler workflow environment was\nideally suited for our framework as it implements the concept\nof a Director to control the execution of a workflow (includ-\ning Web and Grid services) and uses OWL ontologies to sup-\nport semantic annotation of dataset schemas, activities and their\ncorresponding input and outputs, to provide classification and\nbrowsing of workflow activities, to check if the workflow is\nsemantically consistent and to search for contextually relevant\nactivities during workflow design.\nAs described in this paper, our framework allows the user to\ndefine goals associated with a workflow experiment. The mech-\nanism that reasons about goals is the most basic aspect of our\nimplementation. However, most of the available workflow en-\ngines cannot be made fully compatible with scientist\u2019s intent\nwithout a major reimplementation, and the concept of Action\nis required to overcome such limitations by providing additional\nmetadata about the workflow state when goals are achieved and\nconstraints are satisfied. As such, workflow engines themselves\nare possibly the most obvious candidate for future work and\nimprovement. In a scientist\u2019s intent aware workflow engine,\nthe planning and scheduling of the workflow execution can be\noptimised based on goals and constraints. In the WSMO ontol-\nogy, goals are defined as the objectives that a client may have\nwhen consulting a service. Such a definition can then be used\nto identify the services required to achieve a specific goal. Our\ndefinition of a goal could potentially be utilised with an imple-\nmentation of WSMO (such as WSMX [53]) to overcome the\nlimitation of current workflow execution engines. We have cre-\nated an engine to reason about goals and constraints associated\nwith a workflow experiment and we would like to expand the\nquery capability of our framework by implementing a reasoning\nengine for the inference rules defined by the Open Provenance\nModel and our Scientist\u2019s Intent Model. Our scientist\u2019s intent\nframework utilises SPARQL 1.0 in order to represent goals and\nconstraints. However, SPARQL 1.0 has several limitations, e.g.\nlack of support for aggregation functions, sub-queries and ex-\npressions. For provenance, the most serious problem is that\nSPARQL 1.0 does not support path variables, constraints on\npath expressions, or path expressions of arbitrary length.\nFrom a user\u2019s perspective, creating and utilising metadata is\na non-trivial task: the use of a rule language to capture sci-\nentist\u2019s intent introduces additional challenges in this regard.\nWe have addressed these issues by creating a web-based tool to\ncompose scientist\u2019s intent rules from available metadata to asso-\nciate workflows with intent and to visualise intent information.\nAlthough we are using a timeline widget to present the intent\ninformation back to the user, there are still challenges associ-\nated with metadata browsing. [54] describe a tool that provides\naccess to RDF metadata (create, browse and query) using nat-\nural language. The tool can operate with di\u21b5erent underlying\nontologies and in the future we are planning to explore whether\nit could be extended to support scientist\u2019s intent metadata.\n9.2. Future Work\nAs mentioned earlier in this paper, our framework did not\nimplement the transitive version of some of the relationships\nintroduced in our model. In our future work, it will be interest-\ning to develop a reasoning engine with such capabilities. This\ncould be accomplished by using a logic programming language\nsuch as Prolog or the iTQL query language introduced by [55].\nWe have also mentioned that our framework makes a lim-\nited use of goals by annotating workflow results so that when a\n23\ngoal has been achieved the event is recorded and displayed as\npart of the workflow results. Making workflow engines fully\ncompatible with scientist\u2019s intent is possibly the most obvious\ncandidate for future work and improvement. The major chal-\nlenge related to this will be instrumenting the workflow engine\nto make independent execution decisions based on intent.\nSince our model of intent was developed as an extension of\nOPM, the concept of anOPM profile has been created. AnOPM\nprofile is intended to allow the definition of a specialisation of\nan OPM-based model while maintaining the compatibility with\nthe semantics described in the OPM core specification. A valid\nOPM profile implies that all the semantics and inferences de-\nscribed in the core specification remain unchanged. Although\nat first glance our model of intent seems compatible with the\nOPM profile specifications and does not represent a completely\nnew semantics, we are still planning to investigate this issue in\norder to obtain a valid OPM profile that can be shared with the\nrest of the research community.\nThe Fourth Provenance Challenges Scoping Workshop20\nheld in June 2010 was seeking broad end-to-end scenarios to\ndemonstrate how OPM can be used as an interoperable prove-\nnance technology. There were a number of patterns emerging\nfrom the scenarios proposed including \u201cuser decision points\u201d\nand \u201cwhy the user performed a decision\u201d both of which were\ninspired by the work presented in this paper. We have com-\nmitted to participate in the development of solutions for these\nchallenges and the scientist\u2019s intent model will be used and ex-\npanded in the future to provide a solution for some of the chal-\nlenges.\nThe PolicyGrid project, a collaboration between computer\nscientists and social scientists, is exploring how novel e-Science\ntechnologies can be used to support inter-disciplinary research\nactivities, in particular, the provision of support for tools for\nevidence-based policy research. Evidence is used at various\nstages of policy making, from the design of new policies to\nthe evaluation and review of existing policies. An evidence\nbase supports transparency and accountability in the policy\ndecision-making process. There is considerable potential for\ntechnologies to support such activities by providing tools to as-\nsist the collaboration and interaction between researchers using\nthe Web. PolicyGrid is studying the possible goal setting and\nmethodological constraints imposed by shared (project) goals\nin the context of interdisciplinary research projects. This in-\ncludes identifying examples of such goals and an examination\ninto how they a\u21b5ect (constrain) activities across the disciplinary\ngroups within each community. The project is also exploring\nhow shared goals should be represented and the relationship\nbetween high level project goals and constraints on discipline-\nspecific sub-tasks. The intent approach taken in this paper will\nbe adapted for this context.\nIn conclusion, we aim to provide a closer connection between\nexperimental workflows and the goals and constraints of the re-\nsearcher, thus making experiments more transparent. While sci-\nentist\u2019s intent provides additional metadata information about\n20http:\/\/twiki.ipaw.info\/bin\/view\/Challenge\/FourthProvenanceChallenge\nworkflow results and provenance, we have demonstrated that\nits use can also facilitate improved management of workflow\nmonitoring and execution. In addition, scientist\u2019s intent pro-\nvides more information about the why context than traditional\nprovenance frameworks. However, much more work is needed\nif we are to truly capture the intent of the scientist; the frame-\nwork described here is an important step towards that ultimate\ngoal.\nReferences\n[1] N. Hara, P. Solomon, S.-L. Kim, D. H. Sonnenwald, An emerging\nview of scientific collaboration: Scientists\u2019 perspectives on collabora-\ntion and factors that impact collaboration, Journal of the American So-\nciety for Information Science and Technology 54 (10) (2003) 952\u2013965.\ndoi:10.1002\/asi.10291.\n[2] T. Hey, A. E. Trefethen, Cyberinfrastructure for e-science, Science\n308(5723) (2005) 817\u2013821.\n[3] I. Foster, C. Kesselman, J. Nick, S. Tuecke, Grid services for distributed\nsystem integration, Morgan- Kaufmann, 2002.\n[4] D. De Roure, N. Jennings, N. Shadbolt, The semantic grid: a future e-\nscience infrastructure, Grid Computing: Making the Global Infrastructure\na Reality (2003) 437\u2013470.\n[5] T. Berners-Lee, J. Hendler, O. Lassila, The semantic web, Scientific\nAmerican (284) (2001) 28\u201337.\n[6] D. Pennington, Supporting large-scale science with workflows, in: Pro-\nceedings of the 2nd workshop on Workflows in support of large-scale\nscience, High Performance Distributed Computing, 2007, pp. 45\u201352.\n[7] A. Lee, S. Neuendor\u21b5er, Moml\u2014 a modeling markup language in xml\u2014\nversion 0.4, Technical report, University of California at Berkeley (2000).\n[8] T. Andrews, Business process execution for web services, ver-\nsion 1.1, ftp:\/\/www6.software.ibm.com\/software\/developer\/library\/ws-\nbpel.pdf (2003).\n[9] T. Oinn, M. Addis, J. Ferris, D. Marvin, M. Senger, M. Greenwood,\nT. Carver, K. Glover, M. Pocock, A. Wipat, P. Li, Taverna: a tool for the\ncomposition and enactment of bioinformatics workflows, Bioinformatics\nJournal 20(17) (2004) 3045\u20133054.\n[10] I. Taylor, M. Shields, I. Wang, A. Harrison, Visual grid workflow in triana,\nJournal of Grid Computing 3 (3) (2005) 153\u2013169. doi:10.1007\/s10723-\n005-9007-3.\n[11] B. Luda\u00a8scher, I. Altintas, C. Berkley, D. Higgins, E. Jeager, M. Jones,\nE. Lee, J. Tao, Scientific workflow management and the kepler system,\nConcurrency and Computation: Practice and Experience 18 (2005) 1039\n\u2013 1065.\nURL http:\/\/doi.wiley.com\/10.1002\/cpe.994\n[12] R. Bose, J. Frew, Lineage retrieval for scientific data pro-\ncessing: a survey, ACM Comput. Surv. 37 (1) (2005) 1\u201328.\ndoi:http:\/\/doi.acm.org\/10.1145\/1057977.1057978.\n[13] Y. L. Simmhan, B. Plale, D. Gannon, A survey of data prove-\nnance in e-science, SIGMOD Rec. 34 (3) (2005) 31\u201336.\ndoi:http:\/\/doi.acm.org\/10.1145\/1084805.1084812.\n[14] P. Groth, S. Jiang, S. Miles, S. Munroe, V. Tan, S. Tsasakou, L. Moreau,\nAn architecture for provenance systems, Tech. rep., ECS, University of\nSouthampton (2006).\n[15] C. Goble, Position statement: Musings on provenance, workflow and (se-\nmantic web) annotation for bioinformatics, Workshop on Data Derivation\nand Provenance, Chicago (2002).\n[16] J. A. Zachman, A framework for information systems architecture, IBM\nSystems Journal 26 (3) (1987) 276\u2013292.\n[17] L. Moreau, B. Cli\u21b5ord, J. Freire, J. Futrelle, Y. Gil, P. Groth, N. Kwas-\nnikowska, S. Miles, P. Missier, J. Myers, B. Plale, Y. Simmhan,\nE. Stephan, J. V. den Bussche, The open provenance model core speci-\nfication (v1.1), Future Generation Computer Systems.\nURL http:\/\/eprints.ecs.soton.ac.uk\/21449\/\n[18] G. Polhill, E. Pignotti, N. Gotts, P. Edwards, A. Preece, An ontology for\nexperimentation with a social simulation of land use change, in: Rep-\nresenting Social Reality, (ed. Klaus G. Troitzsch). European Simulation\nAssociation, 3rd Annual Conference, Koblenz, Germany 5-9 September\n2005, 2005, pp. 324\u2013330.\n24\n[19] J. G. Polhill, N. M. Gotts, A. N. R. Law, Imitative versus nonimitative\nstrategies in a land use simulation, Cybernetics and Systems 32 ((1-2))\n(2001) 285\u2013307.\n[20] G. Polhill, G. Gimona, N. Gotts, Analysis of incentive schemes for biodi-\nversity using a coupled agent-based model of land use change and species\nmetacommunity model, in: Modelling for Environment\u2019s Sake. Interna-\ntional Congress on Environmental Modelling and Software, Ottawa, On-\ntario, Canada, 5th-8th July 2010, 2010.\n[21] R. E. Mcgrath, J. Futrelle, Reasoning about provenance with owl and\nswrl rules, Presented at AAAI 2008 Spring Symposium, \u201dAI Meets Busi-\nness Rules and Process Management\u201d. Stanford, CA. March 24-26, 2008.\n(2008).\n[22] J. D. Myers, R. E. McGrath, Cyberenvironments: adaptive mid-\ndleware for scientific cyberinfrastructure, in: ARM \u201907: Proceed-\nings of the 6th international workshop on Adaptive and reflec-\ntive middleware, ACM, New York, NY, USA, 2007, pp. 1\u20133.\ndoi:http:\/\/doi.acm.org\/10.1145\/1376780.1376788.\n[23] K. V. Hindriks, F. S. de Boer, W. V. D. Hoek, J. jules Ch. Meyer,\nAgent programming with declarative goals, in: Intelligent Agents VII.\nAgent Theories Architectures and Languages, 7th International Work-\nshop, ATAL 2000. Volume 1986 of LNCS, Springer, 2000, pp. 228\u2013243.\n[24] U. Keller, H. Lausen, M. Stollberg, On the semantics of functional de-\nscriptions of web services, in: Proceedings of the 3rd European Semantic\nWeb Conference (ESWC 2006), Montenegro, 2006, pp. 605\u2013619.\n[25] M. Stollberg, M. Hepp, A refined goal model for semantic web services,\nin: Proceedings of the Second International Conference ion Internet and\nWeb Applications and Services. ICIW apps; 07, 2007, pp. 17\u201323.\n[26] I. Horrocks, P. F. Patel-Schneider, A proposal for an owl rules lan-\nguage, in: WWW \u201904: Proceedings of the 13th international conference\non World Wide Web, ACM, New York, NY, USA, 2004, pp. 723\u2013731.\ndoi:http:\/\/doi.acm.org\/10.1145\/988672.988771.\n[27] K. Verma, A. Kass, Model-assisted software development: Using a \u2019se-\nmantic bus\u2019 to automate steps in the software development process, (Ac-\ncepted) Semantic Web \u2013 Interoperability, Usability, Applicability.\n[28] D. A. Chappell, Enterprise Service Bus, O\u2019Reilly Media, 2004.\n[29] T. Banks, Web services resource framework (wsrf), Tech. rep., Primer\nv.1.2. OASIS, Committee Draft 02, 23 May 2006 (2006).\n[30] E. Christensen, F. Curbera, G. Meredith, S. Weerawarana, Web services\ndescription language (wsdl) 1.1, Tech. rep., W3C (2001).\n[31] M. Gudgin, M. Hadley, N. Mendelsohn, J. J. Moreau, H. F. Nielsen, Soap\nspecifications, Tech. rep., W3C (2003).\n[32] M. Antonioletti, N. C. Hong, A. Hume, M. Jackson, A. Krause,\nC. Palansuriya, T. Sugden, M. Westhead, Experiences of designing and\nimplementing grid database services in the ogsa-dai project, in: Global\nGrid Forum Workshop on Designing and Building Grid Services, Octo-\nber 2003, 2003.\n[33] I. Taylor, M. Shields, I. Wang, A. Harrison, The Triana Workflow En-\nvironment: Architecture and Applications, in: I. Taylor, E. Deelman,\nD. Gannon, M. Shields (Eds.), Workflows for e-Science, Springer, New\nYork, Secaucus, NJ, USA, 2007, pp. 320\u2013339.\n[34] E. Deelman, S. Callaghan, E. Field, H. Francoeur, R. Graves, N. Gupta,\nV. Gupta, T. H. Jordan, C. Kesselman, P. Maechling, J. Mehringer,\nG. Mehta, D. Okaya, K. Vahi, L. Zhao, Managing large-scale work-\nflow execution from resource provisioning to provenance tracking: The\ncybershake example, in: E-SCIENCE \u201906: Proceedings of the Sec-\nond IEEE International Conference on e-Science and Grid Comput-\ning, IEEE Computer Society, Washington, DC, USA, 2006, p. 14.\ndoi:http:\/\/dx.doi.org\/10.1109\/E-SCIENCE.2006.99.\n[35] J. Kim, E. Deelman, Y. Gil, G. Mehta, V. Ratnakar, Provenance trails in\nthe wings-pegasus system, Concurr. Comput. : Pract. Exper. 20 (2008)\n587\u2013597. doi:10.1002\/cpe.v20:5.\nURL http:\/\/portal.acm.org\/citation.cfm?id=1350745.1350748\n[36] T. Heinis, G. Alonso, E\u0000cient lineage tracking for scientific workflows,\nin: SIGMOD \u201908: Proceedings of the 2008 ACM SIGMOD international\nconference on Management of data, ACM, New York, NY, USA, 2008,\npp. 1007\u20131018. doi:http:\/\/doi.acm.org\/10.1145\/1376616.1376716.\n[37] U. Park, J. Heidemann, Provenance in sensornet republishing, in: Pro-\nceedings of the 2nd International Provenance and Annotation Worksho,\nSpringer-Verlag, Berlin, Heidelberg, 2008, pp. 280\u2013292.\n[38] B. Cli\u21b5ord, I. Foster, J.-S. Voeckler, M. Wilde, Y. Zhao, Track-\ning provenance in a virtual data grid, Concurrency and Com-\nputation: Practice and Experience 20 (5) (2008) 565\u2013575.\ndoi:http:\/\/dx.doi.org\/10.1002\/cpe.v20:5.\n[39] S. Bowers, T. M. McPhillips, B. Luda\u00a8scher, S. Cohen, S. B. Davidson,\nA model for user-oriented data provenance in pipelined scientific work-\nflows, in: IPAW, Vol. 4145, 2006, pp. 133\u2013147.\n[40] J. Zhao, C. Goble, R. Stevens, D. Turi, Mining taverna\u2019s semantic web\nof provenance, Concurrency and Computation: Practice and Experience\n20 (5) (2008) 463\u2013472. doi:http:\/\/dx.doi.org\/10.1002\/cpe.v20:5.\n[41] J. Kim, E. Deelman, Y. Gil, G. Mehta, V. Ratnakar, Prove-\nnance trails in the wings-pegasus system, Concurrency and\nComputation: Practice and Experience 20 (5) (2008) 587\u2013597.\ndoi:http:\/\/dx.doi.org\/10.1002\/cpe.v20:5.\n[42] S. Miles, P. Groth, S. Munroe, S. Jiang, T. Assandri, L. Moreau,\nExtracting causal graphs from an open provenance data model,\nConcurr. Comput. : Pract. Exper. 20 (5) (2008) 577\u2013586.\ndoi:http:\/\/dx.doi.org\/10.1002\/cpe.v20:5.\n[43] J. Golbeck, J. Hendler, A semantic web approach to the provenance chal-\nlenge, Concurrency and Computation: Practice and Experience 20 (5)\n(2008) 431\u2013439. doi:http:\/\/dx.doi.org\/10.1002\/cpe.v20:5.\n[44] I. Altintas, O. Barney, E. Jaeger-Frank, Provenance collection support in\nthe kepler scientific workflow system, Provenance and Annotation of Data\n(2006) 118\u2013132doi:10.1007\/11890850 14.\n[45] S. Miles, S. Munroe, M. Luck, L. Moreau, Modelling the prove-\nnance of data in autonomous systems, in: AAMAS \u201907: Proceed-\nings of the 6th international joint conference on Autonomous agents\nand multiagent systems, ACM, New York, NY, USA, 2007, pp. 1\u20138.\ndoi:http:\/\/doi.acm.org\/10.1145\/1329125.1329185.\n[46] J. R. Searle, The intentionality of intention and action, Cognitive Science\n1 (4) (1980) 27\u201370.\n[47] M. Bratman, Intentions, Plans, and Practical Reason, Harvard University\nPress, 1987.\n[48] A. S. Rao, M. P. George\u21b5, Bdi-agents: from theory to practice, in: Pro-\nceedings of the First Intl. Conference on Multiagent Systems, San Fran-\ncisco,, 1995.\n[49] C. A. Goble, D. C. De Roure, myexperiment: Social networking for\nworkflow-using e-scientists, in: WORKS \u201907: Proceedings of the 2nd\nworkshop on Workflows in support of large-scale science, ACM, New\nYork, NY, USA, 2007, pp. 1\u20132. doi:10.1145\/1273360.1273361.\nURL http:\/\/dx.doi.org\/10.1145\/1273360.1273361\n[50] A. Goderis, D. D. Roure, C. Goble, J. Bhagat, D. Cruickshank, P. Fisher,\nD. Michaelides, F. Tanoh, Discovering scientific workflows: The myex-\nperiment benchmarks, Tech. rep., School of Electronics and Computer\nScience, University of Southampton (April 2008).\nURL http:\/\/eprints.ecs.soton.ac.uk\/15662\/\n[51] W. Michener, J. Beach, S. Bowers, L. Downey, M. Jones, B. Luda\u00a8scher,\nD. Pennington, A. Rajasekar, S. Romanello, M. Schildhauer, D. Vieglais,\nJ. Zhang, Data integration and workflow solutions for ecology, Data Inte-\ngration in the Life Sciences (2005) 321\u2013324.\n[52] K. Anyanwu, A. Maduko, A. Sheth, Sparq2l: Towards sup-\nport for subgraph extraction queries in rdf databases, in: WWW\n\u201907: Proceedings of the 16th international conference on World\nWide Web, ACM, New York, NY, USA, 2007, pp. 797\u2013806.\ndoi:http:\/\/doi.acm.org\/10.1145\/1242572.1242680.\n[53] T. Vitvar, A. Mocan, M. Kerrigan, M. Zaremba, M. Zaremba, M. Moran,\nE. Cimpian, T. Haselwanter, D. Fensel, Semantically-enabled service\noriented architecture : concepts, technology and application, Ser-\nvice Oriented Computing and Applications 1 (2) (2007) 129\u2013154.\ndoi:10.1007\/s11761-007-0009-9.\n[54] F. Hielkema, P. Edwards, C. Mellish, J. Farrington, A flexible interface\nto community-driven metadata, in: Proceedings of the eSocial Science\nconference 2007, Ann Arbor, Michigan 2007, 2007.\n[55] J. Futrelle, J. Myers, Tracking provenance semantics in heterogeneous\nexecution systems., Concurrency and Computation: Practice and Experi-\nence 20 (5) (2008) 555\u2013564.\n25\nAction\n = \nruleml:body\nWasBasedOn\n<COLLECTION>\nDecision\nWasMadeBy\nWasBasedOn\nWasInfluencedBy\nWasInfluencedBy\nWorkflow \nAction\nsupportsAction*\nConstraint Goal\nPre Condition \n= \nruleml:head\nShaped* Shaped*\nhasPreCondition hasPreCondition\nswrl:Atom\n<COLLECTION>\nruleml:imp\nWasDrivenBy*\nIntentwasSatisfiedOn*\nrole:service\nCausalRelation\nWorkflow \nState\nopm:Account\nopm:Process\nrole:input\nWasGeneratedBy\nrole:output\nbelongsToAccount*\nOPM OWL \nEntity\nIntent\nis-a\nproperty\nWorkflow \nExperiment\nComputational \nResource\nSI  Agent\nWorkflow \nEngine\nWasControlledBy*\nopm:Artifact\nWasControlledBy*\nopm:AgentUsed\nrole:Service\nbelongsToAccount*\n100g\nButter\n2 eggs\n100g\nSugar\n100g\nFlour\nBake Cake\nwasGeneratedBy(cake)\nJohn\nwasControlledBy(cook)\nused(flour)\nused(butter)\nused(sugar)\nused(eggs)\n20g\nFlour\nused(flour)\n100g\nButter\n2 eggs\n100g\nSugar\n100g\nFlour\nCake\nJohn\nIntentwasDrivenBy() shaped()\nAdd more \nflour\nwasMadeBy()\nwasBasedOn()\n\"the mix must have an \nhydration level between \n50% and 60%\"\nBlend Cake Mix Add Flour to Mix Cake Mix Bake\nwasControlledBy(cook)\n20g\nFlour\nwasInfluencedBy()\n\"bake a cake of an \nacceptable quality\"\nA P\nused()\nA\nwasGeneratedBy()\nDecision\nwasInfluencedBy() mayHaveBeenInfluencedBy()\nA P\nused()\nA\nwasGeneratedBy()\nAg\nwasControlledBy()\nIntentwasDrivenBy()\nshaped()\nshaped()\nDecision\nwasMadeBy()\nwasBasedOn()\nwasInfluencedBy()\nGoal\nConstraint\nSocial Simulation ProvenanceGeneral Provenance\nOPM Provenance\nArtifact\nProcess\nRole\nCausalRelation\nAgent\nhasCause\nhasEffect\nhasRole\nArtifact Process\nSimulation \nEnvironment \nState\nPararameters \nExploration\nText File\nParameter \nFile\nAccount\nbelongsToAccount*\nhasOTime\nSimulation \nModel\nArtifact Process\nImage\nQuestionnaire\nInterviewText File\nOTime\noverlaps*\nbelongsToAccount*\nbelongsToAccount*\nOPM OWL \nEntity\nSpecialised \nProvenance \nEntities\nis-a\nproperty\nhasCause\nhasEffect\n"}