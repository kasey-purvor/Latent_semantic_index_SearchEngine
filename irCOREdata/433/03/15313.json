{"doi":"10.1007\/s00163-010-0094-1","coreId":"15313","oai":"oai:dro.dur.ac.uk.OAI2:7748","identifiers":["oai:dro.dur.ac.uk.OAI2:7748","10.1007\/s00163-010-0094-1"],"title":"Challenges to Bayesian decision support using morphological matrices for design : empirical evidence.","authors":["Matthews, P.C."],"enrichments":{"references":[{"id":798710,"title":"A Bayesian support tool for morphological design,","authors":[],"date":"2008","doi":null,"raw":null,"cites":null},{"id":798713,"title":"A domain knowledge based search advisor for design problem solving environments,","authors":[],"date":"2002","doi":null,"raw":null,"cites":null},{"id":791743,"title":"A probabilistic reasoningbased decision support system for selection of remediation technologies for petroleumcontaminated sites,","authors":[],"date":"2006","doi":"10.1016\/j.eswa.2005.07.038","raw":null,"cites":null},{"id":798718,"title":"A theory of inferred causation,","authors":[],"date":"1991","doi":null,"raw":null,"cites":null},{"id":798714,"title":"An engineering design methodology with multistage Bayesian surrogates and optimal sampling,","authors":[],"date":"1996","doi":null,"raw":null,"cites":null},{"id":810787,"title":"Automated functional design of engineering systems,","authors":[],"date":"2002","doi":"10.1007\/s001700200048","raw":null,"cites":null},{"id":798709,"title":"Bayesian networks for design: A stochastic design search method,","authors":[],"date":"2006","doi":null,"raw":null,"cites":null},{"id":798715,"title":"Bayesian surrogates applied to conceptual stages of the engineering design process,","authors":[],"date":"2003","doi":null,"raw":null,"cites":null},{"id":791748,"title":"Case-based reasoning in design,","authors":[],"date":"1997","doi":null,"raw":null,"cites":null},{"id":798717,"title":"Causal diagrams for empirical research,","authors":[],"date":"1995","doi":null,"raw":null,"cites":null},{"id":798712,"title":"Decision support for conceptual bridge design,","authors":[],"date":"1997","doi":null,"raw":null,"cites":null},{"id":791744,"title":"Development of a design support tool for fluid power system design,","authors":[],"date":"2001","doi":"10.1080\/09544820110041155","raw":null,"cites":null},{"id":810786,"title":"Difficulties with the novices\u2019 comprehension of the computer aided design (CAD) interface: Understanding visual representations of CAD tools,","authors":[],"date":"2003","doi":"10.1080\/0954482031000091491","raw":null,"cites":null},{"id":791740,"title":"Eliciting knowledge and transferring it effectively to a knowledge-based system,","authors":[],"date":"1993","doi":"10.1109\/69.204087","raw":null,"cites":null},{"id":798716,"title":"Engineering Design: A Systematic Approach, second edn, Springer-Verlag London.","authors":[],"date":"1996","doi":null,"raw":null,"cites":null},{"id":791745,"title":"Extending the usability heuristics fir desugb abd evaluation: Lead, follow get out the way,","authors":[],"date":"2002","doi":"10.1080\/10447318.2002.9669129","raw":null,"cites":null},{"id":791747,"title":"Generating the design-performance space via simulation and machine learning,","authors":[],"date":"2004","doi":null,"raw":null,"cites":null},{"id":798711,"title":"Learning inexpensive parametric design models using an augmented genetic programming technique,","authors":[],"date":"2006","doi":null,"raw":null,"cites":null},{"id":791741,"title":"Multidisciplinary grammars supporting design optimization of buildings,","authors":[],"date":"2008","doi":"10.1007\/s00163-007-0038-6","raw":null,"cites":null},{"id":810788,"title":"SOS \u2014 subjective objective system for generating optimal product concepts,","authors":[],"date":"2005","doi":"10.1016\/j.destud.2004.12.001","raw":null,"cites":null},{"id":791746,"title":"Supporting the cognitive process of user interface design with resusable design cases,","authors":[],"date":"2005","doi":"10.1016\/j.ijhcs.2004.12.001","raw":null,"cites":null},{"id":810789,"title":"The morphological approach to discovery, invention, research and construction,","authors":[],"date":"1967","doi":"10.1126\/science.163.3873.1317","raw":null,"cites":null},{"id":791749,"title":"Use of kriging models to approximate deterministic computer models,","authors":[],"date":"2005","doi":"10.2514\/1.8650","raw":null,"cites":null},{"id":791742,"title":"When a better interface and easy navigation aren\u2019t enough: Examining the information architecture in a law enforcement agency,","authors":[],"date":"2002","doi":"10.1002\/asi.10092","raw":null,"cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2011-01-01","abstract":"A novel Bayesian design support tool is empirically investigated for its potential to support the early design stages. The design support tool provides dynamic guidance with the use of morphological design matrices during the conceptual or preliminary design stages. This paper tests the appropriateness of adopting a stochastic approach for supporting the early design phase. The rationale for the stochastic approach is based on the uncertain nature of the design during this part of the design process. The support tool is based on Bayesian belief networks (BBNs) and uses a simple but effective information content\u2013based metric to learn or induce the model structure. The dynamically interactive tool is assessed with two empirical trials. First, the laboratory-based trial with novice designers illustrates a novel emergent design search methodology. Second, the industrial-based trial with expert designers illustrates the hurdles that are faced when deploying a design support tool in a highly pressurised industrial environment. The conclusion from these trials is that there is a need for designers to better understand the stochastic methodology for them to both be able to interpret and trust the BBN model of the design domain. Further, there is a need for a lightweight domain-specific front end interface is needed to enable a better fit between the generic support tool and the domain-specific design process and associated tools","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/15313.pdf","fullTextIdentifier":"http:\/\/dro.dur.ac.uk\/7748\/1\/7748.pdf","pdfHashValue":"0301b803ddd47858a5d4c1171a3e19a18673e7fd","publisher":"Springer","rawRecordXml":"<record><header><identifier>\n  \n    \n      oai:dro.dur.ac.uk.OAI2:7748<\/identifier><datestamp>\n      2011-01-12T10:37:19Z<\/datestamp><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n    \n      \n        Challenges to Bayesian decision support using morphological matrices for design : empirical evidence.<\/dc:title><dc:creator>\n        Matthews, P.C. <\/dc:creator><dc:description>\n        A novel Bayesian design support tool is empirically investigated for its potential to support the early design stages. The design support tool provides dynamic guidance with the use of morphological design matrices during the conceptual or preliminary design stages. This paper tests the appropriateness of adopting a stochastic approach for supporting the early design phase. The rationale for the stochastic approach is based on the uncertain nature of the design during this part of the design process. The support tool is based on Bayesian belief networks (BBNs) and uses a simple but effective information content\u2013based metric to learn or induce the model structure. The dynamically interactive tool is assessed with two empirical trials. First, the laboratory-based trial with novice designers illustrates a novel emergent design search methodology. Second, the industrial-based trial with expert designers illustrates the hurdles that are faced when deploying a design support tool in a highly pressurised industrial environment. The conclusion from these trials is that there is a need for designers to better understand the stochastic methodology for them to both be able to interpret and trust the BBN model of the design domain. Further, there is a need for a lightweight domain-specific front end interface is needed to enable a better fit between the generic support tool and the domain-specific design process and associated tools.<\/dc:description><dc:subject>\n        Bayesian belief networks<\/dc:subject><dc:subject>\n         Conceptual design support<\/dc:subject><dc:subject>\n         Dynamic decision support<\/dc:subject><dc:subject>\n         Stochastic design modelling.<\/dc:subject><dc:publisher>\n        Springer<\/dc:publisher><dc:source>\n        Research in engineering design, 2011, Vol.22(1), pp.29-42 [Peer Reviewed Journal]<\/dc:source><dc:date>\n        2011-01-01<\/dc:date><dc:type>\n        Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:identifier>\n        dro:7748<\/dc:identifier><dc:identifier>\n        issn:0934-9839<\/dc:identifier><dc:identifier>\n        issn: 1435-6066<\/dc:identifier><dc:identifier>\n        doi:10.1007\/s00163-010-0094-1<\/dc:identifier><dc:identifier>\n        http:\/\/dro.dur.ac.uk\/7748\/<\/dc:identifier><dc:identifier>\n        http:\/\/dx.doi.org\/10.1007\/s00163-010-0094-1<\/dc:identifier><dc:format>\n        application\/pdf<\/dc:format><dc:identifier>\n        http:\/\/dro.dur.ac.uk\/7748\/1\/7748.pdf<\/dc:identifier><dc:rights>\n        The original publication is available at www.springerlink.com\\ud\n<\/dc:rights><dc:accessRights>\n        info:en-repo\/semantics\/openAccess<\/dc:accessRights><\/oai_dc:dc><\/metadata><\/record>","journals":[{"title":null,"identifiers":[" 1435-6066","issn:0934-9839","0934-9839","issn: 1435-6066"]}],"language":{"code":"en","id":9,"name":"English"},"relations":[],"year":2011,"topics":["Bayesian belief networks","Conceptual design support","Dynamic decision support","Stochastic design modelling."],"subject":["Article","PeerReviewed"],"fullText":"Durham Research Online\nDeposited in DRO:\n12 January 2011\nVersion of attached file:\nAccepted Version\nPeer-review status of attached file:\nPeer-reviewed\nCitation for published item:\nMatthews, P.C. (2011) \u2019Challenges to Bayesian decision support using morphological matrices for design :\nempirical evidence.\u2019, Research in engineering design., 22 (1). pp. 29-42.\nFurther information on publisher\u2019s website:\nhttp:\/\/dx.doi.org\/10.1007\/s00163-010-0094-1\nPublisher\u2019s copyright statement:\nThe original publication is available at www.springerlink.com\nAdditional information:\nUse policy\nThe full-text may be used and\/or reproduced, and given to third parties in any format or medium, without prior permission or charge, for\npersonal research or study, educational, or not-for-profit purposes provided that:\n\u2022 a full bibliographic reference is made to the original source\n\u2022 a link is made to the metadata record in DRO\n\u2022 the full-text is not changed in any way\nThe full-text must not be sold in any format or medium without the formal permission of the copyright holders.\nPlease consult the full DRO policy for further details.\nDurham University Library, Stockton Road, Durham DH1 3LY, United Kingdom\nTel : +44 (0)191 334 3042 \u2014 Fax : +44 (0)191 334 2971\nhttp:\/\/dro.dur.ac.uk\nChallenges to Bayesian decision support using morphological\nmatrices for design: Empirical evidence\nPeter C Matthews\u2217\nJuly 2010\nAbstract\nA novel Bayesian design support tool is empiri-\ncally investigated for its potential to support the\nearly design stages. The design support tool pro-\nvides dynamic guidance with the use of morpho-\nlogical design matrices during the conceptual or\npreliminary design stages. This paper tests the\nappropriateness of adopting a stochastic approach\nfor supporting the early design phase. The ratio-\nnale for the stochastic approach is based on the\nuncertain nature of the design during this part of\nthe design process. The support tool is based on\nBayesian Belief Networks (BBNs), and uses a sim-\nple but effective information content based met-\nric to learn or induce the model structure. The\ndynamically interactive tool is assessed with two\nempirical trials. First, the laboratory based trial\nwith novice designers illustrates a novel emergent\ndesign search methodology. Second, the indus-\ntrial based trial with expert designers illustrates\nthe hurdles that are faced when deploying a de-\nsign support tool in a highly pressurised industrial\nenvironment. The conclusion from these trials is\nthat there is a need for designers to better under-\nstand the stochastic methodology for them to both\nbe able to interpret and trust the BBN model of\nthe design domain. Further, there is need for a\nlightweight domain specific front end interface is\nneeded to enable a better fit between the generic\nsupport tool and the domain specific design pro-\ncess and associated tools.\n\u2217School of Engineering and Computing Sciences,\nDurham University DH1 3LE; phone +44 191\n334 2538; email: p.c.matthews@durham.ac.uk (corre-\nsponding author)\n1 Introduction\nThe fluid nature of the conceptual and pre-\nliminary design stages has hindered general\ndesign support tools. While there exist spe-\ncific support tools for certain design domains,\nthese have been constructed at considerable\nexpense due to the need to acquire and en-\ncode domain specific knowledge into the sup-\nport tool. A further issue with support tools\nfor the earlier phases of the design process\nis the inherent fluidity of the design at this\nend of the process. Specifically, it is difficult\nto provide objective metrics to measure the\nquality of design concepts. As design con-\ncepts still require significant effort transform\ninto the final product, there is the potential\nfor a \u2018good\u2019 concept to be poorly detailed and\nthus result in a poor final product and vice\nversa: a \u2018poor\u2019 concept can be carefuly devel-\noped through the detailing phase to result in\na \u2018good\u2019 final product. The terms \u2018good\u2019 and\n\u2018poor\u2019 in this case are context dependent, and\ncover such criteria as technical quality, com-\nmercial success, and aesthetics. However, in\ngeneral good concepts are more readily trans-\nformed into good final products whereas poor\nconcepts require greater effort to ensure a sim-\nilar final high quality level.\nFor this paper, conceptual design will be\ndefined as the point in the design process when\nthe designers have transformed the initial prod-\nuct specification to a form that defines the\nnature of all key elements of the final prod-\nuct (Pahl and Beitz, 1996; Cross, 1994; Ulrich\nand Eppinger, 2000). This paper presents a\n1\nBayesian approach to supporting the decision\nprocess in the conceptual design stage. Cen-\ntral to implementing the Bayesian approach is\nthe need to acquire good stochastic informa-\ntion about the design domain. This is achieved\nthrough the use of databases of prior design\nexamples. These databases of conceptual de-\nsigns require defining, and hence there is a\nneed to define conceptual design. In this con-\ntext, conceptual design will be considered in a\nmorphological sense: the design will be struc-\ntured into a set of functional and character-\nistic variables (Pahl and Beitz, 1996; Hollins\nand Pugh, 1990). Against each of these vari-\nables, a designer will have to select a concep-\ntual solution. The combination of all these\nsolutions then generates the final design con-\ncept. While this approach has traditionally\nbeen used to represent different solution cat-\negories, in this work this will be simply ex-\ntended to also include the representation of\nnumerical design parameter values as well, for\nexample the overall wing span of an aircraft.\nThis representation enables this methodology\nto be used in design domains where some as-\npects of the design require such values. Ul-\ntimately, generating \u2018good\u2019 design using this\napproach relies on the designer understanding\nthe interaction between the design variables.\nThere have been other attempts at sup-\nporting the conceptual design stage. Most of\nthese attempts implement a rule based sys-\ntem, that is specific domain knowledge is en-\ncoded within the support system. A typical\nexample of such a support system is given\nby Zhang et al. (2002). This system takes\na functional\/behaviour based approach. The\nsystem incorporates a database for matching\ndesired behaviours to known functions. How-\never, the rules required to encode these func-\ntions are complex, although no specific details\nare given within the paper to the cost associ-\nated with encoding the rules. Design concepts\nare then scored according to their simplicity\nas determined by the part count required to\ninstantiate a given concept. It then remains\nthe designer\u2019s decision which concept to se-\nlect. Another example of a rule based system\nis provided by Geyer (2008). This is a more\ncomplex approach based on shape grammar.\nThe shape grammar provides a framework for\nbeing able to decompose and subsequently re-\ncompose a design while maintaining function-\nality. These actions are based on a set of\npredetermined rules. By applying these ac-\ntions, a set of design alternatives can be au-\ntomatically created and presented to the de-\nsigner for final decision. In conclusion, while\nrule based systems are able to automatically\nperform design search, they present the de-\nsigner with a small set of fully determined de-\nsign alternatives from which one must be se-\nlected. Although the designer has flexibility\nin which alternative to select, the presented\nalternatives are rigid. A further example of\nconceptual design support is given by Ziv-Av\nand Reich (2005) which provides a means for\ngenerating optimal concepts subject to the de-\nsigner\u2019s subjective objectives. This approach\ndecomposes the design problem to support the\ndesign search process. The designer is ulti-\nmately presented with a rank ordered set of\ndesign concepts to take further.\nIn contrast to a rule based approach, adopt-\ning a stochastic view of the design domain\nresults in the fluid nature of the early de-\nsign stages becomes relatively simple to rep-\nresent. As the underlying model is stochas-\ntic rather than rule based, multiple outcomes\nare natively represented. There are a num-\nber of important benefits to be gained from\nusing a stochastic view of the design domain\n(He et al., 2006). First, a stochastic approach\nnatively supports missing or imprecise input\ndata. This degree of uncertainty is common\nduring the conceptual design stage, as not\nall aspects of the design are likely to have\nbeen determined. Second, a stochastic ap-\nproach is able to perform inference under un-\ncertainty. Perfoming inference under uncer-\ntainty is much more challenging for rule based\nsystems, as the uncertainty of the input data\nmeans that the rule based systems are unable\nto trigger production rules and thereby pro-\n2\nvide useful feedback to the designer. Finally,\nthe stochastic approach is also able to provide\nstochastic inference. This inference supports\nmultiple outcomes, which is a significant dif-\nference from the rule based approach. Under\na rule based approach the outcome is deter-\nministic, that is given the input there is a\nunique output. Where alternative solutions\nare provided, these tend to be as a result of a\nsearch process and again are deterministically\nscored. However, under a stochastic approach\nmultiple alternatives can be presented for a\ngiven input. These alternative outcomes are\nthen presented with an associated probabil-\nity for each outcome. Therefore, at any point\nin the early design process, the range of po-\ntential outcomes of any decision can be rep-\nresented using probability distribution func-\ntions (PDFs). The most likely outcome is\nrepresented by taking the maximum value of\nthe PDF, but the designer is clearly presented\nwith the other potential outcomes. Assuming\nthat the PDFs represent the probability of an\noutcome being present in the final design, a\ndesigner can get a feel of the likelihood of a\nsuccessful final design based on the decisions\nmade. Therefore, the stochastic support tool\neffectively suggests that the designer should\nfollow the path of greatest probability but al-\nlows other paths to be explored should the de-\nsigner wish to. By following a low probability\npath, the designer understands that greater\ncare must be taken later in the design pro-\ncess, as this path is one that has not been\nsuccessfully followed previously. This paper\npresents two empirical trials that seek to test\nif these benefits are realisable.\nThis paper introduces a stochastic design\nsupport tool based on Bayesian Belief Net-\nworks (BBNs). A brief overview of the un-\nderlying theory will be presented (Section 3).\nGreater attention is given to the empirical\nassessment of this design support tool (Sec-\ntion 4). The empirical work leads to a critical\ndiscussion on the nature of developing and im-\nplementing generic design support tools (Sec-\ntion 5).\n2 Background\nDesign support tools have been an active area\nfor some time. Research in the development of\nsupport tools tends to be focussed on support-\ning one type of design activity or a particular\ndesign domain. Chong et al. (2009) report\nthat a good design theory is required prior\nto any attempt is made on providing com-\nputational design support. To underpin the\nstochastic support tool described in this pa-\nper, the morphological matrix design frame-\nwork is adopted (Pahl and Beitz, 1996). The\nmorphological matrix provides flexible support,\nyet without requiring any rule base to be put\ninto place prior to using it. The support tool\nthat is presented in this paper has the poten-\ntial to provide computational support for effi-\ncient use of the morphological matrix during\nthe conceptual design phase.\nAn important aspect of conceptual design\nis enabling the designer to fully search the de-\nsign space. One flexible method of support-\ning this is the use of morphological matrices.\nWhile this approach enables the designer to\nvisualise and construct a very wide variety of\npotential designs, it provides no support in\nproviding feedback to the designer about the\nlikelihood of a particular combination (or par-\ntial combination) resulting in a successful de-\nsign. This section will consider previous de-\nsign support tools, and what contexts these\ndifferent tools operate within. These then in-\nform the support method for morphological\ndesign that are developed in Section 3.\nTo be able to successfully develop a design\nsupport tool, there are four aspects that need\nto be adressed: (1) morphological matrix def-\ninition, (2) design model structure, (3) knowl-\nedge acquisition, and (4) interfacing the model\nwith the designer.\n2.1 Morphological Matrix\nOne common method for spanning and ex-\nploring the conceptual design space is the mor-\nphological matrix (Zwicky, 1967; Hollins and\n3\nPugh, 1990; Pahl and Beitz, 1996). The de-\nsign space is spanned by the set of functional\nmodules of the product, that is the set of\nindependent functions or properties that are\nexpected of the product. For example, con-\nsider the (very simplified) design of an air-\ncraft. An aircraft can be described by the\nfollowing: the primary construction material,\nthe propulsion system, the capacity, and the\nwing geometry. Against each function, there\nare a number of possible solutions. Consid-\nering the propulsion system function, there\nare four possible soltions: jet, turbo-propellor,\npiston-based propellor, and none (in the case\nof a glider). Figure 1 expands this aircraft ex-\nample, providing a more complete functional\nbreakdown of the conceptual design space. The\ndesign space can be explored by selecting one\nsolution against each functional module of the\nproduct. By selecting a functional solution for\neach functional module, a designer can then\nconstruct a full design concept. Figure 2 il-\nlustrates four separate concepts that can be\nextracted from this particular morphological\nmatrix example. Finally, it is worth noting\nthat there is no need to restrict the solutions\nto discrete nominal categories: it is possible\nto also have continuous solutions, for exam-\nple the capacity could have been represented\nby the number of passengers using the integer\nrange 1\u20131000.\nThe morphological matrix provides a means\nfor visualising the conceptual design space and\ncomposing potential design concepts. How-\never, there are a number of challenges associ-\nated with this approach. The first is the ex-\nplosion in number of potential concepts that\ncan be created from the matrix. As in the-\nory the selection of each function solution is\nindependent of all other selected function so-\nlutions, the theoretical total number of con-\ncepts that exist is given by the product of the\nnumber of solutions for each function. In the\ncase of the aircraft example in Figure 1, there\nare 4 \u00d7 4 \u00d7 4 \u00d7 3 = 192 different concepts.\nA significant number of these will be, if not\nphysically impossible, highly unlikely, for ex-\nample any combination of a cloth body and\na jet engine. Clearly, the choice of function\nsolutions are not independent of each other.\nThis leads to the second challenge: what is\nthe best order in which to determine function\nsolutions? Depending on the design specifica-\ntion, a rigid ordering is unlikely to be help-\nful. Different design specification will pre-\ndetermine some function solutions and there-\nfore the designer will set the remaining func-\ntion solutions in a different order. Finally,\nas the morphological matrix is a static rep-\nresentation, no guidance is provided on the\nsuitability of different function combinations.\nInstead, a designer can only rely on their in-\ntuition and tacit knowledge about the domain\nwhen combining function solutions.\n2.2 Design model structure\nThe design model structure defines not only\nhow the model is represented, but also de-\ntermines to a large extent how the computa-\ntional support tool operates. Historically, the\ndesign models and support tools adopted a\ncase based approach. Prior designs are en-\ncoded and entered into a database so that\nwhen a designer comes to create a new design,\nprevious similar designs are presented (Ma-\nher and Go\u00b4mez de Silva Garza, 1997; Rivard\nand Fenves, 2000). An extension of the case\nbased approach is the knowledge based de-\nsign support. With this system, engineering\nknowledge is stored within the design support\nsystem. This knowledge is formatted as a set\nof rules that can be applied to the evolving\ndesign. For example, Moore et al. (1997) use\nan object oriented representation of both the\ndesign and knowledge base to provide support\nin the form of design critique. When the sys-\ntem notes that a designer is either potentially\nin error or the system identifies a potential\nalternative solution, this is brought to the de-\nsigner\u2019s attention. Scwabacher et al. (1998)\nuse a machine learning approach to support\na designer in setting up an optimiser, along\nwith predicting design goals. On a similar\n4\nSolution\nMaterial\nPropulsion\nCapacity\nWing\nGeometry\nJet Turbo\u2212prop Propeller (none)\nCarbon Fibre Aluminium Fibreglass Cloth\nSingle Small Medium Large\nMedium\nChord\nThick\nChord\nFunction\nThin Chord\nFigure 1: A morphological matrix for a conceptual aircraft design space.\nnote, Ong and Keane (2002) provide a sup-\nport method that advises a designer on suit-\nable optimisers to use for a given design prob-\nlem. This support was provided by represent-\ning the optimisers according to their charac-\nteristics, thus forming a knowledge base about\ndesign optimisers.\nIn addition to case and knowledge based\nrepresentations, stochastic approaches for rep-\nresenting the design domain have also been\nused. An early report of using a Bayesian ap-\nproach described modelling an electronic chip\ndesign domain (Osio and Amon, 1996). Com-\nputer simulations were used to generate train-\ning data to create the probability distribu-\ntions, and this enabled a more cost effective\nmodelling of the design domain. More re-\ncently, Simpson et al. (2001) and Chen et al.\n(2006) discuss the creation of statistical meta-\nmodels of design domains. These focus on the\ntwo aspects of meta-modelling, namely the se-\nlection of a suitable statistical model class and\nthen the fitting of the model to the empiri-\ncal evidence. One of the benefits of using a\nstochastic approach is that it becomes feasi-\nble to model non-deterministic aspects of the\ndomain. There are a number of examples of\nusing stochastic approaches to model domains\nwith strong \u2018external\u2019 events, such as flood\nrisk (Apel et al., 2006) or subjective evalua-\ntion and the resulting behaviour as exhibited\nby the spreading of subjective cinema evalua-\ntions by the word of mouth (Eliashberg et al.,\n2000).\nThe robustness of a design represents a\nparticularly interesting non-deterministic char-\nacteristic of a design that can be represented\nstochastically. Robustness has been stochasti-\ncally considered in the context of uncertainty\nin planning (Sahinidis, 2004) and in change\npropagation (Clarkson et al., 2004). There\nhas also been work in categorising risks and\nusing this to indicate promising design direc-\ntions (Pons and Raine, 2004, 2005). Non-\nstochastic approaches to risk modelling include\ninducing regression trees to identify pareto-\noptimal designs (Forouraghi, 1999) and using\nutility function based approaches for risk mit-\nigation based on designer preferences (Fernan-\ndez et al., 2005).\n2.3 Knowledge acquisition\nGiven a model of a design domain, this is of\nlittle use beyond design representation with-\nout any knowledge about how different as-\npects of the design domain interact with each\nother. This knowledge must be acquired: ei-\nther deduced from physical laws, from design-\ners in person or induced from analysis of pre-\nvious designs.\n5\nSolution\nMaterial\nPropulsion\nCapacity\nWing\nGeometry\nJet Turbo\u2212prop Propeller (none)\nCarbon Fibre Aluminium Fibreglass Cloth\nSingle Small Medium Large\nMedium\nChord\nThick\nChord\nFunction\nThin Chord\nCommercial\nJet\nLight\nAircraft\nMicrolight Glider\nFigure 2: Four aircraft concepts derived from the morphological matrix.\nThis knowledge acquisition is a known bot-\ntleneck for developing expert systems (Gaines\nand Shaw, 1993), and by extension design sup-\nport tools. Methodologies have been devel-\noped to acquire design knowledge from do-\nmain experts, but this tends to be highly tai-\nlored to the particular domain under review\n(Hughes et al., 2001). A more automated ap-\nproach is to use machine learning techniques\nto support the knowledge acquisition process.\nThis typically involves analysing a set of de-\nsign examples to induce a domain model (Pot-\nter et al., 2001). There are a number of ex-\namples and approaches to this methodology.\nPacheco et al. (2003) use a covariance based\nmethod to generate a rough surrogate model\nthat can provide a designer with a basic un-\nderstanding of the domain relationships. Mah-\ndavi and Gurtekin (2004) use a neural net-\nwork to generate a design performance space\nthat can then be visualised by a designer to\nprovide greater insight into the design per-\nformance space, thus enabling a designer to\nexplore the relationships between sets of de-\nsign variables. Matthews et al. (2006) use an\naugmented genetic programming method to\nidentify a set of relationships that provide an\nalgebraic description of the relationships be-\ntween the design variables.\n2.4 Designer interaction\nThe final aspect to consider when developing\na design support tool is the interface between\nthe design model and the designer. This rep-\nresents the most challenging part of the de-\nsign support tool, as a good user interface\nmust consider the fundamental human func-\ntions and tasks related to the design domain\n(Rinkus et al., 2005). There is relatively little\ntechnical literature on this topic. Most of the\nliterature concerns generic user interface de-\nvelopment. The research tends to focus on\ngeneral user interface development method-\nologies, for example best practises (Szewczyk,\n2003; Resnick and Vaughan, 2006) and prac-\ntical reports (Kim and Yoon, 2005).\nThe research in this paper does not ex-\ntensively consider the user interface, beyond\nusing software development and implementa-\ntion tools that ensure wide access to support\nactive designers. Further details of the user\ninterface are presented in Matthews (2008).\n6\n2.5 Summary\nFrom the literature, there are four key areas\nrelevant to this research. The first two re-\nlate to the mode of knowledge representation:\nrule based versus stochastic based. These two\nmodes compete, and this research seeks to\nempirically demonstrate the potential bene-\nfits of the stochastic approach. The argument\nagainst the rule based approach is two-fold.\nFirstly, there is the complexity of the rules re-\nquired to populate a useful rule based system.\nSecondly, there is the rigidity of the applica-\ntion of the rules. The designer is constrained\nto apply the rules as presented, rather than to\nbe able to slightly modify the outcome to one\nthat the designer believes to be more appro-\npriate. These issues are overcome through the\nadoption of a stochastic approach. The de-\nsigner gains flexibility, and is informed through\nthe related probability values of the chance of\nsuccess.\nThe third area relevant to this research\nis the design domain knowledge acquisition.\nThis typically is a bottleneck area, and at-\ntempts have been made to use machine learn-\ning techniques to streamline this area. Fi-\nnally, the fourth area is the interface between\nthe design support system and the designer.\nThis area is unfortunately one with the least\nliterature specific to design support.\n3 Stochastic modelling approach\nThe stochastic approach to modelling an un-\ncertain domain enables a natural representa-\ntion of the fluid characteristics inherent with\nuncertainty. This is in contrast to rule based\nmodelling approaches, where outcomes are de-\nterministic. The design concepts generated\nusing morphological matrices require further\ndetailing and hence contain uncertainty. There\nare ample opportunities to modify these de-\nsigns further downstream, albeit less signifi-\ncantly than is possible during the earlier stages.\nThe challenge of creating a suitably repre-\nsentative domain model remains. The model\nMachine Learning\n(+ hand edit if needed)\nFigure 3: The overall machine learning pro-\ncess: the design database is used to induce a\nBayesian Belief Network representing the de-\nsign variable causal structure.\nmust represent the relationships between the\nvarious design variables, specifically how changes\nto one variable are likely to affect other as-\npects of the design. There are two main ap-\nproaches to obtaining these relationships: ac-\nquiring the knowledge directly from domain\nexperts or analysing design databases using\nmachine learning techniques. Due to the rel-\natively high cost of the knowledge acquisition\nfrom domain experts, this research focuses on\ninvestigating the use of machine learning al-\ngorithms.\nBayesian Belief Networks (BBNs) have been\nselected to represent the domain model, as\nthese provide a simple and relatively intuitive\nperspective on the domain. These models are\ncreated using an information content based\nmetric. Figure 3 illustrates the machine learn-\ning process for creating the BBNs. In larger\ndomains, even BBNs can become complex.\nTherefore, an additional aspect of this research\nis to investigate the potential of breaking these\nnetworks into smaller domain sub-space mod-\nels that are more readily understood. Each of\nthese aspects is expanded on below.\n3.1 Bayesian Belief Networks for De-\nsign\nThe design space is encoded parametrically.\nThe functions from the morphological matrix\nthat span the design space define the param-\neters and the function solutions represent the\nvalues that each parameter takes under this\ndesign encoding scheme. These variables are\ninterpreted as \u2018observations\u2019 in the BBN sense.\nThe BBN is a graphical model, where the\n7\nnodes (design variables) are linked by directed\narcs. These directed arcs represent the causal\ndependencies between design variables. Where\na design variable is \u2018observed\u2019 (i.e. has a value\nassociated to it), it becomes possible to in-\nfer the likelihoods and\/or probabilities of the\nvalues that would be taken on by neighbour-\ning variables. Figure 4 illustrates the process\nof using the BBN as part of the conceptual\ndesign process.\nA key difference with this approach to mod-\nelling the design space is that both design pa-\nrameters (aspects of the design that are di-\nrectly determined by the designer) and design\ncharacteristics (aspects of the design that are\nthe result of the designer\u2019s choices) are both\nrepresented as abstract design variables. The\napproach taken in this research removes this\ndistinction and allows the designer to spec-\nify either design parameters or characteristics\nat the outset. This is a powerful abstraction,\nas a designer is not constrained to first deter-\nmine the design parameters but can determine\nthe characteristics and then use the tool to\nbe provided with guidance on how to achieve\nthese design characteristics. This approach\nof removing the parameter\u2013characteristic or-\ndering is valid. Consider a hypothetical air-\ncraft design process: design parameters in-\nclude the wing geometry, the skin material,\nand the propulsion type. Design characteris-\ntics include the lift and drag coefficients for\nthe aircraft. The choice of material will affect\nthe drag coefficient which in turn will affect\nthe choice of wing geometry and propulsion\nsystem. If all the design parameters are con-\nsidered first as a group, this results in the need\nfor an iterative approach as the design char-\nacteristics that do not meet the specification\ncan only be affected by modifying the design\nparameters. This process is then repeated un-\ntil a successful design is achieved.\nThe stochastic nature of BBNs makes this\na highly flexible approach to modelling the\ndesign space. Conceptual design is by its na-\nture very fluid: any given design concept can\nbe detailed later in the design process in a\nnumber of different ways. This leads to the\nfollowing argument: a \u2018good\u2019 design concept\nhas a high probability of becoming a \u2018good\u2019\nfinal product, while a \u2018poor\u2019 design concept\nhas a low probability of becoming a \u2018good\u2019\nfinal product. The stochastic representation\nenables the opposite outcome in both events,\nhowever these are represented by accordingly\nlow probabilities. Further details of this illus-\ntration are provided by Matthews (2008).\n3.2 Information content based learn-\ning\nThere are two key aspects to the BBN: (1) the\nacquiring of the distribution functions and (2) the\ncreation of the variable network. It is assumed\nthat a database of prior designs is available.\nThis database is populated with the paramet-\nric and characteristic values taken from pre-\nvious designs, and could also include the re-\nsults of costly emprical and computational re-\nsults. Using this database, it is a relatively\ntrivial task to generate the conditional distri-\nbution function, given a network. The second\naspect, creation of the network representing\nthe causal relationships within the domain, is\na considerably more challenging task. Where\nno information about the causal ordering is\nknown, this is theoretically a very computa-\ntionally expensive task (Pearl and Verma, 1991;\nPearl, 1995). An alternative method is to ob-\ntain the network structure from domain ex-\nperts. While this is computationally much\nsimpler and does not require a design database,\nit does place a very large task on the domain\nexperts. As the number of design variables\nincreases, the amount of effort required by\nthe domain expert in considering possible re-\nlationships increases quadratically. Hence, for\nrealistic design domains, this is not an appeal-\ning method.\nA computationally more efficient approach\nhas been adopted based on the information\ncontent that would be contained in any poten-\ntial causal arc (Matthews, 2006, 2008). This\napproach is similar to that developed by Chen\n8\nConsider PDF\u2019s\nof unspecified \ndesign variables\nSelect next\ndesign variable\nUpdate design\nComplete\nDesign\nConcept\nIs\nthe design\ncomplete?\nYes\nNo\nDesign\nSpecification\nFigure 4: The design process using the BBN starts with the design specification being entered\ninto the BBN (filled nodes). The conceptual design is then iteratively completed by the\ndesigner, guided by the variable PDFs.\net al. (2002) which measures the conditional\nindependence between pairs of variables. Where\nthe causal ordering of the variables is not known\nin advance, they demonstrate that it is possi-\nble to learn a suitably accurate network com-\nplexity of O(n4) in terms of the number of\nvariables. The approach described in Matthews\n(2008) uses a greedy algorithm that learns\na network with complexity O(n2). This ap-\nproach uses the basic definition of conditional\nprobability:\nP(B = b |A = a) =\nP(B = b, A = a)\nP(A = a)\n(1)\nWhere the events, or variables, A and B are\nindependent, P(B, A) = P(B)P(A). There-\nfore, when A and B are independent, P(B|A) =\nP(B). By considering the difference between\nthe observed conditional and prior probabili-\nties taken from the design database, it is pos-\nsible to measure the information content that\nis contained within this conditional probabil-\nity distribution. Hence, the following infor-\nmation content metric is defined between vari-\nables A and B:\nI(A, B) = E[P(B |A)\u2212 P(B)]2 (2)\nWhere the variables are truly independent,\nthe measured difference will be zero, and hence\na zero information score will be returned. This\nindicates that there is nothing to be gained\nby including this arc. Where a large I value\nis returned, this indicates that the conditional\nprobability distribution contributes significantly\nto the domain knowledge and hence this arc\nshould be included. It is also worth noting\nthat this information metric is asymmetric,\nnamely I(A, B) 6= I(B, A). This is useful, as\nit provides an indication of the causal direc-\ntion of relationships within the network.\nThis information metric is measured for all\nvariable pairings in both directions. For each\nvariable, the arc with maximum information\ncontent either entering or leaving that vari-\nable is identified. These arcs form a set of\npartial models. Next, the two models that\nshare a variable and have the lowest total in-\nformation content are merged, to form a new\npartial model with three variables. This pro-\ncess is continued until all nodes are connected,\nresulting in a full model for the domain. The\nflowchart representing this process is given in\nFigure 5.\n4 Empirical work\nTo verify the effectiveness of a Bayesian design\nsupport tool, two empircal studies were un-\ndertaken. The two studies were largely com-\nplementary in their nature, rather than rein-\nforcing. The first used the support tool within\na laboratory setting, enabling a fine grain of\ncontrol of both the design domain and meth-\nods used by the designers. In this study, the\nuser interface and the representation of the\ndesign model was not under investigation. The\naim was to measure how well the BBN induc-\ntion algorithm was and how effective the de-\ncision support tool was when no alternative\nwas available. The second empirical study\nwas undertaken within an industrial setting.\nThis provided a real life design problem, three\ntimes larger than the laboratory based study\nin terms of number of design variables, with\n9\nMeasure pairwise\nI(A,B) for all A, B Partial models\nCombine models\nwith min info content\nSingle\nModel? Final BBN\nCompute info\nfor combined model\nYes\nNo\nFigure 5: Flowchart representing the greedy BBN learning algorithm.\nall the complexities and subtleties that this\nentails. This, however, was at the cost of\ncontrol over the experiment, and the results\nfrom this study were of a more subjective na-\nture. In this study the aim was to determine\nhow acceptable the BBN design domain rep-\nresentation was, from the perspective of do-\nmain experts. This provided a critique on the\nBayesian design domain representation and of\nthe effectiveness of the user interface.\nEach case followed the same process to in-\nduce a BBN. First, the design data was ac-\nquired and where necessary discretised. This\ndata was then processed by the structure learn-\ning algorithm to produce the BBN network.\nThis network was then imported into the de-\nsign support tool, for interactive use. At the\nsame time, a static hard copy of the BBN\nstructure was made available for designers to\nrefer to while using the tool. This provided\nthem with a representation of the causal re-\nlationship structure between the design vari-\nables, thereby enabling the designer to un-\nderstand how changes in variables would af-\nfect the probability distributions in other vari-\nables. Each case study was followed by an\nanalysis on the usability and usefulness of the\nsupport tool within each context.\n4.1 Laboratory based study\nThe laboratory based study used the \u2018Car De-\nsign\u2019 machine learning benchmarking database\nfrom the University of California at Irvine (Blake\nand Merz, 1998). Although this is an artifi-\ncially constructed database, it does represent\na good approximation to a real conceptual car\ndesign database. Additionally, the variable\nstructure is also known, thereby enabling a di-\nrect comparison between the induced network\nand the actual deterministic network. The\nscope of this paper presents the qualitative\naspects of this study that inform the specific\nchallenges of deploying a stochastic design de-\ncision support tool. An in-depth quantitative\nanalysis of this study alone is presented in\nMatthews (2008).\nThe car database contains a sample of 1728\nfully described designs. The design domain\nis defined by ten variables, of which six are\ndesign parameters (the target purchase price;\nthe expected maintenance cost; the designed\nsafety level; the number of doors; the number\nof passengers; and the volume of luggage that\ncan be carried) and the remaining four are de-\nsign characteristics (the overall cost of owner-\nship; the comfort level; the technology level;\nand the overall car acceptability). All the\nvariables are discrete, and hence this fully de-\nfines the domain\u2019s morphological matrix, and\na more detailed description of the variables\nis listed in Table 1. The original car design\ndatabase was constructed using a set of prede-\ntermined rules. The structure of these rules is\nprovided in Figure 6. This known rule struc-\nture makes it possible to evaluate the quality\nof the machine learnt domain model.\nThe car database was first loaded into Mat-\nlab and passed to the BBN learning algorithm.\nThis generated a network representing the causal\nlinks between the design variables. The algo-\nrithm identifies exactly as many arcs as there\nare design variables. This resulted in a non-\ntree structure. In a tree structure each node,\nwith the exception of the root node, should\nhave a single child. The structure that was\n10\nTable 1: Car design morphology table: variable names, abbreviations, and description. The\ndescriptions include the possible variable values. Design parameters are in lower case and the\ndesign characteristics are in upper case.\nName (abbreviation) Description\nbuying (buy) Purchase price for car (low, medium, high, very high)\nmaintenance (mnt) Expected maintenance cost for car (low, medium, high,\nvery high)\ndoors (drs) Number of doors on car (2, 3, 4, 5+)\npersons (pers) Number of passengers (2, 4, 5+)\nluggage (lug) Available luggage volume (small, medium, big)\nsafety (safe) Designed safety level (low, medium, high)\nCOMFORT (CMFT) Comfort level of car (unacceptable, acceptable, good,\nvery good)\nPRICE (PRC) Total cost of ownership (unacceptable, acceptable, good,\nvery good)\nTECHNOLOGY (TECH) Technology level of car (unacceptable, acceptable, good,\nvery good)\nCAR (CAR) Overall acceptability of car (unacceptable, acceptable,\ngood, very good)\nproduced by the learning algorithm had the\n\u2018safety\u2019 node linked to both the \u2018technology\u2019\nand \u2018car acceptability\u2019 nodes. By consider-\ning the information content of these two arcs\ncoming out of the safety node, the arc with the\nlower information content was deleted which\nin this case was the arc leading to \u2018car ac-\nceptability\u2019. The impact of this deletion is\nminor, as \u2018safety\u2019 is still related to \u2018car accept-\nability\u2019, albeit indirectly through the \u2018technol-\nogy\u2019 node. The resulting tree network that\nwas learnt from the dataset had an identical\ncausal structure to the underlying rule struc-\nture used to create original the design database,\nas illustrated in Figure 6. Subsequently, this\nnetwork was encoded in the Excel spreadsheet,\nalong with the design database.\nThe stochastic approach was compared against\na more \u2018traditional\u2019 approach to design. This\nrequired the designers to consider the design\ncharacteristics separately, without any infor-\nmation about feasibility of the design until the\ndesign had been completely specified. This\napproach was implemented using a similar in-\nterface to ensure that a fair comparison was\npossible between the Bayesian and traditional\ndesign approaches.\n4.1.1 Summary of the effects of Bayesian\ndesign\nThe car design case study provided in this sec-\ntion illustrates three key aspects of the stochas-\ntic design support tool. The first is that the\nmachine learning algorithm induces a suitably\ngood domain model from a set of prior design\nexamples. The algorithm produced a graph\nstructure with one arc too many for it to be a\ntree structure, as required for a BBN. A tree\nstructure is required, as the implementation\nof this code is only able to handle one input\narc per node. By using the information con-\ntent heuristic, it was possible to identify which\narc should be deleted and this resulted in the\nsame structure that generated the data in the\nfirst instance.\nThe second aspect of the stochastic sup-\nport tool is that the design search process\ncan begin with a partial design specification.\nThis was demonstrated by starting the de-\n11\nPurchase\nCost\nof Ownership\nTotal Cost\nCar\nAcceptability\nTechnology\nLevel\nLevel\nComfort\nPassengers\nMaintenance Safety Level\nNo of Doors Luggage vol\nFigure 6: Rule structure for the conceptual car domain.\nsign search with a specification on a subset\nof both design parameters and characteristics.\nThe interactive search tool then guided the\ndesign refinement process, variable by vari-\nable. For each variable, the various possible\nsettings were ordered according to the prob-\nability of a successful outcome. The designer\nis encouraged to follow this \u2018path of greatest\nlikelihood\u2019, but is not compelled to. The il-\nlustration of this search process thus provides\nevidence for the third key aspect, namely that\nthe design search heuristics lead to an efficient\nyet flexible design search path.\n4.1.2 Empirical comparison of the two\ndesign approaches\nThe stochastic and traditional approaches were\nempirically compared. This involved primar-\nily recording how designers used these two dif-\nferent approaches. For this experiment, un-\ndergraduate students were used as subjects.\nThese subjects had limited experience of de-\nsign, and were therefore open to exploring\nnew approaches. All subjects were given train-\ning in the design approach they were going to\nuse as well as how to use the design support\ntool interface. Throughout the design search\nprocess, observations were made on how each\ndesigner used their support tool. This obser-\nvation was primarily to evaluate the effective-\nness of the user interface. The full results are\nreported in Matthews (2008). The key points\nof this trail are summarised here, with a fo-\ncus on the benefits and challenges that were\nobserved.\nThe results of this trial were interesting\nin two ways: (1) there was not a statistically\nsignificant difference in the performance be-\ntween the two tools, but (2) the designers us-\ning the stochastic support tool developed a\nnovel search approach to the design space that\nwas not expected. The resulting designs and\ntime required to create those designs was very\nsimilar across the two different tools. A small\nnumber of design variables were statistically\ndifferent, but not enough to provide signifi-\ncant evidence that the two tools result in dif-\nferent designs, or that one tool results in de-\nsigns being generated significantly faster than\nthe other. However, the second point illus-\ntrated that the stochastic tool lead designers\nto explore the design space in a novel man-\nner. Both tools were used in a \u2018test\u2019 mode\nto explore the design space: designers would\nenter speculative design variable settings and\n12\nsee what effect that would have on the re-\nmainder of the design space. In the rule based\ntool, this effect was seen on the design char-\nacteristics as a result of modifying a design\nparameter. The stochastic tool provided in-\nformation more broadly: a designer would set\na particular design variable, and then see how\nthis would affect the various PDFs through-\nout the remaining unspecified design. Effec-\ntively, they were monitoring a far greater num-\nber of variables with greater breadth within\neach variable than is possible with the rule\nbased support tool. This represents a signifi-\ncant advance in the ability to search a design\nspace interactively.\nThe reason for the lack of any significant\ndifference between the two support tools can\nbe in part explained by the simple nature of\nthe design domain. The conceptual car do-\nmain that was used is relatively intuitive. There-\nfore, it can be expected that the subjects us-\ning the rule based tool were readily able to get\na rough feel for the domain rules. The sub-\njects using the stochastic support tool on the\nother hand needed to learn the how to inter-\npret the displayed PDFs. It is not as clear if\nthese subjects gained an equivalent \u2018feel\u2019 for\nthe design domain as the rule based tool trial\nsubjects were able to. However, the stochas-\ntic support tool subjects did develop a novel\nsearch methodology that reveals at any point\na wider set of options than is possible using\nthe traditional design support tool.\n4.2 Industrial based study\nThe industrial trial was undertaken with a\nlarge aerospace company that designs and man-\nufactures a large range of gas turbine aero-\nengines. The focus of this trial was centered\naround the combustor system within the gas\nturbine. The gas turbine can be abstractly\nthought of having three key systems: (1) the\ncompressor, which takes the gas from the out-\nside at ambient pressure, raises the pressure of\nthis gas which is then passed to (2) the com-\nbustor where the gas is mixed with fuel which\nis then combusted to heat the gas before it\ncontinues on to (3) the turbine which extracts\nmechanical energy from the gas stream. The\ncombustor has a challenging task: the incom-\ning high velocity and pressure gas stream must\nbe slowed down to a speed in which a flame\ncan be sustained, the flow within the com-\nbustor needs to be sufficiently turbulent to\nachieve good fuel mixing, and a film of cool air\non the combustor wall is required to protect\nthe combustor from the high flame tempera-\nture. The combustor is effectively a cylinder,\nand the gas from the compressor is passed\nalong the outside of this cylinder. The gas\nthen enters into the cylinder through a series\nof holes on the surface of the combustor. It is\nthe designer\u2019s job to determine the type and\nplacement of these holes on the combustor\ncylinder. Due to the turbulent nature of the\ngas flow within the combustor, it is very costly\nto obtain accurate prediction to the behaviour\nof the gas for a given combustor configuration.\nIt is the difficulty in obtaining rapid design\nfeedback that provides a key challenge to the\ndesigner. The aim of the research was to in-\nvestigate the potential of a rapid stochastic\ndesign decision support tool to guide the de-\nsigner through the selection and placement of\nholes on the combustor cylinder.\n4.2.1 BBN Induction\nA design database of preliminary gas turbine\ncombustors was used to induce the Bayesian\nBelief Network and provide the underlying prob-\nability distribution functions for all the design\nvariables. The database contained a sample of\nprevious combustor designs that had been cre-\nated by the designers, and the data included\nvarious evaluations for these combustors. The\ncombustor database represented a consider-\nably larger design domain than the car design\nlaboratory based study. Further, unlike the\ncar domain, the causal relationship structure\nbetween the design variables in this study was\nnot explicitly known. Therefore the induced\ncausal structure and subsequent design sup-\n13\nport tool were to be critically reviewed by a\nteam of the company\u2019s senior combustion de-\nsign experts.\nThe combustor design dataset contained\na combination of both continuous valued (e.g.\npressure) and discrete valued (e.g. hole type)\ndesign variables. The continuous variables were\ndiscretised into seven categories. Two dis-\ncretisation approaches were used: a uniform\ndiscretisation, where the discretisation bound-\naries within each variable were kept equally\ndistant between each other; and non-uniform\ndiscretisation, where each discrete category\nhad the same number of samples within it.\nThe two discretisation methods resulted in a\nslightly different BBNs, both of which were\nconsidered by the combustor design team.\nAs there were 25 design variables, the com-\nbustor design domain represented a signifi-\ncantly more challenging representation prob-\nlem that the car domain. To handle this higher\ncomplexity level, the structure learning algo-\nrithm identified a set of smaller, independent,\nBBNs. The same structure learning algorithm\nwas applied to the combustor data set. The\ndirect result in this case was again not a tree,\nspecifically a number of variables had multiple\narcs coming out from the variable node rather\nthan one as would be the case in a tree. This\nwas rectified again by considering which arcs\ncould be deleted to transform the network into\na tree and then eliminating those arcs with\nthe lowest information content. This resulted\nin creating a set of five trees, with each tree\nrepresenting a sub-space of the whole design\ndomain.\n4.2.2 Experimental Parameters\nThe industrial experiment focused on how well\nthe stochastic design search tool supported in-\ndustrial designers in the early design stages.\nThe induced trees representing the causal re-\nlationships within the combustor design do-\nmain were presented to the industrial design\nteam. This presentation included a brief tu-\ntorial on how to use the stochastic support\ntool. The design team were also left with a\nwritten overview of both the underlying the-\nory, the BBNs, and a user guide for the in-\nteractive designer support tool. The design\nteam were then left with the support tool for\nthem to trial in their own time. In addition\nto the tool, the design team were asked to\nconsider the following criteria to assess the\nsupport tool against:\n1. How well does the tool support the de-\nsign process;\n2. How well does the model match your un-\nderstanding of the design domain; and\n3. How could the user interface be improved.\nAfter the design team had a chance to in-\nvestigate the support tool, they had difficulty\nin determining how well the stochastic deci-\nsion support tool was able to merge with the\ncombustor design process. The combustor de-\nsign process involves building a network of gas\nflows which is then incrementally adjusted us-\ning a flow analysis tool and the designer\u2019s ex-\npertise. The initial network can be taken from\na previous design that meets a number of the\nnew design\u2019s requirements. Although there is\na clear morphology for design elements within\nthe combustor design, these apply at a very\nlocal level. It was not clear how the stochas-\ntic design tool should support the designer in\nthis case.\n4.2.3 Results and Discussion\nThe nature of the stochastic design support\ntool was insufficiently aligned with this stage\nof the combustor design process. Specifically,\nthere were three principal reasons that the\nsupport tool was not adequate, in response\nto the above criteria that the designers were\nasked to consider:\nFirst, as the designers would typically con-\nsider different configurations separately, they\nwere expecting separate explicit models for\neach configuration. The stochastic support\n14\ntool was not able to support this global view\nof the combustor model. Rather than a global\ncombustor model, it considered the impact\nthat a given hole type and geometry would\nhave locally on the gas flow. Without the\nglobal combustor aspects being made explicit,\nthe designers could not be confident about as-\nsessing the accuracy of the single configura-\ntion model.\nSecond, the support tool was trained on\na series of different combustor configurations.\nAs a result of the machine learning process,\nthe designers felt that there were a number\nof aspects within the induced causal model\nthat did not make physical sense according\nto their understanding of the combustor do-\nmain. It was not clear if this represented an\nunexpected aspect of the combustor domain\nthat the designers were not aware of, i.e. that\nthe machine learning process had discovered\nnovel aspects of the combustor domain, or if\nthis was due to the causal model either ex-\ntrapolating to regions it should not do or av-\neraging what should be different models into\nan incorrect combination of models.\nThird, as a result a lack of clarity in the\npresentation of the model, the designers did\nnot feel they were able to provide construc-\ntive criticism on the nature of the user inter-\nface. The fundamental problem here was that\nthe designers did not feel comfortable with the\nstochastic approach to decision support. The\nstochastic approach, as discussed in Section 1,\nallows multiple outcomes, weighted by their\nprobabilities, to be simultaneously possible.\nThe designer then selects which of these out-\ncomes they would prefer, guided by the PDF.\nThe presentation of this information and the\nunderstanding of the impact of a choice re-\nquires the decision maker to have a good un-\nderstanding of the underlying stochastic the-\nory. The fundamentals of the stochastic de-\ncision theory were introduced as part of the\ntrial, it is clear that not enough time was de-\nvoted to ensuring the designers had a good\ngrasp of this approach.\nOverall, the design team could not reach a\nconsensus on the benefits of the support tool.\nIt was felt that either the tool should be de-\nployed at an earlier stage of the design pro-\ncess where there is more flexibility in the deci-\nsion process or that the decision support tool\nshould be able to integrate a number of dif-\nferent models where obtaining trade-offs be-\ntween design variables is difficult. These are\nboth aspects that currently require designer\nexpertise and have not been formally captured.\nThe training data for the stochastic support\ntool was obtained from an intermediate com-\nbustor evaluation tool, and therefore did not\nrepresent one of the more challenging aspects\nof the combustor design process. Obtaining\ntraining data for the other aspects of the de-\nsign process is a challenge, and was beyond\nthe scope of the collaboration in this project.\nIn summary, the key challenge that arose\nthrough this process is that the tool must be\nintimately developed with the designer\u2019s pro-\ncesses and needs. Further, and significantly\nfor this approach, the data that is used by\nthe machine learning algorithm must be di-\nrectly linkable to the data that the designer\ndirectly uses and manipulates. In this case,\nthe data used for the machine learning pro-\ncess was taken from an intermediate process\nthat is not directly manipulated by the de-\nsigner. This resulted in the designer not be-\ning able to intuitively sense if the support tool\nwas providing meaningful and useful support\nto the design process. Ultimately, the design-\ners were not able to successfully consider the\ndesign support tool against the three criteria\nset out in the previous section.\n5 Discussion\nThe empirical studies conducted highlighted\nthree challenges affecting the implementation\nand adoption of a general stochastic design\nsupport tool. First, it is important to select\nand fit an underlying domain model. This\nprovides the computational foundation for the\nsupport tool. Second, the model, and by ex-\n15\ntension the support tool, must be perceived\nto be of a sufficiently high accuracy as needed\nfor the design task at hand. Finally, the tool\nmust be accessible by a designer. Specifically,\nthe benefits of using the tool must outweigh\nthe cost of learning to use the tool.\nWhen selecting the underlying model, it\nis critical to consider how it will approximate\nthe design domain. There are two options at\nthis point: it can either be explicitly provided\nwith domain rules or it can use previous data\nas a means for model fitting to the domain.\nProviding the domain rules explicitly requires\nthese rules to be acquired, this represents an\nexpensive approach in terms of the time re-\nquired by a knowledge engineering to extract\nthese rules (Potter et al., 2001, 2003). The\nalternative approach is to use machine learn-\ning algorithms to fit domain models based on\nprior design examples. Provided the design\ndata is readily available, this removes the cost\nof using a knowledge engineer.\nIn the laboratory case study, both rules\nand data were available, allowing for the in-\nduced model to be verified against the orig-\ninal domain rules. The induced model com-\npared favourably against the original domain\nmodel, providing evidence that the machine\nlearning algorithm was sound. There was the\nneed to delete a single arc to maintain the\ntree structure. In general, this does not pose\na problem: the deleted arc is the one with the\nlower information content. From a knowledge\nrepresentation perspective, the arc would ei-\nther be linking the node to a node higher in\nthe tree (bypassing an indirect link: no major\nknowledge loss) or linking \u2018vertically\u2019 into an-\nother subtree (suggesting the node \u2018belongs\u2019\nin two different subtrees: a loss of informa-\ntion, magnitude dependent on the informa-\ntion content). In the second case, there is\nonly a problem with loss of knowledge if the\ndeleted arc has an information content that\nis relatively large in comparison to the glob-\nally retained arc. In conclusion, the labora-\ntory case study confirmed that the flexibility\nof the stochastic tool provided realistic bene-\nfits to the designers in terms of selecting op-\ntions, and that the machine-based knowledge\nacquisition process was successful. The de-\nsigner interaction aspects were overcome in\nthis case due to the simplicity of the design\nproblem and the ability of novice designers to\naccept \u2018awkward\u2019 design tools.\nIn the industrial case study, the domain\nexperts could only afford to spend the rela-\ntively short time required to extract a suit-\nable design database. Further, the induction\napproach adds the risk of either inducing ex-\ntrapolation errors or limiting designers to only\nsearch within the boundaries set by the set\nof designs used to train or fit the underly-\ning model. In the industrial case study it\nwas not possible to determine if this was the\ncase. Other important challenges with the un-\nderlying model are: the computational effi-\nciency, the level of guidance to select appro-\npriate model tuning parameters, and the abil-\nity to assess the model accuracy (Martin and\nSimpson, 2005). The benefit of the stochas-\ntic support tool is that, computationally, it is\nquite efficient. However, the implementation\nof the algorithm using standard office tools to\nensure wide access, resulted in a barely ac-\nceptable refresh rate when the design state\nwas updated. This highlighted the impor-\ntance of good user interface design for suc-\ncessful decision support tools.\nSupport tools for the early phases of the\ndesign process are by their nature approxi-\nmations of the actual design domain. These\ntools are intended to provide a rapid and effi-\ncient means for broadly searching the design\ndomain. However, it is important to consider\nhow the model accuracy is being traded off\nagainst the search efficiency (Simpson et al.,\n2001). Clearly the underlying model needs\na sufficient level of accuracy. However, it is\nalso important the tool is perceived as pro-\nviding an accurate representation of the do-\nmain. Without this, designers will not trust\nthe tool and hence not use it. A designer ob-\ntains trust in a support tool when the underly-\ning model provides similar or tractable predic-\n16\ntions to queries that the designer \u2018knows\u2019 the\nanswer to. Effectively, this illustrates to the\ndesigner that the underlying model is aligned\nwith their own understanding of the domain.\nIn the laboratory case, there were two aspects\nthat resulted in effective use of the stochastic\ntool. Firstly, the domain was intuitive and\nhence it was possible to see that the stochas-\ntic tool was providing plausible guidance. Sec-\nondly, the subjects had no formal background\nin the domain, and were therefore more re-\nceptive to the guidance being provided. This\ncontrasts with the industrial case study, where\nthe sub-space domain models did not appear\nto be aligned with the domain experts\u2019 views\nor search methods. The data appears to sup-\nport a different view on the design domain\nthan that held by the domain experts, how-\never, the experts did not have sufficient time\nto be able to consider these alternative views\nmore deeply. As a result, the stochastic mod-\nels were perceived to be inaccurate in some\nrespects.\nThe final challenge affecting a design sup-\nport tool is its accessibility. User interface\ndesign represents a modern challenge, which\nis typically case based driven rather than ei-\nther analytic or deductive (Kim and Yoon,\n2005). Szewczyk (2003) reports the need to\ndesign the user interface to reflect the man-\nner in which the users work. Therefore it\nis essential to obtain a good understanding\nof the users\u2019 working practises before design-\ning the user interface. This was not possi-\nble in the industrial trial, as access to the\ndomain experts was limited. This partly ex-\nplains why the design team were not able to\nprovide a critical review of the support tool.\nIn addition, Hauck and Wesiband (2002) re-\nport that novice users more readily adapt to\nusing novel support tools than experts. This\nis supported by the evidence from the two\nempirical trials. The student designers took\nto the support tool swiftly as they had never\nbeen exposed to a parametric design situation\nbefore. Conversely, the expert industrial de-\nsigners were accustomed to their design tools,\nand found the stochastic support tool awk-\nward. Ultimately, good user interface design\nrequires that the tool \u2018leads, follows, and gets\nout of the way\u2019 of the user (Kamper, 2002).\nThe stochastic design support tool fulfils the\nfirst two criteria: it leads the designer to a\ndesign solution based on the specification pro-\nvided and it interactively follows the designer\nupdating the design, but it does not get out\nof the way to allow the user to easily finish\nthe design task.\n6 Conclusion\nThe research in stochastic design support tools\nhas developed, implemented and empirically\ntested a generic design support tool. The sup-\nport tool uses prior design databases to learn\nboth the model structure and conditional PDFs\nbetween causally related variables. The two\nempirical trials did highlight a number of chal-\nlenges relating to the use of such a design sup-\nport tool.\nA number of challenges remain before this\ntype of support tool can be widely adopted.\nThe laboratory empirical trial suggested that\nthe model structure learning algorithm is ac-\nceptably accurate. However, the industrial\ntrial could neither confirm or reject the stochas-\ntic model structure. There is a strong possi-\nbility that this was due to applying the ma-\nchine learning algorithm on a single dataset\nwhere this should have been distinct datasets,\nor that the machine learning should have been\napplied to a dataset that was more closely re-\nlated to the data that the designer directly\nmanipulates. There were both expected and\nunexpected aspects within the industrial model.\nDue to commercial pressures, the domain ex-\nperts were unable to investigate the unexpected\nmodel aspects in sufficient detail to either ex-\nplain or reject these phenomena the stochastic\nstructure learning algorithm identified. These\nopen questions resulted in a degree of uncer-\ntainty in the stochastic model quality.\nWith the more complex industrial design\n17\ndomain, it became clear that there were also\nbarriers to adopting the support tool created\nby the nature of the user interface. The sup-\nport tool was implemented using standard of-\nfice tools to ensure wide access. However,\nthese tools do not provide a suitable set of\nuser interface options. It was therefore dif-\nficult to provide a natural or intuitive inter-\nface to the underlying model. Further, it was\ndifficult to clearly visualise the PDFs in the\nlarger industrial case study. These issues were\nnot so great in the simpler laboratory case\nstudy, as the complexity of the design domain\ncould still be readily digested by the design-\ners. From the industrial case study, it be-\ncame clear that the design variables needed\nto be grouped according to their respective\nsub-domain models and the designer heuris-\ntic of first setting \u2018narrow mode\u2019 PDFs needed\nto be encoded so as to identify explicitly the\nsuggested variable determination order. In\nsummary, the user interface to the stochas-\ntic model required a greater degree of align-\nment to the design domain. This requires a\ngreater understanding of the domain-context\ndesign process. There is also a clear require-\nment that the designers need time to be able\nto familiarise themselves with the stochastic\ndata format.\nHowever, the laboratory case study did\nprovide evidence of an emergent design space\nsearch method. Subjects using the stochastic\ntool were observed searching the design space\nmore widely by inspecting a series of PDFs\nwhile trying various design variable settings.\nThis emergent behaviour illustrates that the\nstochastic design support tool provides a novel\nand powerful means for searching the design\nspace.\nIn summary, the benefits that were ob-\nserved from the stochastic design tool were:\n(1) the ability to flexibly choose among pos-\nsible design options and being provided with\nthe probability of success for that outcome,\n(2) the emergence of a novel search strategy,\nand (3) the automatic knowledge acquisition\nmethod. However, there remain significant\nchallenges: (1) the BBN generated through\nthe machine learning process must be able\nto be verified by domain experts for them to\ntrust the support system, and (2) the inter-\naction between designer and support system\nmust be aligned with the design process.\nFurther work is required to address these\nhurdles. This will need to consider both the\nuser interface aspects of the tool and the means\nfor training designers in the use of the tool.\nThis will require a related line of research to\ninvestigate human abilities to reason with stochas-\ntic, and in particular Bayesian, domain repre-\nsentations: what and how is the most intuitive\nmanner for presenting these multiple options\nand how is this information processed by the\ndesigner. In addition, a modular methodol-\nogy for developing interfaces from this generic\ndesign support tool with more specific design\ndomains and tools. By providing a lightweight\ndomain specific interface, this will enable the\nadoption of stochastic design representation\nacross a wide collection of design domains. So\nlong as these hurdles remain, the adoption of\nstochastic approaches to support the design\nprocess will remain limited.\nAcknowledgements\nThis research is funded by a Nuffield Foun-\ndation Award to Newly Appointed Lectur-\ners in Science, Engineering and Mathemat-\nics (Grant number: NAL\/00846\/G). Thanks\nmust also be given to the design students and\ndesigners from Rolls-Royce (Aerospace) who\nprovided their time to support the empirical\nwork. Thanks is also given to the anonymous\nreviewers whose inputs vastly improved the\nfinal presentation of this paper.\nReferences\nApel, H., Thieken, A. H., Merz, B. and\nBloschl, G. (2006). A probabilistic mod-\nelling system for assessing flood risks, Nat-\nural Hazards 38(1\u20132): 79\u2013100.\n18\nBlake, C. L. and Merz, C. J. (1998). UCI\nrepository of machine learning databases.\nhttp:\/\/www.ics.uci.edu\/~mlearn\/\nMLRepository.html.\nChen, J., Greiner, R., Kelly, J., Bell, D. and\nLiu, W. (2002). Learning bayesian networks\nfrom data: An information-theory based\napproach, Artificial Intelligence 137(1\u2013\n2): 43\u201390.\nChen, V. C. P., Tsui, K. L., Barton, R. R.\nand Meckesheimer, M. (2006). A review\non design, modelling and applications of\ncomputer experiments, IIE Transactions\n38(4): 273\u2013291.\nChong, Y., Chen, C.-H. and Leong, K. (2009).\nA heuristic-based approach to conceptual\ndesign, Research in Engineering Design.\nClarkson, P. J., Simons, C. and Eckert, C. M.\n(2004). Predicting change propagation in\ncomplex design, Journal of Mechanical De-\nsign 126(5): 788\u2013797.\nCross, N. (1994). Engineering Design Meth-\nods: Strategies for Product Design, John\nWiley, Chichester, UK.\nEliashberg, J., Jonker, J. J., Sawhney, M. S.\nand Wierenga, B. (2000). MOVIEMOD: An\nimplementable decision-support system for\nprerelease market evaluation of motion pic-\ntures, Marketing Science 19(3): 226\u2013243.\nFernandez, M. G., Seepersad, C. C., Rosen,\nD. W., Allen, J. K. and Mistree, F. (2005).\nDecision support in concurrent engineering\n\u2014 the utility-based selection decision sup-\nport problem, Concurrent Engineering: Re-\nsearch and Applications 13(1): 13\u201327.\nForouraghi, B. (1999). On utility of inductive\nlearning in multiobjective design, Artificial\nIntelligence for Engineering Design Analy-\nsis and Manufacturing 13(1): 27\u201336.\nGaines, B. R. and Shaw, M. L. G. (1993). Elic-\niting knowledge and transferring it effec-\ntively to a knowledge-based system, IEEE\nTransactions on Knowledge and Data En-\ngineering 5(1): 4\u201314.\nGeyer, P. (2008). Multidisciplinary gram-\nmars supporting design optimization of\nbuildings, Research in Engineering Design\n18(4): 197\u2013216.\nHauck, R. V. and Wesiband, S. (2002).\nWhen a better interface and easy navi-\ngation aren\u2019t enough: Examining the in-\nformation architecture in a law enforce-\nment agency, Journal of the American Soci-\nety for Information Science as Technology\n53(10): 846\u2013854.\nHe, L., Chan, C. W., Huang, G. H. and Zeng,\nG. M. (2006). A probabilistic reasoning-\nbased decision support system for selection\nof remediation technologies for petroleum-\ncontaminated sites, Expert Systems with\nApplications 30(4): 783 \u2013 795.\nHollins, B. and Pugh, S. (1990). Successful\nProduct Design, Butterworths.\nHughes, E. J., Richards, T. G. and Tilley,\nD. G. (2001). Development of a design\nsupport tool for fluid power system design,\nJournal of Engineering Design 12(2): 75\u2013\n92.\nKamper, R. J. (2002). Extending the usability\nheuristics fir desugb abd evaluation: Lead,\nfollow get out the way, International Jour-\nnal of Human-Computer Interaction 14(3\u2013\n4): 447\u2013462.\nKim, H. and Yoon, Y. C. (2005). Support-\ning the cognitive process of user interface\ndesign with resusable design cases, Interna-\ntional Journal of Human-Computer Studies\n62(4): 457\u2013486.\nMahdavi, A. and Gurtekin, B. (2004). Gen-\nerating the design-performance space via\nsimulation and machine learning, Jour-\nnal of Architectural and Planning Research\n21(4): 350\u2013362.\n19\nMaher, M. L. and Go\u00b4mez de Silva Garza,\nA. (1997). Case-based reasoning in design,\nIEEE Expert: Intelligent Systems and their\nApplications 12(2): 34\u201341.\nMartin, J. D. and Simpson, T. W. (2005).\nUse of kriging models to approximate de-\nterministic computer models, AIAA Jour-\nnal 43(4): 853\u2013863.\nMatthews, P. C. (2006). Bayesian networks\nfor design: A stochastic design search\nmethod, in J. S. Gero (ed.), Proceeding of\nthe Design Computing and Cognition con-\nference, Kluwer, Eindhoven. (in press).\nMatthews, P. C. (2008). A Bayesian support\ntool for morphological design, Advanced\nEngineering Informatics 22(2): 236\u2013253.\nMatthews, P. C., Standingford, D. W. F.,\nHolden, C. M. E. and Wallace, K. M.\n(2006). Learning inexpensive parametric\ndesign models using an augmented genetic\nprogramming technique, Artificial Intelli-\ngence for Engineering Design, Analysis and\nManufacturing 20(1): 1\u201318.\nMoore, C. J., Miles, J. C. and Ress, D. W. G.\n(1997). Decision support for conceptual\nbridge design, Artificial Intelligence in En-\ngineering 11(3): 259\u2013272.\nOng, Y. S. and Keane, A. J. (2002). A do-\nmain knowledge based search advisor for\ndesign problem solving environments, En-\ngineering Applications of Artificial Intelli-\ngence 15(1): 105\u2013116.\nOsio, I. G. and Amon, C. H. (1996). An\nengineering design methodology with mul-\ntistage Bayesian surrogates and optimal\nsampling, Research in Engineering Design\n8(4): 189\u2013206.\nPacheco, J. E., Amon, C. H. and Finger,\nS. (2003). Bayesian surrogates applied to\nconceptual stages of the engineering de-\nsign process, Journal of Mechanical Design\n125(4): 664\u2013672.\nPahl, G. and Beitz, W. (1996). Engineer-\ning Design: A Systematic Approach, second\nedn, Springer-Verlag London.\nPearl, J. (1995). Causal diagrams for empiri-\ncal research, Biometrika 82(4): 669\u2013709.\nPearl, J. and Verma, T. S. (1991). A theory of\ninferred causation, in J. F. Allen, R. Fikes\nand E. Sandewall (eds), KR\u201991: Principles\nof Knowledge Representation and Reason-\ning, Morgan Kaufmann, San Mateo, Cali-\nfornia, pp. 441\u2013452.\nPons, D. J. and Raine, J. K. (2004). De-\nsign with uncertain qualitative variables\nunder imperfect knowledge, Proceedings of\nthe Institution of Mechanical Engineers\nPart B: Journal of Engineering Manufac-\nture 218: 977\u2013986.\nPons, D. J. and Raine, J. K. (2005). Sim-\nulation of key performance characteris-\ntics under uncertainty, Proceedings of the\nInstitution of Mechanical Engineers Part\nB: Journal of Engineering Manufacture\n219(1): 151\u2013162.\nPotter, S., Culley, S. J., Darlington, M. J.\nand Chawdhry, P. K. (2003). Automatic\nconceptual design using experience-derived\nheuristics, Research in Engineering Design\n14(3): 131\u2013144.\nPotter, S., Darlington, M. J., Culley, S. J.\nand Chawdry, P. K. (2001). Design syn-\nthesis knowledge and inductive machine\nlearning, Artificial Intelligence for Engi-\nneering Design Analysis and Manufactur-\ning 15(3): 233\u2013249.\nResnick, M. L. and Vaughan, M. W. (2006).\nBest practices and future visions for search\nuser interfaces, Journal of the American So-\nciety for Information Science and Technol-\nogy 57(6): 781\u2013787.\nRinkus, S., Walji, M., Johnson-Troop, K. A.,\nMalin, J. T., Turley, J. P. and Zhang,\nJ. J. (2005). Human-centered design of\n20\na distributed knowledge management sys-\ntem, Journal of Biomedical Informatics\n38(1): 4\u201317.\nRivard, H. and Fenves, S. J. (2000). SEED-\nConfig: A case-based reasoning system for\nconceptual building design, Artificial In-\ntelligence for Engineering Design, Analysis\nand Manufacturing 14(5): 415\u2013430.\nSahinidis, N. V. (2004). Optimization under\nuncertainty: State-of-the art and opportu-\nnities, Computers & Chemical Engineering\n28(6\u20137): 971\u2013983.\nScwabacher, M., Ellman, T. and Hirsh, H.\n(1998). Learning to set up numerical opti-\nmizations of engineering designs, Atrificial\nIntelligence for Engineering Design Analy-\nsis and Manufacturing 12(2): 173\u2013192.\nSimpson, T. W., Peplinski, J. D., Koch,\nP. N. and Allen, J. K. (2001). Metamod-\nels for computer-based engineering design:\nSurvey and recommendations, Engineering\nwith Computers 17(2): 129\u2013150.\nSzewczyk, J. (2003). Difficulties with the\nnovices\u2019 comprehension of the computer\naided design (CAD) interface: Understand-\ning visual representations of CAD tools,\nJournal of Engineering Design 14(2): 169\u2013\n185.\nUlrich, K. T. and Eppinger, S. D. (2000).\nProduct Design and Development, second\nedn, McGraw-Hill, Boston, MA.\nZhang, W., Tor, S. and Britton, G. (2002).\nAutomated functional design of engineering\nsystems, Journal of Intelligent Manufactur-\ning 13(2): 119\u2013133.\nZiv-Av, A. and Reich, Y. (2005). SOS \u2014\nsubjective objective system for generating\noptimal product concepts, Design Studies\n26(5): 509\u2013533.\nZwicky, F. (1967). The morphological ap-\nproach to discovery, invention, research and\nconstruction, in F. Zwicky and A. G. Wil-\nson (eds), New Methods of Thought and\nProcedure, Springer-Verlag.\n21\n"}