{"doi":"10.1007\/s00371-010-0422-5","coreId":"137144","oai":"oai:bradscholars.brad.ac.uk:10454\/4969","identifiers":["oai:bradscholars.brad.ac.uk:10454\/4969","10.1007\/s00371-010-0422-5"],"title":"Cyclic animation using Partial differential Equations","authors":["Gonzalez Castro, Gabriela","Athanasopoulos, Michael","Ugail, Hassan","Willis, P.","Sheng, Y"],"enrichments":{"references":[],"documentType":{"type":1}},"contributors":[],"datePublished":"2010","abstract":"YesThis work presents an efficient and fast method for achieving cyclic animation using Partial Differential Equations (PDEs). The boundary-value nature associ- ated with elliptic PDEs offers a fast analytic solution technique for setting up a framework for this type of animation. The surface of a given character is thus cre- ated from a set of pre-determined curves, which are used as boundary conditions so that a number of PDEs can be solved. Two different approaches to cyclic ani- mation are presented here. The first consists of using attaching the set of curves to a skeletal system hold- ing the animation for cyclic motions linked to a set mathematical expressions, the second one exploits the spine associated with the analytic solution of the PDE as a driving mechanism to achieve cyclic animation, which is also manipulated mathematically. The first of these approaches is implemented within a framework related to cyclic motions inherent to human-like char- acters, whereas the spine-based approach is focused on modelling the undulatory movement observed in fish when swimming. The proposed method is fast and ac- curate. Additionally, the animation can be either used in the PDE-based surface representation of the model or transferred to the original mesh model by means of\\ud\na point to point map. Thus, the user is offered with the choice of using either of these two animation repre- sentations of the same object, the selection depends on the computing resources such as storage and memory capacity associated with each particular application","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/137144.pdf","fullTextIdentifier":"https:\/\/bradscholars.brad.ac.uk\/bitstream\/10454\/4969\/1\/Cyclic_1_2010.pdf","pdfHashValue":"57e845bc76a58c8fb46f4d726237df9481e74838","publisher":null,"rawRecordXml":"<record><header><identifier>\n        \n            \n                oai:bradscholars.brad.ac.uk:10454\/4969<\/identifier><datestamp>\n                2016-08-18T16:10:47Z<\/datestamp><setSpec>\n                com_10454_413<\/setSpec><setSpec>\n                col_10454_6345<\/setSpec>\n            <\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:doc=\"http:\/\/www.lyncode.com\/xoai\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n            \nCyclic animation using Partial differential Equations<\/dc:title><dc:creator>\nGonzalez Castro, Gabriela<\/dc:creator><dc:creator>\nAthanasopoulos, Michael<\/dc:creator><dc:creator>\nUgail, Hassan<\/dc:creator><dc:creator>\nWillis, P.<\/dc:creator><dc:creator>\nSheng, Y<\/dc:creator><dc:subject>\nCyclic animation<\/dc:subject><dc:subject>\nPDE surfaces<\/dc:subject><dc:description>\nYes<\/dc:description><dc:description>\nThis work presents an efficient and fast method for achieving cyclic animation using Partial Differential Equations (PDEs). The boundary-value nature associ- ated with elliptic PDEs offers a fast analytic solution technique for setting up a framework for this type of animation. The surface of a given character is thus cre- ated from a set of pre-determined curves, which are used as boundary conditions so that a number of PDEs can be solved. Two different approaches to cyclic ani- mation are presented here. The first consists of using attaching the set of curves to a skeletal system hold- ing the animation for cyclic motions linked to a set mathematical expressions, the second one exploits the spine associated with the analytic solution of the PDE as a driving mechanism to achieve cyclic animation, which is also manipulated mathematically. The first of these approaches is implemented within a framework related to cyclic motions inherent to human-like char- acters, whereas the spine-based approach is focused on modelling the undulatory movement observed in fish when swimming. The proposed method is fast and ac- curate. Additionally, the animation can be either used in the PDE-based surface representation of the model or transferred to the original mesh model by means of\\ud\na point to point map. Thus, the user is offered with the choice of using either of these two animation repre- sentations of the same object, the selection depends on the computing resources such as storage and memory capacity associated with each particular application.<\/dc:description><dc:date>\n2011-07-23T15:52:01Z<\/dc:date><dc:date>\n2011-07-23T15:52:01Z<\/dc:date><dc:date>\n2010<\/dc:date><dc:type>\nArticle<\/dc:type><dc:type>\nAccepted Manuscript<\/dc:type><dc:identifier>\nGonzalez Castro G., Athanasopoulos M., Ugail H., Willis P. and Sheng Y. (2010). Cyclic animation using Partial differential Equations. The Visual Computer. Vol. 26, No. 5, pp. 325-338.<\/dc:identifier><dc:identifier>\n90015776<\/dc:identifier><dc:identifier>\n90011885<\/dc:identifier><dc:identifier>\nhttp:\/\/hdl.handle.net\/10454\/4969<\/dc:identifier><dc:relation>\nhttp:\/\/dx.doi.org\/10.1007\/s00371-010-0422-5<\/dc:relation><dc:rights>\n(c) 2010 Springer Verlag. Reproduced in accordance with the publisher's self-archiving policy.<\/dc:rights>\n<\/oai_dc:dc>\n<\/metadata>\n        <\/record>","journals":null,"language":null,"relations":["http:\/\/dx.doi.org\/10.1007\/s00371-010-0422-5"],"year":2010,"topics":["Cyclic animation","PDE surfaces"],"subject":["Article","Accepted Manuscript"],"fullText":"The Visual Computer manuscript No.\n(will be inserted by the editor)\nCyclic animation using Partial Di\ufb00erential Equations\nG. Gonza\u00b4lez Castro \u00b7 M. Athanasopoulos \u00b7 H. Ugail\nReceived: October 29, 2009\/ Accepted: date\nAbstract This work presents an e\ufb03cient and fast method\nfor achieving cyclic animation using Partial Di\ufb00erential\nEquations (PDEs). The boundary-value nature associ-\nated with elliptic PDEs o\ufb00ers a fast analytic solution\ntechnique for setting up a framework for this type of\nanimation. The surface of a given character is thus cre-\nated from a set of pre-determined curves, which are\nused as boundary conditions so that a number of PDEs\ncan be solved. Two di\ufb00erent approaches to cyclic ani-\nmation are presented here. The first consists of using\nattaching the set of curves to a skeletal system hold-\ning the animation for cyclic motions linked to a set\nmathematical expressions, the second one exploits the\nspine associated with the analytic solution of the PDE\nas a driving mechanism to achieve cyclic animation,\nwhich is also manipulated mathematically. The first of\nthese approaches is implemented within a framework\nrelated to cyclic motions inherent to human-like char-\nacters, whereas the spine-based approach is focused on\nmodelling the undulatory movement observed in fish\nwhen swimming. The proposed method is fast and ac-\ncurate. Additionally, the animation can be either used\nin the PDE-based surface representation of the model\nor transferred to the original mesh model by means of\na point to point map. Thus, the user is o\ufb00ered with\nthe choice of using either of these two animation repre-\nsentations of the same object, the selection depends on\nthe computing resources such as storage and memory\ncapacity associated with each particular application.\nF. Author\nfirst address\nTel.: +123-45-678910\nFax: +123-45-678910\nE-mail: fauthor@example.com\nS. Author\nsecond address\nKeywords First keyword \u00b7 Second keyword \u00b7 More\n1 Introduction\nCyclic animation is a loopable animation of a charac-\nter repeating an action that can be used to move a\ncharacter along a path easily and realistically. In other\nwords, A cyclic animation involves the construction of\na sequence of frames that can be used for repetitive\nmotions [26]. Thus, the animator can save time by ani-\nmating a single cycle, rather than manually animating\nevery footstep. This technique is ideal for repetitive mo-\ntions, such as a character walking, running, dancing or\nswimming. For instance, a walking cycle is composed of\ntaking a step forward with one foot and then another\nstep with the other foot, creating a loop such that when\nthe sequence is repeated, the resulting motion is seam-\nless.\nGenerally, this type of animations is obtained by ad-\njusting a skeleton system to a given model which will\nbe responsible for storing and manipulating the frame\nsequence. This technique, often referred as rigging, uses\nseveral \u201dbones\u201d or joints connected to each other to con-\ntrol the overall movement of the skeleton. The motion\nof this skeleton is generally created manually by posi-\ntioning the handles controlling the joints to di\ufb00erent\nkey poses. Afterwards, several interpolation techniques\ncan be applied to generate the in-between positions. For\nfurther information on these techniques, the reader is\nreferred to [18] where such techniques are explained in\ndetail. It is worth mentioning that the movement of the\njoints can also be controlled by applying a suitable set\nof mathematical expressions. These mathematical ex-\npressions are chosen so that the generated animation\nsimulates realistic movement. The work presented here\n2makes use of mathematical expressions to control the\nattributes of the objects.\nAfter assigning and designing the motion over the\nskeletal system, this structure is attached to a single\nmesh object, which is deformed according to the motion\nembedded in the skeleton. This technique is called skin-\nning and, given that this work exploits the use of PDEs\nas a surface generation technique, this work uses PDE\nsurfaces attached to the skeletal system. In the inter-\nest of illustrating technique proposed here for skeletal\ncyclic animation,di\ufb00erent movements associated with\nhumans are employed\nAdditionally, the use of PDEs for cyclic animation\ncan be exploited further by taking advantage of the\nmathematical properties associated with PDE surfaces\nrising from elliptic PDEs: cyclic animation can benefit\nfrom the existence of an analytic expression describing\nthe spine of a given object. This can be carried out by\nmanipulating the spine as if it was the skeletal system\ndriving the animation. Spine based cyclic animation is\nstudied through the simulation of fish locomotion.\nFinally, a point to point map has been developed\nto transfer the animation to di\ufb00erent objects than can\nbe either PDE surface representations or complex mesh\nmodels and thus enabling the possibility to have multi-\nple human objects sharing the same animation.\n1.1 Related work\nBoth, human motion and fish locomotion have been\nareas attracting the interest of the most diverse dis-\nciplines. E\ufb03cient simulation of such movements over\nvirtual environments has become increasingly demand-\ning in terms of the amount of resources employed and\nrealism achieved. Given the familiarity we all have with\nhuman cyclic motion, no description of such movement\nis included; however, an outline of the work carried out\nso far for simulating them is given below.\n1.1.1 Human animation\nThe major problem arising from simulating human cyclic\nmotions is that of preserving the realism with which\nsuch movements take place. Moreover, faster and more\naccurate techniques are in constant demand due to the\nadvances in technology. Therefore, extensive work has\nbeen undertaken in the area including:\n\u2013 An automated method for modelling cyclic 3D mo-\ntion [19]. This work developed an algorithm enforc-\ning smooth transitions between cycles by operating\nin the Fourier domain. The major contribution of\nthis method A key point in this method consists\nof its ability to automatically deal with noise and\nmissing data.\n\u2013 A method for learning and tracking human motion\nin video [20]. This technique is capable of convert-\ning large sets of periodic human motion data auto-\nmatically into cycles. The learned temporal model\nprovides a prior probability distribution over human\nmotion that can potentially be used for tracking hu-\nman subjects in complex monocular video sequences\nand recovering their motion.\n\u2013 A technique that allows content creators to easily\nintegrate virtual humans into Web3D virtual envi-\nronments, such as X3D and VRML [15]. This tech-\nnique allows the user to interactively integrate vir-\ntual humans acting as formal instructors in virtual\nenvironments for learning or training purposes.\n\u2013 A three layer hierarchical control system for animat-\ning human avatars in 3D virtual environments [32].\nThe first layer controls the movement of the avatar\u2019s\njoints, the second defines skills or basic behaviors\nand the highest layer executes a behaviour-based\nscript language that can be used to describe stories\nto be performed by the avatars.\nIt is the understanding of the authors that so far,\ncyclic human motion has been achieved by using mesh\nmodels exclusively. This may potentially give rise to\nmodification of the mesh model in order to correct the\nshape once it has been animated. Given that it is desir-\nable to have control over the shape of the surface once\nit has been defined. For that reason, the use of PDE\nsurfaces gives us the advantage to represent a surface\nanalytically, thus making the manipulation of that sur-\nface fast and accurate.\n1.1.2 Fish locomotion\nThe movement observed by fish when swimming has\ncaptured the attention of di\ufb00erent disciplines varying\nfrom biology and fluid mechanics to areas such as robotics\nand computer animation. The reasons for which these\ndisciplines are interested are diverse. For instance, biol-\nogists are interested in how evolutionary aspects have\ndetermined the form of swimming among di\ufb00erent types\nof aquatic animals. Creative disciplines require to simu-\nlate as realistically as possible this type of natural phe-\nnomena. However, a number of factors a\ufb00ect accuracy\nof simulation in areas such as computer graphics and\ncomputer animation. This movement can be divided\ninto two categories namely the periodic propulsion and\ntransient movements. The first category is thought to\nbe responsible for the displacement, whereas the second\none comprises sudden movements generally associated\n3with abrupt changes on speed and direction, which gen-\nerally occur after the sensorial identification of an ob-\nstacle and predator or prey accordingly. The full char-\nacterization of the undulatory movement observed in\nmost aquatic animals when swimming has been out-\nlined in [16] associating it as faithfully as possible with\nthe concepts related to hydromechanics. This work di-\nvides the periodic motion observed in aquatic animals\ninto four categories as follows:\n\u2013 Anguilliform. This movement is observed in long fish\nsuch as eels and tile-fish and distinguishes from the\nothers since the whole body length is used through-\nout. Additionally, it is considered as the most basic\nform of undulatory propulsion.\n\u2013 Subcarangiform. Trout and cod are examples of fish\npossessing this type of movement. This type of move-\nment is considered as an intermediate mode between\nthe anguilliform and carangiform modes [23]. The\nundulatory e\ufb00ect is observed in the posterior region\nwith the amplitude increasing towards the tail. In\nthis case the moving region can consist of two thirds\nof the length of the fish as maximum.\n\u2013 Carangiform. Among the fish presenting this kind of\nmovement pattern can be found sea-bass, barracuda\nand gold fish. The main feature characterizing this\nmovement is the fact that the undulatory nature of\nthe movement is visible on the posterior half of the\nbody which may be provoked by the fact that this\npart of the body is more flexible than the rest.\n\u2013 Thunniform. Some of the aquatic animals present-\ning this movement are regarded as the fastest fish.\nThese fish are characterized by a lunate-shape tail\nfin, which is thought to be mainly responsible for\nthe noticeable increase in speed. The movement of\nthe body is basically restricted to the tail.\nMathematically, the general nature of the undula-\ntory movement has been modelled using a travelling\nwave advancing in the opposite direction of movement\nfrom where the four subcategories can be modelled by\nadjusting the values of a set of parameters. Addition-\nally, a number of studies have been undertaken in order\nto determine how fish locomotion is a\ufb00ected by the hy-\ndrodynamic e\ufb00ects such as vortex and drag [36]. Some\nother disciplines rather far away from biology and fluid\nmechanics, have been interested in the qualitative as-\npects of fish locomotion. For instance, the design of\nrobots capable of swimming so that these robots can\nindistinctively merge with some other real fish. Some\nof the work carried out in computer aided design and\nsimulation include:\n\u2013 First attempt for achieving realistic model of a fish\nin computer animation [27]. This work includes as-\npects related to physics, movement, perception and\nbehaviour and adopts a spring-mass model so that\nthe undulatory nature of the movement is included.\n\u2013 Development of virtual reality environments as in\n[14]\n\u2013 Development of computer animation techniques [24].\n\u2013 The study of social behaviour (prey-predator rela-\ntions) ans collision detection using fuzzy logic as\nmeans accelerate the solution of such systems [2].\nAccording to [34], the full simulation of the dynam-\nics of the fish model is determined by sixty-nine or-\ndinary di\ufb00erential equations modelling the appropriate\nmuscle contractions responsible for deforming the mesh\nmodel. The system is mainly governed by four springs\ncalled motor controllers and account for the amplitude\nand speed of the undulatory movement. Moreover, as\nfar as we are aware, most of the work carried out so\nfar in fish animation and virtual reality environments\ninvolving fish locomotion are based on the spring-mass\nmodel as described.\nGenerally, spring-mass models are solved using nu-\nmerical techniques such as the semi-implicit Euler method.\nSuch numerical methods present a tendency to be ei-\nther slow or prone to numerical errors, which may lead\nto inaccuracies a\ufb00ecting the geometric model.\nThus, our motivation for this work is to develop a\nsimple analytic technique for simulation of fish locomo-\ntion, which may prove useful in addressing some of the\nshortcomings of existing techniques. Hence, a paramet-\nric surface representation of a fish and its corresponding\nmanipulation are natural candidates to pursue this di-\nrection. Analytic solutions to particular elliptic PDEs\nmay be exploited as a tool for achieving fish locomotion\nby taking advantage of their mathematical properties.\n1.2 Contribution\nThis work makes use of PDE based surfaces in cyclic\nanimation in two di\ufb00erent manners. The first uses PDE\nsurfaces as the skin of a skeletal system, which is respon-\nsible for driving the animation. The second one exploits\nthe spine as means for driving the animation. These two\napproaches provide a new perspective to cyclic anima-\ntion that addresses some of the problems pertaining to\nalready existing techniques. Moreover, given that the\nanalytic solution of the PDE can be use to drive the\nanimation itself, avoids complicationsinherent to exist-\ning spring-mass models which have to be solved numer-\nically and, as such, are prone to errors. Thus, here we\npresent a two di\ufb00erent application to generate generic\nmotion for humans and fish locomotion. The resulting\n4animation can be also transferred to existing mesh mod-\nels of the same topology without losing the nature of\nthe original animation of generated by the correspond-\ning PDE geometry. Thus, the user has the possibility\nof choosing between the PDE-based animation or the\none associated with a more complex geometric model\ndepending on the specific end application and the com-\nputing resources available for that application.\nThis work is organised as follows. The rest of Sec-\ntion 1 provides a brief description on the theory assco-\nciated with the solution of the PDEs in use through-\nout this work. Section 2 describes the methodology un-\ndertaken for both skeletal based animation and spine\ndriven animation. Section 3 provides details of the pro-\ncess of retargeting the animation to a di\ufb00erent mesh\nmodel with similar topology. Section 4 presents results\nand examples obtained for both approaches. Finally,\nSection 5 outlines the conclusions and future directions\nin which this work may be continued.\nThe rest of this work is organized as follows: Sec-\ntion 2 describes the modelling technique for producing\ncyclic motions of a human body and Section 3. Section\n4 presents several examples of various cyclic motions\nand finally the conclusions of this work are presented\nin Section 5. components, incorporating the applicable\ncriteria that follow.\n1.3 PDEs in Geometric Design\nPartial di\ufb00erential equations (PDEs) have been exten-\nsively used in computer graphics and computer aided\ndesign for generating and manipulating complex geom-\netry. This kind of geometry is often referred as PDE sur-\nfaces and is a graphical representation of the solution\nto a given PDE. Among the advantages of using PDEs\nto generate surfaces over interpolation techniques such\nas splines are the significant reduction on the number of\nparameters required to generate a complex piece of ge-\nometry. This is because PDE based techniques utilises\nthe notion of mathematical boundary-value problems.\nPDEs enable to unify of geometric and physical aspects\nof modelling.\nBoth, implicit and parametric geometry can be gen-\nerated using PDEs. For instance, implicit PDE surfaces\ncan be utilised for free-form surface construction [4]\nnoise reduction [31] and image impainting [5]. They are\nusually the result from an evolution equation and are\nregarded as a collection of points satisfying a given ge-\nometric flow.\nParametric PDE geometry, on the other hand, re-\nsults from the solution to an elliptic PDE in a paramet-\nric domain and represents a powerful geometry genera-\ntion technique. Here the discretisation of the operator\nassociated with the elliptic PDE represents an averag-\ning process of the solution neighbourhood at the PDE\nand thus, automatically guarantees a certain degree of\nsmoothness. The applications that have benefited from\nthis comprise, surface blending [6], physics based mod-\nels animation ( [25], [7]) and surface sculpting [8].\nFor the sake of brevity, the reader is referred to [10]\nfor more details on the use of PDEs in geometric de-\nsign. The mathematical foundations of the generalised\nelliptic PDE over a parametric domain are given below.\n1.3.1 Generalised elliptic PDEs\nParametric surfaces generated through the use of ellip-\ntic PDEs are thought as the solution to such a PDE\nin two-dimensional parametric domain which is then\nmapped on to a three-dimensional space. The general\nform of an 2N -order elliptic PDE is given by,\uffff \u22022\n\u2202u2\n+\n\u22022\n\u2202v2\n\uffffN\nX(u, v) = 0 , (1)\nwhere X(u, v) represents the function giving rise to the\nparametric surface, u and v are the parametric surface\ncoordinates (which are then mapped onto (x (u, v) , y (u, v) , z (u, v))\nto generate the three-dimensional object), and N \u2265\n1 determines the order of the PDE.\nThe general solution to Equation (1) can be written\nanalytically, provided that the 2N boundary conditions\nnecessary to find a particular solution to this equation\nare periodic. Thus, the solution through separation of\nvariables can be written as,\nX(u, v) = A0(u) +\n\u221e\uffff\nn=1\n[An cos(nv) +Bn sin(nv)] , (2)\nwhere,\nA0 = a00 + a01u+ a02u2 + . . .+ a0(2N\u22121)u2N\u22121 , (3)\nAn = an1eanu + an2ueanu + an3e\u2212anu + an4ue\u2212anu\n+ . . .+ an(2N\u22123)uN\u22122eanu + an(2N\u22122)uN\u22121eanu ,\n+ an(2N\u22121)uN\u22122e\u2212anu + an(2N)uN\u22121e\u2212anu , (4)\nBn = bn1eanu + bn2ueanu + bn3e\u2212anu + bn4ue\u2212anu\n+ . . .+ bn(2N\u22123)uN\u22122eanu + bn(2N\u22122)uN\u22121eanu ,\n+ bn(2N\u22121)uN\u22122e\u2212anu + bn(2N)uN\u22121e\u2212anu , (5)\nwhere the vector valued constants aij and bij with i=1,. . . ,n\nand j = 1, . . . , 2N are determined by the specified bound-\nary conditions. Given that the boundary conditions have\nbeen assumed to be periodic, they can be expressed in\nterms of a Fourier series. LetCj(v) represent the bound-\nary conditions for which the solution to Equation gen-\neral wants to be found, its Fourier series is then given\nby,\nCj(v) = Cj0 +\n\u221e\uffff\nn=1\n\uffff\nCjn cos(nv) + S\nj\nn sin(nv)\n\uffff\n, (6)\n5reducing the problem to three linear systems of alge-\nbraic equations, which is approximated when the series\nis truncated to a finite value M , leading to,\nX(u, v) = A0(u) +\nM\uffff\nn=1\n[An cos(nv) +Bn sin(nv)]\n+ R(u, v) , (7)\nwhere, R(u, v) is a function defined as,\nR(u, v) = r1ewu + r2uewu + r3e\u2212wu + r4ue\u2212wu ,\n+ . . .+ r2N\u22123uN\u22122ewu + r2N\u22122uN\u22121ewu\n+ r2N\u22121uN\u22122e\u2212wu + r2NuN\u22121e\u2212wu , (8)\nwhere w has been conveniently chosen as w = a(M+1).\nThe vector-valued functions rj, depend on v and\nguarantee that the approximate solution satisfies the\noriginal boundary conditions. Each of the components\nof these vectors corresponds to a direction in the carte-\nsian three-dimensional space.\nEquation (7) is then composed mainly of two parts,\none of them is composed of A0(u) fully determined in\nEquation (3), which is in fact a polynomial of order\n2N \u2212 1 on u. The other part comprises the remaining\nterms, which depend on both u and v.\nThe use of Equation (1) o\ufb00ers a simple yet e\ufb00ective\nmethod for characterizing the spine since it is fully de-\ntermined in Equation (2). In crude terms, the spine of\nan object can be thought as the skeleton or backbone\nof the surface. Thus, the term A0 in Equation (2) rep-\nresents the spine of the object that is being modelled.\nThe remaining terms in Equation (7) can be consid-\nered as the radial component of the surface since they\ndetermine the distance by which a given point in the\nsurface is driven away from the spine.\nIt is important to stress that the use of Equation (1)\nas a surface generation technique is not restricted to\nperiodic boundary conditions since its solution can still\nbe found numerically. Additionally, a particular case\nEquation (1) is that when N = 2, representing the\nBiharmonic equation, which is well known in a num-\nber of disciplines such as fluid and solid mechanics and\nthus its solution is fully obtained when prescribing four\nboundary conditions. Therefore, the order of the PDE\nresponsible for generating the surface is not restricted.\nFor instance, the works presented in [35] and [33] make\nuse of a sixth order elliptic PDE to obtain a fast sur-\nface generation technique whilst guaranteeing a higher\ndegree of continuity over the generated surface.\nFigure 1 shows an example of a surface generated\nusing the Biharmonic equation and its corresponding\nspine. This surface has been obtained using a mesh grid\n21 by 21 points thus, the spine has been computed over\n21 points.\nFig. 1 Example of a PDE representation of a surface obtained\nby using the biharmonic equation. The spine of the surface is also\noutlined.\nPreviously, the spine has been used as an e\ufb03cient\nmethod for parameterising complex surfaces as described\nin [28]. This work uses the spine of the object as an\ninteractive tool for changing the shape of a given ob-\nject in a fairly intuitive manner. Some other advantages\no\ufb00ered by the use of this particular type of PDE sur-\nfaces are that this is a fast and accurate method for\nrepresenting complex geometries, guarantees smooth-\nness between surface patches, and the resolution with\nwhich the object is displayed can vary according to the\nspecific needs of the user. Note that the method pre-\nsented above is not restricted to model tubular shapes.\nComplex geometries are modelled by blending several\nsurface patches. These patches are blended with the\nmain body by extracting a suitable blending curve on\nthe surface describing the length of the fish then, three\nadditional curves are needed for each of the fins so that\na PDE-based surface can be obtained [29,30].\n2 Methodology\nThe procedure for achieving both skeletal based anima-\ntion of human motion and spine based animation of fish\nlocomotion is divided into two stages: construction of\nPDE geometry and the corresponding animation. The\nfirst of these stages is carried out in a similar manner\nfor both procedures. The second stage is the one char-\nacterizing each procedure. Moreover, spine based ani-\nmation exploits the existence of analytic expression for\nthe spine associated with the PDE surface as an anima-\ntion engine and therefore, the properties of PDE based\nsurfaces are exploited further. Details on both stages\nare given below.\n2.1 Construction of PDE geometry\nThe process of constructing a suitable PDE-based rep-\nresentation of a model to be animated can be achieved\nby either creating a number of curves denoting the con-\ntour of the character within a CAD environment and\n6then using them as boundary curves to generate the cor-\nresponding PDE surfaces or by extracting curves from\nan existing mesh model of the character and proceed\naccordingly.\nThe PDE surfaces employed in this work were ob-\ntained by extracting curves from an existing geometric\nmodel of a human body and some di\ufb00erent types of\nfish so that they can be animated. These curves were\nextracted using Maya software and then exported to a\nC++ environment to calculate the corresponding PDE\ngeometry. These cross-sectional curves are essentially\ncomposed of vertices of the original mesh model so\nthat the PDE-based surface preserves the realism of\nthe mesh model as accurately as possible. It is worth\nmentioning that more than four curves have to be ex-\ntracted from the geometric model in order to obtain a\nrealistic PDE representation.\nThus, the PDE based geometry representing a hu-\nman body is shown in Figure 2. The curves presented\nin Figure 2.a were extracted form an already existing\nmesh model and then a number of PDE surface patches\nwere obtained. The resulting PDE based geometry is\npresented in Figure 2.b. It is important to stress that\nblending between the limbs and the torso has been by\nextracting the corresponding blending curve on the sur-\nface of the torso so that the limbs could be joined to it\nsmoothly.\n(a) (b)\nFig. 2 PDE surface representing a human body: generating\ncurves(a), resulting PDE surface(b).\nSimilarly, the PDE based geometry representing a\ndolphin was obtained. Figure 3 shows the original ge-\nometric model of a dolphin from which a set of 37\nboundary curves has been extracted leading to its cor-\nresponding PDE surface. Additionally, the spine asso-\nciated with this PDE surface representation is also out-\nlined. The original geometric model is composed of 2932\nvertices and the PDE configuration has been calculated\nover a grid of 41 by 41 points.\nOnce the PDE based representation of a human\nbody and di\ufb00erent types of fish (these are shown later)\nFig. 3 Original geometric model representing a dolphin, the set\nof extracted curves from the original model together with the\nresulting PDE surface obtained using Equation (1) with N = 2\nand its corresponding spine.\nhas been obtained, details on how skeletal and spine\nbased animations were linked to the use of PDE sur-\nface representations are given below.\n2.2 Skeletal based animation\nA skeletal system is composed of a set of bones or joints\nthat define and control the movement [21, 22]. These\njoints are hierarchically organized so that the influence\nof manipulating one of these joints has on the remaining\nones is included. For the particular case of human ani-\nmation, the skeleton system represents a simplified ver-\nsion of the skeleton of a human body. The skeletal sys-\ntem shown in Figure 4.a contains the joints and several\ncontrols for di\ufb00erent parts of the body, each control can\nmanipulate the part of the body it is connected with.\nFigure 4.b, shows the IK (inverse kinematics) joints and\nhandles responsible for controlling the animation.\nThe creation of believable character motion requires\ncontrols based on how real bodies work [13]. For this\npurpose, the skeleton needs to be carefully bound with\nthe model so that the skin determined by the PDE sur-\nface. This will blend with the animation as if it had a\nreal skeleton inside it.\n7(a) (b)\nFig. 4 Components of a skeletal system: joints(a), IK handles\n(b).\n2.2.1 Skinning\nSkinning s the process through which the surface repre-\nsenting a character is bound to the skeletal system [12].\nThe skin in this case consists of the PDE surface rep-\nresentation of a human body and needs to be bound to\nthe skeletal system. To that end the boundary curves\nresponsible for generating the PDE based surface repre-\nsentation of the human body are attached to the skele-\ntal system. By skinning an object to a skeleton, the joint\ndeformations are applied to the skin (surface) and thus\ndeforming the surface itself. This represents a means\nfor animating an object through the manipulation of\nthe skeletal system. Note that the process of fitting the\ncurves with the joints accurately requires further con-\nsideration [3] since problems may occur if the curves are\nnot aligned properly with the joints and can result in\nunwanted wrapping e\ufb00ects. In this work, this problem\nhas been addresses by carefully aligning the points rep-\nresenting each curve. Figure 5 shows a schematic repre-\nsentation of the skinning process. Here, the boundary\ncurves responsible for generating the PDE have been\nbound to the skeletal system.\nOnce the curves have been attached to the skele-\ntal system, it is necessary to create di\ufb00erent poses so\nthat the animation can be produced using interpolation\ntechnique between the poses. These poses can be found\neither manually or using mathematical expressions. To\ncontrol the movement of each part of the body. This\nwork makes use of a set of mathematical expression to\ncreate the poses.\n2.2.2 Mathematical expressions controlling the\nmovement\nMathematical expressions for defining the position of\nthe joints in a skeletal for the animation of cyclic hu-\nman motion can be found in [1] and, for the sake of\nbrevity, the general idea behind the set of mathemati-\ncal expression in the mentioned work is presented here.\nFig. 5 Skinning process. The curves are attached to the skeletal\nsystem.\nThe general motion of body parts during cyclic mo-\ntion is controlled by periodic functions such as sines\nand cosines. Let x be a coordinate independent to the\ndescribed movement, y the coordinate describing the\nheight of the human body and z the direction of the\nmovement itself. Thus, the translation associated with\na given cyclic motion of a given body part is given by\nTy = sin (\u03c9t)\nTz = cos (\u03c9t) , (9)\nwhere Ty and Tz are functions representing the trans-\nlation in y and z respectively, t denotes time and \u03c9 the\nfrequency of the movement. Note that since both direc-\ntions are using the same frequency, their speed is also\nthe same. Some adjustments to simple periodic function\nare required and each joint is identified over the system.\nFor instance the equations modelling the animation of\nthe right foot are given by\nRFy = Ty (H +HR) +HRF\nRFz = \u2212Tz (L+ LR) , (10)\nwhere H controls the height of the step and is applied\nto both feet, HR and HRF are fine tune parameters\ncontrolling the step height of the right foot and the\ninitial height of the right foot respectively. Note that\nthese two parameters are generally set to zero by de-\nfault. Similarly, L controls the length of the step and is\napplied to both feet whilst LR is a fine tune parameter\nadjusting the length of the step given by the right foot\n(its default value is set to zero). The negative sign in\nthe z direction is to ensure that the feet are moving in\n8opposite directions. Therefore the equations responsi-\nble for modelling the movement of the left foot do not\ninclude this negative sign.\nSome of the poses composing the animation cycle\nassociated with walking are presented in Figure 6.\n2.3 Modelling fish locomotion through the PDE spine\nAs far as spine based animation is concerned, once the\nPDE based geometry has been defined and the the spine\nof such geometry is identified, the next stage consists of\nfinding a suitable mathematical relation for modelling\nthe undulatory character of fish locomotion through the\nuse of the spine. The mathematical function will be ap-\nplied to the spine so that it facilitates the oscillating\ne\ufb00ect on the PDE surface. Moreover, it is desired that\nthe analytic expression provides a certain degree of lib-\nerty to the user in the sense that adjusting the model\nto a di\ufb00erent movement mode should not represent a\nburden to the user. For this purpose, di\ufb00erent parame-\nters, which can be adjusted at the user\u2019s discretion, are\nincluded in the analytic expression.\nThe analytic expression used to manipulate the spine,\ndenoted by Spi(u, t), throughout an animation cycle is\ngiven by,\nSpi(u, t) = Sporiginal+\u2126(u) cos(\u03b1u+\u03c6)sin(2\u03c0\u03c9ti) ,(11)\nwhere\u2126(u) determines the amplitude and depends upon\nu, \u03c6 represents the phase, \u03b1 denotes the wave number\nand \u03c9 regulates the frequency of the undulatory move-\nment. The subscript i determines the frame for which\nthe animation cycle, and ti \u2208 [0, 1] is the time asso-\nciated with each respective frame. Notice that u also\nrequires to be normalised so that its value varies from\n0 to 2\u03c0.\nEquation (11) preserves the undulatory character\ninherent to the travelling wave formulation originally\nused to simulate fish locomotion and when assigning\nsome particular values to the former set of parameters.\ni.e. Equation (11) represents the travelling wave formu-\nlation given in [16] by\nF (u, t) = A(u) sin\n\uffff\n2\u03c0\n\u03bb\n(u\u2212 \u03c9t)\n\uffff\n, (12)\nwhere A(u) is the amplitude, \u03bb is the wave number, \u03c9 =\n2\u03c0f is the pulsation (f representing the frequency) and\nt denotes time.\nThis new formulation can be thought as a cyclic\nperturbation of the original position of the spine over a\nunit of time. Moreover, this equation can represent any\nof the four forms in which the movement observed in\nfishes has been classified.\nIt is important to stress that Equation (11) is re-\nsponsible for the animation of the segment of the spine\nrepresenting the length of the fish. The remaining seg-\nments of the spine, usually associated with dorsal and\npectoral fins, experiment a displacement since the core\nof the surface has been modified the blending curve\nhas been modified and therefore, the associated surface\npatches associated with these regions will require to be\nre-calculated on every frame.\nFigure 7 illustrates how the spine is modified over\none cycle of the undulatory movement. The horizon-\ntal line represents both the initial and final position of\nthe spine, whereas the remaining outline its position at\ndi\ufb00erent values of t.\nFig. 7 Evolution of the spine over a cycle.\nAnimation of the PDE surface representation is then\nachieved by manipulating the spine associated with the\nmodel to be animated and afterwards adding to each\npoint in the parametric domain its corresponding orig-\ninal radial component accordingly at any given frame.\nIt is clear that in this formulation conservation of\nvolume is not guaranteed. However, it is not a cause\nfor concern since a well chosen set of parameters would\nmaintain the change of volume within reasonable limits\nwhilst not compromising the realism of the model and\nthus the visual e\ufb00ect of this change of volume would\nnot be visible to the eye.\nFigure 8 shows the original PDE surface represen-\ntation of the fish shown in Figure 3 and two di\ufb00er-\nent frames of the animation cycle. The spine associated\nwith each of these PDE surfaces has also been outlined\nin the figure.\nOnce an animation cycle consisting of N frames has\nbeen obtained over the PDE surface representation, the\nanimation can be transferred to either the original mesh\nmodel from where the boundary curves associated with\nthe PDE surface were extracted or to another mesh\nmodel with the same topology.\n9Fig. 6 Di\ufb00erent stages of an animation cycle for walking.\nFig. 8 PDE surface representations of an eel at di\ufb00erent times\nover an animation cycle. The starting configuration of the eel and\ntwo di\ufb00erent frames are portrayed here. The spines associated\nwith these surfaces are also shown.\n2.4 Motion re-targetting\nMotion retargeting techniques consists of simply trans-\nferring existing motions to di\ufb00erent target objects in\norder to achieve the desired e\ufb00ect. Given that motion\nis di\ufb03cult to generate from scratch using traditional\nmethods for di\ufb00erent characters, the use of existing\nmotions is a faster alternative to obtain the anima-\ntion [9, 11]. The process of transferring the animation\nfrom a PDE surface representation to any mesh model\nrepresenting the same type of fish is carried out as fol-\nlows:\n\u2013 Alignment of the initial PDE surface representation\nand the target mesh model in the same initial posi-\ntion, that is, key features of the models have to be\npositioned so that they nearly overlap. This facili-\ntates the mapping correspondence between the two\nsurfaces.\n\u2013 Mapping correspondence between models. This pro-\ncess consists of associating each point of the mesh\nmodel with the nearest point of the PDE surface\nrepresentation in their initial configurations. Thus,\neach point in the mesh model is represented on the\nPDE surface by a given point in the PDE surface\nand it is assumed that this point remain as the clos-\nest one to the same particular point at any frame\nthroughout the animation cycle.\n\u2013 Animation of the mesh model is carried out by find-\ning the di\ufb00erence between the resulting PDE sur-\nface at a given frame and the original one for each\npoint. Then, this di\ufb00erence is added to each point of\nthe original mesh model according to the mapping\ncorrespondence previously found. The procedure is\nrepeated for each frame of the animation cycle.\nThe advantage of using motion re-targetting when\nusing PDE based surface representation is that two dif-\nferent representations of the same object can be ani-\nmated simultaneously. This provides the user the op-\nportunity to choose between a complex or a simplified\nrepresentation, depending on storage and memory re-\nsources associated with the end application where the\nanimation is required. Note that the quality of the map-\nping correspondence between the PDE-based represen-\ntation and the original mesh model depends on the res-\nolution of the grid used to compute the PDE-based rep-\n10\nresentation. Thus, using a grid with a similar number\nof points to the number of points in the original mesh\nwill produce an acceptable mapping correspondence.\nFigure 9 shows the initial and two additional frames\nof the animation cycle for both the PDE surface repre-\nsentation and the mesh model from where the boundary\ncurves were extracted. The animation was transferred\naccording to the procedure described above.\n3 Results and examples\nIn the interest of illustrating how to obtain di\ufb00erent\ntypes of human cyclic motion from the skeletal based\nplatform developed here, Di\ufb00erent types of movement\nwere modelled. One of the movements that was assessed\nwas that of running. Figure 10 shows di\ufb00erent stages of\na running cycle.\nAdditionally, the technique proposed here for motion-\nretargetting was employed to transfer di\ufb00erent anima-\ntion sequences from the initial PDE based geometry to\ndi\ufb00erent mesh models with similar topology. Figure 11\nshows some examples on how the animation was trans-\nferred from a PDE surface representation of a human\nto a mesh model of a man wearing a suit. The PDE\nbased representations are shown in the left hand side of\nthe figure.\n(a) (b)\nFig. 11 Motion re-targetting from a PDE based representation\nto a mesh model with similar topology.\nAs far as fish locomotion is concerned and given\nthat the undulatory movement of fish is mainly divided\ninto four major types, at least one fish representing\neach of these categories has been chosen to be mod-\nelled and animated in this work. The fish represent-\ning the anguilliform movement is an eel. Fish swim-\nming in subcarangiform are represented by a tropical\nfish. The trout has been selected as an suitable exam-\nple of carangiform mode and the dolphin represents a\nfish thunniform swimming mode.\nMesh models of these fish have been found in [17].\nThen, a set of boundary curves have been extracted\nfrom each model in order to obtain its respective PDE\nsurface representation. Figure 12 presents the original\nmesh model, the set of extracted boundary curves and\nits corresponding PDE surface. The fish selected to rep-\nresent this process has been the trout.\nFig. 12 Original mesh model of a trout, extracted boundary\ncurves and resulting PDE surface representation for a trout.\nOnce the PDE surface representation of the models\nhas been found, the spine has been manipulated accord-\ning to Equation (11) and for the purpose of modelling\neach category accurately, the parameters in this equa-\ntion have been adjusted so that the model is animated\nrealistically. Table 3 lists the values of all the required\nparameters to manipulate the spine according to each\nof the fishes modelled in this work. The parameters are:\namplitude \u2126(u), wave number \u03b1 and phase \u03c6.\nThus, the animation of the PDE surface representa-\ntion of each fish is obtained over a cycle. The duration of\nthe cycle has been set equal to one second and twenty-\n11\nFig. 9 PDE surface representation of cylinder and mesh model of the same fish at di\ufb00erent times over an animation cycle. The initial\nconfiguration of the fish and two di\ufb00erent frames are portrayed here for both the PDE surface and the mesh model.\nFig. 10 Di\ufb00erent stages of an animation cycle for runnining.\nMovement Fish \u2126(u) \u03b1 \u03c6 \u03c9\nAnguilliform Eel 0.3u2\u03c0 1.5\n\u03c0\n2 1.0\nSubcarangiform Trout u2\u03c0 0.75\n\u03c0\n2 2.0\nCarangiform Tropical fish 0.1 1.0 \u03c02 2.0\nThunniform Shark u2\u03c0 0.25 0.0 1.0\nThunniform Dolphin 1.0 0.75 \u03c02 1.3\nTable 1 Parameters employed to manipulate the spine of a PDE\nsurface representing each fish according to its corresponding type\nof swimming movement.\nfour frames have been obtained during each cycle. The\nresults obtained after animating the PDE surface rep-\nresentations of an eel are shown in Figure 13 the first,\nsixth, twelfth, eighteenth and last frames are displayed\nfor these fish.\nThen, the animation was transferred to the origi-\nnal mesh model representing each fish from which the\nboundary curves were extracted by using a mapping\ncorrespondence between the PDE surface representa-\ntion and the original mesh model as described before.\nFigure 14 and Figure 15 includes frames extracted\nfrom the animation sequence after it was transferred\nto the original mesh model. The frame sequence pre-\nsented in this figure is the same as the one presented\nin Figure 13. However, for the sake of brevity and com-\npleteness, the mesh models representing di\ufb00erent types\nof fish are used. Thus, the animation of a mesh model\nrepresenting a shark is shown in Figure 14, whereas a\ntropical fish, a trout and a dolphin are shown in Fig-\nure 15.\nIt is important to stress that the number of frames\ncan vary according to the specific needs of the partic-\nular application and can be computed easily thanks to\nthe analytic nature of the mechanism driving the ani-\nmation.\nA video of these animations sequences has been in-\ncluded so that the reader can appreciate the full ani-\nmation here for the models presented in this work us-\ning both PDE surfaces and mesh-based representations.\nFigure 16 shows some screenshots of such a video show-\ning di\ufb00erent types of fish simultaneously.\n12\nFig. 13 Sequence of frames belonging to an animation cycle of PDE surface representation of an eel. The first, the sixth, twelfth,\neighteen and last frame are shown.\nFig. 14 Sequence of frames belonging to an animation cycle of a mesh model representing a shark. The first, the sixth, twelfth,\neighteen and last frame are shown.\nFig. 15 Sequence of frames belonging to an animation cycle of the original mesh models associated with di\ufb00erent fishes. The first,\nthe sixth, twelfth, eighteen and last frame are shown for a tropical fish, a trout and a dolphin on each respective case.\nNote that the characteristic undulatory movement\nobserved in fish when swimming has been modelled in\nthis work and thus, the reader may have the impression\nthat the fish is swimming in still water or in vacuum.\nAt present, the hydrodynamic e\ufb00ects provoked by the\nsurroundings, such as currents and hydrodynamic drag\nhave not been considered in this work; however, these\ne\ufb00ects can be considered as future directions for con-\ntinuing this work. This can be carried out by coupling\nthe relevant partial di\ufb00erential equations modelling the\nsurrounding hydrodynamics by either including them\ndirectly into the PDE modeling the surface or by pre-\nviously adjusting the generating curves. Moreover, The\nchange in the direction in which fish swim is thought to\nbe due to abrupt movements of the lateral fins. The\nmodeling of such movements is represents a natural\nchoice for extending this work and has been left for\nthe future.\n4 Conclusions\nThis work presents a technique for animating cyclic mo-\ntions using partial di\ufb00erential equations, since these are\npowerful means for parameterizing complex surfaces in\nterms of a small set of design parameters. This is stud-\nied under two frameworks: human motion and fish loco-\nmotion. The first of these frameworks is carried out by\n13\nFig. 16 Sequence of frames belonging to an animation cycle of a video showing di\ufb00erent types of fish.\nusing skeletal based animation whereas the second one\nuses the spine of a PDE as an animation tool. The PDE\nsurface for both frameworks is found using the general\nelliptic equation.\nThe boundary curves responsible for describing the\ngeometry were attached to a skeletal system resembling\nthe human skeleton and then, analytic expressions were\nused to manipulate the joints in the skeletal system. By\ncontrast, spine based animation has been achieved by\nmanipulating the segment of the spine associated with\nthe backbone of the fish analytically. The analytic ex-\npression used to characterize the oscillatory nature of\nthe motion observed in fish when swimming has been\ngiven in terms of a set of parameters that can be var-\nied according to the type of propulsion of a given fish,\nleading to realistic animations. The technique proposed\nhere represents a more reliable alternative than the al-\nready existing spring-mass model since it is faster and\nless prone to numerical errors.\nThe last stage of both frameworks consisted on trans-\nferring the animation from the PDE based geometry to\ndi\ufb00erent mesh models with similar topologies so that\nthe user could have the ability to choose between the\ndi\ufb00erent models available representing the same geom-\netry according to the storage and memory resources of\nthe end application.\nFuture work includes the use of the spine for hu-\nman cyclic animation to control the movement without\nthe need of the skeletal system. Some other future di-\nrections for this work comprises the implementation of\nvirtual environments as considered in [14] and the in-\ntroductionof optimization techniques for the purpose of\ncontrolling the volume of the surface at each frame of\nthe animation sequence.\nReferences\n1. H. Alaskari. Cyclic animation user interface in maya, 2005.\n2. G. Allard. Control of a free-swimming fish using fuzzy\nlogic. The International Journal of Virtual reality, 6(3):23\u2013\n28, 2003.\n3. I. Baran and J. Popovic\u00b4. Automatic rigging and animation\nof 3d characters. ACM Trans. Graph., 26(3):72, 2007.\n4. M. Bertalmio, L. Cheng, S. Osher, and S. Sapiro. Variational\nProblems and Partial Di\ufb00erential Equations on Implicit Sur-\nfaces. J. Comput. Phys., 174(2):759\u2013780, 2001.\n5. M. Bertalmio, G. Sapiro, V. Caselles, and C. Ballester. Im-\nage Inpainting. pages 417\u2013424, New Orleans, USA, 2000.\nSIGGRAPH 2000.\n6. M. I. G. Bloor and M. J. Wilson. Generating Blend Sur-\nfaces using Partial Di\ufb00erential Equations. Computer Aided\nDesign, 21(3):165\u2013171, 1989.\n7. H. Du and H. Qin. Dynamic PDE surfaces with flexible and\ngeneral geometric constraints. pages 213\u2013222, Hong Kong,\n2000b. Pacific Graphics 2000.\n8. H. Du and H. Qin. Dynamic PDE-based surface design using\ngeometric and physical constraints. Graphical Models, 67:43\u2013\n71, 2005.\n9. M. Gleicher. Retargetting motion to new characters. In SIG-\nGRAPH \u201998: Proceedings of the 25th annual conference on\nComputer graphics and interactive techniques, pages 33\u201342,\nNew York, NY, USA, 1998. ACM.\n10. G. Gonza\u00b4lez Castro, H. Ugail, P. Willis, and I. J. Palmer. A\nsurvey on partial di\ufb00erential equations in geometric design.\nVisual Computer, 24:213\u2013225, 2008.\n11. C. Hecker, B. Raabe, R. W. Enslow, J. DeWeese, J. Maynard,\nand K. van Prooijen. Real-time motion retargeting to highly\nvaried user-created morphologies. In SIGGRAPH \u201908: ACM\nSIGGRAPH 2008 papers, pages 1\u201311, New York, NY, USA,\n2008. ACM.\n12. D. L. James and C. D. Twigg. Skinning mesh animations.\nIn SIGGRAPH \u201905: ACM SIGGRAPH 2005 Papers, pages\n399\u2013407, New York, NY, USA, 2005. ACM.\n13. P. Kalra, N. Magnenat-Thalmann, L. Moccozet, G. Sannier,\nA. Aubel, and D. Thalmann. Real-time animation of realistic\nvirtual humans. IEEE Comput. Graph. Appl., 18(5):42\u201356,\n1998.\n14. H. Lee, E. Kim, N. Joo, and G. Hur. Development of real time\nvirtual aquarium system. IJCSNS International Journal of\nComputer Science and Network Security, 6(7):58\u201363, 2006.\n15. L. Leronutti and L. Chittaro. Employing virtual humans for\neducation and training in x3d\/vrml worlds. Comput. Educ.,\n49(1):93\u2013109, 2007.\n16. M. J. Lighthill. Hydromechanics of aquatic animal propul-\nsion. Annual Review of Fluid Mechanics, 1(1):413\u2013446, 1969.\n17. Models. http:\/\/toucan.web.infoseek.co.jp, 2008.\n18. F. Multon, L. France, M. P. Cani-Gascuel, and G. Debunne.\nComputer animation of human walking: a survey. The Jour-\n14\nnal of Visualization and Computer Animation, 10(1):39\u201354,\n1999.\n19. D. Ormoneit, M. J. Black, T. Hastie, and H. Kjellstrom.\nRepresenting cyclic human motion using functional analysis.\nIVC, 23(14):1264\u20131276, 2005.\n20. D. Ormoneit, M. J. Black, H. Sidenbladh, and T. Hastie.\nLearning and tracking cyclic human motion. Technical re-\nport, In A. Kent & C.M. Hall (Eds.) , Encyclopedia of Li-\nbrary and Information Science, 2001.\n21. S. II Park and J. K. Hodgins. Capturing and animating\nskin deformation in human motion. ACM Trans. Graph.,\n25(3):881\u2013889, 2006.\n22. M. Pratscher, P. Coleman, J. Laszlo, and K. Singh. Outside-\nin anatomy based character rigging. In SCA \u201905: Proceedings\nof the 2005 ACM SIGGRAPH\/Eurographics symposium on\nComputer animation, pages 329\u2013338, New York, NY, USA,\n2005. ACM.\n23. K. Stephens, B. Pham, and A. Wardhani. Modelling fish\nbehaviour. In GRAPHITE \u201903: Proceedings of the 1st inter-\nnational conference on Computer graphics and interactive\ntechniques in Australasia and South East Asia, pages 71\u201378,\n2003.\n24. D. Terzopoulos. Artificial life for computer graphics. Com-\nmun. ACM, 42(8):32\u201342, 1999.\n25. D. Terzopoulos, J. Platt, A. Barr, and K. Fleischer. Elasti-\ncally Deformable Models. Computer Graphics, 21:205\u2013214,\n1987.\n26. D. Tost and X.Pueyo. Human body animation: a survey. The\nVisual Computer, 3(5):254\u2013264, 1988.\n27. X. Tu and D. Terzopoulos. Artificial fishes: physics, locomo-\ntion, perception, behavior. In SIGGRAPH \u201994: Proceedings\nof the 21st annual conference on Computer graphics and in-\nteractive techniques, pages 43\u201350. ACM, 1994.\n28. H. Ugail. On the Spine of a PDE Surface. In M. J. Wilson\nand R. R. Martin, editors, Mathematics of Surfaces, pages\n366\u2013 376. Springer, 2003.\n29. H. Ugail, M. I. G. Bloor, and M. J. Wilson. Manipulation of\npde surfaces using an interactively defined parameterisation.\nComputers & Graphics, 23(4):525\u2013534, 1999.\n30. H. Ugail, M. I. G. Bloor, and M. J. Wilson. Techniques for\nInteractive Design using the PDE Method. ACM Transac-\ntions on Graphics, 18(2):195\u2013212, 1999.\n31. G. Xu, Q. Pan, and C. L. Bajaj. Discrete Surface Modelling\nUsing Partial Di\ufb00erential Equations. Computer Aided Geo-\nmetric Design, 23:125\u2013145, 2006.\n32. X. Yang, D.C. Petriu, T.E. Whalen, and E.M. Petriu. Hier-\narchical animation control of avatars in 3d virtual environ-\nments. IEEE Transaction on Instrumentations and Mea-\nsurements, 54(3):1333\u20131341, 2005.\n33. L. You, P. Comninos, and J. J. Zhang. PDE Blending\nSurfaces with C2 Continuity. Computers and Graphics,\n28(6):895\u2013906, 2004.\n34. Q. Yu and D. Terzopoulos. Synthetic motion capture: Im-\nplementing an interactive virtual marine world. The Visual\nComputer, 15(7\/8):377\u2013394, 1999.\n35. J. J. Zhang and L. You. Fast Surface Modelling using a\n6th Order PDE. Computer Graphics Forum, 23(3):311\u2013320,\n2004.\n36. Q Zhu, M. J. Wolfgang, D. K. P. Yue, and M. S. Triantafyl-\nlou. Three-dimensional flow structures and vorticity control\nin fish-like swimming. Journal of Fluid Mechanics, 468:1\u201328,\n2002.\n"}