{"doi":"10.1109\/SPEEDHAM.2008.4581265","coreId":"54708","oai":"oai:eprints.lincoln.ac.uk:2458","identifiers":["oai:eprints.lincoln.ac.uk:2458","10.1109\/SPEEDHAM.2008.4581265"],"title":"Hardware-in-the-loop tuning of a feedback controller for a buck converter using a GA","authors":["Wilkie, K. D.","Foster, M. P.","Stone, D. A.","Bingham, C. M."],"enrichments":{"references":[{"id":1013203,"title":"A.; \u2018GA-Based Optimisation of a Continuous Walking Beam Reheating Furnace\u2019,","authors":[],"date":"2003","doi":"10.1080\/10426910701323243","raw":"Broughton, J., Mahfouf, M., Linkens, D. A.;  \u2018GA-Based Optimisation of a Continuous Walking Beam Reheating Furnace\u2019, UKCI 2003 The 2003 UK Workshop on Computational Intelligence, CD-ROM proceedings.","cites":null},{"id":1013350,"title":"Design optimisation of electric motors by genetic algorithms\u2019,","authors":[],"date":"1998","doi":"10.1049\/ip-epa:19982166","raw":"Bianchi, N. and Bolognani, S.; \u2018Design optimisation of electric motors by genetic algorithms\u2019, IEE Proc. Electric Power Applications, September 1998, Vol. 145, Iss. 5, p. 475-483.","cites":null},{"id":1013616,"title":"GA tuning of Pitch Controller for Small Scale MAVs\u2019,","authors":[],"date":"2007","doi":null,"raw":"Essex, N. C., Foster, M. P., Bingham, C. M. & Kuo, C.; \u2018GA tuning of Pitch Controller for Small Scale MAVs\u2019, World Scientific and Engineering Academy and Society (WSEAS) World Conference, Cairo \u2013 Egypt, December 2007.","cites":null},{"id":1013817,"title":"Electronics: Converters, Applications and Design\u2019,","authors":[],"date":null,"doi":null,"raw":"Mohan, N., Underland, T. M., and Robbins, W. P.; \u2018Power Electronics: Converters, Applications and Design\u2019, John Wiley & Sons.","cites":null},{"id":1014033,"title":"Genetic Algorithms in Search, Optimization, and Machine Learning\u2019,","authors":[],"date":null,"doi":"10.5860\/choice.27-0936","raw":"Goldberg, D. E.; \u2018Genetic Algorithms in Search, Optimization, and Machine Learning\u2019, Addison-Wesley Professional.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2008-07","abstract":"This paper presents a methodology for tuning a PID-based feedback controller for a buck converter using the ITAE controller performance index. The controller parameters are optimized to ensure that a reasonable transient response can be achieved whilst retaining stable operation. Experimental results demonstrate the versatility of the on-line tuning methodology","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/54708.pdf","fullTextIdentifier":"http:\/\/eprints.lincoln.ac.uk\/2458\/1\/wilkie_2.pdf","pdfHashValue":"8cc24c4bfa69462c3045e663a6fb8f1ce326a095","publisher":"Institute of Electronic and Electrical Engineering","rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:eprints.lincoln.ac.uk:2458<\/identifier><datestamp>\n      2014-08-28T09:24:52Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      7375626A656374733D6A6163735F47:6A6163735F47373030<\/setSpec><setSpec>\n      7375626A656374733D6A6163735F48:6A6163735F48363030<\/setSpec><setSpec>\n      74797065733D636F6E666572656E63655F6974656D<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/eprints.lincoln.ac.uk\/2458\/<\/dc:relation><dc:title>\n        Hardware-in-the-loop tuning of a feedback controller for a buck converter using a GA<\/dc:title><dc:creator>\n        Wilkie, K. D.<\/dc:creator><dc:creator>\n        Foster, M. P.<\/dc:creator><dc:creator>\n        Stone, D. A.<\/dc:creator><dc:creator>\n        Bingham, C. M.<\/dc:creator><dc:subject>\n        G700 Artificial Intelligence<\/dc:subject><dc:subject>\n        H600 Electronic and Electrical Engineering<\/dc:subject><dc:description>\n        This paper presents a methodology for tuning a PID-based feedback controller for a buck converter using the ITAE controller performance index. The controller parameters are optimized to ensure that a reasonable transient response can be achieved whilst retaining stable operation. Experimental results demonstrate the versatility of the on-line tuning methodology.<\/dc:description><dc:publisher>\n        Institute of Electronic and Electrical Engineering<\/dc:publisher><dc:date>\n        2008-07<\/dc:date><dc:type>\n        Conference or Workshop contribution<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:format>\n        application\/pdf<\/dc:format><dc:language>\n        en<\/dc:language><dc:identifier>\n        http:\/\/eprints.lincoln.ac.uk\/2458\/1\/wilkie_2.pdf<\/dc:identifier><dc:identifier>\n          Wilkie, K. D. and Foster, M. P. and Stone, D. A. and Bingham, C. M.  (2008) Hardware-in-the-loop tuning of a feedback controller for a buck converter using a GA.  In: Power Electronics, Electrical Drives, Automation and Motion, 2008. SPEEDAM 2008. International Symposium on, 11-13 June 2008, Ischia, Italy.  <\/dc:identifier><dc:relation>\n        http:\/\/dx.doi.org\/10.1109\/SPEEDHAM.2008.4581265<\/dc:relation><dc:relation>\n        10.1109\/SPEEDHAM.2008.4581265<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/eprints.lincoln.ac.uk\/2458\/","http:\/\/dx.doi.org\/10.1109\/SPEEDHAM.2008.4581265","10.1109\/SPEEDHAM.2008.4581265"],"year":2008,"topics":["G700 Artificial Intelligence","H600 Electronic and Electrical Engineering"],"subject":["Conference or Workshop contribution","PeerReviewed"],"fullText":" Abstract-- This paper presents a methodology for tuning \na PID-based feedback controller for a buck converter using \nthe ITAE controller performance index.  The controller \nparameters are optimized to ensure that a reasonable \ntransient response can be achieved whilst retaining stable \noperation.  Experimental results demonstrate the versatility \nof the on-line tuning methodology. \n \nIndex Terms-- DC-DC power conversion, Genetic \nalgorithms, Proportional control, Switched mode power \nsupplies \nI.  INTRODUCTION \nFor many years, PID based feedback controllers have \nbeen employed in automated control problems by virtue \nof their applicability to control a wide majority of \ndynamical systems.  PID controllers are relatively easy to \nimplement and have been applied to applications as \ndiverse as flight surface actuation and electrical motor \ndrive system control.  Owing to these factors, many \ncontroller types have been developed, with numerous \ncontroller parameter tuning algorithms being described in \nthe literature [1], the most popular being the Ziegler-\nNichols (Z-N) tuning method.  Although the Z-N tuning \nmethodology provides for reasonable controller design, \nthere are certain applications where it is impractical to \ndetermine the system responses required by the method.  \nIn these situations the 3-term PID compensator may be \ntuned in the following empirical manner:   \ni) Find an acceptable proportional gain which \nprovides some overshoot but no sustained \noscillatory behaviour. \nii) Select an integral gain that eliminates steady-\nstate error whilst not unduly affecting \nstability. \niii) Finally, the addition of derivative gain to \nimprove damping whilst not unduly \nincreasing noise. \n \nTypically this process results in a controller that is \nadequate for its purpose, but which is, in general, sub-\noptimal in some way owing the restricted manner in \nwhich the designer chooses the PID parameters.  Often \nthe designer makes initial guesses for the controller \nparameter values and then adjusts these values by an \norder of magnitude (or by a factor of 2) until a reasonable \nresponse is obtained.  Although this method can provide \n                                                          \n \nusable results, the plethora of values which the controller \nparameters can take make it nearly impossible for the \ndesigner to evaluate them all, making it highly likely that \nan \u201coptimum\u201d controller will be missed by the very \ncoarseness of the search.  \nIn an effort to overcome the disadvantages of classical \nempirical tuning techniques, this paper presents an \nautomated method for tuning PID controller parameters \nusing a genetic algorithm.  Genetic algorithms are a \nconvenient tool for efficiently searching non-linear \nworkspaces where traditional gradient based methods fail \nor are difficult to formulate.  These properties have lead \nto them being employed in applications as diverse as \noptimising order schedules for reheat furnaces [2], the \ndesign of permanent magnetic 3-phase motors [3] and the \ntuning of PID controller parameters for pitch-angle \ncontrol of a micro air vehicles [4].   \nThis paper utilizes similar technology to [4] for tuning \na PID controller for a synchronous buck converter based \non the start-up transient response.  It will be shown that \nthe proposed methodology readily determines appropriate \nparameter values for the PID controller. \nII.  BUCK CONVERTER \nAlthough the buck converter is probably the simplest \nform of switched-mode power supply (SMPS) circuit, it \nis still widely used today for efficiently reducing a high-\nvoltage to a lower voltage level more suitable for the \nintended application.  Fig. 1 shows the basic circuit for a \nbuck converter.   \n \nVdc\nS\nD\nL\nC RL Vout\n \nFig. 1 Buck converter \n \nOperation of the circuit is as follows: the DC input \nvoltage Vdc is chopped at high-frequency by switching leg \nS & D to form a rectangular shape voltage waveform.  \nThis high-frequency rectangular waveform is then passed \nthrough the low-pass filter, formed by L & C, which \nattenuates the high-frequency components of the voltage \nessentially leaving a DC component (the average value) \nwhich is taken to be the output voltage Vout of the SMPS.  \n  Hardware-in-the-loop tuning of a feedback \ncontroller for a buck converter using a GA \nMr K. D. Wilkie, Dr M. P. Foster, Dr D. A. Stone and Dr C. M. Bingham   \nDepartment of Electronic and Electrical Engineering, The University Of Sheffield, Sheffield, S1 3JD (UK) \nSPEEDAM 2008\nInternational Symposium on Power Electronics,\nElectrical Drives, Automation and Motion\n680\n978-1-4244-1664-6\/08\/$25.00 \u00a92008 IEEE\n Vout is controlled by varying the on-to-off (ton-to-toff) time \nof the switching leg.  Analysis presented in many texts, \n[5] for example, shows that the output voltage is \nproportional to the switch on-time to switching period \nratio and the DC input voltage, \ndc\non\nout VT\ntV \u221d               (1) \nwhere the switching period T=ton+toff. \nThe output voltage can easily be controlled by varying \nduty cycle (d=ton\/T) of S such that Vout is maintained at a \nsteady value despite of changes in the input voltage and \nload.  Many control methodologies for the buck converter \nhave been proposed but it is usual to regulate the output \nvoltage directly using voltage-mode control or to regulate \nthe output voltage indirectly using current-mode control \n[5].  The work presented in this paper concentrates on \nvoltage-mode control because of its simplicity of \nimplementation, however, the findings are also applicable \nto current-mode control and other more esoteric control \ntechniques. \nIII.  PID CONTROLLER \nIn order for the output voltage to remain at a stable \nvalue it is necessary to compare its value to a reference \nvalue Vref (sometimes called a demand voltage) and then \ntake appropriate remedial action to ensure that Vout=Vref.  \nUsually, this is achieved by generating an error signal \ne=Vout-Vref which the controller (sometimes referred to as \na compensator) then manipulates in such a manner so as \nto adjust Vout to ensure it is always equal to the reference.  \nThe three-term PID controller, which is the focus of this \npaper, is one example of a wide variety of controllers that \nare suitable as compensators to counteract variations in \ninput voltage or load.    \n \npK\ns\nKi\nsKd \u22c5\nBuck\nconverter\nVoutVref\nPID \ncompensator\n+\n+\n+\n+-\ne\n \nFig. 2  Block diagram of PID control system \n \nReferring to Fig. 2, the output voltage is compared to a \nreference producing an error signal, e.  The error signal is \nindividually applied to each term of the compensator after \nwhich they are combined forming the duty cycle input \ncommand to the buck converter.  The proportional gain \nKp acts as a feed-forward term allowing any changes in \nthe error to be passed to the compensator output without \ndelay.  Kp must be carefully chosen because large values \ntend to induce instabilities in the system response.  The \nintegral term Ki is used to reduce the steady-state error at \nthe expense of reducing the dynamic response.  Finally, \nthe derivative term Kd is employed to improve the \ndynamic response. \nThe performance of each prototype controller was \nevaluated using the ITAE (Integral of time multiplied by \nabsolute error) performance index [1].  The ITAE index \n(2) evaluates a controller\u2019s performance by assigning it a \nscore based on the error response of the system.  \nEssentially, good performing controllers will have lower \nITAE scores than poor performing counterparts.  As can \nbe appreciated, the error signal could possibly have a \nlarge value the instant in time after a transient event.  To \nensure that this phenomenon does not unduly affect a \ncontroller\u2019s score, the absolute error is multiplied by time \n(which should be a small value in the vicinity of the \ntransient event) to reduce its impact.  \n \n\u222b= dtetITAE              (2) \nIV.  GENETIC ALGORITHM \nGenetic algorithms borrow ideas from evolution theory \nto intelligently explore a parameter space while \noptimizing a function.  The problem is broken down into \na \u2018population\u2019 of candidate solutions which are refined \nover a number of \u2018generations\u2019.  A single candidate \nsolution is represented by a \u2018chromosome\u2019 which \nessentially encodes all of the optimizable parameters into \na single entity.  Each candidate is ranked using a fitness \nfunction (here, this is the ITAE performance index) and \nthose with the best fitness score are selected for further \nrefinement.  The refinement stage then operates on each \nof the chromosomes by i) \u2018breeding\u2019 - a process where a \nnew population of improved candidates are generated \nusing the present generation\u2019s population, and ii) \n\u2018mutation\u2019 - in which chromosomes are modified in some \nway.  Both of these operations to permit the parameter \nspace to be more effectively explored.  The whole \nprocess is iterated for many generations where the \ncandidate solutions can be seen to evolve and, hopefully, \nconverge towards a single solution.  Fig. 3 \ndiagrammatically represents the major stages of GA \noptimization. \n \n Start\nGenerate \ninitial \npopulation\nEvaluate\nsolutions\nRank\nsolutions\nMutation\nConverged\nNo\nYes\nCompleted\ndesign\nBreeding\nR\nefinem\nent\nR\nefinem\nent\n \nFig. 3  Flowchart of a typical GA \n \n681\n Further details regarding genetic algorithms and their \nimplementation can be found in [6]. \nV.  IMPLEMENTATION DETAILS \nAs is evident from the preceding sections, the whole \nbuck converter tuning system contains three main sub-\nsystems: i) the buck converter, ii) the controller and iii) \nthe genetic algorithm which was implemented in Matlab \non a PC.  The interaction of each sub-system is \nrepresented in Fig 4. \n \nGenetic algorithm\npK\ns\nKi\nsKd \u22c5\n+\n+\n+\ndsPIC based \nPID controller\n  \nVdc\nS\nD\nL\nC RL Vout\nBuck converterITAE\nKp, Ki, Kd\nduty\nVout\n \nFig. 4 Block diagram of tuning system \n \nA.  Buck converter \nA buck converter was implemented using the \nparameters detailed in Table I.  It should be noted that the \nauthors felt it necessary to replace the \u2018free wheeling\u2019 \ndiode D with a MOSFET for two reasons: i) most \ncommercial buck converters use a synchronous rectifier \nto increase efficiency, and ii) the synchronous rectifier \npermits negative inductor current which means that the \nprototype should always exhibit continuous current mode \ncontrol characteristics for the majority of its operating \nrange. \n \nTABLE I \nPROTOTYPE CONVERTER PARAMETERS \nL C R fPWM \n1.14mH 4.7\u00b5F 22\u2126 100kHz \nB.  Controller \n The feedback controller was implemented on a \nMicrochip dsPIC30F4011 high-performance \nmicrocontroller.  The dsPIC30F4011 is specifically \ndesigned for switched-mode power supply and motor \ncontrol applications and features high-accuracy PWM \ngeneration units, 10-bit ADCs which can be sampled at \n100k samples per second and a modified ALU with a \nbuilt-in hardware multiply-accumulator (MAC) enabling \nfilter and controller algorithms to be implemented with \nmuch reduced loop times when compared to traditional \nnon-MAC cores.   \nIn this application the dsPIC had the task of i) \nreceiving controller parameters from the host PC, ii) \nexercising the buck converter with a startup transient and \nattributing a score to the parameters, and iii) \ncommunicating the score back to the host PC.  The \ncontroller had a loop time of 45\u00b5s. \nRegarding the control algorithm, Microchip has kindly \nincluded a suite of PID control related functions as part of \ntheir C-language compiler [7].  Since these function \nutilize the MAC, a single control output can be evaluated \nin microseconds depending on the oscillator frequency.  \nMicrochip\u2019s particular implementation of the PID control \nalgorithm uses a fractional integer representation for the \nparameter values which significantly simplified the \ndesign of the GA.   \nC.  Genetic algorithm \nAlthough the dsPIC uses a fraction integer \nrepresentation, a floating point (or continuous variable) \nrepresentation for the PID parameters chosen because of \nthe peculiarities associated with Microchip\u2019s \nimplementation of the PID control algorithm [6].  Each \nchromosome was represented by an array of three values, \neach value being associated with the controller \nparameters Kp, Ki and Kd.  The dsPIC then evaluates the \nperformance of a candidate controller and returns an \nITAE scores.  The ITAE scores are ranked in ascending \norder, the best controller having the lowest ITAE score.  \nThe refinement stage then determines appropriate \ncontroller parameter values for the next generation. \nThe refinement stage involves the selection of suitable \nparent chromosomes from which an offspring can be \nobtained using a breeding process.  Tournament selection \nis used to obtain the parents from which the two children \nare derived.  Two parent chromosomes are selected at \nrandom and the one with the highest ranking is chosen to \nbe parent p1.  Another two parents are selected at random \nfrom which parent p2 is obtained.  The children c1 and c2 \nare obtained by combining the parents in a linear manner.  \nIf p1 and p2 are parent chromosome parents, then their \ncontributions to the children c1 and c2 are determined by a \nrandom number \u03b1 as follows, \n212\n211\n)1(\n)1(\nppc\nppc\n\u03b1\u03b1\n\u03b1\u03b1\n+\u2212=\n\u2212+=\n           (3) \nwhere \u03b1 is randomly generated number between 0 and 1. \nIn addition, to ensure there is consistency between \nsubsequent generations an elitism strategy is adopted \nwhere K highly ranked chromosomes from a total \npopulation of P chromosomes would be retained for the \nnext generation, with the remaining P-K chromosomes \nbeing replaced via the breeding process.  In this \napplication the authors decided to keep 50% of the \npopulation (i.e. K=0.5).  All the results presented in this \npaper used a population of 20 chromosomes. \nThe mutation process involved randomly selecting a \nparameter value from the entire chromosome population \nand then replacing it with a random value.  The mutation \nrate was set at 50% to ensure the search space was \nadequately explored.  In order to ensure the best \ncharacteristics were inherited from previous generations, \nthe highest ranking chromosome is excluded from the \nmutation process. \nFor the first generation, one chromosome in the \npopulation is initialized by the user to give the GA a good \nstarting point.  The remaining chromosomes were \ninitialized using a random number generator. \nVI.  RESULTS \nWith the reference voltage set at 5V and the input \nvoltage set to 12V the PID controller was manually tuned \nto obtain a reasonable transient response.  The following \nparameters (Kp=0.1, Ki=0.01, Kd=0) provided an ITAE \n682\n score of 207022 and gave the startup transient response \nshown in Fig. 5a.  The GA was initialized with these \nstarting values and run for 20 generations.  The highest \nranking candidate, after ITAE optimization, had the \nparameter values (Kp=0.6797, Ki=0.6518, Kd=0.789), an \nITAE=23154 and gave the transient response of Fig. 5b.  \nAs can be seen, by virtue of its reduced overshoot and \nsettling time the ITAE optimized controller provides a \nsuperior transient response.  Indeed, the output voltage \nsettling time has been reduced from 4ms to 0.7ms \n-1 0 1 2 3 4 5\n-5\n0\n5\n10\nTime (ms)\nO\nut\npu\nt v\nol\nta\nge\n V\nou\nt\n \n(a) \n-1 0 1 2 3 4 5\n-5\n0\n5\n10\nTime (ms)\nO\nut\npu\nt v\nol\nta\nge\n V\nou\nt\n \n(b) \nFig. 5 Startup transient response of the buck converter with Vref=5V & \nVdc=12V.  a) Manual tuned, b) GA tuned \n \nFig. 6 shows the parameter search space (Kp-Ki) and \n(Kp-Kd) as a function of ITAE.  The figure clearly \nillustrates the searching abilities of the GA owing to the \nwide distribution of evaluations distributed throughout \nthe search space.   It is interesting to note that the GA \nconducted a detailed search of the parameter space \nassociated with Kp values between 0.6 and 0.7, \nparticularly evident in Fig. 6b.  Indeed, constraining the \ndata plot to show ITAE values less than the population \nmean as depicted in Fig. 7b shows that the GA \nconsidered the range of values 0.6\u2264Kp\u22640.7 to be of \nconsiderable interest.  \n0 0.2 0.4 0.6 0.8 1\n0\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\n0.8\n0.9\n1  \nKp\n \nK\ni\nIT\nA\nE\n0.2\n0.4\n0.6\n0.8\n1\n1.2\n1.4\n1.6\n1.8\n2\nx 106\n \n(a) \n0 0.2 0.4 0.6 0.8 1\n0\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\n0.8\n0.9\n1  \nKp\n \nK\nd\nIT\nA\nE\n0.2\n0.4\n0.6\n0.8\n1\n1.2\n1.4\n1.6\n1.8\n2\nx 106\n \n(b) \nFig. 6 PID controller parameters as a function of ITAE \n0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8\n0\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\n0.8  \nKp\n \nK\ni\nIT\nA\nE\n1\n2\n3\n4\n5\n6\n7\nx 105\n \n(a) \n0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8\n0\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\n0.8\n0.9\n1  \nKp\n \nK\nd\nIT\nA\nE\n0.5\n1\n1.5\n2\n2.5\n3\n3.5\nx 105\n \n(b) \nFig. 7 PID controller parameters as a function of ITAE with ITAE less \nthan mean ITAE \n683\n  \nThe convergence properties of the GA are illustrated in \nFig. 8 where it can be seen that the average ITAE value \nper generation steadily improves as the population \nconverges towards an optimized solution.  The best ITAE \nvalue associated with a particular generation also \nindicates this trend.  Usually one would expect the best \nITAE score to decrease monotonically with increasing \ngenerations, however, in this application the best ITAE \nscore is seen to both increase and decrease in value from \none generation to the next.  The reason for this is that the \nmeasurements were performed using hardware-in-the-\nloop which means signal measurements are subject to \nnoise and other real-world influences such as heating \neffects.  Although not attempted here, the influence of \nthese phenomena of tuning performance could be reduced \nby taking the mean value of several runs. \n \n0 2 4 6 8 10 12 14 16 18 20\n0\n0.5\n1\n1.5\n2\nx 106\nGeneration\nA\nve\nra\nge\n IT\nA\nE\n p\ner\n g\nen\ner\nat\nio\nn\n0 2 4 6 8 10 12 14 16 18 20\n2\n2.5\n3\nx 104\nGeneration\nB\nes\nt I\nTA\nE\n p\ner\n g\nen\ner\nat\nio\nn\n \nFig. 8 Convergence properties of the proposed genetic algorithm \n \nIn an effort to reduce the overshoot in the output \nvoltage a new cost function J was devised which included \na term penalize large overshoot values.  Scaling the \noriginal ITAE score and including an extra term featuring \nthe maximum output voltage Vout_max and reference \nvoltage Vref gave, \nref\nrefout\nV\nVVITAEJ\n\u2212\u00d7+= max_10\n100000\n      (4) \nThe initial controller gave a score of J=218155.  The \nGA was once again run for 20 generations which \nprovided new controller parameter values of (Kp=0.6697, \nKi=0.0204, Kd=0.3859) with a score J= 20282.  The \noutput voltage startup transient obtained with the new \ncontroller parameters, Fig. 9, shows the maximum \novershoot voltage has been reduced from 8.4V (Fig. 5b) \nto 7.4V.  This overshoot could be reduced even further by \naltering the weightings on the ITAE and overshoot terms \nin (4). \n-1 0 1 2 3 4 5\n-5\n0\n5\n10\nTime (ms)\nO\nut\npu\nt v\nol\nta\nge\n V\nou\nt\n \nFig. 9 Startup transient response from PID controller parameters \nobtained using the overshoot reduction cost function \nVII.  CONCLUSIONS \nAn automated tuning methodology for optimizing PID \ncontroller parameter values regulating the output voltage \nof buck converter has been described. The performance \nof a given controller was evaluated using the ITAE \nperformance index criterion.  A genetic algorithm was \nused to search the PID parameter space to minimize the \nITAE index.  Experimental tests have demonstrated that \nthe GA can readily provide improved transient responses \nin comparison to manual heuristic tuning methods.  \nImplementation details regarding the controller and \ngenetic algorithm have been provided.  \nREFERENCES \n \n[1] Atr\u00f6m, K. J. & H\u00e4gglund, T.; \u2018PID Controllers: Theory, \nDesign and Tuning\u2019, International Society for \nMeasurement and Control, 1995. \n[2] Broughton, J., Mahfouf, M., Linkens, D. A.;  \u2018GA-Based \nOptimisation of a Continuous Walking Beam Reheating \nFurnace\u2019, UKCI 2003 The 2003 UK Workshop on \nComputational Intelligence, CD-ROM proceedings. \n[3] Bianchi, N. and Bolognani, S.; \u2018Design optimisation of \nelectric motors by genetic algorithms\u2019, IEE Proc. Electric \nPower Applications, September 1998, Vol. 145, Iss. 5, p. \n475-483. \n[4] Essex, N. C., Foster, M. P., Bingham, C. M. & Kuo, C.; \n\u2018GA tuning of Pitch Controller for Small Scale MAVs\u2019, \nWorld Scientific and Engineering Academy and Society \n(WSEAS) World Conference, Cairo \u2013 Egypt, December \n2007. \n[5] Mohan, N., Underland, T. M., and Robbins, W. P.; \u2018Power \nElectronics: Converters, Applications and Design\u2019, John \nWiley & Sons.  \n[6] Goldberg, D. E.; \u2018Genetic Algorithms in Search, \nOptimization, and Machine Learning\u2019, Addison-Wesley \nProfessional. \n[7] DS51456D \u2013 16-Bit Language Tools Libraries, Microchip \n \n684\n"}