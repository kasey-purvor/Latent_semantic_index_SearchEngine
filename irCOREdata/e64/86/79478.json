{"doi":"10.5244\/C.24.40","coreId":"79478","oai":"oai:eprints.uwe.ac.uk:11724","identifiers":["oai:eprints.uwe.ac.uk:11724","10.5244\/C.24.40"],"title":"Multi-scale depth from slope with weights","authors":["Saracchini, R.","Stolfi, J.","Leit\u00e3o, H.","Atkinson, G.","Smith, M."],"enrichments":{"references":[],"documentType":{"type":1}},"contributors":[],"datePublished":"2010-09-01","abstract":"We describe a robust method to recover the depth coordinate from a normal or slope map of a scene, obtained e.g. through photometric stereo or interferometry. The key feature of our method is the fast solution of the Poisson-like integration equations by a multi-scale iterative technique. The method accepts a weight map that can be used to exclude regions where the slope information is missing or untrusted, and to allow the integration of height maps with linear discontinuities (such as along object silhouettes) which are not recorded in the slope maps. Except for pathological cases, the memory and time costs of our method are typically proportional to the number of pixels N. Tests show that our method is as accurate as the best weighted slope integrators, but substantially more efficient in time and space","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/79478.pdf","fullTextIdentifier":"http:\/\/eprints.uwe.ac.uk\/11724\/1\/bmvc2010.pdf","pdfHashValue":"f021f150150ff2d5ecb39e99687bffdef27cd7df","publisher":null,"rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:eprints.uwe.ac.uk:11724<\/identifier><datestamp>\n      2017-03-06T05:09:29Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      74797065733D636F6E666572656E63655F6974656D<\/setSpec><\/header><metadata><rioxx xmlns=\"http:\/\/www.rioxx.net\/schema\/v2.0\/rioxx\/\" xmlns:ali=\"http:\/\/ali.niso.org\/2014\/ali\/1.0\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:dcterms=\"http:\/\/purl.org\/dc\/terms\/\" xmlns:rioxxterms=\"http:\/\/docs.rioxx.net\/schema\/v2.0\/rioxxterms\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.rioxx.net\/schema\/v2.0\/rioxx\/ http:\/\/www.rioxx.net\/schema\/v2.0\/rioxx\/rioxx.xsd\" ><ali:free_to_read>\n    \n      <\/ali:free_to_read><dc:description>We describe a robust method to recover the depth coordinate from a normal or slope map of a scene, obtained e.g. through photometric stereo or interferometry. The key feature of our method is the fast solution of the Poisson-like integration equations by a multi-scale iterative technique. The method accepts a weight map that can be used to exclude regions where the slope information is missing or untrusted, and to allow the integration of height maps with linear discontinuities (such as along object silhouettes) which are not recorded in the slope maps. Except for pathological cases, the memory and time costs of our method are typically proportional to the number of pixels N. Tests show that our method is as accurate as the best weighted slope integrators, but substantially more efficient in time and space.<\/dc:description><dc:format>application\/pdf<\/dc:format><dc:identifier>http:\/\/eprints.uwe.ac.uk\/11724\/1\/bmvc2010.pdf<\/dc:identifier><dc:language>en<\/dc:language><dc:relation>http:\/\/dx.doi.org\/10.5244\/C.24.40<\/dc:relation><dc:source>British Machine Vision Conference<\/dc:source><dc:title>Multi-scale depth from slope with weights<\/dc:title><rioxxterms:author id=\"http:\/\/\" >Saracchini, R.<\/rioxxterms:author><rioxxterms:author id=\"http:\/\/\" >Stolfi, J.<\/rioxxterms:author><rioxxterms:author id=\"http:\/\/\" >Leit\u00e3o, H.<\/rioxxterms:author><rioxxterms:author id=\"http:\/\/\" >Atkinson, G.<\/rioxxterms:author><rioxxterms:author id=\"http:\/\/\" >Smith, M.<\/rioxxterms:author><rioxxterms:publication_date>2010-09-01<\/rioxxterms:publication_date><rioxxterms:type>Conference Paper\/Proceeding\/Abstract<\/rioxxterms:type><rioxxterms:version>VoR<\/rioxxterms:version><\/rioxx><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/dx.doi.org\/10.5244\/C.24.40"],"year":2010,"topics":[],"subject":[],"fullText":"Saracchini, R., Stolfi, J., Leito, H., Atkinson, G. and Smith, M. (2010)\nMulti-scale depth from slope with weights. In: British Machine Vi-\nsion Conference, Aberystwyth, Wales, September 2010., 40.1-40.12\nWe recommend you cite the published version.\nThe publisher\u2019s URL is http:\/\/dx.doi.org\/10.5244\/C.24.40\nRefereed: Yes\n(no note)\nDisclaimer\nUWE has obtained warranties from all depositors as to their title in the material\ndeposited and as to their right to deposit such material.\nUWE makes no representation or warranties of commercial utility, title, or fit-\nness for a particular purpose or any other warranty, express or implied in respect\nof any material deposited.\nUWE makes no representation that the use of the materials will not infringe\nany patent, copyright, trademark or other property or proprietary rights.\nUWE accepts no liability for any infringement of intellectual property rights\nin any material deposited but will remove such material from public view pend-\ning investigation in the event of an allegation of any such infringement.\nPLEASE SCROLL DOWN FOR TEXT.\nSARACCHINI,STOLFI,LEIT\u00c3O,ATKINSON,SMITH: MULTISCALE DEPTH FROM SLOPE 1\nMulti-Scale Depth from Slope with Weights\nRafael F. V. Saracchini1\nRafael.Saracchini@uwe.ac.uk\nJorge Stolfi1\nstolfi@ic.unicamp.br\nHelena C. G. Leit\u00e3o2\nhcgl@ic.uff.br\nGary A. Atkinson3\nGary.Atkinson@uwe.ac.uk\nMelvyn L. Smith3\nMelvyn.Smith@uwe.ac.uk\n1 Computer Institute\nState University of Campinas\nCampinas, Brazil\n2 Computer Institute\nFederal Fluminense University\nNiteroi, Brazil\n3 Machine Vision Laboratory\nUniversity of West England\nBristol, UK\nAbstract\nWe describe a robust method to recover the depth coordinate from a normal or slope\nmap of a scene, obtained e.g. through photometric stereo or interferometry. The key\nfeature of our method is the fast solution of the Poisson-like integration equations by a\nmulti-scale iterative technique. The method accepts a weight map that can be used to\nexclude regions where the slope information is missing or untrusted, and to allow the\nintegration of height maps with linear discontinuities (such as along object silhouettes)\nwhich are not recorded in the slope maps. Except for pathological cases, the memory and\ntime costs of our method are typically proportional to the number of pixels N. Tests show\nthat our method is as accurate as the best weighted slope integrators, but substantially\nmore efficient in time and space.\n1 Introduction\nThe integration of a slope map to yield a height (or depth) map is a critical step in ma-\nchine vision techniques such as shape-from-shading [11, 12] and multiple-light photometric\nstereo [13, 28]. Photometric stereo is a promising technology for 3D data capture in many\napplications, as shown in figure 1. It has a number of inherent advantages over other compet-\ning techniques,such as laser and stereo triangulation; including lower hardware cost, higher\nresolution, and simultaneous albedo recovery. A major obstacle to its wider use is the cost\nand fragility of current slope map integration algorithms \u2014 which are the topic of this paper.\nAbstractly, the goal is to determine an unknown real function Z of some D \u2286 R2, given\nits gradient \u2207Z = (\u2202Z\/\u2202x,\u2202Z\/\u2202y). That is, find Z such that \u2202Z\/\u2202x = F and \u2202Z\/\u2202y = G,\nwhere F and G are two given real functions. This problem has a differentiable solution if\nand only if the field (F,G) is curl-free, that is \u2202F\/\u2202y\u2212\u2202G\/\u2202x = 0 everywhere. Then Z(x,y)\ncan be expressed as a line integral along any path from a reference point (x0,y0) to (x,y).\nIn practical contexts, however, there are at least three difficulties with this approach.\nFirst, the slope functions F and G are generally discretised, i.e. known only at certain slope\nc\u00a9 2010. The copyright of this document resides with its authors.\nIt may be distributed unchanged freely in print or electronic forms.\nBMVC 2010 doi:10.5244\/C.24.40\n2 SARACCHINI,STOLFI,LEIT\u00c3O,ATKINSON,SMITH: MULTISCALE DEPTH FROM SLOPE\nsampling points p[u,v], which usually form a regular orthogonal grid. Second, the data is\nusually contaminated with noise arising from unavoidable measurement, quantization, and\ncomputation errors. At some points, the expected magnitude of the error may be so high\nthat the slope is essentially unknown; and this may happen over large regions of the do-\nmain D. Third, the height function Z is usually discontinuous. The height field Z(x,y) of\na real scene almost always has cliffs\u2014step-like discontinuities along the silhouettes of solid\nobjects. Some slope acquisition technologies, including most photometric stereo methods,\nwill severely underestimate the mean slope across cliffs. Slope values will also be mean-\ningless wherever the height itself is poorly defined, e.g. where the scene is highly porous,\ntransparent, or covered with hair. In general, neither the position nor the magnitude of\nthese anomalies can be deduced from the slope maps alone. Because of these complications,\nseveral integration methods that have been described in the literature (see section 2) are un-\nsuitable for photometric stereo, either for being too sensitive to noise and cliffs, or for being\ntoo costly for use with high-resolution maps.\nFigure 1: Some applications of slope integration in photometric stereo: 3D face\ncapture [10], security inspections [25], archaeology [14, 21], and dermatology [24].\nIn this paper we describe a multi-scale iterative integration procedure that is as accurate\nand robust as the best existing metods, but substantially more efficient. Except for some\npathological cases, its memory and time cost scales linearly with the number of data pixels,\nmaking it quite practical even for multi-megapixel maps. Like the best existing methods [3],\nour procedure also accepts a weight map that specifies the reliability of each gradient sample\nand the location of suspected cliffs. This information allows the procedure to ignore unre-\nliable data and to avoid integrating across cliffs. The weight map can be obtained in many\nways, either from external information or by error detection algorithms applied to the slope\ndata [2, 3, 4, 5, 16, 19, 23]. Most of these weight acquisition techniques can be used with our\nintegrator as well. In this paper, however, we are concerned only with the central integration\nproblem, and therefore we assume that the slope and weight maps are given and fixed.\nSARACCHINI,STOLFI,LEIT\u00c3O,ATKINSON,SMITH: MULTISCALE DEPTH FROM SLOPE 3\n2 Related Work\nMost of the previous algorithms for the integration of slope maps can be classified into four\nbroad groups: path integration, Fourier filtering, local iteration, and direct system solving.\nPath-integration methods assign a height to one reference pixel p and then compute the\nheight of every other pixel q by performing a numerical line integral of the gradient field\nalong a path from p to q. This group includes the naive row-by-row integration [29] as well\nas other methods that choose the paths so as to avoid low-quality or missing data\u2014e.g. by\nfinding an optimum spanning tree and integraling along it, as done by Fraile and Hancock [2,\n7]. These methods are generally quite fast, since they require only O(N) operations for an\nimage with N pixels. However, they are very sensitive to noise and discontinuities: if the\nheights of two adjacent pixels p\u2032, p\u2032\u2032 are computed by distinct paths, integration of the noise\ncomponent of the gradient will result in a spurious height diference between them.\nThis problem can be alleviated, but not soved, by averaging the integral along many\ndistinct paths between the two pixels [20]. While this approach gets rid of spurious steps\ndue to noise, its cost is prohibitive (proportional to N2.5 for an image with N pixels) and its\nresults are still inferior to those of non-path methods described below.\nFourier filtering methods are based on the observation that integrating a function corre-\nsponds to dividing each component of the Fourier transform by 2pi times its frequency. This\napproach was pioneered by Frankot and Chellapa [8]. In the frequency domain the curl\ncomponent of the gradient data can be easily filtered out, and other smoothing filters can be\napplied as well [27]. Fourier techniques can be used also to efficiently solve the unweighted\nPoisson equation (see below) as done by Georghiades et al. [9].\nThrough the use of fast Fourier transform algorithms (FFT or DCT), these methods ob-\ntain the height field for N pixels using only O(N) space and O(N logN) operations. However,\nthis approach does not allow the use of a weight map, because the FFT always gives the same\nweight to all data samples. As a result, these methods will flatten out any invisible cliffs and\ndeform the surface over a wide area surrounding them.\nLocal iteration methods reduce the slope integration problem to a system of N equations\nwhose unknowns are the N heights, and where each equation relates one height value and\nits neighbours to the given derivatives in that neighbourhood. The equations (whether linear\nor non-linear) are then solved as in the Gauss-Seidel iterative method: starting with some\ninitial guess, each equation is solved in turn to recompute one height value, assuming the\nneighbours are fixed, until all the heights appear to stabilise [11, 18].\nThe local equations can be derived in several ways [3, 11, 22]. However, all these local\ncriteria generally yield some discrete (and possibly non-linear) version of Poisson\u2019s equation\n\u22072Z = h(x,y). Since each equation refers to a small number of height values, the whole\nsystem uses only O(N) storage. This formulation, unlike path-integration methods, does not\ngenerate spurious steps in the presence of noise. Indeed, the solution is theoretically equal\nto that of the Fourier filtering. The advantage of the iterative formulation, as pointed out by\nAgrawal et al. in 2006 [3], is that each equation can be tuned to ignore bad data samples and\nsuspected discontinuities, as indicated by a weight map. On the other hand, although each\niteration requires only O(N) operations, the number of iterations needed to reduce the error\nbelow a specified tolerance is usually proportional to the square of the image\u2019s diameter, that\nis to N; so the total running time is proportional to N2.\nIn 2004, Chen, Wang and Wang described a \u201cpyramid-based\u201d method to speed up iter-\native solution of the Poisson equations [6]. Their method (which does not accept weights)\n4 SARACCHINI,STOLFI,LEIT\u00c3O,ATKINSON,SMITH: MULTISCALE DEPTH FROM SLOPE\nsolves a sequence of N\u00d7N Poisson systems, where at stage k each height z[u,v] is related to\nheights z[u\u00b12k,v\u00b12k]. While the use of longer strides substantially improved the conver-\ngence of the iteration, the speed and accuracy of this method were still quite inferior to those\nof Fourier-based algorithms.\nDirect system solving methods also set up an N\u00d7N system of equations from local con-\nstraints, but solve the system by a direct method, such as Gaussian LU or Cholesky factor-\nization. (If the equations are non-linear, they must be linearized and the process must be\niterated over, as as in the Newton-Raphson method.) This approach is used, in particular, by\nseveral of Agrawal\u2019s \u201cPoisson based\u201d methods. [3].\nDirect solution methods are generally slower than Fourier methods but much faster than\niterative ones. However, their running time grows like O(N1.5), according our tests; and\ntheir memory requirements (even with good sparse matrix software) makes them impractical\nfor multi-megapixel slope maps.\n3 Weighted multiscale integration\nOur multiscale integrator builds the linear equation system for a weighted variant of the\ndiscrete Poisson problem, and solves it by the Gauss-Seidel (or Gauss-Jacobi) iterative algo-\nrithm. Unlike other local iterative methods, it obtains the initial guess by recursively solving\na reduced scale version of the problem. Namely, it reduces the given slope maps f ,g,w to\none half of their original width and height, recursively computes from them a reduced-scale\nheight map z, expands the latter to twice its size, and uses the Gauss-Seidel iteration to ad-\njust this map accoding to the full-scale slope data. The recursion stops at a level m where the\nslope maps are so small that the iteration will quickly converges from any initial guess. See\nfigure 2.\n\u21d2 \u21d2 \u21d2 \u21d2\n\u21d3 \u21d3 \u21d3 \u21d3 \u21d3\n\u21d0 \u21d0 \u21d0 \u21d0\nFigure 2: The multiscale integration method.\nSARACCHINI,STOLFI,LEIT\u00c3O,ATKINSON,SMITH: MULTISCALE DEPTH FROM SLOPE 5\n3.1 The algorithm\nThe central part of our algorithm is the recursive procedure ComputeHeights below:\nComputeHeights( f ,g,w)\n1. If f is small enough then\n2. z\u2190 (0,0, . . . ,0);\n3. else\n4. f \u2032\u2190 ShrinkSlopes( f ,w); g\u2032\u2190 ShrinkSlopes(g,w);\n5. w\u2032\u2190 ShrinkWeights(w);\n6. z\u2032\u2190 ComputeHeights( f \u2032,g\u2032,w\u2032);\n7. z\u2190 ExpandHeights(z\u2032);\n8. A,b\u2190 BuildSystem( f ,g,w);\n9. z\u2190 SolveSystem(A,b,z);\n10. Return z.\nNote that our scheme differs substantially from the \u201cpyramid-based\u201d method of Chen, Wang\nand Wang [6], since at each scale k we build a Poisson system with only N\/4k unknowns,\ninstead of N.\nInputs: The the slope maps f ,g and the weight map w should be three real-valued arrays\nwith the same dimensions. Each sample f [u,v] is assumed to be an average of \u2202Z\/\u2202x around\nthe slope sampling point p[u,v] = (u+1\/2,v+1\/2); and similarly for g[u,v]. Each weight\nw[u,v] should be a non-negative number reflecting the relative trustworthiness of the corre-\nsponding slope values f [u,v], g[u,v]. The weight w[u,v] should be zero if the corresponding\nslopes are completely unreliable \u2014 in particular, if there may be a cliff crossing the pixel\ncentered at p[u,v]. In that case, the data f [u,v] and g[u,v] will be completely ignored. Our\nalgorithm assumes that w[u,v] = 0 also for any pixels theat lie outside the domain D.\nOutputs: The algorithm returns an array of height samples z[u,v], nominally taken at height\nsampling points q[u,v] = (u,v), displaced from the slope sampling points p[u,v] by half a\nstep in each direction. Because of these assumptions, the z array computed by our method\nwill have one more column and one more row than the slope maps.\nBuilding the system: Like other Poisson-based methods [18, 26], our algorithm builds in\nstep 8 a linear equation system with one equation and one unknown for each height value\nz[u,v]. Each equation states the equality between two estimates of Laplacian L(z) = \u2207 \u00b7(\u2207Z)\nat the point q[u,v]: one computed from the unknown heights (the left-hand side), and one\nfrom the given slope values (the right-hand side).\nThe precise nature of the estimates is not critical; our multiscale iterative method can\nbe used with other Laplacian estimators, including non-linear ones. In our implementa-\ntion [17], we use the equation \u2212L (z)[u,v] =\u2212D( f ,g)[u,v], where\n\u2212L (z)[u,v] = z[u,v]\u2212\nw\u22120\nw00\nz\u22120\u2212\nw+0\nw00\nz+0\u2212\nw0\u2212\nw00\nz0\u2212\u2212\nw0+\nw00\nz0+ (1)\n\u2212D( f ,g) = w\u2212\u2212\nw00\nf\u2212\u2212+ w\u2212+\nw00\nf\u2212+\u2212 w+\u2212\nw00\nf+\u2212\u2212 w++\nw00\nf++\n+\nw\u2212\u2212\nw00\ng\u2212\u2212+\nw+\u2212\nw00\ng+\u2212\u2212\nw\u2212+\nw00\ng\u2212+\u2212\nw++\nw00\ng++\n(2)\n6 SARACCHINI,STOLFI,LEIT\u00c3O,ATKINSON,SMITH: MULTISCALE DEPTH FROM SLOPE\nand, for all r,s \u2208 {\u2212,+}= {\u22121,+1},\nfrs = f [u+ r,v+ s] grs = g[u+ r,v+ s] wrs = w[u+ r,v+ s]\nw0s = w+s +w\u2212s wr0 = wr++wr\u2212\nw00 = w0++w0\u2212+w\u22120 +w+0\nz0s = z[u,v+ s] zr0 = z[u+ r,v]\n(3)\nBoundary cases: These formulas assume that the weight w[u,v] is 0 if the corresponding\npoint lies outside the domain D. With this convention, equation (3.1) can be used even along\nthe margins of the domain D, or at grid corners q[u,v] that are adjacent to missing slope\ndata. As long as one of the slope samples surrouding a point q[u,v] has nonzero weight,\nequation is valid and can be used to compute z[u,v] from its neighbours. As a consequence,\nthe algorithm will patch up isolated one- to three-pixel \u201choles\u201d in the data by integrating\naround them.\nIndeterminate values: On the other hand, when all four slope values surrounding a pixel\nare missing the value of z[u,v] is essentially indeterminate. One may exclude those height\nvalues from the linear system, and set them to 0, NAN, or any other arbitrary value.\nAnalysis: To analyse the efficiency of this algorithm, we should consider what the steps do in\nthe frequency domain. When the slope maps are reduced, the higher-frequency components\nof the data are lost, while the remaining lower-frequency components have their wavelengths\nreduced by one half. Therefore, the recursively computed solution z(k+1) to the reduced\nproblem, after being expanded to the original scale, will be mostly correct in the lower\nfrequencies; only the small detail (at the scale of one or two pixels) will be missing. These\ndetails will be fixed by the Gauss-Seidel solver after a small number of iterations, largely\nindependent of N. So, the recursive process is fast because each Fourier component of the\nheight map gets computed at the scale where its wavelength is only a few pixels. Therefore,\nthe time spent at scale k will be proportional N\/4k; and the total time for all scales will be\n(1+1\/4+1\/42 + \u00b7 \u00b7 \u00b71\/4m)O(N)< (4\/3)O(N) = O(N).\n4 Robustness and accuracy\nTo test the robustness and accuracy of our method, we compared its output with that of\nrepresentative implementations of the main competing methods.\nData sets: We used the slope datasets and weight maps shown in figure 3. The sets sbabel,\nspdome, and cbramp were derived from mathematically defined height fields Z(x,y). The\nsbabel field is C1-smooth except at the ends of the ramp, with steep but not vertical walls.\nThe spdome field has a slope discontinuity around the dome\u2019s rim. The cbramp field is\nC1-smooth along the ramp but has vertical cliffs on three sides. The gradient maps were\nobtained by Hann-weighted subsampling of the analytic derivatives, a process that results in\nsome sampling noise at gradient discontinuities, and is completely oblivious to cliffs. In\nparticular, the the cliffs around the top platform of cbramp are completely invisible in its\nslope map, and their location is defined only by the zeros in the given weight map. The\npsface data set is the gradient field of a human face, obtained by photometric stereo [10].\nIts binary weight mask, manually created with an image editor, excludes regions where the\ndata is known to be unreliable.\nMethods: Each dataset was processed with the algorithms listed in table 1. Methods\nAS, EM, ME, AT, UP were described by Agrawal et. al in 2006 [3]; we used their Matlab\nSARACCHINI,STOLFI,LEIT\u00c3O,ATKINSON,SMITH: MULTISCALE DEPTH FROM SLOPE 7\nimplementations [1], adapted to use our input and output file formats. Methods AS, EM, ME,\nAT use the weighted Poisson-based approach, with Matlab\u2019s sparse matrix solver; the first\nthree use iterative weight adjustment. However in AS and EM the weight map is internal and\nis neither accepted not returned by the code. UP is an unweighted Poisson method whose\nlinear system is solved by discrete cosine transfom.\nTable 1: Methods used in the accuracy tests.\nCode Type Takes w Description\nFC Fourier transf. No Frankot-Chellappa [8, 15]\nUP Fourier transf. No Least Squares (unweighted Poisson) [1, 3]\nAS Direct sol. No \u03b1-Surface [3]\nEM Direct sol. No Energy Minimization [1, 3]\nAT Direct sol. Yes Affine Transforms (or Diffusion) [1, 3]\nME Direct sol. Yes M-Estimators [1, 3]\nMS Multi-scale iter. Yes Our multiscale integratiom method [17]\nReference solutions: Ideally, the accuracy of a slope integrator should be evaluated by\ncomparing the computed z values with the \u201ctrue\u201d height field. However, this information is\nnot available for the the psface dataset, and its slope data is known to contain substantial\nlocalized errors due to highlights and other non-Lambertian features. Even the synthetic\ndata are affected by gradient sampling noise in regions of high curvature. Thus, if we\ncompared the integrated field with the original function Z(x,y) or with laser-range height\nmaps we would not be able to separate the effects of data errors from errors introduced by\nthe integrator. Therefore, we choose to evaluate the accuracy of each method by comparing\nits output to that of Agrawal\u2019s M-Estimators (ME) method, which appears to be the most\naccurate and robust of the integrators we tested, and accurately reproduces the true height\nfield of the synthetic maps. In each case we computed the RMS error e between the two\nintegrated height fields, after shifting both to have zero mean; and the relative RMS error\ne\/R, where R is the RMS value of the two height fields. In these computations we considered\nonly the parts of the domain where the weight field w was nonzero.\nResults and conclusions: As table 2 and figure 3 show, the only methods that obtained\nusable results in all data sets were Agrawal\u2019s Affine Transforms (AT) and M-Estimators\n(ME) methods, and our multiscale method (MS). The unweighted methods (FC and UP)\nand those which do not accept external weight maps (AS and EM) failed completely on the\ndatasets with cliffs and invalid data.\nLimitations The multiscale approach is not valid in situations like figure 4, when the actual\ndomain (the region where the weights are nonzero) includes a long and narrow corridor.\nAfter a couple of reductions, the corridor will be overrun by zero weights. Then the recursive\nsolution will be useless as a starting guess, and the Gauss-Seidel iteration may take thousands\niterations to converge. In such cases, direct solution of the linear system may be much faster\nthan our method. How to make MS work in such cases is beyond the scope of this paper.\n8 SARACCHINI,STOLFI,LEIT\u00c3O,ATKINSON,SMITH: MULTISCALE DEPTH FROM SLOPE\nspdome sbabel cbramp psface\nf ,g\nw\nFC\nUP\nAS\nEM\nAT\nME\nMS\nFigure 3: Datasets used in the tests, showing (from top to bottom) the gradient map\nf ,g, the reliability weight map w, and the height field integrated by each method.\nSARACCHINI,STOLFI,LEIT\u00c3O,ATKINSON,SMITH: MULTISCALE DEPTH FROM SLOPE 9\nTable 2: Relative RMS errors of each method from the ME reference solution.\nspdome sbabel cbramp psface\nMeth. e e\/R e e\/R e e\/R e e\/R\nFC 0.66 1.9% 0.56 2.1% 29.99 120.1% 19.47 98.0%\nUP 0.14 0.4% 0.00 0.0% 29.61 107.1% 28.94 114.6%\nAS 2.28 6.6% 3.22 12.5% 29.30 107.7% 29.76 106.0%\nEM 4.82 13.4% 2.14 8.0% 29.61 107.0% 24.67 108.7%\nAT 1.77 5.1% 3.17 12.3% 0.00 0.0% 0.10 0.7%\nME 0.00 0.0% 0.00 0.0% 0.00 0.0% 0.00 0.0%\nMS 0.67 1.9% 0.60 2.2% 4.23 13.0% 0.73 3.9%\nFigure 4: A pathological case for multiscale integration. From left to right: f (0)\nand w(0) (256\u00d7256), w(4) (16\u00d716), and the heights z obtained by ME and by our\nalgorithm with 200 iterations per level.\n5 Time and memory\nDatasets and methods: To evaluate the efficiency of our method, we measured the comput-\ning time and memory needed for the integration of two square gradient fields, spdome and\npsface, sampled with various grid sizes from 64\u00d764 to 512\u00d7512.\nWe compared our method against two weighted Poisson integrators provided by Agrawal\net al. [1], namely the Affine Transforms method (AT) and the weighted Poisson system\nbuilder and solver (PC) that is the innermost loop of their M-Estimator, Energy Minimisation,\nand \u03b1-Surface methods. We removed the outermost loop of these last three methods since\nwe are concerned only with the integration problem, not the problem of inferring the weight\nmap. Those are the only methods in the literature that accept a reliability weight map (thus\nsolving the same problem as ours) and are fast enough for practical use.\nResults and conclusions: The results of these tests are shown in figure 5. The absolute\nruning times are not directly comparable since our code is in C while the other methods are\nin Matlab\/Octave. However, the plots in figure 5 (top) show that the running times scale\nquite differently: like O(N) for our algorithm (solid line). and apparently like O(N1.5) for\nthe direct Poisson solvers (dashed lines).\nOur multiscale integrator also uses less memory than the direct solvers; see figure 5\n(bottom). Its memory usage is dominated by the Poisson system\u2019s matrix A which has at\nmost 5N nonzero entriesit uses 60N bytes for A and 5N bytes for the reduced-scale maps.\nThe direct solving methods need to store the matrix A and also Gauss\u2019s triangular factor U\n(or Cholesky\u2019s R). For these methods, we counted the nonzero entries NA in A and NU in\nU , and estimated the memory usage conservativley as 12NA+16NU bytes. We observed that\ntheir memory usage seems to grow like O(N1.15) (dashed lines).\n10 SARACCHINI,STOLFI,LEIT\u00c3O,ATKINSON,SMITH: MULTISCALE DEPTH FROM SLOPE\n 0.01\n 0.1\n 1\n 10\n 100\n 1000\n64x64 128x128 256x256 512x512\nspdome (sec)AT\nPC\nMS\n 0.01\n 0.1\n 1\n 10\n 100\n 1000\n64x64 128x128 256x256 512x512\npsface (sec)AT\nPC\nMS\n 0.1\n 1\n 10\n 100\n 1000\n64x64 128x128 256x256 512x512\nspdome (MB)AT\nPC\nMS\n 0.1\n 1\n 10\n 100\n 1000\n64x64 128x128 256x256 512x512\npsface (MB)AT\nPC\nMS\nFigure 5: Top: Log-log plots of the running time of two direct solving methods\n(PC,AT) and of our multiscale method (MS), in seconds. Bottom: Log-log plots\nof memory usage for the system\u2019s matrix A and its U factor (if any), in MBytes.\n6 Conclusions\nOur weighted multiscale integration algorithm is substantially faster and uses substantially\nless memory than other methods with comparable accuracy and robustness, both in practice\nand asymptotically. As fas as we know, ours is the only method that can integrate slope maps\nof megapixel resolution, with missing data and cliffs of unknown height, within practical\nmemory and time limits. It can be used on its own, with a given weight mask, or as the core\nof other methods that attempt to deduce the weight mask from the slope data and other clues.\nOut method can also be adapted to use other estimators for the Laplacian and divergent.\n7 Acknowledgments\nThis work was partially funded by the UWE, by the Brazilian agencies FAPESP (grants\n2007\/59509-9 and 2007\/52015-0), CNPq (grant 301016\/92-5 and 550905\/07-3), and CAPES\n(grant 342109-0) and by the UK Research Concil EPSRC (grant EP\/E028659\/1).\nReferences\n[1] A. Agrawal. Matlab\/Octave code for robust surface reconstruction from 2d gra-\ndient fields. Available from http:\/\/www.umiacs.umd.edu\/\n~\naagrawal\n\/software.html. Accessed on 2010-05-01, 2006. See [3].\n[2] A. Agrawal, R. Chellappa, and R. Raskar. An algebraic approach to surface reconstruc-\ntion from gradient fields. In Proc. 2005 Intl. Conf. on Computer Vision (ICCV), pages\n174\u2013181, 2005.\nSARACCHINI,STOLFI,LEIT\u00c3O,ATKINSON,SMITH: MULTISCALE DEPTH FROM SLOPE 11\n[3] A. Agrawal, R. Raskar, and R. Chellappa. What is the range of surface reconstructions\nfrom a gradient field? In Proc. 9th European Conf. on Computer Vision (ECCV),\nvolume 3951, pages 578\u2013591, 2006.\n[4] G. A. Atkinson and E. R. Hancock. Surface reconstruction using polarization and\nphotometric stereo. In Proc. 12th Intl. Conf. on Computer Analysis of Images and\nPatterns (CAIP), volume 4673, pages 466\u2013473, 2007.\n[5] M. Chandraker, S. Agarwal, and D. Kriegman. ShadowCuts: Photometric stereo with\nshadows. In CVPR07, pages 1\u20138, 2007.\n[6] Y. Chen, H. Wang, and Y. Wang. Pyramid surface reconstruction from normal. In\nProc. 3rd IEEE Intl. Conf. on Image and Graphics (ICIG), pages 464\u2013467, 2004.\n[7] R. Fraile and E. R. Hancock. Combinatorial surface integration. In Proc. 18th\nIntl. Conf. on Pattern Recognition (ICPR\u201906) Volume 1, pages 59\u201362, 2006.\n[8] R. T. Frankot and R. Chellappa. A method for enforcing integrability in shape from\nshading algorithms. IEEE Trans. Pattern Analysis and Machine Intelligence, 10(4):\n439\u2013451, 1988.\n[9] A. S. Georghiades, P. N. Belhumeur, and D. J. Kriegman. From few to many: Illu-\nmination cone models for face recognition under variable lighting and pose. IEEE\nTransactions on Pattern Analysis and Machine Intelligence, 23:643\u2013660, 2001.\n[10] M. F. Hansen, G. A. Atkinson, L. N. Smith, and M. L. Smith. 3d face reconstructions\nfrom photometric stereo using near infrared and visible light. Computer Vision and\nImage Understanding, In Press, 2010. doi: 10.1016\/j.cviu.2010.03.001.\n[11] B. K. P. Horn. Height and gradient from shading. Intl. Journal of Computer Vision, 5\n(1):37\u201375, 1990.\n[12] B. K. P. Horn and Michael J. Brooks. Shape from Shading. MIT Press, Cambridge,\nMass., 1989.\n[13] B. K. P. Horn, R. J. Woodham, and W. M. Silver. Determining shape and reflectance\nusing multiple images. Technical Report AI Memo 490, MIT Artificial Intelligence\nLaboratory, 1978.\n[14] M. Kampel and R. Sablatnig. 3D puzzling of archeological fragments. In Danijel\nSkocaj, editor, Proc. of 9th Computer Vision Winter Workshop, pages 31\u201340, 2004.\n[15] P. D. Kovesi. frankotchellappa.m: The Frankot-Chellappa gradient integrator\nin MATLAB\/Octave. Univ. of Western Australia, http:\/\/www.csse.uwa.edu\n.au\/\n~\npk\/Research\/MatlabFns\/Shapelet\/, 2000.\n[16] H. C. G. Leit\u00e3o, R. F. V. Saracchini, and J. Stolfi. Matching photometric observation\nvectors with shadows and variable albedo. In Proc. 21th Brazilian Symp. on Computer\nGraphics and Image Processing (SIBGRAPI), pages 179\u2013186, 2008.\n[17] Helena C. G. Leit\u00e3o, Rafael F. V. Saracchini, and Jorge Stolfi. Depth from slope by\nweighted multi-scale integration. Technical Report IC-10-09, Institute of Computing,\nState University of Campinas, 2010.\n12 SARACCHINI,STOLFI,LEIT\u00c3O,ATKINSON,SMITH: MULTISCALE DEPTH FROM SLOPE\n[18] B. K. P.Horn. Height and gradient from shading. Technical Report AI Memo 1105,\nMassachusetts Institute of Technology, 1989.\n[19] D. Reddy, A. Agrawal, and R. Chellappa. Enforcing integrability by error correction\nusing \u21131-minimization. In Proc. 2009 IEEE Conf. on Computer Vision and Pattern\nRecognition, pages 2350\u20132357, 2009.\n[20] A. Robles-Kelly and E. R. Hancock. Surface height recovery from surface normals\nusing manifold embedding. In Proc. Intl. Conf. on Image Processing (ICIP), 2004.\n[21] R. F. V. Saracchini, J. Stolfi, and H. C. G. Leit\u00e3o. Shape reconstruction using a gauge-\nbased photometric stereo method. In Proceedings of CLEI, 2009.\n[22] G. D. J. Smith and A. G. Bors. Height estimation from vector fields of surface normals.\nIn Proc. IEEE Intl. Conf. on Digital Signal Processing (DSP), pages 1031\u20131034, 2002.\n[23] J. Sun, M. L. Smith, L. N. Smith, S. Midha, and J. Bamber. Object surface recovery\nusing a multi-light photometric stereo technique for non-Lambertian surfaces subject\nto shadows and specularities. Image and Vision Computing, 25(7):1050\u20131057, 2007.\n[24] J. Sun, M. L. Smith, L. N. Smith, L. Coutts, R. Dabis, C. Harland, and J. Bamber.\nReflectance of human skin using colour photometric stereo - with particular application\nto pigmented lesion analysis. Skin Research and Technology, 14:173\u2013179, 2008.\n[25] J. Sun, M. L. Smith, A. R. Farooq, and L. N. Smith. Concealed object perception and\nrecognition using a photometric stereo strategy. In Proc. 11th Intl. Conf. on Advanced\nConcepts for Intelligent Vision Systems (ACIVS), volume 5807, pages 445\u2013455, 2009.\n[26] D. Terzopoulos. The computation of visible-surface representations. IEEE Transac-\ntions on Pattern Analysis and Machine Intelligence, 10(4):417\u2013438, 1988.\n[27] T. Wei and R. Klette. Height from gradient using surface curvature and area constraints.\nIn Proc. 3rd Indian Conf. on Computer Vision, Graphics and Image Processing, 2002.\n[28] R. J. Woodham. Photometric method for determining suface orientation from multiple\nimages. Optical Engineering, 19(1):139\u2013144, 1980.\n[29] Z. Wu and L. Li. A line-integration based method for depth recovery from surface\nnormals. Computer Vision, Graphics and Image Processing, 43(1):53\u201366, 1988.\n"}