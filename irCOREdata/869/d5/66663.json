{"doi":"10.1017\/S0963548303005844","coreId":"66663","oai":"oai:dro.dur.ac.uk.OAI2:603","identifiers":["oai:dro.dur.ac.uk.OAI2:603","10.1017\/S0963548303005844"],"title":"Approximating the number of acyclic orientations for a class of sparse graphs.","authors":["Bordewich,  M."],"enrichments":{"references":[],"documentType":{"type":1}},"contributors":[],"datePublished":"2004-01","abstract":"The Tutte polynomial $T(G;x,y)$ of a graph evaluates to many\\ud\ninteresting combinatorial quantities at various points in the $(x,y)$\\ud\nplane, including the number of spanning trees, number of forests,\\ud\nnumber of acyclic orientations, the reliability polynomial, the\\ud\npartition function of the Q-state Potts model of a graph, and the Jones polynomial\\ud\nof an alternating link. The exact computation of $T(G;x,y)$ has been shown by\\ud\nVertigan and Welsh \\cite{vertiganandwelsh} to be \\#P-hard at all but a\\ud\nfew special points and on two hyperbolae, even in the restricted class\\ud\nof planar bipartite graphs. Attention has therefore been focused on\\ud\napproximation schemes. To date, positive results have been restricted\\ud\nto the upper half plane $y>1$, and most results have relied on a\\ud\ncondition of sufficient denseness in the graph. In this paper we\\ud\npresent an approach that yields a fully polynomial randomised\\ud\napproximation scheme for $T(G;x,y)$ for  $x>1,\\ y=1$, and for\\ud\n$T(G;2,0)$, in a class of sparse graphs. This is the first positive\\ud\nresult that includes the important point $(2,0)$","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/66663.pdf","fullTextIdentifier":"http:\/\/dro.dur.ac.uk\/603\/1\/603.pdf","pdfHashValue":"e1d28f7b9e5993400fb776409a4ec18446c9ff02","publisher":"Cambridge University Press","rawRecordXml":"<record><header><identifier>\n  \n    \n      oai:dro.dur.ac.uk.OAI2:603<\/identifier><datestamp>\n      2011-06-14T15:36:01Z<\/datestamp><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n    \n      \n        Approximating the number of acyclic orientations for a class of sparse graphs.<\/dc:title><dc:creator>\n        Bordewich,  M.<\/dc:creator><dc:description>\n        The Tutte polynomial $T(G;x,y)$ of a graph evaluates to many\\ud\ninteresting combinatorial quantities at various points in the $(x,y)$\\ud\nplane, including the number of spanning trees, number of forests,\\ud\nnumber of acyclic orientations, the reliability polynomial, the\\ud\npartition function of the Q-state Potts model of a graph, and the Jones polynomial\\ud\nof an alternating link. The exact computation of $T(G;x,y)$ has been shown by\\ud\nVertigan and Welsh \\cite{vertiganandwelsh} to be \\#P-hard at all but a\\ud\nfew special points and on two hyperbolae, even in the restricted class\\ud\nof planar bipartite graphs. Attention has therefore been focused on\\ud\napproximation schemes. To date, positive results have been restricted\\ud\nto the upper half plane $y>1$, and most results have relied on a\\ud\ncondition of sufficient denseness in the graph. In this paper we\\ud\npresent an approach that yields a fully polynomial randomised\\ud\napproximation scheme for $T(G;x,y)$ for  $x>1,\\ y=1$, and for\\ud\n$T(G;2,0)$, in a class of sparse graphs. This is the first positive\\ud\nresult that includes the important point $(2,0)$. <\/dc:description><dc:subject>\n        Tutte polynomial<\/dc:subject><dc:subject>\n         FPRAS<\/dc:subject><dc:subject>\n         Approximation<\/dc:subject><dc:subject>\n         Complexity.<\/dc:subject><dc:publisher>\n        Cambridge University Press<\/dc:publisher><dc:source>\n        Combinatorics, probability and computing, 2004, Vol.13(1), pp.1-16 [Peer Reviewed Journal]<\/dc:source><dc:date>\n        2004-01<\/dc:date><dc:type>\n        Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:identifier>\n        dro:603<\/dc:identifier><dc:identifier>\n        issn:0963-5483<\/dc:identifier><dc:identifier>\n        issn: 1469-2163<\/dc:identifier><dc:identifier>\n        doi:10.1017\/S0963548303005844<\/dc:identifier><dc:identifier>\n        http:\/\/dro.dur.ac.uk\/603\/<\/dc:identifier><dc:identifier>\n        http:\/\/dx.doi.org\/10.1017\/S0963548303005844<\/dc:identifier><dc:format>\n        application\/pdf<\/dc:format><dc:identifier>\n        http:\/\/dro.dur.ac.uk\/603\/1\/603.pdf<\/dc:identifier><dc:rights>\n        \u00a9 2004 Cambridge University Press<\/dc:rights><dc:accessRights>\n        info:en-repo\/semantics\/openAccess<\/dc:accessRights><\/oai_dc:dc><\/metadata><\/record>","journals":[{"title":null,"identifiers":["0963-5483","issn: 1469-2163","issn:0963-5483"," 1469-2163"]}],"language":{"code":"en","id":9,"name":"English"},"relations":[],"year":2004,"topics":["Tutte polynomial","FPRAS","Approximation","Complexity."],"subject":["Article","PeerReviewed"],"fullText":"Durham Research Online\nDeposited in DRO:\n23 May 2008\nVersion of attached file:\nPublished Version\nPeer-review status of attached file:\nPeer-reviewed\nCitation for published item:\nBordewich, M. (2004) \u2019Approximating the number of acyclic orientations for a class of sparse graphs.\u2019,\nCombinatorics, probability and computing., 13 (1). pp. 1-16.\nFurther information on publisher\u2019s website:\nhttp:\/\/dx.doi.org\/10.1017\/S0963548303005844\nPublisher\u2019s copyright statement:\n2004 Cambridge University Press\nAdditional information:\nUse policy\nThe full-text may be used and\/or reproduced, and given to third parties in any format or medium, without prior permission or charge, for\npersonal research or study, educational, or not-for-profit purposes provided that:\n\u2022 a full bibliographic reference is made to the original source\n\u2022 a link is made to the metadata record in DRO\n\u2022 the full-text is not changed in any way\nThe full-text must not be sold in any format or medium without the formal permission of the copyright holders.\nPlease consult the full DRO policy for further details.\nDurham University Library, Stockton Road, Durham DH1 3LY, United Kingdom\nTel : +44 (0)191 334 3042 \u2014 Fax : +44 (0)191 334 2971\nhttp:\/\/dro.dur.ac.uk\nCombinatorics, Probability and Computing (2004) 13, 1\u201316. c\u00a9 2004 Cambridge University Press\nDOI: 10.1017\/S0963548303005844 Printed in the United Kingdom\nApproximating the Number of Acyclic Orientations\nfor a Class of Sparse Graphs\nMAGNUS BORDEWICH\u2020\nNew College, Oxford OX1 3BN, UK\nand\nMathematical Institute, 24\u201329 St. Giles\u2019, Oxford OX1 3LB, UK\n(e-mail: bordewic@maths.ox.ac.uk)\nReceived 14 May 2002; revised 31 March 2003\nThe Tutte polynomial T (G; x, y) of a graph evaluates to many interesting combinatorial\nquantities at various points in the (x, y) plane, including the number of spanning trees,\nnumber of forests, number of acyclic orientations, the reliability polynomial, the partition\nfunction of the Q-state Potts model of a graph, and the Jones polynomial of an alternating\nlink. The exact computation of T (G; x, y) has been shown by Vertigan and Welsh [8] to\nbe #P-hard at all but a few special points and on two hyperbolae, even in the restricted\nclass of planar bipartite graphs. Attention has therefore been focused on approximation\nschemes. To date, positive results have been restricted to the upper half plane y > 1, and\nmost results have relied on a condition of sufficient denseness in the graph. In this paper\nwe present an approach that yields a fully polynomial randomized approximation scheme\nfor T (G; x, y) for x > 1, y = 1, and for T (G; 2, 0), in a class of sparse graphs. This is the\nfirst positive result that includes the important point (2, 0).\n1. Introduction\nAn acyclic orientation is an assignment of orientations to the edges of the graph G, such\nthat the resulting directed graph contains no cycles. The associated counting problem is\nthe evaluation of the Tutte polynomial at T (G; 2, 0). Although this may seem a somewhat\nspecial problem, it turns out by a classic result of Zaslavsky [10] that this is related to\nhyperplane arrangements. We regard each edge (x, y) of a graph G on n vertices as the\nhyperplane x = y in n-dimensional Euclidean space. The number of acyclic orientations\nof G equals the number of chambers in the arrangement of hyperplanes described in this\nway by G. For example the well-known braid arrangement of hyperplanes comes from\nthe complete graph Kn (see Orlik and Terao [7]). The number of forests in a graph equals\nT (G; 2, 1). These are two of a host of points in the (x, y) plane at which the evaluation\n\u2020 Research funded by the EPSRC and Vodafone, and supported in part by ESPRIT Project RAND-APX.\n2 M. Bordewich\nof the Tutte polynomial is an interesting invariant of the underlying graph. The Tutte\npolynomial is a polynomial of two variables, which can be defined for a graph, matrix\nor a general matroid. It is defined recursively, and it follows that direct computation\nof the Tutte polynomial of a graph on m edges takes time exponential in m. A diverse\ncollection of properties turns out to be determined by the Tutte polynomial. In addition to\nstandard graph-theoretic properties, there are examples from many other fields including\nstatistical physics, knot theory and network theory. The following well-known problems\nare specializations of the Tutte polynomial to particular points or lines in the (x, y) plane:\n(i) the chromatic polynomial of a graph, along y = 0;\n(ii) the flow polynomial of a graph, along x = 0;\n(iii) the all terminal network reliability probability of a network, along x = 1, y > 1;\n(iv) the partition function of the Ising and Q-state Potts model, on the hyperbola\n(x \u2212 1)(y \u2212 1) = Q;\n(v) the Jones polynomial of an alternating knot, on the hyperbola xy = 1;\n(vi) the weight enumerator of a linear code over GF(q), on the hyperbola\n(x \u2212 1)(y \u2212 1) = q.\nExact computation of the Tutte polynomial has been shown to be #P-hard at all but\na few points in the plane [8]. Indeed, T (G;\u22122, 0) counts the number of proper three-\ncolourings of the graph G. Since the associated decision problem is NP-complete, no\napproximation scheme that reliably differentiates zero from nonzero can exist for this\npoint, unless NP = RP. In other regions the decision problems are not NP-complete,\nindeed they are often trivial: every graph has an acyclic orientation. So at these points the\nassumption that NP \u0002= RP does not immediately rule out a fully polynomial randomized\napproximation scheme (FPRAS).\nA RAS for a quantity \u03c0(G) is a randomized approximation algorithm such that, for\nany given \u0002 > 0, \u03b4 > 0, with probability greater than 1 \u2212 \u03b4 the output \u03c0\u02c6(G, \u0002, \u03b4) is within\na relative error of 1 \u00b1 \u0002,\nPr[|\u03c0(G) \u2212 \u03c0\u02c6(G, \u0002, \u03b4)| > \u0002\u03c0(G)] < \u03b4.\nA RAS is described as fully polynomial (FPRAS) if the running time is bounded by a\npolynomial in |G|, 1\/\u03b4 and 1\/\u0002. The question of where in the (x, y) plane and for which\nclasses of graphs there exists an FPRAS is wide open.\nThe positive results are few: Jerrum and Sinclair [4] presented an FPRAS along the\nhyperbola (x \u2212 1)(y \u2212 1) = 2 for all graphs, Annan [2] dealt with the case y = 1, x \u0001 1 for\ndense graphs (those having minimum degree \u2126(|V (G)|), Alon, Frieze and Welsh [1] showed\nthat an FPRAS exists for x \u0001 1, y \u0001 1 for dense graphs, and for all y \u0001 1 for strongly\ndense graphs (minimum degree > |V (G)|\/2). Recently Karger [5] proved the existence of\na similar scheme (for all y > 1) for graphs with no small cutset (edge connectivity at least\nc log |V (G)| for some c depending on x and y). Even though all these previous results\nexcept [4] have made use of a denseness or similar condition, Welsh conjectured [9] that\nthere exists an FPRAS scheme for all graphs, in the region x \u0001 1, y \u0001 1.\nA full survey on the Tutte polynomial can be found in [9]. Throughout, our graph G\nwill have n vertices and m edges. A circuit C is a connected subgraph of G such that every\nApproximating Tutte Invariants in Sparse Graphs 3\nvertex in C has degree two (a simple cycle). The length of a circuit is the number of edges\nit contains. The girth g of a graph is the length of the smallest circuit. The evaluations\nconsidered are trivial for graphs with no circuits, therefore we assume that G has at least\none circuit, and hence that g is well defined for all G.\n1.1. Results\nIn this paper we present an FPRAS for T (G; x, y) along the half line x > 1, y = 1, and at\nthe point (2, 0), for a class of graphs with large girth (girth at least c log |V (G)| for some\nc depending on x). The evaluations of the Tutte polynomial at these points includes the\nnumber of acyclic orientations and the number of forests of the graph. To be precise we\nprove the following result.\nTheorem 1.1. Let \u03b4 > 0, x > 1 be fixed, and let G\u03b4,x be the class of graphs with girth\ng \u0001 (5 + \u03b4) logx(n). Then\n(i) there is an FPRAS for T (G; x, 1) for all G \u2208 G\u03b4,x,\n(ii) there is an FPRAS for T (G; 2, 0) for all G \u2208 G\u03b4,\uf732.\nThis is the first result that provides an approximation scheme outside the hyperbola\n(x \u2212 1)(y \u2212 1) = 2 for any class of sparse graphs, and also the first positive result that\nincludes the point (2, 0). We include a proof that exact evaluation is #P-hard even on this\nrestricted class of graphs.\nAlthough this class of sparse graphs (those with large girth) may look restrictive, in\ncomputing there is much interest in expander graphs, which make efficient networks using\nfew edges. There are many well-known constructions of expanders with constant degree\nand girth of order log n [3].\nOur approach is essentially a dualization (in the matroidal sense) of that of Karger [5],\nwho presents an FPRAS for evaluating the reliability polynomial for the class of graphs\nwith minimum edge cut-set of size c logy n. In Section 2 we bound the number of minimum\ncircuits (those with length equal to the girth), and near-minimum circuits of graphs. In\nSection 3 we show that the near-minimum circuits can be enumerated in polynomial\ntime. In Section 4 we introduce WASTE(p), the probability that a random subgraph of\nG contains a cycle. Using the previous results, we first bound WASTE(p) for graphs with\ngirth greater than c log1\/p n, and then by converting the problem into a DNF boolean\nformula we present an FPRAS for WASTE(p) for all graphs. In Section 5 we introduce\nthe efficiency probability Eff(G, p), a dual to the well-known reliability probability and\nessentially given by the Tutte polynomial along the line y = 1, x > 1. We observe that\n1 \u2212 WASTE(G, p) = Eff(G, p) = (p\u22121 \u2212 1)m\u2212n+1pmT (G; p\u22121, 1)\nand hence we construct an FPRAS for evaluating T (G; x, 1) for x > 1 from the FPRAS\nfor WASTE(p), whenever WASTE(p) can be bounded away from 1. Then, in Section 6, we\nextend the previous work to incorporate the point (2, 0), by using an alternative reduction\nto DNF formulae. Section 7 contains a proof that even on this class of sparse graphs, exact\nevaluation of the Tutte polynomial is #P-hard in the region considered. Finally Section 8\npresents an FPRAS at some additional points on the hyperbola (x \u2212 1)(y \u2212 1) = \u22121.\n4 M. Bordewich\n2. Counting paths and circuits\nIn this section we calculate bounds on the number of short circuits in simple graphs, via\nbounds on the number of paths of short length.\nLemma 2.1. Let G be a simple graph on n vertices, with girth g. Then, for any v \u2208 V (G)\nthere are at most n \u2212 1 distinct paths of length strictly less than g\/2, that have v as one\nendpoint.\nProof. Consider a fixed vertex v \u2208 V (G). Let P1 and P2 be any two distinct paths of\nlength strictly less than g\/2, with v as one endpoint. Let u1 and u2 be the other endpoints\nof P1 and P2 respectively. Then u1 and u2 are distinct, for otherwise G must contain a\ncircuit of length strictly less than g (since |Pi| < g\/2, for i = 1, 2). The number of distinct\nendpoints of paths starting at v is at most n \u2212 1, hence the number of distinct paths of\nlength strictly less than g\/2 with v as one endpoint is at most n \u2212 1.\nWe now use this lemma to put a bound on the number of short circuits. To do this\nwe regard a simple circuit as being made up of a collection of short paths, and establish\nbounds on the possible ways of combining short paths. The following result may be\nknown, but I have been unable to find it in the literature.\nProposition 2.2. Let G be a simple graph on n vertices, with girth g. Then, for any h \u0001 g,\nthere are at most n2\nh\ng\u22122 +1, circuits of length h.\nProof. Let d be the largest integer less than g\/2. In other words d= g\/2\u2212 1 for g even,\nand d= (g\u2212 1)\/2 for g odd. Any circuit C of length h can be expressed as the union\nof \u0004h\/d\u0005 paths of length d, and one path of length l = h \u2212 \u0004h\/d\u0005d (if h is not an exact\nmultiple of d). We shall label these paths P1, P2, . . . , Pt.\nLet us first count the number of circuits containing a fixed vertex v. These circuits can\ncertainly be expressed as a union of paths such that P1 has v as an endpoint. Hence\nby Lemma 2.1 there are at most n \u2212 1 choices for P1, and since Pi+1 must start at the\nendpoint of Pi, there are at most n \u2212 1 ways of choosing each of the subsequent paths\n(again by Lemma 2.1). Finally, the last path (Pt = P\u0006h\/d\u0007) is forced in order to make a\ncircuit, since both endpoints are fixed and the existence of two short (length l) paths\nbetween them would imply the existence of a circuit of length less than g. Hence the total\nnumber of circuits containing v is at most (n \u2212 1)\u0004h\/d\u0005. Hence the total number of circuits\nof length h is at most\nn(n \u2212 1)\u0004h\/d\u0005 < n\u0004h\/d\u0005+1 \u0002 n2 h(g\u22122) +1.\nNote that, for h = g \u0001 6, there are at most n2\ng\ng\u22122 +1 \u0002 n4 minimum circuits, for h = g < 6\nwe can achieve the same bound by using a little more care. We now define an \u03b1-small\ncircuit. A circuit C in a graph of girth g is called \u03b1-small if |C| \u0002 \u03b1g.\nApproximating Tutte Invariants in Sparse Graphs 5\nCorollary 2.3. Let G be a graph on n vertices, with girth g \u0001 6. Then, for any \u03b1 \u0001 1, G\nhas at most n3\u03b1+2 \u03b1-small circuits.\nProof. Since no circuit can have length greater than n, we may assume \u03b1g\u0002 n. From\nProposition 2.2, the number of \u03b1-small circuits in G is at most\u2211\nh\u0001\u03b1g\nn2\nh\ng\u22122 +1 < \u03b1gn2\n\u03b1g\ng\u22122 +1\n\u0002 \u03b1gn3\u03b1+1\n\u0002 n3\u03b1+2.\n3. Listing small circuits\nIn Section 2 we have bounded the number of \u03b1-small circuits in a graph G. When we\ncome to constructing an FPRAS in Section 4, we will need a full list of the \u03b1-small circuits\nfor some fixed \u03b1. However, the observations used in proving the theorems of Section 2\nwill enable us to create such a list by exhaustive search.\nTheorem 3.1. Let G be a simple graph on n vertices, with girth g \u0001 6. Then, for \u03b1 \u0001 1, a\ncomplete list of all \u03b1-small circuits can be constructed in running time O(n3\u03b1+3).\nProof. First form a list of all the paths of length d, where d is the largest integer less\nthan g\/2, as in Theorem 2.2. This can be done in time O(n3), since there are at most n\nsuch paths starting at each vertex, and these can be found in time O(n2). Next, for each\nh, g \u0002 h \u0002 \u03b1g, we can use the construction of Theorem 2.2 to exhaustively check all of\nn\u0004h\/d\u0005 possible circuits through each vertex v. So for each h there are at most n3\u03b1+1 circuits\nto be checked, and they can be checked in time O(n3\u03b1+2). This gives a total running time\nbounded by O(n3\u03b1+3).\n4. Approximating WASTE(G, p)\nFor a given graph G, let \u03bd(G) be the cyclomatic number of G, in other words, for G with\n\u03ba(G) connected components,\n\u03bd(G) = |E(G)| \u2212 |V (G)| + \u03ba(G) = m \u2212 n+ \u03ba(G).\nNote that \u03bd(G) = 0 if and only if G is a forest, i.e., G has no cycles. For a fixed graph G, let\nGp be a random subgraph of G obtained by deleting each edge of G independently with\nprobability (1 \u2212 p). Let WASTE(G, p) be the probability that \u03bd(Gp) > 0. WASTE refers to\nthe fact that Gp has at least one cycle, therefore \u2018wasted\u2019 edges that could be removed,\nwhile retaining the same connected components. In the remainder of the paper we shall\nwrite WASTE(p) for WASTE(G, p) where there is no confusion over the subject graph.\nWe now use the results of Section 2 to bound WASTE(p), and then to present an FPRAS\nfor WASTE(p).\n6 M. Bordewich\n4.1. Bounding WASTE(p)\nTheorem 4.1. For fixed 0 < p < 1, let G be a graph with girth g = (5+ \u03b4)| log(p)| log(n) for some\n\u03b4 > 0. Let Gp be a random subgraph of G obtained by independently deleting each edge with\nprobability (1 \u2212 p). Then:\n(1) the probability that \u03bd(Gp) > 0 is at most n\n\u2212\u03b4(1 + 5\n\u03b4\n),\n(2) for \u03b1 > 1 the probability that some cycle of length at least \u03b1g is present in Gp is at most\nn\u2212\u03b1\u03b4(1 + 5\n\u03b4\n).\nProof. Let all the circuits of G be listed in order of nondecreasing length C1, C2, . . . .\nLet pi = p\n|Ci|. First note that pg = n\u2212(5+\u03b4). Also, from Corollary 2.3 there are fewer than\nn3\u03b1+2 < n5\u03b1 circuits of length at most \u03b1g, so we have that pn5\u03b1 < p\n\u03b1g = n\u22125\u03b1(1+\u03b4\/5). Hence,\nWASTE(p) \u0002\n\u2211\nC: cycles in G\np|C|\n\u0002\nn5\u2211\ni=1\npg +\n\u2211\ni>n5\npi\n\u0002 n5n\u2212(5+\u03b4) +\n\u2211\ni>n5\ni\u2212(1+\u03b4\/5)\n< n\u2212\u03b4 +\n\u222b \u221e\nn5\nx\u2212(1+\u03b4\/5) dx\n< n\u2212\u03b4 +\n[\n\u22125\n\u03b4\nx\u2212\n\u03b4\n5\n]\u221e\nn5\n< n\u2212\u03b4 +\n5\n\u03b4\nn\u2212\u03b4 .\nThis gives part (1). For part (2) we split the sum slightly differently to get the result:\nPr(\u2203 C \u2208 Gp : |C| \u0001 \u03b1g) \u0002\n\u2211\nC:|C|\u0002\u03b1g\np|C|\n\u0002\nn5\u03b1\u2211\ni=1\np\u03b1g +\n\u2211\ni>n5\u03b1\npi\n\u0002 n5\u03b1n\u2212(5\u03b1+\u03b1\u03b4) +\n\u2211\ni>n5\u03b1\ni\u2212(1+\u03b4\/5)\n< n\u2212\u03b1\u03b4 +\n5\n\u03b4\nn\u2212\u03b1\u03b4 .\n4.2. An FPRAS for WASTE(p)\nWe now present an FPRAS for WASTE(p). We begin with a technical lemma, which\nasserts that we can find an \u03b1 which splits the circuits of G into \u03b1-small circuits, which we\ncan deal with, and larger circuits which are unlikely to appear in Gp.\nLemma 4.2. Given \u0002 > 0 and 0 < p < 1. Let G be a graph. If pg \u0002 n\u221210, then for \u03b1 =\n2 \u2212 ln(\u0002\/6)\n2 ln n\nthe probability that any circuit of length greater than \u03b1g is present in Gp is less\nthan (\u0002\/3) WASTE(p).\nApproximating Tutte Invariants in Sparse Graphs 7\nProof. Since pg < n\u221210 < n\u22125, we have that\npg = n\u2212(5+\u03b4) some \u03b4 \u0001 5, g = (5 + \u03b4) log n| log p| . (4.1)\nHence g satisfies the conditions of Theorem 4.1. Using the observation that WASTE(p) \u0001\npg , we see that\n\u03b1 = 2 \u2212 ln(\u0002\/6)\n2 ln n\n,\n\u03b1 > 1 +\n5\n\u03b4\n\u2212 ln(\u0002\/6)\n\u03b4 ln n\n,\n\u03b1\u03b4 ln n > (\u03b4 + 5) ln n \u2212 ln(\u0002\/6),\nn\u2212\u03b1\u03b4 <\n\u0002\n6\nn\u2212(\u03b4+5),\n2n\u2212\u03b1\u03b4 < \u0002\/3 WASTE(p),\n(1 + 5\/\u03b4)n\u2212\u03b1\u03b4 < \u0002\/3 WASTE(p).\nThe result follows by Theorem 4.1.\nTheorem 4.3. Given fixed 0 < p < 1, then for any graph G there is an FPRAS for\nWASTE(p).\nProof. We split the proof into two cases, depending on the number of vertices n of G,\nthe girth g and the fixed probability p.\nCase 1: pg \u0001 n\u221210.\nIf pg \u0001 n\u221210 then WASTE(p) \u0001 n\u221210, since the probability that a given minimum circuit is\npresent is at least n\u221210. Hence we can use a simple Monte Carlo approximation as follows.\nFor j = 1 to t we simulate Gp by deleting each edge with probability (1 \u2212 p), and set Xj = 1\nif \u03bd(Gp) > 0 and Xj = 0 otherwise. Our estimate for WASTE(p) will be X =\n1\nt\n\u2211t\nj=1 Xj .\nClearly E[X] = WASTE(p), and the variance of X is WASTE(p)(1 \u2212 WASTE(p))\/t. Hence,\ngiven \u03b4, \u0002 > 0, we set t = \u0006 n10\n\u00022\u03b4\n\u0007 and Chebyshev\u2019s inequality gives\nPr[|X \u2212 WASTE(p)| \u0001 \u0002WASTE(p)] \u0002 Var(X)\n\u00022WASTE(p)2\n\u0002 (1 \u2212 WASTE(p))\n\u00022WASTE(p)t\n<\n\u00022\u03b4\n\u00022WASTE(p)n10\n< \u03b4.\nFinally, since t is polynomial in \u03b4\u22121, \u0002\u22121 and n, and also since each simulation takes time\npolynomial in n, we have an FPRAS for WASTE(p).\nCase 2: pg < n\u221210.\nAs shown in Lemma 4.2, we can find an \u03b1 which splits the set of circuits of G into large\ncircuits, such that the probability of any one being present is less than (\u0002\/3) WASTE(p),\n8 M. Bordewich\nand \u03b1-small circuits which we can list. Following the approach of Karger [5], once the\n\u03b1-small circuits have been listed, we can encode the information in a boolean formula in\ndisjunctive normal form. We take a boolean variable xe for each edge in G. We take xe\nto be true if e is present, and false otherwise. Then, if we take a list of all the \u03b1-small\ncircuits, C1, C2, . . . the clause corresponding to circuit Ci is C\u02c6i = \u2227e\u2208Cixe. The event that at\nleast one \u03b1-small circuit is present is then C\u02c6 = \u2228iC\u02c6i. This is a formula of |E(G)| variables,\nin disjunctive normal form, of length bounded by \u03b1gc, where c is the number of small\ncircuits. Karp, Luby and Madras [6] present an FPRAS for any \u0002 > 0 which approximates\nthe probability that a randomly generated assignment to such a formula is satisfying, to\nwithin a relative error of 1 \u00b1 \u0002 in O(l\/\u00022) time, where l is the length of the formula. We\nuse this FPRAS to approximate the probability that no \u03b1-small circuit is present, and\nhence WASTE(p).\nTo be precise, given any \u0002, \u03b4 > 0 we take \u03b1 = 2 \u2212 ln(\u0002\/6)\n2 ln n\n, ignore the circuits of length\ngreater than \u03b1g, and by Lemma 4.2 only incur an absolute error of (\u0002\/3)WASTE(p)\nby doing so. By Theorem 3.1, we can list all the circuits of length at most \u03b1g in time\nO(n3\u03b1+3) = O(n9\u0002\u22123\/2). Hence, using Karp, Luby and Madras\u2019s FPRAS for DNF formulae,\nwith input size O(\u03b1gn3\u03b1+2) = O(n9\u0002\u22123\/2), we can approximate the probability that a circuit\nof length up to \u03b1g is present in Gp to within a relative error of \u0002\/3, with high probability\nin polynomial time (i.e., for any \u03b4 > 0, this probability can be made greater than 1 \u2212 \u03b4\nin time polynomial in \u03b4\u22121). Hence we have an approximation for WASTE(p) to within a\nrelative error of \u0002\/3 + \u0002\/3 < \u0002 with high probability in polynomial time.\n5. Approximating the Tutte polynomial\nAlon, Frieze and Welsh [1] used an approximation scheme for the reliability polynomial\n(for dense graphs) and a manipulation of the Tutte polynomial, in order to get an\napproximation scheme for T (G; x, y) for x, y \u0001 1. We introduce the efficiency probability,\na dual concept to the reliability probability. As before we have a fixed graph G, and a\nrandom subgraph Gp. Whereas Rel(G, p), gives the probability that Gp is connected, we\ndefine Eff(G, p) to be the probability that Gp is a forest. Thus Eff(G, p) = 1 \u2212 WASTE(G, p).\nRecall that \u03bd(Gp) = |E(Gp)| \u2212 |V (Gp)| + \u03ba(Gp) = |E(Gp)| \u2212 r(Gp), where \u03ba(Gp) is the\nnumber of connected components of Gp, r(Gp) is the (matroid) rank of Gp. The Tutte\npolynomial can be evaluated by analysis of the probability distribution of \u03bd(Gp), where\np = 1\nx\n(for x \u0001 1).\nLet Q = (x \u2212 1)(y \u2212 1) and p = x\u22121. Assuming G is connected then\nT (G; x, y) =\n\u2211\nA\u2286E\n(x \u2212 1)n\u22121\u2212r(A)(y \u2212 1)|A|\u2212r(A)\n=\n\u2211\nA\u2286E\n[(x \u2212 1)(y \u2212 1)]\u03bd(A)(x \u2212 1)n\u22121\u2212|A|\n=\n\u2211\nA\u2286E\nQ\u03bd(A)(x \u2212 1)n\u2212m\u22121xm\n(\n1\nx\n)|A|(\nx \u2212 1\nx\n)m\u2212|A|\n= (x \u2212 1)n\u2212m\u22121xmE[Q\u03bd(Gp)].\nApproximating Tutte Invariants in Sparse Graphs 9\nNote that when y = 1, Q = 0, and hence Q\u03bd(Gp) is nonzero only when \u03bd = 0, so\nT (G; x, 1) = (x \u2212 1)n\u2212m\u22121xmPr(\u03bd(Gp) = 0),\nand when p = 1\/2, we get the familiar\nT (G; 2, 1) = 2mPr(A \u2286 E is acyclic) = #forests of G.\nWe already have enough machinery to approximate T (G; x, 1) for x > 1. The probability\nthat \u03bd(Gp) = 0 is precisely Eff(G, p) = 1 \u2212 WASTE(p). We have presented in Section 4.2 an\nFPRAS for WASTE(p). So provided WASTE(p) is small enough, we can use our FPRAS\nto get an accurate approximation for Eff(G, p) and hence T (G; x, 1). We illustrate this first\nwith a general lemma.\nLemma 5.1. Let 0 \u0002 \u03c8 \u0002 1 be a quantity dependent on an input of size n, such that there is\nan FPRAS for \u03c8. Let d be a fixed integer such that \u03c8 < (1 \u2212 \u2126(n\u2212d)). Then (1 \u2212 \u03c8) admits\nan FPRAS.\nProof. Since \u03c8 < (1 \u2212 \u2126(n\u2212d)), there exist positive numbers c and N such that, for all\nn \u0001 N, \u03c8 < (1 \u2212 cn\u2212d). To show the existence of an FPRAS for (1 \u2212 \u03c8) it is enough to\nshow the existence of an FPRAS for all n > N. Given \u0002, \u03b4 > 0, use the FPRAS for \u03c8 to\nget an estimate \u03c8\u02c6 for \u03c8 such that\nPr\n[\n|\u03c8 \u2212 \u03c8\u02c6| \u0001 \u0002 cn\n\u2212d\n1 \u2212 cn\u2212d \u03c8\n]\n< \u03b4\nin running time polynomial in n, \u0002\u22121 and \u03b4\u22121. We take (1 \u2212 \u03c8\u02c6) to be our estimate\nfor (1 \u2212 \u03c8). Note that for n \u0001 N, cn\u2212d < (1 \u2212 \u03c8), and \u03c8\n(1\u2212 cn\u2212d) < 1. Hence\nPr[|(1 \u2212 \u03c8) \u2212 (1 \u2212 \u03c8\u02c6)| \u0001 \u0002(1 \u2212 \u03c8)] < Pr[|\u03c8 \u2212 \u03c8\u02c6| \u0001 \u0002cn\u2212d]\n< Pr\n[\n|\u03c8 \u2212 \u03c8\u02c6| \u0001 \u0002cn\u2212d \u03c8\n1 \u2212 cn\u2212d\n]\n< \u03b4.\nNow we use this lemma to prove the first part of the main theorem of the paper. We\nshow the existence of an FPRAS for T (G; x, 1), whenever WASTE(p) can be bounded\naway from 1.\nTheorem 5.2. Let \u03b4 > 0, x > 1 be fixed. For any graph G on n vertices, with girth g at\nleast (5 + \u03b4) logx(n), there is an FPRAS for T (G; x, 1).\nProof. We take p = 1\/x. By Section 4.2, there exists an FPRAS for WASTE(p). By\nTheorem 4.1, WASTE(p) \u0002 n\u2212\u03b4(1 + 5\n\u03b4\n). Hence we may apply Lemma 5.1, to deduce that\nthere is an FPRAS for Eff(G, p) = (1 \u2212 WASTE(p)). Our approximation for T (G; x, 1) is\n(x \u2212 1)n\u2212m\u22121xmEff(G, p), which differs from Eff(G, p) by an easily computable multiplicative\nfactor. Hence the FPRAS for Eff(G, p) induces an FPRAS for T (G; x, 1).\n10 M. Bordewich\nNote that the running time of the FPRAS depends upon \u03b4 in the following sense. Since\nWASTE(p) \u0002 n\u2212\u03b4(1 + 5\n\u03b4\n), we have that WASTE(p) < 0.99 for n > N =\n( 1+5\/\u03b4\n0.99\n)1\/\u03b4\n. This is\nenough to show the existence of an FPRAS, by Lemma 5.1, since for fixed \u03b4, 2N is a\nconstant, and we can handle the graphs of size at most N by direct calculation (in time\nO(2N\n2\n)). However, as \u03b4 shrinks to towards zero, this constant increases.\n6. Acyclic orientations\nWe now extend the work of previous sections to evaluating T (G; 2, 0). The evaluation of\nthe Tutte polynomial at this point counts the number of acyclic orientations of a graph.\nAn acyclic orientation is an assignment of orientations to the edges of a graph, such that\nthe resulting directed graph contains no directed circuits. We will call a circuit consistent\nin an orientation if it forms a directed circuit. We will call an orientation cyclic if it is not\nan acyclic orientation (i.e., some circuit is consistent). We will denote the probability that\na random orientation of G is cyclic by Cyc(G). Our approach will be to first present an\nFPRAS for Cyc(G), and then to bound this strictly below 1 for graphs with large girth, so\nthat we can obtain an FPRAS for 1-Cyc(G), just as for WASTE(G, p) and 1-WASTE(G, p).\nWe will first take an arbitrary base orientation \u03c3, for example by an ordering of the\nvertices, and directing each edge upwards. Any other orientation will be thought of as a\nfunction \u03c4 : E \u2192 {0, 1}, where for each edge e \u2208 E, \u03c4(e) = 0 if e is oriented as in \u03c3 and\n\u03c4(e) = 1 otherwise. Consider a random orientation of the edges \u03c0(E(G)), where \u03c0(e) is\nselected uniformly at random from {0, 1} independently for each edge. Thus\nCyc(G) = Pr[\u03c0(E(G)) is cyclic].\n6.1. Bounding Cyc(G)\nNow using the observation that the probability that a given circuit C is consistent in\n\u03c0(E(G)) is simply 2\u2212|C|+1, we can bound Cyc(G).\nTheorem 6.1. Let G be a graph with girth g = (5 + \u03b4) log2 n, for some \u03b4 > 0. Then:\n(1) Cyc(G) is at most n\u2212\u03b4(2 + 10\n\u03b4\n),\n(2) for \u03b1 > 1 the probability that some cycle of length at least \u03b1g is consistently orientated\nin \u03c0(E(G)) is at most n\u2212\u03b1\u03b4(2 + 10\n\u03b4\n).\nProof. We use similar arguments to those used in the proof of Theorem 4.1. Let all\nthe circuits of G be listed in order of nondecreasing length C1, C2, . . . . Let pi = 2\n\u2212|Ci|+1.\nFirst note that 2\u2212g+1 = 2n\u2212(5+\u03b4). Also, from Corollary 2.3 there are fewer than n3\u03b1+2 < n5\u03b1\ncircuits of length at most \u03b1g, so we have pn5\u03b1 < 2\n\u2212\u03b1g+1 = 2n\u22125\u03b1(1+\u03b4\/5). Hence\nCyc(G) \u0002\n\u2211\nC: cycles in G\n2\u2212|C|+1\n\u0002\nn5\u2211\ni=1\n2\u2212g+1 +\n\u2211\ni>n5\npi\nApproximating Tutte Invariants in Sparse Graphs 11\n\u0002 n52n\u2212(5+\u03b4) +\n\u2211\ni>n5\n2i\u2212(1+\u03b4\/5)\n< 2n\u2212\u03b4 + 2\n\u222b \u221e\nn5\nx\u2212(1+\u03b4\/5) dx\n< 2n\u2212\u03b4 + 2\n[\n\u22125\n\u03b4\nx\u2212\n\u03b4\n5\n]\u221e\nn5\n< 2n\u2212\u03b4 + 2\n5\n\u03b4\nn\u2212\u03b4 .\nThis gives (1). For (2) we split the sum slightly differently to get the result:\nPr(\u2203 consistent C \u2208 \u03c0(E(G)) : |C| \u0001 \u03b1g) \u0002 \u2211\nC:|C|\u0002\u03b1g\n2\u2212|C|+1\n\u0002\nn5\u03b1\u2211\ni=1\n2\u2212\u03b1g+1 +\n\u2211\ni>n5\u03b1\npi\n\u0002 n5\u03b12n\u2212(5\u03b1+\u03b1\u03b4) +\n\u2211\ni>n5\u03b1\n2i\u2212(1+\u03b4\/5)\n< 2n\u2212\u03b1\u03b4 + 2\n5\n\u03b4\nn\u2212\u03b1\u03b4 .\n6.2. An FPRAS for Cyc(G)\nWe now follow the same route that we took for constructing an FPRAS for WASTE(G, p).\nFirst, we prove a second technical lemma, similar to Lemma 4.2.\nLemma 6.2. Given \u0002 > 0, and G a graph. If 2\u2212g \u0002 n\u221210 then for \u03b1 = 2 \u2212 ln(\u0002\/12)\n2 ln n\nthe prob-\nability that any circuit of length greater than \u03b1g is consistent in \u03c0(E(G)) is less than\n(\u0002\/3) Cyc(G).\nProof. Since 2\u2212g < n\u221210 < n\u22125, we have\n2\u2212g = n\u2212(5+\u03b4) some \u03b4 \u0001 5, g = (5 + \u03b4) log2 n. (6.1)\nHence g satisfies the conditions of Theorem 6.1. Observing that Cyc(G) \u0001 2\u2212g , we see that\n\u03b1 = 2 \u2212 ln(\u0002\/12)\n2 ln n\n\u03b1 > 1 +\n5\n\u03b4\n\u2212 ln(\u0002\/12)\n\u03b4 ln n\n\u03b1\u03b4 ln n > (\u03b4 + 5) ln n \u2212 ln\nn\u2212\u03b1\u03b4 <\n\u0002\n12\nn\u2212(\u03b4+5).\n4n\u2212\u03b1\u03b4 < \u0002\/3 Cyc(G)\n(2 + 10\/\u03b4)n\u2212\u03b1\u03b4 < \u0002\/3 Cyc(G).\nThe result follows by Theorem 6.1.\n12 M. Bordewich\nTheorem 6.3. For any graph G there is an FPRAS for Cyc(G), the probability that a random\norientation of the edges is cyclic.\nProof. As in Theorem 4.3, we split the proof into two cases. Let n be the number of\nvertices of G, and g its girth. If 2\u2212g \u0001 n\u221210, we use simple Monte Carlo approximation,\nwhereas if 2\u2212g < n\u221210 we use an efficient reduction to DNF counting.\nCase 1: 2\u2212g \u0001 n\u221210.\nIf 2\u2212g \u0001 n\u221210 then Cyc(G) \u0001 n\u221210, since the probability that a given minimum circuit is\nconsistent is at least n\u221210. Hence we can use a simple Monte Carlo approximation as\nfollows. For j = 1 to t we simulate \u03c0(G) by orienting each edge randomly, and set Xj = 1\nif \u03c0(E(G)) is cyclic and Xj = 0 otherwise. Our estimate for Cyc(G) will be X =\n1\nt\n\u2211t\nj=1 Xj .\nClearly E[X] = Cyc(G), and the variance of X is Cyc(G)(1 \u2212 Cyc(G))\/t. Hence, given\n\u03b4, \u0002 > 0 we set t = \u0006 n10\n\u00022\u03b4\n\u0007 and Chebyshev\u2019s inequality gives:\nPr[|X \u2212 Cyc(G)| \u0001 \u0002Cyc(G)] \u0002 Var(X)\n\u00022Cyc(G)2\n\u0002 (1 \u2212 Cyc(G))\n\u00022Cyc(G)t\n<\n\u00022\u03b4\n\u00022Cyc(G)n10\n< \u03b4.\nFinally, since t is polynomial in \u03b4\u22121, \u0002\u22121 and n, and also since each simulation takes time\npolynomial in n, we have an FPRAS for Cyc(G).\nCase 2: 2\u2212g < n\u221210.\nProceeding as before, by Lemma 6.2 we can find an \u03b1 which splits the set of circuits of\nG into large circuits, such that the probability of any one being consistent is less than\n(\u0002\/3) Cyc(G), and \u03b1-small circuits which we can list. We can again encode the information\nin a boolean formula in disjunctive normal form; however, we take a different formula\nto the one used for WASTE(G, p). We take a boolean variable xe for each edge in G.\nWe take xe to be true if \u03c0(e) = 0, and false otherwise. We form a list of all the \u03b1-small\ncircuits, C1, C2, . . . . We form two clauses for each circuit Ci as follows. Let \u03c4i(G) be some\norientation such that Ci is consistent in \u03c4i(G); then the clauses C\u02c6i, C\u00afi corresponding to\ncircuit Ci are C\u02c6i = \u2227e\u2208Ci x\u02dce, and C\u00afi = \u2227e\u2208Ci \u00af\u02dcxe, where x\u02dce = xe if \u03c4i(e) = 0, and x\u02dce = x\u00afe if\n\u03c4i(e) = 1. The event that Ci is consistent is (C\u02c6i \u2228 C\u00afi). Hence the event that at least one\n\u03b1-small circuit is consistent is then F = \u2228i(C\u02c6i \u2228 C\u00afi). This is a formula of |E(G)| variables,\nin disjunctive normal form, of length bounded by 2\u03b1gc, where c is the number of small\ncircuits. We again use the FPRAS of Karp, Luby and Madras [6] to approximate the\nprobability that no \u03b1-small circuit is consistent, and hence Cyc(G).\nSo, given any \u0002, \u03b4 > 0, we take \u03b1 = 2 \u2212 ln(\u0002\/12)\n2 ln n\n, ignore the circuits of length greater\nthan \u03b1g, and by Lemma 6.2 only incur an absolute error of (\u0002\/3)Cyc(G) by doing so. By\nTheorem 3.1, we can list all the circuits of length at most \u03b1g in time O(n3\u03b1+3) = O(n9\u0002\u22123\/2).\nHence using Karp, Luby and Madras\u2019s FPRAS for DNF formulae, with input size\nO(\u03b1gn3\u03b1+2) = O(n9\u0002\u22123\/2), we can approximate the probability that a circuit of length up\nApproximating Tutte Invariants in Sparse Graphs 13\nto \u03b1g is consistent in \u03c0(E(G)) to within a relative error of \u0002\/3, with high probability in\npolynomial time. Hence we have an approximation for Cyc(G) to within a relative error\nof \u0002\/3 + \u0002\/3 < \u0002 with high probability in polynomial time.\n6.3. Approximating T (G; 2, 0)\nTheorem 6.4. Let \u03b4 > 0 be fixed. For any graph G with girth g at least (5 + \u03b4) log2(n),\nthere is an FPRAS for T (G; 2, 0).\nProof. In order to approximate T (G; 2, 0) it remains to observe\nT (G; 2, 0) = 2mPr[\u03c0(E(G)) is acyclic]\n= 2m(1 \u2212 Pr[\u03c0(E(G)) is cyclic])\n= 2m(1 \u2212 Cyc(G)).\nHence, an FPRAS for (1 \u2212 Cyc(G)) can be used to give an FPRAS for T (G; 2, 0). By\nSection 6.2, there exists an FPRAS for Cyc(G). By Theorem 6.1, Cyc(G) \u0002 n\u2212\u03b4(2 + 10\n\u03b4\n).\nHence we may apply Lemma 5.1, to deduce that there is an FPRAS for (1 \u2212 Cyc(G)).\nOur approximation for T (G; 2, 0) is 2m(1 \u2212 Cyc(G)). Hence the FPRAS for (1 \u2212 Cyc(G))\ninduces an FPRAS for T (G; 2, 0).\nNote that the running time of the FPRAS depends on \u03b4 as in Theorem 5.2. Theorems 5.2\nand 6.4 together give Theorem 1.1.\n7. Exact evaluation is #P-hard\nWe have shown the existence of approximation schemes for the Tutte polynomial at\nspecific points in a certain class of graphs. We now show that exact evaluation of the\nTutte polynomial is indeed #P-hard for this class of graphs.\nTheorem 7.1. For fixed \u03b4 > 0, exact evaluation of T (G; 2, 0) for the class of graphs with\ngirth at least (5 + \u03b4) log(n) is #P-hard.\nProof. It is well known that evaluating the Tutte polynomial at T (G; 2, 0) is #P-hard for\ngeneral graphs [8]. Suppose that we can exactly evaluate T (G; 2, 0) in time polynomial in\nn, the number of vertices of the graph, for graphs of girth at least (5 + \u03b4) log(n). Let G\nbe a general graph; let its girth be g. We define sk(G) to be the k-stretch of G: that is to\nsay, we replace each edge (u, v) of G by a path of length k, joining u to v. Note that the\ngirth, g\u2032, of sk(G) is kg, and the number of vertices, n\u2032, in sk(G) is n+ (k \u2212 1)m. Since the\ngirth is increasing by a multiplicative factor of k, but the log of the number of vertices\nis increasing by (approximately) an additive factor of log(k), we have g\u2032 > (5 + \u03b4) log(n\u2032)\nfor k > K , where K depends on G and \u03b4, but is certainly at most (5 + \u03b4)n (for n at\nleast 6). Hence we can evaluate T (sk(G); 2, 0) exactly for k > K , in time polynomial in n\nwhenever k, and hence the number of vertices in sk(G), is only polynomially large. The\n14 M. Bordewich\nTutte polynomial of a graph and its stretch are related by the following formula [8]:\nT (sk(G); x, y) =\n(\nxk \u2212 1\nx \u2212 1\n)\u03b1\nT (G;X,Y ),\nwhere\nX = xk Y =\ny + x+ x2 + \u00b7 \u00b7 \u00b7 + xk\u22121\n1 + x+ x2 + \u00b7 \u00b7 \u00b7 + xk\u22121\nand \u03b1 is known and easily computable.\nNote that (x \u2212 1)(y \u2212 1) = (X \u2212 1)(Y \u2212 1). Since we are able to evaluate T (sk(G); 2, 0),\nwe can evaluate T (G; x, y) at a point (depending on k) on the hyperbola (x \u2212 1)(y \u2212 1) =\n\u22121. We now form sk(G) for sufficiently many k > K , so that we can obtain the univariate\npolynomial of the restriction of T (G; x, y) to this hyperbola by Lagrange interpolation.\nThis can be done in time polynomial in n, since the maximum degree of the Tutte\npolynomial, and therefore the number of points we will need to evaluate, and the time\ntaken for each evaluation are both polynomial in n. We use this to recover T (G; 2, 0).\nSince this is known to be #P-hard to evaluate exactly, we conclude that even on the class\nof graphs of girth at least (5 + \u03b4) log(n), it is #P-hard to evaluate T (G; 2, 0) exactly.\nThe same proof can be used to show that for x > 1, it is #P-hard to evaluate T (G; x, 1)\nexactly even on the class of graphs of girth at least (5 + \u03b4) logx(n).\n8. Extension to other points in the Tutte plane\nThe technique of stretching graphs introduced in Section 7 can be used to provide an\nextension to the earlier work. We use stretching to get an FPRAS for some additional\npoints on the hyperbola (x \u2212 1)(y \u2212 1) = \u22121.\nTheorem 8.1. Let \u03b4 > 0 and k a positive integer, be fixed. For any graph G on n vertices\nwith girth g at least (5 + \u03b4) log2(n), there is an FPRAS for T (G; x, y) whenever x = 2\nk, y =\n2+22 + \u00b7\u00b7\u00b7+2k\u22121\n1+ 2+22 + \u00b7\u00b7\u00b7+2k\u22121 .\nProof. Let sk(G) be the k-stretch of G as in Section 7. Then the girth, g\n\u2032, of sk(G) is kg,\nand the number of vertices of sk(G), n\n\u2032, is n+ (k \u2212 1)m.\nCase 1: k > 2.\nLet l = \u0006logn k\u0007. Then\nlog2 n\n\u2032 = log2(n+ (k \u2212 1)m)\n\u0002 log2(n+ (nl \u2212 1)n2)\n\u0002 log2(nl+2)\n\u0002 (l + 2) log2 n.\nNote that for k > n we have k \u0001 nl\u22121 \u0001 (l + 2) (for n at least 3), and for k \u0002 n we have\nl = 1, so k \u0001 3 = (l + 2). So\ng\u2032 = kg \u0001 (l + 2)(5 + \u03b4) log2 n \u0001 (5 + \u03b4) log2 n\u2032.\nApproximating Tutte Invariants in Sparse Graphs 15\nCase 2: k = 2.\nIf k = 2, then g\u2032 = 2g, and n\u2032 = n+ m \u0002 n+ n(n \u2212 1)\/2 \u0002 n2. So\ng\u2032 = 2g \u0001 2(5 + \u03b4) log2 n \u0001 (5 + \u03b4) log2 n2 \u0001 (5 + \u03b4) log2 n\u2032.\nIn either case sk(G) satisfies the conditions of Theorem 6.4, and we may evaluate\nT (sk(G); 2, 0), using the FPRAS of Theorem 6.4, in running time polynomial in the\nsize of G, since the blow-up to sk(G) is polynomial (as k is fixed). Finally, T (G; x, y) =\n(2k \u2212 1)\u2212\u03b1T (sk(G); 2, 0) where \u03b1 is known and easily computable, we have an FPRAS for\nT (G; x, y).\nAll previous results giving an FPRAS for some region of the Tutte plane have included\nall points along a given branch of a hyperbola (or none at all). Here we have presented\nan FPRAS for a large number of points along the hyperbola (x \u2212 1)(y \u2212 1) = \u22121, though\nthese are restricted to y \u0001 0. However, it suggests that, for this class of sparse graphs,\napproximation along the hyperbola (x \u2212 1)(y \u2212 1) = \u22121 should be possible.\nConjecture. Let \u03b4 > 0, x > 1 be fixed. For any graph G on n vertices, with girth g at least\n(5 + \u03b4) logx(n), there is an FPRAS for T (G; x,\nx\u2212 2\nx\u2212 1 ).\n9. Conclusion\nWe have bounded the number of minimum and near-minimum circuits in all graphs.\nThis has enabled us to show the existence of fully polynomial randomized approximation\nschemes for WASTE(G, p) and Cyc(G), using Monte Carlo simulation for large probabil-\nities, and an efficient reduction to DNF counting for small probabilities. Interpreting the\nTutte polynomial in the terms of the efficiency probability enabled us to use the FPRAS\nfor WASTE(p) to approximate T (G; x, 1), x > 1 for graphs with large girth. We also used\nthe FPRAS for Cyc(G) to approximate T (G; 2, 0), the number of acyclic orientations.\nA natural area for further research is to try to use the techniques introduced in\nthis paper to prove the existence of FPRAS schemes for the same class of graphs in\ndifferent regions of the Tutte plane. There are now known to be FPRAS schemes for\nT (G; x, y), x > 1, y = 1 for dense graphs [1] and the class of sparse graph defined here.\nIt is an interesting conjecture that there is an FPRAS for all graphs in this region of the\nTutte plane (indeed in the entire region x \u0001 1, y \u0001 1 [9]).\nAcknowledgements\nThanks to Dominic Welsh for originally bringing Karger\u2019s paper to my attention and\nfor pointing out weaknesses in early versions of this paper. Thanks also to John Talbot\nfor many helpful discussions, in particular in relation to Section 2, and to the referees for\ntheir very helpful advice.\n16 M. Bordewich\nReferences\n[1] Alon, N., Frieze, A. and Welsh, D. (1995) Polynomial time randomized approximation schemes\nfor Tutte\u2013Grothendieck invariants: The dense case. Random Struct. Alg. 6 459\u2013478.\n[2] Annan, J. (1994) A randomized approximation algorithm for counting the number of forests\nin dense graphs. Combin. Probab. Comput. 3 273\u2013283.\n[3] Bolloba\u00b4s, B. (1996) Extremal graph theory. Chapter 23 of Handbook of Combinatorics Volume II,\npp. 1231\u20131292.\n[4] Jerrum, M. and Sinclair, A. (1993) Polynomial-time approximation algorithms for the Ising\nModel. SIAM J. Comput. 22 1087\u20131116.\n[5] Karger, D. (1995) A randomized fully polynomial time approximation scheme for the all\nterminal network reliability problem. In Proc. 36th Annual IEEE Symp. on Foundations of\nComputer Science, pp. 328\u2013337.\n[6] Karp, R., Luby, M. and Madras, N. (1989) Monte Carlo approximation algorithms for\nenumeration problems. J. Algorithms 10 429\u2013448.\n[7] Orlik, P. and Terao, H. (1992) Arrangements of Hyperplanes, Vol. 300 of Grundlehren der\nMathematischen Wissenschaften , Springer.\n[8] Vertigan, D. and Welsh, D. (1992) The computational complexity of the Tutte plane: The\nbipartite case. Combin. Probab. Comput. 1 181\u2013187.\n[9] Welsh, D. (1995) Randomized approximation schemes for Tutte\u2013Grothendieck invariants. In\nDiscrete Probability and Algorithms (D. Aldous, P. Diaconis, J. Spencer and J. M. Steele, eds),\nVol. 72 of IMA Volumes in Mathematics and Applications , Springer, pp. 133\u2013148.\n[10] Zaslavsky, T. (1975) Facing up to arrangements: Face-count formulas for partitions of spaces\nby hyperplanes. Mem. Amer. Math. Soc. 154.\n"}