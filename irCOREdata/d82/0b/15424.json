{"doi":"10.1016\/j.ejc.2009.03.011","coreId":"15424","oai":"oai:dro.dur.ac.uk.OAI2:7398","identifiers":["oai:dro.dur.ac.uk.OAI2:7398","10.1016\/j.ejc.2009.03.011"],"title":"Mixing 3-colourings in bipartite graphs.","authors":["Cereceda, Luis","van den Heuvel, Jan","Johnson, Matthew"],"enrichments":{"references":[{"id":946180,"title":"A very simple algorithm for estimating the number of k-colourings of a low degree graph.","authors":[],"date":"1995","doi":"10.1002\/rsa.3240070205","raw":null,"cites":null},{"id":946182,"title":"Computational complexity of compaction to irre cycles.","authors":[],"date":"2004","doi":"10.1016\/S0022-0000(03)00034-5","raw":null,"cites":null},{"id":947825,"title":"Connectedness of the graph of vertexcolourings.","authors":[],"date":"2008","doi":null,"raw":null,"cites":null},{"id":946181,"title":"Counting, Sampling and Integrating : Algorithms and Complexity.","authors":[],"date":"2003","doi":null,"raw":null,"cites":null},{"id":947822,"title":"Exactly Solved Models in Statistical Mechanics.","authors":[],"date":"1982","doi":null,"raw":null,"cites":null},{"id":947826,"title":"Finding paths between 3-colourings.","authors":[],"date":"2007","doi":null,"raw":null,"cites":null},{"id":947824,"title":"Finding paths between graph colourings: PSPACEcompleteness and superpolynomial distances.","authors":[],"date":"2007","doi":null,"raw":null,"cites":null},{"id":947823,"title":"Frequency reassignment in cellular phone networks.","authors":[],"date":"2005","doi":null,"raw":null,"cites":null},{"id":946178,"title":"Graph folding.","authors":[],"date":"1979","doi":null,"raw":null,"cites":null},{"id":946179,"title":"Graph Theory, 3rd edition.","authors":[],"date":"2005","doi":"10.4171\/OWR\/2005\/03","raw":null,"cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2009-10-01","abstract":"For a 3-colourable graph G, the 3-colour graph of G, denoted C_3(G), is the graph with node set the proper vertex 3-colourings of G, and two nodes adjacent whenever the corresponding colourings differ on precisely one vertex of G. We consider the following question: given G, how easily can one decide whether or not C_3(G) is connected? We show that the 3-colour graph of a 3-chromatic graph is never connected, and characterise the bipartite graphs for which View the MathML source  is connected. We also show that the problem of deciding the connectedness of the 3-colour graph of a bipartite graph is coNP-complete, but that restricted to planar bipartite graphs, the question is answerable in polynomial time","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/15424.pdf","fullTextIdentifier":"http:\/\/dro.dur.ac.uk\/7398\/1\/7398.pdf","pdfHashValue":"e35f6aad42f268b4ec6e10c672bbeb812bc3ce17","publisher":"Elsevier","rawRecordXml":"<record><header><identifier>\n  \n    \n      oai:dro.dur.ac.uk.OAI2:7398<\/identifier><datestamp>\n      2010-10-29T11:51:22Z<\/datestamp><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n    \n      \n        Mixing 3-colourings in bipartite graphs.<\/dc:title><dc:creator>\n        Cereceda, Luis<\/dc:creator><dc:creator>\n        van den Heuvel, Jan<\/dc:creator><dc:creator>\n        Johnson, Matthew<\/dc:creator><dc:description>\n        For a 3-colourable graph G, the 3-colour graph of G, denoted C_3(G), is the graph with node set the proper vertex 3-colourings of G, and two nodes adjacent whenever the corresponding colourings differ on precisely one vertex of G. We consider the following question: given G, how easily can one decide whether or not C_3(G) is connected? We show that the 3-colour graph of a 3-chromatic graph is never connected, and characterise the bipartite graphs for which View the MathML source  is connected. We also show that the problem of deciding the connectedness of the 3-colour graph of a bipartite graph is coNP-complete, but that restricted to planar bipartite graphs, the question is answerable in polynomial time.<\/dc:description><dc:publisher>\n        Elsevier<\/dc:publisher><dc:source>\n        European journal of combinatorics, 2009, Vol.30(7), pp.1593-1606 [Peer Reviewed Journal]<\/dc:source><dc:date>\n        2009-10-01<\/dc:date><dc:type>\n        Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:identifier>\n        dro:7398<\/dc:identifier><dc:identifier>\n        issn:0195-6698<\/dc:identifier><dc:identifier>\n        doi:10.1016\/j.ejc.2009.03.011<\/dc:identifier><dc:identifier>\n        http:\/\/dro.dur.ac.uk\/7398\/<\/dc:identifier><dc:identifier>\n        http:\/\/dx.doi.org\/10.1016\/j.ejc.2009.03.011<\/dc:identifier><dc:format>\n        application\/pdf<\/dc:format><dc:identifier>\n        http:\/\/dro.dur.ac.uk\/7398\/1\/7398.pdf<\/dc:identifier><dc:rights>\n        NOTICE: this is the author's version of a work that was accepted for publication in European journal of combinatorics.<\/dc:rights><dc:accessRights>\n        info:en-repo\/semantics\/openAccess<\/dc:accessRights><\/oai_dc:dc><\/metadata><\/record>","journals":[{"title":null,"identifiers":["issn:0195-6698","0195-6698"]}],"language":{"code":"en","id":9,"name":"English"},"relations":[],"year":2009,"topics":[],"subject":["Article","PeerReviewed"],"fullText":"Durham Research Online\nDeposited in DRO:\n29 October 2010\nVersion of attached file:\nAccepted Version\nPeer-review status of attached file:\nPeer-reviewed\nCitation for published item:\nCereceda, Luis and van den Heuvel, Jan and Johnson, Matthew (2009) \u2019Mixing 3-colourings in bipartite\ngraphs.\u2019, European journal of combinatorics., 30 (7). pp. 1593-1606.\nFurther information on publisher\u2019s website:\nhttp:\/\/dx.doi.org\/10.1016\/j.ejc.2009.03.011\nPublisher\u2019s copyright statement:\nNOTICE: this is the author\u2019s version of a work that was accepted for publication in European journal of combinatorics.\nAdditional information:\nUse policy\nThe full-text may be used and\/or reproduced, and given to third parties in any format or medium, without prior permission or charge, for\npersonal research or study, educational, or not-for-profit purposes provided that:\n\u2022 a full bibliographic reference is made to the original source\n\u2022 a link is made to the metadata record in DRO\n\u2022 the full-text is not changed in any way\nThe full-text must not be sold in any format or medium without the formal permission of the copyright holders.\nPlease consult the full DRO policy for further details.\nDurham University Library, Stockton Road, Durham DH1 3LY, United Kingdom\nTel : +44 (0)191 334 3042 \u2014 Fax : +44 (0)191 334 2971\nhttp:\/\/dro.dur.ac.uk\nMixing 3-Colourings in Bipartite Graphs\nLuis Cereceda 1 \u2020, Jan van den Heuvel 1 and Matthew Johnson 2 \u2021\n1 Department of Mathematics, London School of Economics\nHoughton Street, London WC2A 2AE, U.K.\n2 Department of Computer Science, Durham University\nScience Laboratories, South Road, Durham DH1 3LE, U.K.\nemail : {luis,jan} @ maths.lse.ac.uk, matthew.johnson2 @ durham.ac.uk\nAbstract\nFor a 3-colourable graph G, the 3-colour graph of G, denoted C3(G), is the graph with node\nset the proper vertex 3-colourings of G, and two nodes adjacent whenever the correspond-\ning colourings differ on precisely one vertex of G. We consider the following question :\ngiven G, how easily can one decide whether or not C3(G) is connected? We show that\nthe 3-colour graph of a 3-chromatic graph is never connected, and characterise the bi-\npartite graphs for which C3(G) is connected. We also show that the problem of deciding\nthe connectedness of the 3-colour graph of a bipartite graph is coNP-complete, but that\nrestricted to planar bipartite graphs, the question is answerable in polynomial time.\n1 Introduction\nThroughout this paper a graph G = (V,E) is simple, loopless and finite. Most of our ter-\nminology and notation is standard and can be found in any textbook on graph theory such\nas, for example, [7]. We always regard a k-colouring of a graph G as proper; that is, as a\nfunction \u03b1 : V \u2192 {1, 2, . . . , k} such that \u03b1(u) 6= \u03b1(v) for any uv \u2208 E. For a positive integer k\nand a graph G, we define the k-colour graph of G, denoted Ck(G), as the graph that has the\nk-colourings of G as its node set, with two k-colourings joined by an edge in Ck(G) if they\ndiffer in colour on just one vertex of G.\nContinuing a theme begun in an earlier paper [4], we investigate the connectedness of Ck(G)\nfor a given G, this time concentrating on the case k = 3. The connectedness of the k-colour\ngraph is an issue of interest when trying to obtain efficient algorithms for almost uniform\n\u2020Current address: Bayes Forecast, Gran V\u0131\u00b4a 39, 5aplanta, 28013 Madrid, Spain.\nlcereceda@bayesforecast.com.\n\u2021 Research partially supported by Nuffield grant no. NAL\/32772.\n1\nsampling of k-colourings of a given graph. In particular, Ck(G) needs to be connected for the\nsingle-site Glauber dynamics of G ( a Markov chain defined on the k-colour graph of G ) to\nbe rapidly mixing. For further details, see, for example, [9, 10] and references therein.\nProperties of the colour graph, and questions regarding the existence of a path between\ntwo colourings, also find application in the study of radio channel reassignment. Given that\na channel assignment problem can often be modelled as a graph colouring problem, the task\nof reassigning channels in a network, while avoiding interference and ensuring no connections\nare lost, can initially be thought of as a graph recolouring problem. See [2] for a discussion\nof these ideas in the context of cellular phone networks.\nWe say that G is k-mixing if Ck(G) is connected, and, having defined the colourings as\nnodes of Ck(G), the meaning of, for example, the path between two colourings should be\nclear. Observe that a graph G is k-mixing if and only if every connected component of G\nis k-mixing, so we will usually take our \u201cargument graph\u201d G to be connected. We assume\nthroughout that k \u2265 \u03c7(G) \u2265 2, where \u03c7(G) is the chromatic number of G.\nIn this paper we concentrate on the case k = 3. In the next section it will be shown that\nif G has chromatic number 3, then G is not 3-mixing. We find more interesting behaviour,\nhowever, when G has chromatic number less than 3, that is, when G is bipartite. The main\nresults in this paper deal with the following decision problem.\n3-Mixing\nInstance : A connected bipartite graph G.\nQuestion : Is G 3-mixing?\nAfter proving a characterisation theorem for 3-mixing bipartite graphs, we will prove the\nfollowing two results :\nTheorem 1.1. The decision problem 3-Mixing is coNP-complete.\nTheorem 1.2. Restricted to planar bipartite graphs, the decision problem 3-Mixing is in P.\nWe believe that the case k = 3 is actually an exceptional case for the more general problem\nk-Mixing for fixed k \u2265 2 ( where the input graph is not necessarily bipartite ). Let us explain\nthe rationale behind that belief.\nFor two colours, 2-Mixing is trivially in P : If G is a connected bipartite graph with more\nthan one vertex, then C2(G) consists of two isolated vertices.\nFor k \u2265 4, we do not know the computational complexity of k-Mixing. We do know\nquite a lot about the related decision problem k-Colour Path, though.\nk-Colour Path\nInstance : A connected graph G together with two k-colourings of G, \u03b1 and \u03b2.\nQuestion : Is there a path between \u03b1 and \u03b2 in Ck(G)?\nAgain, the decision problem 2-Colour Path is trivially in P. It is proven by the authors\nin [5] that 3-Colour Path is in P as well. On the other hand, it is shown in [3] that for all\nfixed k \u2265 4, k-Colour Path is PSPACE-complete. Moreover, the computational complexity\n2\nof k-Colour Path does not change if we restrict the problem to bipartite and\/or planar\ngraphs. This strongly suggests that k-Mixing is PSPACE-hard, but we have been unable to\nprove this. ( Note that as k-Colour Path is in PSPACE, it follows that k-Mixing is also\nin PSPACE. )\nWe finish this introductory section with some further terminology and notation and an\noutline of the paper. We use \u03b1, \u03b2, . . . to denote specific colourings. We use the term frozen\nfor a k-colouring of a graph G that forms an isolated node in the k-colour graph. Note that\nthe existence of a frozen k-colouring of a graph immediately implies that the graph is not\nk-mixing.\nIf G has a k-colouring \u03b1, then we say that we can recolour G with \u03b2 if \u03b1\u03b2 is an edge\nof Ck(G). If v is the unique vertex on which \u03b1 and \u03b2 differ, then we also say that we can\nrecolour v.\nWe denote the cycle on n vertices by Cn, and will often describe a colouring of Cn by just\nlisting the colours as they appear on consecutive vertices.\nThe remainder of this paper is set out as follows. In the following section we introduce some\nof our tools and methods, revisiting the short proof ( given in [4] ) that 3-chromatic graphs are\nnot 3-mixing. Section 3 gives two equivalent characterisations of 3-mixing bipartite graphs.\nIn Section 4 we prove Theorem 1.1, while the final section contains the proof of Theorem 1.2.\n2 Preliminaries\nIn [4] it was shown that if G has chromatic number k for k = 2, 3, then G is not k-mixing,\nbut that, on the other hand, for k \u2265 4, there are k-chromatic graphs that are k-mixing and\nk-chromatic graphs that are not k-mixing. For completeness, and since several of the ideas\nare used in later parts of this paper, we include the short proof of the fact that 3-chromatic\ngraphs are not 3-mixing. Let us first give some definitions.\nGiven a 3-colouring \u03b1, the weight of an edge e = uv oriented from u to v is\nw(\u2212\u2192uv, \u03b1) =\n{\n+1, if \u03b1(u)\u03b1(v) \u2208 {12, 23, 31};\n\u22121, if \u03b1(u)\u03b1(v) \u2208 {21, 32, 13}. (1)\nTo orient a cycle means to orient each edge on the cycle so that a directed cycle is obtained.\nIf C is a cycle, then by\n\u2212\u2192\nC we denote the cycle with one of the two possible orientations. The\nweight W (\n\u2212\u2192\nC ,\u03b1) of an oriented cycle\n\u2212\u2192\nC is the sum of the weights of its oriented edges.\nLemma 2.1. Let \u03b1 and \u03b2 be 3-colourings of a graph G that contains a cycle C. Then if \u03b1\nand \u03b2 are in the same component of C3(G), we must have W (\u2212\u2192C ,\u03b1) = W (\u2212\u2192C , \u03b2).\nProof : Let \u03b1 and \u03b1\u2032 be 3-colourings of G that are adjacent in C3(G), and suppose the two\n3-colourings differ on vertex v. If v is not on C, then we certainly have W (\n\u2212\u2192\nC ,\u03b1) = W (\n\u2212\u2192\nC ,\u03b1\u2032).\nIf v is a vertex of C, then all its neighbours must have the same colour in \u03b1, otherwise\nwe would not be able to recolour v. If we denote the in-neighbour of v on\n\u2212\u2192\nC by vi and\nits out-neighbour by vo, then w(\n\u2212\u2192viv, \u03b1) and w(\u2212\u2192vvo, \u03b1) have opposite sign, hence w(\u2212\u2192viv, \u03b1) +\nw(\u2212\u2192vvo, \u03b1) = 0. Recolouring vertex v will change the signs of the weights of the oriented\n3\nedges \u2212\u2192viv and \u2212\u2192vvo, but they will remain opposite. Therefore w(\u2212\u2192viv, \u03b1\u2032) + w(\u2212\u2192vvo, \u03b1\u2032) = 0, and\nW (\n\u2212\u2192\nC ,\u03b1) = W (\n\u2212\u2192\nC ,\u03b1\u2032).\nFrom the above we immediately obtain that the weight of an oriented cycle is constant\non all 3-colourings in the same component of C3(G). 2\nNote that the converse of Lemma 2.1 is not true. For instance the 3-cycle has six 3-colourings.\nOf these, 1-2-3, 2-3-1 and 3-1-2 give the same weight of the oriented 3-cycle, but they are not\nconnected ( in fact, they are all frozen ).\nLemma 2.2. Let \u03b1 be a 3-colouring of a graph G that contains a cycle C. If W (\n\u2212\u2192\nC ,\u03b1) 6= 0,\nthen C3(G) is not connected.\nProof : Let \u03b2 be the 3-colouring of G obtained by setting for each vertex v of G :\n\u03b2(v) =\n\uf8f1\uf8f4\uf8f2\uf8f4\uf8f3\n1, if \u03b1(v) = 2;\n2, if \u03b1(v) = 1;\n3, if \u03b1(v) = 3.\nIt is easy to check that for each edge e in C, w(~e, \u03b1) = \u2212w(~e, \u03b2), which gives W (\u2212\u2192C ,\u03b1) =\n\u2212W (\u2212\u2192C , \u03b2). Since W (\u2212\u2192C ,\u03b1) 6= 0, we must have W (\u2212\u2192C ,\u03b1) 6= W (\u2212\u2192C , \u03b2), and so, by Lemma 2.1,\n\u03b1 and \u03b2 belong to different components of C3(G). 2\nTheorem 2.3. Let G be a 3-chromatic graph. Then G is not 3-mixing.\nProof : As G has chromatic number 3, it contains a cycle C of odd length. Let \u03b1 be a\n3-colouring of G, and note that as the weight of each edge in\n\u2212\u2192\nC is +1 or \u22121, W (\u2212\u2192C ,\u03b1) 6= 0.\nWe are done by Lemma 2.2. 2\n3 Characterising 3-mixing bipartite graphs\nWe have seen that 3-chromatic graphs are not 3-mixing. What can be said for bipartite\ngraphs? Examples of 3-mixing bipartite graphs include trees and C4, the cycle on 4 vertices.\nOn the other hand, all cycles except C4 are not 3-mixing; see [4] for details. In Theorem 3.1\nwe distinguish between 3-mixing and non-3-mixing bipartite graphs in terms of their structure\nand the possible 3-colourings they may have.\nIf v and w are vertices of a bipartite graph G at distance two, then a fold on v and w\nis the identification of v and w ( together with the removal of any double edges produced ).\nWe say that G is foldable to a graph H if there exists a sequence of folds that transforms G\ninto H.\nFolding of graphs, and its relation to vertex colouring, has been studied before, see for\ninstance [6].\nThe main result in this section is the following.\nTheorem 3.1. Let G be a connected bipartite graph. The following are equivalent :\n(i) The graph G is not 3-mixing.\n(ii) There exists a cycle C in G and a 3-colouring \u03b1 of G with W (\n\u2212\u2192\nC ,\u03b1) 6= 0.\n(iii) The graph G is foldable to the 6-cycle C6.\n4\nTo prove Theorem 3.1, we need some definitions and technical lemmas. For the rest of this\nsection, let G = (V,E) denote a connected bipartite graph with vertex bipartition X,Y .\nGiven a 3-colouring \u03b1 of G, we define a height function for \u03b1 with base X as a function\nh : V \u2192 Z satisfying the following conditions. ( See [1, 8] for other, similar height functions. )\nH1 For all v \u2208 X, h(v) \u2261 0 (mod 2); for all v \u2208 Y , h(v) \u2261 1 (mod 2).\nH2 For all uv \u2208 E, h(v)\u2212 h(u) = w(\u2212\u2192uv, \u03b1) ( \u2208 {\u22121,+1} ).\nH3 For all v \u2208 V , h(v) \u2261 \u03b1(v) (mod 3).\nIf h : V \u2192 Z satisfies conditions H2, H3 and also\nH1\u2032 For all v \u2208 X, h(v) \u2261 1 (mod 2); while for v \u2208 Y , h(v) \u2261 0 (mod 2).\nthen h is said to be a height function for \u03b1 with base Y .\nObserve that for a particular colouring of a given G, a height function might not exist.\nAn example of this is the 6-cycle C6 coloured 1-2-3-1-2-3.\nConversely, however, a function h : V \u2192 Z satisfying conditions H1 and H2 induces a\n3-colouring of G : the unique \u03b1 : V \u2192 {1, 2, 3} satisfying condition H3; and h is in fact a\nheight function for this \u03b1. Observe also that if h is a height function for \u03b1 with base X,\nthen so are h + 6 and h \u2212 6; while h + 3 and h \u2212 3 are height functions for \u03b1 with base Y .\nBecause we will be concerned solely with the question of existence of height functions, we\nassume henceforth that for a given G, all height functions have base X. Thus we let HX(G)\nbe the set of height functions with base X corresponding to some 3-colouring of G, and define\na metric m on HX(G) by setting\nm(h1, h2) =\n\u2211\nv\u2208V\n|h1(v)\u2212 h2(v)|,\nfor h1, h2 \u2208 HX(G). Note that condition H1 above implies that m(h1, h2) is always even.\nFor a given height function h, h(v) is said to be a local maximum ( respectively, local\nminimum ) if h(v) is larger than ( respectively, smaller than ) h(u) for all neighbours u of v.\nFollowing [8], we define the following height transformations on h.\n\u2013 An increasing height transformation takes a local minimum h(v) of h and transforms h\ninto the height function h\u2032 given by h\u2032(x) =\n{\nh(x) + 2, if x = v;\nh(x), if x 6= v.\n\u2013 A decreasing height transformation takes a local maximum h(v) of h and transforms h\ninto the height function h\u2032 given by h\u2032(x) =\n{\nh(x)\u2212 2, if x = v;\nh(x), if x 6= v.\nNotice that these height transformations give rise to transformations between the corre-\nsponding colourings. Specifically, if we let \u03b1\u2032 be the 3-colouring corresponding to h\u2032, an\nincreasing transformation yields \u03b1\u2032(v) = \u03b1(v) \u2212 1, while a decreasing transformation yields\n\u03b1\u2032(v) = \u03b1(v) + 1, where addition is modulo 3.\nThe following lemma, a simple extension of the range of applicability of a similar lemma\nappearing in [8], shows that colourings with height functions are connected in C3(G).\nLemma 3.2 ( Goldberg, Martin, and Paterson [8] ). Let \u03b1, \u03b2 be two 3-colourings of G with\ncorresponding height functions h\u03b1, h\u03b2. Then there is a path between \u03b1 and \u03b2 in C3(G).\n5\nProof : We use induction on m(h\u03b1, h\u03b2). The lemma is trivially true when m(h\u03b1, h\u03b2) = 0,\nsince in this case \u03b1 and \u03b2 are identical.\nSuppose therefore that m(h\u03b1, h\u03b2) > 0. We show that there is a height transformation\ntransforming h\u03b1 into some height function h with m(h, h\u03b2) = m(h\u03b1, h\u03b2)\u2212 2, from which the\nlemma follows.\nWithout loss of generality, let us assume that there is some vertex v \u2208 V with h\u03b1(v) >\nh\u03b2(v), and let us choose v with h\u03b1(v) as large as possible. We show that such a v must be\na local maximum of h\u03b1. Let u be any neighbour of v. If h\u03b1(u) > h\u03b2(u), then it follows that\nh\u03b1(v) > h\u03b1(u), since v was chosen with h\u03b1(v) maximum, and |h\u03b1(v)\u2212 h\u03b1(u)| = 1. If, on the\nother hand, h\u03b1(u) \u2264 h\u03b2(u), we have h\u03b1(v) \u2265 h\u03b2(v) + 1 \u2265 h\u03b2(u) \u2265 h\u03b1(u), which in fact means\nh\u03b1(v) > h\u03b1(u).\nThus h\u03b1(v) > h\u03b1(u) for all neighbours u of v, and we can apply a decreasing height\ntransformation to h\u03b1 at v to obtain h. Clearly m(h, h\u03b2) = m(h\u03b1, h\u03b2)\u2212 2. 2\nThe next lemma tells us that for a given 3-colouring, non-zero weight cycles are, in some sense,\nthe obstructing configurations forbidding the existence of a corresponding height function.\nLemma 3.3. Let \u03b1 be a 3-colouring of G with no corresponding height function. Then G\ncontains a cycle C for which W (\n\u2212\u2192\nC ,\u03b1) 6= 0.\nProof : For a path P in G, let\n\u2212\u2192\nP denote one of the two possible directed paths obtainable\nfrom P , and let\nW (\n\u2212\u2192\nP , \u03b1) =\n\u2211\n~e\u2208E(\u2212\u2192P )\nw(~e, \u03b1),\nwhere w(~e, \u03b1) takes values as defined in (1).\nNotice that if a colouring does have a height function, it is possible to construct one by\nfixing a vertex x \u2208 X, giving x an appropriate height ( satisfying properties H1\u2013H3 ) and then\nassigning heights to all vertices in V by following a breadth-first ordering from x.\nWhenever we attempt to construct a height function h for \u03b1 in such a fashion, we must\ncome to a stage in the ordering where we attempt to give some vertex v a height h(v) and\nfind ourselves unable to because v has a neighbour u with a previously assigned height h(u)\nand |h(u) \u2212 h(v)| > 1. Letting P be a path between u and v formed by vertices that have\nbeen assigned a height, and choosing the appropriate orientation of P , we have w(\n\u2212\u2192\nP , \u03b1) =\n|h(u)\u2212h(v)|. The lemma now follows by letting C be the cycle formed by P and the edge uv.\n2\nThe following lemma is obvious.\nLemma 3.4. Let u and v be vertices on a cycle C in a graph G, and suppose there is a\npath P between u and v in G internally disjoint from C. Let \u03b1 be a 3-colouring of G. Let C \u2032\nand C \u2032\u2032 be the two cycles formed from P and edges of C, and let\n\u2212\u2192\nC \u2032,\n\u2212\u2192\nC \u2032\u2032 be the orientations of\nC \u2032, C \u2032\u2032 induced by an orientation\n\u2212\u2192\nC of C ( so the edges of P have opposite orientations in\n\u2212\u2192\nC \u2032\nand\n\u2212\u2192\nC \u2032\u2032 ). Then W (\n\u2212\u2192\nC ,\u03b1) = W (\n\u2212\u2192\nC \u2032, \u03b1) +W (\n\u2212\u2192\nC \u2032\u2032, \u03b1).\n6\nNote this tells us that W (\n\u2212\u2192\nC ,\u03b1) 6= 0 implies W (\u2212\u2192C \u2032, \u03b1) 6= 0 or W (\u2212\u2192C \u2032\u2032, \u03b1) 6= 0.\nProof of Theorem 3.1 : Let G be a connected bipartite graph.\n(i) =\u21d2 (ii). Suppose C3(G) is not connected. Take two 3-colourings of G, \u03b1 and \u03b2, in\ndifferent components of C3(G). By Lemma 3.2 we know at least one of them, say \u03b1, has no\ncorresponding height function, and, by Lemma 3.3, there is a cycle C in G with W (\n\u2212\u2192\nC ,\u03b1) 6= 0.\n(ii) =\u21d2 (iii). Let G contain a cycle C with W (\u2212\u2192C ,\u03b1) 6= 0 for some 3-colouring \u03b1 of G.\nBecause W (\n\u2212\u2192\nC4, \u03b2) = 0 for any 3-colouring \u03b2 of C4, it follows that C = Cn for some even n \u2265 6.\nIf G = C, then it is easy to find a sequence of folds that will yield C6. If G is C plus some\nchords, then Lemma 3.4 tells us that there is a smaller cycle C \u2032 with W (\n\u2212\u2192\nC \u2032, \u03b1) 6= 0. Thus if\nG 6= C, we can assume that V (G) 6= V (C), and we describe how to fold a pair of vertices so\nthat (ii) remains satisfied ( for a specified cycle with G replaced by the graph created by the\nfold and \u03b1 replaced by its restriction to that graph; also denoted \u03b1 ); by repetition, we can\nobtain a graph that is a cycle and, by the previous observations, the implication is proved.\nNote that we shall choose vertices coloured alike to fold so that the restriction of \u03b1 to\nthe graph obtained is well-defined and proper. If C has three consecutive vertices u, v, w\nwith \u03b1(u) = \u03b1(w), folding u and w yields a graph containing a cycle C \u2032 = Cn\u22122 with\nW (\n\u2212\u2192\nC \u2032, \u03b1) = W (\n\u2212\u2192\nC ,\u03b1). Otherwise C is coloured 1-2-3-\u00b7 \u00b7 \u00b7 -1-2-3. We can choose u, v, w to be\nthree consecutive vertices of C, such that there is a vertex x \/\u2208 V (C) adjacent to v. Suppose,\nwithout loss of generality, that \u03b1(x) = \u03b1(u), and fold x and u to obtain a graph in which\nW (\n\u2212\u2192\nC ,\u03b1) is unchanged.\n(iii) =\u21d2 (i). Suppose G is foldable to C6. Take two 3-colourings of C6 not connected\nby a path in C3(C6) ( 1-2-3-1-2-3 and 1-2-1-2-1-2, for example ). Considering the appropriate\norientation of C6, note that the first colouring has weight 6 and the second has weight 0. We\nconstruct two 3-colourings of G not connected by a path in C3(G) as follows. Consider the\nreverse sequence of folds that gives G from C6. Following this sequence, for each colouring\nof C6, give every pair of new vertices introduced by an \u201cunfolding\u201d the same colour as the\nvertex from which they originated. In this manner we obtain two 3-colourings of G, \u03b1 and \u03b2,\nsay. Observe that every unfolding maintains a cycle inG which has weight 6 with respect to the\ncolouring induced by the first colouring of C6 and weight 0 with respect to the second induced\ncolouring. This means G will contain a cycle C for which W (\n\u2212\u2192\nC ,\u03b1) = 6 and W (\n\u2212\u2192\nC , \u03b2) = 0,\nshowing that \u03b1 and \u03b2 cannot possibly be in the same connected component of C3(G).\nThis completes the proof of the theorem. 2\n4 The complexity of 3-mixing for bipartite graphs\nLet us now turn our attention to the computational complexity of deciding whether or not\na 3-colourable graph G is 3-mixing. From Theorem 2.3 we know that we can restrict our\nattention to bipartite graphs, so we state the decision problem formally as follows.\n7\n3-Mixing\nInstance : A connected bipartite graph G.\nQuestion : Is G 3-mixing?\nObserving that Theorem 3.1 gives us two polynomial-time verifiable certificates for when G\nis not 3-mixing, we immediately obtain that 3-Mixing is in the complexity class coNP. By\nthe same theorem, the following decision problem is the complement of 3-Mixing.\nFoldable-to-C6\nInstance : A connected bipartite graph G.\nQuestion : Is G foldable to C6?\nWe will prove the following result, stated in the introduction.\nTheorem 1.1. The decision problem 3-Mixing is coNP-complete.\nOur proof will in fact show that Foldable-to-C6 is NP-complete. We will obtain a reduction\nfrom the following decision problem.\nRetractable-to-C6\nInstance : A connected bipartite graph G with an induced 6-cycle S.\nQuestion : Is G retractable to S? That is, does there exist a homomorphism r : V (G)\u2192 V (S)\nsuch that r(v) = v for all v \u2208 V (S)?\nIn [11] it is mentioned, without references, that Toma\u00b4s Feder and Gary MacGillivray proved in-\ndependently thatRetractable-to-C6 is NP-complete by reduction from 3-Colourability.\nFor completeness we give a sketch of a proof.\nTheorem 4.1 ( Feder, MacGillivray, see [11] ). Retractable-to-C6 is NP-complete.\nSketch of proof : It is clear that Retractable-to-C6 is in NP.\nGiven a graph G, construct a new graph G\u2032 as follows : subdivide every edge uv of G by\ninserting a vertex yuv between u and v. Also add new vertices a, b, c, d, e together with edges\nza, ab, bc, cd, de, ez, where z is a particular vertex of G ( any one will do ). The graph G\u2032 is\nclearly connected and bipartite, and the vertices z, a, b, c, d, e induce a 6-cycle S. We will\nprove that G is 3-colourable if and only if G\u2032 retracts to the induced 6-cycle S.\nAssume that G is 3-colourable and take a 3-colouring \u03c4 of G with \u03c4(z) = 1. From \u03c4\nwe construct a 6-colouring \u03c3 of G\u2032. For this, first set \u03c3(x) = \u03c4(x), if x \u2208 V (G). For the\nnew vertices yuv set \u03c3(yuv) =\n\uf8f1\uf8f4\uf8f2\uf8f4\uf8f3\n4, if \u03c4(u) = 1 and \u03c4(v) = 2,\n5, if \u03c4(u) = 2 and \u03c4(v) = 3,\n6, if \u03c4(u) = 3 and \u03c4(v) = 1.\nAnd for the cycle S we take\n\u03c3(a) = 4, \u03c3(b) = 2, \u03c3(c) = 5, \u03c3(d) = 3 and \u03c3(e) = 6. Now define r : V (G\u2032)\u2192 V (S) by setting\nr(x) = z, if \u03c3(x) = 1; r(x) = a, if \u03c3(x) = 4; r(x) = b, if \u03c3(x) = 2; r(x) = c, if \u03c3(x) = 5;\nr(x) = d, if \u03c3(x) = 3; and r(x) = e, if \u03c3(x) = 6. It is easy to check that r is a retraction of G\u2032\nto S.\n8\nConversely, suppose G\u2032 retracts to S. We can use this retraction to define a 6-colouring\nof G\u2032 in a similar way to that in which we defined r from \u03c3 in the preceding paragraph. The\nrestriction of this 6-colouring to G yields a 3-colouring of G, completing the proof. 2\nOur proof of Theorem 1.1 follows [11], where, as a special case of the main result of that\npaper, the following problem is proved to be NP-complete.\nCompactable-to-C6\nInstance : A connected bipartite graph G.\nQuestion : Is G compactable to C6? That is, does there exist an edge-surjective homomor-\nphism c : V (G)\u2192 V (C6)?\nIn [11] a polynomial reduction from Retractable-to-Ck to Compactable-to-Ck, with\nk \u2265 6 even, is given. We will use exactly the same transformation for k = 6 to prove that\nFoldable-to-C6 is NP-complete.\nProof of Theorem 1.1 : As mentioned before, we will show that 3-Mixing is coNP-complete\nby showing that Foldable-to-C6 is NP-complete. And we do that by giving a polynomial\nreduction from Retractable-to-C6 to Foldable-to-C6.\nSo consider an instance of Retractable-to-C6 : a connected bipartite graph G and an\ninduced 6-cycle S. From G we construct, in time polynomial in the size of G, an instance G\u2032\nof Foldable-to-C6 such that\nG retracts to S if and only if G\u2032 is foldable to C6. (\u2217)\nAssume G has vertex bipartition (GA, GB). Let V (S) = SA \u222a SB, where SA = {h0, h2, h4}\nand SB = {h1, h3, h5}, and assume E(S) = {h0h1, . . . , h4h5, h5h0 }.\nThe construction of G\u2032 is as follows.\n\u2022 For every vertex a \u2208 GA \\SA, add to G new vertices ua1, ua2, wa1 , ya1 , ya2 , together with edges\nua1h0, au\na\n2, w\na\n1h3, aw\na\n1 , u\na\n1w\na\n1 , y\na\n1h5, y\na\n2h2, u\na\n1y\na\n1 , w\na\n1y\na\n2 , u\na\n1u\na\n2, y\na\n1y\na\n2 .\n\u2022 For every vertex b \u2208 GB \\SB, add to G new vertices ub1, wb1, wb2, yb1, yb2, together with edges\nub1h0, bu\nb\n1, w\nb\n1h3, bw\nb\n2, u\nb\n1w\nb\n1, y\nb\n1h5, y\nb\n2h2, u\nb\n1y\nb\n1, w\nb\n1y\nb\n2, w\nb\n1w\nb\n2, y\nb\n1y\nb\n2.\n\u2022 For every edge ab \u2208 E(G) \\ E(S), with a \u2208 GA \\ SA and b \u2208 GB \\ SB, add two new\nvertices : xaba adjacent to a and u\na\n1; and x\nab\nb adjacent to b, w\nb\n1 and x\nab\na .\nFrom the construction it is clear that G\u2032 is connected and bipartite. Note that G\u2032 contains G\nas an induced subgraph, and note also that the subgraphs constructed around a vertex a \u2208\nGA \\SA and a vertex b \u2208 GB \\SB are isomorphic; these are depicted below in Figures 1 and 2.\nWe will prove (\u2217) via a sequence of claims.\nClaim 4.1. Suppose G retracts to S. Then G is foldable to C6.\nProof : The fact that G retracts to S means we have a homomorphism r : V (G) \u2192 V (S)\nsuch that r(v) = v for all v \u2208 V (S). Define a partition {Ri | i = 0, 1, . . . , 5 } of V (G) by\nsetting v \u2208 Ri \u21d0\u21d2 r(v) = hi. Because r is a homomorphism, we know any edge e \u2208 E(G)\n9\nFigure 1 : The subgraph of G\u2032 added around a vertex a \u2208 GA \\ SA, together with the 6-cycle S.\nFigure 2 : The subgraph of G\u2032 added around a vertex b \u2208 GB \\ SB , together with the 6-cycle S.\nhas one vertex in Rj and another in Rj+1, for some j, where subscript addition is modulo 6.\nUsing this partition of V (G), we show that G is foldable to a 6-cycle ( to S, in fact ). We\ndescribe how to fold a pair of vertices such that the resulting ( smaller ) graph still has S as an\ninduced subgraph; by repetition, this will eventually yield S. Supposing V (G) 6= V (S) ( for\nelse we are done ), let E\u2212 = E(G) \\ E(S). Because G is connected, there must be an edge\nuv \u2208 E\u2212 with u \u2208 V (S) and v \u2208 V (G) \\ V (S). Suppose v \u2208 Rj , for some j \u2208 {0, 1, . . . , 5}.\nFold v with hj , and note that the resulting graph remains bipartite, connected and contains S\nas an induced subgraph. Denote the resulting graph by G and repeat. 2\nWe now prove the \u2018only if\u2019 part of (\u2217).\nClaim 4.2. Suppose G retracts to S. Then G\u2032 is foldable to C6.\nProof : By Claim 4.1, G is foldable to C6. In fact, by the proof of Claim 4.1, we know G is\nfoldable to S. Because G is an induced subgraph of G\u2032, we can follow, in G\u2032, the sequence\nof folds that gives S from G. We now show how, after following this sequence of folds, we\ncan choose some further folds that will leave us with S. For a vertex v \u2208 V (G) \\ V (S), we\nwill fold into S all vertices introduced to G\u2032 on account of v, yielding a smaller graph still\ncontaining S as an induced subgraph. By repetition, we will eventually end up with just S.\n10\nFirst let us consider where a vertex a \u2208 GA \\ SA with no neighbours in GB \\ SB might\nhave been folded to, and how we could continue folding. There are three possibilities.\n1. The vertex a has been folded with h1. In that case fold y\na\n1 with h0, y\na\n2 with h1, u\na\n1 with h1,\nua2 with h0, and w\na\n1 with h2.\n2. The vertex a has been folded with h3. In that case fold y\na\n1 with h4, y\na\n2 with h3, u\na\n1 with h5,\nua2 with h4, and w\na\n1 with h4.\n3. The vertex a has been folded with h5. In that case fold y\na\n1 with h4, y\na\n2 with h3, u\na\n1 with h5,\nua2 with h0, and w\na\n1 with h4.\nSimilarly, let us consider where a vertex b \u2208 GB \\ SB with no neighbours in GA \\ SA might\nhave been folded to, and how we could continue folding. Again, there are three possibilities.\n1. The vertex b has been folded with h0. In that case fold y\nb\n1 with h0, y\nb\n2 with h1, u\nb\n1 with h1,\nwb1 with h2, and w\nb\n2 with h1.\n2. The vertex b has been folded with h2. In that case fold y\nb\n1 with h0, y\nb\n2 with h1, u\nb\n1 with h1,\nwb1 with h2, and w\nb\n2 with h3.\n3. The vertex b has been folded with h4. In that case fold y\nb\n1 with h4, y\nb\n2 with h3, u\nb\n1 with h5,\nwb1 with h4, and w\nb\n2 with h3.\nNow let us consider the case where a vertex a \u2208 GA \\SA is adjacent to a vertex b \u2208 GB \\SB.\nThere are six cases to consider, corresponding to the six edges of S to which ab might have\nbeen folded. Often there will be a choice of folds; for each case we give just one.\n1. The edge ab has been folded to h1h2. We can use the previous case analyses to conclude\nthat ua1 must be folded with h1 and w\nb\n1 with h2. Now we must deal with x\nab\na and x\nab\nb .\nFolding xaba with h2 and x\nab\nb with h1 gives us what we require.\n2. The edge ab has been folded to h1h0. Then we conclude u\na\n1 must be folded with h1 and w\nb\n1\nwith h2. Now fold x\nab\na with h0 and x\nab\nb with h1.\n3. The edge ab has been folded to h3h4. Then u\na\n1 must be folded with h5 and w\nb\n1 with h4.\nNow fold xaba with h4 and x\nab\nb with h3.\n4. The edge ab has been folded to h3h2. Then u\na\n1 must be folded with h5 and w\nb\n1 with h2.\nNow fold xaba with h4 and x\nab\nb with h3.\n5. The edge ab has been folded to h5h0. Then u\na\n1 must be folded with h5 and w\nb\n1 with h2.\nNow fold xaba with h0 and x\nab\nb with h1.\n6. The edge ab has been folded to h5h4. Then u\na\n1 must be folded with h5 and w\nb\n1 with h4.\nNow fold xaba with h4 and x\nab\nb with h5.\nThis completes the proof of the claim. 2\nWe must now prove the \u2018if\u2019 part of (\u2217). We do this via the next three claims.\nClaim 4.3. Suppose G\u2032 is foldable to C6. Then G\u2032 is compactable to C6.\nProof : The fact that G\u2032 is foldable to the 6-cycle C6 = k0k1k2k3k4k5k0 means there exists\na homomorphism c : V (G\u2032)\u2192 V (C6). In order to make this precise, let us define sets Pi, for\ni = 0, 1, . . . , 5, as follows. Initially, set Pi = {ki}. Now let us consider the reverse sequence\n11\nof \u201cunfoldings\u201d that yields G\u2032 from C6. Following this sequence, suppose a vertex v \u2208 Pj is\nunfolded. Delete v from Pj and add to Pj the two vertices that were identified to give v in\nthe original fold. Repeat this until G\u2032 is obtained, and now define c by setting, for v \u2208 V (G\u2032),\nc(v) = ki \u21d0\u21d2 v \u2208 Pi. Clearly the sets Pi form a partition of V (G\u2032) and so c is well-\ndefined. In addition, by the way the sets Pi have been constructed, it is clear that any edge\nuv \u2208 E(G\u2032) has one vertex in Pj and the other in Pj+1, for some j \u2208 {0, 1, . . . , 5}. This means\nc(u)c(v) \u2208 E(C6) and so c is a homomorphism. Moreover, it is edge-surjective : the Pi\u2019s are\nall non-empty and there is at least one edge between every pair Pi, Pi+1. 2\nThe proof of the following claim is a specialisation of the proof in [11] that if G\u2032 is compactable\nto C6, then G\n\u2032 retracts to S.\nWe need some further notation. As usual, for a set S and a function f , we let f(S) =\n{ f(s) | s \u2208 S }. For vertices u, v in a graph H, dH(u, v) denotes the distance between u\nand v; and for a vertex u and a set of vertices S we have dH(S, u) = min{ dH(v, u) | v \u2208 S }.\nClaim 4.4 ( Vikas [11] ). Suppose G\u2032 is foldable to C6. Then G\u2032 retracts to S.\nProof : By Claim 4.3 we know there exists a compaction c : V (G\u2032) \u2192 V (C6). We prove c\nis in fact a retraction to S. To do this, we must show that for all v \u2208 V (S), c(v) = v.\nFor convenience, we now use the same notation for C6 and S; that is, we let V (C6) =\n{h0, h1, . . . , h5} and E(C6) = {h0h1, . . . , h4h5, h5h0 }.\nLet U = {uv1 | v \u2208 V (G) \\ V (S) } \u222a {h0, h1, h5} and W = {wv1 | v \u2208 V (G) \\ V (S) } \u222a\n{h2, h3, h4}. Because both these vertex sets induce subgraphs of diameter 2 in G\u2032, c(U)\nand c(W ) must each induce a path of length 1 or 2 in C6. We prove they each induce a path\nof length 2.\nSuppose that c(U) has only two vertices, adjacent in C6. Thus we let c(U) = {h0, h1},\nwith c(h0) = h0. ( Due to the symmetry of C6, we can, if necessary, redefine c in this way. )\nLet U\u2212 = U \\{h0}. Because h0 is adjacent to every other vertex in U , c(U\u2212) = {h1}. It is easy\nto check that for any g \u2208 G\u2032, dG\u2032(U\u2212, g) \u2264 2. But we have dC6(c(U\u2212), h4) = dC6(h1, h4) = 3,\nwhich means no g \u2208 G\u2032 can be mapped to h4 under c, contradicting the fact that c is a\ncompaction.\nHence c(U) induces a path on three vertices. By a similar argument, the same applies\nto c(W ). By the symmetry of C6, we can without loss of generality take c(U) = {h1, h0, h5}.\nThis means that c(h0) = h0. We now prove that c(h3) = h3.\nLet gg\u2032 be an edge of G\u2032 that is mapped to h3h2 or h3h4, with c(g) = h3, and c(g\u2032) =\nh2 or c(g\n\u2032) = h4. Note that h3 is at distance 2 from c(U) in C6 while h2 and h4 are at\ndistance 1 from c(U) in C6. This means that dG\u2032(U, g) \u2265 2 and dG\u2032(U, g\u2032) \u2265 1. Earlier we\nnoted that the distance between U\u2212 and any vertex of G\u2032 is at most 2, which means that\ndG\u2032(U, g) \u2264 2, so in fact dG\u2032(U, g) = 2. Because G\u2032 is bipartite, dG\u2032(U, g\u2032) = 1. Hence g is one\nof a, xabb , h3, y\na\n2 , y\nb\n2, w\nb\n2, and g\n\u2032 is one of b, xaba , ua2, h2, h4, ya1 , yb1, wa1 , wb1, for some a \u2208 GA \\ SA,\nb \u2208 GB \\ SB. Given that c(h0) = h0, we cannot have c(h3) = h2 or c(h3) = h4. Aiming\nfor a contradiction, let us suppose that c(h3) 6= h3. Then no edge of G\u2032 with h3 as an\nendpoint covers h3h2 or h3h4. Hence gg\n\u2032 must be one of the following : axaba , ab, aua2, awa1 ,\nxabb x\nab\na , x\nab\nb b, x\nab\nb w\nb\n1, y\na\n2y\na\n1 , y\na\n2w\na\n1 , y\na\n2h2, y\nb\n2y\nb\n1, y\nb\n2w\nb\n1, y\nb\n2h2 , w\nb\n2w\nb\n1, w\nb\n2b. If ah2 or ah4 is an edge\n12\nof G\u2032, then we also need to consider such an edge as a possible candidate for gg\u2032. By previous\nassumptions, we have c(h3) = h1 or c(h3) = h5. We now prove that c(h3) 6= h3 is impossible\nas follows. We first assume c(h3) = h1 and show that no possible edge for gg\n\u2032 covers h3h4,\nand then assume c(h3) = h5 and show that no possible edge for gg\n\u2032 covers h3h2. Thus let us\nassume c(h3) = h1.\nLet us suppose that for some v \u2208 V (G) \\ V (S), yv2wv1 covers h3h4, so c(yv2) = h3 and\nc(wv1) = h4. But c(h3) = h1, and since h3 an w\nv\n1 are adjacent, we must have c(w\nv\n1) = h0 or\nc(wv1) = h2, a contradiction.\nBy exactly the same argument, we come to the conclusion that none of the edges awa1 ,\nwb2w\nb\n1, x\nab\nb w\nb\n1 can cover the edge h3h4. A similar argument applies to y\nv\n2h2.\nSuppose that for some v \u2208 V (G) \\ V (S), yv2yv1 covers h3h4, so c(yv2) = h3 and c(yv1) = h4.\nNow c(uv1) = h1 or c(u\nv\n1) = h5, but since u\nv\n1 and y\nv\n1 are adjacent we must have c(u\nv\n1) = h5.\nBecause c(wv1) must be adjacent to c(y\nv\n2) = h3, c(w\nv\n1) = h2 or c(w\nv\n1) = h4. But u\nv\n1 is adjacent\nto wv1 , so c(w\nv\n1) = h4. This means y\nv\n2w\nv\n1 covers h3h4, which we have already seen is impossible.\nNow suppose that for some b \u2208 GB \\ SB, wb2b covers h3h4, so c(wb2) = h3 and c(b) = h4.\nIf c(b) = h4, we must have c(u\nb\n1) = h3 or c(u\nb\n1) = h5. But c(h0) = h0 means c(u\nb\n1) = h1 or\nc(ub1) = h5, so c(u\nb\n1) = h5. This implies, since c(w\nb\n1) = h2 or c(w\nb\n1) = h4, that c(w\nb\n1) = h4.\nBut this means that wb2w\nb\n1 covers h3h4, which we have already excluded as a possibility.\nAssume that for some a \u2208 GA \\ SA, aua2 covers h3h4, so c(a) = h3 and c(ua2) = h4.\nBecause ua1 and u\na\n2 are adjacent, c(u\na\n1) = h3 or c(u\na\n1) = h5, but since u\na\n1 is adjacent to h0 and\nc(h0) = h0, we have c(u\na\n1) = h5. Similarly, c(w\na\n1) = h2 or c(w\na\n1) = h4, but since w\na\n1 and u\na\n1\nare adjacent, we have c(wa1) = h4. Hence aw\na\n1 covers h3h4, but we have already seen this is\nimpossible.\nNow assume that for some a \u2208 GA \\ SA, axaba covers h3h4, so c(a) = h3 and c(xaba ) = h4.\nNow c(ua1) = h1 or c(u\na\n1) = h5, but since u\na\n1 and x\nab\na are adjacent, we have c(u\na\n1) = h5.\nBecause c(ua2) must be adjacent to c(a) = h3 as well as c(u\na\n1) = h5, we have c(u\na\n2) = h4.\nHence aua2 covers h3h4, but we have already seen this is impossible.\nSuppose that for some b \u2208 GB \\ SB, xabb b covers h3h4, so c(xabb ) = h3 and c(b) = h4.\nNow c(ub1) = h1 or c(u\nb\n1) = h5, but since b and u\nb\n1 are adjacent, we must have c(u\nb\n1) = h5.\nBecause c(wb1) must be adjacent to c(x\nab\nb ) = h3, we have c(w\nb\n1) = h2 or c(w\nb\n1) = h4. But u\nb\n1\nand wb1 are adjacent, so c(w\nb\n1) = h4. This means x\nab\nb w\nb\n1 covers h3h4, which we have already\nruled out as a possibility.\nNow suppose that for some a \u2208 GA\\SA and some b \u2208 GB\\SB, ab covers h3h4, so c(a) = h3\nand c(b) = h4. Since u\na\n2 is adjacent to a and we have seen au\na\n2 does not cover h3h4, we must\nhave c(ua2) = h2. Now c(u\na\n1) = h1 or c(u\na\n1) = h5, but since u\na\n1 and u\na\n2 are adjacent, we must\nhave c(ua1) = h1. Also, c(x\nab\na ) must be adjacent to c(u\na\n1) = h1 and c(a) = h3, so c(x\nab\na ) = h2.\nSimilarly, c(xabb ) must be adjacent to c(x\nab\na ) = h2 and c(b) = h4, so c(x\nab\nb ) = h3. But this\nmeans xabb b covers h3h4, which we have already seen is impossible.\nSuppose that for some a \u2208 GA\\SA and some b \u2208 GB\\SB, xabb xaba covers h3h4, so c(xabb ) = h3\nand c(xaba ) = h4. Since a is adjacent to x\nab\na and we have seen ax\nab\na does not cover h3h4, we\nmust have c(a) = h5. Because c(b) must be adjacent to c(a) = h5 and c(x\nab\nb ) = h3, we have\nc(b) = h4. But then x\nab\nb b covers h3h4, and we have seen this is impossible.\n13\nLastly, if ah2 ( or ah4 ) is an edge of G\n\u2032, assuming c(a) = h3 and c(h2) = h4 ( or c(a) = h3\nand c(h4) = h4 ) immediately leads us to a contradiction, since c(h3) = h1.\nFrom all this we obtain that assuming c(h3) = h1 leads us to the conclusion that no edge\nof G\u2032 covers h3h4, contradicting the fact that c is a compaction.\nSimilarly, one can show that assuming c(h3) = h5 leads to the conclusion that no edge\nof G\u2032 covers h2h3; details are left to the reader.\nHence c(h3) = h3, which means that c(W ) = {h2, h3, h4}.\nNow we show c(h1) 6= c(h5). To the contrary, assume c(h1) = c(h5). Since c(h0) = h0,\nwe have c(h1), c(h5) \u2208 {h1, h5}. Due to symmetry, we can without loss of generality assume\nc(h1) = c(h5) = h1. Since c(U) = {h1, h0, h5}, it must be the case that c(uv1) = h5 for\nsome v \u2208 V (G) \\ V (S). Now c(wv1) and c(h2) must both be adjacent to c(h3) = h3, so\nc(wv1), c(h2) \u2208 {h2, h4}. Because c(uv1) = h5 and uv1 and wv1 are adjacent, c(wv1) = h4.\nSimilarly, because c(h0) = h0 and h1 and h2 are adjacent, c(h2) = h2. Now c(y\nv\n2) must be\nadjacent to c(h2) = h2 and c(w\nv\n1) = h4, so c(y\nv\n2) = h3. Also, c(y\nv\n1) must be adjacent to\nc(h5) = h1 and c(u\nv\n1) = h5, so c(y\nv\n1) = h0. Thus we have that y\nv\n1 and y\nv\n2 are adjacent in G\n\u2032,\nbut c(yv1) = h0 and c(y\nv\n2) = h3 are not adjacent in C6, a contradiction.\nHence c(h1) 6= c(h5). That is, c({h1, h5}) = {h1, h5}. Without loss of generality, we can\ntake c(h1) = h1 and c(h5) = h5. Since c(h3) = h3, we have c(h2), c(h4) \u2208 {h2, h4}. Because h1\nand h2 are adjacent in G\n\u2032 and the distance between c(h1) = h1 and h4 in C6 is 3, it must be\nthat c(h2) 6= h4 and so c(h2) = h2. Similarly, because h5 and h4 are adjacent in G\u2032 and the\ndistance between c(h5) = h5 and h2 in C6 is 3, it must be that c(h4) 6= h2, and so c(h4) = h4.\nThus c(hi) = hi for all i = 0, 1, . . . , 5, and c : V (G\n\u2032)\u2192 V (C6) is a retraction. 2\nThe last claim is a simple observation that completes the proof of (\u2217) and thus also of Theo-\nrem 1.1.\nClaim 4.5. Suppose G\u2032 is foldable to C6. Then G retracts to S.\nProof : By Claims 4.3 and 4.4 we know there exists a retraction r : V (G\u2032)\u2192 V (S). Because S\nis an induced subgraph of G, and G is an induced subgraph of G\u2032, restricting r to G gives us\nwhat we need. 2\n5 A polynomial-time algorithm for planar bipartite graphs\nIn this section, we prove the following.\nTheorem 1.2. Restricted to planar bipartite graphs, the decision problem 3-Mixing is in\nthe complexity class P.\nTo prove the theorem we need two lemmas.\nLemma 5.1. Let P be a shortest path between distinct vertices u and v in a connected bipartite\ngraph H. Then H is foldable to P .\n14\nProof : Let P have vertices u = v0, v1, . . . , vk\u22121, vk = v, and let T be a breadth-first spanning\ntree of H rooted at u that contains P ( we can choose T so that it contains P since P is a\nshortest path ). To fold H to P , first fold all vertices at distance one from u in T to v1.\nNext fold all vertices at distance two (in T ) from u to v2, and so on until finally all vertices\nat distance k from u are folded to vk = v. We can then obtain P by making, if necessary,\narbitrary folds on the vertices at distance at least k + 1 from u. 2\nIn the following, when we say some vertices of a graph are properly precoloured, we mean\nthat they are assigned colours such that the subgraph induced by these vertices is properly\ncoloured.\nLemma 5.2. Let H be a bipartite graph, and suppose the vertices of a 4-cycle in H are\nproperly precoloured using colours from 1, 2, 3. Then this 3-colouring can be extended to a\nproper 3-colouring of H.\nProof : Since any 3-colouring of a four cycle C4 has two vertices with the same colour, we\ncan without loss of generality assume the four vertices are coloured 1-2-1-2 or 1-2-1-3. In the\nfirst instance, since H is bipartite, we can extend the precolouring to a colouring of H using\ncolours 1 and 2 only. For the second case, we can use the same colouring, except leaving the\nvertex coloured 3 as it is. 2\nThe sequence of claims that follows outlines an algorithm that, given a connected bipartite\nplanar graph G as input, determines in polynomial time whether or not G is 3-mixing. We\nfirst show how we can take the input graph to be 2-connected. Recall that a block of a graph\nis a maximal connected subgraph that has no cut-vertex.\nClaim 5.1. Let G be a connected bipartite planar graph. Then G is 3-mixing if and only if\neach block of G is 3-mixing.\nProof : If G is 3-mixing, then clearly so are its blocks. Conversely, if G is not 3-mixing, we\nknow by Theorem 3.1 that there must exist a 3-colouring \u03b1 of G and a cycle C in G such\nthat W (\n\u2212\u2192\nC ,\u03b1) 6= 0. But because C must lie completely inside a ( 2-connected ) block of G,\nwe know that there is at least one block of G that is not 3-mixing either. 2\nLet us now consider an embedding of our 2-connected bipartite planar graph G in the plane,\nand let us identify G with this embedding. ( Throughout the rest of this section, we will\nusually, for ease of reference, identify a planar graph with a given embedding of the graph in\nthe plane. ) Given a cycle D in G, denote by Int(D) and Ext(D) the sets of vertices inside\nand outside of D, respectively. Note that the vertices of D itself are not included in Int(D)\nnor in Ext(D). If both Int(D) and Ext(D) are non-empty, D is said to be separating and, in\nthis case, we define GInt(D) = G\u2212 Ext(D) and GExt(D) = G\u2212 Int(D). Note that D is part\nof both these graphs.\nWe now consider the case where the planar embedding of G has a separating 4-cycle.\nClaim 5.2. Let G be a 2-connected bipartite planar graph, and suppose that G has a planar\nembedding with a separating 4-cycle D. Then G is 3-mixing if and only if GInt(D) and\nGExt(D) are both 3-mixing.\n15\nProof : To prove necessity, we show that if one of GInt(D) or GExt(D) is not 3-mixing, then\nG is not 3-mixing. Without loss of generality, suppose that GInt(D) is not 3-mixing, so there\nexists a 3-colouring \u03b1 of GInt(D) and a cycle C in GInt(D) with W (\n\u2212\u2192\nC ,\u03b1) 6= 0. By Lemma 5.2,\nthe 3-colouring of the vertices of the 4-cycle D can be extended to a 3-colouring of GExt(D).\nThe combination of the 3-colourings of GInt(D) and GExt(D) gives a 3-colouring of G with a\nnon-zero weight cycle, showing that G is not 3-mixing.\nTo prove sufficiency, we show that if G is not 3-mixing, then at least one of GInt(D) and\nGExt(D) must fail to be 3-mixing. Suppose that \u03b1 is a 3-colouring of G for which there is a\ncycle C with W (\n\u2212\u2192\nC ,\u03b1) 6= 0. If C is contained entirely within GInt(D) or GExt(D) we are done;\nso let us assume that C has some vertices in Int(D) and some in Ext(D). Then applying\nLemma 3.4 ( repeatedly, if necessary ) we can find a cycle C \u2032 contained entirely in GInt(D)\nor GExt(D) for which W (\n\u2212\u2192\nC \u2032, \u03b1) 6= 0, completing the proof. 2\nWe need two further claims to complete the description of our algorithm. We call a face\nof G with k edges in its boundary a k-face, and a face with at least k edges in its boundary a\n\u2265 k-face. The number of \u2265 6-faces in G ( which we can now assume has no separating 4-cycle )\nwill in fact determine whether or not G is 3-mixing.\nClaim 5.3. Let G be a 2-connected bipartite planar graph. Suppose that G has a planar\nembedding with no separating 4-cycle, and suppose that every internal face of the embedding\nis a 4-face. Then G is 3-mixing.\nProof : Let \u03b1 be any 3-colouring of G and let C be any cycle in G. We show W (\n\u2212\u2192\nC ,\u03b1) = 0\nby induction on the number of faces inside C. If there is just one face inside C, C is in fact\na facial 4-cycle and W (\n\u2212\u2192\nC ,\u03b1) = 0.\nFor the inductive step, let C be a cycle with r \u2265 2 faces in its interior. If, for two\nconsecutive vertices u, v of C, we have vertices a, b \u2208 Int(C) together with edges ua, ab, bv\nin G, let C \u2032 be the cycle formed from C by the removal of the edge uv and the addition of\nedges ua, ab, bv. If not, check whether for three consecutive vertices u, v, w of C, there is a\nvertex a \u2208 Int(C) with edges ua, aw in G. If so, let C \u2032 be the cycle formed from C by the\nremoval of the vertex v and the addition of the edges ua, aw. If neither of the previous two\ncases apply, we must have, for u, v, w, x four consecutive vertices of C, an edge ux inside C.\nIn such a case, let C \u2032 be the cycle formed from C by the removal of vertices v, w and the\naddition of the edge ux.\nIn all cases we have that C \u2032 has r\u2212 1 faces in its interior, so, by induction, we can assume\nW (\n\u2212\u2192\nC \u2032, \u03b1) = 0. By Lemma 3.1, W (\n\u2212\u2192\nC ,\u03b1) = 0 as well. 2\nClaim 5.4. Let G be a 2-connected bipartite planar graph. Suppose that G has a planar\nembedding with no separating 4-cycle, and suppose further that the embedding has an internal\n\u2265 6-face, and that the outer face is a \u2265 6-face. Then G is not 3-mixing.\nProof : We claim that G, under the given assumptions, is foldable to C6. Denote the internal\n\u2265 6-face by f , and the outer face by f0. We call a cycle D in G f -separating if f lies inside D,\nwhere we include the possibility that edges on the boundary of f lie on the cycle D. ( Note\nthat the cycle bounding f0 is always an f -separating cycle, and thus an f -separating cycle\n16\nneed not be a separating cycle. ) Obviously G contains no f -separating 4-cycle, since such\na cycle would constitute a separating 4-cycle. We now claim that if G is not a cycle, then\nit is possible to find a sequence of one or more folds so that the resulting graph is a smaller\nplanar graph that has an internal \u2265 6-face f \u2032, whose outer face is a \u2265 6-face, and without an\nf \u2032-separating 4-cycle. ( Note that bipartiteness is trivially maintained by folding. ) Repeating\nsuch a sequence of folds will eventually transform G into a cycle of length at least six, proving\nthat G is not 3-mixing.\nLet C be the cycle that bounds f : we will initially attempt to fold vertices into C. Let\nx, y, z be three consecutive vertices of C with y having degree at least 3; if there is no such\nvertex y, then G is simply a cycle of length at least six and we are done. Let a be a neighbour\nof y distinct from x and z, such that the edges ya and yz form part of the boundary of a face\nadjacent to f .\nSuppose the result of folding a and z introduces no f -separating 4-cycle. If so, we fold a\nand z. Note that the resulting graph still contains the internal \u2265 6-face f , and is planar since\nthe edges ya and yz form part of a common face. Note also that the outer face, though\nit might have decreased in size, remains a \u2265 6-face : if it did not ( so the edges ya and yz\nwere originally part of the boundary of f0, which had length six ), then we would have a\ncontradiction to the fact that folding a and z introduced no f -separating 4-cycle. We observe\nthat folding a and z might well introduce a cut-vertex into the graph, but that as long as such\na vertex is not included twice on the boundary of the outer face, this is not a problem. ( Note\nthat such a situation cannot arise for the internal face f . ) If we do find that the boundary\nof the outer face now includes a vertex v twice, then let us denote by G\u2032 the graph resulting\nfrom folding a and z. Let us also denote by C \u2032o and C \u2032\u2032o the two distinct cycles formed by the\nboundary of the outer face, with V (C \u2032o) \u2229 V (C \u2032\u2032o ) = {v}, and where G\u2032Int(C \u2032o) is the subgraph\nof G\u2032 containing the internal face f ( so C \u2032o must have length at least six, for otherwise we have\nintroduced an f -separating 4-cycle ). Now, considering an edge vw of C \u2032\u2032o , we fold G\u2032Int(C\n\u2032\u2032\no )\nto vw ( using Lemma 5.1 and the fact that vw is a shortest path between v and w ). Using\nthis same sequence of folds in G\u2032, followed by folding vw into C \u2032o, leaves us with a graph with\nthe required invariants, and every vertex on the boundary of the outer face of the resulting\ngraph distinct.\nSuppose folding a and z does result in the creation of an f -separating 4-cycle. If so, this\nmust be because the path a, y, z forms part of an f -separating 6-cycle D. We now show how\nwe can find alternative folds which do not introduce an f -separating 4-cycle. The fact that D\nis f -separating means there is a path P \u2286 D of length 4 between a and z. Note that P cannot\ncontain y, for this would contradict the fact that G has no f -separating 4-cycle. Consider the\ngraph G\u2032 = GInt(D)\u2212{yz}. We claim that the path P \u2032 = P \u222a{y} is a shortest path between y\nand z in G\u2032. To see this, remember that G is bipartite, so any path between y and z in G\nhas to have odd length. We cannot have another edge yz \u2208 E(G\u2032) since G is simple. Now\nnote that any path between y and z in G\u2032, together with the edge yz, forms an f -separating\ncycle in G. Hence a path of length 3 between y and z would contradict the fact that G has\nno f -separating 4-cycle, and so P \u2032 is indeed a shortest path between y and z in G\u2032. Using\nLemma 5.1, we see that G\u2032 is foldable to P \u2032. Using the same sequence of folds in G will fold\n17\nGInt(D) into D. Note this introduces no separating 4-cycle into the resulting graph, and note\nalso that this graph is planar, since it is a subgraph of G. Moreover, note that the length\nof the cycle bounding the outer face remains the same, that the vertices of this cycle are all\ndistinct, and that the cycle D now bounds an internal 6-face. It follows that this sequence of\nfolds is a sequence as required by the claim. This completes the proof. 2\nThe sequence of Claims 5.1 \u2013 5.4 can easily be used to obtain a polynomial-time algorithm to\ncheck if a given planar bipartite graph G is 3-mixing. This completes the proof of Theorem 1.2.\nAcknowledgements\nWe are indebted to Gary MacGillivray for helpful discussions and for bringing reference [11]\nto our attention.\nReferences\n[1] R.J. Baxter, Exactly Solved Models in Statistical Mechanics. Academic Press, New York,\n1982.\n[2] J. Billingham, R. Leese, and H. Rajaniemi, Frequency reassignment in cellular phone\nnetworks. Smith Institute Study Group Report (2005). Available via www.smithinst.\nac.uk\/Projects\/ESGI53\/ESGI53-Motorola\/Report\/.\n[3] P. Bonsma and L. Cereceda, Finding paths between graph colourings: PSPACE-\ncompleteness and superpolynomial distances. CDAM Research Report LSE-CDAM-2007-\n12 (2007). Available via www.cdam.lse.ac.uk\/Reports\/Abstracts\/cdam-2007-12.\nhtml.\nExtended abstract in : Mathematical Foundations of Computer Science 2007. Proceedings\nof 32nd International Symposium MFCS 2007. Lect. Notes Comput. Sc. 4708 (2007),\n738\u2013749.\n[4] L. Cereceda, J. van den Heuvel, and M. Johnson, Connectedness of the graph of vertex-\ncolourings. Discrete Math. 308 (2008), 913\u2013919.\n[5] L. Cereceda, J. van den Heuvel and M. Johnson, Finding paths between 3-colourings.\nCDAM Research Report LSE-CDAM-2007-31 (2007). Available via www.cdam.lse.ac.\nuk\/Reports\/Abstracts\/cdam-2007-31.html.\n[6] C.R. Cook and A.B. Evans, Graph folding. In : Proceedings of the Tenth Southeastern\nConference on Combinatorics, Graph Theory and Computing. Congress. Numer. XXIII\u2013\nXXIV (1979), 305\u2013314.\n[7] R. Diestel, Graph Theory, 3rd edition. Springer-Verlag, Heidelberg, New-York, 2005.\n[8] L.A. Goldberg, R. Martin, and M. Paterson, Random sampling of 3-colorings in Z2.\nRandom Structures Algorithms 24 (2004), 279\u2013302.\n18\n[9] M. Jerrum, A very simple algorithm for estimating the number of k-colourings of a low\ndegree graph. Random Structures Algorithms 7 (1995), 157\u2013165.\n[10] M. Jerrum, Counting, Sampling and Integrating : Algorithms and Complexity. Birk-\nha\u00a8user Verlag, Basel, 2003.\n[11] N. Vikas, Computational complexity of compaction to irreflexive cycles. J. Comput. Syst.\nSci. 68 (2004), 473\u2013496.\n19\n"}