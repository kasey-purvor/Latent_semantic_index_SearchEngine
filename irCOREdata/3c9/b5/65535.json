{"doi":"10.1017\/S0269964809000138","coreId":"65535","oai":"oai:dro.dur.ac.uk.OAI2:5556","identifiers":["oai:dro.dur.ac.uk.OAI2:5556","10.1017\/S0269964809000138"],"title":"Dynamic routing of customers with general delay costs in a multiserver queuing system.","authors":["Argon,  N. T.","Ding,  L.","Glazebrook,  K. D.","Ziya,  S."],"enrichments":{"references":[],"documentType":{"type":1}},"contributors":[],"datePublished":"2009-04-01","abstract":"We consider a network of parallel service stations each modeled as a single-server queue. Each station serves its own dedicated customers as well as generic customers who are routed from a central controller. We suppose that the cost incurred by a customer is an increasing function of her time spent in the system. In a significant advance on most previous work, we do not require waiting costs to be convex, still less linear. With the objective of minimizing the long-run average waiting cost, we develop two heuristic routing policies, one of which is based on dynamic programming policy improvement and the other on Lagrangian relaxation. In developing the latter policy, we show that each station is \u201cindexable\u201d under mild conditions for customers\u2019 waiting costs and also prove some structural results on the admission control problem that naturally arises as a result of the Lagrangian relaxation. We then test the performance of our heuristics in an extensive numerical study and show that the Lagrangian heuristic demonstrates a strong level of performance in a range of traffic conditions. In particular, it clearly outperforms both a greedy heuristic, which is a standard proposal in complex routing problems, and a recent proposal from the heavy traffic literature","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/65535.pdf","fullTextIdentifier":"http:\/\/dro.dur.ac.uk\/5556\/1\/5556.pdf","pdfHashValue":"24a3c9d9c7d3a76293a0591829ff2172cbecad67","publisher":"Cambridge University Press","rawRecordXml":"<record><header><identifier>\n  \n    \n      oai:dro.dur.ac.uk.OAI2:5556<\/identifier><datestamp>\n      2011-11-03T16:16:04Z<\/datestamp><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n    \n      \n        Dynamic routing of customers with general delay costs in a multiserver queuing system.<\/dc:title><dc:creator>\n        Argon,  N. T.<\/dc:creator><dc:creator>\n        Ding,  L.<\/dc:creator><dc:creator>\n        Glazebrook,  K. D.<\/dc:creator><dc:creator>\n        Ziya,  S.<\/dc:creator><dc:description>\n        We consider a network of parallel service stations each modeled as a single-server queue. Each station serves its own dedicated customers as well as generic customers who are routed from a central controller. We suppose that the cost incurred by a customer is an increasing function of her time spent in the system. In a significant advance on most previous work, we do not require waiting costs to be convex, still less linear. With the objective of minimizing the long-run average waiting cost, we develop two heuristic routing policies, one of which is based on dynamic programming policy improvement and the other on Lagrangian relaxation. In developing the latter policy, we show that each station is \u201cindexable\u201d under mild conditions for customers\u2019 waiting costs and also prove some structural results on the admission control problem that naturally arises as a result of the Lagrangian relaxation. We then test the performance of our heuristics in an extensive numerical study and show that the Lagrangian heuristic demonstrates a strong level of performance in a range of traffic conditions. In particular, it clearly outperforms both a greedy heuristic, which is a standard proposal in complex routing problems, and a recent proposal from the heavy traffic literature.<\/dc:description><dc:publisher>\n        Cambridge University Press<\/dc:publisher><dc:source>\n        Probability in the engineering and informational sciences, 2009, Vol.23(2), pp.175-203 [Peer Reviewed Journal]<\/dc:source><dc:date>\n        2009-04-01<\/dc:date><dc:type>\n        Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:identifier>\n        dro:5556<\/dc:identifier><dc:identifier>\n        issn:0269-9648<\/dc:identifier><dc:identifier>\n        issn: 1469-8951<\/dc:identifier><dc:identifier>\n        doi:10.1017\/S0269964809000138<\/dc:identifier><dc:identifier>\n        http:\/\/dro.dur.ac.uk\/5556\/<\/dc:identifier><dc:identifier>\n        http:\/\/dx.doi.org\/10.1017\/S0269964809000138<\/dc:identifier><dc:format>\n        application\/pdf<\/dc:format><dc:identifier>\n        http:\/\/dro.dur.ac.uk\/5556\/1\/5556.pdf<\/dc:identifier><dc:rights>\n        This paper has been published in \"Probability in the engineering and informational sciences\" (23: 2 (2009) 175-203)  http:\/\/journals.cambridge.org\/action\/displayJournal?jid=PES \u00a9 2009 Cambridge University Press.\\ud\n<\/dc:rights><dc:accessRights>\n        info:en-repo\/semantics\/openAccess<\/dc:accessRights><\/oai_dc:dc><\/metadata><\/record>","journals":[{"title":null,"identifiers":["0269-9648","issn:0269-9648","issn: 1469-8951"," 1469-8951"]}],"language":{"code":"en","id":9,"name":"English"},"relations":[],"year":2009,"topics":[],"subject":["Article","PeerReviewed"],"fullText":"Durham Research Online\nDeposited in DRO:\n19 April 2010\nVersion of attached file:\nPublished Version\nPeer-review status of attached file:\nPeer-reviewed\nCitation for published item:\nArgon, N. T. and Ding, L. and Glazebrook, K. D. and Ziya, S. (2009) \u2019Dynamic routing of customers with\ngeneral delay costs in a multiserver queuing system.\u2019, Probability in the engineering and informational\nsciences., 23 (2). pp. 175-203.\nFurther information on publisher\u2019s website:\nhttp:\/\/dx.doi.org\/10.1017\/S0269964809000138\nPublisher\u2019s copyright statement:\nThis paper has been published in \u201dProbability in the engineering and informational sciences\u201d (23: 2 (2009) 175-203)\nhttp:\/\/journals.cambridge.org\/action\/displayJournal?jid=PES 2009 Cambridge University Press.\nAdditional information:\nUse policy\nThe full-text may be used and\/or reproduced, and given to third parties in any format or medium, without prior permission or charge, for\npersonal research or study, educational, or not-for-profit purposes provided that:\n\u2022 a full bibliographic reference is made to the original source\n\u2022 a link is made to the metadata record in DRO\n\u2022 the full-text is not changed in any way\nThe full-text must not be sold in any format or medium without the formal permission of the copyright holders.\nPlease consult the full DRO policy for further details.\nDurham University Library, Stockton Road, Durham DH1 3LY, United Kingdom\nTel : +44 (0)191 334 3042 \u2014 Fax : +44 (0)191 334 2971\nhttp:\/\/dro.dur.ac.uk\n  \n \nDurham Research Online \n \nDeposited in DRO: \n19 April 2010 \n \nPeer-review status: \nPeer-reviewed \n \nPublication status: \nPublished version \n \nCitation for published item: \nArgon, N. T. and Ding, L. and Glazebrook, K. D. and Ziya, S. (2009) 'Dynamic routing of \ncustomers with general delay costs in a multiserver queuing system.', Probability in the \nengineering and informational sciences., 23 (2). pp. 175-203. \n \nFurther information on publisher\u2019s website: \nhttp:\/\/dx.doi.org\/10.1017\/S0269964809000138 \n \nPublisher\u2019s copyright statement: \nCopyright \u00a9 Cambridge University Press 2009. This paper has been published by \nCambridge University Press in \"Probability in the engineering and informational sciences \" \n(23:2 (2009) 175-203) \nhttp:\/\/journals.cambridge.org\/action\/displayAbstract?fromPage=online&aid=3999616 \n \n \n \n \n \n \n \n \nUse policy \n \nThe full-text may be used and\/or reproduced, and given to third parties in any format or medium, without prior \npermission or charge, for personal research or study, educational, or not-for-profit purposes provided that : \n \n\uf0a7 a full bibliographic reference is made to the original source \n\uf0a7 a link is made to the metadata record in DRO \n\uf0a7 the full-text is not changed in any way \n \nThe full-text must not be sold in any format or medium without the formal permission of the copyright holders. \n \nPlease consult the full DRO policy for further details. \n \nDurham University Library, Stockton Road, Durham DH1 3LY, United Kingdom \nTel : +44 (0)191 334 2975 | Fax : +44 (0)191 334 2971 \nhttp:\/\/dro.dur.ac.uk \n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 175 \u2014 #1\n\u0002\n\u0002\n\u0002\n\u0002\nProbability in the Engineering and Informational Sciences, 23, 2009, 175\u2013203. Printed in the U.S.A.\ndoi:10.1017\/S0269964809000138\nDYNAMIC ROUTING OF CUSTOMERS\nWITH GENERAL DELAY COSTS IN A\nMULTISERVER QUEUING SYSTEM\nNILAY TANIK ARGON\nDepartment of Statistics and Operations Research\nUniversity of North Carolina at Chapel Hill\nChapel Hill, NC 27599\nE-mail: nilay@unc.edu\nLI DING\nDurham Business School\nDurham University\nDurham, DH1 3LB, UK\nE-mail: li.ding@durham.ac.uk\nKEVIN D. GLAZEBROOK\nDepartment of Mathematics and Statistics\nLancaster University Management School\nBailrigg, Lancaster LA1 4YX, UK\nE-mail: k.glazebrook@lancaster.ac.uk\nSERHAN ZIYA\nDepartment of Statistics and Operations Research\nUniversity of North Carolina at Chapel Hill\nChapel Hill, NC 27599\nE-mail: ziya@unc.edu\nWe consider a network of parallel service stations each modeled as a single-server\nqueue. Each station serves its own dedicated customers as well as generic customers\nwho are routed from a central controller. We suppose that the cost incurred by a\ncustomer is an increasing function of her time spent in the system. In a significant\nadvance on most previous work, we do not require waiting costs to be convex, still\nless linear. With the objective of minimizing the long-run average waiting cost, we\ndevelop two heuristic routing policies, one of which is based on dynamic program-\nming policy improvement and the other on Lagrangian relaxation. In developing the\n\u00a9 2009 Cambridge University Press 0269-9648\/09 $25.00 175\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 176 \u2014 #2\n\u0002\n\u0002\n\u0002\n\u0002\n176 N.T. Argon et al.\nlatter policy, we show that each station is \u201cindexable\u201d under mild conditions for cus-\ntomers\u2019 waiting costs and also prove some structural results on the admission control\nproblem that naturally arises as a result of the Lagrangian relaxation. We then test\nthe performance of our heuristics in an extensive numerical study and show that the\nLagrangian heuristic demonstrates a strong level of performance in a range of traffic\nconditions. In particular, it clearly outperforms both a greedy heuristic, which is a\nstandard proposal in complex routing problems, and a recent proposal from the heavy\ntraffic literature.\n1. INTRODUCTION\nThis article is concerned with the dynamic routing of incoming customers to one\nof several parallel service stations, each of which has its own queue with an infi-\nnite buffer space. Our model develops those found most frequently in the literature\nin two key respects, both of which are critical for applications. First, in our setups\nthere are two customer types that inhabit the system: dedicated and generic. Ded-\nicated customers must be served at a designated station and routing decisions only\nconcern the remaining generic traffic, which we will assume can be served at any\nstation. Plainly, such a dichotomizing of the traffic is important in settings where\nspecialist skills are required on occasion and are expensive to provide. Note that\nstations are not necessarily separated geographically since customers requiring dif-\nferent skills will naturally form separate queues. Examples include call centers [7]\nand emergency response systems [31]. Such models are also relevant to dynamic rout-\ning within a grid environment [1] and to load balancing in broadcast communication\nnetworks [37].\nBoth customer types incur costs that depend on the time spent waiting in the\nsystem. Our objective is to develop routing policies that will minimize the long-run\naverage total cost or that will come close to doing so. This brings us to the second\nkey feature of our model, namely that we will impose only very minor conditions on\nthe structure for waiting costs. Most previous work that has considered the dynamic\nservice and routing control of queuing systems has imposed requirements that waiting\ncosts be linear in the time spent in system. In some exceptions, this has been general-\nized to an assumption that costs be convex nondecreasing (see, e.g., [14,34,40,45]).Van\nMieghem [45] discussed the limited appeal of linear waiting costs, but we would argue\nthat an assumption of convexity might also be unrealistic in many settings. Convex\nwaiting costs are unable to take an adequate account of such commonplace features\nas delivery time\/service-level guarantees (see, e.g., [10,20,24]) or in an emergency\nresponse setting of the absolute imperative of treating patients with critical trauma\ninjuries quickly (the \u201cgolden hour\u201d rule; see, e.g., [35]).\nState-dependent routing problems have received much attention in the literature.\nThe only general settings in which it has proved possible to elucidate simple structure\nfor optimal policies are those involving homogeneous stations. Here, \u201cShortest Delay\nRouting\u201d (SDR) has been shown to be optimal under a range of conditions. See,\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 177 \u2014 #3\n\u0002\n\u0002\n\u0002\n\u0002\nDELAY COSTS IN A MULTISERVER QUEUING SYSTEM 177\nfor example, Weber [47], Winston [52], Johri [23], Hordijk and Koole [21], Menich\nand Serfozo [33], Sparaggis, Towsley, and Cassandras [39], Towsley, Sparaggis, and\nCassandras [44], and Koole, Sparaggis, and Towsley [26]. However,Whitt [49] showed\nthat SDR might not be optimal even for very simple cases. See Foschini and Salz [12],\nHouck [22], Wein [48], Laws [30], Kelly and Laws [25], Foley and McDonald [11],\nTeh andWard [41], and Tezcan [42] for more on the performance of SDR and analytical\nresults for SDR under various asymptotic regimes. Recently, there also appeared a\nsignificant amount of work on routing problems in which customers wait in a single\nline and are routed to one of the servers as servers become available. The majority\nof this work is motivated by the routing problem in call centers. See, for example,\nVan Mieghem [45], Gans and Zhou [13], Harrison and Zeevi [19], Mandelbaum and\nStolyar [32], Armony and Maglaras [4,5], Wallace and Whitt [46], Armony [3], and\nBassamboo, Harrison, and Zeevi [6].\nIn a recent study, Stolyar [40] considered a similar routing problem in which\ncustomers are routed to one of the multiple parallel stations as they arrive to the\nsystem. Stolyar\u2019s model is more general than ours in that customers belong to different\nclasses and service rates depend on both the customer\u2019s class identity and the station\nserving the customer. However, the author imposed some restrictive conditions on the\nwaiting cost structures. More specifically, he assumed that the waiting cost function\nfor each queue is continuous, strictly increasing, and convex. Stolyar proved that a\nrouting policy, which he calls the MinDrift rule, is asymptotically optimal in the heavy\ntraffic regime under a complete resource pooling condition. In Section 6, we test the\nperformance of the MinDrift rule along with the performance of our heuristics under\nvarious traffic regimes and two different waiting cost functions.\nFor complex routing problems that do not assume station homogeneity, full char-\nacterization of optimal policies based, for example, on direct application of dynamic\nprogramming (DP) methodology is unrealistic. The focus for such systems has mostly\nbeen on the development of effective routing heuristics, many of which are based on\ncalibrations of the constituent service stations that utilize queue length information.\nA simple and standard proposal is to route each generic customer in an individually\noptimal way to whichever station has the smallest expected cost for that individual. In\nSection 6, this is referred to as the greedy heuristic (GH). Two approaches to heuristic\ndevelopment which have proved effective are those based on DP policy improve-\nment (see, e.g., Krishnan and Ott [29], Krishnan [27,28], Whittle [50], Sassen, Tijms,\nand Nobel [38], Ansell, Glazebrook, and Kirkbride [1], Bhulai and Koole [9], and\nBhulai [8]) and on Lagrangian relaxations (see, for example, Ni\u00f1o-Mora [34] and\nWhittle [50,51]). The second of these has appeared highly promising, but its effective\ndeployment has been severely inhibited by a prior requirement to establish a structural\nproperty which Whittle [51] called indexability. While this property appears natural,\nit is little understood and is often extremely difficult to prove. There is a developing\nliterature centered around this very issue in a range of application areas of which rout-\ning is but one (see, e.g., Glazebrook, Ni\u00f1o-Mora, and Ansell [17], Ansell, Glazebrook,\nNi\u00f1o-Mora, and O\u2019Keeffe [2], Glazebrook, Mitchell, andAnsell [16], and Glazebrook,\nKirkbride, and Ouenniche [15]).\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 178 \u2014 #4\n\u0002\n\u0002\n\u0002\n\u0002\n178 N.T. Argon et al.\nA major research achievement of this article is the demonstration that we do indeed\nhave indexability in our very general setting for both costs and traffic. In particular,\nwe are able to show that the cost convexity assumptions of previous work are not\nneeded for the parallel service system considered in this article. Indexability is proved\nin Section 4 and the structure of the resulting routing heuristics is established. To\nprovide a strong comparator for these Lagrangian heuristics, routing policies based\non DP policy improvement are developed in Section 3. In Section 5, the precise\nnature of the station calibrations that our routing heuristics utilize is developed for\nsome nonstandard but practically important cost structures and Section 6 contains\nthe results of an extensive investigation into heuristic performance. Finally, Section 7\nprovides our concluding remarks and directions for future research.\n2. MODEL DESCRIPTION\nWe consider N \u2265 2 parallel service stations, each modeled as a single-server queue.\nFor each queue n, service times of customers are independent and exponentially\ndistributed with a finite mean 1\/\u03bcn. Each queue n has its own \u201cdedicated\u201d customers\nthat arrive according to a Poisson process with rate \u03b7n. These dedicated customers\ncannot be routed to any other station. There are also \u201cgeneric\u201d customers who arrive\nas a Poisson stream with rate \u03bb and who can be served at any station. The routing\ndecisions concern these customers only. Our analysis will still go through if the system\ncontroller can also choose to reject generic customers by paying a fixed charge per\nrejected customer. However, to keep the presentation simpler, we assume that each\narriving customer should be admitted to the system. The routing decision for a generic\ncustomer is made upon her arrival and this decision is irreversible. We assume that each\nqueue operates under a first-come\u2013first served (FCFS) discipline; hence, no distinction\nis made between the dedicated customers and generic customers once admitted to the\nsystem. We introduce the parameters\n\u03b8n = \u03bb + \u03b7n, \u03b2n = \u03b8n\/\u03bcn, \u03b1n = \u03b7n\/\u03bcn,\nand we assume that \u03b1n < 1 for all n and \u03bb +\u2211Nn=1 \u03b7n < \u2211Nn=1 \u03bcn so that there exist\nrouting policies under which the system is stable.\nEach customer incurs a nonnegative cost that is a function of the time the customer\nspends in the system. Write \u03benk for n \u2208 {1, 2, . . . , N} and k \u2208 {1, 2, . . .} for the total\nsystem time for the kth customer admitted to queue n. Also, let Cn(\u00b7) denote the cost\nfunction for queue n; that is, Cn(t) is the cost incurred by a customer who is given\nservice in station n and whose total system time is t. Our objective is to minimize the\nexpected long-run average total cost for this system, which can be written as\nlim sup\nt\u2192\u221e\nE\n[\u2211N\nn=1\n\u2211Zn(t)\nk=1 Cn(\u03benk)\n]\nt\n,\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 179 \u2014 #5\n\u0002\n\u0002\n\u0002\n\u0002\nDELAY COSTS IN A MULTISERVER QUEUING SYSTEM 179\nwhere Zn(t) is the total number of customers who have joined station n by time t. Note\nthat since the above expression uses a convention that the total waiting cost for each\ncustomer is incurred as soon as the customer joins, the numerator is in fact an upper\nbound on the total expected costs accumulated by time t. However, for any policy\nunder which the number in system remains finite almost surely, for any given t, the\ndifference between this upper bound and the actual value of the accumulated costs\nwill be finite with probability 1 so that as time t converges to infinity, the difference\nbetween the actual cost rate and its upper bound converges to zero.\nLet cn(i) denote the expected cost that will be incurred by a customer who joins\nqueue n when there are i customers already waiting (including the customer in service)\nat station n. If we deem that (expected) costs are incurred as the customers join,\nthis problem can be formulated as a semi-Markov decision process. Decision epochs\nare the times when generic customers arrive and the system state can be described\nby an N-dimensional vector x = (x1, x2, . . . , xN ), where xn denotes the number of\ncustomers waiting in station n (including the customer in service). The action space is\nA = {a1, a2, . . . , aN }, where an is the action of sending a customer to queue n. Once\nthe problem is formulated, then it can, in principle, be solved to arbitrary accuracy by\napplying a (finite) truncation of the state space followed by deployment of standard DP\nmethodologies. However, such an approach is computationally intractable for systems\nof realistic size. It is natural that interest should focus on the development of effective\nheuristics for routing. This is the subject of the following two sections.\n3. HEURISTIC 1: SINGLE-STEP POLICY IMPROVEMENT METHOD\nWe develop the single-step policy improvement heuristic by applying a single step\nof the policy improvement algorithm to an optimal static Bernoulli routing policy. A\nstatic Bernoulli routing policy simply routes each incoming customer to queue n with\nsome probability pn independently of other customers and the system state. We will\ndevelop the heuristic in two stages. First, we will determine an optimal static Bernoulli\nrouting policy. This will then be followed by a single DP policy improvement step.\n3.1. An Optimal Static Policy\nA static routing policy routes each incoming generic customer to one of the service\nstations according to some probability distribution p = ( p1, p2, . . . , pN ) indepen-\ndently of other customers and the system state, where pn \u2265 0 for n = 1, 2, . . . , N\nand\n\u2211N\nn=1 pn = 1. Let the set P be defined as\nP =\n{\np : pn \u2265 0, \u03b7n + \u03bbpn < \u03bcn, 1 \u2264 n \u2264 N , and\nN\u2211\nn=1\npn = 1\n}\n.\nWe have P \u0007= \u2205 since we assume that \u03bb +\u2211n \u03b7n < \u2211n \u03bcn.\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 180 \u2014 #6\n\u0002\n\u0002\n\u0002\n\u0002\n180 N.T. Argon et al.\nUnder any static policy p \u2208 P, each service station n is an independent M\/M\/1\nqueue with arrival rate \bn = \u03b7n + \u03bbpn and service rate \u03bcn. Then, using standard\nresults, the expected long-run average cost TC(p), can be written as\nTC(p) =\nN\u2211\nn=1\n(\u03b7n + \u03bbpn)\n\u221e\u2211\ni=0\ncn(i)(1 \u2212 \u03c1n)\u03c1 in, (1)\nwhere \u03c1n = (\u03b7n + \u03bbpn)\/\u03bcn.\nIn order to proceed, we need the following assumption:\nASSUMPTION 3.1: There exists a p \u2208 P such that \u2211Nn=1\u2211\u221ei=0 cn(i)\u03c1 in < \u221e, where\n\u03c1n = (\u03b7n + \u03bbpn)\/\u03bcn.\nAssumption 3.1 is certainly satisfied if the cn(\u00b7)\u2019s are all polynomially bounded.\nIt is easy to see that as p converges to one of the boundary points of P, TC(p)\ndiverges. Furthermore, underAssumption 3.1, there exists a static routing policy p \u2208 P\nsuch that TC(p) is finite. These show that a minimizer for TC(p) is contained in\nP. Hence, we can define an optimal static routing policy as any vector p\u2217 \u2208 P that\nminimizes (1); that is,\np\u2217 \u2208 { p\u00af \u2208 P : TC( p\u00af) \u2264 TC( p) \u2200p \u2208 P}. (2)\n3.2. Policy Improvement Step\nWe now apply a policy improvement step to an optimal static policy. Using the\napproach of Section 3.6 of Tijms [43], it can be easily shown that the policy improve-\nment step yields an index policy. To see that, we first define\n(x, an) to be the difference\nin total expected costs that would be caused by sending the first incoming customer\nto queue n and then following an optimal static policy rather than using an optimal\nstatic policy throughout when the system is in state x. Since each queue operates\nindependently under a static policy, this difference can be expressed as\n\n(x, an) =\nN\u2211\nk=1\np\u2217k [Dn(xn) \u2212 Dk(xk)]\n= Dn(xn) \u2212\nN\u2211\nk=1\np\u2217kDk(xk), (3)\nwhere Dn(i) denotes the additional long-run cost of admitting an extra customer to\nqueue n operating under the optimal static routing policy when i customers are already\npresent. In (3), the summation term does not depend on the action an taken. Therefore,\nthe action an that minimizes \n(x, an) can simply be found by choosing n to minimize\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 181 \u2014 #7\n\u0002\n\u0002\n\u0002\n\u0002\nDELAY COSTS IN A MULTISERVER QUEUING SYSTEM 181\nDn(xn). In other words, the policy improvement step gives us an index policy that\nroutes an arriving generic customer to queue n\u2217 such that\nDn\u2217(xn\u2217) = min\nn\u2208{1,2,...,N}{Dn(xn)}\nwhen the system state is x = (x1, x2, . . . , xN ).\nIn order to describe the policy, we require an expression for Dn(\u00b7). It will simplify\nmatters if we now focus on a single station and drop the identifier n. Let \b = \u03b7 + \u03bbp\u2217\ndenote the total arrival rate to this station (the total arrival rate of dedicated and generic\ncustomers assigned to this queue under the optimal static policy). Define \u03bc to be the\nservice rate, \u03c1 = \b\/\u03bc to be the traffic intensity, where \u03c1 < 1, and c(i) to be the\nexpected cost for a customer who sees i customers upon arrival.\nUtilizing standard arguments that exploit the fact that the system regenerates upon\nevery return to the empty state, it can be shown that\nD(i) = c(i) + (Ki+1 \u2212 gTi+1) \u2212 (Ki \u2212 gTi) for i \u2265 0, (4)\nwhere Ki is the expected total cost incurred until the first time there is no customer\nin the system starting with i customers, Ti is the expected time until the first time the\nstation is empty starting with i customers, and g is the long-run average cost for the\nqueue under the static policy. Note that K0 = 0 and T0 = 0.\nTo make sense of (4), note that Ki \u2212 gTi is the relative cost (or bias) of starting the\nqueue with i customers rather than none. Hence, the difference between the last two\nterms in (4) is simply the difference in total expected long-run costs between starting\nthe queue with i + 1 rather than i customers. However, this difference ignores the\ncost to be incurred by the customer to be admitted. Adding the expected cost for that\ncustomer, c(i), to this difference gives us the additional cost of admitting one more\ncustomer, which is D(i). Now, we can rewrite (4) as follows:\nD(i) = c(i) + Ki+1 \u2212 Ki + g(Ti \u2212 Ti+1) for i \u2265 0. (5)\nTo find an expression for Ki, we first note that\nKi = \b\n\b + \u03bc(c(i) + Ki+1) +\n\u03bc\n\b + \u03bcKi\u22121 for i \u2265 1.\nRearranging terms, we obtain\nki+1 = \u03c1\u22121ki \u2212 c(i),\nwhere ki = Ki \u2212 Ki\u22121. Using this relationship recursively, we get\nki =\nk1 \u2212\u2211i\u22121j=1 c( j)\u03c1 j\n\u03c1 i\u22121\nfor i \u2265 2. (6)\nNote that k1 = K1 \u2212 K0 = K1. Hence, to give an explicit expression for ki, it remains\nto determine K1.\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 182 \u2014 #8\n\u0002\n\u0002\n\u0002\n\u0002\n182 N.T. Argon et al.\nIn order to derive K1, consider the M\/M\/1 queue under study. This queue evolves\nin cycles [i.e., independent and identically distributed (i.i.d.) renewal intervals], which\nstart when a customer arrives to an empty system. Each cycle consists of a busy period\n(there are customers in the system and the server is working) followed by an idle period\n(no customers in the system and therefore the server is idle). Let \u03b3m denote the total\ncost incurred over cycle m. Clearly, \u03b3m is i.i.d. for all m. Let \f = E[\u03b31].\nRecall that g is the long-run average cost for this system. Then using the renewal\nreward theorem and the fact that expected length of a busy period is 1\/(\u03bc \u2212 \b) (see,\ne.g., [18, Sect. 2.11]), we can show the following:\n\f = g\n\b(1 \u2212 \u03c1) .\nThen\nK1 = \f \u2212 c(0)\nsince K1 does not include expected costs for the customer initially in the system.\nThen, using (6) and the fact that g = \b\u2211\u221ej=0 c( j)(1 \u2212 \u03c1)\u03c1 j, after a few algebraic\nmanipulations, we can establish that\nki =\n\u2211\u221e\nj=i c( j)\u03c1 j\n\u03c1 i\u22121\nfor i \u2265 1. (7)\nFinally, since Ti+1 \u2212 Ti is equal to the expected length of a \u201cbusy period,\u201d we\nhave Ti+1 \u2212 Ti = 1\/(\u03bc \u2212 \b). Then, using (7), we deduce that\nD(i) = c(i) + ki+1 \u2212 g 1\n\u03bc \u2212 \b =\n\u221e\u2211\nj=0\n(c( j + i) \u2212 \u03c1c( j))\u03c1 j (8)\nfor i \u2265 0. {An alternative way of obtaining (8) from (4) is by solving for the relative\nvalues Ki \u2212 gTi directly, utilizing the form of solution to classes of second-order\ndifference equations given as Corollary 3.3 in Bhulai [8].}\nThus, we have proved the following theorem.\nTHEOREM 3.1 (Policy Improvement Heuristic): The heuristic dynamic routing policy\nthat is developed by applying a policy improvement step to an optimal static policy\np\u2217 = ( p\u22171, p\u22172, . . . , p\u2217N ) operates as follows: Upon arrival of a generic customer, if the\nsystem state is x = (x1, x2, . . . , xn), then route the customer to any station n\u2217 for which\nDn\u2217(xn\u2217) = min\nk\u2208{1,2,...,N}\n{Dk(xk)},\nwhere\nDk(xk) =\n\u221e\u2211\nj=0\n(ck( j + xk) \u2212 \u03c1kck( j))\u03c1 jk (9)\nand \u03c1k = (\u03b7k + \u03bbp\u2217k)\/\u03bck.\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 183 \u2014 #9\n\u0002\n\u0002\n\u0002\n\u0002\nDELAY COSTS IN A MULTISERVER QUEUING SYSTEM 183\nThe index function (9) is insightful. To see that, we can use (7) and (8) to rewrite\n(9) as\nDk(xk) = ck(xk) + 1\n\u03bck \u2212 \bk\n(\n\bk\n\u03c1\nxk+1\nk\n\u221e\u2211\ni=xk+1\nck(i)\u03c1 ik(1 \u2212 \u03c1k)\n\u2212 \bk\n\u221e\u2211\ni=0\nck(i)\u03c1 ik(1 \u2212 \u03c1k)\n)\n. (10)\nThe first term on the right-hand side of (10), ck(xk), is the expected cost for a customer\nwho will be sent to station k and might be interpreted as the internal cost for the\ncustomer. However, the customer also incurs costs for the other incoming customers\nwho will be routed to the same station and the second term of (10) takes this cost into\naccount. The term 1\/(\u03bck \u2212 \bk) is the expected length of a \u201cbusy period\u201d caused by the\ncustomer under the optimal static policy. In other words, it is the expected time until\nthe first occasion for which the number of customers in the station is xk again. The first\nterm in the parentheses in (10) is the long-run average cost for the station when the\naverage is taken over the times when there are more than xk customers in the station\nunder the optimal static policy, whereas the second term in the parentheses is simply\nthe long-run average cost for station k. Their difference can be interpreted as the per\nunit time cost of keeping the queue above level xk . Multiplying this difference by the\nexpected length of a busy period, we find the total cost that the admitted customer\nimposes on the system. Hence, in a sense, the expression that follows ck(xk) in (10)\nis the external cost of admitting the customer to station k.\n4. HEURISTIC 2: LAGRANGIAN RELAXATION METHOD\nIn order to describe the development of an alternative collection of routing heuristics,\nwe first reexpress the optimization problem of interest as\nCopt = min\nu\u2208U\nN\u2211\nn=1\nC\u02dcn(u), (11)\nwhere U is the class of stationary policies for routing generic arrivals and C\u02dcn(u) is the\ntime-average cost rate incurred at station n under control u \u2208 U .\nWe now follow Whittle\u2019s [51] approach to the analysis of the intractable class\nof restless bandit problems by relaxing the problem in such a way that the (hard)\nconstraint that each generic arrival be routed to exactly one station is replaced by the\n(softer) constraint that generic arrivals be routed to one station on average. Expressed\ndifferently, the class of policies is expanded to those that route each incoming generic\ncustomer to any number of service stations, subject to an overall admission rate of\n\u03bb. Think of this unusual construction as follows: Routing of a generic arrival to a\nstation means that the number of generic customers there is increased by one. Under\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 184 \u2014 #10\n\u0002\n\u0002\n\u0002\n\u0002\n184 N.T. Argon et al.\nour expanded stationary policy class, denoted by U \u2032, a generic arrival may result in an\nincrease by one in the generic customer numbers at any number of stations (from 1 to\nN) or that the arrival can simply be ignored, leaving the system state unchanged. This\nconstruction allows us, for example, to admit multiple copies of generic arrivals when\nthe system is close to empty and to forbid entry to such arrivals when queue lengths\nare large. Within U \u2032 we will enforce the constraint that the time-average number of\nstations to which generic arrivals are routed is one.\nWe write A\u02dcn(u) for the time-average generic admission rate at station n under\npolicy u and R\u02dcn(u) = \u03bb \u2212 A\u02dcn(u) for the corresponding rejection rate and express the\nrelaxation of (11) by\nC\u00afopt = min\nu\u2208U \u2032\nN\u2211\nn=1\nC\u02dcn(u), (12)\nwhere the minimization in (12) is over those u \u2208 U \u2032 satisfying\nN\u2211\nn=1\nR\u02dcn(u) = (N \u2212 1)\u03bb. (13)\nWe also follow Whittle [51] in further relaxing the problem by adopting a Lagrangian\napproach to the incorporation of the constraint (13) into the objective. We thus obtain\na Lagrangian relaxation of (11) expressed by\nC\u0302(W) = min\nu\u2208U \u2032\nN\u2211\nn=1\n{C\u02dcn(u) + WR\u02dcn(u)} \u2212 W(N \u2212 1)\u03bb. (14)\nIn (14), W is a Lagrange multiplier that has an economic interpretation as a charge\nfor rejecting a single generic customer. Plainly, we have\nC\u0302(W) \u2264 C\u00afopt \u2264 Copt for all W \u2208 R.\nWe now observe that the nature of the policy class U \u2032 and the objective together\nimply that (14) admits a stationwise decomposition, expressed by\nC\u0302(W) =\nN\u2211\nn=1\nC\u0302n(W) \u2212 W(N \u2212 1)\u03bb,\nwhere\nC\u0302n(W) = min\nu\u2208Un\n{C\u02dcn(u) + WR\u02dcn(u)}, 1 \u2264 n \u2264 N . (15)\nThe optimization problem in (15) relates to station n alone, with Un the class of\nstationary policies for determining whether to admit (action a) or reject (action r)\neach generic arrival, the goal of optimization being the minimization of an aggregate\ncustomer waiting cost (C\u02dcn(u)) and rejection charges (WR\u02dcn(u)). Call this station n\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 185 \u2014 #11\n\u0002\n\u0002\n\u0002\n\u0002\nDELAY COSTS IN A MULTISERVER QUEUING SYSTEM 185\nproblem Pn(W). The following condition adapts Whittle\u2019s notion of indexability to\nthe current problem. It guarantees that the admission control problem Pn(W) has a\nsolution which is index based. To express the condition simply we require the notation\nan(u) for the set of states (queue lengths) in which the policy u \u2208 Un admits a generic\narrival.\nDEFINITION 4.1 (Station Indexability): Station n is indexable if there exists a family\nof optimal policies for {Pn(W), W \u2208 R+} given by {un,W , W \u2208 R+} such that we have\nthe following:\n(i) an(un,0) = \u2205;\n(ii) an(un,W ) is increasing in W;\n(iii) \u2200i \u2208 N, \u2203W \u2208 R+ such that i \u2208 an(un,W ).\nThe resulting station index W\u02dcn : N \u2192 R+ is given by\nW\u02dcn(i) = inf\nW\u2208R+\n{W ; i \u2208 an(un,W )}. (16)\nThe key requirement in Definition 4.1 is part (ii), which requires that as the\nrejection charge W increases so does the set of queue lengths in which it is optimal\nto admit a generic arrival. This seems natural. The index W\u02dcn(i) may then be thought\nof as a fair charge for rejecting a customer at station n when the queue length is i.\nFurther, if all stations are indexable, it follows that there exists an optimal policy for\nthe Lagrangian relaxation in (14), which, in system state x = (x1, x2, . . . , xN ), will\nadmit an incoming generic job to each station n whose index W\u02dcn(xn) is no greater than\nthe prevailing charge W . It is natural to follow Whittle [51] in proposing as a heuristic\nfor the original problem the policy that routes all incoming generic customers to any\nstation for which this fair charge is the smallest. Formally, when a generic customer\narrives, if the system state is x = (x1, x2, . . . , xN ), then the customer should be routed\nto any station n\u2217 for which\nW\u02dcn\u2217(xn\u2217) = min\nn=1,2,...,N W\u02dcn(xn). (17)\nWe will now proceed to show that, under very mild conditions, the stations are\nindeed indexable in our model. We will also obtain each station\u2019s index in closed\nform. We now focus exclusively on station n and the corresponding optimization\nproblem Pn(W), W \u2208 R+. It will ease notation if, until further notice, we drop the\nstation identifier n from the notation and refer to P(W), W \u2208 R+. In order to deploy\nthe ideas and objects described in Definition 4.1 we need to describe solutions to\nthe P(W), W \u2208 R+. To do that, we develop the sequence {W(i), i \u2208 N} of reals and\nthe corresponding sequence {u(i), i \u2208 N} of monotone admission control policies as\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 186 \u2014 #12\n\u0002\n\u0002\n\u0002\n\u0002\n186 N.T. Argon et al.\nfollows:\nW(i) =\ni\u2211\nj=0\n\u03b2 j\n{\n\u03b1(1 \u2212 \u03b1)\n\u221e\u2211\nk=i+1\nc(k)\u03b1k\u2212i\u22121 + c(i)(1 \u2212 \u03b1) \u2212 c( j)\u03b2\n}\n+ c(i)\u03b2 i+1,\ni \u2208 N, (18)\nand\nu(i) chooses r \u21d0\u21d2 queue length at arrival epoch \u2265 i, i \u2208 N. (19)\nIt will facilitate the analysis if we make the following technical assumption:\nASSUMPTION 4.1: The sequence of expected costs {c(i), i \u2208 N} is nondecreasing such\nthat we have the following:\n(i) c(i) \u2192 \u221e, i \u2192 \u221e;\n(ii) \u2211\u221ei=0 c(i)\u03b1i < \u221e.\nLemma 4.1 is a straightforward consequence of Assumption 4.1.\nLEMMA 4.1: {W(i), i \u2208 N} is an increasing sequence of positive reals such that\nW(i) \u2192 \u221e, i \u2192 \u221e.\nThe following key result describes optimal policies for P(W) for all W \u2265 0. We extend\n(18) by adopting the notational convention W(\u22121) = 0. The proof of Theorem 4.1\nwill utilize the two following lemmas.\nTHEOREM 4.1: Policy u(i) is optimal for P(W) for W \u2208 [W(i \u2212 1), W(i)), i \u2208 N.\nFix W \u2208 [W(i \u2212 1), W(i)) for some i \u2208 N and choose M \u2208 N with M \u2265 i + 1. We\ndevelop a finite state approximation to P(W) by requiring that generic customers be\nrejected at queue lengths M and above. Let P(W , M) be the optimization problem\nthat seeks an optimal control under this constraint. We will establish Theorem 4.1 by\ndemonstrating that u(i) is optimal for P(W , M), W \u2208 [W(i \u2212 1), W(i)), M \u2265 i + 1,\nand then considering the limit M \u2192 \u221e.\nSince the control u(i)operates identically whether applied to P(W)or to P(W , M),\nfor i \u2264 M \u2212 1, we may write g(i) unambiguously for the long-run average cost rate\nand w(i, j) for the bias in state j under the operation of policy u(i), M \u2212 1 \u2265 j \u2265 0.\nIn order to formally define the bias, for fixed T \u2208 R+ define Cu(i)( j, T) to be the total\nexpected cost incurred by arrivals during the time period [0, T ] as the station evolves\nfrom initial queue length j under policy u(i). Then the bias in state j under the operation\nof policy u(i) is given by\nw(i, j) = lim\nT\u2192\u221e{C\nu(i)( j, T) \u2212 Cu(i)(0, T)}\nand is guaranteed to be finite by the ergodicity of the system.\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 187 \u2014 #13\n\u0002\n\u0002\n\u0002\n\u0002\nDELAY COSTS IN A MULTISERVER QUEUING SYSTEM 187\nLEMMA 4.2: Control u(i) is optimal for P(W , M), i \u2264 M \u2212 1 if\nc( j) + w(i, j + 1) \u2212 w(i, j) \u2264 W , 0 \u2264 j \u2264 i \u2212 1\nand c( j) + w(i, j + 1) \u2212 w(i, j) \u2265 W , M \u2212 1 \u2265 j \u2265 i. (20)\nPROOF: Under action a (accept generic customers) in state j \u2265 1, possible state tran-\nsitions are to j + 1 and j \u2212 1 with rates \u03b8 and \u03bc, respectively. The corresponding rates\nunder action r are \u03b7 and \u03bc. There are no service completions in state 0. Adopting\na uniformization with common transition rate \u03b8 + \u03bc, we develop the average cost\noptimality equations for P(W , M) as\ng\u2217 + (\u03b8 + \u03bc)w\u2217( j) = min{\u03b8c( j) + \u03b8w\u2217( j + 1) + \u03bcI( j \u2265 1)w\u2217( j \u2212 1)\n+ \u03bcI( j = 0)w\u2217(0); \u03b7c( j) + W(\u03b8 \u2212 \u03b7) + \u03b7w\u2217( j + 1)\n+ (\u03b8 \u2212 \u03b7)w\u2217( j) + \u03bcI( j \u2265 1)w\u2217( j \u2212 1) + \u03bcI( j = 0)w\u2217(0)}\nfor 0 \u2264 j \u2264 M \u2212 1, (21)\nwhere g\u2217 is the optimal long-run average cost, w\u2217( j) is the bias under an optimal policy\nfor initial state j, and the indicator function I(A) = 1 if A is true and 0 otherwise.\nMoreover, any stationary policy that takes actions to minimize the right-hand side\nof (21) for all 0 \u2264 j \u2264 M \u2212 1 will be average cost optimal. Hence, policy u(i) will be\noptimal for P(W , M) if, for j \u2264 i \u2212 1,\n\u03b8c( j) + \u03b8w(i, j + 1) + \u03bcI( j \u2265 1)w(i, j \u2212 1) + \u03bcI( j = 0)w(i, 0)\n\u2264 \u03b7c( j) + W(\u03b8 \u2212 \u03b7) + \u03b7w(i, j + 1) + (\u03b8 \u2212 \u03b7)w(i, j) + \u03bcI( j \u2265 1)w(i, j \u2212 1)\n+ \u03bcI( j = 0)w(i, 0), (22)\nwith the reverse inequality for M \u2212 1 \u2265 j \u2265 i. The requirements in (20) follow simply.\nThis concludes the proof. \u0002\nIn order to utilize Lemma 4.2, we need the biases w(i, j), 0 \u2264 j \u2264 M \u2212 1. As\nin the calculations in the paragraphs containing (4) and (5) in Section 3, we deploy\nan argument based on the fact that the queue length process under u(i) regenerates\nwhenever the queue empties to assert that\nw(i, j) = K(i, j) \u2212 g(i)T(i, j), 0 \u2264 j \u2264 M \u2212 1. (23)\nIn (23), K(i, j) is the total expected cost incurred (waiting costs and rejection charges)\nas the queue empties (for the first time) under policy u(i) from an initial position in\nwhich j customers are present, and T(i, j) is the corresponding expected time. From\n(23), it is easy to see that w(i, 0) = 0. Evaluations of these quantities are given in\nLemma 4.3.\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 188 \u2014 #14\n\u0002\n\u0002\n\u0002\n\u0002\n188 N.T. Argon et al.\nLEMMA 4.3:\n(i) For i \u2208 Z+, we have the following:\n(a) T(i, j) = \u2211j\u22121k=0{(1 \u2212 \u03b2 i\u22121\u2212k)(\u03bc \u2212 \u03b8)\u22121 + \u03b2 i\u22121\u2212k(\u03bc \u2212 \u03b7)\u22121},\n0 \u2264 j \u2264 i \u2212 1;\n(b) T(i, j) = T(i, i \u2212 1) + ( j \u2212 i + 1)(\u03bc \u2212 \u03b7)\u22121, i \u2264 j \u2264 M \u2212 1;\n(c) K(i, j) = \u2211j\u22121k=0{W(\u03b8 \u2212 \u03b7)\u03b2 i\u2212k(\u03b8(1 \u2212 \u03b1))\u22121 +\u2211i\u22121l=k+1 c(l)\u03b2 l\u2212j+\u2211\u221el=i c(l)\u03b2 i\u2212k\u03b1l\u2212i\u03b7\u03b8\u22121}, 0 \u2264 j \u2264 i \u2212 1;\n(d) K(i, j) = K(i, i \u2212 1) +\u2211j\u2212ik=0{W(\u03b8 \u2212 \u03b7)(\u03bc \u2212 \u03b7)\u22121+\u2211\u221el=k c(l + i)\u03b1l+1\u2212k}, i \u2264 j \u2264 M \u2212 1;\n(e) g(i) = K(i, 1){\u03b8\u22121 + T(i, 1)}\u22121.\n(ii) For the case i = 0, we have the following:\n(a) T(0, j) = j(\u03bc \u2212 \u03b7)\u22121, 0 \u2264 j \u2264 M \u2212 1;\n(b) K(0, j) = jW(\u03b8 \u2212 \u03b7)(\u03bc \u2212 \u03b7)\u22121 +\u2211 jk=1\u2211\u221el=k c(l)\u03b1l\u2212k+1,\n0 \u2264 j \u2264 M \u2212 1;\n(c) g(0) = K(0, 1){\u03b7\u22121 + T(0, 1)}\u22121.\nPROOF: Choose i and j such that M \u2212 1 \u2265 j \u2265 i. Under policy u(i), the time taken for\nthe queue length to drop from j to j \u2212 1 (for the first time) is stochastically identical to\na busy period of an M\/M\/1 queue with arrival and service rates \u03b7 and \u03bc, respectively.\nIt follows that\nT(i, j) \u2212 T(i, j \u2212 1) = (\u03bc \u2212 \u03b7)\u22121, i \u2264 j \u2264 M \u2212 1, (24)\nand Lemma 4.3(i)(b) follows simply. Further, if i \u2212 1 \u2265 j \u2265 1, then by conditioning\non the time of the first transition after time 0, we infer that\n(\u03b8 + \u03bc)T(i, j) = 1 + \u03b8T(i, j + 1) + \u03bcT(i, j \u2212 1), 1 \u2264 j \u2264 i \u2212 1. (25)\nCombining (25) with (24) and the fact that T(i, 0) = 0 yields Lemma 4.3(i)(a) simply.\nNow, choose i and j such that M \u2212 1 \u2265 j \u2265 i and consider the system evolving\nfrom state j at time 0 under u(i), but where service is abandoned whenever the queue\nlength drops to j \u2212 1. Hence, whenever the system enters j \u2212 1, it remains there for an\nexponentially distributed time with mean 1\/\u03b7 before returning to state j. An argument\nbased on the fact that the system regenerates upon every entry into j yields the formula\n{K(i, j) \u2212 K(i, j \u2212 1) + W(\u03b8 \u2212 \u03b7)\u03b7\u22121 + c( j \u2212 1)}\/{(\u03bc \u2212 \u03b7)\u22121 + \u03b7\u22121} (26)\nfor the overall cost rate for the system. However, computation of the steady state\ndistribution of the system state yields\nW(\u03b8 \u2212 \u03b7) +\n\u221e\u2211\nk=j\u22121\n\u03b7c(k)\u03b1k+1\u2212j(1 \u2212 \u03b1) (27)\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 189 \u2014 #15\n\u0002\n\u0002\n\u0002\n\u0002\nDELAY COSTS IN A MULTISERVER QUEUING SYSTEM 189\nas an alternative expression. Equating (26) and (27) yields\nK(i, j) \u2212 K(i, j \u2212 1) = W(\u03b8 \u2212 \u03b7)(\u03bc \u2212 \u03b7)\u22121 +\n\u221e\u2211\nk=j\nc(k)\u03b1k\u2212j+1, i \u2264 j \u2264 M \u2212 1,\n(28)\nfrom which Lemma 4.3(i)(d) is easily deduced. Lemma 4.3(i)(c) then follows via a\nrecursion that modifies (25) suitably.\nLemma 4.3(i)(e) is a trivial consequence of the fact that the system evolving\nunder u(i) regenerates upon every entry into state 1 and that the mean time between\nsuccessive entries is \u03b8\u22121 + T(i, 1). This completes the proof of Lemma 4.3(i). Part\n(ii) is dealt with similarly. \u0002\nWith Lemmas 4.2 and 4.3 in place, we now proceed to the proof of Theorem 4.1.\nPROOF OF THEOREM 4.1: Fix i \u2208 Z+. We will show that\nc( j) + w(i, j + 1) \u2212 w(i, j) \u2265 W , M \u2212 1 \u2265 j \u2265 i, (29)\nwhere W \u2208 [W(i \u2212 1), W(i)). Other cases (i \u2208 Z+, j \u2264 i \u2212 1, and i = 0) are dealt with\nsimilarly.\nFirst, note that from (23), condition (29) becomes\nc( j) + K(i, j + 1) \u2212 K(i, j) \u2212 g(i){T(i, j + 1) \u2212 T(i, j)} \u2265 W , M \u2212 1 \u2265 j \u2265 i.\n(30)\nHowever, direct calculation based on (18) and Lemma 4.3 yields that, for any W \u2208\n[W(i \u2212 1), W(i)), we have that\ng(i) \u2264 g( j), M \u2212 1 \u2265 j \u2265 i. (31)\nHence, since T(i, j + 1) \u2212 T(i, j) \u2265 0, in order to establish (30) it will be enough to\nshow that\nc( j) + K(i, j + 1) \u2212 K(i, j) \u2212 g( j){T(i, j + 1) \u2212 T(i, j)} \u2265 W , M \u2212 1 \u2265 j \u2265 i.\n(32)\nUtilizing Lemma 4.3(i) parts (b), (d), and (e), the requirement in (32) becomes\nc( j) + W(\u03b8 \u2212 \u03b7)(\u03bc \u2212 \u03b7)\u22121 +\n\u221e\u2211\nk=j+1\nc(k)\u03b1k\u2212j \u2212 (1 \u2212 \u03b2){W(\u03b8 \u2212 \u03b7)\u03b2 j(1 \u2212 \u03b1)\u22121\n+\nj\u22121\u2211\nk=0\nc(k)\u03b2k\u03b8 +\n\u221e\u2211\nk=j\nc(k)\u03b1k\u2212j\u03b2 j\u03b7}{\u03bc \u2212 \u03b7 + \u03b2 j(\u03b7 \u2212 \u03b8)}\u22121 \u2265 W . (33)\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 190 \u2014 #16\n\u0002\n\u0002\n\u0002\n\u0002\n190 N.T. Argon et al.\nNow, multiply inequality (33) through by the positive quantity\n\u03d2(\u03b8 , \u03bc, j) =\n{\n{\u03bc \u2212 \u03b7 + \u03b2 j(\u03b7 \u2212 \u03b8)}(\u03bc \u2212 \u03b8)\u22121, \u03bc \u0007= \u03b8\n1 + j(1 \u2212 \u03b1), \u03bc = \u03b8 ,\nto obtain the inequality\nW( j) \u2265 W (34)\nfrom (18). However, inequality (34) is guaranteed by Lemma 4.1 and the fact that\nW \u2208 [W(i \u2212 1), W(i)). Inequality (29) must then follow.\nWe conclude from Lemma 4.2 that u(i) is optimal for P(W , M) for every M \u2265\ni \u2212 1. By consideration of the limit M \u2192 \u221e, it is straightforward to deduce that u(i)\nmust be optimal for P(W). This concludes the proof. \u0002\nWe now restore the station suffix n and require that Assumption 4.1 hold for each\nstation. Hence, for each n there is a corresponding sequence {Wn(i), i \u2208 N} given by\nWn(i) =\ni\u2211\nj=0\n\u03b2 jn\n{\n\u03b1n(1 \u2212 \u03b1n)\n\u221e\u2211\nk=i+1\ncn(k)\u03b1k\u2212i\u22121n + cn(i)(1 \u2212 \u03b1n) \u2212 cn( j)\u03b2n\n}\n+ cn(i)\u03b2 i+1n , i \u2208 N. (35)\nThere is also a sequence {un(i), i \u2208 N} of monotone admission control policies for\nstation n such that\nun(i) chooses r \u21d0\u21d2 queue length at station n at arrival epoch \u2265 i, i \u2208 N.\nFrom Theorem 4.1, the policies {un,W , W \u2208 R+} defined by\nun,W = un(i), W \u2208 [W(i \u2212 1), W(i)), i \u2208 N,\nare such that un,W is optimal for Pn(W), W \u2208 R+, 1 \u2264 n \u2264 N . Further, we deduce\nfrom Lemma 4.1 that the requirements (i)\u2013(iii) of Definition 4.1 are met, with Wn(i)\nthe resulting index for station n when the queue length is i. These conclusions are\nsummarized in Theorem 4.2.\nTHEOREM 4.2 (Indexability, Station Index): If station n satisfies Assumption 4.1, then\nit is indexable with Wn(i), the index for queue length i.\nWe conclude that when all stations satisfyAssumption 4.1, the heuristic described\nin (17), with Wn replacing W\u02dcn for all n, is a natural one for our routing problem. It\nwill be referred to as the Lagrangian relaxation heuristic (LRH) in the remainder of\nthe article.\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 191 \u2014 #17\n\u0002\n\u0002\n\u0002\n\u0002\nDELAY COSTS IN A MULTISERVER QUEUING SYSTEM 191\n5. EXAMPLES\nIn this section, we assume certain structures for the waiting cost function Cn(\u00b7) and give\nexpressions for the routing indices developed in Sections 3 and 4. The first example\nconsiders an increasing non-continuous and non-convex cost function while the second\nexample assumes an increasing, continuous, and strictly convex cost function. In\nSection 6, we test the performance of our heuristics along with two other heuristics\nfrom the literature under the cost structures assumed by these two examples.\n5.1. Example 1: A Noncontinuous and Nonconvex Cost Function\nIn this example, we assume that a customer with a system time of t in station n will\nincur a cost\nCn(t) = hnt + dnI(t \u2265 \u03c4n) + h\u02c6n(t \u2212 \u03c4n)+, (36)\nwhere (y)+ = max(0, y). Hence, for each time unit spent in the queue, the customer\nwill incur hn. Furthermore, should the customer spend more time in the system than\n\u03c4n, then she will incur a one-time cost of dn and subsequently an additional cost of\nh\u02c6n for each additional time unit above \u03c4n. Such cost functions as in (36) are relevant\nin many settings, including service systems, where customers are given delivery time\nguarantees, and in emergency response settings, where there is typically a time window\n(e.g., \u201cgolden hour rule\u201d; see, e.g., [35]) for an acceptable level of response time for\ncritically injured patients.\nFor the cost function given in (36), it can be shown that\ncn(i)= hn(i + 1)\n\u03bcn\n+dn\ni\u2211\nj=0\n(\u03bcn\u03c4n)\nj\nj! e\n\u2212\u03bcn\u03c4n + h\u02c6n\ni\u2211\nj=0\n(i + 1 \u2212 j)\n(\n1\n\u03bcn\n)\n(\u03bcn\u03c4n)\nj\nj! e\n\u2212\u03bcn\u03c4n\n.\nThen it is easy to see that this cost function trivially satisfies Assumptions 3.1 and 4.1.\nMoreover, after some tedious but straightforward algebraic manipulations, the policy\nimprovement index (8) can be shown to be\nDn(i)= hn(i + 1)\n\u03bcn \u2212\bn +\ndne\u2212\u03bcn\u03c4n\n1 \u2212 \u03c1n\n\u239b\u239de\bn\u03c4n(1 \u2212 \u03c1 i+1n\n\u03c1 in\n)\n+\ni\u2211\nj=0\n(\u03bcn\u03c4n)\nj\nj! \u2212\n1\n\u03c1 in\ni\u2211\nj=0\n(\bn\u03c4n)\nj\nj!\n\u239e\u23a0\n+ h\u02c6ne\n\u2212\u03bcn\u03c4n\n(1 \u2212 \u03c1n)2\u03bcn\n\u239b\u239de\bn\u03c4n(1 \u2212 \u03c1 i+1n )\n\u03c1 in\n+ (1 \u2212 \u03c1n)(\u03bcn\u03c4n)\ni+1\ni!\n+ ((1\u2212\u03c1n)(i \u2212\u03bcn\u03c4n)+ 1)\ni\u2211\nj=0\n(\u03bcn\u03c4n)\nj\nj! \u2212\n1\n\u03c1\nj\nn\ni\u2211\nj=0\n(\bn\u03c4n)\nj\nj!\n\u239e\u23a0\n.\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 192 \u2014 #18\n\u0002\n\u0002\n\u0002\n\u0002\n192 N.T. Argon et al.\nSimilarly, the Lagrangian relaxation index (35) can be shown to have the form\nWn(i) = (1 \u2212 \u03b2\ni+1\nn )(1 \u2212 \u03b1n)Rn(i)\n(1 \u2212 \u03b2n)\u03b1in\n\u2212 Sn(i \u2212 1),\nwhere\nRn(i) = hn\n\u03bcn\n(\n(i + 1)\u03b1in \u2212 i\u03b1i+1\n(1 \u2212 \u03b1n)2\n)\n+ dne\n\u2212\u03bcn\u03c4n\n1 \u2212 \u03b1n\n\u239b\u239de\u03b7n\u03c4n + \u03b1in i\u22121\u2211\nj=0\n(\u03bcn\u03c4n)\nj\nj! \u2212\ni\u22121\u2211\nj=0\n(\u03b7n\u03c4n)\nj\nj!\n\u239e\u23a0\n+ h\u02c6ne\n\u2212\u03bcn\u03c4n\n\u03bcn(1 \u2212 \u03b1n)\n\u239b\u239d\u03b1in(i + (1\/(1 \u2212 \u03b1n)) \u2212 \u03bcn\u03c4n) i\u22121\u2211\nj=0\n(\u03bcn\u03c4n)\nj\nj!\n\u2212 1\n1 \u2212 \u03b1n\ni\u22121\u2211\nj=0\n(\u03b7n\u03c4n)\nj\nj! +\n(\u03b7n\u03c4n)\ni\n(i \u2212 1)! +\ne\u03b7n\u03c4n\n1 \u2212 \u03b1n\n\u239e\u23a0\nand\nSn(i) = hn\u03b2n\n\u03bcn(1 \u2212 \u03b2n)2\n(\n1 \u2212 (i + 2)\u03b2 i+1n + (i + 1)\u03b2 i+2n\n)\n+ dne\n\u2212\u03bcn\u03c4n\n1 \u2212 \u03b2n\n(\n\u03b2n\ni\u2211\nj=0\n(\u03b8n\u03c4n)\nj\nj! \u2212 \u03b2\ni+2\nn\ni\u2211\nj=0\n(\u03bcn\u03c4n)\nj\nj!\n)\n+ h\u02c6n\u03b2ne\n\u2212\u03bcn\u03c4n\n\u03bcn(1 \u2212 \u03b2n)2\n\u239b\u239d i\u2211\nj=0\n(\u03b8n\u03c4n)\nj\nj! + \u03b2\ni\nn\n(\n(i + 1)\u03b22n \u2212 (i + 2)\u03b2n\n) i\u22121\u2211\nj=0\n(\u03bcn\u03c4n)\nj\nj!\n+ (\u03b8n\u03c4n)\ni\ni!\n(\n(i + 1)\u03b22n \u2212 (i + 2)\u03b2n\n)\u239e\u23a0\n.\n5.2. Example 2: A Continuous and Convex Cost Function\nFor this example, we consider a cost function with structural properties that are quite\ndifferent from those of the cost function of Example 1. To be more precise, we assume\nthat a customer with a system time of t in station n will incur a cost\nCn(t) = t2. (37)\nNote that this cost function is continuous, strictly increasing, and convex. Hence, it\nsatisfies the conditions that are needed for asymptotic optimality of Stolyar\u2019s MinDrift\nrule [40].\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 193 \u2014 #19\n\u0002\n\u0002\n\u0002\n\u0002\nDELAY COSTS IN A MULTISERVER QUEUING SYSTEM 193\nFor this cost function, it can be easily shown that\ncn(i) = (i + 1)(i + 2)\n\u03bc2n\nand, hence, Assumptions 3.1 and 4.1 are trivially satisfied. After some algebraic\nmanipulations, the policy improvement index (8) can be shown to be\nDn(i) = (i + 1)(i(1 \u2212 \u03c1n) + 2)\n\u03bc2n(1 \u2212 \u03c1n)2\n.\nOn the other hand, the Lagrangian relaxation index (35) can be shown to have the form\nWn(i) = (1 \u2212 \u03b2\ni+1\nn )(1 \u2212 \u03b1n)\n(1 \u2212 \u03b2n)\n(\nTn(i)\n\u03b1in\n+ cn(i)\n)\n\u2212\ni\u22121\u2211\nj=0\n\u03b2 j+1n cn( j),\nwhere\nTn(i) =\n(i + 3)(i + 2)\u03b1i+1n (1 \u2212 \u03b1n)2 + 2\u03b1i+2n\n(\n(i + 3) \u2212 (i + 2)\u03b1n\n)\n(1 \u2212 \u03b1n)3\u03bc2n\n.\n6. NUMERICAL RESULTS\nThis section reports our findings from a numerical study that we conducted to assess the\nperformance of the heuristics developed in Sections 3\u20135 and to observe the effects of\nsome system parameters on the performance of these heuristics. In our numerical study,\nwe consider a system with two service stations (N = 2) and assume cost functions in\nthe form of either (36) or (37). For such systems, it is possible to determine optimal\nrouting policies numerically by dynamic programming, thus permitting a complete\nevaluation of the proposed heuristics.\nOur preliminary numerical results suggested that the performance of the heuris-\ntics clearly depended on the system load, (\u03bb + \u03b71 + \u03b72)\/(\u03bc1 + \u03bc2). Therefore, we\ncompared the performance of the heuristics under three different traffic levels:\n(i) Light traffic: system load ranges from 0 to 0.6\n(ii) Medium traffic: system load ranges from 0.6 to 0.8\n(iii) Heavy traffic: system load ranges from 0.8 to 1.0\nUnder each setting, we generated scenarios by choosing \u03b71, \u03b72, and \u03bb uniformly over\nthe interval [0, 1] and \u03bc1 and \u03bc2 over the interval [0, 1.5] and discarding the cases with\nsystem loads that did not fall into the desired range. For each scenario, we computed\nthe performance of the optimal policy, the policy improvement heuristic (PIH), the\nLagrangian relaxation heuristic (LRH), the MinDrift heuristic (MDH), the greedy\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 194 \u2014 #20\n\u0002\n\u0002\n\u0002\n\u0002\n194 N.T. Argon et al.\nheuristic (GH), and the optimal static routing heuristic (SH). Sections 3\u20135 provide\ndetailed descriptions of how PIH and LRH work. We next explain the MDH, GH, and\nSH policies.\nThe MDH, which is due to Stolyar [40], is an index heuristic similar to PIH and\nLRH. It simply routes each incoming customer to station n for which the corresponding\nindex Mn(i) is the smallest when there are i customers at station n. For Example 1,\nthe MinDrift index (for station n when there are i customers) is given by\nMn(i) =\n{\nhn\/\u03bcn, i\/\u03bcn < \u03c4n\n(hn + h\u02c6n)\/\u03bcn, i\/\u03bcn \u2265 \u03c4n,\nwhereas the MinDrift index for Example 2 is\nMn(i) = i\/\u03bc2n.\nStolyar [40] proved that the MinDrift heuristic is asymptotically optimal under heavy\ntraffic for strictly convex and continuous waiting cost functions. Therefore, there is\nno reason to expect that this rule will perform well for Example 1, for which the\ncost function is neither continuous nor convex. However, both conditions are satisfied\nin Example 2, and consequently, stronger performance of MDH is expected there,\nespecially so in heavy traffic instances.\nThe GH is the standard proposal for routing problems. It routes each incoming\ngeneric customer to the queue for which the expected cost for that particular customer\nis the smallest. (Note that GH is equivalent to SDR when cost parameters are the\nsame for all stations.) Finally, the optimal static routing heuristic is the optimal policy\namong all static routing policies (see (2)) and is the input policy for the second stage\nof PIH. Note that this heuristic is guaranteed to be inferior to the policy improvement\nheuristic. However, we still report the performance of SH in order to quantify the\nimprovements gained by state-dependent policies over this static policy.\nThe remainder of this section is organized as follows. In Section 6.1, we compare\nthe performance of our heuristic policies LRH and PIH with the performances of\nMDH, SH, and GH. In Section 6.2, we discuss the effects of two system parameters\non the performance of the heuristics under consideration.\n6.1. Comparison of the Heuristic Policies\nIn this subsection, we compare the performance of the heuristics for Examples 1 and 2,\nwhich are described in Sections 5.1 and 5.2, respectively.\n6.1.1. Performance of the heuristics: Example 1. In this part of the\nstudy, we assumed a cost function in the form of (36) with the choices h1 = h2 =\nh\u02c61 = h\u02c62 = 1, d1 = d2 = 8, and \u03c41 = \u03c42 = 5. For each traffic setting, we randomly\ngenerated 5000 scenarios, and under each scenario, for each heuristic, we computed\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 195 \u2014 #21\n\u0002\n\u0002\n\u0002\n\u0002\nDELAY COSTS IN A MULTISERVER QUEUING SYSTEM 195\nthe percentage deviation of the performance from that of the optimal policy and con-\nstructed a 99% confidence interval on the percentage deviation. For each heuristic, we\nalso determined the median, the lower and upper quartiles for the percentage devia-\ntion of each policy from the optimal cost, and the number of occasions that heuristic\nprovided the smallest cost among all heuristics considered. We report our findings in\nTables 1, 2, and 3 under light, medium, and heavy traffic settings, respectively. Note\nthat the last columns in the tables add up to a value larger than 5000 due to ties among\nheuristics.\nAlthough LRH, PIH, and GH all perform reasonably well, the numerical results\npresented in Tables 1\u20133 demonstrate the superior performance of LRH under each\ntraffic setting. The most important aspect of these tables is the clear evidence it provides\nthat LRH outperforms the standard proposal GH for the problems studied. One can\nTABLE 1. Performance of the Heuristics for Example 1 Under Light Traffic\nLower Upper 99% C.I. Best\nHeuristic Quartile Median Quartile for the Mean Heuristic in\nLRH 0.000 0.000 0.011 0.034 \u00b1 0.005 4030 scenarios\nPIH 0.000 0.014 0.557 0.668 \u00b1 0.053 1927 scenarios\nMDH 0.420 8.747 42.754 31.108 \u00b1 1.705 223 scenarios\nGH 0.018 0.327 1.597 1.224 \u00b1 0.070 932 scenarios\nSH 0.369 5.338 23.877 13.761 \u00b1 0.628 0 scenarios\nNote: Numbers except those in the last column are for percentage deviation from the optimal.\nTABLE 2. Performance of the Heuristics for Example 1 Under Medium Traffic\nLower Upper 99% C.I. Best\nHeuristic Quartile Median Quartile for the Mean Heuristic in\nLRH 0.015 0.086 0.315 0.603 \u00b1 0.421 3543 scenarios\nPIH 0.054 0.712 2.782 2.148 \u00b1 0.693 1213 scenarios\nMDH 3.513 22.638 64.147 43.790 \u00b1 2.028 73 scenarios\nGH 0.416 1.653 4.018 2.685 \u00b1 0.108 555 scenarios\nSH 3.669 25.618 50.253 28.816 \u00b1 0.900 0 scenarios\nNote: Numbers except those in the last column are for percentage deviation from the optimal.\nTABLE 3. Performance of the Heuristics for Example 1 Under Heavy Traffic\nLower Upper 99% C.I. Best\nHeuristic Quartile Median Quartile for the Mean Heuristic in\nLRH 0.735 1.728 4.799 4.230 \u00b1 0.418 3851 scenarios\nPIH 2.433 6.130 9.912 7.880 \u00b1 0.361 720 scenarios\nMDH 5.695 14.040 32.616 25.603 \u00b1 1.235 414 scenarios\nGH 2.450 4.898 8.361 5.782 \u00b1 0.150 528 scenarios\nSH 13.885 29.998 43.946 29.514 \u00b1 0.689 0 scenarios\nNote: Numbers except those in the last column are for percentage deviation from the optimal.\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 196 \u2014 #22\n\u0002\n\u0002\n\u0002\n\u0002\n196 N.T. Argon et al.\nalso observe from these tables that the performance of all heuristics except for MDH\ndeteriorates as the system load increases. Note, however, that the mean performance\nof LRH is around 4.23% above optimal, with median 1.728% even under heavy traffic.\nAlso, comparison of the median and quartiles with the mean performance indicates\nthat the distribution of the performances are skewed to the right for all the heuristics.\nThe performance of MDH is clearly poor; however, this is not surprising since MDH\nwas developed under assumptions that are not satisfied for the cost function considered\nfor this example. One observation is that MDH seems to provide its best performance\nunder heavy traffic and its worst performance under medium traffic.\nAlthough LRH clearly seems to be the best heuristic, comparison of PIH and GH\nis more complicated. PIH seems to be the heuristic that is affected most by the increase\nin the traffic. Its performance gets significantly worse as we move from medium traffic\nto heavy traffic. Under heavy traffic, the mean performance of GH is better than that\nof PIH. However, PIH is the best heuristic in more scenarios than is GH. At other\ntraffic levels, PIH outperforms GH in all aspects.\nFinally, Tables 1\u20133 clearly show that state-dependent policies provide substantial\nimprovements over the \u201cbest\u201d static policy, SH. However, these improvements obvi-\nously come at the expense of keeping the system state information at all times (or at\nleast observing the queues when routing the generic customers).\n6.1.2. Performance of the heuristics: Example 2. In this subsection,\nwe assume that the waiting cost function is in the form of (37). Note that this cost\nfunction satisfies all of the assumptions needed for the asymptotic optimality of MDH\n(see Stolyar [40]) and, therefore, MDH is expected to perform well, at least under\nheavy traffic.\nFor each traffic setting, we randomly generated 5000 scenarios and computed\nthe performance of each heuristic under each scenario. Tables 4, 5, and 6 present our\nfindings under light, medium, and heavy traffic, respectively. Similar to our results\nfor Example 1, LRH has the best performance among all of the heuristics considered\nunder this convex and continuous function. Except for MDH, the performance of\nall the heuristics worsen as the traffic intensity increases. The effect of the traffic\nload on MDH is not clear, since one would reach different conclusions depending on\nTABLE 4. Performance of the Heuristics for Example 2 Under Light Traffic\nLower Upper 99% C.I. Best\nHeuristic Quartile Median Quartile for the Mean Heuristic in\nLRH 0.000 0.000 0.011 0.046 \u00b1 0.007 4038 scenarios\nPIH 0.000 0.017 0.706 0.915 \u00b1 0.074 1821 scenarios\nMDH 0.698 3.048 7.809 8.116 \u00b1 0.874 192 scenarios\nGH 0.028 0.505 2.260 1.700 \u00b1 0.095 836 scenarios\nSH 0.394 6.543 35.792 20.142 \u00b1 0.943 0 scenarios\nNote: Numbers except those in the last column are for percentage deviation from the optimal.\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 197 \u2014 #23\n\u0002\n\u0002\n\u0002\n\u0002\nDELAY COSTS IN A MULTISERVER QUEUING SYSTEM 197\nTABLE 5. Performance of the Heuristics for Example 2 Under Medium Traffic\nLower Upper 99% C.I. Best\nHeuristic Quartile Median Quartile for the Mean Heuristic in\nLRH 0.017 0.130 0.442 0.339 \u00b1 0.018 3660 scenarios\nPIH 0.051 1.000 4.094 2.827 \u00b1 0.284 1134 scenarios\nMDH 1.770 4.503 8.599 6.408 \u00b1 0.360 149 scenarios\nGH 0.679 2.525 5.778 3.832 \u00b1 0.145 472 scenarios\nSH 3.735 39.943 83.889 47.099 \u00b1 1.567 0 scenarios\nNote: Numbers except those in the last column are for percentage deviation from the optimal.\nTABLE 6. Performance of the Heuristics for Example 2 Under Heavy Traffic\nLower Upper 99% C.I. Best\nHeuristic Quartile Median Quartile for the Mean Heuristic in\nLRH 1.302 2.588 6.597 6.004 \u00b1 0.328 2849 scenarios\nPIH 3.315 9.248 15.469 18.871 \u00b1 1.845 982 scenarios\nMDH 2.634 5.388 10.173 7.276 \u00b1 0.225 1193 scenarios\nGH 4.016 7.131 11.053 7.951 \u00b1 0.188 224 scenarios\nSH 22.539 58.985 92.626 61.173 \u00b1 1.759 0 scenarios\nNote: Numbers except those in the last column are for percentage deviation from the optimal.\nwhether the mean and the confidence interval or median and the quartiles are chosen\nto be the deciding performance measure. However, if compared with the performance\nof all the other heuristics at all traffic levels, one can observe that, as expected, the\nrelative performance of MDH is the best when under heavy traffic. However, LRH\nstill seems to perform slightly better than MDH even under heavy traffic (as defined\nin this article). PIH performs relatively well under light and medium traffic, but under\nheavy traffic, its overall performance is poor. On the other hand, GH is not as good as\nPIH under light and medium traffic, but its performance under heavy traffic is much\nbetter than that of PIH on the average. However, even under heavy traffic, PIH is the\nbest heuristic in more scenarios than GH is. Finally, as in Example 1, the performance\nof SH is clearly poor, demonstrating the superiority of state-dependent policies.\n6.2. Effects of System Parameters on the Performance\nof the Heuristics\nIn this subsection, we focus our attention on Example 1, assuming a cost function\nin the form of (36) with parameter values set as in Section 6.1.1, and investigate the\neffects of two system parameters on the performances of LRH, PIH, and GH, the three\nbest heuristics for this example.\n\u2022 Effects of dedicated load heterogeneity: In the system under consideration,\neach service station has its own dedicated customers and therefore has its\nown capacity that can be allocated to the service of generic customers. If\nthese residual capacities for the two stations are close to each other, we say\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 198 \u2014 #24\n\u0002\n\u0002\n\u0002\n\u0002\n198 N.T. Argon et al.\nthat the dedicated loads are homogeneous; otherwise we say that they are\nheterogeneous. To observe the effects of the heterogeneity of the stations on\nthe performance of the heuristics, we first define a heterogeneity index, \u000f, as\n\u000f =\n\u2223\u2223\u2223\u22231 \u2212 \u03b71\/\u03bc1\u03b72\/\u03bc2\n\u2223\u2223\u2223\u2223 .\nAfter computing the heterogeneity index for each of the 5000 scenarios, we\nordered all scenarios according to this index from the smallest to the largest.\nThen we computed the moving average (of order 2000) of the mean perfor-\nmance across the 5000 scenarios (see Fig. 1 for plots of the moving averages).\nIn all cases, under each traffic setting, we observed a worsening performance\nof the heuristics with an increase in \u000f. Hence, the more balanced the system\nload is across the two stations, the better is the average performance of all the\nheuristics. However, the deterioration in performance is more significant for\nGH, less so for LRH, and even less so for PIH. Furthermore, for LRH and\nPIH, under heavy traffic, the average performance does not seem to change\ndrastically as we go from very low levels of heterogeneity to mid levels,\nFIGURE 1. Moving average plots of percentage deviations of heuristics from the\noptimal with respect to the number of scenarios that are ordered according to the\nincreasing heterogeneity index of dedicated load \u000f.\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 199 \u2014 #25\n\u0002\n\u0002\n\u0002\n\u0002\nDELAY COSTS IN A MULTISERVER QUEUING SYSTEM 199\nwhereas the performance starts to deteriorate significantly as we go from mid\nlevels to high levels. On the other hand, the performance of GH worsens at a\nseemingly constant level as we go from very low levels of heterogeneity to\nvery high levels.\n\u2022 Effects of dedicated arrival rates: We have also studied the numerical results\nto identify cases in which the heuristic algorithms performed poorly. We\nobserved that the dedicated arrival rates have an interesting effect on the\nperformance of the heuristics. To observe this effect, we ordered the scenarios\nwith respect to their total dedicated arrival rates, \u03b71 + \u03b72, and carried out an\nanalysis similar to that for the load heterogeneity (see Fig. 2).We observed that\nthe smaller the total dedicated arrival rate, the worse is the performance of the\nLRH on the average. (Note, however, that LRH still has the best performance\namong all the heuristics even over the region where its performance is poor.)\nIts performance is significantly worse for very low levels of the dedicated\narrival rate. This is surprising since lower dedicated arrival rates indicate\nlow traffic intensity, which overall seems to have a positive impact on the\nperformance of all heuristics.\nFIGURE 2. Moving average plots of percentage deviations of heuristics from the\noptimal with respect to the number of scenarios that are ordered according to the\nincreasing total dedicated arrival rates \u03b71 + \u03b72.\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 200 \u2014 #26\n\u0002\n\u0002\n\u0002\n\u0002\n200 N.T. Argon et al.\nWe observed a similar effect on the performance of PIH although the\neffect does not seem to be as strong as for LRH. On the other hand, the effect\non GH seems to depend on the total traffic load on the system. Under medium\ntraffic, very low and very high levels of dedicated traffic rate have a positive\neffect on the performance, whereas moderate levels yield worse performance\non the average. Under light and heavy traffic, the performance worsens as the\ntotal dedicated arrival rate increases.\n7. CONCLUSIONS\nFor realistically sized routing problems that can be modeled as Markov decision\nproblems, standard solution approaches based on direct application of stochastic DP\nare not practical. The conventional proposal is to adopt a greedy heuristic (GH),\nwhich is sometimes called an individually optimal policy for routing. In the context of\na general model for waiting costs that accommodates dedicated traffic at each station,\nwe developed two alternative heuristics, based respectively on DP policy improvement\n(PIH) and Lagrangian relaxation (LRH). The theoretical challenge with regard to the\nlatter heuristic concerns the demonstration that station indexability is available at this\nlevel of generality. A numerical study makes clear that LRH performs very closely\nto the optimal policy and offers a considerable improvement over GH at all traffic\nlevels. It also performs better than the MinDrift heuristic (MDH), which is known to\nbe asymptotically optimal under certain conditions.\nIn this article, we considered scenarios in which the waiting cost for a customer\npossibly depends on the server. Although there are various examples where this gen-\neralization is relevant (e.g., in the case of the routing problem that a manufacturer\nfaces in outsourcing warranty repairs to different vendors that charge different costs;\nsee [36]), an interesting extension would be to also allow waiting cost for a customer\nto depend on the customer\u2019s type: dedicated or generic. In fact, PIH as described in\nthis model can easily be extended accordingly. However, this is not the case for LRH\nsince establishing indexability appears to be a significant challenge when waiting costs\ndepend on the customer type. Another direction for future research would be to con-\nsider multiple types of generic customers each differing in their waiting costs. Such a\ngeneralization would be of particular interest to call centers that serve a heterogeneous\ngroup of users and seek ways of providing a better service for their more \u201cvaluable\u201d\ncustomers. It would also be of interest in health care operations, for which patients have\nsignificantly different waiting cost structures depending on their health conditions.\nAcknowledgments\nThe research of the first author was supported by the National Science Foundation under grant CMMI-\n0715020. The second author acknowledges support given by Edinburgh University and the British Council\nduring her doctoral studies. The third author acknowledges EPSRC support made available through grant\nGR\/S45188\/01. The research of the fourth author was supported by the National Science Foundation under\ngrant CMMI-0620736.\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 201 \u2014 #27\n\u0002\n\u0002\n\u0002\n\u0002\nDELAY COSTS IN A MULTISERVER QUEUING SYSTEM 201\nReferences\n1. Ansell, P.S., Glazebrook, K.D. & Kirkbride, C. (2003). Generalised \u201cjoin the shortest queue\u201d policies\nfor the dynamic routing of jobs to multi-class queues. Journal of the Operational Research Society 54:\n379\u2013389.\n2. Ansell, P.S., Glazebrook, K.D., Ni\u00f1o-Mora, J. & O\u2019Keeffe, M. (2003). Whittle\u2019s index policy for a\nmulti-class queueing system with convex holding costs. Mathematical Methods in Operations Research\n57: 21\u201339.\n3. Armony, M. (2005). Dynamic routing in large-scale service systems with heterogeneous servers.\nQueueing Systems 51: 287\u2013329.\n4. Armony, M. & Maglaras, C. (2004). On customer contact centers with a call-back option: Customer\ndecisions, routing rules, and system design. Operations Research 52: 271\u2013292.\n5. Armony, M. & Maglaras, C. (2004). Contact centers with a call-back option and real time delay\ninformation. Operations Research 52: 527\u2013545.\n6. Bassamboo, A., Harrison, J.M. & Zeevi, A. (2005). Dynamic routing and admission control in high-\nvolume service systems: Asymptotic analysis via multi-scale fluid limits. Queueing Systems 51:\n249\u2013285.\n7. Becker, K.J., Gaver, D.P., Glazebrook, K.D., Jacobs, P.A. & Lawphongpanich, S. (2000). Allocation\nof tasks to specialised processors: a planning approach. European Journal of Operational Research\n126: 80\u201388.\n8. Bhulai, S. (2004). Dynamic routing policies for multi-skill call centers. Technical report 2004-11, Vrije\nUniversity, Amsterdam.\n9. Bhulai, S. & Koole, G. (2003). On the structure of value functions for threshold policies in queueing\nmodels. Journal of Applied Probability 40: 613\u2013622.\n10. Charnsirisakskul, K., Griffin, P.M. & Keskinocak, P. (2004). Order selection and scheduling with\nleadtime flexibility. IIE Transactions 36: 697\u2013707.\n11. Foley, R.D. & McDonald, D.R. (2001). Join the shortest queue: stability and exact asymptotics. Annals\nof Applied Probability 11: 569\u2013607.\n12. Foschini, G.J. & Salz, J. (1978). A basic dynamic routing problem and diffusion. IEEE Transactions\non Communications 26: 320\u2013327.\n13. Gans, N. & Zhou, Y.P. (2003). A call routing problem with service level constraints. Operations\nResearch 51: 255\u2013271.\n14. Glazebrook, K.D., Lumley, R.R. & Ansell, P.S. (2003). Index heuristics for multiclass M\/G\/1 systems\nwith nonpreemptive service and convex holding costs. Queueing Systems 45: 81\u2013111.\n15. Glazebrook, K.D., Kirkbride, C. & Ouenniche, J. (2009). Index policies for the admission control and\nrouting of impatient customers to heterogeneous service stations. Operations Research. In press.\n16. Glazebrook, K.D., Mitchell, H.M. & Ansell, P.S. (2005). Index policies for the maintenance of a\ncollection of machines by a set of repairmen. European Journal of Operational Research 165: 267\u2013284.\n17. Glazebrook, K.D., Ni\u00f1o-Mora, J. & Ansell, P.S. (2002). Index policies for a class of discounted restless\nbandits. Advances in Applied Probability 34: 754\u2013774.\n18. Gross, D. & Harris, C.M. (1998). Fundamentals of queueing theory. New York: Wiley.\n19. Harrison, J.M. & Zeevi, A. (2004). Dynamic scheduling of a multi-class queue in the Halfin\u2013Whitt\nheavy traffic regime. Operations Research 52: 243\u2013257.\n20. Hopp, W.J. & Sturgis, M.L.R. (2000). Quoting manufacturing due dates subject to a service level\nconstraint. IIE Transactions 32: 771\u2013784.\n21. Hordijk, A. & Koole, G. (1990). On the optimality of the generalized shortest queue policy. Probability\nin the Engineering and Information Sciences 4: 477\u2013487.\n22. Houck, D.J. (1987). Comparison of policies for routing customers to parallel queueing systems.\nOperations Research 35: 306\u2013310.\n23. Johri, P.K. (1989). Optimality of the shortest line discipline with state-dependent service rates.\nEuropean Journal of Operational Research 41: 157\u2013161.\n24. Jones, D. (2004). Some hospital ERs begin guaranteeing quick service. USA Today, December 3.\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 202 \u2014 #28\n\u0002\n\u0002\n\u0002\n\u0002\n202 N.T. Argon et al.\n25. Kelly, F.P. & Laws, C.N. (1993). Dynamic routing in open queueing networks: Brownian models, cut\nconstraints and resource pooling. Queueing Systems 13: 47\u201386.\n26. Koole, G., Sparaggis, P.D. & Towsley, D. (1999). Minimizing response times and queue lengths in\nsystems of parallel queues. Journal of Applied Probability 36: 1185\u20131193.\n27. Krishnan, K.R. (1987). Joining the right queue: A Markov decision rule. In Proceedings of the 26th\nIEEE Conference on Decision Control, pp. 1863\u20131868.\n28. Krishnan, K.R. (1990). Joining the right queue: A state-dependent decision rule. IEEE Transactions\non Automatic Control 35: 104\u2013108.\n29. Krishnan, K.R. & Ott, T.J. (1986). State-dependent routing for telephone traffic: Theory and results.\nIn Proceedings of the 25th IEEE Conference on Decision Control, pp. 2124\u20132128.\n30. Laws, C.N. (1992). Resource pooling in queueing networks with dynamic routing. Advances in Applied\nProbability 24: 699\u2013726.\n31. MacKenzie, E.J., Hoyt, D.B., Sacra, J.C., Jurkovich, G.J., Carlini, A.R., Taitelbaum, S.D. & Teter, H.,\nJr. (2003). National inventory of hospital trauma centers. Journal of the American Medical Association\n289: 1515\u20131522.\n32. Mandelbaum, A. & Stolyar, A.L. (2004). Scheduling flexible servers with convex delay costs: Heavy\ntraffic optimality of generalized c\u03bc-rule. Operations Research 52: 836\u2013855.\n33. Menich, B. & Serfozo, R. (1991). Optimality of routing and servicing in dependent parallel processing\nsystems. Queueing Systems 9: 403\u2013418.\n34. Ni\u00f1o-Mora, J. (2002). Dynamic allocation indices for restless projects and queueing admission control.\nMathematical Programming 93: 361\u2013413.\n35. Osterwalder, J.J. (2002). Can the \u201cgolden hour of shock\u201d be safely extended in blunt polytrauma\npatients. Prehospital and Disaster Medicine 17: 75\u201380.\n36. Opp, M., Glazebrook, K. & Kulkarni, V. (2005). Outsourcing warranty repairs: Dynamic allocation.\nNaval Research Logistics 52: 381\u2013398.\n37. Ross, K.W. & Yao, D.D. (1991). Optimal load balancing and scheduling in a distributed computer\nsystem. Journal of the Association for Computing Machinery 38: 676\u2013690.\n38. Sassen, S.A.E., Tijms, H.C. & Nobel, R.D. (1997). A heuristic rule for routing customers to parallel\nservers. Statistica Neerlandica 51: 107\u2013121.\n39. Sparaggis, P.D., Towsley, D. & Cassandras, C.G. (1993). Extremal properties of the SNQ and the LNQ\npolicies in finite capacity systems with state-dependent service rates. Journal of Applied Probability\n30: 223\u2013236.\n40. Stolyar, A.L. (2005). Optimal routing in output-queued flexible server systems. Probability in the\nEngineering and Informational Sciences 19: 141\u2013189.\n41. Teh, Y. & Ward, A. (2002). Critical thresholds for dynamic routing in queueing networks. Queueing\nSystems 42: 297\u2013316.\n42. Tezcan, T. (2005). Optimal control of distributed parallel server systems under the Halfin and Whitt\nregime. Mathematics of Operations Research 33: 51\u201390.\n43. Tijms, H.C. (1994). Stochastic models: An algorithmic approach. New York: Wiley.\n44. Towsley, D., Sparaggis, P.D. & Cassandras, C.G. (1993). Optimal routing and buffer allocation for a\nclass of finite capacity queueing systems. IEEE Transactions on Automatic Control 37: 1446\u20131451.\n45. Van Mieghem, J.A. (1995). Dynamic scheduling with convex delay costs: The generalized c\u03bc rule.\nThe Annals of Applied Probability 5: 809\u2013833.\n46. Wallace, R.B. & Whitt, W. (2005). A staffing algorithm for call centers with skill-based routing.\nManufacturing and Service Operations Management 7: 276\u2013294.\n47. Weber, R. (1978). On the optimal assignment of customers to parallel servers. Journal of Applied\nProbability 15: 406\u2013413.\n48. Wein, L.M. (1991). Brownian networks with discretionary routing. Operations Research 39: 322\u2013340.\n49. Whitt, W. (1986). Deciding which queue to join: Some counterexamples. Operations Research 34:\n55\u201362.\n\u201cS0269964809000138jra\u201d \u2014 2009\/2\/9 \u2014 18:36 \u2014 page 203 \u2014 #29\n\u0002\n\u0002\n\u0002\n\u0002\nDELAY COSTS IN A MULTISERVER QUEUING SYSTEM 203\n50. Whittle, P. (1996). Optimal control: Basics and beyond. New York: Wiley.\n51. Whittle, P. (1988). Restless bandits: Activity allocation in a changing world. Journal of Applied\nProbability A25: 287\u2013298.\n52. Winston, W. (1977). Optimality of the shortest-processing-time discipline. Journal of Applied\nProbability 14: 181\u2013189.\n"}