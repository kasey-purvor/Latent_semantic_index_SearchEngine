{"doi":"10.1108\/02640470410520113","coreId":"70347","oai":"oai:eprints.lancs.ac.uk:12403","identifiers":["oai:eprints.lancs.ac.uk:12403","10.1108\/02640470410520113"],"title":"Real tournament - mobile context aware gaming for the next generation","authors":["Wu, Maomao","Mitchell, Keith","McCaffery, Duncan","Finney, Joseph","Friday, Adrian"],"enrichments":{"references":[],"documentType":{"type":1}},"contributors":[],"datePublished":"2004-01","abstract":"With the recent advances in mobile networking, context-aware computing, and sensor-based computing, researchers and game designers are able to explore the potential of combining these new technologies to develop mobile, networked, context-aware, augmented reality multiplayer games. As part of new research collaboration between Lancaster University, Cisco Systems, Microsoft Research and Orange \u2013 MIPv6 Systems Research Lab, such a mobile context-aware multiplayer game is proposed and explored. The proposed game, Real Tournament, gathers real-time contextual information, e.g. physical location and orientation, from the players and injects them into the game engine to generate game events","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/70347.pdf","fullTextIdentifier":"http:\/\/eprints.lancs.ac.uk\/12403\/1\/SpecialIssueGames.pdf","pdfHashValue":"03f7722f6804eebe283be7050f8c6e983cf4d8c8","publisher":null,"rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:eprints.lancs.ac.uk:12403<\/identifier><datestamp>\n      2018-01-23T02:42:38Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      7375626A656374733D51:5141:51413735<\/setSpec><setSpec>\n      74797065733D61727469636C65<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n    \n      \n        Real tournament - mobile context aware gaming for the next generation<\/dc:title><dc:creator>\n        Wu, Maomao<\/dc:creator><dc:creator>\n        Mitchell, Keith<\/dc:creator><dc:creator>\n        McCaffery, Duncan<\/dc:creator><dc:creator>\n        Finney, Joseph<\/dc:creator><dc:creator>\n        Friday, Adrian<\/dc:creator><dc:subject>\n        QA75 Electronic computers. Computer science<\/dc:subject><dc:description>\n        With the recent advances in mobile networking, context-aware computing, and sensor-based computing, researchers and game designers are able to explore the potential of combining these new technologies to develop mobile, networked, context-aware, augmented reality multiplayer games. As part of new research collaboration between Lancaster University, Cisco Systems, Microsoft Research and Orange \u2013 MIPv6 Systems Research Lab, such a mobile context-aware multiplayer game is proposed and explored. The proposed game, Real Tournament, gathers real-time contextual information, e.g. physical location and orientation, from the players and injects them into the game engine to generate game events.<\/dc:description><dc:date>\n        2004-01<\/dc:date><dc:type>\n        Journal Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:relation>\n        http:\/\/dx.doi.org\/10.1108\/02640470410520113<\/dc:relation><dc:identifier>\n        Wu, Maomao and Mitchell, Keith and McCaffery, Duncan and Finney, Joseph and Friday, Adrian (2004) Real tournament - mobile context aware gaming for the next generation. Electronic Library, 22 (1). pp. 55-64. ISSN 0264-0473<\/dc:identifier><dc:relation>\n        http:\/\/eprints.lancs.ac.uk\/12403\/<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/dx.doi.org\/10.1108\/02640470410520113","http:\/\/eprints.lancs.ac.uk\/12403\/"],"year":2004,"topics":["QA75 Electronic computers. Computer science"],"subject":["Journal Article","PeerReviewed"],"fullText":"  1\n \nReal Tournament \u2013 Mobile Context-Aware Gaming for the Next Generation \n \nMaomao Wu, Keith Mitchell, Duncan McCaffery, Joe Finney, and Adrian Friday \n \nDistributed Multimedia Research Group \nComputing Department, Lancaster University, UK \n{maomao, km, mccaffed, joe, adrian}@comp.lancs.ac.uk \n \n \nAbstract \n \nWith the recent advances in mobile networking, context-aware computing, and sensor-based computing, \nresearchers and game designers are able to explore the potential of combining these new technologies \ntogether to develop mobile, networked, context-aware, augmented reality multiplayer games. As part of the \nnew research collaboration between Lancaster University, Cisco Systems, Microsoft Research and Orange \n\u2013 MIPv6 Systems Research Lab (MSRL), such a mobile context-aware multiplayer game is proposed and \nexplored. Through the process of development, deployment, and evaluation of the game, we can have a \nbetter view of the impact of Mobile IPv6 on future network services and applications. The proposed game, \nnamed Real Tournament, gathers real-time contextual information, e.g., physical location and orientation, \nfrom the players and injects them into the game engine to generate game events. Therefore, it is not only \nthe interaction with the virtual game world that drives the game process, but the interaction with the \nphysical world as well. From the results of our initial user trials, we believe that this type of multiplayer \ngame would attract people\u2019s attention and get reasonable number of customers in the game market.  \n \nKeywords \nMobile IPv6, Context-aware, Multimedia, Game, Real Tournament, Security. \n \n1. Introduction \n \nPrevious  research  experiences  in  next  generation  mobile  networking  [2],  context-aware  computing \n(Davies et al, 1999), and recent sensor-based computing [5] has made it possible for us to explore the \nimpact of ubiquitous computing (Weiser, 1991) on the lives of people in Lancaster. One of the novel \napplications we are investigating as one of the MSRL\u2019s collaborative projects [1] is a mobile context-aware \nmultiplayer team game, known as Real Tournament (RT), which is targeted at children aged 11-12 years \nold and containing a variety of educational, mental, physical and entertainment based challenges. The game \nis  designed  to  be  played  in  a  real  world  environment  using  handheld  personal  computing  devices \naugmented with an array of sensors. These sensors are then used to gather the game player\u2019s context, e.g., \nlocation, orientation, activity, and identity, etc. Different wireless communication technologies have been \nemployed to  create  the wireless overlay  network  infrastructure,  and  internetworking is enabled by the \nMobile  IPv6  protocol.  New  features  in  the  Mobile  IPv6,  e.g.,  auto-configuration,  smooth  handoff, \nextension headers, have been actively utilised during the process of the game design and implementation. \nAn additional security mechanism has also been integrated into the network layer to protect both our open \nwireless network and the privacy of the end users. \nThe  rest  of  the  paper  is  structured  as  follows.  We  start  introducing  the  research  background  and \nmotivation  that  impels  us  to  develop  this  specific  novel  application.  Then  we  describe  the  carefully \ndesigned game scenario that enables us to actively research the features in three different areas: mobile \nnetworking, context-aware computing, and sensor-based computing. In section five, we demonstrate the \nbenefits of our game architecture to the existing approaches, and enumerate the game components followed \nby their implementation status. The wireless overlay network infrastructure is introduced in section six, as \nwell as the integrated security mechanism. Related work is presented in section seven, and finally we make \nour conclusions and propose some future work.   2\n \n2. Background \n \nNext generation mobile networking, context-aware computing, and sensor-based computing are three \nstate-of-the-art research areas that have been actively explored in Lancaster University.  \n \n\u00b7  Mobile  networking:  The  Mobile  IPv6  protocol  enables  mobile  computers  to  roam  between \ndifferent IPv6 sub-networks while maintaining location transparency to correspondent nodes. In the \nLandMARC project [2], we have implemented the mobile extension to the original IPv6 stack for \nMicrosoft Windows operating system in order to support further research into mobile computing. \nThe stack has different versions for various Windows operating systems, including 2K, XP, CE3.0, \n4.1 and the Pocket PC 2002. The availability of Mobile IPv6 stack on Pocket PC allows us to use \nhandheld devices, such as the Compaq iPAQ to do research experiments and user trials. \n\u00b7  Context-aware  computing:  We  investigate  the  context-aware  computing  domain  through  the \ndevelopment  and  continued  refinement  of  a  context-aware  tour  guide  system,  called  GUIDE \n(Davies et al, 1999, Cheverst et al, 2000). Equipped with a GUIDE unit borrowed from local tourist \ninformation  centre, the  visitors  to  Lancaster  will receive  dynamic location-specific information \nwhile they are roaming in the city. Apart from location, the system also utilises other types of \ncontext, such as user\u2019s preferences, to tailor the information presented to the user. More recently, \nthe second phase of the project GUIDE II [3] aimed to provide context-sensitive mobile services for \nthe residents via a wireless network in the city of Lancaster. A secure access control mechanism \n(Schmid et al, 2001, Friday et al, 2003) was designed in order to open up our wireless network \naccess and context-sensitive services to authorised users only. \n\u00b7  Sensor-based computing: As part of the European research initiative The Disappearing Computer \n[4], the recent Smart-Its project [5] is interested in embedding small-scale computing devices into \nmundane everyday artefacts so that they will be able to enter into dynamic digital relationships. By \naugmenting these artefacts with sensing, perception, computation, and communication capabilities, \nthey can become the building blocks of a generic software platform capable of context capture and \ndistribution for large scale ubiquitous computing applications. \n \nPrevious work has been focused on exploring the issues in these three areas respectively. Realising that \nthe issues arisen from the individual areas become increasing related to each other, we feel there is an \nurgent need to explore them simultaneously. \n \n3. Motivation \n \nMSRL has been established to build on our prior work within the areas of mobile networking, context-\naware computing, and sensor-based computing. In our current research, we actively seek to explore the \nfeatures in these specific areas simultaneously. The work involved in MSRL can by categorized into three \nvertical layers: network infrastructure, middleware\/services, and applications. We believe that only through \nthe process of development, deployment, and evaluation can we have a better view of the impact of Mobile \nIPv6 on future network services and applications. \nThe computer games industry has grown at an escalating speed in recent years. As the Internet becomes \nmore  popular  and  enters  into  consumers\u2019  homes,  the  proliferation  of  online  multiplayer  games  has \nincreased dramatically. We believe that it is only a matter of time before such applications become prolific \non mobile terminals too. It has been predicted that by the end of 2003, eighty percent of mobile telecom \ndevices  will  have  the  capability  to  support  server-based  or  downloadable  games,  a  market  which  is \nexpected to grow to cover nearly 200 million consumers and 6 billion US dollars by 2005 (Shankar et al, \n2002). We therefore see an enormous potential in value added services such as multiplayer games beyond \nthe current trend towards downloadable games. \nAs  a  result  of previous  successful research  experiences in  Lancaster  and  the  keen  insight  into the \nnetworked game industry, we proposed and designed Real Tournament \u2013 a mobile, networked, context-\naware, augmented reality multiplayer game. \n \n   3\n4. Game Scenario \n \nBearing  in  mind  that  we  should  actively  explore  the  features  in  the  aforementioned  areas \nsimultaneously, a proper game scenario needs to be carefully designed. Apart from the technical issues, the \navailability of the end system users is also required in order to evaluate our game by user trials. We finally \ndecide  to design  a  game  full  of  educational, mental,  physical and entertainment  based  challenges  for \nchildren at 11-12 years old. A series of initial user trials have been carried out throughout the design and \ndevelopment of the game. By selecting children of the target age from a local school and demonstrating \nthem how to use the early version of the game, we can evaluate the user friendliness of the game device and \nthe user  interface. More importantly, the concept of interacting with the game world by acting  in the \nphysical world is novel, but it turns out to be easily grasped by the children. User trials within the mobile \ncomputing experts have also been carried out during two international conferences, namely Pervasive 2002 \n[6] and MobiCom 2002 [7]. The feedback from all the user trials provides us helpful clues to reincarnate \nthe client device and refine the game design. \nThe game arena of Real Tournament is set in a public park close to the city centre of Lancaster \u2013 \n\u201cWilliamson Park\u201d. The park has  a memorial (Ashton Memorial), a butterfly house and a mini-beasts \nmuseum housing lizards, spiders, snakes and a variety of other small creatures. The narrative for the game \nrelates  to a mad  professor who  has  time-travelled  back  from  the  future,  and  invaded  the mini-beasts \nmuseum and transformed the creatures into large monsters. These monsters have become the professor\u2019s \naccomplices and are to aid him in his quest to take over the world. The professor has released these virtual \nmonsters into the wild causing disruption around the city and surrounding area. The players are free to \ntravel through a series of historical zones in the park, and collaborate to locate and capture virtual monsters \nthat roam these zones in order to get highest points for their team. The difference of Real Tournament when \ncompared with traditional multiplayer games is that it augments the virtual game world with real world \nartefacts. The most obvious example of real world artefacts is the player, whose contextual information, \ne.g., location, orientation, and status, is used to augment the virtual game environment of other users. The \ngame players can monitor their virtual representation moving within the game arena through their handset \nwhile they are walking in the physical world. Figure 1 illustrates the screenshots of the game on user\u2019s \nmobile device. They can also use audio conferencing utilities to facilitate collaboration and synchronise \nmovements in order to approach their target at sufficient distance before using a capturing facility. \n \n      \nFigure 1: Real Tournament Screenshots \n \nAdditional game points can also be obtained by solving a variety of mental and physical challenges in \ncertain zones of the park. During a game session, players are able to collect both physical and virtual \nartefacts  located  around  the  game  arena,  such  as  utilities  or  power-ups.  The  game\u2019s  narrative  is \nsupplemented by the use of video content streamed from game servers located at various vantage points \naround the game arena. \n \n \n   4\n5. Game Architecture \n \nTwo popular architectures dominate the existing networked multiplayer game design: client-server and \npeer-to-peer. In the client-server model, there is a centralised server that stores shared data and relays \nmessages between clients. More specifically, clients send user generated game events to the central server, \nwhere  they  are  processed  and  transmitted  back  to  all  relevant  clients.  This  approach  guarantees  data \nconsistency  and  synchronises  the  game  status  between  different  players.  But  there  are  reliability  and \nperformance issues, since all computation and communication is processed on the centralised server. In the \npeer-to-peer model, there exists no central repository for game state, but each client needs to maintain a \nreplica of the game state and update it in response to either locally generated events or remotely received \ngame events. By localising the computation at the client side, this model reduces the network traffic but \nintroduces consistency problems at the same time.  \n By trading off the pros and cons, we have adopted a hybrid solution for the Real Tournament game \narchitecture, known as Mirrored Server Architecture (Cronin et al, 2002). The architecture is illustrated in \nFigure 2, and it is actually based upon early work on highly available services, such as Gossip (Ladin et al, \n1992), Bayou (Terry et al, 1995) and Coda (Satyanarayanan et al, 1990). Instead of having a single central \nserver,  there exist several distributed servers  for each game session. Each  mobile game client initially \nconnects to the geographically closest game server and communicates with it in the normal fashion. We \ncurrently make use of a simple UDP based discovery protocol to allow the mobile clients to obtain an IPv6 \naddress for their local game server. The game servers are then interconnected over a fixed IPv6 low latency \nmulticast network reserved for game traffic only. They exchange state using the peer-to-peer architecture, \nand each server maintains its own copy of the game arena. \n \n \nFigure 2: Mirrored Server Architecture. \n \nThe  existence  of  multiple  servers  removes  the  bottleneck  and  single  point  of  failure  found  within \ntraditional  client-server  architectures. This  also  means  that the complexity  in  terms of  communication \nexists primarily between servers (where bandwidth is cheap and reliable) instead of the clients. However, \nwe are actively looking for ways to extend and refine this architecture to make it more suitable for our own \ngame requirements. \n \n5.1. Game Client \n \nThe  Real  Tournament  handset  (Figure  3)  is  a  modified  water  cannon  augmented  with  a  Trimble \nLassen\nTM SQ GPS module, a electronic compass, two micro-switches (used for firing and utility selection), \na Smart-Its sensor board (Holmquist et al, 2001), a Bluetooth enabled Compaq iPAQ Pocket PC with \nCompact Flash (CF) expansion jacket  and a low power wireless 802.11b network card. The Smart-Its \nsensor board includes a touch sensor, infra-red light sensor and an accelerometer, although not all of these \nhave been incorporated into the game yet. \n   5\n               \n \nFigure 3: (a) A complete handset with iPAQ; (b) Cut-away view of the handset showing GPS, compass, \ntrigger and battery. \n \nAll these components communicate via the standard RS232 serial interface to the iPAQ Pocket PC. For \nthis to work, the GPS device, the digital compass and the triggers are multiplexed via a PIC microcontroller \non the RS232 interface of the iPAQ. The data is transferred in plaintext ASCII format over a simplex 9600 \nbaud RS232 connection. Data items are sent line delimited by CR\/LF and in no particular order, just as the \ndata becomes available from each hardware device. GPS data is received and sent across the serial line \nonce per second, orientation information is processed 10 times per second and the trigger status is received \non change. \nClient  side  software  consists  of  a  variety  of  components  that  can  be  categorized  into  five  types \naccording to their different functionalities: a serial port communication processing module that gathers raw \nsensory data from the hardware sensors; a parsing and translation module that transforms the raw sensory \ndata into software events; a communication module that sends software events to the game server and \nreceives updates from it;  a module that renders graphics and plays sounds to the end user; and  audio \nconferencing utility client software.  \nThese software modules are written in a combination of languages including Microsoft C#.NET, C++, \nand Embedded C++. C#.NET enables us to rapidly prototype and maintain client functionality while C++ \nallows  us  to  make  use  of  lower  level  functionality  currently  not  supported  by  the  .NET  Compact \nFramework [8], such as serial port access, Mobile IPv6 communications and high speed graphics rendering. \nWe are using GapiDraw [9] toolkit to develop the game client on the handheld device. \n \n5.2. Game Server \n \nA series of  mirrored game  servers  maintain  all  game  logic  and state,  and they  are  responsible  for \ndisseminating updates to each player\u2019s mobile device. More specifically, the game servers maintain a series \nof data structures representing each player\u2019s  identity, location, playing  status, and the status of all the \nvirtual artefacts and monsters in the game. They are responsible for ensuring that all the mobile clients have \na consistent view of the state of the game arena.  \nA player\u2019s physical location and orientation within the real world is mapped to their virtual location and \norientation  within  the  Real  Tournament  game  arena.  Therefore  physical  movements  and  changes  in \ndirection generate events which are mediated by the system and mapped in real time to each user\u2019s handset \nand display. The system is mediating and controlling all system wide events although in most cases these \nare generated initially by the player\u2019s themselves. The game servers are able to filter incoming events from \nthe mobile clients and disseminate them to the relevant parties based on context such as location and player \nstatus. The approach taken in ensuring consistency of state between servers and clients is beyond the scope \nof this. In addition to that, we are also trying to develop a generic approach to distributing contextual events \nto a large number of users. \nIn the current implementation, the game servers run on standard Windows XP PCs and are located \ninside the Ashton Memorial in the centre of the Williamson Park. One of the game servers is connected to a \nlarge plasma display  which is used  to display  the overall game arena and allow spectators (including \nparents, developers and system administrators) to watch the game session unfold. The software running on \ngame servers are implemented in a combination of C#.NET and C++ in the Microsoft .NET environment.  \n \n6. Network Infrastructure \n \nAs one of the main tasks of the MSRL, we are currently in the process of deploying a Mobile IPv6 \noverlay  network  infrastructure  designed  to  facilitate  ubiquitous  access  to  information  and  services   6\nthroughout the city of Lancaster and the University campus. We have already deployed several Wireless \nLAN (802.11b) base stations that cover the whole area of the Williamson Park, where the game takes place. \nFurthermore, the use of General Packet Radio Service (GPRS), as an \u201cumbrella\u201d for ubiquitous coverage \nacross the whole area, will provide the project with a real-world testbed that enables experimentation with \nstandard wireless overlay networks. \nWe are using Cisco Systems\u2019 350 series base stations to provide 802.11b wireless coverage around \nWilliamson Park. The antennae used with these base stations are 80 degrees diversity patch antennae from \nCisco Systems, which have two separate transmit\/receive elements in them. This can be advantageous as \nthey can improve reception by detecting which element has the best signal at any instant in time, and \nrapidly switch to using that element. The antennae are located to the North, South, East and West sides of \nthe building and are tilted downwards at an angle of 10 degrees to provide coverage as near to the base of \nthe Ashton Memorial as possible. Signal tests around the Park have so far been very positive with each area \nof coverage having a slight overlap with the neighbouring cell. Data link and network level handoffs have \nalso been tested and work well. \n \n6.1. Network Security \n \nThe open  nature of  the network  infrastructure requires a certain  degree of  protection  both  for the \nnetwork itself and users of the network from accidental or malicious misuse of the system. The security \nmechanism we designed is based on IP level packet marking, encryption and filtering, and it is integrated \ninto the Mobile IPv6 stack on Windows platforms (2K, XP, and CE). The components of our public access \nwireless network infrastructure for the game are illustrated in Figure 3. The access control mechanism we \ndesigned is generic so that it can also be used for other network services, e.g., an Internet access service. \nEach wireless cell in the diagram is controlled by a base station, which is a link layer entity that operates \ntransparently from the perspective of IP layer. Every base station is associated with an Access Router (AR) \nthat controls the access to the campus network and the Internet. The game servers are collocated with the \nbase stations, and they are put behind the Access Routers. Access Routers block the traffic originating from \nunauthorised end devices based on network-level packet filtering, and each AR forms a single routable IP \nsub-network, named a District. In order to gain access to the services, mobile devices need to authenticate \nthemselves with the Authentication Server (AS) first. Upon successful authentication and authorisation of a \nuser, the AS issues a limited lifetime access token to the user, which provides the basis for the client to do \nthe packet marking. In essence, our packet marking scheme is a hybrid way of digitally signing the whole \nIP packet, including the headers and payload, and this is placed in an IPv6 extension header. Optional \nencryption of the IP payload can also be realised for confidential communications using the same session \nkey. \n \n \nFigure 3: Secure Network Infrastructure.   7\nIn order  to prevent malicious users  stealing  the  token, a  secure token  and session key distribution \nprotocol is designed, and its lifetime is also restricted, known as Refresh Time. Each AR maintains an \naccess control list, which accommodates all the information required to validate the digital signature in the \npacket, namely the MAC address, IPv6 address, access token, and session key. This information is securely \ndistributed to the AR by the AS after successful authentication of a mobile user. When a packet comes, the \nAR looks up the access control list using MAC address as an index. If an entry exists, the AR verifies the \nvalidity of the signature in the packet by using the values in the entry. When successful, the access control \nextension header is either stripped off or padded with a certain value and the packet is passed on; otherwise, \nthe packet will be dropped. One exception to this rule is that when a client first turns up in a cell, it is \nallowed to contact certain well-known IPv6 addresses, e.g., authentication server address. \nThe  mobile  IPv6  protocol  supports  roaming  from  a  network-level  point  of  view  (i.e.,  location \ntransparency and fast network handoffs). When a mobile node moves to a new sub-network, the network \naccess will be controlled by a new AR, which may have no knowledge of previous authorisations for the \nmobile node. We solved this problem by using a proactive approach: the AS not only sends the token triple \nto the current AR, but distributes it to the neighbouring ARs as well after successful authentication of a \nmobile user.  When  the user roams to a neighbouring network, the new AR already has the necessary \ninformation to verify the signature by the mobile node. \nWe also put a Gateway Router between the public network and campus intranet in order to prevent \nsomeone masquerading our ARs. This gateway router will only accept traffic originating from the access \nrouters whose MAC addresses have been registered in its access control list. \nIn order to reduce the number of the access routers, we exploit the Virtual LAN (VLAN) technology. \nWorking with a VLAN capable switch, a single router equipped with a VLAN capable network interface \ncard can have many virtual network interfaces so that it can route packets from different sub-networks. The \naccess router is based on off-the-shelf PCs running Windows .NET Server 2003, and it is equipped with a \n3COM Gigabit Server Network Interface Card (3C996B-T), which supports up to 64 virtual networks on a \n.NET server  platform. For  the switching  of the virtual  LAN  networks, we use  Gigabit  switches  from \nExtreme Networks (models 5i and 48i switches) and Cisco (model 3550-48 switches). The gateway router \nis based on a Cisco 7206VXR router running IOS version 12.2. The authentication server is hosted on a \nspecial service network connected via the gateway router. \n \n7. Related Work \n \nResearch  within  the  field  of  virtual  and  augmented  reality  has  recently  moved  into  outdoor \nenvironments and aims to combine the virtual world of games with the physical world in new and engaging \nways. However, support for mobile users within a wireless heterogeneous networked environment does not \nyet exist. This section provides a brief overview of the current systems available and outlines their research \naims and objectives and how they differ to our work on Real Tournament. \n\u201cPirates!\u201d (Bj\u00f6rk et al, 2001) is a multiplayer indoor game for handheld devices connected in a wireless \nlocal area network (WLAN).  Each player\u2019s device is equipped with a proximity sensor used to sense \nrelative proximity to other players and locations in the real world. Players\u2019 movement between locations \ntriggers game events and allows them to engage in a variety of activities such as exploring islands and \ntaking part in sea battles (Falk et al, 2001). Proximity was used to explore the use of social interaction to \nprovide a richer game experience in a social setting. However, it was beyond the scope of \u201cPirates!\u201d to \nconsider  scalability  issues. Neither the hardware  infrastructure or  software  architecture  would provide \nadequate performance given a large user base.  \n\u201cCan You See Me Now?\u201d [10] is a mobile mixed reality game in which online players were chased \nacross a map of a city by players physically located on its streets. Online players accessed a map over the \nInternet  to  move  their  characters  across  the  city.  Runners  equipped  with  handheld  wireless  devices \naugmented with GPS receivers chased them by running through the city streets. Online players were able to \ncommunicate with each other via text messaging, and had the ability to listen to audio streamed from the \nrunners\u2019  walkie-talkies.  The  focus  of this work was based  around ethnography, player  interviews  and \nexamining logs of game activity which revealed issues pertinent to citywide mixed reality games (Izadi et \nal, 2002). While much can be learned from their experiences, our work is more focused on systems level \nissues of deploying and utilising MIPv6 wireless overlay networks.   8\n\u201cBot-Fighters\u201d [11] utilises cellular phone features such as cellular positioning and SMS to provide a \nlocation based combat game. Bot-Fighters users are able to go to the game\u2019s website and locate other \nplayers in their area. They may then send an SMS (or use a WAP phone) to check their target\u2019s physical \nlocation. If the target is within range, the player can shoot by sending a \u201cfire\u201d SMS. Players receive SMS \nmessages regarding who is in their vicinity and their attack status. By replying to SMS messages they are \nable to virtually retaliate or flee from attack. Although this application is highly scalable, there are no real-\ntime constraints and the user interface is extremely limited. We intend to make use of rich multimedia \ncontent to provide an engaging experience to our users. \n \n8. Conclusions and Future Work \n \nThis paper has  introduced  a  mobile-networked,  context-aware,  augmented  reality  multiplayer  game \nnamed  Real  Tournament.  We  believe  Real  Tournament  distinguishes  itself  from  the  other  networked \nmultiplayer games by a number of important features, namely: \n \n\u00b7  A carefully designed game scenario. It enables us to actively explore the features in three different \nresearch areas simultaneously, and also makes it easy to evaluate our game through user trials by \ntargeting the game players to the children at age of 11-12. A series of initial user trials have been \ncarried out within target age children as well as mobile computing experts, and the feedback has \nbeen used to refine the design of the handset and the game. \n\u00b7  Custom  designed  and  built  handsets.  By  making  the  user  interface  presented  to  game  players \ncustomized to the task at hand, this greatly improves the players\u2019 gaming experience. \n\u00b7  Real-time  communications.  By  adding real-time  voice  streaming  between  players,  this  adds an \nadditional element to the game play. (By allowing players to collaborate more effectively). \n\u00b7  Context-awareness  in  the  game.  By  injecting  real-world  contextual  information  (such  as  the \nplayers\u2019  physical  location)  into  the  game,  the  way  of  interacting  with  the  computing  device \nbecomes more natural, and the game players will feel more comfortable to concentrate on the game \ncontent. \n\u00b7  An overlay network infrastructure based on Mobile IPv6. The advanced features in Mobile IPv6 \nassist  the  players\u2019  devices  in maintaining  a  consistent  view of  the  gaming  arena,  by  allowing \ndevices to communicate over any available network medium. \n\u00b7  A hybrid game architecture. By replicating game servers and interconnecting them by low latency \nmulticast network,  it not  only  eases to  maintain  the  consistency  and  synchronization,  but  also \nincreases the availability and performance. \n\u00b7  A network-level security mechanism. Our security mechanism, which is integrated into the Mobile \nIPv6 stack, allows game operators to regulate access to the wireless networks used to support the \ngame. The mechanism is also generic enough that we can easily use it for other network services. \n \nIn the future work, we intend to further develop and evaluate the hybrid mirrored server model described \nin this paper, and investigate  its role in extremely wide area  applications such as maintaining context \ninformation  for  multimedia  messaging  applications.  We  also  intend  to  design  a  context  manager  for \nefficient, scalable support for context management of both real time and non-real time data, and to make it \ngeneric enough to support other context based services. Other latest wireless communication technologies, \nsuch as Bluetooth, GPRS, will also be explored to extend the underlying network infrastructure and to \nrealise the Mobile IPv6 overlay network. \n   9\nReferences \n \nBj\u00f6rk S., Falk J., Hansson R., and Ljungstrand P. (2001), \u201cPirates! - Using the Physical World as a Game \nBoard\u201d, Proceedings of Eighth IFIP TC.13 Conference on Human-Computer Interaction (Interact\u201901), \nTokyo,  Japan,  9-13  July  2001,  available  via  the  Internet  at \nhttp:\/\/civ.idc.cs.chalmers.se\/publications\/2001\/pirates.interact.pdf.  \n \nCheverst K., Davies N., Mitchell K., Friday A. and Efstratiou C., \u201cDeveloping a Context-aware Electronic \nTourist Guide: Some Issues and Experiences\u201d, Proceedings of the SIGCHI conference on Human factors in \ncomputing systems (CHI\u201900), Netherlands, pp 17-24, April 2000. \n \nCronin, E., Filstrup, B., Kurc, A.R. and Jamin, S. (2002), \u201cAn Efficient Synchronization Mechanism for \nMirrored Game Architectures\u201d, Proceedings of the First Workshop on Network and System Support for \nGames (NetGames\u201902), Braunschweig, Germany, 16-17 April 2002, ACM Press, pp. 67-73. \n \nDavies N., Cheverst K., Mitchell K. and Friday A. (1999), \u201cCaches in the Air: Disseminating Information \nin the Guide System\u201d, Proceedings of IEEE Workshop on Mobile Computing Systems and Applications \n(WMCSA\u201999), New Orleans, U.S.A., February 1999, IEEE Press, pp. 11-19. \n \nFalk J., Ljungstrand P., Bj\u00f6rk S., and Hansson R. (2001), \u201cPirates: Proximity-Triggered Interaction in a \nMulti-Player Game\u201d, Extended Abstracts of Computer-Human Interaction (CHI\u201901), April 2001, ACM \nPress, 2001, pp. 119-120.  \n \nFriday A., Wu M., Finney J., Schmid S., Cheverst K., and Davies N. (2003), \u201cNetwork Layer Access \nControl for Context-Aware IPv6 Applications\u201d, ACM Baltzer Wireless Networks (WINET) Special Issue on \nWireless Mobile Internet, 9(4):299-309, 2003. \n \nHolmquist, L., E., Mattern, F., Schiele, B., Alahuhta, P., Beigl, M. and Gellersen, H., W. (2001), \u201cSmart-Its \nFriends: A Technique for Users to Easily Establish Connections between Smart Artefacts\u201d, Proceedings of \nThird  International  Conference  on  Ubiquitous  Computing  (UbiComp\u201901),  Atlanta,  GA,  USA,  30 \nSeptember - 02 October, 2001, Springer-Verlag,  pp. 116-122. \n \nIzadi  S.,  Fraser  M.,  Benford  S.,  Flintham  M.,  Greenhalgh  C.,  Rodden  T.,  Schadelbach  H.  (2002), \n\u201cCitywide:  supporting  interactive  digital  experiences  across  physical  space\u201d,  Journal  of  Personal  and \nUbiquitous Computing, 6(4): 290 - 298,  Springer-Verlag, 2002.  \n \nLadin,  R.,  Liskov,  B.,  Shrira,  L.,  and  Ghemawat,  S  (1992),  \u201cProviding  high  availability  using  lazy \nreplication\u201d, ACM Transactions on Computer Systems, 10(4):360-391, November 1992. \n \nSatyanarayanan, M., Kistler, J. J., Kumar, P., Okasaki, M. E., Siegel, E. H., and Steere, D. C. (1990), \n\u201cCoda: a highly available file system for a distributed workstation environment\u201d, IEEE Transactions on \nComputers, 39(4):447-459, April 1990. \n \nSchmid S., Finney J., Wu M., Friday A., Scott A.C., and Shepherd W.D. (2001), \u201cAn Access Control \nArchitecture for Microcellular Wireless IPv6 Networks\u201d, Proceedings of 26th Annual IEEE Conference on \nLocal Computer Networks (LCN\u201901), Tampa, Florida, 14-16 November 2001, IEEE Press, pp. 454-463.  \n \nShankar, B., Brown, A., MacMillan, D., ODonovan, P. and Wood, B. (2002), \u201cGames and Entertainment \nwithin the Mobile Phone Industry\u201d, April 2002, available via the Internet at http:\/\/www.gartner.com\/. \n \nTerry, D.B., Theimer, M.M., Petersen, K., Demers, A.J., Spreitzer, M.J., Hauser, C. (1995), \u201cManaging \nUpdate Conflicts in Bayou, a Weakly Connected Replicated Storage System\u201d, Proceedings of the Fifteenth \nACM Symposium on Operating Systems Principles, pp. 172-183, December 1995. \n \nWeiser M. (1991), \u201cThe Computer for the Twenty-First Century\u201d, Scientific American, 265(3):94-104, \nSeptember 1991.   10 \nWeb sites \n \n[1] Mobile IPv6 Research Laboratory (MSRL), Collaboration with Cisco Systems, Microsoft Research and \nOrange, Lancaster University, 2001, available via the Internet at http:\/\/www.mobileipv6.net\/. \n \n[2] The LandMARC Project Lancaster and Microsoft Active Research Collaboration, 1999, available via \nthe Internet at http:\/\/www.LandMARC.net. \n \n[3]  \u201cThe  Guide  II  Project:  Context-Sensitive  Mobile  Services  for  City  Residents\u201d,  Research  Project, \nLancaster University, EPSRC Grant GR\/M82394, 2000, available via the Internet at  \nhttp:\/\/www.comp.lancs.ac.uk\/computing\/users\/maomao\/G2\/. \n \n[4] The Disappearing Computer Initiative, an EU-funded proactive initiative of the Future and Emerging \nTechnologies  (FET)  activity  of  the  Information  Society  Technologies  (IST)  research  program,  2001, \navailable via the Internet at http:\/\/www.disappearing-computer.net\/. \n \n[5] \u201cSmart-Its\u201d, Collaboration of Lancaster University, ETH Zurich, University of Karlsruhe, Interactive \nInstitute and VTT, 2001, available via the Internet at http:\/\/www.smart-its.org\/. \n \n[6] Pervasive 2002 homepage: http:\/\/www.pervasive2002.org\/  \n \n[7] MobiCom 2002 homepage: http:\/\/www.acm.org\/sigmobile\/mobicom\/2002\/ \n \n[8] The Microsoft Mobile Developer Conference, MDC 2002, London Hilton  Metropole, April  2002, \navailable via the Internet at: http:\/\/www.microsoft.com\/europe\/mobdevcon\/. \n \n[9] GapiDraw homepage: http:\/\/www.gapidraw.com\/index.html \n \n[10]  \u201cCan  You  See  Me  Now?\u201d  project,  2001,  available  via  the  Internet  at: \nhttp:\/\/www.canyouseemenow.co.uk\/.  \n \n[11] \u201cBotFighters\u201d, homepage available via the Internet at: http:\/\/www.teliamobile.se\/botfighters\/. \n "}