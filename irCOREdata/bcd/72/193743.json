{"doi":"10.1016\/j.tcs.2006.09.014","coreId":"193743","oai":"oai:lra.le.ac.uk:2381\/1836","identifiers":["oai:lra.le.ac.uk:2381\/1836","10.1016\/j.tcs.2006.09.014"],"title":"A Simple Optimal Representation for Balanced Parentheses.","authors":["Geary, Richard F.","Rahman, Naila","Raman, Rajeev","Raman, V."],"enrichments":{"references":[],"documentType":{"type":null}},"contributors":[],"datePublished":"2006","abstract":"We consider succinct, or highly space-efficient, representations of a (static) string consisting of n pairs of balanced parentheses,\\ud\nwhich support natural operations such as finding the matching parenthesis for a given parenthesis, or finding the pair of parentheses\\ud\nthat most tightly enclose a given pair. This problem was considered by Jacobson [Space-efficient static trees and graphs, in: Proc.\\ud\nof the 30th FOCS, 1989, pp. 549\u2013554] and Munro and Raman [Succinct representation of balanced parentheses and static trees,\\ud\nSIAM J. Comput. 31 (2001) 762\u2013776] who gave O(n)-bit and 2n + o(n)-bit representations, respectively, that supported the above\\ud\noperations in O(1) time on the RAM model of computation. This data structure is a fundamental tool in succinct representations,\\ud\nand has applications in representing suffix trees, ordinal trees, planar graphs and permutations.\\ud\nWe consider the practical performance of parenthesis representations. First, we give a new 2n + o(n)-bit representation that\\ud\nsupports all the above operations in O(1) time. This representation is conceptually simpler, its space bound has a smaller o(n) term\\ud\nand it also has a simple and uniform o(n) time and space construction algorithm.\\ud\nWe implement our data structure and a variant of Jacobson\u2019s, and evaluate their practical performance (speed and memory usage),\\ud\nwhen used in a succinct representation of trees derived from XML documents. As a baseline, we compare our representations against\\ud\na widely used implementation of the standard DOM (document object model) representation of XML documents. Both succinct\\ud\nrepresentations use orders of magnitude less space than DOM and tree traversal operations are usually only slightly slower than in\\ud\nDOM","downloadUrl":"","fullTextIdentifier":null,"pdfHashValue":null,"publisher":null,"rawRecordXml":"<record><header><identifier>\n        \n            \n                oai:lra.le.ac.uk:2381\/1836<\/identifier><datestamp>\n                2016-01-04T11:33:14Z<\/datestamp><setSpec>\n                com_2381_316<\/setSpec><setSpec>\n                com_2381_9549<\/setSpec><setSpec>\n                col_2381_1116<\/setSpec>\n            <\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:doc=\"http:\/\/www.lyncode.com\/xoai\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n            \nA Simple Optimal Representation for Balanced Parentheses.<\/dc:title><dc:creator>\nGeary, Richard F.<\/dc:creator><dc:creator>\nRahman, Naila<\/dc:creator><dc:creator>\nRaman, Rajeev<\/dc:creator><dc:creator>\nRaman, V.<\/dc:creator><dc:description>\nWe consider succinct, or highly space-efficient, representations of a (static) string consisting of n pairs of balanced parentheses,\\ud\nwhich support natural operations such as finding the matching parenthesis for a given parenthesis, or finding the pair of parentheses\\ud\nthat most tightly enclose a given pair. This problem was considered by Jacobson [Space-efficient static trees and graphs, in: Proc.\\ud\nof the 30th FOCS, 1989, pp. 549\u2013554] and Munro and Raman [Succinct representation of balanced parentheses and static trees,\\ud\nSIAM J. Comput. 31 (2001) 762\u2013776] who gave O(n)-bit and 2n + o(n)-bit representations, respectively, that supported the above\\ud\noperations in O(1) time on the RAM model of computation. This data structure is a fundamental tool in succinct representations,\\ud\nand has applications in representing suffix trees, ordinal trees, planar graphs and permutations.\\ud\nWe consider the practical performance of parenthesis representations. First, we give a new 2n + o(n)-bit representation that\\ud\nsupports all the above operations in O(1) time. This representation is conceptually simpler, its space bound has a smaller o(n) term\\ud\nand it also has a simple and uniform o(n) time and space construction algorithm.\\ud\nWe implement our data structure and a variant of Jacobson\u2019s, and evaluate their practical performance (speed and memory usage),\\ud\nwhen used in a succinct representation of trees derived from XML documents. As a baseline, we compare our representations against\\ud\na widely used implementation of the standard DOM (document object model) representation of XML documents. Both succinct\\ud\nrepresentations use orders of magnitude less space than DOM and tree traversal operations are usually only slightly slower than in\\ud\nDOM.<\/dc:description><dc:date>\n2009-12-08T16:14:20Z<\/dc:date><dc:date>\n2009-12-08T16:14:20Z<\/dc:date><dc:date>\n2006<\/dc:date><dc:type>\nArticle<\/dc:type><dc:identifier>\nTheoretical Computer Science, 2006, 368 (3), pp.231-246<\/dc:identifier><dc:identifier>\n0304-3975<\/dc:identifier><dc:identifier>\nhttp:\/\/www.sciencedirect.com\/science\/article\/pii\/S0304397506006189?np=y<\/dc:identifier><dc:identifier>\nhttp:\/\/hdl.handle.net\/2381\/1836<\/dc:identifier><dc:identifier>\n10.1016\/j.tcs.2006.09.014<\/dc:identifier><dc:language>\nen<\/dc:language><dc:relation>\nRAE 2007<\/dc:relation><dc:format>\nMetadata<\/dc:format>\n<\/oai_dc:dc>\n<\/metadata>\n        <\/record>","journals":[{"title":null,"identifiers":["0304-3975","issn:0304-3975"]}],"language":null,"relations":["RAE 2007"],"year":2006,"topics":[],"subject":["Article"],"fullText":null}