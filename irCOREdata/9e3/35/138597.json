{"doi":"10.1007\/3-540-46080-2_113","coreId":"138597","oai":"oai:dspace.lib.cranfield.ac.uk:1826\/3137","identifiers":["oai:dspace.lib.cranfield.ac.uk:1826\/3137","10.1007\/3-540-46080-2_113"],"title":"Performance Issues for Vertex Elimination Methods in Computing Jacobians using Automatic Differentiation.","authors":["Tadjouddine, Mohamed","Forth, Shaun A.","Pryce, John D.","Reid, John K."],"enrichments":{"references":[],"documentType":{"type":0.7777777778}},"contributors":[],"datePublished":"2002","abstract":"In this paper, we present first results from EliAD, a new automatic differentiation tool. EliAD uses the Elimination approach for Automatic Differentation first advocated by Griewank and Reese (Automatic Differentiation of Algorithms, SIAM, 1991 p126-135). EliAD implements this technique via source-transformation, writing new Fortran code for the Jacobians of functions defined by existing Fortran code. Our results are from applying EliAD to the Roe flux routine commonly used in computational fluid dynamics. We show that we can produce code that calculates the associated flux Jacobian approaching or in excess of twice the speed of current state-of-the-art automatic differentiation tools. However, in order to do so we must take into account the architecture on which we are running our code. In particular, on processors that do not support out-of-order execution, we must reorder our derivative code so that values may be reused while in arithmetic registers in order that the floating point arithmetic pipeline may be kept full.Presented at The 2002 International Conference on Computational Science ICCS 2002 \nSpecial Session on Automatic Differentiation and Applications\nAmsterdam, The Netherlands, April 21-24, 200","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/138597.pdf","fullTextIdentifier":"https:\/\/dspace.lib.cranfield.ac.uk\/bitstream\/1826\/3137\/1\/Performance%20Issues%20for%20Vertex%20Elimination%20Methods%20in%20Computing%20Jacobians-2002.pdf","pdfHashValue":"28ed9842269bb335b1c79bce28bcbef8a4f7a4a3","publisher":"Springer-Verlag","rawRecordXml":"<record><header><identifier>\noai:dspace.lib.cranfield.ac.uk:1826\/3137<\/identifier><datestamp>2009-02-06T16:20:35Z<\/datestamp><setSpec>hdl_1826_13<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>Performance Issues for Vertex Elimination Methods in Computing Jacobians using Automatic Differentiation.<\/dc:title><dc:creator>Tadjouddine, Mohamed<\/dc:creator><dc:creator>Forth, Shaun A.<\/dc:creator><dc:creator>Pryce, John D.<\/dc:creator><dc:creator>Reid, John K.<\/dc:creator><dc:description>In this paper, we present first results from EliAD, a new automatic differentiation tool. EliAD uses the Elimination approach for Automatic Differentation first advocated by Griewank and Reese (Automatic Differentiation of Algorithms, SIAM, 1991 p126-135). EliAD implements this technique via source-transformation, writing new Fortran code for the Jacobians of functions defined by existing Fortran code. Our results are from applying EliAD to the Roe flux routine commonly used in computational fluid dynamics. We show that we can produce code that calculates the associated flux Jacobian approaching or in excess of twice the speed of current state-of-the-art automatic differentiation tools. However, in order to do so we must take into account the architecture on which we are running our code. In particular, on processors that do not support out-of-order execution, we must reorder our derivative code so that values may be reused while in arithmetic registers in order that the floating point arithmetic pipeline may be kept full.<\/dc:description><dc:description>Presented at The 2002 International Conference on Computational Science ICCS 2002 \nSpecial Session on Automatic Differentiation and Applications\nAmsterdam, The Netherlands, April 21-24, 2002<\/dc:description><dc:publisher>Springer-Verlag<\/dc:publisher><dc:date>2009-02-04T12:40:27Z<\/dc:date><dc:date>2009-02-04T12:40:27Z<\/dc:date><dc:date>2002<\/dc:date><dc:type>Postprint<\/dc:type><dc:identifier>Mohamed Tadjouddine, Shaun A. Forth, John D. Pryce & John K. Reid, Performance Issues for Vertex Elimination Methods in Computing Jacobians using Automatic Differentiation. Proceedings of the Second International Conference in Computational Science, Vol 2330, Lecture Notes in Computer Science, Springer-Verlag, Berlin, 2002.<\/dc:identifier><dc:identifier>978-3-540-43593-8<\/dc:identifier><dc:identifier>http:\/\/dx.doi.org\/10.1007\/3-540-46080-2_113<\/dc:identifier><dc:identifier>http:\/\/hdl.handle.net\/1826\/3137<\/dc:identifier><dc:language>en<\/dc:language><dc:rights>The original publication is available at www.springerlink.com<\/dc:rights><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"pl","id":34,"name":"Polish"},"relations":[],"year":2002,"topics":[],"subject":["Postprint"],"fullText":"\n\n\n\n\n\u00ef \u00ee \u00ed \u00ec \u00eb \u00ea \u00e9 \u00e8 \u00e7 \u00ef\u00f0 \u00ef\u00ef \u00ef\u00ee \u00ef\u00ed\n\u00f0\n\u00f0\u00f2\u00ee\n\u00f0\u00f2\u00ec\n\u00f0\u00f2\u00ea\n\u00f0\u00f2\u00e8\n\u00ef\n\u00ef\u00f2\u00ee\n\u00ef\u00f2\u00ec\n\u00ef\u00f2\u00ea\n\u00ef\u00f2\u00e8\n\n\n\n\n"}