{"doi":"10.1007\/s00170-010-2765-5","coreId":"140146","oai":"oai:dspace.lib.cranfield.ac.uk:1826\/5403","identifiers":["oai:dspace.lib.cranfield.ac.uk:1826\/5403","10.1007\/s00170-010-2765-5"],"title":"A review of information flow diagrammatic models for product-service systems","authors":["Durugbo, Christopher","Tiwari, Ashutosh","Alcock, Jeffrey R."],"enrichments":{"references":[{"id":37965586,"title":"A classification schema of manufacturing decisions for the GRAI enterprise modelling technique,","authors":[],"date":"2002","doi":"10.1016\/s0166-3615(02)00002-7","raw":"McCarthy I, Menicou M (2002) A classification schema of manufacturing decisions for the GRAI enterprise modelling technique, Comput Ind 47:339-355. doi:10.1016\/S0166-3615(02)00002-7","cites":null},{"id":37965599,"title":"A formal approach to system design and refinement.","authors":[],"date":"1990","doi":"10.1109\/cmpeur.1990.113675","raw":"Varadharajan V (1990) A formal approach to system design and refinement. CompEuro 90: 544-545. doi:10.1109\/CMPEUR.1990.113675,","cites":null},{"id":37965598,"title":"A Note on Transition Systems.","authors":[],"date":"1976","doi":"10.1016\/0020-0255(76)90054-2","raw":"Lien YE (1976) A Note on Transition Systems. Inform Sciences 10: 341-362. doi: 10.1016\/S0020-0255(76)91010-0","cites":null},{"id":37965562,"title":"A state-of-the-art review of IDEF0,","authors":[],"date":"1993","doi":null,"raw":"Colquhoun GJ, Baines RW, Crossley R (1993) A state-of-the-art review of IDEF0, Int J Comp Integ M 6:252-264. doi: 10.1080\/09511929308944576","cites":null},{"id":37965614,"title":"An approach to the application of the design structure matrix for assessing reconfigurability of distributed manufacturing systems. DIS","authors":[],"date":"2006","doi":"10.1109\/dis.2006.10","raw":"Farid A, McFarlane DC (2006) An approach to the application of the design structure matrix for assessing reconfigurability of distributed manufacturing systems. DIS 2006: 121-126. doi:10.1109\/DIS.2006.10","cites":null},{"id":37965556,"title":"An Infodynamic Engine Approach to Improving the Efficiency of Information Flow in a Product-Service System.","authors":[],"date":"2009","doi":null,"raw":"Durugbo C, Tiwari A, and Alcock JR (2009) An Infodynamic Engine Approach to Improving the Efficiency of Information Flow in a Product-Service System. Proceedings of the 1st CIRP IPS2 Conference, pp. 107\u2013112.","cites":null},{"id":37965609,"title":"Applying the design structure matrix to system decomposition and integration problems: a review and new directions.","authors":[],"date":"2001","doi":"10.1109\/17.946528","raw":"Browning TR (2001) Applying the design structure matrix to system decomposition and integration problems: a review and new directions. IEEE Trans Eng Manage 48: 292-306. doi:10.1109\/17.946528","cites":null},{"id":37965582,"title":"Architectures of Information Systems. In: Bernus","authors":[],"date":"1998","doi":"10.1007\/978-3-662-03526-9","raw":"Bernus P, Schmidt G (1998) Architectures of Information Systems. In: Bernus P, Mertins K, Schmidt G (eds) Handbook on Architectures of Information Systems, Springer-Verlag, Berlin, pp 1-10","cites":null},{"id":37965595,"title":"Are push and pull systems really so different?","authors":[],"date":"1999","doi":"10.1016\/s0925-5273(98)00094-2","raw":"Bonney MC, Zhang Z, Head MA, Tien CC, Barson RJ (1999) Are push and pull systems really so different? Int J Prod Econ 59: 53-64. doi:10.1016\/S0925-5273(98)00094-2","cites":null},{"id":37965585,"title":"Augmented IDEF1-based process-oriented information modeling. Automat Constr,","authors":[],"date":"2004","doi":"10.1016\/j.autcon.2004.04.013","raw":"Chen P-H, Wan C, Tiong RLK, Ting SK, Yang Q (2004) Augmented IDEF1-based process-oriented information modeling. Automat Constr, 13:735-750. doi:10.1016\/j.autcon.2004.04.013","cites":null},{"id":37965618,"title":"CIRP (College International pour la Recherche en Productique) Working Group - Industrial Product-Service-Systems (IPS) Available at http:\/\/www.lps.rub.de\/schwerpunkt\/cirp\/.","authors":[],"date":"2009","doi":null,"raw":"CIRP (2009) CIRP (College International pour la Recherche en Productique) Working Group - Industrial Product-Service-Systems (IPS\u00b2) Available at http:\/\/www.lps.rub.de\/schwerpunkt\/cirp\/. Accessed 21 February 2008","cites":null},{"id":37965551,"title":"Clarifying the concept of product-service system.","authors":[],"date":"2002","doi":"10.1016\/s0959-6526(01)00039-7","raw":"Mont OK (2002) Clarifying the concept of product-service system. J Clean Prod 10: 237-245. doi: 10.1016\/S0959-6526(01)00039-7","cites":null},{"id":37965569,"title":"Data flow diagrams: reverse engineering production and animation. ICSM","authors":[],"date":"1992","doi":"10.1109\/icsm.1992.242522","raw":"Canfora G, Sansone L, Visaggio G (1992) Data flow diagrams: reverse engineering production and animation. ICSM 1992 366-375. doi: 10.1109\/ICSM.1992.242522 [20] Tucker D, Leonard R (2001) An Innovative Approach for Using the GRAI Methodology for Reengineering the New Product Introduction Process. Int J Flex Manuf Sys 13:177-193. doi: 10.1023\/A:1011135518865","cites":null},{"id":37965566,"title":"Developing new product service systems (PSS): methodologies and operational tools.","authors":[],"date":"2006","doi":"10.1016\/j.jclepro.2006.01.023","raw":"Morelli N (2006) Developing new product service systems (PSS): methodologies and operational tools. J Clean Prod 14: 1495-1501. doi:10.1016\/j.jclepro.2006.01.023","cites":null},{"id":37965622,"title":"Diagrammatic knowledge representation.","authors":[],"date":"1992","doi":"10.1109\/21.156595","raw":"Sen T (1992) Diagrammatic knowledge representation. IEEE T Syst Man Cyb 22:826-830. doi: 10.1109\/21.156595","cites":null},{"id":37965563,"title":"Diagramming Techniques for Analysts and Programmers, Prentice Hall Englewood Cliffs,","authors":[],"date":"1985","doi":null,"raw":"Martin J, McClure C (1985) Diagramming Techniques for Analysts and Programmers, Prentice Hall Englewood Cliffs, New Jersey","cites":null},{"id":37965611,"title":"DSM as a knowledge capture tool in CODE environment.","authors":[],"date":"2007","doi":"10.1007\/s10845-007-0058-0","raw":"Syed AS, Berman K (2007) DSM as a knowledge capture tool in CODE environment. J Intell Manuf 18: 497-504. doi: 10.1007\/s10845-007-0058-0","cites":null},{"id":37965557,"title":"Eight types of product-service system: eight ways to sustainability? Experiences from SusProNet.","authors":[],"date":"2004","doi":"10.1002\/bse.414","raw":"Tukker A (2004) Eight types of product-service system: eight ways to sustainability? Experiences from SusProNet. Bus Strat Environ 13: 246\u2013260. doi: 10.1002\/bse.414","cites":null},{"id":37965591,"title":"Enterprise Modeling and Integration.","authors":[],"date":"1996","doi":"10.1177\/1063293x9600400303","raw":"Vernadat F (1996) Enterprise Modeling and Integration. Chapman and Hall, London","cites":null},{"id":37965596,"title":"Evaluation of the information flow in a hierarchical shop floor control framework.","authors":[],"date":"2000","doi":"10.1080\/002077200412131","raw":"Ou-Yang C, Lee JC (2000) Evaluation of the information flow in a hierarchical shop floor control framework. Int J Syst Sci 31: 977-1001. doi:10.1080\/002077200412131","cites":null},{"id":37965577,"title":"Federal Information Processing Standards","authors":[],"date":"1993","doi":"10.17487\/rfc0806","raw":"Federal Information Processing Standards (1993) FIPS PUB 183, Integration Definition for Function Modelling (IDEF0) National Institute for Standards and Technology, Maryland","cites":null},{"id":37965587,"title":"GRAI Approach to Designing and Controlling Advanced Manufacturing Systems","authors":[],"date":"1989","doi":"10.1007\/978-3-642-74575-1_21","raw":"Doumeingts G (1989) GRAI Approach to Designing and Controlling Advanced Manufacturing Systems in CIM Environment. In: Advanced Information Technologies for Industrial Material Flow Systems, Nof SY, Moodie CL (eds.), NATO ASI Series, Springer-Verlag, Berlin, pp. 461-529","cites":null},{"id":37965590,"title":"GRAI grid decisional modelling. In:","authors":[],"date":"1998","doi":"10.1007\/978-3-662-03526-9_14","raw":"Doumeingts G, Vallespir B, Chen D (1998) GRAI grid decisional modelling. In: Handbook on Architectures of Information Systems, Bernus P, Mertins K, Schmidt G (eds.),Springer-Verlag, Berlin, pp 313-337","cites":null},{"id":37965607,"title":"HIPO (hierarchy plus input-process-output) In: The Information System Consultant's Handbook: Systems Analysis and Design,","authors":[],"date":"1998","doi":"10.1201\/9781420049107.ch64","raw":"Davis WS (1998) HIPO (hierarchy plus input-process-output) In: The Information System Consultant's Handbook: Systems Analysis and Design, Davis WS, Yen DC (eds.) CRC Press LLC, Florida, pp 503-510","cites":null},{"id":37965601,"title":"HIPO and Integrated Program Design.","authors":[],"date":"1976","doi":"10.1147\/sj.152.0143","raw":"Stay JF. (1976) HIPO and Integrated Program Design. IBM Syst J 15:143-154","cites":null},{"id":37965576,"title":"IDEF Family of Methods: A structured approach to enterprise modelling and analysis. Available at: http:\/\/www.idef.com\/.","authors":[],"date":"2006","doi":null,"raw":"Knowledge Based Systems Inc (2006) IDEF Family of Methods: A structured approach to enterprise modelling and analysis. Available at: http:\/\/www.idef.com\/. Accessed 23 March, 2008","cites":null},{"id":37965567,"title":"Information modelling for distributed applications.","authors":[],"date":"1990","doi":"10.1109\/ftdcs.1990.138369","raw":"Scheller A (1990) Information modelling for distributed applications. IEEE Workshop on Future Trends of Distributed Computing Systems, 494-500. doi: 10.1109\/FTDCS.1990.138369","cites":null},{"id":37965588,"title":"Information system modelling for engineering design co-ordination.","authors":[],"date":"2004","doi":"10.1016\/j.compind.2004.08.008","raw":"Merlo C, Girard Ph. (2004) Information system modelling for engineering design co-ordination. Comput Ind 55: 317-334. doi:10.1016\/j.compind.2004.08.008","cites":null},{"id":37965559,"title":"Integration of a service CAD and a life cycle simulator,","authors":[],"date":"2008","doi":"10.1016\/j.cirp.2008.03.001","raw":"Komoto H, Tomiyama T (2008) Integration of a service CAD and a life cycle simulator, CIRP Ann-Manuf Techn 57: 9-12, doi: 10.1016\/j.cirp.2008.03.001.","cites":null},{"id":37965584,"title":"Integration of information model (IDEF1) with function model (IDEF0) for CIM information systems design.","authors":[],"date":"1996","doi":"10.1016\/0957-4174(96)00016-4","raw":"Lingzhi L, Leong AC, Gay RKL (1996) Integration of information model (IDEF1) with function model (IDEF0) for CIM information systems design. Expert Syst Appl, 10 (3-4 SPEC. ISS.), 373-380","cites":null},{"id":37965592,"title":"Intelligent Knowledge-Based Systems: Information Technology.","authors":[],"date":"1995","doi":"10.1007\/978-1-4020-7829-3","raw":"Leondes CT (1995) Intelligent Knowledge-Based Systems: Information Technology. Kluwer Academic Publishers Norwell, Massachusetts","cites":null},{"id":37965615,"title":"Investigating product development process reliability and robustness using simulation.","authors":[],"date":"2007","doi":"10.1080\/09544820601011690","raw":"Yassine A (2007) Investigating product development process reliability and robustness using simulation. J Eng Design 18: 545-561.doi:10.1080\/09544820601011690","cites":null},{"id":37965579,"title":"Knowledge-based approach to the generation of IDEF0 models.","authors":[],"date":"1995","doi":"10.1016\/0951-5240(95)00020-8","raw":"Ang CL, Luo M, Gay RKL (1995) Knowledge-based approach to the generation of IDEF0 models. Comput Integr Manuf 8:279-290. doi: 10.1080\/002075497195380","cites":null},{"id":37965558,"title":"Life cycle oriented design of technical Product-Service Systems.","authors":[],"date":"2006","doi":"10.1007\/1-4020-4617-0_21","raw":"Aurich JC, Fuchs C, Wagenknecht C (2006) Life cycle oriented design of technical Product-Service Systems. J Clean Prod 14:1480-1494. doi: 10.1016\/j.jclepro.2006.01.019","cites":null},{"id":37965554,"title":"Life Cycle Simulation for Analyzing Product Service Systems,","authors":[],"date":"2005","doi":"10.1109\/ecodim.2005.1619251","raw":"Komoto H, Tomiyama T, Nagel M (2005) Life Cycle Simulation for Analyzing Product Service Systems, EcoDesign 2005 386-393. doi:10.1109\/ECODIM.2005.1619251","cites":null},{"id":37965620,"title":"MCP RealizerSLM \u2013SLM Technology. Available at http:\/\/www.mcpgroup.com\/rpt\/rpttslm.html.","authors":[],"date":"2008","doi":null,"raw":"MCP-Group, 2008, MCP RealizerSLM \u2013SLM Technology. Available at http:\/\/www.mcpgroup.com\/rpt\/rpttslm.html.  Accessed 14 February 2008  [70] Gurr C, Tourlas K (2000) Towards the principled design of software engineering diagrams. ICSE 2000 509-518. doi: 10.1145\/337180.337371","cites":null},{"id":37965608,"title":"Model-based approaches to managing concurrent engineering.","authors":[],"date":"1991","doi":"10.1080\/09544829108901686","raw":"Eppinger SD (1991) Model-based approaches to managing concurrent engineering. J Eng Design 2: 283-290. doi:10.1080\/09544829108901686","cites":null},{"id":37965593,"title":"Modelling Of Information Flow Approach Using SADT and Petri Nets, Factory","authors":[],"date":"1994","doi":"10.1049\/cp:19940879","raw":"Hilt B, El Mhamedi A, Noaghiu C (1994) Modelling Of Information Flow Approach Using SADT and Petri Nets, Factory 2000 326-331 [45] Zhou MC, DiCesare F (1993) Petri Net Synthesis for Discrete Event Control of Manufacturing Systems, Kluwer Academic Publishers, London","cites":null},{"id":37965600,"title":"Petri nets for simulation and modelling of construction systems.","authors":[],"date":"1997","doi":"10.1061\/(asce)0733-9364(1997)123:2(105)","raw":"Wakefield RR, Sears GA (1997) Petri nets for simulation and modelling of construction systems. J Constr Eng M ASCE 123: 105-12. doi:10.1061\/(ASCE) 0733-9364(1997)123:2(105)","cites":null},{"id":37965597,"title":"Petri nets: properties, analysis, and applications.","authors":[],"date":"1989","doi":"10.1109\/5.24143","raw":"Murata T (1989) Petri nets: properties, analysis, and applications. Proc IEEE 77: 541-580. doi:10.1109\/5.24143","cites":null},{"id":37965610,"title":"Product configuration analysis with design structure matrix,","authors":[],"date":"2006","doi":"10.1108\/02635570610688896","raw":"Helo PT (2006) Product configuration analysis with design structure matrix, Ind Manage Data Syst 106: 997-1011. doi: 10.1108\/02635570610688896","cites":null},{"id":37965552,"title":"Product-service systems and sustainability: Opportunities for sustainable solutions. UNEP TIE, Paris. Available at: http:\/\/www.uneptie.org.\/scp\/design\/pdf\/pss-imp-7.pdf.","authors":[],"date":"2002","doi":null,"raw":"Manzini E, Vezzoli C (2002) Product-service systems and sustainability: Opportunities for sustainable solutions. UNEP TIE, Paris. Available at:  http:\/\/www.uneptie.org.\/scp\/design\/pdf\/pss-imp-7.pdf. Accessed 15 Nov 2008","cites":null},{"id":37965553,"title":"Product-services as a research field: past, present and future; Reflections from a decade of research.","authors":[],"date":"2006","doi":"10.1016\/j.jclepro.2006.01.022","raw":"Tukker A, Tischner U (2006) Product-services as a research field: past, present and future; Reflections from a decade of research. J Clean Prod 14:1552-1556. doi:10.1016\/j.jclepro.2006.01.022","cites":null},{"id":37965578,"title":"Project management in manufacturing using IDEF0.","authors":[],"date":"1991","doi":"10.1016\/0263-7863(91)90041-s","raw":"Sullivan DO (1991) Project management in manufacturing using IDEF0. Int. J. Project Manage 9:162-168. doi:0263-7863\/91\/030162-07","cites":null},{"id":37965571,"title":"Proposing an information flow analysis model to measure memory load for software development.","authors":[],"date":"2000","doi":"10.1016\/s0950-5849(00)00117-8","raw":"Du TC, Lin CJ, Liu C\u2013G (2000) Proposing an information flow analysis model to measure memory load for software development. Inform Software Tech 42:743-753. doi: 10.1016\/S0950-5849(00)00117-8","cites":null},{"id":37965580,"title":"Reengineering of design and manufacturing processes.","authors":[],"date":"1994","doi":"10.1016\/0360-8352(94)90048-5","raw":"Kusiak A, Larson TN, Wang J (1994) Reengineering of design and manufacturing processes. Comput Ind Eng 26:521-536. doi:10.1016\/S0360-8352(00)00059-0","cites":null},{"id":37965555,"title":"Reference Models and Modeling Languages for Product-Service Systems Status-Quo and Perspectives for Further Research.","authors":[],"date":"2008","doi":"10.1109\/hicss.2008.369","raw":"Becker J, Beverungen D, Knackstedt R (2008) Reference Models and Modeling Languages for Product-Service Systems Status-Quo and Perspectives for Further Research. HICSS-41: 105. doi: 10.1109\/HICSS.2008.369","cites":null},{"id":37965564,"title":"Refinement of information flow architectures.","authors":[],"date":"1997","doi":"10.1109\/icfem.1997.630427","raw":"Philipps J, Rumpe B (1997) Refinement of information flow architectures. IEEE ICFEM 1997 203-212. doi: 10.1109\/ICFEM.1997.630427","cites":null},{"id":37965565,"title":"Report of the World Commission on Environment and Development.&quot; General Assembly Resolution A\/RES\/42\/187,","authors":[],"date":"1987","doi":null,"raw":"United Nations. 1987. &quot;Report of the World Commission on Environment and Development.&quot; General Assembly Resolution A\/RES\/42\/187, 11 December 1987. Available at http:\/\/www.un.org\/documents\/ga\/res\/42\/ares42-187.htm. Accessed 21 May2008","cites":null},{"id":37965574,"title":"Retrieving information from data flow diagrams. WCRE","authors":[],"date":"1995","doi":"10.1109\/wcre.1995.514690","raw":"Butler G, Grogono P, Shingha R, Tjandra I (1995) Retrieving information from data flow diagrams. WCRE 1995 22-29.doi: 10.1109\/WCRE.1995.514690","cites":null},{"id":37965568,"title":"Reviewing software diagrams: a cognitive study,","authors":[],"date":"2004","doi":"10.1109\/tse.2004.1265814","raw":"Hungerford BC, Hevner AR, Collins RW (2004), Reviewing software diagrams: a cognitive study, IEEE T Software Eng 30:82-96. doi:10.1109\/TSE.2004.1265814","cites":null},{"id":37965561,"title":"Software Engineering, 4th edn.","authors":[],"date":"1992","doi":null,"raw":"Sommerville I (1992) Software Engineering, 4th edn. Addison Wesley, London","cites":null},{"id":37965619,"title":"Strategy of manufacturing components with designed internal structure by selective laser melting of metallic powder,","authors":[],"date":"2007","doi":"10.1016\/j.apsusc.2007.08.046","raw":"Yadroitsev I, Thivillon L, Bertrand Ph and Smurov I, (2007) Strategy of manufacturing components with designed internal structure by selective laser melting of metallic powder, Appl Surf Sci, vol. 254, issue 4, pp 980-983 doi: 10.1016\/j.apsusc.2007.08.046","cites":null},{"id":37965570,"title":"Structured Analysis and System Specification.","authors":[],"date":"1979","doi":"10.1007\/978-3-642-59412-0_33","raw":"DeMarco T (1979) Structured Analysis and System Specification. Yourdon Press, New Jersey","cites":null},{"id":37965572,"title":"Structured Analysis for Requirements Definition.","authors":[],"date":"1977","doi":"10.1109\/tse.1977.229899","raw":"Ross DT, Schoman KE (1977) Structured Analysis for Requirements Definition. IEEE T Software Eng SE-3:6 \u2013 15. doi:10.1109\/TSE.1977.229899","cites":null},{"id":37965603,"title":"Structured programming concepts,","authors":[],"date":"1987","doi":null,"raw":"LaBudde K (1987) Structured programming concepts, McGraw-Hill, New York,","cites":null},{"id":37965575,"title":"Structured Systems Analysis: Tools and Techniques.","authors":[],"date":"1979","doi":null,"raw":"Gane C, Sarson T (1979) Structured Systems Analysis: Tools and Techniques. Prentice-Hall, New Jersey","cites":null},{"id":37965617,"title":"Sustainable product-service systems.","authors":[],"date":"2000","doi":"10.1016\/s0016-3287(99)00098-1","raw":"Roy R (2000) Sustainable product-service systems. Futures, 32:289-299. doi: 10.1016\/S0016-3287(99)00098-1","cites":null},{"id":37965602,"title":"Systems Design and Documentation: An Introduction to the HIPO Method,","authors":[],"date":"1976","doi":null,"raw":"Katzan H (1976) Systems Design and Documentation: An Introduction to the HIPO Method, Van Nostrand Reinhold, New York","cites":null},{"id":37965589,"title":"The Application of GRAI as a Framework for Manufacturing Strategy Process. Factory","authors":[],"date":"1994","doi":"10.1049\/cp:19940874","raw":"Wainwright CER, Ridgway K (1994) The Application of GRAI as a Framework for Manufacturing Strategy Process. Factory 2000 294-301. doi:10.1049\/cp:19940874","cites":null},{"id":37965612,"title":"The design structure system: a method for managing the design of complex systems.","authors":[],"date":"1981","doi":"10.1109\/tem.1981.6448589","raw":"Steward DV (1981) The design structure system: a method for managing the design of complex systems. IEEE Trans Eng Manage 28: 71-74","cites":null},{"id":37965573,"title":"The impact of context-aware fisheye models on understanding business processes: An empirical study of data flow diagrams.","authors":[],"date":"2007","doi":"10.1016\/j.im.2006.10.004","raw":"Turetken O, Schuff D (2007) The impact of context-aware fisheye models on understanding business processes: An empirical study of data flow diagrams. Inform Manage 44:40-52. doi:10.1016\/j.im.2006.10.004","cites":null},{"id":37965616,"title":"The state-of-the art in Product Service Systems.","authors":[],"date":"2007","doi":"10.1243\/09544054jem858","raw":"Baines T, Lightfoot HW, Evans S, Neely A, Greenough R, Peppard J, Roy R, Shehab E, Braganza A, Tiwari A, Alcock JR, Angus JP, Bastl M, Cousens A, Irving P, Johnson M, Kingston J, Lockett H, Martinez V, Michele P, Tranfield D, Walton IM, Wilson H (2007) The state-of-the art in Product Service Systems. P I Mech Eng B-J Eng 221: 1543-1552. doi: 10.1243\/09544054jem858","cites":null},{"id":37965583,"title":"To Design Cellular Manufacturing Systems For An Electric Motor Manufacturer Using Grai Methodology. Factory","authors":[],"date":"1994","doi":"10.1049\/cp:19940859","raw":"Ho KF, Ridgway K, Lake BC (1994) To Design Cellular Manufacturing Systems For An Electric Motor Manufacturer Using Grai Methodology. Factory 2000 189-195. doi:10.1049\/cp:19940859","cites":null},{"id":37965605,"title":"User validation of information system requirements: some empirical results.","authors":[],"date":"1988","doi":"10.1109\/32.6180","raw":"Nosek, JT, Schwartz RB (1988) User validation of information system requirements: some empirical results. IEEE Trans Software Eng 14: 1372-1375. doi: 10.1109\/32.6180","cites":null},{"id":37965613,"title":"Using DSM for Modeling Information Flow","authors":[],"date":"2004","doi":"10.1080\/10286600310001638474","raw":"Oloufa, AA, Hosni YA, Fayez M, Axelsson, P (2004) Using DSM for Modeling Information Flow in Construction Design Projects. Civ Eng Environ Syst 21: 105-126. doi:10.1080\/10286600310001638474","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2011-02-28T00:00:00Z","abstract":"A product-service system (PSS) is a combination of products and services to\ncreate value for both customers and manufacturers. Modelling a PSS based on\nfunction orientation offers a useful way to distinguish system inputs and\noutputs with regards to how data are consumed and information is used, i.e.\ninformation flow. This article presents a review of diagrammatic information\nflow tools, which are designed to describe a system through its functions. The\norigin, concept and applications of these tools are investigated, followed by an\nanalysis of information flow modelling with regards to key PSS properties. A\ncase study of selection laser melting technology implemented as PSS will then be\nused to show the application of information flow modelling for PSS design. A\ndiscussion based on the usefulness of the tools in modelling the key elements of\nPSS and possible future research directions are also presented","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/140146.pdf","fullTextIdentifier":"http:\/\/dx.doi.org\/10.1007\/s00170-010-2765-5","pdfHashValue":"92064a85b97c14f6b908c97649689fa159df85b7","publisher":"Springer Science   Business Media","rawRecordXml":"<record><header><identifier>\noai:dspace.lib.cranfield.ac.uk:1826\/5403<\/identifier><datestamp>2012-06-19T10:44:31Z<\/datestamp><setSpec>hdl_1826_24<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>A review of information flow diagrammatic models for product-service systems<\/dc:title><dc:creator>Durugbo, Christopher<\/dc:creator><dc:creator>Tiwari, Ashutosh<\/dc:creator><dc:creator>Alcock, Jeffrey R.<\/dc:creator><dc:description>A product-service system (PSS) is a combination of products and services to\ncreate value for both customers and manufacturers. Modelling a PSS based on\nfunction orientation offers a useful way to distinguish system inputs and\noutputs with regards to how data are consumed and information is used, i.e.\ninformation flow. This article presents a review of diagrammatic information\nflow tools, which are designed to describe a system through its functions. The\norigin, concept and applications of these tools are investigated, followed by an\nanalysis of information flow modelling with regards to key PSS properties. A\ncase study of selection laser melting technology implemented as PSS will then be\nused to show the application of information flow modelling for PSS design. A\ndiscussion based on the usefulness of the tools in modelling the key elements of\nPSS and possible future research directions are also presented.<\/dc:description><dc:publisher>Springer Science   Business Media<\/dc:publisher><dc:date>2012-06-18T23:02:26Z<\/dc:date><dc:date>2012-06-18T23:02:26Z<\/dc:date><dc:date>2011-02-28T00:00:00Z<\/dc:date><dc:type>Article<\/dc:type><dc:identifier>C. Durugbo, A. Tiwari, J.R. Alcock. A review of information flow diagrammatic models for product-service systems. International Journal of Advanced Manufacturing Technology, 2011, Volume 52, Issue 9-11, pp1193-1208.<\/dc:identifier><dc:identifier>0268-3768<\/dc:identifier><dc:identifier>http:\/\/dx.doi.org\/10.1007\/s00170-010-2765-5<\/dc:identifier><dc:identifier>http:\/\/dspace.lib.cranfield.ac.uk\/handle\/1826\/5403<\/dc:identifier><\/oai_dc:dc><\/metadata><\/record>","journals":[{"title":null,"identifiers":["issn:0268-3768","0268-3768"]}],"language":{"code":"en","id":9,"name":"English"},"relations":[],"year":2011,"topics":[],"subject":["Article"],"fullText":"A review of information flow diagrammatic models for \nproduct\u2013service systems \n \n \n \nAbstract: A product\u2013service system (PSS) is a combination of products and services to create value for both \ncustomers and manufacturers. Modelling a PSS based on function orientation offers a useful way to distinguish \nsystem inputs and outputs with regards to how data are consumed and information is used, i.e. information flow. \nThis article presents a review of diagrammatic information flow tools, which are designed to describe a system \nthrough its functions. The origin, concept and applications of these tools are investigated, followed by an analysis of \ninformation flow modelling with regards to key PSS properties. A case study of selection laser melting technology \nimplemented as PSS will then be used to show the application of information flow modelling for PSS design. A \ndiscussion based on the usefulness of the tools in modelling the key elements of PSS and possible future research \ndirections are also presented. \n \n \n \n \n \n \n \n1. Introduction \nA product\u2013service system (PSS) [1] is a concept that offers value proposition based on the \ndelivery of integrated products and services [2\u20134]. It involves considering factors relating to the \nlife cycle of products, closely linking products and services, and establishing links (with \ncustomers and other manufacturers) to aid product\/service delivery. Once these factors have been \nconsidered, the next step should involve the modelling of business requirements for the \ndevelopment of an effective and efficient PSS [5]. These business requirements define how \ncompanies can meet customer demands for complex solutions that combine products and \nservices. Function-oriented modelling [6, 7], object-oriented modelling [8], conceptual \nmodelling [5] and service modelling [9] are some approaches to modelling the business \nrequirements for a PSS.  \nFunction orientation is an approach to design which decomposes a system into a set of \ninteracting functions [10]. Decomposition or \u2018top-down\u2019 analysis is a term which describes the \nprocess of breaking down a system into smaller manageable parts. Modelling this functional \ndecomposition is an activity which could aid in identifying products and services within a PSS \n[5]. This process could be applied to analyse existing systems, to redesign systems or to develop \nnew systems [11].  \nThe function-oriented approach is classified into three main categories or species: mathematical \naxioms, tree structure and function input and output [12]. Mathematical axioms are employed for \ncomplete description of the system in conformance with precise rules while tree structures \nidentify functions without the involvement of data used. Function input and output distinguishes \nsystem inputs and outputs with regards to how data are consumed and information is used.  \nThis article is concerned with the third category\u2013function input and output, especially \ninformation flows in systems. Information flow is used here and throughout this article, as an \napproach to illustrating the architecture of a system or organisation describing inputs and \noutputs. This architecture influences the system\u2019s efficiency, adaptability and the reusability of \ncomponents [13]. \nAccording to van Gigch [14], \u2018a system is an assembly or set of related elements\u2019. A PSS \ntherefore includes products and services as well as other related elements such as information \nand communication technologies [2] and infrastructure [15] that aid delivery processes of a PSS. \nConsequently, modelling information flow for a PSS is an important measure for assessing the \nlevel of redundancy and inefficiency in PSS delivery processes [6]. This is because an \ninformation flow model can be used to assess possible actors, roles and scenarios for the delivery \nof integrated products and services [16]. Recommendations based on these assessments can then \nbe applied for improving quality, efficiency and financial performance of a PSS in accordance \nwith ISO 9000 and ISO 14000 [6].  \nIn addition, ISO TR 9007 maintains that models of information can provide a common basis for \ndifferent working groups to represent, understand and manipulate the behaviour a set of entities \n[17]. Within the context of a PSS, an information flow model can therefore be used as a common \nbasis for PSS designers and operators to describe \nPSS processes. \nThe aim of this article is to review existing, diagrammatic, function-oriented information flow \nmodelling tools. The paper seeks to contribute to knowledge by analysing these modelling tools \nin terms of their usefulness as modelling tools for PSS design. A case study of selective laser \nmelting technology implemented as a PSS will also be applied to demonstrate the use of \ninformation flow modelling for PSS. The paper concludes by discussing possible use of the \nreviewed modelling tools for PSS design and by making recommendation for future research. \n \n \n2. Diagrammatic information flow tools \nHungerford et al. [18] have asserted that diagrams or diagrammatic reasoning are better suited to \nsolving problems created by increasing complexity in systems when compared with text-based \n(sentential) representations. They highlight three main reasons for this assertion. \nFirstly, diagrams promote information clusters (grouping of information), thus eliminating the \nneed to conduct large amounts of searches associated with problem-solving inferences. \nSecondly, diagrams promote information clusters based on a single element, hence eliminating \nthe need to match symbolic labels. Thirdly, diagrams offer facilities that support a wide range of \nperceptual inferences, which are simple and easy to use. \nBecker et al. [5] have suggested that standard models (as-is models) should be identified and \nserve as a starting point for models of planned systems (to-be-models). This paper presents, as a \nfirst step towards this approach, an analysis of some key diagrammatic information flow models. \nDiagrammatic tools beyond the scope of information flow, for example models for timeline \norientation (UML sequence diagrams), process orientation (flow chart diagrams) or state \norientation (state transition diagrams), are omitted. \nThe information flow diagrammatic models identified from literature are tabulated in Table 1. \nThey include data flow diagrams, Integrated DEFinition method of modelling functionality and \ninformation modelling (IDEF\u00d8 and IDEF1), Graphes \u00e0 R\u00e9sultats et Activit\u00e9s Interreli\u00e9s (GRAI) \ngrids and nets, Petri nets, Input-Process-Output diagrams and design structure matrices. Each \nmodelling approach has its strengths and weaknesses, which must also be taken into \nconsideration by PSS designers and operators. \n \nTable 1 A list of Function-Oriented Information flow diagrammatic models found in literature \nModelling Tool Description Literature \nData flow diagrams  Analyses information flow within and between \norganisations or systems; applied for the design and \ndeployment of information systems \n[12, 18\u201326]  \nIntegrated DEFinition method of \nmodelling functionality and \ninformation modelling(IDEF\u00d8 \nand IDEF1) \nIllustrates information flow along with constraints and \nmechanism which affect system functions; developed \nfrom the Structural Analysis and Design Technique \n(SADT) approach \n[11, 34, 27\u201336]  \nGraphes \u00e0 R\u00e9sultats et Activit\u00e9s \nInterreli\u00e9s (GRAI) grids and nets \nSupports information flow in decision communication, \nfeedback and review; part of the GRAI methodology \n[25, 34, 37\u201343]  \nPetri nets Represents automated and event-driven information \nflow in systems; \n[44\u201351]  \nInput-process-output (IPO) \ndiagrams \nDescribes and documents the organisation and logic of \ninformation flow; integral to the Hierarchy plus Input-\nProcess-Output (HIPO) approach \n[12, 52\u201356] \nDesign structure matrix Depicts dependency, independency, interdependency \nand conditionality of information flow for systems and \norganisations \n[57\u201364]  \n \n2.1. Data flow diagrams \nData flow diagrams (DFDs) are very popular diagrammatic models [18, 19] used in describing \ninformation exchanges in a variety of organisations [20]. They were developed by DeMarco [21] \nin the late 1970s as a tool for analysing sequential information flows [10, 22]. DeMarco defined \nDFDs as \u2018network representations\u2019 of automated, semi-automated or manual systems. DFDs \ndescribe how information flows logically or physically in a system. The logical view describes \nhow information flow is expected to happen, while the physical view refers to what actually \nhappens. In some cases, both the physical and logical views may be the same. \nAlthough a wide range of symbols are used in DFD, most authors use a notation for DFDs which \ninvolves four key features: processes, external entities, data stores and data flows [21, 24, 25] as \nshown in Fig. 1a. \n \n1. 2.\nDB1\n3.\nA\nB\nZ\nE\nD\nC\n1.1 1.3\n1.2\nDB2\nA\nH\nC G\nF D\nI\n2.\n3.B\nZ\nE\nD\nDB1\n \nD1  Customer Records \n Type of Service \nPSS\np\nvs\nContext DFD\n1. 2.\nDB1\n3.\nOverview  DFD\n1.1 1.3\n1.2\nDB2\n2.1 2.3\n2.2\nDB3\nA\nA\nB\nB Z\nZ\nE\nA\nD\nH\nC G\nF D\nI\nZY\nX\nW\nV\nC\nb) Explosion\n \nIdentify \nitem \n1 \n \nCredit \nBureau \nc \nProcess\nExternal Entity\nData Store\nData Flow\nc) Expansion\na) Symbols\nData Flow Diagram (DFD) \n \nFig 1 Approaches for Data Flow Diagrams (DFDs): (a) DFD representations; (b) Explosion approach to DFD \ndevelopment; and (c) Expansion approach to DFD development \n \nWith regards to design approaches, Du et al. [22] identified two main schemes for designing \nDFD (see Fig. 1b, c). The expansion approach described by Gane and Sarson [26] is the first \nscheme. It applies a single DFD, which is iteratively expanded till the entire system has been \ncomprehensively modelled. In the other scheme, the expansion approach as explained in [21], a \nsingle diagram is created initially. This diagram is known as the context DFD. The system within \nthis context DFD is then exploded to give the overview DFD. After these first two steps, multiple \nDFDs are constructed, with each successive model derived as an explosion from a single activity \nstep in a parent or preceding diagram. This process is continued till the entire system has been \ncomprehensively modelled. A slight variation of the explosion approach is employed in the \nStructural Analysis and Design Technique developed by Softech, Inc [21]. \n \n2.2. IDEF\u00d8 and IDEF1 \nThe IDEF technique is an approach to modelling and analysing systems and enterprises. It is \nmade up of a suite of models which contain a hierarchy of diagrams, text and glossary [27]. \nThese models include IDEF\u00d8, IDEF1, IDEF1X, IDEF3, IDEF4 and IDEF5. \nThe IDEF\u00d8 or the Integrated DEFinition method of modelling functionality is a widely used \ntechnique employed by organisations, industries and governments to support their enterprises \nand applications [28, 29]. Sullivan [30] asserted that the IDEF\u00d8 approach was borne out of the \nneed for structured techniques which can be applied in systems, such as manufacturing systems, \ninvolving information flow. \n \nLabel\nRelation\nOutputInput\nMechanism\nPROCESS\nIntegrated DEFinition method of \ninformation modelling (IDEF1)\nEntity \nName of entity\nEntity relation\nIntegrated DEFinition method of \nmodelling functionality (IDEF\u00d8)\nAttachment point\n \nFig 2 Representations for Integrated DEFinition method of modelling functionality and information modelling \n(IDEF\u00d8 and IDEF1) \n \nThe foundation for the IDEF\u00d8 modelling technique lies in the Structural Analysis and Design \nTechnique (SADT) developed by Douglas T. Ross at SofTech, Inc in the early 1970s [28, 30\u2013\n33]. SADT is a function-oriented approach which adopts an all-inclusive modelling framework, \nunlike data flow diagrams, which concentrate on information flow in an organisation [33]. In \n1978, the U.S. Air Force adopted the SADT as its modelling technique to support its Integrated \nComputer Aided Manufacturing (ICAM) programme [29, 32]. It is this approach, later revised by \nSofTech, which now exists as the IDEF\u00d8 modelling approach. Consequently, IDEF\u00d8 can be \nused for all kinds of function-oriented modelling for system-based applications, such as \noperation, activity, process or behavioural modelling needed by a system such as a PSS. \nIDEF\u00d8 models contain two main diagrammatic modelling components: boxes and arrows [27, \n29, 33] as shown in Fig. 2. The idea in an IDEF\u00d8 model is to begin with a single top-level \ndiagram (tagged as A\u00d8) which provides a complete but abstract depiction of the system [28]. \nThis top-level diagram is then decomposed into a series of child diagrams, applying the \nexplosion approach (see Fig. 1b). Ho et al. [34] suggested that decomposition in IDEF\u00d8 \nmodelling should continue until a complete description of the system has been attained. This \nprocess, they contend, removes ambiguity and aids its use and implementation. \nBased on the definition of information flow for this review, the IDEF\u00d8 approach can be used to \nmodel information flow. In other words, the IDEF\u00d8 approach illustrates the inputs and outputs of \na system. For information modelling to complement the IDEF\u00d8 approach, the IDEF1 (Integrated \nDEFinition method of modelling Information) is recommended [35]. IDEF1 offers basic \nprimitives for describing information that must be managed for an organisation to fulfil its \nobjectives [36]. It identifies how functions described in IDEF\u00d8 can share data\/information. It \nalso offers three main modelling primitives: boxes that depict system functions, arrows that \nindicate data, information and object interface, and attachment points between arrows and points \nthat represent types of interface (input, output, control or mechanism) described in the IDEF\u00d8 \nmodel. \n 2.3. GRAI grids and nets \nThe GRAI (Graphes \u00e0 R\u00e9sultats et Activit\u00e9s Interreli\u00e9s) Engineering method was developed by \nGRAI Laboratory at the University of Bordeaux in the 1970s [37, 38]. Figure 3 shows the GRAI \nModelling Technique which is based on a hierarchical conceptual model (the GRAI model) for \nsupporting decision-making processes during manufacturing and establishing information flow \nfor facilitating these decisions [37\u201340]. \nIn [38], the GRAI model is divided into two parts: a macrostructure which displays the \narchitecture of the overall system arranged in a hierarchy and a microstructure for system \ncomponents which are identified in the macrostructure. The macrostructure of the GRAI model \n(see Fig. 3a) decomposes the system to be designed into three sub-systems [39, 41, 42]. \nThe technological system presents the means for delivering products and services such as people, \nmachines and materials. It is also concerned with information flows associated with these \ntangible\/intangible offerings for meeting customer expectations. The decision system details the \nlocus of decision in the hierarchy. This hierarchy is arranged according to decision-making levels \nwhich contain blocks known as decision centres. The information system links the decision and \nphysical system and the enterprise environment. It also transforms and memorises information. \nThe microstructure is concerned with decision centres in terms of their intelligence based on \nrecognising the need for a decision to be made, their modelling capabilities of derived or \ngathered information, and their choice for selecting appropriate solutions based on criteria, \nconstraints and context. \nTwo main diagrammatic tools are used in the GRAI model: GRAI grids and GRAI nets [34, 38]. \nThe latter is designed to pinpoint discrepancies at the macrostructure, while the former reveals \ninconsistencies at the microstructure. Ho et al. [34] contended that the intention of these tools is \nfor system designers or decision makers to review iteratively the GRAI model until discrepancies \nand inconsistencies are resolved or within acceptable limits of defined goals and objectives. Both \ntools are designed to model activities in systems. Doumeingts [38] defined an activity in a GRAI \nmodel as an operation which changes an initial state into a final state. Several GRAI grids can be \ndeveloped based on requirements for realising goals and objectives or according to the \ncomplexity of the system [38, 43]. These grids are also characterised by cells for decision centres \nand relationships between these decision centres [43]. \nRelationships are used in GRAI models to specifically describe information flow and decision \nflow for co-ordination and synchronisation of activities in an organisation or system [41]. \nRelationships are depicted diagrammatically as arrowed lines (see Fig. 3b). Decision flow \nbetween two decision centres can be represented as large, emboldened lines, while information \nflow can be depicted as small dashed lines.  \nb) GRAI Grid\nDecision Horizon (y=years; m=months; w=weeks; d=days) \nReview Period\nDecision Flow\nInformation Flow\nc) GRAI Net\nTECHNOLOGICAL\nSYSTEM\nINFORMATIONAL\nSYSTEM\nDECISIONAL\nSYSTEM\nExternal Information\nObjectives\nResources,\nRequirements\nProvisions\nInternal Information\nOrders\nTO DO\nRESOURCES\nRESULTS\nTO \nDECIDE\nInitial \nstate\nInitial \nstate\nFinal \nstate\nFinal \nstate\nRESULTS\nExecution Phase Decision Phase\na) GRAI Model\nExternal Internal\nFunction \nHorizon    \n  \/Period\nINFORMATION\nMANAGE CONTROL MAINTAINPLAN\nH=1y\nP=1y\nH=3m\nP=1y\nH=1d\nP=realtime\nH=5m\nP=3m\nH=6w\nP=4w\nH=1m\nP=2w\nGraphes \u00e0 R\u00e9sultats et Activit\u00e9s Interreli\u00e9s (GRAI)\n \nFig 3 Graphes \u00e0 R\u00e9sultats et Activit\u00e9s Interreli\u00e9s (GRAI) Modelling Technique \n \nGRAI nets are developed after GRAI grids and describe the activities in a decision centre [40]. \nThey are done to complement GRAI grids which give high-level diagrammatic representations of \ndecisions without providing information about how decisions are made [41]. GRAI nets, as \nshown in Fig. 3c, are made up of three constructs: states, activity and supports. States are \nrepresented by circles or ovals. Activities are represented as directed arrows, while the supports \n(information and technological resources) are represented as rectangles. \nGRAI grids show information flow but do not represent or model them. GRAI nets on the other \nhand can be used to model this information flow. GRAI nets represent information flow by \nmeans of events or sequences of events in the manufacturing process or system. GRAI nets also \ndepict states and state changes. Although originally designed for the development of production \nmanagement systems, GRAI models can be used where a system is required among different \ngroups or processes [20] like a PSS. \n \n2.4. Petri nets \nPetri nets (PNs) or place-transition nets were first proposed by Carl Adam Petri in 1962 for \nmodelling processes in an event-driven system [44, 45]. These systems exhibit a wide range of \ncharacteristics such as non-determinism, concurrency, synchronicity as well as distributed and\/or \nparallel features. PNs can also be used for representing the information flow in development and \nsimulation of automated manufacturing systems [46, 47]. Murata [48] described PNs as useful \nmathematical and diagrammatical tools for representing control flow in systems. \nDiagrammatically, PNs can be used to methodically describe and communicate ideas among \ndesigners and implementers. A PN is depicted as a directed, weighted, bipartite graph made up of \nfour main symbols as shown by Fig. 4. Black dots represent tokens. Tokens may be resources, \ncounters, metrics or attributes. Circles show places and are marked with a non-negative integer k \nof token. Bars depict transitions, while arcs connect places to transitions. In the modelling of \nPNs, transitions represent events in a system, while places illustrate conditions for occurrence. \nThe tokens provide the premise for the conditions just as input and output places offer pre- and \npost-conditions for the event respectively. \nMathematically, PNs are presented as tuples [44, 45]. A tuple is a fixed, ordered list of elements \nor objects. Tuples may contain multiple occurrences of elements and objects. A Petri net is \ndefined as a quad-tuple (P, T, I and O) where: \nP  is a set of places i.e. P = {p1, p2, p3, \u2026, pn}; \nT  is a set of transitions i.e. T = {t1, t2, t3, \u2026, tn}, with  \uf066\uf0b9TP\uf049 and \uf066\uf0b9TP\uf055  (\u2018\u00f8\u2019 refers \nto a tuple with no elements or objects);  \nI  is an input function specifying Arcs directed from places to transitions i.e. \nNTPI \uf0ae\uf0b4 )(:  (where N is a tuple of non-negative integers); and \nO  is an output function specifying Arcs directed from transitions to places i.e. \nNTPO \uf0ae\uf0b4 )(: . \nBy applying these definitions, state and algebraic equations can be derived to define the \nbehaviour and mathematical models which govern the behaviour of systems. \nLien [49] described two main principles applied in Petri-net theory: transition enabling and \ntransition firing. A transition is enabled or fireable if its input places all hold at least one token. A \ntransition can be fired by two processes. First, one token is removed from each input place and \nsecondly, the addition of a token to an output place. These symbols and configurations used in \nPNs can assist designers in describing some important system characteristics. These and other \nrelated principles, theories and formulae are extensively covered in literature [45, 48, 50]. \nWakefield and Sears [51] identified six possible constructs during the development of PNs. \nThese constructs are depicted in Fig 4 and can be described in terms of information flow as \nfollows. Sequential execution imposes precedence in the flow of information; concurrency \nshows parallel information flow; synchronisation coordinates information; merging combines \ninformation required to carry out a function; conflict, in which multiple functions request access \nto transactions are enabled but firing is disabled; and confusion which allows conflict and \nconcurrency to coexist. The two latter issues can be remedied by assigning priorities or \nassociating probabilities to appropriate transitions [48]. \n \nToken TransitionPlace Arc\na) b)\nc) d)\ne)\nf)\nPetri Nets (PNs)\n \nFig 4 Petri net representations and constructs: a) Sequential execution; b) Concurrency; c) Synchronisation; d) \nMerging; e) Conflict; and f) Confusion \n \n2.5. Input-process-output diagrams  \nThe HIPO (Hierarchy plus Input-Process-Output) technique was developed by IBM\u2019s System \nDevelopment Division (SDD) in the late 1970s [52, 53]. It offers diagrammatic and textual \nrepresentations for the documentation of systems, programs and processes. The HIPO technique \nis made up of two main components [52-56]: Visual Table of Contents (VTOC) and Input-\nProcess-Output (IPO) diagrams (See Fig 5). \nThe VTOC is represented as a chart showing how functions of a system or modules of a program \nare decomposed in a tree format. It offers a top-down analysis of a program, system or process \nand is made up of three main parts as shown in Fig 5b. The hierarchical diagram contains an \nechelon of numbered and named boxes which correspond to IPO diagrams and is read from left \nto right. A legend and an optional description for each function may also be included in the \nVTOC. \n \n \n1.0\n3.02.0 4.0\n2.1\n4.1\n4.2\nINPUT PROCESS OUTPUT\nHIERARCHY \nINPUT OUTPUT\n \nINPUT PROCESS OUTPUT\n __________________\n __________________\n __________________\n __________________\n __________________\n __________________\n2.0 4.1\n __________________\n __________________\n __________________\n __________________\n __________________\n __________________\n1.\n2.\n __________________\n __________________\n __________________\n2.\n1.\n3.\n \n \n \n  \nFrom 2.1\nTo 4.2\nDescription\n __________________\n __________________\n __________________\nExtended Description\n __________________\n __________________\n __________________\nLegend\nHierarchy plus Input-Process-Output (HIPO) \nb) Visual Table of Contents\nc) Input-Process-Output (IPO)  \n(overview)\nPROCESS\nd) Input-Process-Output (IPO)  \n(detailed)\na) HIPO Technique\n \nFig 5 The Hierarchy plus Input-Process-Output (HIPO) technique and Input-Process-Output (IPO) diagrams \n \nIPO diagrams are developed after the VTOC has been constructed. They describe functions (or \nmodules) in the VTOC in terms of their inputs and outputs by means of processes which may be \nenclosed or encapsulated in the system. IPO diagrams are presented as pages in a form of \npseudo-code showing local or functional information flow [55]. A page is developed for each \nfunction (or module). Each page (IPO diagram) contains three main blocks labelled as input, \nprocess and output as shown in Fig 5d. The idea is to show what is used (input) by the module; \nprocessing performed (translations and transactions) by the module represented as a high level \ntextual representation pseudo code; and fields changed or written to (output) by the module [54-\n56]. \nStay [52] traces the origin of the HIPO approach to structured design which offers methods for \ntransforming a description into a functional, modular program structure. He identifies two \nimportant concepts of structured design exploited by the HIPO technique: module strength \n(relationships within a module) and module coupling (relationship between modules). Originally \ndesigned for the documentation of programs [52, 56], its use can also be extended for other \nsystem related activities. The activities can include planning, development and implementation \nwhere the HIPO technique can offer information about the functions or \u2018what a system does\u2019 \n[53]. \nMartin and McClure [12] also suggested its use for both the analysis and the design of systems. \nThey recommend its use during analysis to aid definition of various system components as a \nmeans of kick-starting the design process. For design, they highlight its use as an enabler for \ndescribing procedures of system components. \n \n2.6. Design structure matrix  \nThe Design Structure Matrix (also known as problem solving matrix, dependency structure \nmatrix and design precedence matrix) is a compact, visual, generic matrix-based framework for \nthe graphical and numerical analysis of decomposition and integration in systems [57-59]. \nSyed and Berman [60] traced the history of the Design Structure Matrix (DSM) approach to \nearlier concepts such as matrix mathematics, network precedence diagrams, network relationship \ndiagrams and Interface-to-interface (N-to-N or N2). However, DSM in its current form was \ndeveloped by Donald Steward as a tool \u2018to analyse the flow of information\u2019 in the design, \ndevelopment and operation of systems [61, 62]. \nThe DSM is implemented as an N-square matrix (See Fig 6) which represents functions and \nprocesses of systems in constructs of four forms: sequential, concurrent, coupled or conditional \n[58, 60, 63]. This representation can be applied to depict information flow among types of \nsystems and organisations. These system and organisational types can contain elements in the \nform of components or parameters or resources of the system, development phases, position or \nresponsibilities of members in an organisation and so on. \n \nElements\nDependency\na) Binary DSM b) Numerical DSM\nBinary \nattribute\nNumerical \nattribute\nA\nB\nC\nD\nE\nF\nA B C D E F\nG\nH\nG H\n1 2\n3\n2 3\n1\nA\nB\nC\nD\nE\nF\nA B C D E F\n3 2 1G\nH\nG H\nDesign Structure Matrix (DSM)\n \nFig 6 Design structure matrices according to attributes of marked cells \n \nA DSM can also be configured according to attributes of marked cells such as between binary \nDSM and numerical DSM [58, 61, 64]. Binary DSM typically involves the presence or absence \nof a mark (\u2018X\u2019 or \u2018\u25cf\u2019) while numerical DSM could be applied to indicate importance or \nprobability of repeating an element. In the DSM example in Fig 6, system elements or \ncomponents are represented along the shaded diagonal. Off-diagonal \u2018X\u2019 marks and numerical \nvalues indicate dependency i.e. of one element on another. The labelled \u2018X\u2019 symbol in Fig 6a \nindicates the dependency of element E on element F. \n \n \n3. Information flow models and product-service systems  \n \n3.1. Overview of Product-Service Systems \nAccording to the United Nations, a Product-Service System (PSS) is \u2018a competitive system of \nproducts, services, supporting networks and infrastructure\u2019 [15]. It is made up of services such as \nproduct maintenance and parts recycling, that focus on fulfilling customer needs in a manner that \nis competitive, life-cycle oriented and environmentally friendly. Several authors have defined, \ndescribed and reviewed the PSS concept by focusing on research and industrial perspectives. The \nreader is referred to works by Mont [1], Aurich [8], Morelli [16] and Baines et al. [65] for \ndetailed discussions of the PSS concept.  \nHowever, two perspectives on the PSS approach have received the most interest in literature: \nSustainable Product-Service System (SPS2) and Industrial Product-Service System (IPS2). In the \nSPS2 approach designers are encouraged to creatively generate ideas so as to reduce the \nenvironmental impacts of companies by factors between 4 and 20 [7, 66]. An IPS2 concentrates \non business\u2013to-business (B2B) relationships to deliver \u2018integrated product and service shares\u2019 \n[67]. It offers opportunities for dealing with difficulties and high capital costs associated with \nexpensive core technologies [8]. Core or enabling technology is used in this context to describe a \ntypically expensive device, tool or machinery that offers high-level technological competences \nand capabilities.  \nA widely accepted approach to the design and delivery of a PSS identifies three main categories \nof PSS value proposition: product-, use- or result-orientation [1, 7]. In the product-oriented \napproach, a company offers the sale of products and also opens channels for customers to access \nadditional services such as upgrades, maintenance, professional advice and consultancy. For the \nuse-oriented approach, a company maintains the rights to a product for use in a service \nenvironment made accessible to customers via services such as product leasing, product sharing, \nproduct pooling and product renting. Result-oriented approaches involve a company delivering \ncontents of a service to customers, independent of product choice. Schemes such as paying-per-\nunit service, delivering functional results, activity management and outsourcing, all fall under \nthis category.  \n \n3.2. Properties of Product-Service Systems and Information Flow Models \nA Product-service system exhibits several aspects that useful diagrammatic tools for information \nflow would be required to model successfully. These are summarised in Table 2. \nTable 2 Key properties of PSS (when viewed as information flows) that a modelling tool would need to successfully \nmodel \nProperty of Product-Service \nSystems \nCharacteristics Information Flow Issues Literature \nOpen systems  Input and outputs \nFunctions and processes  \nSystem architecture \nSystem components \nResource use \nValue creation for customer and \nmanufacturer \n[2, 4, 65] \nSocial construct Actors, roles and scenarios  \nTechnological and socio-\ncultural interactions  \nInterfaces and interconnections \nIndependency, collaboration and \ndistribution \n[6,16] \nBusiness model Nature of business \nDomain of application \nAvailable resources \nMode and structure of operation \nScale and scope of operation, \nOrientation and size of operation  \n[1-3, 5, 65] \n \nFirstly, PSS can be viewed as open process systems to describe processes and functions, which \nreceive inputs as resources and transmit outputs in the form of value. Inputs could include \nmaterials, manpower or information from market studies or customer feedback. Outputs in PSS \ncome in the form of integrated product and service provision. Baines et al. [65] described this as \na key premise for the PSS logic. They suggest that the PSS logic is based on the manufacturers\u2019 \nunderstanding of processes and functions. This understanding, they contend could be used to \ndecrease input (resources) and increase output (value). By applying an appropriate information \nflow model, a PSS could distinguish between functions and processes performed by its system or \norganisation. While processes can be used to describe specific activities that have to be carried \nout in an organisation, functions can be thought of as important areas of activity (such as \nresearch) within organisations [12].  \nSecondly, PSS can also be modelled as a social construct made up of actors, roles and scenarios \n[6]. This description is required to address what Morelli [16] described as communicational \nconcerns, which are important for the accurate design and development of a PSS. \nCommunicational concerns for PSS can include how processes and functions are controlled by \nindependent, collaborative or distributive means. This could be achieved by means of interfaces \nand interconnections for co-operative use and co-ordination of resources in multi-objective and \nmulti-goal driven systems like PSS. These facilities offer channels for technological and socio-\ncultural interactions which are necessary for the functioning of organisations [16]. Modelling \nthese interfaces and interconnections can also serve as an enabler for realising system objectives \nand goals. This is because a model presents a depiction of a set of system components or subject \narea; realised for understanding, analysing or improving the system [28]. When understood, \nthese interfaces and interconnects can be improved or redesigned for enhanced organisational \nproductivity [24] \nThirdly, PSSs offer value propositions in business models for social, economical and technical \nbenefits in relation to the nature of business, domain of application and available resources. This \nis discussed in further detail below. \nThe nature of the business is used in this context to describe the mode and structure of business \noperation. It can be used to model various aspects of a PSS such as: the set up and operation of \nan organisation; the interfacing of software which controls a product; interconnects and \ninterfaces for a product; processes and functions during manufacturing; schedule and record of \ninformation flow in service provisions; and activities requiring exchange of information \nthroughout the lifecycle of a provision for a customer. \nThe domain of application considers issues such as the orientation and scope of operation for a \nPSS. This consideration could be useful in identifying inter-domain actors, processes and \nfunction. These elements can in turn be used to propose how information flow policies are \napplied and operations are performed within a domain such as health-care or \ntelecommunications. Orientation is used here to describe the placement or adaptation of a \nbusiness to its market. This could be in terms of competing companies or exiting products. This \nconsideration with regards to the domain of application offers opportunities to support innovative \ndesign and development activities for a PSS based business. Scope of operation for a PSS \nfocuses to the area of operation of the business. The focus may be on a single area such as \nmicrofluidics or it could bring together various domains in a large system or organisation. \nAvailable resources such as capital, investment and manpower can present important \nconsiderations for choice of modelling technique. This relates to the scale or size of the company \nimplementing a PSS. It could also be crucial in deciding the technological facilities and \ncapabilities for communication and networking between business units. Some of these facilities \ncould include virtual private networks, video conferencing and other communication and \nnetworking solutions. Scale or scalability in used in this context to describe the ease or grace \nwith which a PSS can handle increasing business operations. Size on the other hand relates to the \nmagnitude of a PSS in terms of available resources of material, information and energy. \n \n \n4. Modelling information flows for product-service systems: a case study of selective laser \nmelting technology \nSelective laser melting (SLM) is an example of a manufacturing technique which promises \nimprovements in time to market, production rate, functionality, part accuracy and versatility \nwhen compared to traditional manufacturing techniques. [68] However, its mainstream adoption \nhas had one significant barrier \u2013 capital cost. A typical machine for SLM manufacturing such as \nthe MCP RealizerSLM [69] can cost as much as half a million pounds. The argument is that such \nhigh capital costs may not be justifiable since at the current rate of return, it could take a very \nlong time before the initial investment can be recouped.  \nThis section presents a case study of possible value propositions designed to implement SLM \ntechnology as an IPS2. A data flow model depicting information flow for the implementation of \nSLM as an IPS2 is also presented. \n \n \n4.1. Value proposals for SLM implemented as an IPS2 \nThe IPS2 approach offers opportunities for SLM machine manufacturers to develop and deliver \nbusiness models to facilitate the use of SLM technology. It does this by shifting focus from the \nsale of an SLM machine (a product) to value propositions associated with the SLM machine and \nthe integrated services required to support the life cycle of the machine.  \nFrom the perspective of a user (or customer), the life cycle of a product consists of product \npurchase, product use and product disposal [8]. During the purchase of the machine, services \nprovided by the manufacturer could include machine installation, providing samples of \nprototyping units and offering machine insurance. During the use of the machine, the machine \nmanufacturer could offer services such as regular maintenance and the supply of metal powder \nand replacement gaskets\/motors. For the disposal phase or end of life of the machine, services \nprovided by the manufacturer could include take back schemes and machine replacement.  \nBased on these services, possible value propositions for SLM implemented as an IPS2 could \ninclude: the sale of an SLM machine backed by a range of integrated services (product-oriented), \nan SLM machine backed by a range of integrated services made available to customer (use-\noriented), and an SLM machine backed by a range of integrated services that meets customer \nneeds (result-oriented). \n \n4.2. Information flow model for SLM implemented as an IPS2 \nAn example of information flow between a customer and the information system provided by a \nSLM manufacturer is presented. The focus of the example is to model information flow within \nthe social construct of an SLM implemented as an IPS2. In the example a customer interacts and \nnegotiates with an information system in order to request a service. \nIn order to accomplish this, a data flow diagram (DFD) has been developed as shown in Fig. 7. \nDFDs are suitable for this case because they are widely applied in the design of information \nsystems in organisations due to their ability to depict data flows and data stores associated with \nprocesses. The DFD in Fig. 7 shows information flow for the possible orientations (product, \nresult and use) of SLM implemented as an IPS2. In the diagram, the processes shown as rounded \nrectangles centre on interactions between the customer and the information system. The \ncustomer in this scenario is a business that requires the use of a SLM machine to develop product \ncomponents. Within the DFD, the customer is an external entity that initiates and terminates the \nfunction provided by the information system. Other external entities in this case are training \nstandards (regulatory bodies and standards regarding the SLM technology) and credit bureaus \n(firms that provide credit information for financial, investment and insurance purposes).  \nThe DFD also contains five main data stores: customer records, machine records, service team \nrecords, business records and sales records. Customer records provide a log of service that have \nbeen delivered to customers whereas machine records detail transactions during a machine\u2019s \nlifecycle such as maintenance, upgrades and software updates. Service team records shows the \nschedules and availability of service teams while business records provide details of SLM \ninstructors and financial advisers. The sales records contain sales entries for SLM customers. \nSelect \nservice\n1\nCheck \ncustomer \ndetails\n2 Customer \ncode\nService \ntype\nc\nCustomer\nb\nCredit Bureau\nCheck \nmachine \ndetails\n3Service \ncode\nMachine \ncode\nCheck \nservice \navailability\n4\nCheck \nprices\n10\nEnquiry \ndetails\nSelect \nmachine\n11\nUpdate \nrecords\n5\nSettle \nprice\n6\nCheck credit \ninformation\n9\nCustomer RecordsC1\nSelect \nservice\n7\nCustomer \nstatus\nt\nTraining \nStandards\nCheck \ntraining \nschedule\n8\n2\n1\n3\nc\nCustomer\nMachine RecordsM1 Service Team RecordsT1\nBusiness RecordsR1\nSales RecordsS1\nFinancing \ndetails\nAvailability \ndetails\nTraining \ndetails\nTraining \ncode\nTraining manual\nTraining code\nMachine code\nMachine code\nService \navailability\nPricing \ndetails\nReceipt\nMachine \ncodeCustomer \nstatus\nService codeMachine code\nMachine price\nMachine \ncode\nPayement\nService \ntype\nService \ncode\nFinancing \ncode\nMachine \nprice\n \nFig 7 Data flow diagram for an information system to implement selective laser melting as an industrial product-\nservice system \n \n \n5. Discussion \n \n5.1. Analysis of Modelling Tools \nAs earlier highlighted, each modelling approach has its strengths and weaknesses. Table 3 \nhighlights some strengths and weakness of the diagrammatic information flow modelling tools \ndescribed in previous sections. The table highlights relative ease of use, ease of interpretation, \ntime taken to construct and ability to model aspects of a system. \nIn the previous section, the properties of PSS that require successful modelling were highlighted. \nBelow, the strengths and weaknesses of the diagrammatic tools as methods of modelling these \nproperties are discussed. \nFor a PSS as an open system, different tools may be chosen depending on what is being \nmodelled. For instance, DFDs may be suitable for modelling the organisation of a PSS while the \nIDEF or GRAI approach may be suitable for representing PSS manufacturing process. An \nautomated device, software system or a manufactured instrument could be ideally modelled by \nPNs, IPO charts and Design Structure Matrices respectively. Similarly, a small company for \ninstance, may adopt a flexible and easy to maintain model such as a DFD while a large company \nrequiring a complete mapping of its functions and processes may opt for a DSM. \n \nTable 3 Strengths and Weaknesses of Information Flow Diagrammatic Models \nModelling \nTool \nStrengths Weaknesses  Related Tool \nData flow \ndiagrams \nSuitable for sequential representation \nof information flow \nFlexible and easy to maintain \nReadily available context makes it \neasy to translate and read \nVarying levels allows focus on area \nof interest \nPopularly used and supported in \nindustry \nIn large systems such as \nenterprises, these models may \nbecome  \ncumbersome in representation \ndifficult to interpret \ntime consuming in construction \nIgnores time dependent events or \nevent driven processes \n- \nIntegrated \nDEFinition \nmethod of \nmodelling \nfunctionalit\ny and \ninformation \nmodelling \n(IDEF\u00d8 \nand IDEF1) \nSuitable for analysing a business \nIdeas and concept are easy to grasp \nand apply \nAllows for controlled and \nincremental system description \nSupported by standards and widely \nused in industry \nSupported by closely related \nmethodologies such as IDEF3 for \nprocess flow \nMakes use of limited notation \nmaking them easy to interpret \nCan be time-consuming and \ninconsistent \nCan be difficult to integrate related \nmethodologies \nMay not be suitable for system \ndevelopment and documentation \n \nIDEF modelling \ntechnique \nGraphes \u00e0 \nR\u00e9sultats et \nActivit\u00e9s \nInterreli\u00e9s \n(GRAI) \ngrids and \nnets \nSuitable for supporting decision \nmaking processes in manufacturing \nenterprises \nHighlights opportunities for \nsynchronicity and concurrency in  \nsystems by depicting the durations \nfor the system processes \nEnhances enterprise performance by \noffering diagnosing mechanisms \nwhich can identify defects in \noperation and reasons for \nmanagement gaps  \nOnly concentrates on the \ninformation flow related to \ndecision making processes \nFails to provide structure details \nsuch as: enterprise processes, the \ndistribution and use of resources \nand the organisation or enterprise \nbeing modelled  \nGRAI \nmodelling \ntechnique \nPetri nets Suitable for automated or event-\ndriven systems \nBased on a solid mathematical \nfoundation \nAllows for extensions and \nmodifications \nTough to learn and popularize \nEasily becomes too complicated \neven in reasonably sized systems   \n- \nInput-\nprocess-\noutput \n(IPO) \ndiagrams \nSuitable for hierarchically structured \nprograms \nPresents a useful avenue to begin \nprogram and system designs \nProvides ready-made documentation \nof a system after its \nimplementation \nIdentifies procedural flow from input \nto output \nOffers clear definitions \nCan quickly become cluttered in \nbig programs or systems; \nbecoming difficult to interpret \nCan be bulky since it uses a page \nfor each module irrespective of \nmodule size \nDifficult to maintain \nNot widely used in industry \nLacks support for loops, \nconditions, data structures or data \nlinks  \nHIPO \n(Hierarchy \nplus Input-\nProcess-\nOutput) \nmodelling \ntechnique \nDesign \nstructure \nmatrix \nSuitable for representing the entire \nrange of interactions among \nfunctions \ncompact and clear representation \ncan assist a company identify and \nfocus on key issues \nsupports continuous learning, \ndevelopment and innovation \nDifficult to construct since data \nmay not always be available \nData required may be vast and \ndifficult to assimilate \nDo  not include task duration, time \nlines or estimates for task \nduration \n- \n \nFurther consideration for PSS as an open system can raise issues which relate to standardisation \nand support for documentation. Collaboration in delivering provisions may require the \npreparation, presentation and submission of documents using standard information flow \ntechniques such as DFDs and IDEF\u00d8\/IDEF1. In these cases, PSS based companies must follow \nthe required regulations for documentation. It would also be sensible and consistent (where \npossible) to employ the same modelling and documentation schemes throughout the company. \nAs a social construct, what ever model is chosen should be constructed from the customer \nperspective. Doing this can aid PSS operators concentrate on customer fulfilment and promote \nthis focus during interactions.  These models can then assist operators by offering either a great \ndeal of insight or an insightful model for design processes [57]. \nWithin a social construct, the selection and application of these information models can also be \nbased on communication considerations for PSS. These considerations can be applied for issues \nrelating to size, scope, resources etc. For instance, the model representation in a large corporation \nor system may not be suitable for a small company seeking to integrate product and service \nprovisions to its customers.  The selected models can then act as information management \nmechanisms for an information system to drive effective and efficient organisation and \ncommunication in a PSS. \nFor PSS as business models, modelling tools for PSS need to be developed with flexibility in \nmind so as to ease time and financial costs associated with organisation shifts. This flexibility \ncan also have the added benefit of fostering the development of conceptual models. These \ndiagrams or models for information flow will also have to be first: carefully selected and \nsecondly: rigorously and creatively designed if they are to offer intuitive and computational \nbenefits [70, 71]. A DSM for instance can be used for clearly defined representation of functions \nand processes of an innovative product. PNs, likewise, are suited to information flow \nrepresentations which require a great deal of mathematical support. \n \nTable 4 Key properties of PSS (when viewed as information flows) and design implications \nProperty of Product-\nService Systems \nCharacteristics Modelling Considerations Implications for \nDesign \nOpen systems  Input and outputs \nFunctions and processes  \nSystem architecture \nSystem components \nStandardisation and support \nfor documentation \nConsistency in approach \nFocus on system \ninteractions \nClear definitions of \nsystem functions \nand processes \nSocial construct Actors, roles and scenarios \nTechnological and socio-\ncultural interactions \nOrganisation for the system \nCommunication in the \nsystem \nManagement of the system \nCreation of models \nfrom customer \nperspective  \nBusiness model Nature of business \nDomain of application \nAvailable resources \nFlexibility of models \nRigorous and creative \nmodels  \nDevelopment based \non context of use \nfor business and \napplications \n \nAll three considerations, open systems, social construct and business model as summarised in \nTable 4, must be considered independently and collectively by the designers and implementers of \nthe PSS. The interplay of these issues, in particular, could narrow down the choice to the most \nsuitable tool. This tool can then be used to model various aspects of the business. Good designers \nmay also decide on a combinatorial approach in which different models are amalgamated to give \na more generic approach. Conversely, designs could be based on modifications to a model to \nreflect characteristics of a particular PSS. \n \n5.2. Future research directions \nThis section recommends three possible directions for future research. The first area \nrecommends studies for examining problems of selection and suitability of information flow \nmodels. The second area suggests studies for investigating the wider issue of modelling for a \nPSS, while the third area recommends research for factors exposed by the case study in Section \n4. \n \n5.2.1. Information flow models: selection and suitability \n It is important to note that the purpose of modelling information is to communicate knowledge \nand understanding [17]. Consequently, modelling tools must be suited to the purpose for which \nthey are required. Possible future research could therefore focus on methodologies for selecting \nand applying models for information flow. These studies could focus on characteristics such as \nthose presented in Section 4 (social construct, open system and business model) to make \nrecommendations and assign tools to different cases. Initial empirical studies of companies could \nbe conducted to capture modelling needs and information flow requirements of designers and \noperators. Such studies may adopt a sector approach by exploring the needs of particular \nindustries such as the agriculture sector or the semiconductor industry. Alternatively, the studies \nmay focus on the requirements of company departments or business processes. These industrial \nstudies could complement the literature analysis for the creation of robust frameworks for model \nselection and application.  \n \n5.2.2. PSS modelling: completeness and strategy \nModelling information flow for a PSS presents a partial view of a PSS. As shown in this review, \nall the tools depict a function as a set of processes connected by inputs and outputs. Other \nfeatures represented by the modelling tools reviewed in this paper include: data stores and \nexternal entities (DFD), interfaces, controls and mechanisms (IDEF) and decision flows (GRAI). \nConsequently, to create a \u2018complete picture of a PSS\u2019 other aspects would have to be considered \nand modelled. These aspects include business processes, product and services, processes, work \nflow and company structure.  \nAs earlier mentioned, a PSS can be modelled by several techniques such as function-oriented \nmodelling, object-oriented modelling, conceptual modelling and service modelling. A \ncomparative analysis of different modelling techniques for use in PSS modelling is therefore \nrecommended for future studies. Such analysis could act as a starting point for strategizing the \nprocess of modelling a PSS. In order to accomplish this, studies would need to be conducted to \npropose an appropriate modelling technique to present a complete picture of a PSS. An example \nof research in this area is the System Modelling Language (SysML) that was developed by the \nObject Management Group (OMG) consortium and the International Council on Systems \nEngineering (INCOSE) [72]. SysML was developed to support the analysis and concept phase of \nsystems design. Similar approaches could also be adopted within the PSS community whereby \nfuture work could concentrate on studying the characteristics of PSSs and proposing a \ncomprehensive PSS modelling technique. \n \n5.2.3. Information flows for Product-Service Systems: interactions and negotiations  \nIn terms of PSS information flows, future research could focus on managing interactions and \nnegotiations during the design and delivery of PSSs. Information flow may involve several actors \nreceiving the same input for different processes. Furthermore, several processes may run \nconcurrently or interdependently. These different combinations present a wide range of possible \nscenarios for information flow. It is for this reason that the management of interactions and \nnegotiations is important for information flow in PSSs. \nManaging interactions and negotiations for PSS delivery could play an important role in \nharmonising perspectives of PSS designers and operators. For instance, some divisions of \ncompany that delivers a PSS may adopt a \u2018reactive\u2019 approach to their operation whereas others \nmay be \u2018proactive\u2019 or adaptive in nature. Linking both divisions is a challenge that could require \nthe development of new PSS information flow or operating policies.  \nPossible future research is therefore required to explore negotiations during PSS design and \ndelivery processes. This research area may examine PSS processes involving a single company \n(intra-organisational), between companies (inter-organisational) or between a company and its \ncustomers (customer-focused). Other areas of research for managing interactions could explore \ntechniques for keeping track and maintaining an audit trail of information on PSS processes. An \ninformation system such as the one modelled in Section 4 provides a useful avenue for modern \nbusinesses to manage interactions via communication channels such as information \ncommunication technologies (e.g. electronic mail and video conferencing).  Future research \ncould therefore focus on developing, customising or identifying information systems suitable for \nuse in PSS design and delivery. \n \n \n 6. Conclusions  \nProduct-Service Systems (PSSs) are schemes proposed for integrated solutions of products and \nservices as a single provision.  They can be modelled by means of function-oriented design \nwhich involves breaking down systems into manageable interacting parts. Information flow \nrepresentations for function-oriented design provide useful mechanisms for describing function \ninput and output in systems and organisations. \nThis review paper has attempted to identify some key diagrammatical information flow models. \nData-flow diagrams (DFDs) can be used in organisations to propose information flow path \n(logical view) and to represent actual flows (physical view). DFDs do this by depicting \nprocesses, external entities, data stores and flows in sequential representations.  Information \nflows in manufacturing can be highlighted by the Integrated DEFinition method of modelling \nfunctionality and information modelling (IDEF\u00d8\/IDEF1) approaches which makes use of boxes \n(representing functions) and arrows which indicate relations, input, control, output, and \nmechanisms associated with the function. Graphes \u00e0 R\u00e9sultats et Activit\u00e9s Interreli\u00e9s (GRAI) \ngrids and nets provide information flow descriptions to support decision making processes in an \norganisation or a system. PNs deliver representations of information flow in development and \nsimulation of event-driven and automated manufacturing systems. Input-Process-Output (IPO) \ndiagrams offer information flow descriptions in programs but can also be extended to describe \nsystems with varying complexity. Design Structure Matrices present compact, visual, matrix \nrepresentations for systems analysis; offering a roadmap of system level knowledge. An example \nof a DFD for selective laser melting implemented as a PSS was presented as a case study to show \nthe application of information flow models. The various information flow diagrams reviewed in \nthe paper aid comprehension of PSS by modelling their key properties as social constructs in \nopen process systems for value propositions in business models.  \nThe review paper has also attempted to highlight how these key properties are related to \ninformation flow, what characteristics of PSS any information flow modelling tools are required \nto model successfully and possible future research directions. These considerations are important \nin selecting, modifying or combining approaches for information flow representation suited to \nplanned or existing PSS. \n \n \nAcknowledgments: The authors would like to extend their sincere thanks to the EPSRC, for its support via the \nCranfield IMRC, of the work carried out in the preparation of this paper. \n \n \nReferences \n[1] Mont OK (2002) Clarifying the concept of product-service system. J Clean Prod 10: 237-245. doi: \n10.1016\/S0959-6526(01)00039-7 \n[2] Manzini E, Vezzoli C (2002) Product-service systems and sustainability: Opportunities for sustainable solutions. \nUNEP TIE, Paris. Available at:  http:\/\/www.uneptie.org.\/scp\/design\/pdf\/pss-imp-7.pdf. Accessed 15 Nov 2008   \n[3] Tukker A, Tischner U (2006) Product-services as a research field: past, present and future; Reflections from a \ndecade of research. J Clean Prod 14:1552-1556. doi:10.1016\/j.jclepro.2006.01.022 \n[4] Komoto H, Tomiyama T, Nagel M (2005) Life Cycle Simulation for Analyzing Product Service Systems, \nEcoDesign 2005 386-393. doi:10.1109\/ECODIM.2005.1619251  \n[5] Becker J, Beverungen D, Knackstedt R (2008) Reference Models and Modeling Languages for Product-Service \nSystems Status-Quo and Perspectives for Further Research. HICSS-41: 105. doi: 10.1109\/HICSS.2008.369 \n[6] Durugbo C, Tiwari A, and Alcock JR (2009) An Infodynamic Engine Approach to Improving the Efficiency of \nInformation Flow in a Product-Service System. Proceedings of the 1st CIRP IPS2 Conference, pp. 107\u2013112.  \n[7] Tukker A (2004) Eight types of product-service system: eight ways to sustainability? Experiences from \nSusProNet. Bus Strat Environ 13: 246\u2013260. doi: 10.1002\/bse.414 \n[8] Aurich JC, Fuchs C, Wagenknecht C (2006) Life cycle oriented design of technical Product-Service Systems. J \nClean Prod 14:1480-1494. doi: 10.1016\/j.jclepro.2006.01.019 \n[9] Komoto H, Tomiyama T (2008) Integration of a service CAD and a life cycle simulator, CIRP Ann-Manuf \nTechn 57: 9-12, doi: 10.1016\/j.cirp.2008.03.001. \n[10] Sommerville I (1992) Software Engineering, 4th edn. Addison Wesley, London \n[11] Colquhoun GJ, Baines RW, Crossley R (1993) A state-of-the-art review of IDEF0, Int J Comp Integ M 6:252-\n264. doi: 10.1080\/09511929308944576 \n[12] Martin J, McClure C (1985) Diagramming Techniques for Analysts and Programmers, Prentice Hall \nEnglewood Cliffs, New Jersey \n[13] Philipps J, Rumpe B (1997) Refinement of information flow architectures. IEEE ICFEM 1997 203-212. doi: \n10.1109\/ICFEM.1997.630427 \n[14] van Gigch, J.P. (1991), System Design Modeling and Metamodeling, Plenum Press, New York \n[15] United Nations. 1987. \"Report of the World Commission on Environment and Development.\" General \nAssembly Resolution A\/RES\/42\/187, 11 December 1987. Available at \nhttp:\/\/www.un.org\/documents\/ga\/res\/42\/ares42-187.htm. Accessed 21 May2008 \n[16] Morelli N (2006) Developing new product service systems (PSS): methodologies and operational tools. J Clean \nProd 14: 1495-1501. doi:10.1016\/j.jclepro.2006.01.023 \n[17] Scheller A (1990) Information modelling for distributed applications. IEEE Workshop on Future Trends of \nDistributed Computing Systems, 494-500. doi: 10.1109\/FTDCS.1990.138369 \n [18] Hungerford BC, Hevner AR, Collins RW (2004), Reviewing software diagrams: a cognitive study, IEEE T \nSoftware Eng 30:82-96. doi:10.1109\/TSE.2004.1265814 \n[19] Canfora G, Sansone L, Visaggio G (1992) Data flow diagrams: reverse engineering production and animation. \nICSM 1992 366-375. doi: 10.1109\/ICSM.1992.242522 \n[20] Tucker D, Leonard R (2001) An Innovative Approach for Using the GRAI Methodology for Reengineering the \nNew Product Introduction Process. Int J Flex Manuf Sys 13:177-193. doi: 10.1023\/A:1011135518865 \n[21] DeMarco T (1979) Structured Analysis and System Specification. Yourdon Press, New Jersey \n[22] Du TC, Lin CJ, Liu C\u2013G (2000) Proposing an information flow analysis model to measure memory load for \nsoftware development. Inform Software Tech 42:743-753. doi: 10.1016\/S0950-5849(00)00117-8 \n[23] Ross DT, Schoman KE (1977) Structured Analysis for Requirements Definition. IEEE T Software Eng SE-3:6 \n\u2013 15. doi:10.1109\/TSE.1977.229899 \n[24] Turetken O, Schuff D (2007) The impact of context-aware fisheye models on understanding business processes: \nAn empirical study of data flow diagrams. Inform Manage 44:40-52. doi:10.1016\/j.im.2006.10.004 \n[25] Butler G, Grogono P, Shingha R, Tjandra I (1995) Retrieving information from data flow diagrams. WCRE \n1995 22-29.doi: 10.1109\/WCRE.1995.514690 \n[26] Gane C, Sarson T (1979) Structured Systems Analysis: Tools and Techniques. Prentice-Hall, New Jersey \n[27] Knowledge Based Systems Inc (2006) IDEF Family of Methods: A structured approach to enterprise modelling \nand analysis. Available at: http:\/\/www.idef.com\/. Accessed 23 March, 2008 \n [28] Federal Information Processing Standards (1993) FIPS PUB 183, Integration Definition for Function \nModelling (IDEF0) National Institute for Standards and Technology, Maryland \n[29] Software Engineering Standards Committee of the IEEE Computer Society (1998) IEEE Std 1320.1-1998 \nStandard for Functional Modelling Language\u2014Syntax and Semantics for IDEF0. The Institute of Electrical and \nElectronics Engineers, Inc, New York \n[30] Sullivan DO (1991) Project management in manufacturing using IDEF0. Int. J. Project Manage 9:162-168. \ndoi:0263-7863\/91\/030162-07 \n[31] Ang CL, Luo M, Gay RKL (1995) Knowledge-based approach to the generation of IDEF0 models. Comput \nIntegr Manuf 8:279-290. doi: 10.1080\/002075497195380 \n[32] Kusiak A, Larson TN, Wang J (1994) Reengineering of design and manufacturing processes. Comput Ind Eng \n26:521-536. doi:10.1016\/S0360-8352(00)00059-0 \n[33] Bernus P, Schmidt G (1998) Architectures of Information Systems. In: Bernus P, Mertins K, Schmidt G (eds) \nHandbook on Architectures of Information Systems, Springer-Verlag, Berlin, pp 1-10 \n[34] Ho KF, Ridgway K, Lake BC (1994) To Design Cellular Manufacturing Systems For An Electric Motor \nManufacturer Using Grai Methodology. Factory 2000 189-195. doi:10.1049\/cp:19940859 \n[35] Lingzhi L, Leong AC, Gay RKL (1996) Integration of information model (IDEF1) with function model \n(IDEF0) for CIM information systems design. Expert Syst Appl, 10 (3-4 SPEC. ISS.), 373-380 \n[36] Chen P-H, Wan C, Tiong RLK, Ting SK, Yang Q (2004) Augmented IDEF1-based process-oriented \ninformation modeling. Automat Constr, 13:735-750. doi:10.1016\/j.autcon.2004.04.013 \n[37] McCarthy I, Menicou M (2002) A classification schema of manufacturing decisions for the GRAI enterprise \nmodelling technique, Comput Ind 47:339-355. doi:10.1016\/S0166-3615(02)00002-7 \n[38] Doumeingts G (1989) GRAI Approach to Designing and Controlling Advanced Manufacturing Systems in CIM \nEnvironment. In: Advanced Information Technologies for Industrial Material Flow Systems, Nof SY, Moodie CL \n(eds.), NATO ASI Series, Springer-Verlag, Berlin, pp. 461-529 \n[39] Merlo C, Girard Ph. (2004) Information system modelling for engineering design co-ordination. Comput Ind \n55: 317-334. doi:10.1016\/j.compind.2004.08.008 \n[40] Wainwright CER, Ridgway K (1994) The Application of GRAI as a Framework for Manufacturing Strategy \nProcess. Factory 2000 294-301. doi:10.1049\/cp:19940874 \n[41] Doumeingts G, Vallespir B, Chen D (1998) GRAI grid decisional modelling. In: Handbook on Architectures of \nInformation Systems, Bernus P, Mertins K, Schmidt G (eds.),Springer-Verlag, Berlin, pp 313-337 \n[42] Vernadat F (1996) Enterprise Modeling and Integration. Chapman and Hall, London  \n[43] Leondes CT (1995) Intelligent Knowledge-Based Systems: Information Technology. Kluwer Academic \nPublishers Norwell, Massachusetts \n [44] Hilt B, El Mhamedi A, Noaghiu C (1994) Modelling Of Information Flow Approach Using SADT and Petri \nNets, Factory 2000 326-331 \n[45] Zhou MC, DiCesare F (1993) Petri Net Synthesis for Discrete Event Control of Manufacturing Systems, \nKluwer Academic Publishers, London \n[46] Bonney MC, Zhang Z, Head MA, Tien CC, Barson RJ (1999) Are push and pull systems really so different? Int \nJ Prod Econ 59: 53-64. doi:10.1016\/S0925-5273(98)00094-2 \n[47] Ou-Yang C, Lee JC (2000) Evaluation of the information flow in a hierarchical shop floor control framework. \nInt J Syst Sci 31: 977-1001. doi:10.1080\/002077200412131 \n[48] Murata T (1989) Petri nets: properties, analysis, and applications. Proc IEEE 77: 541-580. doi:10.1109\/5.24143 \n[49] Lien YE (1976) A Note on Transition Systems. Inform Sciences 10: 341-362. doi: 10.1016\/S0020-\n0255(76)91010-0 \n[50] Varadharajan V (1990) A formal approach to system design and refinement. CompEuro 90: 544-545. \ndoi:10.1109\/CMPEUR.1990.113675, \n[51] Wakefield RR, Sears GA (1997) Petri nets for simulation and modelling of construction systems. J Constr Eng \nM ASCE 123: 105-12. doi:10.1061\/(ASCE) 0733-9364(1997)123:2(105) \n[52] Stay JF. (1976) HIPO and Integrated Program Design. IBM Syst J 15:143-154 \n[53] Katzan H (1976) Systems Design and Documentation: An Introduction to the HIPO Method, Van Nostrand \nReinhold, New York \n[54] LaBudde K (1987) Structured programming concepts, McGraw-Hill, New York,  \n[55] Nosek, JT, Schwartz RB (1988) User validation of information system requirements: some empirical results. \nIEEE Trans Software Eng 14: 1372-1375. doi: 10.1109\/32.6180 \n[56] Davis WS (1998) HIPO (hierarchy plus input-process-output) In: The Information System Consultant's \nHandbook: Systems Analysis and Design, Davis WS, Yen DC (eds.) CRC Press LLC, Florida, pp 503-510 \n[57] Eppinger SD (1991) Model-based approaches to managing concurrent engineering. J Eng Design 2: 283-290. \ndoi:10.1080\/09544829108901686 \n[58] Browning TR (2001) Applying the design structure matrix to system decomposition and integration problems: a \nreview and new directions. IEEE Trans Eng Manage 48: 292-306. doi:10.1109\/17.946528 \n[59] Helo PT (2006) Product configuration analysis with design structure matrix, Ind Manage Data Syst 106: 997-\n1011. doi: 10.1108\/02635570610688896 \n[60]Syed AS, Berman K (2007) DSM as a knowledge capture tool in CODE environment. J Intell Manuf 18: 497-\n504. doi: 10.1007\/s10845-007-0058-0 \n[61] Steward DV (1981) The design structure system: a method for managing the design of complex systems. IEEE \nTrans Eng Manage 28: 71-74 \n[62] Oloufa, AA, Hosni YA, Fayez M, Axelsson, P (2004) Using DSM for Modeling Information Flow in \nConstruction Design Projects. Civ Eng Environ Syst 21: 105-126. doi:10.1080\/10286600310001638474 \n[63] Farid A, McFarlane DC (2006) An approach to the application of the design structure matrix for assessing \nreconfigurability of distributed manufacturing systems. DIS 2006: 121-126. doi:10.1109\/DIS.2006.10 \n[64] Yassine A (2007) Investigating product development process reliability and robustness using simulation. J Eng \nDesign 18: 545-561.doi:10.1080\/09544820601011690 \n[65] Baines T, Lightfoot HW, Evans S, Neely A, Greenough R, Peppard J, Roy R, Shehab E, Braganza A, Tiwari A, \nAlcock JR, Angus JP, Bastl M, Cousens A, Irving P, Johnson M, Kingston J, Lockett H, Martinez V, Michele P, \nTranfield D, Walton IM, Wilson H (2007) The state-of-the art in Product Service Systems. P I Mech Eng B-J Eng \n221: 1543-1552. doi: 10.1243\/09544054jem858 \n[66] Roy R (2000) Sustainable product-service systems. Futures, 32:289-299. doi: 10.1016\/S0016-3287(99)00098-1 \n[67] CIRP (2009) CIRP (College International pour la Recherche en Productique) Working Group - Industrial \nProduct-Service-Systems (IPS\u00b2) Available at http:\/\/www.lps.rub.de\/schwerpunkt\/cirp\/. Accessed 21 February 2008  \n[68] Yadroitsev I, Thivillon L, Bertrand Ph and Smurov I, (2007) Strategy of manufacturing components with \ndesigned internal structure by selective laser melting of metallic powder, Appl Surf Sci, vol. 254, issue 4, pp 980-\n983 doi: 10.1016\/j.apsusc.2007.08.046 \n[69] MCP-Group, 2008, MCP RealizerSLM \u2013SLM Technology. Available at http:\/\/www.mcp-\ngroup.com\/rpt\/rpttslm.html.  Accessed 14 February 2008  \n[70] Gurr C, Tourlas K (2000) Towards the principled design of software engineering diagrams. ICSE 2000 509-\n518. doi: 10.1145\/337180.337371 \n[71] Sen T (1992) Diagrammatic knowledge representation. IEEE T Syst Man Cyb 22:826-830. doi: \n10.1109\/21.156595 \n[72] Object Management Group, 2009, OMG Systems Modeling Language (OMG SysML\u2122) Version 1.1, \nAvailable at: http:\/\/www.omg.org\/spec\/SysML\/1.1. Accessed 15 October, 2008   \n \n \n"}