{"doi":"10.1016\/j.cam.2008.03.011","coreId":"140152","oai":"oai:dspace.lib.cranfield.ac.uk:1826\/5417","identifiers":["oai:dspace.lib.cranfield.ac.uk:1826\/5417","10.1016\/j.cam.2008.03.011"],"title":"A method for generating a well-distributed Pareto set in nonlinear\nmultiobjective optimization","authors":["Utyuzhnikov, S. V.","Fantini, Paolo","Guenov, Marin D."],"enrichments":{"references":[{"id":37965767,"title":"A Closer Look at Drawbacks of Minimizing Weighted Sums of Objectives for Pareto Set Generation in Multicriteria Optimization Problems.","authors":[],"date":"1997","doi":"10.1007\/bf01197559","raw":"I. Das and J.E. Dennis, A Closer Look at Drawbacks of Minimizing Weighted Sums of Objectives for Pareto Set Generation in Multicriteria Optimization Problems. Structural Optimization, 14 (1997) 63-69. ACCEPTED MANUSCRIPT ACCEPTED MANUSCRIPT","cites":null},{"id":37965763,"title":"A Note on Weighted Criteria Methods for Compromise Solutions in Multi-Objective Optimization.","authors":[],"date":"1996","doi":"10.1080\/03052159608941404","raw":"T.W. Athan and P.Y. Papalambros, A Note on Weighted Criteria Methods for Compromise Solutions in Multi-Objective Optimization. Engineering Optimization, 27 (1996) 155-176.","cites":null},{"id":37965782,"title":"Aggregate Objective Functions and Pareto Frontiers: Required Relationships and Practical Implications.","authors":[],"date":"2000","doi":null,"raw":"A. Messac, E. Melachrinoudis, C. Sukam, Aggregate Objective Functions and Pareto Frontiers: Required Relationships and Practical Implications. Optimization and Engineering Journal, 1 (2), (2000) 171-188.","cites":null},{"id":37965766,"title":"An Improved Technique for Choosing Parameters for Pareto Surface Generation Using Normal-Boundary Intersection.","authors":[],"date":"1999","doi":null,"raw":"I. Das, An Improved Technique for Choosing Parameters for Pareto Surface Generation Using Normal-Boundary Intersection. WCSMO-3 Proceedings, Buffalo, NY, March, 1999.","cites":null},{"id":37965791,"title":"Application of the modified physical programming method to generating the entire Pareto frontier in multiobjective optimization,","authors":[],"date":"2005","doi":"10.1016\/j.cam.2008.03.011","raw":"M.D. Guenov, S.V. Utyuzhnikov, P. Fantini, Application of the modified physical programming method to generating the entire Pareto frontier in multiobjective optimization, EUROGEN, Munich, 2005. See, also, http:\/\/arxiv.org\/abs\/math.OC\/0512055.","cites":null},{"id":37965788,"title":"Approximation Methods in Multiobjective Programming,","authors":[],"date":"2005","doi":"10.1007\/s10957-005-5494-4","raw":"S. Ruzika and M.M. Wiecek, Approximation Methods in Multiobjective Programming, J. of Optimization Theory and Applications, 126 (3), (2005) 473-501.","cites":null},{"id":37965764,"title":"Convex optimization,","authors":[],"date":"2004","doi":"10.1017\/cbo9780511804441","raw":"S. Boyd and L. Vandenberghe, Convex optimization, Cambridge University Press, 2004.","cites":null},{"id":37965771,"title":"Defectiveness of Weighting Method in Multicreterion Optimization of Structures.","authors":[],"date":"1985","doi":"10.1002\/cnm.1630010613","raw":"J. Koski, Defectiveness of Weighting Method in Multicreterion Optimization of Structures. Communications in Applied Numerical Methods, 1 (1985) 333-337.","cites":null},{"id":37965775,"title":"From the Dubious Construction of Objective Functions to the Application of Physical Programming.","authors":[],"date":"2000","doi":"10.2514\/2.936","raw":"A. Messac, From the Dubious Construction of Objective Functions to the Application of Physical Programming.  AIAA Journal, 38 (1), (2000) 155-163.","cites":null},{"id":37965780,"title":"Generating Well-Distributed Sets of Pareto Points for Engineering Design Using Physical Programming.","authors":[],"date":"2002","doi":null,"raw":"A. Messac and C. Mattson, Generating Well-Distributed Sets of Pareto Points for Engineering Design Using Physical Programming. Optimization and Engineering,  3 (2002) 431-450.","cites":null},{"id":37965773,"title":"Kamenev Interactive Decision Maps: Approximation and Visualization of Pareto Frontier,","authors":[],"date":"2004","doi":"10.1142\/s0219622005001441","raw":"A.V. Lotov, V.A. Bushenkov, G.K. Kamenev Interactive Decision Maps: Approximation and Visualization of Pareto Frontier, Kluwer: Applied Optimization, Vol. 89, 2004, 310p.","cites":null},{"id":37965774,"title":"Manufacturability-Based Optimization of Aircraft Structures Using Physical Programming,","authors":[],"date":"2001","doi":"10.2514\/2.1337","raw":"M.P. Martinez, A. Messac, M. Rais-Rohani, Manufacturability-Based Optimization of Aircraft Structures Using Physical Programming, AIAA J., 39 (3), (2001) 517-525.","cites":null},{"id":37965784,"title":"Mathematical and pragmatic perspectives of physical programming.","authors":[],"date":"2001","doi":"10.2514\/2.1392","raw":"A. Messac, C.P. Sukam, E. Melachrinoudis, Mathematical and pragmatic perspectives of physical programming.  AIAA Journal, 39 (5), (2001) 885-893.","cites":null},{"id":37965769,"title":"Multi-objective Optimization Using Evolutionary Algorithms,","authors":[],"date":"2001","doi":"10.1007\/978-3-642-01020-0_13","raw":"K. Deb, Multi-objective Optimization Using Evolutionary Algorithms, J. Wiley & Sons: Chichester, 2001, 515p.","cites":null},{"id":37965790,"title":"Multicriteria Optimization in Engineering and in the Sciences,","authors":[],"date":"1988","doi":"10.1007\/978-1-4899-3734-6_1","raw":"W. Stadler, Multicriteria Optimization in Engineering and in the Sciences, Plenum Press, New York, 1988.","cites":null},{"id":37965770,"title":"Multicriteria Optimization,","authors":[],"date":"2005","doi":"10.1007\/3-540-27659-9","raw":"M. Ehrgott, Multicriteria Optimization, Springer: Berlin, Heidelberg, 2005, 323 p.","cites":null},{"id":37965772,"title":"Multicriteria Truss Optimization, Multicriteria Truss Optimization in Engineering and in the Sciences, Edited by W.","authors":[],"date":"1988","doi":"10.1007\/978-1-4899-3734-6_9","raw":"J. Koski, Multicriteria Truss Optimization, Multicriteria Truss Optimization in Engineering and in the Sciences, Edited by W. Stadler, Plenum Press, New York, 1988: 263-307.","cites":null},{"id":37965765,"title":"Multiobjective Optimization: Principles and Case Studies,","authors":[],"date":"2003","doi":"10.1007\/978-3-662-08883-8","raw":"Y. Collette and P. Siarry, Multiobjective Optimization: Principles and Case Studies, Springer: Berlin, Heidelberg, New York, 2003, 317 p.","cites":null},{"id":37965786,"title":"Nonlinear Multiobjective Optimization,","authors":[],"date":"1999","doi":"10.1007\/978-1-4615-5563-6","raw":"K.M. Miettinen, Nonlinear Multiobjective Optimization, Kluwer Academic: Boston, 1999; 298.","cites":null},{"id":37965779,"title":"Normal Constraint Method with Guarantee of Even Representation of Complete Pareto Frontier.","authors":[],"date":"2004","doi":"10.2514\/1.8977","raw":"A. Messac and C. Mattson, Normal Constraint Method with Guarantee of Even Representation of Complete Pareto Frontier. AIAA Journal, 42 (10), (2004) 2101-2111.","cites":null},{"id":37965768,"title":"Normal-Boundary Intersection: A New Method for Generating the Pareto Surface in Nonlinear Multicriteria Optimization Problems.","authors":[],"date":"1989","doi":"10.1137\/s1052623496307510","raw":"I. Das and J.E. Dennis, Normal-Boundary Intersection: A New Method for Generating the Pareto Surface in Nonlinear Multicriteria Optimization Problems. SIAM Journal of Meter Design Optimization Problems, In Proceeding of ASME Design Automation Conference, 1989, Montreal, Quebec, Canada, Sept. 17-20: 77-89.","cites":null},{"id":37965793,"title":"Optimality in Parametric Systems,","authors":[],"date":"1981","doi":"10.1002\/oca.4660040112","raw":"T.L. Vincent and W.J. Grantham, Optimality in Parametric Systems, John Wiley and Sons, New York, 1981; 243. ACCEPTED MANUSCRIPT ACCEPTED MANUSCRIPT","cites":null},{"id":37965776,"title":"Physical Programming Effective Optimization for Computational Design.","authors":[],"date":"1996","doi":"10.2514\/3.13035","raw":"A. Messac, Physical Programming Effective Optimization for Computational Design. AIAA Journal, 34 (1), (1996) 149-158.","cites":null},{"id":37965777,"title":"Required Relationships Between Objective Function and Pareto Frontier Orders: Practical Implications,","authors":[],"date":"2001","doi":"10.2514\/6.2001-1495","raw":"A. Messac and A. Ismail-Yahaya, Required Relationships Between Objective Function and Pareto Frontier Orders: Practical Implications, AIAA Journal, 39 (11), (2001) 2168-2174.  ACCEPTED MANUSCRIPT ACCEPTED MANUSCRIPT","cites":null},{"id":37965778,"title":"The Normalized Normal Constraint Method for Generating the Pareto Frontier.","authors":[],"date":"2003","doi":"10.1007\/s00158-002-0276-1","raw":"A. Messac, A. Ismail-Yahaya, C.A. Mattson, The Normalized Normal Constraint Method for Generating the Pareto Frontier. Structural and Multidisciplinary Optimization,  25 (2), (2003) 86-98.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2009-01-15T00:00:00Z","abstract":"A method is presented for generating a well-distributed Pareto set in nonlinear\nmultiobjective optimization. The approach shares conceptual similarity with the\nPhysical Programming-based method, the Normal-Boundary Intersection and the\nNormal Constraint methods, in its systematic approach investigating the\nobjective space in order to obtain a well-distributed Pareto set. The proposed\napproach is based on the generalization of the class functions which allows the\norientation of the search domain to be conducted in the objective space. It is\nshown that the proposed modification allows the method to generate an even\nrepresentation of the entire Pareto surface. The generation is performed for\nboth convex and nonconvex Pareto frontiers. A simple algorithm has been proposed\nto remove local Pareto solutions. The suggested approach has been verified by\nseveral test cases, including the generation of both convex and concave Pareto\nfrontiers","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/140152.pdf","fullTextIdentifier":"http:\/\/dx.doi.org\/10.1016\/j.cam.2008.03.011","pdfHashValue":"7ba1c15faa7f106cc1d48eeecc14722f77c19128","publisher":"Elsevier Science B.V., Amsterdam.","rawRecordXml":"<record><header><identifier>\noai:dspace.lib.cranfield.ac.uk:1826\/5417<\/identifier><datestamp>2011-06-02T09:10:23Z<\/datestamp><setSpec>hdl_1826_19<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>A method for generating a well-distributed Pareto set in nonlinear\nmultiobjective optimization<\/dc:title><dc:creator>Utyuzhnikov, S. V.<\/dc:creator><dc:creator>Fantini, Paolo<\/dc:creator><dc:creator>Guenov, Marin D.<\/dc:creator><dc:subject>Multiobjective optimization Pareto solution Pareto set Physical programming normal constraint method frontier<\/dc:subject><dc:description>A method is presented for generating a well-distributed Pareto set in nonlinear\nmultiobjective optimization. The approach shares conceptual similarity with the\nPhysical Programming-based method, the Normal-Boundary Intersection and the\nNormal Constraint methods, in its systematic approach investigating the\nobjective space in order to obtain a well-distributed Pareto set. The proposed\napproach is based on the generalization of the class functions which allows the\norientation of the search domain to be conducted in the objective space. It is\nshown that the proposed modification allows the method to generate an even\nrepresentation of the entire Pareto surface. The generation is performed for\nboth convex and nonconvex Pareto frontiers. A simple algorithm has been proposed\nto remove local Pareto solutions. The suggested approach has been verified by\nseveral test cases, including the generation of both convex and concave Pareto\nfrontiers.<\/dc:description><dc:publisher>Elsevier Science B.V., Amsterdam.<\/dc:publisher><dc:date>2011-05-23T23:03:31Z<\/dc:date><dc:date>2011-05-23T23:03:31Z<\/dc:date><dc:date>2009-01-15T00:00:00Z<\/dc:date><dc:type>Article<\/dc:type><dc:identifier>S.V. Utyuzhnikov, P. Fantini and M.D. Guenov, A method for generating a well-distributed Pareto set in nonlinear\nmultiobjective optimization, Journal of Computational and Applied Mathematics,\nVolume 223, Issue 2, 15 January 2009, Pages 820-841.<\/dc:identifier><dc:identifier>0377-0427<\/dc:identifier><dc:identifier>http:\/\/dx.doi.org\/10.1016\/j.cam.2008.03.011<\/dc:identifier><dc:identifier>http:\/\/dspace.lib.cranfield.ac.uk\/handle\/1826\/5417<\/dc:identifier><dc:language>en_UK<\/dc:language><dc:rights>NOTICE: this is the author\u2019s version of a work that was accepted for publication in Journal of Computational and Applied Mathematics. Changes resulting from the publishing process, such as peer review, editing, corrections, structural formatting, and other quality control mechanisms may not be reflected in this document. Changes may have been made to this work since it was submitted for publication. A definitive version was subsequently published in Journal of Computational and Applied Mathematics, VOL 223, ISSUE 2, (2009) DOI: 10.1016\/j.cam.2008.03.011<\/dc:rights><\/oai_dc:dc><\/metadata><\/record>","journals":[{"title":null,"identifiers":["0377-0427","issn:0377-0427"]}],"language":{"code":"en","id":9,"name":"English"},"relations":[],"year":2009,"topics":["Multiobjective optimization Pareto solution Pareto set Physical programming normal constraint method frontier"],"subject":["Article"],"fullText":"Accepted Manuscript\nA method for generating a well-distributed Pareto set in nonlinear\nmultiobjective optimization\nS.V. Utyuzhnikov, P. Fantini, M.D. Guenov\nPII: S0377-0427(08)00086-1\nDOI: 10.1016\/j.cam.2008.03.011\nReference: CAM 6685\nTo appear in: Journal of Computational and Applied Mathe-\nmatics\nReceived date: 5 April 2006\nRevised date: 21 July 2007\nPlease cite this article as: S.V. Utyuzhnikov, P. Fantini, M.D. Guenov, A method for\ngenerating a well-distributed Pareto set in nonlinear multiobjective optimization, Journal of\nComputational and Applied Mathematics (2008), doi:10.1016\/j.cam.2008.03.011\nThis is a PDF file of an unedited manuscript that has been accepted for publication. As a\nservice to our customers we are providing this early version of the manuscript. The manuscript\nwill undergo copyediting, typesetting, and review of the resulting proof before it is published in\nits final form. Please note that during the production process errors may be discovered which\ncould affect the content, and all legal disclaimers that apply to the journal pertain.\nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT\nA Method for Generating a Well-Distributed Pareto Set in  \nNonlinear Multiobjective Optimization \n \nS.V. Utyuzhnikov1,2, P. Fantini1, and M.D. Guenov1 \n \n1Department Aerospace Engineering, School of Engineering Cranfield University, \n Cranfield, Bedfordshire, MK43 0AL, UK \ne-mail: m.d.guenov@cranfield.ac.uk\n2School of Mechanical, Aerospace & Civil Engineering, \nUniversity of Manchester, Sackville Street, M60 1QD \ne-mail: s.utyuzhnikov@manchester.ac.uk\nAbstract \nPresented is a method for generating a well-distributed Pareto set in nonlinear \nmultiobjective optimization. The approach shares conceptual similarity with the \nPhysical Programming based method, the Normal-Boundary Intersection and the \nNormal Constraint methods, in its systematic approach investigating the objective space \nin order to obtain a well-distributed Pareto set. The proposed approach is based on the \ngeneralization of the class-functions which allows the orientation of the search domain \nto be conducted in the objective space. It is shown that the proposed modification \nallows the method to generate an even representation of the entire Pareto surface. The \ngeneration is performed for both convex and non-convex Pareto frontiers. A simple \nalgorithm has been proposed to remove local Pareto solutions. The suggested approach \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 2\nhas been verified by several test cases, including the generation of both convex and \nconcave Pareto frontiers.  \nMSC: 65K05, 90C29, 90C30.  \nKey words: Multiobjective optimization, Pareto solution, Pareto set, physical \nprogramming.  \n1. Introduction \nIn real industrial Multidisciplinary Design and Optimization (MDO) setting many \ndifferent criteria such as high performance, low through-life cost and manufacturability \nhave to be satisfied simultaneously. Finding a reasonable compromise is not a trivial \nproblem. It requires the generation of a sufficiently large number of representative \nsolutions in order to perform trade-off studies. \n  \nPareto optimization in Engineering Design \nIt is natural to exclude from consideration any design solution which can be improved \nwithout deterioration of any discipline and violation of the constraints; in other words, a \nsolution which can be improved without any trade-off. This leads to the Pareto optimal \nset [21]. In practice, however, the decision maker (DM) would select the ultimate \nsolution among the Pareto set on the basis of additional (often subjective) requirements. \nConsidering the size and complexity of industrial multiobjective optimization problems \nsuch as aircraft conceptual design, it follows that the efficiency and effectiveness of the \noptimization methods used for trade-off analysis are of paramount importance. \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 3\nIn spite of the existence of many numerical methods for vector optimization, only \na few are suitable for real-design industrial applications, especially for preliminary \ndesign, due to time-limit constraints.  \nThe classical vector optimization methods reduce the multiobjective optimization \nproblem to a scalar optimization of an aggregated objective function (AOF) which \nincludes a combination of objective functions. The most popular AOF is represented by \na linear combination of the objective functions [21]. Recent reviews of the methods \nemployed in multiobjective programming can be found in [3, 8]. In contrast to the \nclassical, preference-based, approaches, another class of evolutionary methods such as \nthe genetic-based algorithms generate a set of Pareto solutions simultaneously (see, e.g., \n[3, 7]).  This class of methods seems to be very promising for solving multiobjective \nproblems. Unfortunately these do not guarantee either the generation of a well-\ndistributed Pareto set or the representation of the entire Pareto frontier. \nIn real industrial design the DM is able to consider only a few possible solutions \n(Pareto points). In such a context, it is important to have an even distribution of Pareto \npoints to obtain maximum information on the Pareto surface at minimum computational \ncost. A well-distributed Pareto set can also be a good foundation for visualizing the \nPareto frontier. It can substantially simplify the work of the DM. A comprehensive \nanalysis of different approaches for approximating and visualizing a Pareto surface is \ngiven in [11]. A recent review of the up-to-date methods to approximate the Pareto set \nis available in [22]. These questions as well as the analysis of the ways of the DM\u2019s \nsearch for a preferable solution are beyond the scope of the present work. The rest of \nthis section outlines the state of the art in generating well distributed Pareto sets, which \nis the main focus of this paper.  \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 4\n \nSurvey of Pareto quasi-even set generators  \nDas and Dennis [5] showed that an even spread of the weights in the AOF does not \nnecessary result in an even distribution of the points in the Pareto set. Also, the spread \nof the points strongly depends on the relative scaling of the objectives. In [19], \nnecessary and sufficient conditions for an AOF were obtained for capturing any Pareto \npoint. In the authors\u2019 knowledge, there are only three methods which are able to provide \nan even distribution of a whole Pareto surface [17]:    \na) The Normal-Boundary Intersection (NBI) Method  was developed by Das and \nDennis [4, 6]. The method might be nonrobust. Moreover, it generates non-Pareto and \nlocally Pareto points that requires a filtering procedure [16].  \nb) The new Normal Constraint (NC) Method [16, 17] developed recently looks \nvery promising. As the NBI method, it has a clear geometrical interpretation. Both \nmethods are based on the well-known fact that a Pareto surface belongs to the boundary \nof the feasible space towards minimization of the objective functions [21].  So-called \nanchor points are obtained in the feasible objective space, first. An anchor point \ncorresponds to the optimal value of one and only one objective function in the feasible \nspace. Thus, n objective functions give n anchor points. Second, the utopia plane \npassing through the anchor points is considered. In both the NBI and NC methods, the \nPareto surface is then obtained by the intersection of lines normal to the utopia plane \nand the boundary of the feasible space. The single optimization problem, used in the \nNC, is based only on inequality constraints. This modification makes the method \nflexible and stable. In both methods an even distribution of Pareto points is provided by \nthe even distribution of the lines orthogonal to the utopia plane. Both methods may fail \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 5\nto generate Pareto solutions over the entire Pareto frontier [17] in multidimensional case \nwhen the number of objectives exceeds two. The recent modification of the NC [17] \neliminates this drawback and guarantees the complete representation of a Pareto \nfrontier. Nevertheless, both methods may generate non-Pareto and locally Pareto \nsolutions [16]; the NC apparently being the more effective of the two [17].  \nc) The Physical Programming (PP) Method was proposed by Messac in [14]. This \nmethod also generates Pareto points on both convex and non-convex Pareto frontiers as \nshown in [18]. The method does not use any weight coefficients and allows one to take \ninto account the DM experience directly. In this sense, it appears to be the most \ninteresting method for practical applications under the above stated conditions. In the \nPP, the designer assigns each objective to one of four categories (class-functions). The \noptimization is based on minimization of an aggregate preference function determined \nby the preference functions (class-functions) with the preferences set a priori. The \nnotion of the generalized Pareto optimal solution is introduced in the PP-based method \n[20] on the basis of the PP class-functions. To provide a well-distributed Pareto set, the \noff-set strategy is introduced in the PP-based algorithm in [18]. The algorithm includes \na few free parameters. Some evaluations of these parameters are given which \nnevertheless do not fully remove the uncertainties in their determination. To avoid the \nset-off strategy, an alternative approach, based on the generalized class-functions, is \nproposed in the current paper. \n \nAims and Structure of the Paper \nThe objective of this research is to develop an efficient method for generating a well \nrepresentation of the entire Pareto frontier in an arbitrary case. In order to achieve this \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 6\naim we have undertaken to modify the PP-based method, which also has allowed us to \ncombine the advantages of the PP, NBI and NC methods.  \nThe rest of the paper is organised as follows. Section 2 contains the standard \nformulation of the nonlinear multiobjective optimization problem and the definition of \nPareto optimum. A more detailed introduction to the Physical Programming method and \nthe original PP approach to generate a well distribute Pareto set is given in sections 3 \nand 4 respectively, since we utilize some of the basic concepts. Our proposed \nmodification is described in section 5. This includes the generalization of the class \nfunctions in order to shrink the search domain and make its location in space more \noptimal. The algorithm for obtaining a quasi-even distribution of the Pareto set is \ndescribed and analysed. A generalization of the notion of an anchor point is also \nsuggested. It is shown that the proposed modification of the PP-based method does not \nprovide non-Pareto solutions while local Pareto solutions may be easily recognized and \nremoved. The method is evaluated in section 6 by six test cases. The numerical \nsolutions are obtained using the MATLAB optimization software. Finally, conclusions \nare drawn and future work outlined. \n2. Multiobjective optimization problem. Pareto \noptimization \nMathematically, the multiobjective optimization problem can be formulated as a vector \nnonlinear optimization problem under constraints as follows. It is assumed that an \noptimization problem is described in terms of a design variable vector \n1 2( , ,..., )\nT\nNx x x=x in the design space NR\u2208X . A function f MR\u2208  evaluates the \nquality of a solution by assigning it to an objective vector y = (y1, y2, \u2026, yM)T  (yi = fi(x), \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 7\nfi: RN \u2192 R1,  in the objective space 1,2,..., )i = M MR\u2208Y . Thus, X is mapped by f \nonto Y: X |\u2192 Y. A multiobjective optimization problem may be formulated in the \nfollowing form: \nMinimize [y(x)]                                                      (1) \nsubject to K inequality constraints \ngi (x) \u2264  0,       i = 1, 2, \u2026, K                                               (2) \nand P equality  constraints \nhj(x) = 0,        j = 1, 2, \u2026, P                                              (3) \nThe feasible design space X* is defined as the set {x| gj (x) \u2264 0, j = 1, 2, \u2026, K; and   \nhi(x) = 0, i = 1, 2, \u2026, P}. The feasible criterion (objective) space Y* is defined as the set \n{Y(x)| }. The feasibility means no constraint is violated.  \u2208 *x X\n A design vector a ( ) is called a Pareto optimum iff it does not exist any \nsuch that \n*\u2208a X\n*\u2208b X\ny (b)  \u2264  y (a)  and exist l \u2264  M:  yl(b)  <  yl(a). \n A design vector is called a local Pareto optimum if it is a Pareto optimum within \nits some neighbourhood.   \n Hereafter it is supposed that all vectors are considered in the appropriate \nEuclidean spaces. Thus, the trade-off analysis can be formulated as a vector nonlinear \noptimization problem under constraints. Generally speaking, the solution of such a \nproblem is not unique since each Pareto point is a solution of the multiobjective \noptimization problem. \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 8\n3. The Physical programming method  \nIn the PP method, objective functions are treated as design metrics. Each design metric \nFi(x) is referred to one of possible (determined in advance) utility dimensionless \nfunctions ( ( ))i iF F x called class functions. The determination of the class-functions \nreflects the qualitative classifications of possible preferences. The preferences are split \ninto two major groups: hard class-functions, H and soft ones, S. The former reflects the \npresence of constraints (2) and (3), while the latter reflects the preferences settled for \nobjective functions which may include subjective preferences of the DM based on \nhis\/her experience and intuition.  \n \nClass functions \nFour soft class-functions are considered: class 1S (smaller is better) where an objective \nis to be minimized; the mirror function 2S (larger is better) where an objective is to be \nmaximized; class 3S (value is better) where an objective is to be close to a particular \npreferred value; and class 4S (range is better) which is similar to the 3S function, but the \npreferable value lies in some range rather than corresponding to some value selected a \npriori. All soft class-functions are to be positive and dimensionless. The argument of a \nsoft class-function is subdivided by the DM into different preference ranges: highly \ndesirable, desirable, tolerant, undesirable, highly undesirable and unacceptable. Such \nsubdivision is a part of the approximation of the class-functions and allows the DM to \nexploit her\/his own experience. The values of the class-functions at the boundaries of \nthe ranges are fixed. Therefore, scaling between different objective functions is \nautomatically provided.   \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 9\nThe qualitative behaviour of the S class-functions is given in Figure 1. The class-\nfunctions 1S and 2S tend to zero if the argument tends to minus or plus infinity, \naccordingly. Each of the class-functions 3S and 4S has one and only one minimum \npoint. All class-functions have the same values at the boundary points of the preference \nranges regardless of the type of a design metric. Only the locations of the ranges depend \non a metric. The presence of the class-functions 3S and 4S does not violate the \ngenerality of formulation (2)-(4). The optimization problem can be reformulated as a \nminimization problem (2)-(4). The PP lexicon makes the formulation closer to the \nformulation of real design optimization problems. In fact, the whole approach is more \nreflective of real life [14]. In particular, classes 3S and 4S are very common in practical \ncases, when it is impossible to determine if a smaller or a larger design metric is better \nor worse.  \nIt is easy to see from Figure 1 that if a range is more desirable, then the value of \nthe class-function is smaller.  Therefore the preference between the ranges is enforced. \nThis means that the highly undesirable region is significantly worse than the undesirable \nregion. In turn, the undesirable region is significantly worse than the tolerable region, \nand so on. This demand is reflected by the following conditions [14]: \n                 i 1 i ,                              1 4,             (4)k sc kF n F k\u2212\u2206 > \u2206 \u2264 \u2264  \nwhere i , 1 , 0 ,1 ,( ) ( ),  ( );   ( 1,  2,  ..., 5)k i i k i i k i i i i kF F F F F F F F F k+\u2206 = \u2212 \u2206 = =  are the \nboundary points of the preference ranges for a metric Fi; I is a number of a soft-class \nfunction; nsc is the number of soft design metrics.   \n \n \n \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 10\nAggregate function. Single \u2013objective optimization \nUltimately, the problem is reduced to the following optimization problem under \nconstraints: \n10\n1\n1min ( ) = log [ ( )],                                   (5)\nscn\ni i\nisc\nG F F\nn =\u2211x  \nsubject to:  \n,5\n,5\n( )\n,5\n               ( )                   (for 1 )                                    (6)\n               ( )                   (for 2 )                                       \n     ( )\ni i\ni i\nL\ni i\nF F S\nF F S\nF F\n\u2264\n\u2265\n\u2264 \u2264\nx\nx\nx ( ),5\n( ) ( )\n,5 ,5\n                (for 3 )\n     ( )                 (for 4 )                                        \nR\ni\nL R\ni i i\nF S\nF F F S\u2264 \u2264x\n \nand constraints related with the hard classes  \n,\n,\n,\n               ( )                  (for 1 )                                    (7)\n               ( )                   (for 2 )                                       \n       ( )\ni i M\ni i m\ni m i i\nF F H\nF F H\nF F F\n\u2264\n\u2265\n\u2264 \u2264\nx\nx\nx ,                 (for 3 ), \n                                     \nM H\n \nwhere Fi,m and Fi,M are the lower and upper limits respectively.  \nThe equality constraints (3) can be changed by double inequality constraints of \n1H and 2H types: \n( ) 0,\n( ) 0\nj\nj\nh\nh\n\u2264\n\u2265\nx\nx\n \nConstraints on the design variables x are considered as ordinary constraints. The \nlogarithm in (5) is only used to diminish the difference between the maximal and \nminimal values that may affect the convergence of an iteration algorithm.  It is easy to \nsee that the more \u201cundesirable\u201d the range is, the more it affects the value of the AOF. In \nthis sense, there is some analogy with the method of penalty functions (see, e.g., [21]). \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 11\nIn turn, it is possible to show that the preferences play somewhat the same role as \nweights in the weighted-sum method [14]. In (5) and henceforth, we assume that in the \nformulation ( )i iF F  the appropriate category of the class-function is used. This means \nthat if, e.g., an objective Fi is to be minimized then 1S class-function is utilised.  \nAs Messac reports in [14], a robust implementation of the PP necessitates that \nproblem (5) - (7) is implemented in such a way to avoid the introduction of additional \nminima. To guarantee this, each class-function must be a strictly convex function [14], \nthat is: \n2\n1\n2,    0                                          (8)\ni i\ni i\nd F d FC\ndF dF\n\u2282 >    \nYet, possible class-functions satisfying condition (8) are not unique. It is possible \nto see that both high-order polynomial and cubic spline functions are not acceptable. \nMessac [14] derived the class-functions that satisfy all requirements mentioned above. \nIn [24] we have suggested an alternative method for approximating the class-functions \nwhich also satisfy all the requirements, but it is based on an exponential representation. \nIf 1S class-functions are only considered, then the AOF G in (5) increases \nmonotonically with respect to each objective Fi (i = 1, \u2026, nsc). Property (8) is sufficient \n[23] for any solution of the single-objective problem (5), (6), (7) to be a Pareto optimum \nsolution for problem (1), (2), (3).  \nIt is easy to see that the Hessian of 1( ,..., )scnG F F is positive semidefinite under \nconditions (8). Hence, G is a convex function. Thus, if the search domain X* is convex, \nthe optimization problem is reduced to the convex optimization without any local \nminima [2].   \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 12\nIn contrast to the standard preference-based methods, the PP approach includes \nsome uncertainness related to the determination of the preference intervals, which \nmakes it consistent with real-life engineering design. In such a way the PP was \nsuccessfully used for solving many MDO problems (see, e.g., [12]). \nIt should be noted that the standard definition of the Pareto optimal solution is not \napplicable to the 3S and 4S class-functions. To avoid this limitation the notion of a \ngeneralized Pareto optimal solution is introduced in [20]. The correspondence between \nthe standard and generalized Pareto optimal solutions is provided in [24]. The \nimplementation of the notion of the generalized Pareto optimal solution allows us to \nreduce the optimization problem formulated for the 3S and 4S class-functions to the \nstandard statement of problem (1) \u2013 (3) [24].   \n4. Generation of an evenly distributed Pareto set \u2013 the \noriginal PP-based approach. \nAs stated in the introduction, in principle the PP-based method is capable of generating \nan evenly distributed Pareto set. The entire algorithm is given in [18]. The original \napproach is briefly described below, followed by the description of our proposed \nmodification. The algorithm can be also generalized for the 2S \u2013 4S class-functions.  \n \nPayoff matrix. Anchor points \nLet us define the payoff table T [21] as follows: \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 13\n1|min 12 1\n21   2|min 2\n1   2 |min\n    ... \n  ... \n,                                     (9)\n ...    ...     ...  ...\n  ...  \nsc\nsc\nsc sc sc\nn\nn\nn n n\nF F F\nF F F\nT\nF F F\n\u23a1 \u23a4\u23a2 \u23a5\u23a2 \u23a5= \u23a2 \u23a5\u23a2 \u23a5\u23a2 \u23a5\u23a3 \u23a6\n \nIn the payoff table T, an i-th row represents the coordinates of an anchor point *i\u00b5  \ncorresponding to the solution of single-optimization problem min Fi in the feasible \ncriterion space Y* for M = nsc.  \nIn the feasible space Y* a hypercube H limiting the search domain is defined in the \nfollowing manner. We first set the pseudo nadir point [21], , which \ncorresponds to the maximum i-th component among all anchor points. Then, the \nhypercube H is represented as follows: \n|max maxi ijF F= j\n]1|min 1|max 2|min 2|max |min |max[ ] [ ] ... [ sc scn nH F F F F F F= \u00d7 \u00d7 \u00d7 . \nFor the sake of simplicity, consider the 2D case where there are only two design \nmetrics. We assume that each of the design metrics belongs to class 1S, otherwise, as \nmentioned above, the problem can be reduced to the minimization problem via \nconsideration of the generalized Pareto solution [20, 24]. Following [18], for each of the \ndesign metrics let us introduce the vector of pseudo-preferences Pi: \n \n,1 ,2 ,3 ,4 ,5\n(0)\n, ,\n1 1 3\n1,1,1,1,1\n4 2 4\n( , , , , 0, ,1)) ( ) ( ,                 (10)\ni i i i i\nT T T\ni i iP F F F F F F \u03b4= +\u2261   \nwhere |max |min( ) \/i i i dF F n\u03b4 = \u2212 (0)iFand  is a free parameter. The parameter nd defines the \nbox size.  \n \n \n \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 14\nSearch domain \nThe regions  and 1 1F F> ,5 ,5\n]\n2 2F F>  are considered as unacceptable. Thus, the box \n defined by the pseudo-preferences limits the search domain \nfrom the right and upper sides leaving it in the other directions unlimited for a formal \nsearch. Changing the free vector \n1,1 1,5 2,1 2,5[ ] [D F F F F= \u00d7\n(0) (0) (0) (0)\n1 2( , ,..., )sc\nT\nnF F F=F , it is possible to shift the \nbox D in the hypercube H to seek Pareto solutions. The current location of the box D \ndetermines a possible location of a Pareto point since the Pareto points outside D (more \nprecisely \u2013 higher or on the right of D) are excluded from the current consideration. To \na certain extent this method operates in a manner similar to the \u03b5-constraint method \n[21]. In PP approach space reduction is simultaneously performed for all objectives. For \nexample, by moving the box to the lower-right angle of the hypercube H (in 2D case), \nwe give preferences to low values of the second objective at the expense of high values \nof the first objective.  \nThe algorithm for shifting the box D over the space Y* to seek the Pareto frontier \nis given in [18]. To achieve this, the free vector is specially chosen to move the box \nalong lines parallel to a diagonal of the hypercube H passing trough the lower-right \nangle and the upper-left ones. In contrast to the search of a single Pareto solution, in \nthis, off-set, strategy the pseudo-preferences are only used to determine the AOF (5). \nThey are automatically obtained from formula (10) which guarantees that if it exists, the \nappropriate Pareto solution would appear inside the sub-space: \n(0)\niF\n,5  ( 1,..., )i i scF F i n\u2264 = .  \nThus, the size of the box D mainly affects the efficiency of solving the single-objective \noptimization problem for the AOF rather than the solution. For example, a variation of \nthe parameter nd changes the AOF, however, the solution has to be inside of the search \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 15\nsub-space. If the parameter nd is not appropriately chosen, it may lead to either the \nincrease of the number of iterations in the numerical algorithm used for minimizing the \nAOF, or to divergence. A few free parameters are introduced to control the \ndisplacement of the box. Some evaluations of these parameters are given in [18] which \nnevertheless do not fully remove the uncertainties in their determination. One can note \nthat, the approach described in [18] is only applicable to the minimization problem \nwhen only the class function 1S is involved.  \n5. Generation of an evenly distributed Pareto set. \nModified method based on a directed search domain. \nWe suggest another strategy to seek the Pareto frontier. Further, it is assumed that only \na minimization problem is considered (all class functions are 1S) and the problem is \nsolved in the objective space Y. The generalization on the arbitrary case (with the other \nclass-functions) is given in [24]. The core of the proposed method is the algorithm for \ngenerating a reduced and easily directed search domain. To realize it, we first assign a \ncoordinate system to the search domain and then conduct an affine transform of the \ncoordinate system in order to shrink the search domain. The displacement of the search \ndomain in the objective space is related to the utopia plane.  \n \nAlgorithm for displacement of the search domain. Modified anchor points \nSimilar to the NC method, let us consider the utopia plane created by anchor points *i\u00b5 . \nIt is well known that any point p belonging to the interior of a convex polygon spanned \nby nsc vertexes *i\u00b5  can be represented as follows: \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 16\n*\n1\n                                             (11)\nscn\ni i\ni\n\u03b1\n=\n= \u2211p \u00b5  \nwhere the parameters i\u03b1  must satisfy the following conditions: \nj=1\n0 1,                                               (12)\n1.\nsc\ni\nn\nj\n\u03b1\n\u03b1\n\u2264 \u2264\n=\u2211  \nSince our approach utilizes the notion of anchor point, an important general \nremark on its definition should be made. As it was mentioned above, the standard \ndefinition assumes that an anchor point *i\u00b5  corresponds to the solution of the single-\noptimization problem min Fi in the feasible criterion space Y* (see, e.g., [17]). This \ndefinition allows the anchor point corresponding to some objectives to be non-unique. \nFurthermore, it may not even belong to the boundary of Y*. Such an example is given \nbelow. We suggest the following specification which guarantees the uniqueness of the \nanchor point for each objective.  If the solution of the problem \n is not unique, then the point corresponding to \nthe minimal values of the other design metrics ought to be chosen. This may lead to the \nproblem of trade-off minimization for the remaining objectives. To avoid this, we \nperform a priority minimization procedure. First, F\n*\n* * * *\n                                  \n( ) { : arg mini i ii F= =\nY\n\u00b5 F X X X }i\ni is to be minimized, then Fi+1 and so \non up to Fi-1. The following lexicographic-based prioritization is introduced in a circular \norder: i+1, i+2, \u2026, nsc, 1, 2, \u2026, i-1. A k-th prioritization assumes that the k-th \nminimization must not violate all the previous k-1 ones. It is easy to prove that all \nanchor points belong to the Pareto frontier because they are on the boundary of the \nfeasible space Y* and no objective can be improved without deterioration of any other \nobjective.  \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 17\nThe free vector  in (10) is determined in the \nfollowing way. Let us consider the box D. The box D is shifted in such a way that its \nvertex M corresponding to the maximal values of the design metrics    \n  lies in the utopia plane (see Figure 2). This \nmeans \n(0) (0) (0) (0)\n1 2( , ,..., )sc\nT\nnF F F=F\n1|max 2|max |max( : ( , ,  ...,  ))scnM M F F F=\n      (0) * (0)\n1\n+ ,                                              (13)\nscn\ni i\ni\n\u03b1\n=\n= \u2211F \u00b5 g\nwhere \n(0) (0) (0) (0)\n1 2\n(0)\n1 2\n( , ,..., )\n( , ,..., ) .\nsc\nsc\nT\nn\nT\nn n\nF F F\ns \u03b4 \u03b4 \u03b4\n=\n=\nF\ng\n,\n \nHere, we set . In some cases the search domain is required to be in the opposite \nside of the utopia plane. It can be easily reached by setting \n1ns = \u2212\n0ns = . Then, we obtain that \nthe vertex belongs to the utopia plane and the search box D is \nlocated in the other semi-space limited by the utopia plane.  \n1|min 2|min |min( , ,  ...,  )scnF F F\nAn even distribution of the coefficients \u03b1i produces a quasi-even distribution of \nthe Pareto set.  In contrast to the NC and NBI methods, the approach described below \nallows us to generate the complete Pareto frontier considering only non-negative \ncoefficients \u03b1i from (12). \nThere are different ways for generating an even distribution of the coefficients \u03b1i.  \nOne possible algorithm is given in [17] where the following induction procedure is \nsuggested. First, an even distribution of the coefficient \u03b11 is considered. From the \nnormalization condition, the sum of the remaining coefficients \nj = 2\nscn\nj\u03b1\u2211 equals to \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 18\n11 \u03b1\u2212 for each selected value of \u03b11. Then, an even distribution of the coefficient \u03b12 is \nconsidered for each of these variants and so on until either the last coefficient \nscn\n\u03b1  is \nreached or the sum of the coefficients already determined equals 1. In the former case \nthe last coefficient is determined uniquely by the normalization condition; in the latter \ncase the remaining coefficients are set equal to zero.   \nThe original algorithm assumes either offsetting the diagonal translation of the \nbox D or magnifying it. This procedure may increase drastically the number of domains \nto be investigated since it is not fully determined and depends on the location of the \nPareto set to be found. It is also shown below that the distribution of the Pareto set may \nbe sensitive to the displacement of the box D along the utopia plane especially if the \nPareto frontier is concave. To overcome these problems, a generalization of the class \nfunctions is suggested. It allows us to shrink the search domain substantially. \n \nGeneralized class functions. Affine transform \nIn order to shrink the search domain limited by box D, we propose the introduction of \ngeneralized class-functions as follows: \n( ) ( 1,  ...,  ),                                       (14)i i scF F i n=%  \nwhere is defined by an affine transform iF%\n1\n,     ( 1,  ...,  ).                         (15)\nscn\ni j ji scF F B i n= =\u2211%  \nThus, each generalized class-function can depend on a linear combination of the \nobjective functions rather than a single objective function. In the general case, affine \ntransform (15) can be represented as consecutive combination of shear and scaling \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 19\noperations. Yet in our case the primary aim of transform (15) is shearing the objective \nspace to make the aggregate function to be localized around a chosen direction.   \nIt is worth noting here that an affine transform retains the convexity property \n[2], therefore the AOF G in (5) remains convex. The affine transform (15) does not \ndepend on the concrete representation of the class-functions as long as conditions (8) \nare satisfied.  \nIn the objective space Y, let us introduce a Cartesian coordinate system { }  ie\n( 1,..., )sci n=  with the origin at point M and axes aligned with the edges of box D. \nThus, this coordinate system is assigned to box D. Assume that the axes of the Cartesian \nsystem are directed towards the increase of the objective functions. Then, affine \ntransform (15) uniquely determines the assigned coordinate system having the basis \nvectors:  \n 1\n-1\n,     ( 1,  ...,  ),                          (16)\nscn\ni ij j scA i n\nA B\n= =\n=\n\u2211a e  \nwhere ej (j =1, \u2026, nsc) are the basis vectors of the original coordinate system. It is easy \nto see that the assigned coordinate system, in turn, uniquely determines transform (15). \nThen, we are able to control the search domain choosing the appropriate assigned \ncoordinate system.  \n \nShrinking of search domain \nThe search domain can be changed as shown in Figure 3. In particular, it is possible to \nchoose basis vectors ai (i =1, \u2026, nsc) which form an angle \u03b3c to some selected direction \nl. The 2D case is shown in Figure 3. Matrixes A and B are determined as follows: \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 20\ncos sin   sin sin1,    ,         (17) \ncos sin cos   cossin 2 c\nA B\n\u03b3 \u03b3 \u03b3 \u03b3\n\u03b3 \u03b3 \u03b3 \u03b3\u03b3\n\u2212 \u2212 + \u2212\n+ + + \u2212\n\u2212\u239b \u239e \u239b \u239e= =\u239c \u239f \u239c \u239f\u2212\u239d \u23a0 \u239d \u23a0  \nwhere ,  ,  (cos ,sin ) .Tn c n c n n\u03b3 \u03b3 \u03b3 \u03b3 \u03b3 \u03b3 \u03b3 \u03b3+ \u2212= + = \u2212 =l  \nIn the general case of scnR , the following algorithm is proposed. Suppose that all \nbasis vectors ai of the new coordinate system form an angle \u03b3c with some unit vector l. \nThus, the vectors ai must satisfy the following conditions: \n( , ) cos                   ( 1,..., ),                    (18)i c sci n\u03b3= =a l  \nwhere  means a scalar product. Thus, all vectors a(.,.) i belong to the lateral area of the \nhypercone with the apex at point M, angle \u03b3c and axis along vector l (Figure 4). In turn, \nit is important to guarantee a spread distribution of these vectors. At least, the basis \ncreated by these vectors must not vanish. It appears possible to obtain even a fully \nuniform distribution of the basis vectors of such a polyhedral cone in the Euclidean \nspace of an arbitrary finite dimension.  \nFirst, suppose that l is directed in such a way that it has equal coordinates in the \noriginal Cartesian coordinate system { } ( 1,..., )i si n c=e : \n0\n0 0 0 0 0\n,                                                            (19)\n( , , ,..., )Tl l l l\n=\n=\nl l\nl\n \nSince l is a unit vector, we obtain its coordinates: \n0 0\n1cos                                                (20)\nsc\nl\nn\n\u03b3\u2261 =   \nFormula (20) immediately follows from the fact that ( , ) 1=l l . Each basis vector ai can \nbe determined in the plane created by the vectors ei and l0 (see Figure 4). It is possible to \nshow that  \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 21\n0\n0\n0 0\nsin sin( )                             (21)\nsin sin\nc c\ni i\n\u03b3 \u03b3 \u03b3\n\u03b3 \u03b3\n\u2212= +a e l  \nFrom (15), (20) and (21) we obtain \n0\n0\n0 0\nsin sin( )cos ,                    (22)\nsin sin\nc c oA A I E\u03b3 \u03b3 \u03b3 \u03b3\u03b3 \u03b3\n\u2212= \u2261 +    \nwhere all elements of the matrix E are unities: || Eij || = 1, I is the unit matrix.   \n \nArbitrary direction of search domain \nIn many cases the shrinking around the lines parallel to vector l0 is already sufficient. \nNevertheless, it is important to obtain matrix A in the general case of an arbitrary unit \nvector l. For this purpose, it is enough to perform a linear transform mapping the \nprevious configuration of the basis vectors and the directing vector in such a way that \nvector l0 is mapped onto vector l. This is achieved by multiplying both parts of equation \n(21) by an orthogonal matrix R: \n  0                                               (23)R =l l  \nThen, we obtain the basis of vectors { }i\u2032a  (i = 1, \u2026, nsc) evenly distributed on the lateral \narea of the hypercone having the axis parallel to vector l:  \n0\n0 0\nsin sin( ) ,                             (24)\nsin sin\nc c\ni i\n\u03b3 \u03b3 \u03b3\n\u03b3 \u03b3\n\u2212\u2032 \u2032= +a e l  \nwhere i iR\u2032 =e e are the components of the Cartesian coordinate system in which vector l \nhas equalled components. It is easy to see that the columns of transition matrix R are the \ncoordinates of vectors  in the basis {ei\u2032e j}. Since the transform is orthogonal, all angles \nare preserved. In particular, 0( , ) cosi \u03b3\u2032 =a l . Now we can obtain matrix A in the general \nform: \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 22\n0\n0\n0 0\nsin sin( ) ,                      (25)\nsin sin\nT Tc cA A R R E\u03b3 \u03b3 \u03b3\u03b3 \u03b3\n\u2212= = +  \nwhere || Eij || = || lj ||.  \nIf \u03b3c = \u03b30, then obviously i i\u2032 \u2032=a e which means that the transform becomes \northogonal and is only reduced to a turn of the original Cartesian coordinate system. As \na consequence in this case, the matrix A is orthogonal and TB A= .  \nThe general presentation requires the calculation of the orthogonal matrix R, the \ncomponents of which must satisfy the following additional requirements: \n  0\n1\ncos                                    (26)\nscn\nij i\nj\nR l\u03b3\n=\n\u2211 =\nMatrix R is not unique. The simplest way to obtain it is to consider the rotation from \nvector l0 to vector l in some Cartesian coordinate system { } ( 1,..., )i i nsc=b  related to \nthese vectors. Suppose that in this coordinate system vectors { are \northogonal to both l\n} ( 3,..., )i si n=b c\n0 and l. Then, in basis {  vector l}ib 0 is mapped onto l by an \nelementary rotation matrix TR describing the rotation in the hyperplane created by the \nvectors l0 and l. It is easy to obtain that  \n0 0\n0 0\n( , )        - 1-( , )     0  ...  0\n1-( , )     ( , )         0  ...  0\n 0                   0            1  ...  ...\n...                   ...            ... ...  ...\n0                    0         \nRT =\nl l l l\nl l l l\n                    (27)\n   0   ...  1\n\u23a1 \u23a4\u23a2 \u23a5\u23a2 \u23a5\u23a2 \u23a5\u23a2 \u23a5\u23a2 \u23a5\u23a2 \u23a5\u23a2 \u23a5\u23a3 \u23a6\n \nThen, in the original basis the rotation matrix is represented as follows: \n                                  (28)TR R RR D T D=  \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 23\nHere, matrix DR is the orthogonal matrix of transition from the original basis to the basis \n: { }ib 0 01 0 2 2\n0\n( , ),  , ... .\n1 ( , )\n\u2212= = \u2212\nl l l lb l b\nl l\n  The remaining basis vectors 3 4, ,..., scnb b b can \nbe obtained as follows. Let us supplement vectors to the full basis by those \nvectors of the original basis {  that have the minimal value of \n. Then, the full basis {\n1 and b 2b\nsc sc\n2scn \u2212 }ie\n| ( , ) | 1,..., )  (k k n=l e } 1,..., ) (i i n=b is obtained by the Gram-\nSchmidt orthogonolization procedure applied to the selected vectors of the \noriginal basis. According to this procedure each subsequent basis vector has to be \northogonal to all the previous ones. Thus, \n2scn \u2212\n | ,  ( , 1,..., )R ij ij scD b i j n= = , where are \ncoordinates of a vector b\nijb\nj.  \nObviously the vectors {ai}, as well as{ }i\u2032a , (i =1, \u2026, nsc) create a basis in Y which \ndoes not vanish. The basis vectors form a search cone similar to the 2D case shown in \nFigure 3. In the 2D case, nsc = 2, \u03b30 = \u03c0\/4 and we obtain formulas (17). \nThe boundaries of the preference ranges are mapped in according to (15): \n1\n,   ( 1,  ...,  ;  1,  ...,5)               (29)\nscn\nik jk ji scF F B i n k= = =\u2211%  \nTransform (14), (15) allows us to shrink the search domain by conditions \n and focus on a much smaller area on the Pareto surface. It \nmakes the algorithm quite flexible and less sensitive to the displacement of box D. The \ntransform shrinks the search domain, much like a \u201clight beam\u201d which emits from point \nM and highlights a spot on the boundary of feasible space Y\n,5  ( 1,...,i i scF F i n\u2264 =% % )\n*. It is natural to choose a \ndirection (vector -l) in alignment with the normal to the utopia hyperplane towards the \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 24\ndecrement of the objective functions. If no solution is found, the direction is reversed by \nsetting  in (13).  0ns =\nIt should be emphasised that the general representation of matrix A can play a \nsubstantial part in seeking a Pareto set nearby the boundary of the Pareto frontier. As \nmentioned above, if we consider an orthogonal projection of the Pareto set onto the \nutopia hyperplane, the images of some Pareto points may not belong to the interior of a \nconvex polygon spanned by the nsc vertexes *i\u00b5  (11), (12). This fact was first noted in \n[17]. One of the possibilities to solve this problem, suggested in [19] for the NC \nmethod, is based on the use of negative coefficients \u03b1i. However, this will cause another \nproblem, this time with the lower evaluation of the coefficients. Inevitably some points \non the utopia plane corresponding to negative coefficients may not be orthogonal \nimages of any Pareto point. In [17], an additional optimization problem needs to be \nsolved at each anchor point in order to remove these points. Another possibility, offered \nspecifically by our approach is described below. \n \nRotation of the search domain \nLet us consider the edge vectors of polygon (11), (12): * *1i i+= \u2212 i\u03bd \u00b5 \u00b5  \n.  From linear algebra (see, e.g., [8]) it follows that point p( 1,..., 1)sci n= \u2212 i belongs to \na k-th edge of the polygon iff \u03b1m= 0 (m \u2260 k, k+1). Assume that vector l is initially \nrelated to the normal of the utopia hyperplane. If point M belongs to an edge of the \npolygon, vector l is then rotated in the direction opposite to the polygon. In other words, \nl is changed in such a way that the orthogonal projection of the end of the vector, drawn \nfrom the edge, onto the utopia hyperplane must not fall in the interior of the polygon. \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 25\nTo formalize this procedure, in the utopia plane we introduce a unit vector which is the \nouter normal to the edge considered. The vector can be defined as the following linear \ncombination of the edge vectors \u03bdi-1 and \u03bdi: \n1 1\n1\n( , ),    .                            (30)\n| | ( , )\ni i i i i\ni i\ni i i i i\n\u03b2 \u03b2\u03b2\n\u2212 \u2212\n\u2212\n+= = \u2212+\n\u03bd \u03bd \u03bd \u03bds\n\u03bd \u03bd \u03bd \u03bd\n     \nThen, the current vector l is determined via si and the normal n to the utopia hyperplane \ntowards the origin as follows: \ncos sin ,                                    (31)\n0 \/ 2.\nr r i\nr\n\u03b8 \u03b8\n\u03b8 \u03c0\n= \u2212 +\n< <\nl n s\n  \nThe angle \u03b8r is a parameter. Changing \u03b8r from 0 to \u03c0\/2, vector l is turned from the \nnormal vector \u2013n to the vector si (see Figures 5a and 5b).  \n \nGeneral algorithm for generating the Pareto set \nThus, the algorithm can be formulated in the following way.  \nStep A: Utopia plane and search domain. The utopia plane is determined. The \nsearch box  is determined by formulas (15), (20), (25), (27), (28).  D%\nStep B: Displacement of search domain in the utopia polygon. Point M, a vertex \nof the search box , is moved along the utopia plane according to (11) - (13) while the \naltering of the coefficients \u03b1\nD%\ni follows the induction procedure [5] which was briefly \ndescribed above.  \nStep C: Switching search direction. If the point M in (13) belongs strictly to the \ninterior of the polygon formed by the anchor points, then the vector l coincides with the \nnormal -n. If there appears to be no solution, then the search is switched to the opposite \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 26\ndirection n via the shift of the search box to the opposite side of the utopia hyperplane \n( ).  0ns =\nStep D: Rotation strategy at utopia polygon edges. If point M appears to be on \nan edge of the polygon, then an additional rotation of the vector may be required in \norder to investigate the periphery of the Pareto surface. To obtain a quasi-even \ndistribution of the Pareto set, the number of additional points Nr related to the rotation \nof vector l depends on the distance to the vertexes of the edge. For example, the rotation \nis not required at the anchor points. In general, it is reasonable to choose the maximal \nvalue of Nr at the centre of an edge. The following evaluation of Nr is suggested for a k-\nth edge: \n1int(4 )    ( 1)                               (32)r k kN m m\u03b1 \u03b1 += \u2265  \nThus, at the centre of the edge Nr = m. The choice of m depends on the level of \nevenness required in the problem studied. Finally, it is worth noting that the number Nr \ncan be substantially optimized if the information on the current local distribution of the \nPareto set is taken into account. For example, if a Pareto solution appears to be at an \nedge of the polygon, no additional rotation is required and Nr = 0.  \nThe angle \u03b3c in (25) is the parameter which determines the search cone: \n . If ,5  ( 1,..., )i i scF F i n\u2264 =\u0004 \u0004 c 0\u03b3 \u2192 , then the search domain degenerates into a line. \nThus, the angle \u03b3c is to be determined by the DM for a concrete problem on the basis of \nthe following two principles. On the one hand it is natural to chose \u03b3c as small as \npossible, on the other hand it should not affect the robustness of the algorithm.  It is \nclear that these requirements are not too restrictive and can be easily satisfied.  \nStep E: Filtering. Some a posteriori filtering procedure described in the next \nsection for nonconvex Pareto surfaces might be required.  \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 27\nThe flowchart of the general algorithm is given in Fig. 7. \n \nFiltering procedure \nIn some cases, such as the one shown in Figure 6, local Pareto points (e.g., a point P) \nmay be obtained which are not global Pareto solutions. The PP-based algorithm is \ncapable to exclude such points. Let us locate the box D in such a way that the point M is \nat some point P investigated as a candidate Pareto solution and set A = I in (15), (22). If \nthe point is a global Pareto solution (e.g., a point \u2032P ), another solution cannot be \nobtained in D. This statement fully complies with the statement of the contact theorem \n[25]. Hence, we have a criterion for verification if the solution is a global Pareto \nsolution.  \n \nScaling procedure \nIn order to avoid possible problems related to different scales and undesirable severe \nskewing of the search domain, the following preliminary scaling of the objective \nfunctions similar to [21] can be used: \n|min\n|max |min\n                                          (33)i isci\ni i\nF F\nF\nF F\n\u2212= \u2212  \nThus, in our approach we are able to set nd = 1 in (10).  \n \nInverting the transform matrix \nAs written above, in the suggested algorithm we use only explicit formulas related to \nshrinking and conducting the search domain. Iterations can only be required to find the \ninverse matrix A. Meanwhile, this process can be optimized since . This 1 0A RA\n\u2212 = 1\u2212\nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 28\nimmediately follows from (25) and the orthogonality of the rotation matrix R. Hence, it \nis only required to invert the matrix A0 which does not change unless the angle c\u03b3 is \nchanged.   \n \nLimitation of the algorithm \nIn a practical application of the developed approach, one should avoid the use of \nexcessively small values of the angle c\u03b3  because it might lead to the degeneration of the \nsearch domain and affect the robustness. The application of the method is limited by the \nassumption that the number of the anchor points is equalled to the number of objective \nfunctions. If this assumption is violated then the algorithm requires a substantial \nmodification because of the degeneration of the utopia polygon. It is to be noted that the \nsame problem arises for the NBI, NC and original PP approaches.  \n \nCapability to generate an even entire Pareto set \nFollowing the strategy described above we are able in principle to cover all areas on the \nPareto frontier in the objective space Y. To prove this, it is enough to show that for any \narbitrary Pareto point Q there exist a point M belonging to polygon (11), (12) and vector \nl pointed from M to Q. If the algorithm principally provides such vector l, then the \nsearch domain inevitably includes point Q and a Pareto point can be found in some \nneighborhood of Q.  \nBy definition vector l is either orthogonal to the utopia plane or satisfies \nconditions (31). Let us suppose, first, that the orthogonal projection of point Q onto the \nutopia plane, denoted by a point , belongs to the interior of polygon (11), (12). Then, \nwe locate point M at point  and chose the vector l to be normal to the utopia plane. \n'Q\n'Q\nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 29\nThus, the search domain includes the point Q.  Assume now that the point appears to \nbe outside of the polygon (11), (12). Let us consider then the orthogonal projection of \non the nearest side of the polygon in the utopia plane and denote it as . Then, \npoint M has to coincide with  and the appropriate vector l is given by (31), where \n'Q\n'Q ''Q\n''Q\n( )'\n'\n,\nsin r\nMQ MQ\nMQ MQ\n\u03b8 =\nuuuur uuuur\nuuuur uuuur  . Point  can always be found if point is situated outside of \nthe polygon. To prove this, let us assume that the statement is not correct and point \nis located nearby an i-th and i+1 sides of the polygon. The intersection line between \nthe hyperplane \n''Q 'Q\n'Q\n*\niF i\u00b5=  including anchor point *i\u00b5  and utopia plane cannot include \notherwise inevitably there are Pareto points (some of the anchor points) for which 'Q\n*\niF i\u00b5< . Then, anchor point *i\u00b5  has to be an internal point of the orthogonal projection \nof the Pareto surface onto the utopia plane. It can be proven that it is impossible. It \nfollows from the fact that hyperplanes jF const=  ( 1,..., )scj n=  are tangential to the \nPareto frontier at the anchor points and the normal vector to the utopia plane has only \npositive coordinates. \nThe solution of the single-objective problem (5), (6), (7), (14), (15) has to be in \nsome vicinity ( , )c Q\u03c9 \u03b3 : c( ) 0  0if\u03c3 \u03c9 \u03b3\u2192 \u2192\n)\n (where \u03c3 is a measure of \u03c9) since the \nsearch domain is strictly limited by conditions . In turn, as \nstated above, the solution of the single-objective problem for the AOF has to be a Pareto \nsolution.  \n,5 ( 1,...,i i scF F i n\u2264 =% %\nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 30\nIt is to be noted that if a Pareto point is captured in the objective space, its original \nimage is captured in the decision space X [19].  Thus, for any Pareto point there is some \nneighborhood ( )c\u03c9 \u03b3 of this point where a Pareto solution is captured.  In turn, an even \ndistribution of parameters i\u03b1  in (12) and angle r\u03b8  in (31) results in a quasi-even \nmapping of these onto the Pareto frontier in the objective space Y if angle c\u03b3 is small \nenough. \nWe have to emphasize that our approach for obtaining the complete Pareto frontier \ndiffers from the one developed for the NC method [17] where the authors use an \noversized utopia-plane section to investigate the entire Pareto surface. This can lead to \nutopia-plane points guiding the appropriate optimization problems for which no Pareto \nsolution exists. In our approach we perform a sequence of rotation of the search domain \nonly for those utopia-plane points which belong to the edges of the polygon. The \nrotation is performed until no new Pareto solution is found. \nD%\n \nEfficiency of the algorithm \nTo conclude, the algorithm described above is able to generate an entire well distributed \nPareto set. This is achieved by solving a number of single-objective optimization \nproblems for the AOF. The algorithm is efficient because the number of the single-\nobjective problems solved mostly equals the number of the Pareto points obtained. \nSince the AOF is a smooth exponential-type convex function, fast gradient-based \nnumerical methods can be used for its minimization if the objective functions are \nsmooth enough. In addition, it is to be noted that the method can naturally be realized \non parallel processors because each Pareto search can be done independently from the \nothers.   \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 31\n It has to be pointed out that for the purpose of generating the entire Pareto set, \nthe 1S class functions can be represented by simple exponential functions. Nevertheless, \nretaining the general PP-formalism makes the algorithm (computer code) more \nuniversal, which can be important in the search of a specific Pareto solution. The \nextension of the algorithm presented here to the generalized Pareto solutions including \n2S-4S class-functions is given in [24]. \n6. Test cases \nThe method described above is validated by six test cases which include both convex \nand concave Pareto surfaces. It is shown that the PP-based method may lead to a high \nsensitivity of the location of the Pareto points to the displacement of box D especially in \nthe case of a concave Pareto frontier if no offsetting is performed.  \nExample 1:  \n \nFirst, we consider the following simple algebraic test case: \n(34)                                          ),min( Tyx  \n(35)                                        ,122 \u2264+ yx  \n1,  1                                            x y> \u2212 > \u2212  \nIn this case the Pareto surface is convex and represented by the unit circle in the first \nquadrant. Utopia polygon (11), (12) is represented by the interval between the utopia \npoints (-1, 0) and (0, -1). The solution of problem (34), (35) by the original approach is \nshown in Fig. 8a. Contour lines near the upper right corner of the search domain (the \nbox D) correspond to higher values of the aggregate objective function (AOF), while \nthe contour lines near the lower left corner correspond to minimum values of the AOF. \nThe crosses on the utopia line in Fig. 8a and in all of the following figures mark further \nthe positions of point M in the computations related to different positions of box D. An \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 32\neven displacement of the point M (or box D) along the utopia line does not lead to a \ngood distribution of the Pareto points since there are gaps nearby the anchor points.  \nOffsetting the diagonal translation of box D and magnifying it may improve the \nsituation [18], but could make the algorithm more complicated and more dependable on \nthe solution to be found. According to this strategy, the top of the search domain (point \nM) is shifted in the normal direction from the utopia plane towards the Pareto frontier. \nEventually, this strategy leads to the reduction of Pareto point scattering. In this sense \nthe displacement \u2206s plays the same role as the parameter \u03b3c. However, the angle \u03b3c can \nbe chosen, for instance, as small as possible unless it affects the robustness of the \nalgorithm, while the value \u2206s cannot be chosen arbitrary and depends on the location of \nthe Pareto frontier to be found. The introduction of the generalized class functions (14), \n(15) allows us to avoid the off-set strategy.  \nIn the case of shrinking the search domain via transform (15) we obtain an even \nrepresentation of the Pareto frontier (Figure 8b) evenly displaying the point M along the \nutopia interval. Here and further, the angle \u03b3c is equalled to 100. As we see, the \naggregate function is localized around the search direction (vector l) as the result of the \nshear of the objective space.     \nExample 2:  \n \nThe second test case includes optimization problem (34) under the following \nconstraints:  \n(36)                                        ,122 \u2265+ yx  \n0,  0                                             x y\u2265 \u2265  \nIn problem (34), (36) the Pareto frontier appears to be concave and is denoted by \nthe unit circle located in the third quadrant. The utopia plane (interval) is determined by \nutopia points (0, 1) and (1, 0). This test case also represents an example where the \nstandard definition of an anchor point leads to non-uniqueness. In Example 2 any point \nwith coordinates 0,  1x y= \u2265  is a solution of the single-objective minimization \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 33\nproblem: \n,\nmin\nx y\nx . In our definition we have only two anchor points in total: (0,1) and \n(1,0).  \nIn the original approach the displacement along the utopia line does not provide \nany solution, except the utopia points because box D is in the unfeasible space Y\\Y*. \nTherefore, the off-set strategy is required in this example. If the displacement of point M \nis performed along the line parallel to the line A as shown in Figure 9a, a complete \nPareto frontier can be obtained by the original method. Yet, this Pareto set is not evenly \ndistributed. It is important to note here that only five different Pareto points are obtained \nin spite of solving eleven local optimization problems. This result appears because some \nlocations of point M lead to the same Pareto solution. It is to be noted that we chose line \nA utilizing our a priori knowledge of the Pareto solution. If we consider line B then we \nobtain only 4 Pareto solutions marked by the circles. In combination, these two \ncomputations altogether provide us an evenly distributed Pareto set. However, in order \nto obtain 7 Pareto solutions we have to consider 13 single-objective optimization \nproblems if start from line A and 14 problems if we start from line B.  \nThe performance of our algorithm is demonstrated in Figure 9b which shows the \ncomplete solution. In this figure, the contour plots of the AOF are located inside each \nsearch domain. If a solution is not found (as shown in Figure 9b), the direction of the \nsearch is switched to the opposite side by setting sn = 0 in (13).   \nIt is natural to introduce the coefficient of evenness ke characterizing how evenly a \nPareto set is distributed on the Pareto surface.  For this purpose, let us introduce some \ncoordinate system {xi} (i = 1, \u2026, nsc- 1) on the Pareto surface in the objective space. In \nthe Riemann space 1scnR \u2212 , related to the Pareto surface, the Riemann metric is given by \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 34\n1 1\n2\n1 1\n.                                 (37)\nsc scn n\ni j\nij\ni j\nd g d d\n\u2212 \u2212\n= =\n= \u2211 \u2211r x x  \n Then, the coefficient ke is defined as follows: \nmax min\n ( ,  = 1, ..., )                            (38)\nmin min\nijji\ne p\niji j\nr\nk i j N\nr\n=  \nHere, Np is the number of Pareto points, rij is the distance between an i-th and a j-th \nPareto points in metric (37):  \n| |.                                        (39)ij i jr = \u2212x x  \nCoefficient ke represents the ratio between the maximal possible distance from a Pareto \npoint to its nearest, but different, Pareto point and the minimal one. Obviously, in the \nultimate case of the completely even distributed set: ke =1. \n         In the first example considered above, the standard approach without the off-set \nstrategy yields ke = 5.6, while the modified method provides ke = 1.6. In Example 2, the \nstandard approach formally leads to infinite value of ke due to the coincidence of some \nPareto points. In our approach ke = 1.2. \n \nExample 3:   \nIn this example, suggested in [15], the Pareto frontier consists of different convex and \nconcave parts created by three ellipsoid segments centered at the origin. The problem is \nformulated as follows: \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 35\n2\n3\n2\n4 4\n3\nmin  ( ,  )                                      (40)\nsubject to\n( \/ 3) 1,\n16,\n( \/ 3) 1,\n0 2.9,\n0 2.9\nTx y\ny\nx y\nx y\nx\ny\nx + \u2265\n+ \u2265\n+ \u2265\n\u2264 \u2264\n\u2264 \u2264\n \nThe exact Pareto curve is shown by the dashed line in Figure 10. It is important to note \nthat the Pareto frontier is not smooth and is located on both sides of the utopia line. As \nillustrated in Figure 10, the algorithm is capable of capturing the entire frontier by \ngenerating an evenly distributed Pareto set. The NC method provides the same Pareto \nset if we use the identical points (marked by the crosses) in the utopia plane.  \nExample 4:   \nThis test case is a 3D one and leads to an example where the orthogonal images of \nPareto points onto the utopia surface are not necessary in the interior of the polygon \ndefined by the anchor points. \n \nLet us consider the following 3D minimization problem: \nmin( , , )                                        (41)Tx y z  \nunder constraints \n2 2 2 1,                                     (42)x y z+ + \u2265  \n0,  0, 0                                          x y z\u2265 \u2265 \u2265  \nThe standard definition of the anchor points again leads to non-uniqueness. It is easy to \nsee that in our formulation we have only three anchor points:  *1 (0,0,1) ,\nT=\u00b5\nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 36\n*\n2 (1,0,0)\nT=\u00b5 and .  The Pareto surface is represented by the part of the \nunit sphere corresponding to nonnegative coordinates. It appears that not the entire \northogonal projection of the Pareto surface onto the utopia surface is in the triangle \ncreated by the anchor points (see  Figure 11a). For this reason, a method such as NBI, is \nnot able to catch the entire Pareto frontier if the coefficients \u03b1\n*\n3 (0,1,0)\nT=\u00b5\ni in (12) are not negative. \nAlgorithm (31), (32) is used to provide the complete representation of the Pareto \nfrontier. According to this algorithm, the search domain is rotated to capture the entire \nPareto set while point M is on a side of the triangle determined by the anchor points. \nThe utopia plane and the points, distributed in the polygon (triangle in this case) \naccording to algorithm (11), (12), are shown in Figure 11b. (As in the previous \nexamples, the crosses on the utopia plane correspond to different positions of the point \nM.) The solution providing the complete Pareto frontier is given in Figure 11c.  \n The Pareto set generated by the modified NC method is given in Figure 11d and \nFigure 11f. Because the orthogonal projection of the Pareto surface is beyond the utopia \ntriangle (Fig. 11b), the search set in the utopia plane must be extended. According to the \nalgorithm described in [16], the search domain is limited by the hypercube assigned \nwith the nadir point. The nadir point, by definition, corresponds to the worst value for \nall objective functions. Evenly distributed set was considered in the part of the utopia \nplane limited by the search domain which is represented by the cube in Fig. 11d and \nFig. 11f.  \nIf the anchor points shown in Fig. 11b are considered, the NC fails to generate the \nPareto frontier. Among 66 points distributed in the utopia plane 30 provided the feasible \nsubspaces and they resulted in the solutions which appear at the boundary of feasible \nspace limited by the cube. These solutions are not Pareto optimal apart from the anchor \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 37\npoint: . The feasible space in the original NC algorithm for the considered set of \nthe anchor points is shown in Fig. 11e if the minimum of \n(1,0,0)\n3F z\u2261 is sought. The vectors \nv1 and v2 are the vectors used in the NC method [16]: * * * *1 3 1 3 3 2,  .= \u2212 = \u2212v \u00b5 \u00b5 v \u00b5 \u00b5  In the \nmodified NC method the feasible space, in addition, is limited the cube assigned with \nthe nadir point, and the NC solution appears at its boundary as shown in Figure 11d.    \nIn the formulation of the NC method [16] the standard definition of an anchor \npoint is used. As mentioned above, this definition leads to non-uniqueness of the anchor \npoint set. Its choice may strongly affect the efficiency of the method. To demonstrate \nthis, the following anchor points were considered: ( . In this case, \n24 from 66 points, distributed in the utopia plane, were efficient and they lead to 22 \nPareto solutions shown in Figure 11f. Thus, this set of the anchor points provides us the \ngeneration of the Pareto frontier.   \n0,1,1), (1,0,1), (1,1,0)  \nIn our approach, 66 points, distributed in the utopia triangle, result in 93 Pareto \npoints.  This happens because any point among those in the utopia triangle provides at \nleast one Pareto point. In addition, the points at the edge of the triangle generate \nadditional Pareto points due to the rotation strategy.  \nIn the next 3D example, approximately half the Pareto surface (in the orthogonal \nprojection onto the utopia plane) appears far beyond the utopia triangle which is created \nby the anchor points. In this case algorithm (30), (31) related with the rotation of the \nsearch domain plays a crucial role. \nExample 5:   \n \nLet us consider optimization problem (41) under the following constraints: \n \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 38\n2 2 2 1,                                          (43)x y z+ + \u2264  \n1,  1, 0.5                                            x y z\u2265 \u2212 \u2265 \u2212 \u2265 \u2212  \nIn this case the Pareto surface is represented by the part of the unit sphere corresponding \nto nonpositive coordinates and satisfying condition . The anchor points are: 0.5z \u2265 \u2212\n3( 1,0,0),  (0, 1,0),  ( ,0, )\n2 2\n\u2212 \u2212 \u2212 1\u2212 . The results shown in Figure 12a demonstrate that \nthe entire Pareto frontier is represented regardless of its orthogonal image on the utopia \nplane nearby point (0, 0, -0.5), the latter being far beyond the utopia triangle.  \n In Figure 12b, the Pareto set obtained by the modified NC method is shown. In \nthis example, in the utopia plane only 18 points, among 66 evenly distributed in the \nsearch domain, appeared efficient. They provided 16 Pareto solutions.  \n In the developed algorithm, 66 points were evenly distributed in the utopia \ntriangle and all these lead to Pareto solutions. The total number of the obtained Pareto \nsolutions was equalled to 139.  \n \nExample 6:   \n \nIn this example the optimization of the four-bar truss problem [10, 17] is analysed. The \ntruss scheme is shown in Figure 13. Suspended loads F with magnitude of 10 kN each, \nare applied at points 1 and 2. The size of each bar must not exceed 5 cm2 and the \nstresses in the bars are limited to10 kN\/cm2 for both tension and compression. The \nelasticity modulus equals 2*104 kN\/cm2. The objective is to design a four-bar truss with \nminimal stress in Bars 1 and 4, and minimal volume of the structure. Thus, the design \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 39\nmetrics are as follows: f1 and f2 are the stresses in Bars 1 and 4, respectively; f3 is the \nvolume of the structure.  \nAs shown in Figure 14, our approach provides even generation of the complete \nPareto frontier. The vertexes of the utopia triangle have the following coordinates:    \n(10, 6, 2.7*103), (10, 10, 2.3*103), (2, 6, 4.4*103). It is important to note that for the \nsame example [17] the NBI and original NC methods fail to capture the full range of the \nPareto frontier. The modified NC method generates additional redundant Pareto points \nnear the extreme boundaries of the Pareto frontier [17].  \n7. Conclusion \nThe Physical Programming based method has been substantially modified to generate \nan even distribution of the entire Pareto set. The new approach also shares conceptual \nsimilarity with the Normal-Boundary Intersection and the Normal Constraint methods \nwhile aiming to combine their respective strengths.  The proposed method is based on \nthe generalization of the class-functions which leads to the manageable orientation of \nthe search domain in the objective space. It is also proven in this work that the proposed \nmodification allows the method to generate an even distribution of the entire Pareto \nsurface. The generation is performed for both convex and non-convex Pareto frontiers. \nThe method does not generate non-Pareto solutions. A simple algorithm has been \nproposed to remove local Pareto solutions. The new proposed definition of the anchor \npoints provides the uniqueness of the anchor point set compared to the standard \ndefinition. \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 40\nThe proposed approach has been verified by several test cases, including the \ngeneration of both convex and concave Pareto frontiers. Future work will include the \napplication of our method to more complex problems supplied by industry. \nAcknowledgements \nThe research reported in this paper has been carried out within the VIVACE Integrated \nProject (AIP3 CT-2003-502917) which is partly sponsored by the Sixth Framework \nProgramme of the European Community under priority 4, \u201cAeronautics and Space\u201d.  \nThe authors are very grateful to the unknown referees for valuable remarks.  \nReferences \n[1] T.W. Athan and P.Y. Papalambros, A Note on Weighted Criteria Methods for \nCompromise Solutions in Multi-Objective Optimization. Engineering Optimization, 27 \n(1996) 155-176.   \n[2] S. Boyd and L. Vandenberghe, Convex optimization, Cambridge University Press, \n2004. \n[3] Y. Collette and P. Siarry, Multiobjective Optimization: Principles and Case Studies, \nSpringer: Berlin, Heidelberg, New York, 2003, 317 p.  \n[4] I. Das, An Improved Technique for Choosing Parameters for Pareto Surface \nGeneration Using Normal-Boundary Intersection. WCSMO-3 Proceedings, Buffalo, \nNY, March, 1999.  \n[5] I. Das and J.E. Dennis, A Closer Look at Drawbacks of Minimizing Weighted Sums \nof Objectives for Pareto Set Generation in Multicriteria Optimization Problems. \nStructural Optimization, 14 (1997) 63-69. \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 41\n[6] I. Das and J.E. Dennis, Normal-Boundary Intersection: A New Method for \nGenerating the Pareto Surface in Nonlinear Multicriteria Optimization Problems. SIAM \nJournal of Meter Design Optimization Problems, In Proceeding of ASME Design \nAutomation Conference, 1989, Montreal, Quebec, Canada, Sept. 17-20: 77-89. \n[7] K. Deb, Multi-objective Optimization Using Evolutionary Algorithms, J. Wiley & \nSons: Chichester, 2001, 515p.  \n[8] M. Ehrgott, Multicriteria Optimization, Springer: Berlin, Heidelberg, 2005, 323 p. \n[9] J. Koski, Defectiveness of Weighting Method in Multicreterion Optimization of \nStructures. Communications in Applied Numerical Methods, 1 (1985) 333-337.  \n[10] J. Koski, Multicriteria Truss Optimization, Multicriteria Truss Optimization in \nEngineering and in the Sciences, Edited by W. Stadler, Plenum Press, New York, 1988: \n263-307. \n[11] A.V. Lotov, V.A. Bushenkov, G.K. Kamenev Interactive Decision Maps: \nApproximation and Visualization of Pareto Frontier, Kluwer: Applied Optimization, \nVol. 89, 2004, 310p.  \n[12] M.P. Martinez, A. Messac, M. Rais-Rohani, Manufacturability-Based Optimization \nof Aircraft Structures Using Physical Programming, AIAA J., 39 (3), (2001) 517-525. \n[13] A. Messac, From the Dubious Construction of Objective Functions to the \nApplication of Physical Programming.  AIAA Journal, 38 (1), (2000) 155-163.  \n[14] A. Messac, Physical Programming Effective Optimization for Computational \nDesign. AIAA Journal, 34 (1), (1996) 149-158.  \n[15] A. Messac and A. Ismail-Yahaya, Required Relationships Between Objective \nFunction and Pareto Frontier Orders: Practical Implications, AIAA Journal, 39 (11), \n(2001) 2168-2174.  \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 42\n[16] A. Messac, A. Ismail-Yahaya, C.A. Mattson, The Normalized Normal Constraint \nMethod for Generating the Pareto Frontier. Structural and Multidisciplinary \nOptimization,  25 (2), (2003) 86-98.  \n[17] A. Messac and C. Mattson, Normal Constraint Method with Guarantee of Even \nRepresentation of Complete Pareto Frontier. AIAA Journal, 42 (10), (2004) 2101-2111.  \n[18] A. Messac and C. Mattson, Generating Well-Distributed Sets of Pareto Points for \nEngineering Design Using Physical Programming. Optimization and Engineering, 3 \n(2002) 431-450.   \n[19] A. Messac, E. Melachrinoudis, C. Sukam, Aggregate Objective Functions and \nPareto Frontiers: Required Relationships and Practical Implications. Optimization and \nEngineering Journal, 1 (2), (2000) 171-188.     \n[20] A. Messac, C.P. Sukam, E. Melachrinoudis, Mathematical and pragmatic \nperspectives of physical programming.  AIAA Journal, 39 (5), (2001) 885-893. \n[21] K.M. Miettinen, Nonlinear Multiobjective Optimization, Kluwer Academic: \nBoston, 1999; 298. \n[22] S. Ruzika and M.M. Wiecek, Approximation Methods in Multiobjective \nProgramming, J. of Optimization Theory and Applications, 126 (3), (2005) 473-501.   \n[23] W. Stadler, Multicriteria Optimization in Engineering and in the Sciences, Plenum \nPress, New York, 1988. \n[24] M.D. Guenov, S.V. Utyuzhnikov, P. Fantini, Application of the modified physical \nprogramming method to generating the entire Pareto frontier in multiobjective \noptimization, EUROGEN, Munich, 2005. See, also, http:\/\/arxiv.org\/abs\/math.OC\/0512055.  \n[25] T.L. Vincent and W.J. Grantham, Optimality in Parametric Systems, John Wiley \nand Sons, New York, 1981; 243. \n \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 43\n \nFig. 1. The class-functions \n \nFig. 2. Original search domain in the objective space \n \nFig. 3. New search domain after transform \n \n \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 44\n \n \n \nFig. 4. Local basis vectors in an i-th hyperplane \n \n \nFig. 5. Rotation of the search domain \n \n \n \n \nSingle recursive\noptimisatin for\ndetermination of\nunique anchor points\nComputation of\nutopia hyper-plane\npoints\nSearch Domain\nRotation\nPareto solution search in a\nselected search domain\nPareto set filtering\nfor removal of local\nPareto points\nFinal Pareto set\nCurrent Pareto\npoint\nbelonging to\npolygon edge?\nYes\nNo\nSolution\nfound?\nYes\nSearch Domain\ndirection switching\nNo\nFig. 6. Verification of global Pareto \nFig. 7 Flowchart \n \n \n \n \n \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 45\n \nFig. 8a. Standard search domain. Convex Pareto \nfrontier \n \n \nFig. 8b. Transformed search domain. Convex Pareto \nfrontier \n \nD D%\n \n \nFig. 9a. Standard search domain.  \nConcave Pareto frontier \n \nFig. 9b. Transformed search domain.  \nConcave Pareto frontier \n \n \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 46\nFig. 10. Hyperellipsoid frontier Fig. 11a. 3D test case. Projection of the Pareto \n surface onto the utopia plane \n \n \n \nFig. 11b. 3D test case. Utopia plane \n \nFig. 11c. 3D test case. Pareto surface \n \n \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 47\n \n \n \n \nFig. 11d. 3D test case. Pareto surface.  \nModified NC method. Anchor points: \n (0,0,1), (1,0,0), (0,1,0)  \n \nFig. 11e. Feasible space in NC algorithm. \n \nFig. 11f. 3D test case. Pareto surface. \nModified NC method. Anchor points: \n (0,1,1), (1,0,1), (1,1,0)  \n \n \n \n \nFig. 12a. 3D test case. Pareto surface \n \n \nAC\nC\nEP\nTE\nD\nM\nAN\nU\nSC\nR\nIP\nT\nACCEPTED MANUSCRIPT 48\n \nFig. 12b. 3D test case. Pareto surface. \nModified NC method. \nFig. 13.  4-bar truss structure \n \nFig. 14. Four-bar truss problem \n \n \n \n \n \n \n \n"}