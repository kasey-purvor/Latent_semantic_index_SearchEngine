{"doi":"10.1504\/IJCAT.2010.031934","coreId":"65261","oai":"oai:dro.dur.ac.uk.OAI2:6367","identifiers":["oai:dro.dur.ac.uk.OAI2:6367","10.1504\/IJCAT.2010.031934"],"title":"Linking design and manufacturing domains via web-based and enterprise integration technologies.\\ud","authors":["Cheung,  W. M.","Maropoulos,  P. G.","Matthews,  P. C."],"enrichments":{"references":[],"documentType":{"type":1}},"contributors":[],"datePublished":"2010-01-01","abstract":"The manufacturing industry faces many challenges such as reducing time-to-market and cutting costs. In order to meet these increasing demands, effective methods are need to support the early product development stages by bridging the gap of communicating early design ideas and the evaluation of manufacturing performance. This paper introduces methods of linking design and manufacturing domains using disparate technologies. The combined technologies include knowledge management supporting for product lifecycle management systems, Enterprise Resource Planning (ERP) systems, aggregate process planning systems, workflow management and data exchange formats. A case study has been used to demonstrate the use of these technologies, illustrated by adding manufacturing knowledge to generate alternative early process plan which are in turn used by an ERP system to obtain and optimise a rough-cut capacity plan.\\u","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/65261.pdf","fullTextIdentifier":"http:\/\/dro.dur.ac.uk\/6367\/1\/6367.pdf","pdfHashValue":"362372fa8db809adbb78b6ab66d84601286bf541","publisher":"Inderscience","rawRecordXml":"<record><header><identifier>\n  \n    \n      oai:dro.dur.ac.uk.OAI2:6367<\/identifier><datestamp>\n      2011-12-08T09:45:13Z<\/datestamp><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n    \n      \n        Linking design and manufacturing domains via web-based and enterprise integration technologies.\\ud\n<\/dc:title><dc:creator>\n        Cheung,  W. M.<\/dc:creator><dc:creator>\n        Maropoulos,  P. G.<\/dc:creator><dc:creator>\n        Matthews,  P. C.<\/dc:creator><dc:description>\n        The manufacturing industry faces many challenges such as reducing time-to-market and cutting costs. In order to meet these increasing demands, effective methods are need to support the early product development stages by bridging the gap of communicating early design ideas and the evaluation of manufacturing performance. This paper introduces methods of linking design and manufacturing domains using disparate technologies. The combined technologies include knowledge management supporting for product lifecycle management systems, Enterprise Resource Planning (ERP) systems, aggregate process planning systems, workflow management and data exchange formats. A case study has been used to demonstrate the use of these technologies, illustrated by adding manufacturing knowledge to generate alternative early process plan which are in turn used by an ERP system to obtain and optimise a rough-cut capacity plan.\\ud\n<\/dc:description><dc:publisher>\n        Inderscience<\/dc:publisher><dc:source>\n        International journal of computer applications in technology, 2010, Vol.37(3\/4), pp.182-197 [Peer Reviewed Journal]<\/dc:source><dc:date>\n        2010-01-01<\/dc:date><dc:type>\n        Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:identifier>\n        dro:6367<\/dc:identifier><dc:identifier>\n        issn:0952-8091<\/dc:identifier><dc:identifier>\n        issn: 1741-5047<\/dc:identifier><dc:identifier>\n        doi:10.1504\/IJCAT.2010.031934<\/dc:identifier><dc:identifier>\n        http:\/\/dro.dur.ac.uk\/6367\/<\/dc:identifier><dc:identifier>\n        http:\/\/dx.doi.org\/10.1504\/IJCAT.2010.031934<\/dc:identifier><dc:format>\n        application\/pdf<\/dc:format><dc:identifier>\n        http:\/\/dro.dur.ac.uk\/6367\/1\/6367.pdf<\/dc:identifier><dc:rights>\n        Copyright \u00a9 2010 Inderscience Enterprises Limited. All rights reserved.<\/dc:rights><dc:accessRights>\n        info:en-repo\/semantics\/openAccess<\/dc:accessRights><\/oai_dc:dc><\/metadata><\/record>","journals":[{"title":null,"identifiers":["issn:0952-8091","issn: 1741-5047"," 1741-5047","0952-8091"]}],"language":{"code":"en","id":9,"name":"English"},"relations":[],"year":2010,"topics":[],"subject":["Article","PeerReviewed"],"fullText":"Durham Research Online\nDeposited in DRO:\n01 February 2010\nVersion of attached file:\nAccepted Version\nPeer-review status of attached file:\nPeer-reviewed\nCitation for published item:\nCheung, W. M. and Maropoulos, P. G. and Matthews, P. C. (2010) \u2019Linking design and manufacturing\ndomains via web-based and enterprise integration technologies.\u2019, International journal of computer\napplications in technology., 37 (3\/4). pp. 182-197.\nFurther information on publisher\u2019s website:\nhttp:\/\/www.inderscience.com\/browse\/index.php?action=articlesjournalID=5\nPublisher\u2019s copyright statement:\nCopyright 2010 Inderscience Enterprises Limited. All rights reserved.\nAdditional information:\nUse policy\nThe full-text may be used and\/or reproduced, and given to third parties in any format or medium, without prior permission or charge, for\npersonal research or study, educational, or not-for-profit purposes provided that:\n\u2022 a full bibliographic reference is made to the original source\n\u2022 a link is made to the metadata record in DRO\n\u2022 the full-text is not changed in any way\nThe full-text must not be sold in any format or medium without the formal permission of the copyright holders.\nPlease consult the full DRO policy for further details.\nDurham University Library, Stockton Road, Durham DH1 3LY, United Kingdom\nTel : +44 (0)191 334 3042 \u2014 Fax : +44 (0)191 334 2971\nhttp:\/\/dro.dur.ac.uk\n  \nDurham Research Online \n \nDeposited in DRO: \n01 February 2010 \n \nPeer-review status: \nPeer-reviewed \n \nPublication status: \nAccepted for publication version \n \nCitation for published item: \nCheung, W. M. and Maropoulos, P. G. and Matthews, P. C. (2010) 'Linking design and \nmanufacturing domains via web-based and enterprise integration technologies.', \nInternational journal of computer applications in technology., 37 (3\/4). pp. 182-197. \n \nFurther information on publishers website: \nhttp:\/\/www.inderscience.com\/browse\/index.php?action=articles&journalID=5 \n \nPublisher\u2019s copyright statement: \nCopyright \u00a9 2010 Inderscience Enterprises Limited. All rights reserved. \n \n \n \n \n \n \n \n \n \n \n \n \nUse policy \n \nThe full-text may be used and\/or reproduced, and given to third parties in any format or medium, without prior \npermission or charge, for personal research or study, educational, or not-for-profit purposes provided that : \n \n\uf0a7 a full bibliographic reference is made to the original source \n\uf0a7 a link is made to the metadata record in DRO \n\uf0a7 the full-text is not changed in any way \n \nThe full-text must not be sold in any format or medium without the formal permission of the copyright holders. \n \nPlease consult the full DRO policy for further details. \n \nDurham University Library, Stockton Road, Durham DH1 3LY, United Kingdom \nTel : +44 (0)191 334 2975 | Fax : +44 (0)191 334 2971 \nhttp:\/\/dro.dur.ac.uk \nLinking Design and Manufacturing Domains via Web-based \nand Enterprise Integration Technologies \n \nWai M Cheung T* \nDepartment of Mechanical Engineering \nInnovative design and Manufacturing Research Centre  \nUniversity of Bath \nBath BA2 7AY \nUK \nPhone: +44 (0)1225 386131 \nFax: +44 (0)1225 386928 \ne-mail: {w.m.cheung@bath.ac.uk}  \n  \n \nPaul G Maropoulos \nInnovative Manufacturing Research Centre  \nDepartment of Mechanical Engineering \nUniversity of Bath \nBath BA2 7AY. \nUK \nPhone: +44 (0)1225 385376 \nFax: +44 (0)1225 386928 \ne-mail: {p.g.maropoulos@bath.ac.uk}  \n \nPeter C Matthews \nDesign and Manufacturing Research Group \nSchool of Engineering \nUniversity of Durham \nSouth Road, \nDurham DH1 3LE \nUK \nTelephone: +44 (0) 191 3342538 \nFax: +44 (0) 191 3342396 \ne-mail: p.c.matthews@durham.ac.uk \n \n \n \n \n* Corresponding author \n \nReference to this paper should be made as follows: Wai M Cheung, Paul G Maropoulos \nand Peter C Matthews (200X), \u201cLinking Design and Manufacturing Domains via Web-\nbased and Enterprise Integration Technologies\u201d, Special Issue on: \u201cKnowledge-Driven \nProduct Innovation and Enterprise Management\u201d Int. J. of Computer Applications in \nTechnology, Vol. XX, No. XX, pp.XX\u2013XX. \n \n \n 1\nBiographical notes:  \n \nWai Ming Cheung is a Post Doctoral Research Officer at the University of Bath, UK. He \nobtained his PhD in Engineering from the University of Durham (2007). He has authored \nand co-authored of more than 40 publications at national and international levels. His \ncurrent research interests including Knowledge Management in Design and \nManufacturing, Through Life Costing from design to disposal, Digital Enterprise \nTechnology (DET), enterprise systems integration and open source solutions in product \ndevelopment.  \n \nPaul Maropoulos holds the \u201cChair of Innovative Manufacturing\u201d at the Department of \nMechanical Engineering of the University of Bath. Paul Maropoulos is a Fellow of the \nInternational Academy for Production Engineering, a Eur Ing and a Member of the UK\u2019s \nEPSRC College. He is a Member of the Editorial Board of the \u201cInternational Journal of \nIndustrial and Systems Engineering\u201d, the \u201cChinese Journal of Mechanical Engineering\u201d \nand the \u201cProceedings of the IMechE, Part B: Journal of Engineering Manufacture\u201d. He is \nthe Founder and Chair of the International Series of Conferences in \u201cDigital Enterprise \nTechnology\u201d and a member of the Scientific Committees of numerous refereed \nconferences. Paul Maropoulos has published 3 edited books and more than 170 refereed \npapers, 50 of which in learned journals. \n \nPeter Matthews is a Lecturer in Design Informatics at the School of Engineering at the \nUniversity of Durham.  He obtained a BA in Mathematics (1994), a Diploma in Computer \nScience (1995), and a PhD in Engineering Design (2002) from Cambridge University.  \nHe then remained at Cambridge for a further year as a research associate.  His core \nresearch interests are in applying Machine Learning techniques to design problems. \n \nAbstract \n \nThe manufacturing industry faces many challenges such as reducing time-to-market and \ncutting costs. In order to meet these increasing demands, effective methods are need to \nsupport the early product development stages by bridging the gap of communicating early \ndesign ideas and the evaluation of manufacturing performance. This paper introduces \nmethods of linking design and manufacturing domains using disparate technologies. The \ncombined technologies include knowledge management supporting for product lifecycle \nmanagement (PLM) systems, enterprise resource planning (ERP) systems, aggregate \nprocess planning systems, workflow management and data exchange formats. A case \nstudy has been used to demonstrate the use of these technologies, illustrated by adding \nmanufacturing knowledge to generate alternative early process plan which are in turn \nused by an ERP system to obtain and optimise a rough-cut capacity plan. \n \nKeywords: Product Lifecycle Management, Enterprise Resource Planning, Product \nDevelopment, Conceptual Design, Knowledge Management, Enterprise Integration \n \n \n1. INTRODUCTION \nOne of the key industrial problems for modern manufacturers is the lack of collaboration \nduring the early stages of product development. This problem is usually due to the \nfollowing: \n 2\n(1) A techniques for the rapid translation of early design ideas into an analysable \nform, and \n(2) A meaningful manufacturing knowledge in the feedback evaluation process  \nThe industrial impact of the above problem is felt in many areas, such as vital decision-\nmaking especially in the areas of product configuration and the responsiveness to \nchanging markets and meeting customer requirements such as engineered-to-order. \nTherefore, it is important to interact with the customer to meet product definition during \nthe earliest concept stage of product development. Hence, it is imperative that the \nOriginal Equipment Manufacturers (OEM), suppliers, vendors and customers can interact \neffectively and generate a conceptual design that is manufacturable and cost effective. \nThe way to achieve this is by effective communication within the enterprise from the \nproduct design team and manufacturing operation.  \n With the advances in information and web-based technologies over the last \ndecade, there is a shift of research towards focus on product development. Recently, a \nnumber of research projects have been undertaken to support collaborative and distributed \nsolutions from the perspective of computer-aided design (CAD), PLM, workflow \nmanagement, knowledge management and Web-based technologies. The key results of \nthese are summarised as follows. \nXiao et al. (2001) developed a Web-based Distributed Production Realization (Web-\nDPR) system as an infrastructure to support collaborative design and manufacturing. \nBased on the Java remote method invocation (RMI) mechanism, agents and an event-\nbased mechanism, the functional modules of the systems can be linked and co-ordinated \neffectively. However, the application is not specifically designed for conceptual design or \nfor passing data on to process planning applications.  Similarly, Qiang et al. (2001), \ndeveloped a collaborative product design support environment based on the Internet. The \nkey aspect of that research is allow product designers to exchange and share product data \nand communicate with team members to modify geometry data on particular aspects of \nthe design, and maintain operations consistency in all the distributed cooperative sites on \na wide variety of platforms. A limitation of this approach is that the macro operations can \nonly be replayed on workstations using the same CAD software. Similarly, Xie and \nSalvendy (2003) developed a mechanism to co-ordinate remote members in the process of \na collaborative project. Workers are able to actively obtain the constant feedback of the \nstatus and activities of members contributing to the whole set of collaborative tasks. For \nexample, information about who the collaborators are, where they are now, and what they \nare doing. The authors have noted the shortcomings of this prototype system being no \nversion control or other security features. There are some further other disadvantages \nrelevant to real-world application such as the inability to share data with other CAD \nusers.  \nTo address the above limitations, Xu and Liu (2003) developed an architecture utilizing a \nWeb-enabled Product Data Management (PDM) system in a collaborative design \nenvironment. The system was implemented using Microsoft Visual Basic and runs in the \nMicrosoft Windows environment and the internet to allow users on a wide variety of \nplatforms to access the product data. The research however was focused on the detail \nstage of the design. The authors have noted that the implementation of the system is \npartial and further research is needed for transforming geometry schema into the object-\noriented schema. Visual Basic executables rely upon run time libraries which need to be \nstored on the client machine which makes it inflexible.   \nLi et al. 2004 (a) developed a client\/server framework to enable a dispersed team to \naccomplish a feature-based design task collaboratively. In this research, the establishment \nof the distributed design environment is based on RMI. The process of designing a part \n 3\ncollaboratively in the environment is centrally server based. The collaborative server can \ncreate and manage dynamic sessions which can be accessed by clients to provide a \nworkspace to carry out collaborative design activities. Designers participating in the same \nsession can share the same design model. The authors have noted that there are still some \ntechnical problems to be addressed.  Firstly, the current information management on the \nserver is a file system-based which can be replaced by a database system. Another issue is \nthat the system lacked detailed visualisation information of mechanical parts in order to \nsupport web-based collaboration. However, Li et al. (2004 (b)) have also developed an \nInternet-enabled system based on Java, RMI and Web technologies to support \ncollaborative and concurrent engineering design by integrating three functional modules, \nnamely co-design, for Web-based visualisation and manufacturing analysis. In the co-\ndesign module, designers are equipped with co-modelling and co-modification facilities \nto carry out a design task collaboratively. The Web-based visualisation module provides a \nportal for users to view and analyse a design part conveniently. Manufacturing analysis \nmodule can be invoked by users to evaluate and optimise the manufacturing costs and the \nmanufacturability of a design part. This system can be used for a geographically \ndistributed design team to organise a 3D collaborative and concurrent engineering design. \n The applications of workflow and knowledge management have been used to \nsupport a collaborative product development, for example, the most recent research are \nMadhusudan (2005) and Rodriguez and Al-Ashaab (2005). Madhusudan (2005) \ndeveloped an Agent-based Process Coordination (APC) framework for distributed design \nprocess management. The approach is to embed autonomous agents in a workflow-based \ndistributed systems infrastructure. The framework utilizes a centralized decision-making \nand task sharing approach to support design activities. A design process plan is executed \nby a centralized coordination agent with the help of service agents. However, the research \ndoes not state how the data is to be shared across different applications in the downstream \nprocesses and whether the software tool works in a real-time collaborative environment. \nRodriguez and Al-Ashaab (2005) proposed a knowledge driven collaborative product \ndevelopment (CPD) system architecture. The research is focused on the provision of real-\ntime manufacturing knowledge to support geographically distributed companies in \nmaking engineering decisions. The sources of manufacturing knowledge are the \nmanufacturing process, resource capabilities, company experience, technical documents \nand industrial heuristic knowledge. The architecture developed as modular-based and the \nmanufacturing knowledge model and the product model are implemented as object-\noriented databases. The information is accessed using a back-end connectivity CORBA \n(OMG 2007). However, the authors have stated that there is no real time visualization of \nthe geometry and therefore the design cannot be modified over the internet.  Another \nshortcoming is that the research did not address the problem of how manufacturing \nknowledge can be represented in a common format to enable sharing in geographically \ndistributed companies using different software packages. \nAmong the above authors, Huang et al. are particularly focused in collaborative product \ndevelopment. Huang et al. (2001) developed a Web-based system to manage engineering \nchanges (ECs) in a collaborative product development activity. ECs frequently happen \nduring a design process, and managing the ECs in a Web-based system can facilitate \nbetter information sharing, simultaneous data access and more prompt communications \namong team members. The system can play as a complementary tool to a PDM system to \nenhance its capability in the management of ECs. Meanwhile, Huang extended the Web-\nbased system to support product design review to support a design chain (Huang and \nMak, 2000; Huang 2002). The design review system functions as follows: \n 4\n\u2022 Simulate an on-line central review meeting room equipped with a Virtual Reality \nModelling Language (VRML) whiteboard for visualising an on-line design \nmodel.  \n\u2022 A review co-ordinator to provide a set of facilities for a project manager to plan \nthe activities and resources involved in the review process.  \n\u2022 A Bill-of-Materials (BoM) explorer to store and share review comments and \nsome relevant documents.  \nHowever, the above paradigm requires a series of repeatable request-download processes \nof static HyperText Mark-up Language (HTML) pages that are executed locally.  Under \nthis paradigm, once the download process finished, the server loses control of the relevant \nHTML pages.  Hence, this will cause undesirable results such as the up-to-date \ninformation for design changes may not be available to other clients in the collaborative \nproduct development activities. \nAmong all the research discussed however, none of them particularly addressed \ncollaborative product development and information distribution to support the early \ndesign stages with disparate technologies and software tools, which will increase the \npotential industrial benefits of front-end responsiveness, quality of design and production \ndecisions. The combined disparate technologies include knowledge management using \nontological technique supporting by PLM, ERP, aggregate manufacturing modelling, \nworkflows management and eXtensible Markup Language (XML) data exchange format.  \n2. THE PROPOSED SOLUTIONS \nThe aim of this paper is to present methods for the effective management of the internet-\nbased process of communicating new product requirements and manufacturing \nperformance evaluations. The demonstration of the case study will focus on the critical \nearly stages of product development throughout the product life cycle using PLM, ERP \nand related Web-based technologies. An integration architecture for product development \nhas been developed to facilitate bridging the gap between the application of PLM, \nEnterprise Resource Planning (ERP), Web-based technologies and manufacturing and \ndesign domains.  \nSolutions to these problems are proposed and described below. In order to meet the \ndevelopment in linking design and manufacturing domains, the novel aspects of the \nresearch work are:  \n\u2022 The ability to easily create, modify and utilise design and manufacturing knowledge \nduring the early design phase.  \n\u2022 To create assembly plans for the components and evaluate the potential viability \nusing assembly planning tool and interface with ERP tool. \n\u2022 PLM which holds all design data and meta-data as well as enabling version control of \ndesign iterations and access to shared work area for the team members.  \n\u2022 Secure data communications technologies to allow data to flow between team \nmembers and the central repository using an activities co-ordination mechanism \nThe next section focuses on the implementation issues of PLM, ERP and Web-based \ntechnologies. The integration architecture forms the theoretical backbone and defines the \nrole of the system in supporting product development in a collaborative and knowledge \ndistributed environment.  The integration architecture is designed to be used by product \ndesign, product development and manufacturing engineers to explore possible design \nalternatives in a Web-based environment. The main feature within the integration \n 5\narchitecture is the introduction of an activities co-ordination mechanism to link design \nand manufacturing domains. In practice, the integration environment can be used in a \ncollaborative manner by vendors, original OEMs and suppliers with deployment of \ndifferent ERP and PLM\/PDM systems.  \n3. THE PRODUCT DEVELOPMENT INTEGRATION ARCHITECTURE  \nThe proposed integration architecture is illustrated in Figure 1. The overall integration \nenvironment is categorized into three layers. The first layer is the enterprise systems \nwhich consist of the PLM\/PDM and ERP technologies.  The second layer is the \ncommunication and data exchange mechanism. The third layer consists of the \nManufacturing and Design Domains. \nThe architecture uses PLM systems to address design interoperability. This solution \nprovides the functionality of different designers at different locations to access the same \ndesign collaboratively. The architecture also supports STEP-based standards for \ngeometric models. This standards-based collaboration can work in a global, distributed, \nand heterogeneous design environment. In addition, PLM offers lifecycle management \nand versioning control for the design and the ability to see the history or \u2018evolution\u2019 of a \ndesign through all its iterations. Thus, this allows geographically dispersed users to co-\nedit CAD geometry and related tasks dynamically.  \nPLM\/PDM\nAggregate Process Planning \nSystem (APPS) \nAggregate Manufacturing \nModelling\nManufacturing\nKnowledge \nBased System\nManufacturing Domain\nERP\nWATC \/ XML Parser\nDesign \nKnowledge \nBased System\nSTEP\nModeller\nDesign Domain Design and Manufacturing \nSystems Layer\nIntegration Protocol\nLayer\nEnterprise \nLayer\n \nFigure 1: Overall System Integration Architecture in Product Development \n3.1 The Enterprise Layer  \nThe deployment of a PLM\/PDM system provides an \u2018integration wrapper\u2019 for the entire \nintegrated system. It supports an online distributed and collaborative environment with \nspecific functions including product data\/document management, versioning control, \nworkflows and lifecycle management. The term integration wrapper denotes the ability to \n\u201cwrap data and knowledge\u201d from different domains into a common format, such as XML, \nso that a file can be shared within a distributed PLM environment and readily interpreted \nby using the terminology definitions of the ontology. The deployment of an open source \nERP system is mainly used to generate capacity requirements planning based on the \nassembly and subassembly sequences of specific products.  \n 6\n3.2 The Integration Protocol Layer  \nAn XML Parser is deployed as the interfacing technology between a PLM system and the \nManufacturing and Design Domains for data interchange. This enables interchanging \nportions of XML documents while retaining the ability to parse them correctly and, as far \nas practicality is concerned, they can be formatted, edited, and processed in useful ways. \nThe discussion of implementing the XML Parser is in Section 3.4.   \n3.3 The Design and Manufacturing Systems Layer  \nThe manufacturing domain consists of an Aggregate Process Planning System (APPS) \n(Bramall et al, 2003) and manufacturing knowledge-based system (Cheung et al, 2006). \nThe design domain consists of a STEP Modeller and the Design Knowledge-Based \nSystem (Aziz et al, 2005).  A CAD system Pro\/Desktop is used as the solid modeller to \ndisplay the image of the product through a PLM Visualization functionality. An Oracle \ndatabase server is also deployed to handle requests for knowledge and model information \nas well as deploy PLM functionalities through the use of Java Database Connectivity \n(JDBC).  \n3.4 Coordination of the Activities within the Integration Architecture   \nThe integration of distributed and time dependent components requires a time \nsynchronisation model. The time based co-ordination element requires the recognition of \nthe time-dependencies of activities within a distributed team that use the stored data and \nknowledge. In general, a PLM system comprises; a \u201cDocument Manager\u201d that contains a \nlist of user defined cabinets to store data files, a \u201cLifecycle\u201d function that defines the \ntiming of the development stages and a \u201cWorkflow\u201d function that determines what \nprocesses and interactions take place at each stage. Clearly, PLM functions can be used as \na foundation for defining a time based integration wrapper as a time synchronisation \nmodel.  \n \n3.4.1 Workflows Activity Task Controller (WATC) \n  \nA novel \u201cWorkflows Activity Task Controller\u201d (WATC) methodology has been defined \nto implement the time based integration wrapper concept in the interactions between \ngeneric types of PLM, ERP, Knowledge-Based systems and Process Planning functions. \nThe methodology has been formalised in UML as shown in Figure 3. WATC sequences \nearly design activities including concept definition, design development, manufacturing \nknowledge sharing and automated aggregate plan generation. WATC currently supports \nthe following five early design stages:  \n1. Receive\/Understand Customer Product Request and Formalise Design \nSpecification.  \n2. Generation of Conceptual Design by the Product Development Team.  \n3. Distributed Review of the Conceptual Model and Addition of Manufacturing \nKnowledge and Constraints.  \n4. Deployment of Capability Analysis for the Prioritisation of Product \nDevelopment Tasks.  \n5. Generation of Aggregate Process Plans (Routings) and Integrated Capacity \nPlanning. \n 7\nThe core technologies behind WATC are methods to control the interactions of a PLM \nsystem, a Knowledge Based System and a Process Planning System. The implementation \nof WATC is centred on the lifecycle and workflow functionalities of the PLM.  \nThe workflow starts with the customer\u2019s request for a new product or a change to an \nexisting product as shown in Figure 2. All business processes are modelled graphically \nwithin the PLM system as flow charts. The initial stage is adding customer historical \ninformation such as previous product specifications, customer buying experience and \nrelationships. This can be done by invoking a knowledge-based system. The knowledge-\nbased system consists of two separate modules, one is for the design knowledge \nmanagement system that captures information related to product design and design \nstandards, and the other is for manufacturing knowledge management to capture process \nand resource related knowledge.   The key stages of the workflow process are: \n1. The primary action of the workflow is to activate the process by assigning a task \nto make a connection with the KBS. All the information or relevant knowledge \nis stored or retrieved via a Windchill PLM Cabinet function (PTC Windchill \n2002).  The Windchill Cabinet function is used to store product centric \ninformation and provides a method of locating information within the PLM \nsystem.  \n2. The second stage of the workflow is to assign a concurrent task which involves \nnotifying team members of the development team and issues requests to the \nappropriate personnel to enter conceptual design data.  \n3. The third stage of the workflow is to review the conceptual design.  \n4. The fourth stage is an XML Parser mechanism which supports the interaction of \ndata reused of the APPS and PLM systems. \n5. The final stage involves capacity planning and implementation. \n \n 8\n  Generate Process Plan \n Detailed Analysis \nLOCAM  \n ERP - Rough Cut and Capacity \nPlanning \n CAPABLE Aggregate \nProcess Planning \n Review  Design\n Reject Request\n Send to Customer\nNotify \nMembers  \nWaiting for \nCustomer \nResponse \nPDM \n Customer \nRequest \n Adding Customer \nHistoric \nInformation \n Read Request and \nAssign Tasks \n Enter Conceptual \nDesign Data \n Review Conceptual \nModel \nMarketing \nProduct Requirements \nUpdate \nConceptual  \nDesign \nProduction \nDefinition \nAdding New \nKnowledge \nNew Product \nDefinition \nProduct \nDefinition + \nResources \nDecisions \nEnd \nElse \nEnd \nYes\nNo\nWorkable Reject \nAccept \nAccept \nReject for further analysis \nKnowledge Based System\nPDM Cabinet\nProcess Planning\n\u2026\nWATC  \nWorkflow \u2013 Activity Task Controller\nX\nM\nL Parser\nStage One Two Three Four Five \n \nFigure 2: Time Dependency Scenario using WATC Concept \n3.4.2 The XML Parser Mechanism  \n \nThe XML Parser is responsible for extracting manufacturing knowledge from the XML \nformatted knowledge file to be reused by the process planning engine in the APPS. With \nthe attachment of updated historical information and manufacturing knowledge, a new \nproduct definition will be generated. The product definition will be delivered to the APPS \nto obtain preliminary process plans. The purpose of the APPS is to allow alternative \nprocess plans (or routings) for custom parts to be generated, evaluated and improved \nbased upon estimated manufacturability before committing to a fully specified product \nmodel and supplier. The new process plans (routings) are then delivered to the PLM \nsystem for Plan\/Review.    \n3.4.2.1 Methods of Creating the XML Parser  \nThe advantage of using an XML-formatted file is that there is a whole range of generic \nXML tools available to create an XML Parser for extracting the information and \ntranslating it into the required format of a proprietary tool to re-use. In this case, an XML \nParser has been created for transferring the stored knowledge to the APPS. An XML \nParser has been created based on the Java programming language. Figure 3 illustrates a \nUML Activity Diagram (Schmuller 1999) to represent the algorithm of a Java-based \nXML Parsers\u2019 internal methods that are used to read and extract the information (of data \ntype string) and translate it into the format of a third party software system. The \n 9\nillustration represents two specific roles, the initial role is to Prepare XML Metadata and \nthe second role is to Extract XML Metadata. Transition can take place from one role to \nanother.  \n \nFigure 3: Algorithm of a Java-based XML Parsers\u2019 internal methods \n4 CASE STUDY  \n4.1 Objectives and Aims  \nThe industrial collaborator, M&J Ltd is increasing their business internationally with \ndistributed operations and supply networks. They aim to develop greater flexibility in \nreacting to customer requirements on a world-wide basis and are particularly interested in \nthe integration of design with manufacturing operations through enterprise and web-based \ntechnologies. This will give them the ability to explore remote business opportunities and \ndistributed sourcing options. The objective of the test is to demonstrate the various \nsoftware components to bridge the gap of communicating early product ideas in the \ndesign domain and the manufacturing domain to support product development processes. \nThe aim of the evaluation was to test: \n1. The technical feasibility based upon the data supplied and collected from the \nindustrial collaborator, and  \n2. The WATC method to coordinate early design activities using PLM and ERP \ntechnologies, the organisational knowledge-based system and the aggregate process \nplanning system.  \nThe exercise concerned the evaluation of a Bailey\u2019s single steel bridge panel at the \nconceptual design stage and how decision support can be enhanced.    \n4.2 Application of the Aggregate Process Planning System (APPS)  \n4.2.1 The Product Description \n \nAn example of the type of weld is shown in Figure 4(b) illustrates the model of a bridge \npanel with EBoM (Engineering Bill of Material) configurations and the example product \nmodel modelled within the Aggregate Process Planning System.  The product model \nrepresents a conceptual design stage of a single Bailey\u2019s steel bridge panel. \n 10\n (b) EBoM of Product configurations\n Figure 4: Product Model of a Single steel bridge panel \n4.3 Factory Model Used in Testing \nThe factory layout of M&J is made up by a series of cells and within every cell there is a \ndedicated workcentre. The type of cells and workcentre(s) indicate the type of machines \nand their operations. Figure 5 illustrates the factory design module as modelled in the \nAggregate Process Planning system. It clearly shows the position of individual cells and \nassociated machine types.  Datasheets (see Table 1) for robotic handling and welding \ntools were used to specify process parameters for the robotic centres, giving a range of \n 11\ntools that would be able to perform all handling and welding operations. \n \nFigure 5: Screenshot of the APPS Factory Model \nResource name Max. \nTravel \nSpeed \n(mm\/s) \nMax. \nWeld Flow \nRate \n(mm\u00b3\/s) \nMax. \nFeeding \nVelocity \n(mm\/s) \nMax \nWeld \nCord \nDiameter \n(mm) \nMax \nLoading \n(kg) \nMax \nArm \nlength \n(mm) \nDuration \n(Hrs) \n \u2018IRB 4400\u2019 250 NA 72 NA 60 1950 NA \n \u2018IRB 1400\u2019 250 NA 72 NA 5 1440 NA \n \u2018IRB 340\u2019 100 NA NA NA 1 NA NA \n \u2018IRB 6400PE\u2019 250 3 72 14 120 2500 NA \n  \u2018IRB 6400R\u2019 250 3 72 14 500 2250 NA \nGalvanising \nPlant NA NA NA NA NA NA 24 \n  \nTable 1: Example Resource Model Data  \n4.4 Process Model   \nProcess modelling is used to identify the type of process needed to assemble the bridge \npanel. The Process Model provides specific methods which have been developed to \ncalculate manufacturing time and production quality. Resource Modelling is used to \nspecify process parameters for the selected machining centres i.e. to give a range of tools \nwhich will be able to perform all necessary operations associated with the product \nfeatures. Figure 6 shows a user interface of the process model in the APPS. In order to \nUser \nInterfac\nNames \nof Cells\nGalvanizing Trailers with \nstations of \u2018Surface_Coating\u2019, \n\u2018G l i i \u2019 d\nFactory\u2019s \nCells Plan \nL t\n 12\nassemble the bridge panel at M&J, other types of processes are also available within the \nsystem.  These are:  \n\u2022 semi and fully automatic robotic welding,  \n\u2022 manual welding,  \n\u2022 drilling,  \n\u2022 surface coating,  \n\u2022 galvanising,  \n\u2022 immerse washing and inspection.  \nFurthermore, the company has also imposed Welding Process Specification, Just-in-time \nand Kanban techniques to improve the shop floor efficiency. Each of the processes and \ntechniques require a high degree of know-how to operate successfully.   \n \nFigure 6: Screenshot of the APPS Process Model \n4.5 Aggregate Process Planning for a Single Bridge Panel \nThe process plan represents a sequence of assembly and subassembly operations for the \nconstruction of a single bridge panel. The steps of the assembly sequence of the final \nproduct is made up by a number of subassemblies A, B, C, D, E and F as represented in \nFigure 7. Each of the subassemblies is made up of a number of design feature units as \nindicated in the diagram. For instance, subassembly A and one unit of vertical beam \nproduced subassembly B. Similarly, subassembly B and one unit of vertical beam \nproduced subassembly C. Once the bill of material for the end product has been prepared, \nan aggregate process plan can be obtained via the APPS.  \nProcess \nDescripti\non\nUser \nInterface\nProducti\non \n 13\nA B C D E F\nA\nVertical Beam \u2013\nLeft (1 unit)\nHorizontal Beam \u2013\nLower Section (2 units)\nB\nA Vertical Beam \u2013 Middle \nSection (1 unit)\nC\nB Vertical Beam \u2013 Right  \n(1 unit)\nD\nC Horizontal Beam \u2013\nUpper Section (2 units)\nE\nD Diagonal Beams \n(8 units)\nF\nE Plates (6 units)\nFinal Product\nAssembly Sequence\n \nFigure 7:  Assembly and Subassembly sequence of a bridge panel \n \n4.6 Manufacturing Knowledge Acquisition and Reuse \n4.6.1 Populating the Manufacturing \u2018Know-how\u2019 Knowledge-based system \nIt is assumed that knowledge acquisition is performed internally by the knowledge \nexperts within M&J Ltd via interviews and paper based information. There are two \nknowledge types: quantitative and qualitative. The knowledge types are further classified \ninto Written and Benchmarking, Observation and Intuition, Employee Tacit and \nExperience and Best Practice as explained by Cheung et al (2006).  Figure 8 represents \nthe Manufacturing Know-how Knowledge-based system (KBS). The KBS consists of \nthree parts: (1) the main body of the structure, (2) user input dialogue and (3) the \nknowledge instances.   The figure illustrates an example of how instances related to a \nfactory are populated and stored in the KBS.  \n \n 14\n(3) Knowledge \nInstances\n(2) User dialog for \npopulating instances \n(1) Structure of the Organisation \nKnowledge-Based System \n \nFigure 8: Knowledge Acquisition \nOne of the most important aspects of creating knowledge statements is setting the value \nof the Probability Factor (Cheung et al, 2006). For instance, galvanising is a simple but \ndelicate process and is mostly manually operated which can involve up to six steps to \nproduce the desired coating. Every galvanising \u2018dip\u2019 takes up to 8 bridge panels at a time. \nDipping speed varies upon the type of bridge panel and the number of panels going \nthrough the molten sink, thus, the dipping speed must be carefully controlled to avoid \u2018air \ntrapped\u2019 when loading the panel into the molten sink (see Figure 8). If the dipping speed \nis too high this may create a sudden explosion due to \u2018air trapped\u2019. Since dipping speed is \nso important the associated Probability factor constraint which defined by axioms is \nshown in Figure 9. Hence when the user chooses the value \u2018always\u2019, axioms tells the \nsystem how to interpret the imports numerically. In this case, the highest possible value is \n\u20181\u2019.  This value will then to be used by the capability analysis method (Baker and \nMaropoulos, 1998).  All of these experiences can be stored into the KBS as explicit \nmanufacturing know-how.  \n \n (exists? Probability \n (and \n  (< (\u2018Always\u2019? Probability) 1) \n  (< (\u2018Frequently\u2019? Probability) 0.75) \n  (= (\u2018Never\u2019? Probability) 0.0) \n  (< (\u2018Occasionally\u2019? Probability) 0.25) \n  (< (\u2018Sometimes\u2019? Probability) 0.5) \n ) \n) \n \nFigure 9: Example Probability Factors Defined by Axioms  \n 15\nAnother example is the application of design know how. Design knowledge, covering \nseveral processes and resources, was added into the ontology by the knowledge experts. \nSubsequently, using the APPS, a process plan was created using feature-to-process and \nprocess-to-resource mappings which involved the galvanising process. Taking into \naccount the process parameters (the temperature fluctuation from ambient to 500 \u00b0C) the \nfollowing critical areas of knowledge were immediately identified and presented to the \ndesigner: \n\u2022 Explosions always occur if air trapped is in the design, for example a closed tube. \n\u2022 If Weldments are present, they should always be designed to avoid acid traps \n\u2022 Flat panels should normally be braced to minimise the risk of distortion \nThese are a few of the examples of using the KBS to capture the expertise to be reused \nand shared within the product development processes.  \n4.6.2 Usage of PLM system to store Knowledge \n \nFigure 10 illustrates a sequence of events of how a XML-based knowledge file being \nstored in a PLM system and subsequently to be downloaded by an external user.  The \ndiagram represents: \n1. Having created the XML-based knowledge file, the next stage is to invoke the \nPLM system and use the \u2018create document\u2019 function to download the knowledge \nXML-based file into the PLM document storage cabinet.  \n2. Next is to use the XML document by invoking the PLM \u2018check-out\u2019 function \nwhich downloads the document into the user\u2019s local file space.   \n \n 16\nPLM Cabinet (1\n)\nCreate \nDocumentand sav  the \nfile\nCheck out\n(2)  Check\n \nFigure 10:  Use of PLM in XML-based knowledge \n4.6.3  XML Parser in Knowledge Re-use in Process Planning  \nThis section describes the demonstration of how the application of the XML Parser \nsupports a third party software system. The coordination of the activities is based on the \nmethod of WATC. The testing environment is illustrated in Figure 11, which depicts an \nexample of Web-based data interoperability between a knowledge-based system, a PLM \nsystem, the APPS and an ERP system. The example shows that the captured knowledge \nwill be saved in a XML file and then placed into a Windchill PLM Cabinet. The diagram \nalso illustrates the links of an XML-based manufacturing knowledge to be re-used by the \nAPPS.  \nThe links were established by the XML Parser and defined by data-string-type (extract \nXML Metadata). The data-string-type is the term used within the XML Parser to identify \nthe subject-type in the XML-based knowledge document. Thus, this allows the extracted \ndata to be transferred to the data models in the APPS. After obtaining an aggregate \nprocess plan for the conceptual design with the APPS, this will then transfer into the PLM \nUse \u2018 - out \u2019 \nfunction and save in \nlocal web - server or \nSave XML file \ninto the cabinet \ndirectory. \nUpload the XML file into \nthe user\u2019s local drive\n 17\nsystem and ready to be checked-out into the ERP system for capacity planning.   \n \nFigure 11: Centralised Testing in UML Sequence Diagrammatic Representation  \nFigure 12 illustrates the knowledge statements related to a specific object termed \nRobot_Cell_0 which belongs to a station of a factory. As highlighted in the diagram, in \norder to refine a conceptual design:  \n1. from the APPS, a designer will invoke the XML Parser within the data model, \nfor example the factory resource model, \n2. the designer will select the XML based knowledge file from the local directory \nwhich is already uploaded from the PLM cabinet, and \n3. the knowledge statements will then attach to a particular group of machines, \nwhich can be used for further analysis to enhance the planning process of a \nconceptual design. The example shown in Figure 12 indicates the resulting \nknowledge statements extracted to the APPS which relate to a factory (resource) \nmodel object \u2018Galvanising Trailer\u2019 which belongs to a cell of \u201cM&J Ltd\u201d \nfactory.  \nThe design engineer is then required to select the relevant knowledge to refine the design \nand subsequently run the APPS to obtain a preliminary process plan based upon these \nknowledge factors. If the plan requires review, the prioritised knowledge factors obtained \nfrom capability analysis, highlight the most appropriate areas of the process plan for \nimprovement based upon the specific instances of knowledge factors used. If the process \nplan is acceptable, it is then delivered to the PLM system for Plan\/Review, and \nsubsequently is readied for implementation in an ERP System for capacity requirements \nplanning.  \n 18\n(1) Invoke \nXML Parser \nfrom a Factory \n(2) Select the XML \nfil\n(3) Example \nof extracted \nknowledge \nstatements \ninto a \nFactory\n \nFigure 12: Example knowledge statements related to a specific object \nAn early process plan is generated by the APPS. However, in order for the ERP system to \nread and extract the right type of information, the process plan has been converted to a \nspreadsheet data formatted file. Based on this information the ERP system can estimate \nthe resultant requirements at individual work centres as described in the next section. \n4.7 ERP for Capacity Requirements Planning and Testing Results \nThe ERP system used in this case study is called Compiere. Since the system has many \ndifferent functions available, the ERP system must be customized. For example, the \ncorrespondence functions which uses in the implementation are: \nImport the spreadsheet file using the Import File Loader function. Resource function \ncaptures the relevant resource data, such as the machine and station types.  Product \nfunction captures the requirement of product features. BOM Drop captures the assembly \n(a) Import File  Loader  (b) Resource (c) BOM drop \n(d) Product (e) Production (f) Asset \n 19\nand process sequences. Production captures information related to the Client (customer) \nsuch as description of the product, production plan, line and date of movement. Asset is \nthe final function used to capture detail views of the resource requirements such as the \navailability, location and delivery. Next, fill in all additional information, for example, in \nthe product function. Information such as weight, height of the product feature, cost and \nso on.  \nThe illustration shown in Table 2 indicates the Capacity Requirements Planning \ngenerated by the Compiere system. The table illustrates the impact of the time-phased \ncapacity information. The total workload of 1050 hours and its percentage allocations to \neach workstation over a 10 day period for 50 panels per day. One of the reasons to use a \n10 day period is to show the periodic changes according to the manufacturer\u2019s Master \nProduction Schedule (MPS) requiremnets.  The timing of workcentres varies, for \ninstance, for the workstation Galvanizing at time period 2, a capacity requirement was \nplanned for 16.5 hours and Immerse_Washing was planned for 7.5 hours. This indicates \nthat the total processing time for the 50 panels in Galvanising is 16.5 hours and 7.5 hours \nin Immerse_Washing respectively. Further particulars the table has indicated is the \nconcern of long range capacity planning, thus, the system is able to generate and provide \nindications of capacity planning requirements for a longer period of time.  \nTime Period\nWorkstations 1 2 3 4 5 6 7 8 9 10 Total Hours Workstations Percentage (%)\nRobot_Deck_01 0 0 0 0 0 0 0 0 0 0 0 0\nRobot_Handling (Beams) 12 12 12 9.5 9.5 17 17 17 18.5 18.5 143 13.6\nRobot_Deck_02 0 0 0 0 0 0 0 0 0 0 0 0\nRobot_Handling (Plates) 6 6 6 9 9 9 9.5 9.5 9.5 9.5 83 7.9\nRobot_Weld_Chord_01 0 0 0 0 0 0 0 0 0 0 0 0.0\nRobot_Weld_Chord_02 0 0 0 0 0 0 0 0 0 0 0 0.0\nRobot_Arc_Gas_Welder 16 16 16 17.5 17.5 17.5 17 17 20 20 174.5 16.6\nRobot_Arc_Welder 16 16 16 17.5 17.5 17.5 17 17 20 20 174.5 16.6\nSurface_Coating 7 7 7 7.5 7.5 7.5 8 8 9 9 77.5 7.4\nGalvanizing 16.5 16.5 16.5 17.5 17.5 17.5 17 17 20 20 176 16.8\nImmerse_Washing 7.5 7.5 7.5 8.5 8.5 8.5 9 9 10 10 86 8.2\nInspection 5 5 5 7.5 7.5 7.5 8.5 8.5 9.5 9.5 73.5 7.0\nManual Drilling 0 0 0 0 0 0 0 0 0 0 0 0.0\nPanel_Drilling_1 5 5 5 6 6 6 7 7 7.5 7.5 62 5.9\nManual Weld 01 0 0 0 0 0 0 0 0 0 0 0 0\nTotal 91 91 91 101 101 108 110 110 124 124 1050 100\n \nTable 2: CRP for a full panel \n5  Conclusions and Future Work \nWithin M&J Ltd, all technical knowledge is tacit and possessed by experts. Due to their \nincreasing business practice with distributed operations and supply networks, it is \nimportant for them to be able to control and store this technical knowledge from the early \ndesign\/concept evaluation stage which in turn could improve the responsiveness to \ncustomers.  The case study was used to illustrate the concept of bridging the discontinuity \nin communicating early design concepts and manufacturability evaluations using a \ncentralised network configuration. In essence, the case study has demonstrated the \nfollowings: \n\u2022 Use of enterprise and web-based technologies and the application of an activities \nco-ordination mechanism which can enhance a distributed and collaborative \nenvironment to support the product development process.   \n\u2022 How manufacturing knowledge can be reused by an aggregate process planning \nsystem through the application of an automatic data exchange mechanism.  \n\u2022 The performance of supporting the designers to refine a design at the conceptual \nstage by adding manufacturing knowledge into the APPS to generate alternative \n 20\nearly process plan then use it in an ERP system to obtain and optimised a rough-\ncut capacity planning  \nAs a result, the methodology demonstrated in this research was used to capture, store and \nre-use this knowledge within the process of collaborative product development.  \nSpecifically: \n\u2022 Early collaboration in product design using the WATC methodology can \nmaximise the opportunity for optimising designs.  \n\u2022 With the increasing of knowledge in design and manufacturing capabilities, the \napplication of organisational knowledge-based system coupled with the \naggregate process planning method can be used to capture and maximise the \namount of available information when designing customised products.  \n\u2022 The integration environment using enterprise technologies can enhanced the \nspeed of feedback and used to support decision making and enable the design to \nbe right first time. \nHow much lead time can be reduced on new product introduction is difficult to measure \nat this stage as the methodology only tested the early stage of product development \nprocesses. Another assumption is that the case study was tested in a single user access \nenvironment. As for future work, (1) anther case study should be carried out under several \ngeographical locations, for example, with suppliers and subsidiary companies and, (2) the \narchitecture should be extended to the supply chain area so that lead time of new product \nintroduction can be evaluated.   \n \nACKNOWLEDGEMENTS \n \n \nREFERENCES \nAziz, H., Gao, J.X., Maropoulos, P.G. and Cheung, W.M., (2004), \u201cA Design Environment for \nProduct Knowledge Management and Data Exchange\u201d, Methods and Tools for Co-operative and \nIntegrated Design, (ed.) S. Tichkiewith and D. Brissaud, Kluwer Academic Publishers,  ISBN 1-\n4020-1889-4, pp.257-267. \nBaker, R.P., and Maropoulos, P.G., (1998), \u201cManufacturing Capability Measurement for Cellular \nManufacturing Systems\u201d, International Journal of Production Research, 36 (9), pp.2511-2527. \nBecker, J., zur Muehlen, M. and Marc, G., (2002), \u201cWorkflow Application Architectures: \nClassification and Characteristics of Workflow-based Information Systems\u201d, Workflow Handbook \n2002. Future Strategies, Lighthouse Point, FL 2002, pp. 39-50. \nBramall, D.G., McKay, K.R., Rogers, B.C., Chapman, P., Cheung, W.M., and Maropoulos P.G., \n(2003), \u201cManufacturability Analysis of Early Product Designs\u201d, International Journal of Computer \nIntegrated Manufacturing, 16(7-8), 501-508. \nCheung, W.M., Bramall, D.G., Maropoulos, P.G., Gao, J.X., Aziz, H., (2006). \u201cOrganizational \nKnowledge Encapsulation and Re-use in Collaborative Product Development\u201d, International \nJournal of Computer Integrated Manufacturing. Vol. 19 (7), 736 \u2013 750. \nCORBA, (2007), http:\/\/www.corba.org\/ (Site Visited April 2007). \nHuang, G.Q., (2002), \u201cWeb-based Support for Collaborative Product Design Review\u201d, Computers \nin Industry, 48(1), pp.71\u201388. \nHuang, G.Q, Huang, J. and Mak, K.L., (2000), \u201cAgent-based Workflow Management in \nCollaborative Product Development on the Internet\u201d, Journal of Computer-Aided Design, 32, \npp.133-144. \nHuang, G.Q., Yee, W.Y. and Mak, K.L., (2001), \u201cDevelopment of a Web-based System for \nEngineering Change Management\u201d, International Journal of Robotics and Computer Integrated \nManufacture, 17(3), pp. 255\u2013267. \n 21\nLi, W.D., Ong, S.K., Wong, Y.S., Fuh, J.Y.H., Lu, Y.Q. and Nee, A.Y.C., (2004a), \u201cFeature-based \nDesign in a Collaborative and Distributed Environment\u201d, Computer-Aided Design, 36(9), pp.775\u2013\n797. \nLi, W.D., Wong, Y.S. and Fuh, J.Y.H., (2004b), \u201cAn Internet-enabled Integrated System for Co-\ndesign and Concurrent Engineering\u201d, Computers in Industry, 55(1), pp.87\u2013103. \nMadhusudan, T., (2005), \u201cAn Agent-based approach for Coordinating Product Design Workflows\u201d, \nComputers in Industry, 56(3), pp.235\u2013259. \nPTC Windchill, (2002), User Guide 6.0, Parametric Technology Corporation, 2001\u20132002, Release \n6.0, T857-60-01. \nQiang, L., Zhang, Y.F. and Nee, A.Y.C., (2001), \u201cA Distributed and Collaborative Concurrent \nProduct Design System through the WWW\/Internet\u201d, International Journal of Advanced of \nManufacturing Technology, 17(5), pp.315\u2013322. \nRodriguez, K. and Al-Ashaab, A., (2005), \u201cKnowledge Web-based System Architecture for \nCollaborative Product Development\u201d, Computers in Industry, 56, pp.125-140. \nSchmuller, J., (1999), SAMS Teach Yourself UML in 24 Hours, Sams Publishing, ISBN 0-672-\n31636-6.  \nXiao, A., Choi, H.J., Kulkani, R., Allen, K.J., Rosen, D. and Mistree, F., (2001), \u201cA Web-based \nDistributed Product Realisation Environment\u201d, Proceedings of ASME 2001 Design Engineering \nTechnical Conferences, Pittsburgh, PA, USA, DETC00\/CIE-14624. \nXie, Y.L. and Salvendy, G., (2003), \u201cAgent-based features for CAD browsers in foster engineering \ncollaboration over the Internet\u201d, International Journal of Production Research, 41(16), pp.3809\u2013\n3829. \nXu, X.W. and Liu, T., (2003), \u201cA web-enabled PDM system in a Collaborative Design \nEnvironment\u201d, International Journal of Robotics and Computer Integrated Manufacturing, 19(4), \npp.315\u2013328. \n 22\n"}