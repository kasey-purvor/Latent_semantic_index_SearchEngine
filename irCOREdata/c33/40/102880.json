{"doi":"10.1109\/PIMRC.2008.4699602","coreId":"102880","oai":"oai:epubs.surrey.ac.uk:2440","identifiers":["oai:epubs.surrey.ac.uk:2440","10.1109\/PIMRC.2008.4699602"],"title":"Ontology based context inference and query for mobile devices","authors":["De, Suparna","Moessner, Klaus"],"enrichments":{"references":[],"documentType":{"type":1}},"contributors":[],"datePublished":"2008","abstract":"-The VISIon of service personalization for mobile communication environments entails context sensitive service\\ud\nprovisioning. The realization of such customizable smart spaces necessitates acquisition and processing of modality context information from a variety of devices in the ambient\\ud\nenvironment. The heterogeneity of available device capabilities and description formats brings new challenges for a context reasoning engine that formulates content delivery decisions. Specifically, to ensure interoperability with existing application logic, the enabling components should support semantic queries.\\ud\nSecondly, situations where variously formatted context input may not provide enough information to answer queries, should be intelligently handled. Towards this aim, this paper discusses a context reasoning and query interface component as part of a Service Context Manager (SCM) framework that supports semantic querying and handles incomplete context information through a rule-based mechanism. The validation of the approach is provided by showing the mapping of disparate UAProf and UPnP descriptions into the framework and querying of supported modality services","downloadUrl":"","fullTextIdentifier":null,"pdfHashValue":null,"publisher":null,"rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:epubs.surrey.ac.uk:2440<\/identifier><datestamp>\n      2017-10-31T14:05:35Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      74797065733D61727469636C65<\/setSpec><setSpec>\n      6469766973696F6E733D656E67616E64706879736963616C736369656E636573:656C656374726F6E6963656E67696E656572696E67:63637372<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/epubs.surrey.ac.uk\/2440\/<\/dc:relation><dc:title>\n        Ontology based context inference and query for mobile devices<\/dc:title><dc:creator>\n        De, Suparna<\/dc:creator><dc:creator>\n        Moessner, Klaus<\/dc:creator><dc:description>\n        -The VISIon of service personalization for mobile communication environments entails context sensitive service\\ud\nprovisioning. The realization of such customizable smart spaces necessitates acquisition and processing of modality context information from a variety of devices in the ambient\\ud\nenvironment. The heterogeneity of available device capabilities and description formats brings new challenges for a context reasoning engine that formulates content delivery decisions. Specifically, to ensure interoperability with existing application logic, the enabling components should support semantic queries.\\ud\nSecondly, situations where variously formatted context input may not provide enough information to answer queries, should be intelligently handled. Towards this aim, this paper discusses a context reasoning and query interface component as part of a Service Context Manager (SCM) framework that supports semantic querying and handles incomplete context information through a rule-based mechanism. The validation of the approach is provided by showing the mapping of disparate UAProf and UPnP descriptions into the framework and querying of supported modality services.<\/dc:description><dc:date>\n        2008<\/dc:date><dc:type>\n        Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:format>\n        text<\/dc:format><dc:language>\n        en<\/dc:language><dc:identifier>\n        http:\/\/epubs.surrey.ac.uk\/2440\/1\/SRF002725.pdf<\/dc:identifier><dc:identifier>\n          De, Suparna and Moessner, Klaus  (2008) Ontology based context inference and query for mobile devices   IEEE International Symposium on Personal, Indoor and Mobile Radio Communications, PIMRC.       <\/dc:identifier><dc:relation>\n        http:\/\/ieeexplore.ieee.org\/xpls\/abs_all.jsp?arnumber=4699602&tag=1<\/dc:relation><dc:relation>\n        10.1109\/PIMRC.2008.4699602<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/epubs.surrey.ac.uk\/2440\/","http:\/\/ieeexplore.ieee.org\/xpls\/abs_all.jsp?arnumber=4699602&tag=1","10.1109\/PIMRC.2008.4699602"],"year":2008,"topics":[],"subject":["Article","PeerReviewed"],"fullText":"Ontology-based Context Inference and Query for\nMobile Devices\nSuparna De and Klaus Moessner\nCentre for Communication Systems Research\nUniversity of Surrey\nGuildford, United Kingdom\n{S.De, K.Moessner} @surrey.ac.uk\nAbstract-The VISIon of service personalization for mobile\ncommunication environments entails context sensitive service\nprovisioning. The realization of such customizable smart spaces\nnecessitates acquisition and processing of modality context\ninformation from a variety of devices in the ambient\nenvironment. The heterogeneity of available device capabilities\nand description formats brings new challenges for a context\nreasoning engine that formulates content delivery decisions.\nSpecifically, to ensure interoperability with existing application\nlogic, the enabling components should support semantic queries.\nSecondly, situations where variously formatted context input may\nnot provide enough information to answer queries, should be\nintelligently handled. Towards this aim, this paper discusses a\ncontext reasoning and query interface component as part of a\nService Context Manager (SCM) framework that supports\nsemantic querying and handles incomplete context information\nthrough a rule-based mechanism. The validation of the approach\nis provided by showing the mapping of disparate UAProf and\nUPnP descriptions into the framework and querying of\nsupported modality services.\nKeywords-context query; context inference; ontology; SWRL\nI. INTRODUCTION\nThe concept of dynamically available devices and services\ndrives the current paradigm of mobile communications. A\nrecent study [1] envisioning the future Web puts application\ninteroperability and service personalization in different planes;\nwith ubiquitous computing purported to be focused on\ndisparate device interoperation and universal usability geared\ntowards user-focused customization.\nRealization of such proactive systems brings up the related\nresearch issues of context definition, acquisition and reasoning.\nMultimodal device capability information modeling and\nprocessing is an important precursor to customized service\ndelivery in such systems. The applicability of ontologies for\ncontext modeling and facilitating application reasoning has\nbeen well researched [2] - [3]. Specifically, the OWL-DL (Web\nOntology Language - Description Logics) formalism, rooted in\nthe decidable fragment of first-order logic, provides a powerful\nplatform for a formal and machine- processible structure to\ncontext information collated from diverse sources.\nWith an ontology-based context model providing a\ncommon, formalized structure, a number of interconnected\nThis research has been funded by the Industrial Companies who are\nMembers of Mobile VCE, with additional financial support from the UK\nGovernment's Technology Strategy Board (previously DTI).\n978-1-4244-2644-7\/08\/$25.00 \u00a92008 IEEE\ncomponents are required to provide a generic mechanism for\ncontext querying and reasoning. This paper focuses on two key\nissues: context querying - the framework should support\nsemantic querying, which may be variously worded by\napplication logic that uses the context model. For example, a\nsearch query for image display capability could be expressed as\na query for 'image modality' or 'image display service'.\nMoreover, as pointed out in [4], the diversity of context\ninformation formats means that not enough information may be\navailable to answer queries; and the framework must adjust\naccordingly.\nTo address these issues, this paper presents a context\nreasoning and query interface component as part of a Service\nContext Manager (SCM) framework that supports a generic\nmechanism for querying contexts and handles incomplete\ncontext information through a rule-based mechanism.\nThe paper is organized as follows: enabling technologies\nand the current state of the art are analyzed in section II.\nSection lIT presents the SCM framework with its various\nfunctional modules. The context reasoning and querying\nmechanisms form the focus of sections IV and V, respectively.\nThis is followed by showcasing of implementation aspects,\nwith a reference application scenario, in section VI. It also\nincludes a discussion of the results and mechanisms employed.\nThe paper concludes with a summary and recommendations for\nfuture work in section VIT.\nII. RELATED WORK\nOntologies and rules can be integrated to achieve dynamic\nservice oriented architectures [5]. With OWL-DL taking\nadvantage of the underlying DL logic for computational\ncompleteness and expressiveness, the knowledge base can be\nextended with inference rules to enforce more general frrst-\norder logic constraints. The resultant semantics can facilitate\nprovisioning of dynamic services. Towards this end, SWRL\n(Semantic Web Rule Language) [6] is a W3C submission\naimed at combining OWL and an inference rules language\nbased on RuleML (Rule Markup Language). SWRL makes use\nof pattem-directed invocation of procedures from assertions\n[7]. It also provides a common language for the context model\nand the inference mechanism. A comparison of SWRL and\nRuleML features is given in [5].\nAuthorized licensed use limited to: University of Surrey. Downloaded on May 04,2010 at 14:29:45 UTC from IEEE Xplore.  Restrictions apply. \nEnabling technologies for effective ontology query include\nSPARQL (SPARQL Protocol and RDF Query language) [8]\nand SQWRL (Semantic Query-enhanced Web Rule Language)\n[9]. SPARQL is a RDF-based query language and offers\nlimited support for querying OWL models, as noted in [10].\nSQWRL is a library extension to SWRL. It is based on the fact\nthat a rule antecedent can be viewed as a pattern-matching\nmechanism, i.e., a query [10]. It allows queries directed at\nOWL classes, individuals and properties and also honors the\nSWRL rules during query execution.\nOntology-based context management approaches have been\nemployed in research projects for various aims, including\nmedia content recommendation [3], activity-based m-Iearning\n[11] and command and control systems for the battlespace\ndomain [5]. The context information service architecture in [4]\nfor managing distributed context sources employs an ontology\ndriven mechanism for answering application queries. Each\ncontext-aware application provides its own ontology to the\ncontext service to describe its hosted services. The context\nservice maintains an ontology mapping repository to translate\nbetween 'equivalent' words in submitted queries to generate a\nresponse from the registered services. Queries can be\nformulated in SQL, XQuery or RDQL (RDF Data Query\nLanguage). However, this approach assumes that queries are\nexpressed in terms of one of the registered ontology concepts\nand does not account for incomplete context information\nduring ontology formation.\nThe e-Iearning repository implementation in [12] consists\nof a learning resource ontology and SWRL rules to offer\nrecommendations on study methods to learners. A semantic\nquery interface is designed by collecting synonyms of the\nontology concepts, calculating a similarity coefficient and\nstoring these in a 'synonymy list'. Learner's queries are parsed\ninto tokens that are associated with the ontology concepts using\nthe synonym list, through a breadth-first or depth-first search.\nThe research project presented in [7] aims to build a smart\nhome environment for its inhabitants. The context model is\nbased on an OWL ontology to provide a representation of the\nsmart home. The inference layer is implemented using SWRL\nrules to issue orders on the event-driven bus that drives the\nactuators.\nIII. SCM ARCHITECTURE\nThe work presented in this paper forms part of the SCM\nframework. The SCM framework aims to facilitate context\nsensitive service provisioning in mobile communication\nenvironments. This section presents a brief overview of the\nSCM structure to provide a background for the context\nreasoning module. A more detailed description of the SCM\ncomponents and implementation is presented in [13]. Fig. 1\nprovides an illustration of the SCM architecture.\nThe device and service discovery function detects device\npresence in the ambient environment through explicit discovery\nmessages and also by listening on the multicast channel for\ndevice advertisements. UPnP protocol is used for this discovery\nstep as well as for the retrieval of the XML device descriptions.\nThe components within the Transformation Framework map\nthe device modality context information into a common, formal\nstructure based on the defined ontology stored in the OWL\nFacts Base. The OWL Facts Base represents the domain\nvocabulary in terms of classes and properties and thus forms\nthe TBox (concept box). The mapped descriptions constitute\nthe ABox (assertion component), embodying knowledge of\nreal-world objects in TBox-compliant statements.\n\/,'--------_..'\\\ni Terminal i\n,~;:-1--\n; i i\ni ~\nI '\n, ----t----\nLegend: 0: Device and Service Desaiptions\nFig.l Service Context Manager architecture\nThe generated ABox forms the input to the reasoning\nsubsystem that references the SWRL Rules base. The Reasoner\nmodule performs the first stage of context inference by\napplying rules from the Rule Base that assert missing context\ninformation. This pre-processing step is transparent to the user\nand speeds up the next stage of context filtering. The Context\nFiltering module then applies the rules relating to the stored\nuser preferences and matches incoming content metadata to the\nprocessed device modalities' ABox to facilitate content\npresentation with the best possible combination of modalities.\nThe Service Repository Management module maintains an\ninterface to context-aware applications for updating and\nquerying semantic service information.\nIV. CONTEXTUAL INFERENCE RULES\nThe context reasoning module references the SWRL Rules\nbase to infer facts from the ontology instance (ABox) that has\nbeen populated from the device and service context\ninformation. The rules have been designed to take into account\nthe standard device-service context description templates. Due\nto this heterogeneity of context information, there may be gaps\nin the generated ABox. Hence, at a first instance, the modeled\nrules assert links between the physical device and hosted\nsoftware services. The second stage of context filtering serves\nto filter out a subset of possible device modalities based on the\ndefined user preferences and content metadata. For instance,\nstored preferences may indicate which device the user would\nlike to 'see videos on'. The content metadata relating to content\ntype and other factors such as resolution, frame rate (for media\ncontent) etc. serve to match modalities to content.\nAuthorized licensed use limited to: University of Surrey. Downloaded on May 04,2010 at 14:29:45 UTC from IEEE Xplore.  Restrictions apply. \nSWRL is grounded in frrst-order logic and provides more\nexpressive power than DL. SWRL provides only first order\nlogic rules that make use of logical connectors such as 1\\\n(AND), --.(IMPLY) and (NEGATION). However,\nextensions have been proposed to make use of more advanced\nmathematical and string operators such as comparison\noperators (swrlb: lessThan) through the SWRL built-in library.\nBuilt-ins take any number or combination of OWL datatype or\nobject property values. The object property arguments are in\neffect OWL individuals. A SWRL rule contains an antecedent\npart, called the body and a consequent part called the head.\nThis implies that if all the atoms in the antecedent are true, then\nthe consequent must also be true,\ni.e., antecedent => consequent\nThe rules can be written in terms of OWL classes,\nproperties and individuals. Fig. 2 shows some of the\nforwardchain rules (that infer about axioms) defined on the\ndomain ontology.\nRule-I:\nDevice(?x) A ScreenOutputModality(?m) A\ncanbeInterfacedVia(?x, ?m) A graphicsEnabled(?m, true)\nA hasService(?x, false)\n~ hosts(?x, DisplayService) A\nisLinkedTo(DisplayService, ?m)\nRule-2:\nDevice(?x) A Speaker(?m) A canbeInterfacedVia(?x, ?m)\nA hasService(?x, false)\n~ hosts(?x, AudioService) A\nisLinkedTo(AudioService, ?m)\nRule-3:\nDevice(?x) A ScreenOutputModality(?m) A\ncanbeInterfacedVia(?x, ?m) A hasResolution(?m, ?r) A\nwidth(?r, ?w) A height(?r, ?h) A swrlb:add(?y, ?w, ?h)\n~ sqwrl:select(?x, ?y) A sqwrl:orderByDescending(?y)\nFig. 2 SWRL forwardchain rules\nRule 1 defines a device with a graphic-enabled screen to\noffer a display service. The display service has already been\ndefined in the domain ontology to support text output, visual\nand image display service offerings. Rule 1 reads as: if there is\na Device 'x', which can be interfaced through a\nScreenOutputModality 'm', where 'm' is graphics-enabled,\nthen Device 'x' hosts a display service. In addition, the link\nbetween this asserted display service and the screen modality is\nalso asserted in this rule for completeness. This rule also\nillustrates the work-around for the absence of atom negation in\nSWRL. Due to SWRL's monotonicity, it is not possible to\nquery directly the absence of a property assertion. So, since the\npresence or absence of a hosted service cannot be ascertained, a\nBoolean valued hasService property is queried to affirm that\nthe rule applies to only those devices where the device-service\nlink is not already present. This takes care of cases where the\ndevice description is available in CCIPP [14] or UAProf [15]\nformat, where only the hardware modality information is\navailable.\nRule 2 is similar to rule 1 and defines a device with audio\noutput modality to offer an audio service.\nRule 3 is an example of pre-processing of available\nmodalities where the devices are ordered according to\ndecreasing screen resolution. This rule also illustrates the use of\nthe SQWRL query function for the actual ordering function.\nV. QUERY INTERFACE\nSince SWRL is built on top of OWL, it shares OWL's\nOpen World Assumption (OWA) where every fact can be\nthought of as true unless explicitly stated to be false. For\ninstance, two individuals cannot be assumed to be\nautomatically distinct unless explicitly stated to be so with the\nowl:differentFrom restriction. However, the SWRL Query\nlibrary (SQWRL) that functions as a query language on the\nSWRL rule-set has an approximation to Closed World\nAssumption (CWA). CWA follows the presumption that what\nis not currently known to be true is false. This grounding in\nCWA allows the query to apply to the formalised TBox and the\nresultant ABox only and allows effective query of the\nknowledge base. This also prevents undecidability.\nWith the context inference rules in place, the device-service\ncontext of the discovered devices can be queried for available\nservices. Fig. 3 shows some of the sample queries.\nQuery-I:\nhosts(?x, ?s) A ModalityService(?s) A\nhasSType(?s, \"image\")\n~ sqwrl:select(?x)\nQuery-2:\nhosts(?x, ?s) A ModalityService(?s)\n~ sqwrl:select(?x, ?s)\nFig.3. SQWRLqueries\nQuery 1 searches for devices that offer an image display\nservice. It can be read as: for the asserted property 'hosts' that\nlinks a device 'x' to its hosted service's', where 's' is a\nmodality-related service and the service type of's' is 'image',\noutput all conforming 'x' -s (or devices).\nQuery 2 searches for all devices that host any manner of\nmodality service (textlimage\/audio\/video) and outputs the\nhosted service as well.\nVI. IMPLEMENTATION\nThis section presents the results of the implementation of\nthe reasoning and query subsystem. To validate the approach,\ncontext sources available in two standardized formats, viz.\nUAProf and UPnP, were input into the SCM framework.\nFig. 4 shows a sample UAProf profile of a mobile phone.\nThe mobile phone is modeled to support a screen that is color-\ncapable and graphics-enabled (image capable). Thus, this\nAuthorized licensed use limited to: University of Surrey. Downloaded on May 04,2010 at 14:29:45 UTC from IEEE Xplore.  Restrictions apply. \nFig.6. Query-l execution result\nThe SWRL plug-in to the Protege IDE was used for entry\nand editing of SWRL rules. To perform the actual inference,\nthe Jess [17] rule-based inference engine was employed as a\nplug-in to the Protege SWRL tab. However, it should be noted\nthat the rules are represented independently of the inference\nengine. Moreover, all instances in the ABox get validated\nagainst the rules during execution. The queries have been\ndesigned through the SQWRL built-in library mechanism.\nThe results of executing queries 1 and 2 are shown in the\nresult pane snapshots in Figs. 6 and 7, respectively.\n~ .p1:Query-1\ncontext source provides only hardware modality information,\nwith no information on the related software service (formats, or\nsupported types).\n<?xml version=\"1 .0\" encoding=\"UTF-8\"?>\n<rdf:RDF xmlns:rdf:''http:\/\/www.w3.org\/1999\/02\/22-rdf-syntax-ns#''\nxmlns:rdfs:''http:\/\/www.w3.org\/2000\/01\/rdf-\nschema#\":prf:\"http:\/\/www.openmobilealliance.org\/tech\/profiles\/UAPRO\nF\/ccppschema-20021212#\">\n<rdf:Description rdf:ID:\"SamplePhone\">\n<prf:component>\n<rdf:Description rdf:ID:\"HardwarePlatform\">\n<prf:BitsPerPixel>16<\/prf:BitsPerPixel>\n<prf:ColorCapable>Yes<\/prf:ColorCapable>\n<prf: ImageCapable>Yes<\/prf: ImageCapable>\n<prf:ScreenSize>128x128<\/prf:ScreenSize>\n<prf:SoundOutputCapable>Yes<\/prf :SoundOutputCapable>\n<prf: InputCharSet>\n<rdf:Bag>\n<rdf:li>ISO-8859-1 <\/rdf:li>\n<rdf:li>ISO-10646-UCS-2<\/rdf:li>\n<rdf:li>US-ASClk\/rdf:li>\n<rdf:li>UTF-8<\/rdf:li>\n<\/rdf:Bag>\n<\/prf: InputCharSet>\n<prf:Keyboard>PhoneKeyPad<\/prf:Keyboard>\n<prf :TextlnputCapable>Yes<\/prf:TextinputCapable>\n<\/rdf:Description>\n<\/prf:component>\n<\/rdf:Description>\n<\/rdf:RDF>\n\"'-1: -----.-----\nSamplePhone\nUPnPPhone\nrIiJ \u2022\n'?p1:x\n?p1:x\nr\u2022 p1 :Query-2 I\n?p1:s\nFig.4.UAProf RDF description\nSamplePhone\nUPnPPhone\np1 :DisplayService\nimage\nThe second context source models an extended UPnP\ndescription [16] of a mobile phone, specifying the offered\n'image display' service and associated screen modality. The\nassociated context source file fragment is shown in Fig. 5.\n<?xml version=\"1 .0\" encoding=\"UTF-8\"?>\n<scpd>\n<device>\n<deviceType>MobilePhone<\/deviceType>\n<friendlyName>UPnPPhone<\/friendlyName>\n<serviceList>\n<service>\n<serviceType>image<\/serviceType>\n<actionList>\n<action>\n<name>Display<\/name> ....\n<faction>\n<\/actionList>\n<\/service>\n<\/serviceList>\n<modality>\n<display>\n<displayld>Screen<\/displayld>\n<displayHeight>500<\/displayHeight>\n<displayWidth>800<\/displayWidth>\n<unit>mm<\/unit>\n<resolution>\n<horizontal>720<\/horizontal>\n<vertical>480<\/vertical>\n<bpp>32<\/bpp>\n<\/resolution>\n<colour>true<\/colour>\n<\/display>\n<userlnput>\n<type name:\"MobileKeyboard\"><\/type>\n<\/userlnput>\n<\/modality>\n<\/device>\n<\/scpd>\nFig.5. UPnP context description\nFig.7. Query-2 execution result\nA. Application Scenario\nThe potential of the approach can be demonstrated with an\nexample scenario illustrating service personalisation. The\ndevices in the environnent host their own descriptions in XML\nformat, which are retrieved following device discovery. The\nuse case consists of two devices: a UAProf mobile terminal\noffering a display service (Fig.4) and a mobile phone\nadvertising its image service through UPnP descriptions (Fig.\n5). The devices are discovered by the discovery module. The\nuse case employs UPnP protocol for this step. The retrieved\nXML descriptions are processed and then transformed by the\ntransformation component into an ontology instance (ABox). A\nmore detailed breakdown of the implementation steps involved\nin transformation is available in [13]. The generated ABox\nforms the input to the reasoning subsystem. The result sets in\nFigs. 6 and 7 validate the working of Rule 1 which asserts the\nassociated modality service for physical device descriptions.\nThis first stage of context inference thus handles incomplete\ncontext information, which is not taken care of in [4]. The\nsecond reasoning stage then applies rules to match incoming\ncontent metadata to the processed ABox. This serves to filter\nout a subset of possible device modalities. For an example case\nwhere the content type is audio, it does not match the offered\nmodalities in the ambient environment (image display on both\navailable devices). This generated semantic information can be\nthen input to an Adaptation Manager functionality that decides\nwhat adaptation mechanisms may be applied based on the\ndelivered processed modality context. In this case, the\nAuthorized licensed use limited to: University of Surrey. Downloaded on May 04,2010 at 14:29:45 UTC from IEEE Xplore.  Restrictions apply. \nAdaptation Manager decides that an audio to text adaptation is\nnecessary and it is executed through the available adaptation\nmechanisms. The adapted content is then handed to a content\ndelivery system that streams the content to the selected device.\nThis scenario walk-through demonstrates the potential\napplications of the proposed approach. The framework thus\nforms a pluggable input to content adaptation and content\ndelivery systems. When deployed as part of a wider ubiquitous\nenvironment, the end-user will thus be presented with a more\nautomated and proactive system.\nB. Discussion\nThe approach presented in this paper employs the SQWRL\nquery mechanism built on top of SWRL to formulate context\nsensitive queries. Since SWRL itself is built on top of OWL,\nthe query language offers the twin benefits of querying\nontology terms directly and also being cognizant of the defined\nrules during query execution. On the other hand, queries can be\nsaid to be constrained to the domain ontology terms. However,\nsince queries are posed by the application logic that references\nthe common, formal structure of the domain ontology, natural\nlanguage queries need not be taken into account in the context\nof this work.\nThe combination of OWL and SWRL offers an expressive\nplatform for constructing a generic model of the domain and\nthen express particular behaviors. Also, Jess supports insertion\nof the inferred knowledge back into the OWL-DL ABox,\nwhich allows subsequent query answering. However, as also\nidentified in [5], extensions to model uncertainty and\nprobability in real-world contexts are needed.\nVII. CONCLUSION\nThe proposed context inference approach indicates that\nontologies and rule-based reasoning can help to achieve\nautomated and personalized service delivery in mobile\ncommunication environments. The rule base is easily\nextensible to encompass varied context scenarios and supports\nsemantic querying through the developed query interface.\nA possible extension includes a learning mechanism that\ncan serve to improve the reasoning quality for incomplete\ncontext information.\nACKNOWLEDGMENT\nThe work reported in this paper has formed part of the\nUbiquitous Services Core Research Programme of the Virtual\nCentre of Excellence in Mobile & Personal Communications,\nMobile VCE, www.mobilevce.com. Fully detailed technical\nreports on this research are available to Industrial Members of\nMobile VCE.\nREFERENCES\n[1] M. Strange and M. Sorell~ \"Gear up for Change~\" lET Engineering and\nTechnology~vol. 3~ pp. 42-44~ 2008.\n[2] T. Strang and C. Linnhoff-Popien~ \"A context modelling survey~\" in 1st\nInt'l Workshop on Advanced Context Modelling, Reasoning and\nManagement, 2004~ pp. 34-41.\n[3] Y. Zhiwen~ z. Xingshe~ z. Daqing~ C. Chung-Yau~ W. Xiaohang~ and\nM. Ji~ \"Supporting Context-Aware Media Recommendations for Smart\nPhones~\" IEEE Pervasive Computing~ vol. 5~ pp. 68-75~ 2006.\n[4] R. Power, D. Lewis~ D. O'Sullivan~ O. Conlan~ and v. Wade~ \"A\nContext Information Service using Ontology-Based Queries,\" in\nProceedings of The First International Workshop on Advanced Context\nModelling, Reasoning, Management held in conjunction with The 6th\nInternational Conference on Ubiquitous Computing (UbiComp'2004).\nNottingham~ England~ 2004~ pp. 7.\n[5] S. Stoutenburg~ L. Obrst~ D. Nichols~ K. Samuel~ and P. Franklin~\n\"Applying Semantic Rules to Achieve Dynamic Service Oriented\nArchitectures~\" in Proc. Second International Conference on Rules and\nRule Markup Languagesfor the Semantic Web, 2006~ pp. 75-82.\n[6] W3C~ \"SWRL: A Semantic Web Rule Language Combining OWL and\nRuleML~\" in W3C Member Submission, 2004.\n[7] V. Ricquebourg, D. Durand, D. Menga~ B. Marhic~ L. Delahoche~ C.\nLoge, and A.-M. Jolly-Desodt~ \"Context Inferring in the Smart Home:\nAn SWRL Approach~\" presented at 21st International Conference on\nAdvanced Information Networking and Applications Workshops~\n(AINAW '07),2007.\n[8] W3C~ \"SPARQL Query Language for RDF~\" in W3C Recommendation,\n2008.\n[9] ProtegeWiki, (2007~ November 19). SQWRL [Online].Available:\nhttp:\/\/protege.cim3.netlcgi-binlwiki.pl?SQWRL.\n[10] M. O'Connor~ R. Shankar~ S. Tu~ C. Nyulas~ Amar Das~ and M. Musen~\n\"Efficiently Querying Relational Databases Using OWL and SWRL,\" in\nWeb Reasoning and Rule Systems~ vol. 4524\/2007. Berlin: Springer,\n2007, pp. 361-363.\n[11] E. Basaeed, J. Berri~ R. Ben1amri~ and J. Zemerly, \"M-Learning\nActivity-based Context Managemen4\" in Proc. 2nd IEEE International\nConference on Digital Information Management (ICDIM'07), volume 2.\nLyon~France,2oo7.\n[12] Z. Xin-juan, L. Xian-Feng~ and G. Wei, \"Ontology Based Sharing and\nServices in E-Learning Repository~\" presented at lAP International\nConference on Network and Parallel Computing Workshops~ (NPC\nWorkshops)~ 2007.\n[13] S. De and K. Moessner~ \"A Semantic Device and Service Description\nFramework for Ubiquitous Environments~\" presented at 17th ICT\nMobile and Wireless Communications Summit, Stockholm~ Sweden, 10-\n12 June 2008.\n[14] Composite Capability\/Preference Profiles (CC\/PP): Structure and\nVocabularies, W3C Recommendation, 2002.\n[15] Open Mobile Alliance (2003). User Agent Profile [Online] . Available:\nhttp:\/\/www.openmobilealliance.org.\n[16] S. De and K. Moessner~ \"Device and Service Descriptions for Personal\nDistributed Environments~\" in Proc. 2nd IEEE International Conference\non Digital Information Management (ICDIM'07), volume 2. Lyon~\nFrance~ 2007.\n[17] E. J. Friedman-Hill, \"Jess, The Java Expert Shell System,\" Sandia\nNational Laboratories, Livermore, CA~ SAND98-8206 November 1997.\nAuthorized licensed use limited to: University of Surrey. Downloaded on May 04,2010 at 14:29:45 UTC from IEEE Xplore.  Restrictions apply. \n"}