{"doi":"10.1137\/060668675","coreId":"15408","oai":"oai:dro.dur.ac.uk.OAI2:7433","identifiers":["oai:dro.dur.ac.uk.OAI2:7433","10.1137\/060668675"],"title":"A new algorithm for on-line coloring bipartite graphs.","authors":["Broersma, H.J.","Capponi, A.","Paulusma, Daniel"],"enrichments":{"references":[{"id":939241,"title":"Coloring graphs on-line, in Online Algorithms: The State of the Art,","authors":[],"date":null,"doi":null,"raw":null,"cites":null},{"id":939238,"title":"Effective on-line coloring of P5-free graphs,","authors":[],"date":"1991","doi":null,"raw":null,"cites":null},{"id":936265,"title":"First fit and on-line chromatic number of families of graphs,","authors":[],"date":"1990","doi":null,"raw":null,"cites":null},{"id":936256,"title":"Graph Theory with Applications,","authors":[],"date":"1976","doi":null,"raw":null,"cites":null},{"id":939239,"title":"Lower bounds for on-line graph coloring,","authors":[],"date":"1994","doi":null,"raw":null,"cites":null},{"id":936263,"title":"On-line 3-chromatic graphs.","authors":[],"date":"1997","doi":null,"raw":null,"cites":null},{"id":936264,"title":"On-line and first-fit colorings of graphs,","authors":[],"date":"1988","doi":null,"raw":null,"cites":null},{"id":936261,"title":"On-line coloring of geometric intersection graphs,","authors":[],"date":"2002","doi":null,"raw":null,"cites":null},{"id":936258,"title":"On-line coloring of H-free bipartite graphs,","authors":[],"date":"2006","doi":null,"raw":null,"cites":null},{"id":936260,"title":"On-line coloring of Is-free graphs and co-planar graphs,","authors":[],"date":"2006","doi":null,"raw":null,"cites":null},{"id":936262,"title":"Online Competitive Coloring Algorithms,","authors":[],"date":"1997","doi":null,"raw":null,"cites":null},{"id":936257,"title":"Online Computation and Competitive Analysis,","authors":[],"date":"1998","doi":null,"raw":null,"cites":null},{"id":936259,"title":"Problem 84\u201323,","authors":[],"date":"1984","doi":null,"raw":null,"cites":null},{"id":939240,"title":"The linearity of first-fit coloring of interval graphs,","authors":[],"date":"1988","doi":"10.1137\/0401048","raw":null,"cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2008-02-01","abstract":"We first show that for any bipartite graph $H$ with at most five vertices there exists an on-line competitive algorithm for the class of $H$-free bipartite graphs. We then analyze the performance of an on-line algorithm for coloring bipartite graphs on various subfamilies. The algorithm yields new upper bounds for the on-line chromatic number of bipartite graphs. We prove that the algorithm is on-line competitive for $P_7$-free bipartite graphs, i.e., that do not contain an induced path on seven vertices. The number of colors used by the on-line algorithm for $P_6$-free and $P_7$-free bipartite graphs is, respectively, bounded by roughly twice and roughly eight times the on-line chromatic number. In contrast, it is known that there exists no competitive on-line algorithm to color $P_6$-free (or $P_7$-free) bipartite graphs, i.e., for which the number of colors is bounded by any function depending only on the chromatic number","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/15408.pdf","fullTextIdentifier":"http:\/\/dro.dur.ac.uk\/7433\/1\/7433.pdf","pdfHashValue":"5f6551c56f7331d2600205dd5a0d1310c09737db","publisher":"Society for Industrial and Applied Mathematics","rawRecordXml":"<record><header><identifier>\n  \n  \n    \n      oai:dro.dur.ac.uk.OAI2:7433<\/identifier><datestamp>\n      2013-04-03T12:22:42Z<\/datestamp><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n    \n      \n        A new algorithm for on-line coloring bipartite graphs.<\/dc:title><dc:creator>\n        Broersma, H.J.<\/dc:creator><dc:creator>\n        Capponi, A.<\/dc:creator><dc:creator>\n        Paulusma, Daniel<\/dc:creator><dc:description>\n        We first show that for any bipartite graph $H$ with at most five vertices there exists an on-line competitive algorithm for the class of $H$-free bipartite graphs. We then analyze the performance of an on-line algorithm for coloring bipartite graphs on various subfamilies. The algorithm yields new upper bounds for the on-line chromatic number of bipartite graphs. We prove that the algorithm is on-line competitive for $P_7$-free bipartite graphs, i.e., that do not contain an induced path on seven vertices. The number of colors used by the on-line algorithm for $P_6$-free and $P_7$-free bipartite graphs is, respectively, bounded by roughly twice and roughly eight times the on-line chromatic number. In contrast, it is known that there exists no competitive on-line algorithm to color $P_6$-free (or $P_7$-free) bipartite graphs, i.e., for which the number of colors is bounded by any function depending only on the chromatic number. <\/dc:description><dc:publisher>\n        Society for Industrial and Applied Mathematics<\/dc:publisher><dc:source>\n        SIAM journal on discrete mathematics, 2008, Vol.22(1), pp.72-91 [Peer Reviewed Journal]<\/dc:source><dc:date>\n        2008-02-01<\/dc:date><dc:type>\n        Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:identifier>\n        dro:7433<\/dc:identifier><dc:identifier>\n        issn:0895-4801<\/dc:identifier><dc:identifier>\n        issn: 1095-7146<\/dc:identifier><dc:identifier>\n        doi:10.1137\/060668675 <\/dc:identifier><dc:identifier>\n        http:\/\/dro.dur.ac.uk\/7433\/<\/dc:identifier><dc:identifier>\n        http:\/\/dx.doi.org\/10.1137\/060668675 <\/dc:identifier><dc:format>\n        application\/pdf<\/dc:format><dc:identifier>\n        http:\/\/dro.dur.ac.uk\/7433\/1\/7433.pdf<\/dc:identifier><dc:rights>\n        \u00a9 2010 SIAM \\ud\n<\/dc:rights><dc:accessRights>\n        info:en-repo\/semantics\/openAccess<\/dc:accessRights><\/oai_dc:dc><\/metadata><\/record>","journals":[{"title":null,"identifiers":["0895-4801"," 1095-7146","issn: 1095-7146","issn:0895-4801"]}],"language":{"code":"en","id":9,"name":"English"},"relations":[],"year":2008,"topics":[],"subject":["Article","PeerReviewed"],"fullText":"Durham Research Online\nDeposited in DRO:\n07 October 2010\nVersion of attached file:\nPublished Version\nPeer-review status of attached file:\nPeer-reviewed\nCitation for published item:\nBroersma, H.J. and Capponi, A. and Paulusma, D. (2008) \u2019A new algorithm for on-line coloring bipartite\ngraphs.\u2019, SIAM journal on discrete mathematics., 22 (1). pp. 72-91.\nFurther information on publisher\u2019s website:\nhttp:\/\/dx.doi.org\/10.1137\/060668675\nPublisher\u2019s copyright statement:\n2010 SIAM\nAdditional information:\nUse policy\nThe full-text may be used and\/or reproduced, and given to third parties in any format or medium, without prior permission or charge, for\npersonal research or study, educational, or not-for-profit purposes provided that:\n\u2022 a full bibliographic reference is made to the original source\n\u2022 a link is made to the metadata record in DRO\n\u2022 the full-text is not changed in any way\nThe full-text must not be sold in any format or medium without the formal permission of the copyright holders.\nPlease consult the full DRO policy for further details.\nDurham University Library, Stockton Road, Durham DH1 3LY, United Kingdom\nTel : +44 (0)191 334 3042 \u2014 Fax : +44 (0)191 334 2971\nhttp:\/\/dro.dur.ac.uk\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nCopyright \u00a9 by SIAM. Unauthorized reproduction of this article is prohibited. \nSIAM J. DISCRETE MATH. c\u00a9 2008 Society for Industrial and Applied Mathematics\nVol. 22, No. 1, pp. 72\u201391\nA NEW ALGORITHM FOR ON-LINE COLORING BIPARTITE\nGRAPHS\u2217\nHAJO J. BROERSMA\u2020 , AGOSTINO CAPPONI\u2021 , AND DANIE\u00a8L PAULUSMA\u2020\nAbstract. We first show that for any bipartite graph H with at most five vertices there exists\nan on-line competitive algorithm for the class of H-free bipartite graphs. We then analyze the per-\nformance of an on-line algorithm for coloring bipartite graphs on various subfamilies. The algorithm\nyields new upper bounds for the on-line chromatic number of bipartite graphs. We prove that the\nalgorithm is on-line competitive for P7-free bipartite graphs, i.e., that do not contain an induced\npath on seven vertices. The number of colors used by the on-line algorithm for P6-free and P7-free\nbipartite graphs is, respectively, bounded by roughly twice and roughly eight times the on-line chro-\nmatic number. In contrast, it is known that there exists no competitive on-line algorithm to color\nP6-free (or P7-free) bipartite graphs, i.e., for which the number of colors is bounded by any function\ndepending only on the chromatic number.\nKey words. on-line coloring, bipartite graph, (on-line) competitive\nAMS subject classifications. 05C15, 05C85\nDOI. 10.1137\/060668675\n1. Introduction. In static optimization problems one is often faced with the\nchallenge of determining efficient algorithms that solve a particular problem (nearly)\noptimally for any given instance of the problem. This task is usually facilitated if\nthe structure of the instances is pretty straightforward. As an example, it is a trivial\nexercise to determine an algorithm for finding a 2-coloring of a given bipartite graph.\nIn the area of dynamic optimization the situation gets more complicated. There,\none often lacks the knowledge of the complete instances of the problems. As an\nillustration, compare the previous problem with the slightly changed situation in\nwhich the bipartite graph is presented on-line, i.e., vertex by vertex, and the algorithm\nhas to assign a color irrevocably to a vertex as it comes in, i.e., only based on the\nknowledge of the subgraph that has been revealed so far. This slight change of the\nproblem formulation makes it a lot more difficult: whereas the static problem was\ntrivial, no algorithm for the dynamic problem can guarantee an optimal solution\nfor every instance. In [12] it has been shown that the worst-case performance ratio\nbetween on-line and off-line coloring of a known input graph on n vertices is at least\n2n\/(log2 n)\n2. It is even questionable whether one can expect to determine an on-line\nalgorithm that does reasonably well, in the sense that the number of colors used is\nbounded in some other reasonable way, e.g., as a function of some invariant of the\ninput instances.\nIn this paper we will focus on particular questions of this type related to coloring\nbipartite graphs. These types of questions in a more general setting are at the heart\nof the areas of on-line algorithms and of approximation algorithms.\n\u2217Received by the editors August 24, 2006; accepted for publication (in revised form) July 17,\n2007; published electronically February 8, 2008. An extended abstract of some of the results in this\npaper was presented at the 6th Italian Conference on Algorithms and Complexity 2006 [3].\nhttp:\/\/www.siam.org\/journals\/sidma\/22-1\/66867.html\n\u2020Department of Computer Science, Durham University, South Road, Durham, DH1 3LE, UK\n(hajo.broersma@durham.ac.uk, daniel.paulusma@durham.ac.uk).\n\u2021Computer Science, Division of Engineering and Applied Sciences, California Institute of Tech-\nnology, Pasadena, CA 91125 (acapponi@cs.caltech.edu).\n72\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nCopyright \u00a9 by SIAM. Unauthorized reproduction of this article is prohibited. \nNEW ALGORITHM FOR ON-LINE COLORING BIPARTITE GRAPHS 73\nWe first give a short historical excursion starting with a benchmark paper from\nGya\u00b4rfa\u00b4s and Lehel [9]. They introduced the concept of on-line coloring as a general\napproach. This was motivated by their translation of a rectangle packing problem\nrelated to dynamical storage allocation appearing in [4] into an on-line coloring prob-\nlem. The latter problem was to decide whether the on-line coloring algorithm known\nas First-Fit (FF) has a constant worst-case performance ratio on the family of in-\nterval graphs. We note that since [9] many papers on on-line (coloring) problems\nhave appeared. We refer to [14] for a survey on on-line coloring and to [2] for more\nbackground on the general area of on-line algorithms.\nIn order to have some measure of the performance of on-line algorithms, the notion\nof competitive algorithms has been introduced in [20] and specifically for coloring in\n[9]. Intuitively, an on-line coloring algorithm is said to be competitive for a family\nof graphs G if, for any graph G \u2208 G, the number of colors used by the algorithm on\nG is bounded from above by a function depending only on the chromatic number of\nG. The chromatic number of G is the smallest number of colors that is necessary\nto properly color the vertices of G (off-line), i.e., such that adjacent vertices receive\ndifferent colors. In [13] it is shown that FF is competitive for interval graphs, with a\nbounding function that is linear in the chromatic number, and in [6] competitiveness\nof FF for geometric intersection graphs has been proven. In [5] it is shown that FF\nis competitive for graphs with a bounded independence number, including co-planar\ngraphs.\nIt is well known that FF is not competitive for P6-free bipartite graphs, i.e., bipar-\ntite graphs that do not contain an induced path on six vertices: if the vertices of a com-\nplete bipartite graph Km,m minus a perfect matching {u1, v1}, {u2, v2}, . . . , {um, vm}\nare presented in the ordering u1, v1, u2, v2, . . . , um, vm, then FF uses m colors. In fact,\nthere are many families of graphs for which it has been proven that no competitive\nalgorithms exist: two examples given in [9] are the family of trees and the family of\nP6-free bipartite graphs. These negative results have led to the definition of a weaker\nform of competitiveness in [7], namely on-line competitiveness, although results of\nthis type have been obtained before the term was formally introduced.\nWe can explain the notion of on-line competitiveness as follows. It is perhaps\nmore natural to compare the number of colors that is needed to color a graph G by an\non-line algorithm to the on-line chromatic number instead of the chromatic number.\nWe will define the on-line chromatic number formally in section 3. Intuitively, it is the\nnumber of colors used by the best performing on-line algorithm for G, i.e., that gives\nthe smallest number of colors in the worst-case ordering of the presented vertices of G.\nAn on-line coloring algorithm is said to be on-line competitive if the number of colors is\nbounded from above by a function only depending on the on-line chromatic number of\nG. The main open problem is whether on-line competitive coloring algorithms exist\nfor all graphs. A subproblem is to establish such algorithms for certain classes of\ngraphs for which competitive algorithms do not exist. Solving this subproblem can\nbe particularly useful if somebody must design an on-line coloring algorithm in the\ncase that the input graphs are only known to be in a specified class of graphs. This\nalso motivated our choice for considering special graph classes.\nIt is shown in [10] that FF is on-line competitive for trees; it is even optimal for\ntrees, in the sense that if FF uses k colors, then the on-line chromatic number of the\ntree is also k. In [7] it is shown that FF is on-line competitive with an exponential\nbounding function for graphs with girth of at least five.\nIn the context of algorithmic graph theory it has become rather fashionable to\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nCopyright \u00a9 by SIAM. Unauthorized reproduction of this article is prohibited. \n74 H. J. BROERSMA, A. CAPPONI, AND D. PAULUSMA\nconsider forbidden subgraph conditions. For instance, many NP-hard problems turn\nout to be solvable in polynomial time when restricted to H-free graphs for particular\nchoices ofH. Therefore, these graph classes are well studied throughout a range of NP-\nhard problems. In the context of coloring, e.g., 3-colorability is polynomially solvable\nfor P6-free graphs, while 4-colorability remains NP-hard for P12-free graphs, and 5-\ncolorability remains NP-hard for P8-free graphs. We refer the reader to the survey\npaper [19] for more details. Note also that well-studied graph classes like chordal\ngraphs (or, more generally, perfect graphs) and line graphs (or, more generally, claw-\nfree graphs) can be characterized by forbidden subgraph conditions.\n2. Results of this paper. One of the main open problems concerning on-line\ncompetitive coloring algorithms [7] is to decide whether for every k there exists an\non-line competitive coloring algorithm for the family of graphs with on-line chromatic\nnumber k. Perhaps surprisingly, this is even open for bipartite graphs for k = 4,\nwhereas it has been solved for general graphs for k \u2264 3: in both [8] and [17] it is\nproven that for the family of graphs with on-line chromatic number 3 at most four\ncolors are needed. The open problem on bipartite graphs seems to be very hard and\nemphasizes how much on-line coloring differs from off-line coloring.\nOur results are motivated by a number of open problems, but most strongly by the\nabove open problem for bipartite graphs. We solve the problem for several subclasses\nof bipartite graphs which are defined by forbidding a certain fixed bipartite graph\nH as an induced subgraph. For a relatively small graph H this is an easy exercise,\nbut for larger graphs this gets difficult, in correspondence with the fact that the class\nof H-free graphs contains the class of H \u2032-free graphs if H \u2032 is a subgraph of H. By\ncombining known results and dealing with a few cases ourselves, we show that for\nevery bipartite graph H with at most five vertices there exists an on-line competitive\ncoloring algorithm for the class of H-free bipartite graphs. Since for P4-free and\nP5-free graphs there even exists a competitive algorithm [9, 11], and since P6-free\nbipartite graphs do not admit a competitive algorithm [9], our natural starting point\nfrom there is the latter class. In [3] we proved that there exists an on-line competitive\nalgorithm for the class of P6-free bipartite graphs; its bounding function is linear in\nthe on-line chromatic number, namely roughly twice the on-line chromatic number.\nIn fact, this gives a 2-approximation algorithm for on-line coloring P6-free bipartite\ngraphs. In this paper we prove a similar result for the larger class of P7-free bipartite\ngraphs with a bounding function that is roughly eight times the on-line chromatic\nnumber. Note that the on-line chromatic number for both these graph classes can be\narbitrarily high, so these classes are definitely no subclasses of the class of bipartite\ngraphs with on-line chromatic number 4. In this sense, our results have a broader\nappeal than just solving the aforementioned problem with k = 4 for the restricted\nclasses of P6-free and P7-free bipartite graphs. It might be possible that our algorithm\nor variations on it can be used to prove similar results for larger subclasses of bipartite\ngraphs, although we have not been able to do so yet. We also note that our algorithm\nuses at most four colors (so it is competitive) for the class of P5-free bipartite graphs.\nThe rest of the paper is organized as follows. Section 3 contains the basic notation\nand definitions. In section 4 we start our exposition by proving the result on H-free\nbipartite graphs with |V (H)| \u2264 5. Next we introduce the key algorithm of this paper\ncalled BicolorMax. We prove in section 6 that it is on-line competitive for P7-free\nbipartite graphs. In section 7 we deduce new upper bounds for the on-line chromatic\nnumber of bipartite graphs. We give some final remarks in section 8 and conclusions\nin section 9.\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nCopyright \u00a9 by SIAM. Unauthorized reproduction of this article is prohibited. \nNEW ALGORITHM FOR ON-LINE COLORING BIPARTITE GRAPHS 75\n3. Preliminaries. Throughout we consider simple graphs G = (V (G), E(G)),\nwhere V (G) is a set of vertices and E(G) is a set of unordered pairs of vertices, called\nedges. For graph terminology not defined below we refer to [1].\nA graph is called bipartite if its vertex set can be partitioned into two disjoint\nsets so that all edges are incident with vertices from both sets. If H is a subgraph of\nG, i.e., if H is a graph and V (H) \u2286 V (G) and E(H) \u2286 E(G), then we write H \u2286 G.\nIf S \u2286 V (G), then G[S] denotes the subgraph of G with vertex set S and edge set\n{{x, y} | x \u2208 S, y \u2208 S}. A graph is an induced subgraph of G if it is isomorphic to\nG[S] for some nonempty S \u2286 V (G). A graph is H-free if it does not contain the\ngraph H as an induced subgraph. We call two vertex-disjoint graphs remote if there\nare no edges joining them. A maximal connected subgraph of a graph G is called\na component of G. For any two vertices x, y of a connected graph G we denote by\nPxy a path between x and y in G. We define the distance d(x, y,G) between x and\ny in G as the number of edges of a shortest path between x and y. We use Kn, Cn,\nand Pn to denote, respectively, the complete graph, the cycle, and the path on n\nvertices, and we use Km,n to denote the complete bipartite graph with m vertices in\none bipartition class and n vertices in the other. A coloring of a graph G is a function\nc : V (G) \u2192 {1, 2, . . .} such that c(v) \u0006= c(w) whenever {v, w} \u2208 E(G). The smallest\nnumber of colors in a coloring of G is the chromatic number of G and denoted by\n\u03c7(G). Clearly, a graph G is bipartite if and only if \u03c7(G) \u2264 2.\nWe assume that the reader is familiar with the basic concept of an on-line coloring\nalgorithm. For details we refer to [14]. Intuitively, an on-line coloring algorithm\nproperly colors the vertices of a graph one by one, consistently using a fixed strategy,\ndepending only on the subgraph induced by the revealed vertices and the colors that\nhave been assigned to them by the algorithm, according to an externally determined\nordering of the presented vertices.\nA popular informative way of looking at on-line coloring is as a two-person game.\nIn the two-person game, the Drawer reveals the vertices of G one by one together\nwith their adjacencies to vertices already revealed. The Painter irrevocably assigns\nan admissible color to the currently revealed vertex, based on a strategy involving the\ngraph induced by the already revealed vertices and their colors, and the adjacencies of\nthe currently revealed vertex. The aim of Drawer is to reveal the vertices in an order\nthat forces Painter to use many colors. The aim of Painter is to invent a strategy that\nuses as few colors as possible. The order in which Drawer reveals the vertices of G is\nan ordering of the vertices of V (G). Any strategy Painter chooses can be extended to\nsome on-line coloring algorithm in the above sense that assigns Painter\u2019s coloring to\nG. The reverse is also true: a coloring prescribed by an on-line coloring algorithm can\nbe simulated by a two-person game with a Drawer and Painter as described above.\nWe denote the (finite) set of all on-line coloring algorithms for a graph G by\nAOL(G). Let \u03a0(G) denote the set of all permutations of the vertices of G. If A \u2208\nAOL(G) and \u03c0 \u2208 \u03a0(G), then we denote by \u03c7A(G, \u03c0) the number of colors used by\nA when the vertices of G are presented according to \u03c0. The largest number of colors\nused by the on-line algorithm A for G is called the A-chromatic number of G and\ndenoted by \u03c7A(G). Hence\n\u03c7A(G) = max\n\u03c0\u2208\u03a0(G)\n\u03c7A(G, \u03c0).\nThe smallest number of colors used by an on-line algorithm for G is the on-line\nchromatic number of G and denoted by \u03c7OL(G) [9]. Hence\n\u03c7OL(G) = min\nA\u2208AOL(G)\n\u03c7A(G).\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nCopyright \u00a9 by SIAM. Unauthorized reproduction of this article is prohibited. \n76 H. J. BROERSMA, A. CAPPONI, AND D. PAULUSMA\nLet G denote a (possibly infinite) family of graphs. If A \u2208 AOL(G) for every G \u2208 G,\nthen we say that A is an on-line coloring algorithm for G and write A \u2208 AOL(G).\nAn algorithm A \u2208 AOL(G) is said to be competitive for G if there exists a function\nf such that \u03c7A(G) \u2264 f(\u03c7(G)) for every G \u2208 G; it is on-line competitive if \u03c7A(G) \u2264\nf(\u03c7OL(G)) for every G \u2208 G.\n4. Small forbidden subgraphs. As stated before, it has been shown that there\ndoes not exist a competitive on-line coloring algorithm for P6-free bipartite graphs,\nbut there exists a competitive on-line coloring algorithm for P5-free bipartite graphs.\nIn fact, combining results from [7, 11, 15, 16], and analyzing a few cases ourselves, we\ncan show that there exists an on-line coloring algorithm that is on-line competitive\nfor the class of H-free bipartite graphs for any fixed bipartite graph H on at most\nfive vertices. We are not able to show such a result for any fixed graph H that is\nnot bipartite. Since a bipartite graph does not contain a nonbipartite subgraph, this\nwould come down to proving that there exists an on-line coloring algorithm that is\non-line competitive for the class of bipartite graphs. This, however, is still a major\nopen problem.\nBefore stating and proving our proposition below, let us first note that we are\nnot aiming at obtaining nice performance ratios in our proof of this proposition. As\nwe are primarily interested in the existence result, here we took the freedom to use\nrather unsophisticated methods for reaching our goal.\nProposition 4.1. Let H be a bipartite graph on at most five vertices. Then\nthere exists an on-line coloring algorithm that is on-line competitive for the class of\nH-free bipartite graphs.\nProof. We may restrict ourselves to bipartite graphs on exactly five vertices,\nnoting that an F -free bipartite graph with F bipartite on at most four vertices is\nalso H-free for some bipartite graph H on five vertices. We use H + H \u2032 to denote\nthe disjoint union of two graphs H and H \u2032, and pH to denote the disjoint union of\np \u2265 2 copies of H. Before we make a case distinction we first make the following easy\nobservation:\n(1) Let F be a graph and A an on-line coloring algorithm that is on-line com-\npetitive for the class of F -free bipartite graphs. Then there exists an on-line\ncoloring algorithm A\u2032 that is on-line competitive for the class of F +K1-free\nbipartite graphs.\nThis claim can be seen as follows. Initially we use algorithm A to color the vertices\nof an F + K1-free bipartite graph G. If G does not contain an induced F , then we\ndo not need any extra colors. Suppose G contains an induced subgraph G\u2032 that is\nisomorphic to F . We assume that G\u2032 is the first occurrence of F if G is revealed to\nA. Let v be the last vertex of G\u2032 presented to A. We color v with a new color c\u2217.\nSince G is F +K1-free, any vertex w that is presented after v must have a neighbor\nin G\u2032. Let Q1, . . . , Qp be the components of G\u2032. We note that these components\nare bipartite, since G is bipartite. For each component Qi (i = 1, . . . , p) we define a\nset of two new colors {ci, di}, each of which corresponds to one of the classes in the\nbipartition of Qi. Now suppose Qh is the component that has the smallest index h\nof all the components of G\u2032, which w is adjacent to. Then we color w with ch or dh,\ndepending on which bipartite class of Qh vertex w belongs to. This way we can finish\nthe coloring of G with at most 2p+ 1 extra colors.\nWe now distinguish a number of cases depending on the value of |E(H)| = m.\nCase I. m = 0. Then H = 5K1. Since G is bipartite, we obtain \u03c7FF \u2264 \u0394(G) +\n1 \u2264 5.\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nCopyright \u00a9 by SIAM. Unauthorized reproduction of this article is prohibited. \nNEW ALGORITHM FOR ON-LINE COLORING BIPARTITE GRAPHS 77\nCase II. m = 1. Then H = K2 + 3K1. It is trivial to see that FF is on-line\ncompetitive for the class of K2-free graphs, i.e., graphs with only isolated vertices.\nAfter applying (1) three times we get the desired result.\nCase III. m = 2. Then H = P3 + 2K1 or 2K2 +K1. For the first subcase we can\nproceed similarly as in Case II. For the second subcase we use the following result\nfrom [11]:\n(2) If G is a P5-free graph without triangles, then \u03c7FF (G) \u2264 3.\nNoting that 2K2-free bipartite graphs are both P5-free and triangle-free, and combin-\ning (1) and (2), yields the result.\nCase IV. m = 3. Then H = P4 +K1, K1,3 +K1, or P3 +K2. Noting that P4-free\nbipartite graphs are both P5-free and triangle-free, and combining (1) and (2), yields\nthe desired result for the first subcase. For the second subcase we first observe that\n\u03c7FF (G) \u2264 \u0394(G) + 1 \u2264 3 for any K1,3-free bipartite graph G and then we apply (1)\nto get the result. Since a P3 + K2-free bipartite graph is a P7-free bipartite graph,\nwe can of course immediately apply Theorem 6.8 (which will be presented later) for\nthe third subcase. It is also not difficult to give a direct proof that our algorithm\nBicolorMax (which will be presented in the next section) is on-line competitive for\nthis class of graphs.\nCase V. m = 4. Then H = K1,4, C4 +K1, P5, or the unique graph with degree\nsequence 3,2,1,1,1 which we denote by K+1,3. For the first subcase we easily get that\n\u03c7FF (G) \u2264 \u0394(G)+ 1 \u2264 4. The girth of a graph G is the number of edges of a smallest\ncycle in G. For the second subcase we combine (1) with the following result from [7]:\n(3) If G has a girth of at least five, then \u03c7FF (G) \u2264\n(\n2\u03c7OL(G)\n2\n)\n.\nFor the third subcase we use (2). The radius of a graph G is defined as the minimum\nof maxv d(u, v,G) over all vertices u in G. Since K\n+\n1,3 has a radius of 2, we can use\nthe following result from [16]:\n(4) For every tree T with a radius of 2, there is an on-line coloring algorithm A\nthat is on-line competitive for the class of T -free graphs.\nCase VI. m = 5. Then H = K2,3 \u2212 e for an edge e of K2,3. We need a separate\nproof for this case and first prove the following claim.\nClaim. Let G be bipartite and H-free and let C be a component of G such that\nC4 is an induced subgraph of C. Then C = Ks,t for some integers s, t \u2265 2.\nWe prove this claim as follows. If C = C4 = K2,2, then the claim trivially\nholds. If not, let C4 = uvwxu, and let N(p) denote the neighbors of vertex p in\nC. If N(u) \u0006\u2286 N(w), then G contains H as an induced subgraph. So, by symmetry,\nN(u) = N(w), and similarly N(v) = N(x). Let y \u2208 N(u)\u2229N(w). Then uvwyu is an\ninduced C4, so as before N(y) = N(v) = N(x). Hence all neighbors of u and w are\nadjacent to all neighbors of v and x and vice versa. By repeating the arguments for\nall induced C4\u2019s, we obtain that C = Ks,t for some s, t \u2265 2.\nA component in a bipartite graph that does not contain an induced C4 has a girth\nof at least six. Since \u03c7FF (Ks,t) = 2, the above claim together with (3) then implies\nthat \u03c7FF (G) \u2264 max{\n(\n2\u03c7OL(G)\n2\n)\n, 2}.\nCase VII. m = 6. Then H = K2,3. Kierstead and Penrice [15] showed that FF is\non-line competitive for the class of H-free graphs.\nWe conclude that the first open question with respect to the (non)existence of\non-line competitive coloring algorithms for H-free bipartite graphs concerns bipartite\ngraphs H on six vertices, in particular H = P6, which has radius 3. In the next\nsection we present an on-line algorithm for coloring general bipartite graphs. We will\nshow that it is on-line competitive for (P6-free and) P7-free bipartite graphs.\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nCopyright \u00a9 by SIAM. Unauthorized reproduction of this article is prohibited. \n78 H. J. BROERSMA, A. CAPPONI, AND D. PAULUSMA\n5. The algorithm BicolorMax. Let G be a bipartite graph on n vertices de-\nnoted by 1, 2, . . . , n. Let A = {a1, a2, . . . , ap} and B = {b1, b2, . . . , bp} be two disjoint\nordered sets of colors. For a fixed positive integer k \u2264 p, let A(k) = {a1, a2, . . . , ak}\nand B(k) = {b1, b2, . . . , bk}.\nWe first give the general idea of our on-line algorithm called BicolorMax. Suppose\nthat G is presented to the algorithm. At some stage a new uncolored vertex v of G\nis revealed, together with its adjacencies to the set S of already colored vertices of\nG. If v is not adjacent to any previously revealed vertex of G, then v receives color\na1. Otherwise, the choice of the color for v is based on the present colors in the\nbipartition classes of the component containing v of the subgraph of G induced by v\nand the vertices of S with colors in A(k) \u222a B(k) for some suitable k \u2265 1. To make\nthis choice explicit we first need to introduce some additional terminology.\nIf F \u2286 V (G), then the hue of F , denoted by H(F ), is the set of all colors used\non vertices in F . Let \u03c0 \u2208 \u03a0(G) for a bipartite graph G, and assume that v = \u03c0(j).\nLet Gkj denote the subgraph of G[{\u03c0(1), . . . , \u03c0(j)}] induced by v = \u03c0(j) and all the\nvertices in {\u03c0(1), . . . , \u03c0(j \u2212 1)} that have been assigned colors from A(k)\u222aB(k). We\ndenote by Ckj the component of G\nk\nj containing v, and we write C\nk\nj := (I1, I2) to\nindicate the bipartition of its vertex set. Note that (I1, I2) is the unique bipartition\nof Ckj (up to renaming), because C\nk\nj is connected. We say that color ak is mixed on\nCkj = (I1, I2) if there exist at least two vertices, v \u2208 I1 and w \u2208 I2, that have been\ncolored with ak. We then call (v, w) a k-mixed pair.\nWe are now ready to explain the choice of the color of a new vertex. The key\nidea is to prevent the mixing of colors as much as possible. Recall that in the worst\ncase FF uses m colors for a complete bipartite graph Km,m minus a perfect matching,\nbecause the worst-case ordering forces FF to assign the same color to each pair of the\nperfect matching; hence, all m colors are used on both bipartite classes. In order to\nreduce the total number of colors we somehow need to avoid this as much as possible\nby changing the coloring strategy with respect to mixing colors.\nThe algorithm BicolorMax has been designed with this intuitive idea in mind.\nIt is defined inductively. Vertex \u03c0(1) is colored with a1. Suppose that vertices\n\u03c0(1), . . . , \u03c0(j \u2212 1) have already been colored. Let v = \u03c0(j) be the next vertex pre-\nsented to the algorithm. The algorithm first computes the highest value of k such\nthat ak is mixed on C\nk\nj . We denote this value by m. In order to stop the mixing\nof colors, the algorithm colors v with am+1 or with bm+1. By definition of m, the\ncolor am+1 is not mixed on C\nm+1\nj . The choice will fall on am+1 if v is in the same\nbipartition class as a vertex with color am+1 or if am+1 has not been used before on\nCm+1j . Otherwise v receives color bm+1. This way the mixing of color am+1 within a\ncomponent is prevented. We note that am+1 might get mixed later on: if at a certain\nstage two components that both contain a vertex with color am+1 are joined by a new\nvertex, then am+1 becomes mixed if at least two vertices with color am+1 belong to\ndifferent bipartition classes.\nBefore we give a formal description of our algorithm we would like to make the\nfollowing remark. The algorithm FF uses at most three colors on any path Pn.\nHowever, BicolorMax does not try to use the colors ak or bk for any k < m if am is\nmixed on Cmj . Hence, it is easy to see that BicolorMax is not on-line competitive for\nthe family of paths. In section 8 we return to this observation and show how we can\ncombine FF and BicolorMax to obtain an on-line competitive algorithm for families\nof graphs for which FF is on-line competitive as well.\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nCopyright \u00a9 by SIAM. Unauthorized reproduction of this article is prohibited. \nNEW ALGORITHM FOR ON-LINE COLORING BIPARTITE GRAPHS 79\nBicolorMax(G[{\u03c0(1), . . . , \u03c0(j \u2212 1)}], v)\nm := max({0} \u222a {k : ak is mixed on Ckj }).\nif am+1 \/\u2208 H(V (Cm+1j ))\nCm+1j := (I1, I2) such that v \u2208 I1\nelse\nCm+1j := (I1, I2) such that am+1 \u2208 H(I1).\nif v \u2208 I1\nassign color am+1 to v\nelse\nassign color bm+1 to v.\nIt is immediately clear that BicolorMax is not able to color a nonbipartite graph\nG. For instance, take G = K3. Then C\n1\n3 = C\n2\n3 = K3 cannot be partitioned into two\nindependent sets I1 and I2. For bipartite graphs, BicolorMax does assign a coloring\nfor each vertex permutation.\nObservation 5.1. BicolorMax is an on-line coloring algorithm for bipartite\ngraphs.\nProof. Let \u03c0 \u2208 \u03a0(G) for a bipartite graph G. Let v = \u03c0(j) be the jth vertex\npresented to BicolorMax. Let m := max({0} \u222a {k : ak is mixed on Ckj }).\nSuppose am+1 \/\u2208 H(V (Cm+1j )). This means that v is not adjacent to a previously\npresented vertex with color am+1. Hence, BicolorMax may color v with color am+1\nin a proper vertex coloring.\nSuppose am+1 \u2208 H(V (Cm+1j )). By maximality of m, we find that am+1 is not\nmixed on Cm+1j . Then, am+1 is only assigned to vertices in one bipartite class of C\nm+1\nj ,\nand we can indeed define Cm+1j = (I1, I2) with am+1 \u2208 H(I1) and am+1 \/\u2208 H(I2).\nIf v is in I1, then BicolorMax colors v with am+1. Since am+1 \/\u2208 H(I2), vertex v is\nnot adjacent to any previously presented vertex with color am+1. If v is in I2, then\nBicolorMax colors v with bm+1. Suppose v is adjacent to a vertex u = \u03c0(i) for some\ni \u2264 j \u2212 1 with color bm+1. By definition of the algorithm, Cm+1i = (I \u20321, I \u20322) with\nam+1 \u2208 H(I \u20321) and u \u2208 I \u20322. Since Cm+1i \u2286 Cm+1j , we find that I \u20321 \u2286 I1 and I \u20322 \u2286 I2.\nThis leads to a contradiction because the vertices u and v cannot be adjacent if they\nare both in I2.\nTo illustrate how the choice of the color of v = \u03c0(j) depends on the components\nof Gkj we apply the algorithm to the following example.\nExample. Let G be a K4,4 without a perfect matching, i.e., with V (G) =\n{1, 2, 3, 4, 5, 6, 7, 8}, bipartition in {1, 3, 5, 7} and {2, 4, 6, 8}, and only edges {1, 2},\n{3, 4}, {5, 6}, and {7, 8} omitted. If the vertices are revealed in the order of increas-\ning numbers, the algorithm assigns colors a1, a1, b1, b1, a2, b2, a2, b2, respectively. The\ncolor b2 is assigned to vertex 8 for the following three reasons. First, a1 is mixed\non C18 , i.e., the subgraph of G induced by {1, 2, 3, 4, 8}. Second, a2 is not mixed\non C28 = G. Third, a2 has already been assigned to a vertex in {1, 3, 5, 7}, i.e., the\nbipartition class of C28 not containing the vertex 8.\nSuppose that G is extended and a new vertex 9 is revealed to the algorithm after\npresenting vertices 1, . . . , 8. Suppose 9 is only adjacent to 7. Then a1 is not mixed on\nC19 = ({9}, \u2205) and a2 is not mixed on C29 = G. Hence, BicolorMax colors 9 with a1.\nIt is left to the reader to check that 9 is assigned color b1 if 9 is adjacent to 1 and 7,\ncolor b2 if 9 is adjacent to 1, 3, and 7, and color a2 if 9 is adjacent to 2, 4, and 6.\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nCopyright \u00a9 by SIAM. Unauthorized reproduction of this article is prohibited. \n80 H. J. BROERSMA, A. CAPPONI, AND D. PAULUSMA\nFor a Kn,n without a perfect matching with n \u2265 5, the algorithm will continue\nassigning a2 and b2 if the vertices are presented in an order alternating between the\ntwo classes of the bipartition, as in the previous example for n = 4. In contrast, recall\nthat FF uses n colors in this case.\nRemark. In [18], the authors leave it as an \u201ceasy exercise\u201d to construct an on-\nline coloring algorithm A such that \u03c7A(G) = O(log2 n) on the class of bipartite\ngraphs (where G is a bipartite graph on n vertices). There are several choices for\nA to solve this exercise. One of these choices is the algorithm BicolorMax that we\npresented previously and that will be analyzed in this paper. We are not aware of\nany publications that contain this algorithm BicolorMax (except for [3], of course).\nClearly, our main purpose in this paper is to show that BicolorMax works particularly\nwell in the sense of on-line competitiveness for P7-free bipartite graphs. As can be\nconcluded from the next section this is not an easy exercise.\nOne might be inclined to think that BicolorMax coincides with other on-line\nalgorithms that have been proposed to solve the \u201ceasy exercise\u201d from [18], e.g., the\nalgorithm from the survey paper of Kierstead (see [14, Theorem 2, p. 286]) that is\nalso known under the acronym BFF (Bipartite First-Fit). The formulation of BFF\nis very simple: when vertex vi is presented, there is a unique partition (I1, I2) of the\ncomponent to which vi belongs such that vi \u2208 I1. The algorithm BFF assigns to vi the\nsmallest color (in some ordering of the colors) that has not already been assigned to a\nvertex of I2. We do something more advanced, as can be seen from the above example.\nIn this example, as we have argued, if the vertices 1 to 8 are presented in the order of\nincreasing numbers, the algorithm BicolorMax assigns colors a1, a1, b1, b1, a2, b2, a2, b2,\nrespectively. It can be checked that BFF also assigns these colors in the same order.\nNow suppose a new vertex 9 is presented which is only adjacent to vertex 7. Then\nBicolorMax assigns color a1 to 9, as explained in the example, whereas BFF assigns\ncolor b2 to 9.\nAlthough at first sight BicolorMax looks very similar to BFF, the subtle differ-\nence in the choice of colors to avoid mixing colors enables us to prove the on-line\ncompetitiveness of our algorithm for P7-free bipartite graphs. Our earlier attempts\nto use a simpler strategy, like in BFF, for such a competitiveness proof failed even for\nthe more restricted class of P6-free bipartite graphs. In fact, finding a suitable variant\nfor our competitiveness proof turned out to be rather tricky.\n6. P7-free bipartite graphs. In this section we prove our main theorem show-\ning that BicolorMax is a linear on-line competitive algorithm for the class of P7-free\nbipartite graphs. The proof is modelled along the following lines. We will define\na class of tree-like bipartite graphs, show that the on-line competitive factor of any\non-line coloring algorithm for these graphs is high, and show that whenever Bicolor-\nMax uses many colors on a P7-free bipartite input graph G, then G contains a large\nmember of the class of tree-like graphs as an induced subgraph. More specifically,\ndenote by \u03c7BM (G) the maximum number of colors used by BicolorMax for coloring\na graph G.\nBy a series of lemmas and propositions we prove that \u03c7BM (G) \u2264 8\u03c7OL(G)+8 for\nany P7-free bipartite graph G. In the next two lemmas we first show that BicolorMax\ncontrols the mixing of color pairs. We note that these lemmas are valid for any\nbipartite graph.\nLemma 6.1. Let G be a bipartite graph. Let BicolorMax color vertex v = \u03c0(j)\nwith am or bm, m \u2265 2. Let (x, y) be a k-mixed pair in Ckj with k \u2264 m\u2212 1. Then any\npath between x and y in Ckj must pass through v.\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nCopyright \u00a9 by SIAM. Unauthorized reproduction of this article is prohibited. \nNEW ALGORITHM FOR ON-LINE COLORING BIPARTITE GRAPHS 81\nProof. Let x = \u03c0(r), and let y = \u03c0(s) for some r, s \u2264 j \u2212 1. We assume without\nloss of generality that y has been presented to BicolorMax after x, i.e., s > r. Suppose\nx belongs to Cks , implying that ak \u2208 H(V (Cks )). Since y is colored with ak, color ak is\nnot mixed on Cks . Since (x, y) is a k-mixed pair, x (together with all the other vertices\nin Cks that have color ak) and y are in different bipartite classes. So BicolorMax would\nhave colored y with color bk. Hence, x does not belong to C\nk\ns .\nSuppose there exists an index i with s < i < j such that x and y belong to Cki .\nThis means that ak is mixed on C\nk\ni . Then BicolorMax would never use a color ah\nor bh with h \u2264 k to color \u03c0(i). We conclude that every path between x and y in Ckj\nmust pass through v.\nLemma 6.2. Let G be a bipartite graph. Let BicolorMax color vertex v = \u03c0(j)\nwith am or bm, m \u2265 2. For some k \u2264 m\u2212 1 let x and y be two vertices in Ckj colored\nwith ak and bk, respectively, such that d(x, y, C\nk\nj ) is even. Then any path between x\nand y in Ckj must pass through v.\nProof. Let x = \u03c0(r), and let y = \u03c0(s) for some r, s \u2264 j \u2212 1. Suppose x belongs\nto Cks implying that y appeared after x. Since y is colored with bk, color ak is not\nmixed on Cks . Because G is bipartite and the distance d(x, y, C\nk\nj ) is even, the distance\nbetween x (or any other vertex in Cks with color ak) and y in C\nk\ns is also even. Then\nBicolorMax would have colored y with color ak. Hence, x does not belong to C\nk\ns .\nSuppose y belongs to Ckr . Since x is colored with ak, color ak is not mixed on\nCkr . Then the distance between x and any vertex in C\nk\nr with color ak is even. Since\ny has received color bk, by definition of BicolorMax, there exists at least one vertex z\nin Ckr with color ak, which is in a different bipartite class than y. Since the distance\nbetween x and y in Ckj , and consequently in C\nk\nr , is even, this implies that the distance\nbetween x and z in Ckr is odd. This is a contradiction. Hence, y does not belong to\nCkr .\nIn the remaining case there exists an index i with max({r, s}) < i < j such that\nx and y belong to Cki . Since y is colored with bk, by definition of BicolorMax, the\ncomponent Cks , which is a subgraph of C\nk\ni , must contain a vertex w with color ak\nand with odd distance to y. Since the distance between x and y is even, the distance\nbetween w and x is odd, and we find that ak is mixed on C\nk\ni . Then BicolorMax would\nnever use a color ah or bh with h \u2264 k to color \u03c0(i). We conclude that every path\nbetween x and y in Ckj must pass through v.\nIn the following lemma we show that BicolorMax ensures that vertices of higher\ncolors are very \u201cclose\u201d to at least some vertices of lower colors.\nLemma 6.3. Let G be a P7-free bipartite graph. Let BicolorMax color vertex\nv = \u03c0(j) with am or bm, m \u2265 3. There exists an (m\u2212 1)-mixed pair (z\u2217, z) in Cm\u22121j\nwith d(v, z\u2217, Cm\u22121j ) = 1 and d(v, z, C\nm\u22121\nj ) = 2.\nProof. By definition of BicolorMax, color am\u22121 is mixed on Cm\u22121j . So C\nm\u22121\nj\ncontains at least one (m\u2212 1)-mixed pair (z, z\u2032). We assume without loss of generality\nthat the distance between z and v is even and the distance between z\u2032 and v is odd.\nSince (z, z\u2032) is an (m\u2212 1)-mixed pair, by Lemma 6.1, a shortest path Pzz\u2032 from z to\nz\u2032 in Cm\u22121j must be formed by joining shortest paths Pzv from z to v and Pvz\u2032 from\nv to z\u2032. First, we show that d(v, z, Cm\u22121j ) = 2.\nSuppose d(v, z, Cm\u22121j ) \u2265 4. Then d(v, z\u2032, Cm\u22121j ) = 1; i.e., z\u2032 and v are adjacent.\nOtherwise, since z\u2032 has odd distance to v, the path Pzz\u2032 contains an induced P7. Let\nz\u2032 = \u03c0(s) for some s < j. Since BicolorMax has used color am\u22121 \u0006= a1 (due to our\nassumption that m \u2265 3) on vertex z\u2032, the component Cm\u22122s contains an (m\u22122)-mixed\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nCopyright \u00a9 by SIAM. Unauthorized reproduction of this article is prohibited. \n82 H. J. BROERSMA, A. CAPPONI, AND D. PAULUSMA\nT2T1 T3 T4\nFig. 6.1. The trees T1, T2, T3, T4.\npair. This means that z\u2032 has a neighbor w \u0006= v in Cm\u22122s \u2286 Cm\u22121j . Bipartiteness of G\nand Lemma 6.1 imply that w is not adjacent to any vertex in Pzv. This implies that\nG contains an induced P7, which is a contradiction. Hence, d(v, z, C\nm\u22121\nj ) = 2.\nWe now show that d(v, z\u2032, Cm\u22121j ) \u2264 3. Suppose d(v, z\u2032, Cm\u22121j ) \u2265 5. Then Pzz\u2032\nwould contain an induced P7. Hence, d(v, z\n\u2032, Cm\u22121j ) = 1 or d(v, z\n\u2032, Cm\u22121j ) = 3. In\nthe first case we are done. In the second case, i.e., if d(v, z\u2032, Cm\u22121j ) = 3, we will show\nthat there exists a vertex z\u2217 on Pz\u2032v with color am\u22121 that is adjacent to v.\nLet y and z\u2217 be vertices of G such that Pz\u2032v = z\u2032yz\u2217v. Note that the distance\nbetween z\u2217 and z\u2032 is even. Then, due to Lemma 6.2, vertex z\u2217 has not been colored\nwith bm\u22121. We will show that z\u2217 has not been colored with any color from A(m \u2212\n2) \u222a B(m \u2212 2) either. First, note that any neighbor of z\u2032 in Cm\u22121j is adjacent to z\u2217.\nOtherwise, we could extend the path Pzz\u2032 on six vertices with one extra vertex, and\nCm\u22121j would contain an induced P7.\nLet r < j be chosen such that z\u2217 = \u03c0(r). Recall that z\u2032 = \u03c0(s). We first consider\nthe case s > r, i.e., vertex z\u2032 has appeared after z\u2217. Since z\u2217 is adjacent to every\nneighbor of z\u2032 in Cm\u22122s \u2286 Cm\u22121j and am\u22122 is mixed on Cm\u22122s , Lemma 6.1 prevents\nz\u2217 from being in Cm\u22122s . Otherwise, C\nm\u22122\ns would contain a path (using z\n\u2217) between\ntwo vertices u1 and u2 of an (m\u2212 2)-mixed pair (u1, u2) in Cm\u22122s not going through\nz\u2032. We already noted that z\u2217 has not received color bm\u22121. Then, since z\u2217 is in Cm\u22121j ,\nvertex z\u2217 must have been colored with am\u22121.\nNow assume s < r, i.e., vertex z\u2217 has appeared after z\u2032. Every neighbor of z\u2032 in\nCm\u22122r is adjacent to z\n\u2217. Hence, am\u22122 is mixed not only on Cm\u22122s but also on C\nm\u22122\nr .\nSince bm\u22121 was not allowed and z\u2217 is in Cm\u22121j , BicolorMax must have colored z\n\u2217 with\nam\u22121.\nWe inductively define a class of trees (see Figures 6.1 and 6.2). Each tree Tk of\nthe class has a root vertex r(Tk), and the following hold:\n\u2022 T1 is a tree consisting of an edge, one of whose end vertices is the root vertex\nr(T1).\n\u2022 T2 is a path on three vertices, one of whose end vertices is the root vertex\nr(T2).\n\u2022 Tk, k \u2265 3, consists of a root vertex r(Tk) that is adjacent to the root vertices\nof mutually disjoint copies of T1, T2, . . . , Tk\u22121 (one copy of each of these trees).\nThese copies are then called the child trees of Tk.\nWe denote a copy of a tree Tk with root vertex v = r(Tk) by Tk(v). The child trees of\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nCopyright \u00a9 by SIAM. Unauthorized reproduction of this article is prohibited. \nNEW ALGORITHM FOR ON-LINE COLORING BIPARTITE GRAPHS 83\nFig. 6.2. The tree T5.\nTk(v) are denoted by T\nv\n1 , T\nv\n2 , . . . , T\nv\nk\u22121. The following lemma turns out to be useful.\nLemma 6.4. Let G be a P7-free bipartite graph. If BicolorMax uses color ak or\nbk on vertex v = \u03c0(j) with k \u2265 2, then Ck\u22121j contains the tree Tk\u22121(v) as a (not\nnecessarily induced) subgraph in such a way that the following hold:\n(i) If there exists an edge in G between any two vertices x, y in Tk\u22121(v) with\nd(v, x, Tk\u22121(v)) \u2264 d(v, y, Tk\u22121(v)), then x lies on the path from y to v in\nTk\u22121(v).\n(ii) The root of child tree T vi is colored with ai+1 or bi+1 for all 1 \u2264 i \u2264 k \u2212 2.\nProof. The proof proceeds by induction on k. Let k = 2; i.e., BicolorMax uses\ncolor a2 or b2 on vertex v. Then C\n1\nj contains a 1-mixed pair. This implies that v has\na neighbor in C1j , and the conditions of the lemma are trivially satisfied.\nLet k = 3; i.e., BicolorMax uses color a3 or b3 on vertex v. By Lemma 6.3, vertex\nv has a neighbor z\u2217 in C2j with color a2. Let z\n\u2217 = \u03c0(q) for some q < j. Then C1q\ncontains a 1-mixed pair. This implies that z\u2217 has a neighbor not equal to v in C2j .\nWe conclude that the conditions of the lemma are satisfied.\nLet k \u2265 4. Since BicolorMax uses color ak or bk on vertex v, there exists a\n(k \u2212 1)-mixed pair (x, y) in Ck\u22121j . By Lemma 6.3, we may without loss of generality\nassume that d(v, x, Ck\u22121j ) = 2 and d(v, y, C\nk\u22121\nj ) = 1. Assume x = \u03c0(h) for some\nh < j and y = \u03c0(i) for some i < j. By the induction hypothesis, Ck\u22122h contains the\ntree Tk\u22122(x), and Ck\u22122i contains the tree Tk\u22122(y). Since (x, y) is a (k \u2212 1)-mixed\npair in Ck\u22121j , every path from x to y in C\nk\u22121\nj must go through v due to Lemma 6.1.\nThis implies that every path in Ck\u22121j from a vertex in C\nk\u22122\nh \u2286 Ck\u22121j to a vertex in\nCk\u22122i \u2286 Ck\u22121j must go through v. Then we have also found that every path in Ck\u22121j\nfrom a vertex in Tk\u22122(x) \u2286 Ck\u22122h to a vertex in Tk\u22122(y) \u2286 Ck\u22122i must go through v.\nWe distinguish two cases: either Ck\u22122h contains a common neighbor of v and x, or\nCk\u22122h does not contain any common neighbors of v and x.\nCase 1. Component Ck\u22122h contains a common neighbor w of x and v. Again we\nneed to distinguish two cases: either w is in Tk\u22122(x), or w is not in Tk\u22122(x).\nCase 1a. Vertex w is in Tk\u22122(x). Then w is in a child tree T xp of Tk\u22122(x) for\nsome 1 \u2264 p \u2264 k \u2212 3. If k = 4, then Tk\u22122(x) = T2(x), and w must be the root of T x1 .\nBy the induction hypothesis w is colored with a2 or b2. Recall that every path in C\n3\nj\nfrom a vertex in T2(x) to a vertex in T2(y) goes through v, and that y is colored with\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nCopyright \u00a9 by SIAM. Unauthorized reproduction of this article is prohibited. \n84 H. J. BROERSMA, A. CAPPONI, AND D. PAULUSMA\nak\u22121 = a3. This implies that v is the root of a copy of T3 satisfying (i) and (ii).\nSuppose k \u2265 5. Then Tk\u22122(x) has a child tree T xq with root u for some q \u0006= p. Note\nthat for all k \u2265 2 any child tree of a tree Tk consists of at least two vertices. Let u\u2032 be a\nneighbor of u in T xq . Let y\n\u2032 be a neighbor of y in Tk\u22122(y). Note that u\u2032, u, x, w, v, y, y\u2032\nare seven different vertices of G. This implies that Pu\u2032y\u2032 = u\n\u2032uxwvyy\u2032 is a path on\nseven vertices in Ck\u22121j . Recall that every path from a vertex of Tk\u22122(x) to a vertex\nof Tk\u22122(y) goes through v. Then there are no edges between {u\u2032, u, x, w} and {y, y\u2032}.\nBy the induction hypothesis, T xp and T\nx\nq are remote. This implies that w is adjacent\nneither to u nor to u\u2032. Then there must be an edge between u and v; otherwise Pu\u2032y\u2032\nis an induced P7 in G. Hence, we have found that v is adjacent to the root of all\nchild trees of Tk\u22122(x) that are not equal to T xp . However, the root of T\nx\np must also be\njoined to v by an edge. This can be shown by using exactly the same arguments (in\nwhich vertex u takes over the role of vertex w).\nFrom the above we conclude that v is adjacent to the roots of all child trees\nof Tk\u22122(x). These trees together with tree Tk\u22122(y) form the child trees of Tk\u22121(v).\nDue to the fact that any path from a vertex in Tk\u22122(x) to a vertex in Tk\u22122(y) goes\nthrough v and our induction hypothesis, the child trees of Tk\u22121(v) satisfy (i). Recall\nthat the root vertex y of T vk\u22122 = Tk\u22122(y) is colored with ak\u22121. The root vertices of the\nother child trees of Tk\u22121(v) are colored with the desired colors due to the induction\nhypothesis. Hence, condition (ii) of the lemma is also satisfied.\nCase 1b. Vertex w is not in Tk\u22122(x). Since k \u2265 4, there exists a vertex s with\ncolor ak\u22122 in Ck\u22122h with d(x, s, C\nk\u22122\nh ) = 2 due to Lemma 6.1. Since d(x,w,C\nk\u22122\nh ) = 1,\nvertex s is not equal to vertex w. Again, let y\u2032 be a neighbor of y in Tk\u22122(y). We\nfirst show that we may without loss of generality assume that w is adjacent to s.\nSuppose w is not adjacent to s. Since d(x, s, Ck\u22122h ) = 2, vertices s and x have\na common neighbor t in Ck\u22122h . Note that s, t, x, w, v, y, y\n\u2032 are seven different vertices\nof G. This implies that Psy\u2032 = stxwvyy\n\u2032 is a path on seven vertices in Ck\u22121j . Recall\nthat every path from a vertex in Ck\u22122h to a vertex in Tk\u22122(y) goes through v. Then\nthere are no edges between {s, t, x, w} and {y, y\u2032}. This together with {w, s} \/\u2208 E(G)\nimplies that v must be adjacent to t; otherwise Psy\u2032 is an induced P7 in G. Then, we\ncan pick vertex t instead of vertex w. So from now on we assume that w is a common\nneighbor of s and x in Ck\u22122h .\nLet r be the root of child tree T xk\u22123 of Tk\u22122(x). Let r\n\u2032 be a neighbor of r in\nT xk\u22123. Note that r\n\u2032, r, x, w, v, y, y\u2032 are seven different vertices of G. This implies that\nPr\u2032y\u2032 = r\n\u2032rxwvyy\u2032 is a path on seven vertices in Ck\u22121j . By the induction hypothesis,\nr is colored with ak\u22122 or bk\u22122.\nSuppose r is colored with ak\u22122. Since d(r, s, Ck\u22122h ) is odd and s is colored with\nak\u22122, the pair (r, s) is a (k\u22122)-mixed pair in Ck\u22122h . Lemma 6.1 implies that every path\nfrom s in Ck\u22122h , and hence every path from w in C\nk\u22122\nh , to a vertex in T\nx\nk\u22123 \u2286 Ck\u22122h\ngoes through x. Then there are no edges between {r, r\u2032} and w. Furthermore, recall\nthat every path in Ck\u22121j from a vertex in C\nk\u22122\nh to a vertex in Tk\u22122(y) \u2286 Ck\u22122i goes\nthrough v. Then there are no edges between {r\u2032, r, x, w} and {y, y\u2032} either. Since\nPr\u2032y\u2032 may not be an induced P7, these observations imply that there must be an edge\nbetween v and r. Hence, using vertex r instead of w brings us back to Case 1a.\nSuppose r is colored with bk\u22122. By Lemma 6.3, Ck\u22122h contains a vertex s\u02c6 that\nhas received color ak\u22122 and is adjacent to x. Let s\u02c6 = \u03c0(\u0004) for some \u0004 < j. By our\ninduction hypothesis, vertex s\u02c6 is the root of a tree Tk\u22123(s\u02c6) in Ck\u22123\u0003 .\nSuppose every path in Ck\u22122h from s\u02c6 to a vertex in any child tree T\nx\np for 1 \u2264 p \u2264\nk \u2212 4 goes through x. Then in Tk\u22122(x) we can replace the child tree Tk\u22123(r) by the\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nCopyright \u00a9 by SIAM. Unauthorized reproduction of this article is prohibited. \nNEW ALGORITHM FOR ON-LINE COLORING BIPARTITE GRAPHS 85\nchild tree Tk\u22123(s\u02c6). Then we can repeat the argument above (replace r by s\u02c6, which is\ncolored by ak\u22122) in order to find that v is adjacent to s\u02c6, and we return to Case 1a.\nSuppose Ck\u22122h contains a path from s\u02c6 to a child tree T\nx\nm for some 1 \u2264 m \u2264 k \u2212 4\nthat does not go through x. Let z be the root of T xm, and let z\n\u2032 be a neighbor of z\nin T xm. Note that z\n\u2032, z, x, w, v, y, y\u2032 are seven different vertices of G. This implies that\nPz\u2032y\u2032 = z\n\u2032zxwvyy\u2032 is a path on seven vertices in Ck\u22121j . Recall that w is a neighbor\nof s. We then find that z\u2032 and w are not adjacent. Otherwise, Ck\u22122h would contain\na path between s and s\u02c6, which are the vertices of a (k \u2212 2)-mixed pair, not going\nthrough x (a contradiction due to Lemma 6.1). Then as before, in order not to have\nan induced P7, vertex v must be adjacent to z. We return to Case 1a.\nCase 2. Component Ck\u22122h does not contain a common neighbor of x and v. Since\nx has distance 2 from v in Ck\u22121j , there exists a common neighbor v\n\u2032 of v and x in\nCk\u22121j . We first prove that v\n\u2032 has received color bk\u22121.\nSince k \u2265 4, Lemma 6.3 implies that Ck\u22122h contains a vertex s with color ak\u22122 at\ndistance d(x, s, Ck\u22122h ) = 2 from x, and C\nk\u22122\nh contains a vertex t with color ak\u22122 that\nis a neighbor of x. Since d(x, s, Ck\u22122h ) = 2, vertices s and x have a common neighbor\ns\u2032 in Ck\u22122h . Since k \u2265 4, vertex t has a neighbor t\u2032 in Ck\u22122h that is not equal to x. Let\ny\u2032 be a neighbor of y in Tk\u22122(y). Note that s, s\u2032, t, t\u2032, x, v\u2032, v, y, y\u2032 are nine different\nvertices in G. This implies that both Psy\u2032 = ss\n\u2032xv\u2032vyy\u2032 and Pt\u2032y\u2032 = t\u2032txv\u2032vyy\u2032 are\npaths on seven vertices in Ck\u22121j . Any path in C\nk\u22121\nj from a vertex in Tk\u22122(y) to a\nvertex in Ck\u22122h or to v\n\u2032 goes through v. Otherwise there exists a path in Ck\u22121j from y\nto x that does not use v, which is not possible due to Lemma 6.1. Hence, there are no\nedges between {s, s\u2032, x, v\u2032} and {y, y\u2032}, and there are no edges between {t, t\u2032, x, v\u2032} and\n{y, y\u2032} either. Since we assumed that Ck\u22122h does not contain any common neighbor\nof v and x, there are no edges between v and {s\u2032, t}. Then v\u2032 must be adjacent to\nboth s and t\u2032; otherwise, G contains an induced P7. Since v\u2032 is in Ck\u22121j and adjacent\nto vertex x with color ak\u22121, the color of v\u2032 is in A(k \u2212 2) \u222aB(k \u2212 1).\nSuppose v\u2032 has not received color bk\u22121 but some color from A(k \u2212 2) \u222aB(k \u2212 2).\nThen v\u2032 must have appeared after x, due to our assumption that v\u2032 is not in Ck\u22122h .\nHowever, in that case, v\u2032 has also appeared after s and t. Then (s, t) is a (k \u2212 2)-\nmixed pair of Ck\u22122\u03c0\u22121(v\u2032) implying that BicolorMax would never color v\n\u2032 with a color\nfrom A(k \u2212 2) \u222aB(k \u2212 2). Hence, v\u2032 must have received color bk\u22121.\nRecall that y = \u03c0(i) is assigned color ak\u22121. Then, by Lemma 6.3, component Ck\u22122i\ncontains a (k\u22122)-mixed pair (z\u2217, z) such that d(y, z\u2217, Ck\u22122i ) = 1 and d(y, z, Ck\u22122i ) = 2.\nWe first show that v is adjacent to z and every neighbor of z\u2217 in Ck\u22122i .\nSince d(y, z, Ck\u22122i ) = 2, component C\nk\u22122\ni contains a common neighbor z\n\u2032 of y and\nz. Let x\u2032 be a neighbor of x in Ck\u22122h . Since v\n\u2032 with color bk\u22121 and neighbor v with\ncolor ak\u22121 are neither in Ck\u22122h nor in C\nk\u22122\ni , we find that z, z\n\u2032, y, v, v\u2032, x, x\u2032 are seven\ndifferent vertices. This implies that Pzx\u2032 = zz\n\u2032yvv\u2032xx\u2032 is a path on seven vertices\nin Ck\u22121j . By Lemma 6.1, any path from y to x in C\nk\u22121\nj must go through v. This\nimplies that there are no edges between vertices from {z, z\u2032, y} and {v\u2032, x, x\u2032}. Since\nwe assume that v and x do not have a common neighbor in Ck\u22122h , vertices x\n\u2032 and v\nare not adjacent. Then v must be adjacent to z. By the same arguments we find that\nv is adjacent to every neighbor of z\u2217 in Ck\u22122i .\nLet z\u2217 = \u03c0(\u0004\u2217) for some \u0004\u2217 < j. By our induction hypothesis, Ck\u22123\u0003\u2217 contains the\ntree Tk\u22123(z\u2217) satisfying conditions (i) and (ii) of the lemma. Since v is adjacent to\nevery neighbor of z\u2217 in Ck\u22122i \u2287 Ck\u22123\u0003\u2217 , vertex v is adjacent to the roots of all child\ntrees T z\n\u2217\nk\u22124, T\nz\u2217\nk\u22125, . . . , T\nz\u2217\n1 .\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nCopyright \u00a9 by SIAM. Unauthorized reproduction of this article is prohibited. \n86 H. J. BROERSMA, A. CAPPONI, AND D. PAULUSMA\nF3 F4F1 F2\nFig. 6.3. The graphs F1, F2, F3, F4.\nWe are also going to use our induction hypothesis with respect to vertex z, which\nhas been assigned color ak\u22122. Let z = \u03c0(\u0004) for some \u0004 < j. Then Ck\u22123\u0003 contains the\ntree Tk\u22123(z) satisfying conditions (i) and (ii) of the lemma. Recall that z is adjacent\nto v. So v is adjacent to the root of a copy of a tree Tk\u22123. Due to Lemma 6.1, the\ntrees Tk\u22123(z) and Tk\u22123(z\u2217) do not have a vertex in common.\nFinally, we consider vertex v\u2032 with color bk\u22121. Let v\u2032 = \u03c0(\u0004\u2032) for some \u0004\u2032 <\nj. Again by our induction hypothesis, Ck\u22122\u0003\u2032 contains the tree Tk\u22122(v\n\u2032) satisfying\nconditions (i) and (ii) of the lemma. Recall that v is adjacent to v\u2032. So v is adjacent\nto a copy of Tk\u22122 that does not have any vertex in common with the trees Tk\u22123(z)\nand Tk\u22123(z\u2217) due to Lemma 6.1.\nWe conclude that Ck\u22121j contains the tree Tk\u22121(v) as a subgraph such that con-\ndition (ii) has been satisfied and that condition (i) will be satisfied as well if we can\nshow the following statement: there are no edges between T vk\u22123 = Tk\u22123(z) and a child\ntree T vi = T\nz\u2217\ni for all 1 \u2264 i \u2264 k \u2212 4, and there are no edges between T vk\u22122 = Tk\u22122(v\u2032)\nand a child tree T vi for all 1 \u2264 i \u2264 k \u2212 3. This claim can be seen as follows. If there\nis an edge between T vk\u22122 and a child tree T\nv\ni for 1 \u2264 i \u2264 k \u2212 3, then Ck\u22121j contains a\npath from x to y that does not go through v. Since (x, y) is a (k \u2212 1)-mixed pair in\nCk\u22121j , this is not possible due to Lemma 6.1. If there is an edge between T\nv\nk\u22123 and a\nchild tree T vi for 1 \u2264 i \u2264 k\u2212 4, then Ck\u22122i contains a path from z to z\u2217 that does not\ngo through y. Since (z\u2217, z) is a (k\u2212 2)-mixed pair in Ck\u22122i , this is not possible, again\ndue to Lemma 6.1.\nWe also inductively define a class of P6-free bipartite graphs Fi (see Figures 6.3\nand 6.4). Its purpose and its relation to the class of trees Ti will be made clear later\non. Each graph Fi of the class has a root vertex r(Fi), and the following hold:\n\u2022 F1 is a graph consisting of a single root vertex.\n\u2022 F2 is a graph consisting of an edge, one of whose end vertices is the root\nvertex.\n\u2022 Fk, k \u2265 3, consists of a root vertex r(Fk) that is adjacent to the root vertices\nof disjoint copies of F1, F2, . . . , Fk\u22121 (one copy of each of these graphs). These\ncopies are then called the child graphs of Fk. For all 1 \u2264 j \u2264 k \u2212 1, we join\nvertex r(Fk) also to every vertex in Fj that has distance 2 to r(Fj). This\nimplies that every vertex of Fk is at distance at most 2 from r(Fk). Hence,\nthe maximum distance between two vertices in Fk is at most 4, and Fk is\nP6-free.\nA graph Fk has the following useful properties (see also Figure 6.4).\nLemma 6.5. Any graph Fk with k \u2265 4 contains copies F 1t and F 2t of Ft for all\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nCopyright \u00a9 by SIAM. Unauthorized reproduction of this article is prohibited. \nNEW ALGORITHM FOR ON-LINE COLORING BIPARTITE GRAPHS 87\nF 12\nF 22F\n1\n3F 23\nFig. 6.4. The graph F5 which contains copies F 12 , F\n2\n2 , F\n1\n3 , F\n2\n3 .\n2 \u2264 t \u2264 k \u2212 2 such that the following hold:\n(i) For all 1 \u2264 i, j \u2264 2 and all 2 \u2264 s < t \u2264 k \u2212 2, the graphs F is and F jt are\nremote.\n(ii) For all 2 \u2264 t \u2264 k \u2212 2, the vertices of the graph F 1t in the bipartite class\ncontaining the root vertex of F 1t are adjacent to r(Fk).\n(iii) For all 2 \u2264 t \u2264 k \u2212 2, the vertices of the graph F 2t in the bipartite class not\ncontaining the root vertex of F 2t are adjacent to r(Fk).\nProof. One easily checks that child graph Ft+1 of graph Fk contains the desired\ncopies F 1t and F\n2\nt for 2 \u2264 t \u2264 k \u2212 2.\nThe following proposition is a key ingredient for the proof of our main result.\nIt also implies that there exists no competitive on-line coloring algorithm for the\nfamily of P6-free bipartite graphs (cf. [9], where this has been proven using a different\nsubfamily of P6-free bipartite graphs).\nProposition 6.6. For any k \u2265 1, \u03c7OL(F2k) \u2265 k.\nProof. By induction on k. The case k = 1 is trivial. Let k \u2265 2. Consider F2k and\nan on-line algorithm A for coloring F2k. The first time the ith color is used by A we\nidentify it as color i. We choose an ordering on V (F2k) such that the vertices of remote\ncopies of F2, F4, . . . , F2k\u22122 are presented until color i is used on F2i (i = 1, . . . , k\u2212 1);\ni.e., as soon as color 1 is used on F2 we start presenting vertices of F4, as soon as color\n2 is used on F4 we start presenting vertices of F6 and so on, until color k \u2212 1 is used\non F2k\u22122. By the adjacency relations from the definition of F2k and the properties of\nLemma 6.5, the ordering of the presented vertices of F2, F4, . . . , F2k\u22122 can be chosen in\nsuch a way that r(F2k) is adjacent to the (not necessarily root) vertices that received\ncolors 1, . . . , k \u2212 1. Hence, a new color k is forced upon A.\nBelow we denote a copy of a graph Fk with root vertex v by Fk(v). The child\ngraphs of Fk(v) are denoted by F\nv\n1 , F\nv\n2 , . . . , F\nv\nk\u22121.\nLemma 6.7. Let G be a P7-free bipartite graph. If BicolorMax uses color ak or bk\nwith k \u2265 3 on vertex v = \u03c0(j), then Ck\u22121j contains the graph F\u0006 k\u221212 \u0007(v) as an induced\nsubgraph.\nProof. Due to Lemma 6.4 the component Ck\u22121j contains the tree Tk\u22121(v) as a\nsubgraph in such a way that the following hold:\n(i) If there exists an edge in G between any two vertices x, y in Tk\u22121(v) with\nd(v, x, Tk\u22121(v)) \u2264 d(v, y, Tk\u22121(v)), then x lies on the path from y to v in\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nCopyright \u00a9 by SIAM. Unauthorized reproduction of this article is prohibited. \n88 H. J. BROERSMA, A. CAPPONI, AND D. PAULUSMA\nTk\u22121(v).\n(ii) The root of child tree T vi is colored with ai+1 or bi+1 for all 1 \u2264 i \u2264 k \u2212 2.\nBy induction on k we will show that the subgraph ofG induced by V (Tk\u22121(v)) contains\nthe graph F\u0006 k\u221212 \u0007(v) as an induced subgraph. The case k = 3 is trivial. Let k \u2265 4.\nClaim. The following is true for at least k\u2212 3 child trees T vi : vertex v is adjacent\nto every vertex in T vi that has distance 2 to r(T\nv\ni ).\nWe prove this claim by contradiction. Suppose there exist two child trees of\nTk\u22121(v) not satisfying the claim. Let T vh be a child tree of Tk\u22121(v) for some 1 \u2264 h \u2264\nk \u2212 2 that contains a vertex x with d(x, r(T vh ), T vh ) = 2 and with {x, v} \/\u2208 E(G). Let\nT vj be a child tree of Tk\u22121(v) for some 1 \u2264 j \u0006= h \u2264 k\u22122 that contains a vertex y with\nd(y, r(T vj ), T\nv\nj ) = 2 and with {y, v} \/\u2208 E(G). Let y\u2032 be the common neighbor of y and\nr(T vj ) in T\nv\nj . Let x\n\u2032 be the common neighbor of x and r(T vh ) in T\nv\nh . Since Tk\u22121(v)\nsatisfies (i), G contains an induced P7 = xx\n\u2032r(T vh )vr(T\nv\nj )y\n\u2032y, which is a contradiction.\nHence, the above claim has been proven.\nBy the induction hypothesis and condition (ii), for 2 \u2264 i \u2264 k \u2212 2, the subgraph\ninduced by V (T vi ) contains the graph F\u0006 i2 \u0007(r(T\nv\ni )) as an induced subgraph. This,\ntogether with the above claim and the fact that Tk\u22121(v) satisfies condition (i), implies\nthat Ck\u22121j contains the graph F\u0006 k\u221212 \u0007(v) as an induced subgraph.\nTheorem 6.8. If G is a P7-free bipartite graph, then \u03c7BM (G) \u2264 8\u03c7OL(G) + 8.\nProof. Let k be the highest index such that BicolorMax uses color a4k+1 on a\nvertex in G. Note that it is possible that BicolorMax uses colors a4k+2, a4k+3, a4k+4\nor b4k+2, b4k+3, b4k+4 to color G. Hence, every color used on a vertex of G is from\nA(4k + 4) \u222a B(4k + 4). Since BicolorMax uses bi only if ai has been used before,\nthen \u03c7B<(G) \u2264 2(4k + 4) = 8k + 8. For k = 0 the statement obviously holds.\nSuppose k \u2265 1. Due to Lemma 6.7, G contains a copy of F2k as an induced subgraph.\nProposition 6.6 implies that \u03c7OL(G) \u2265 \u03c7OL(F2k) \u2265 k.\n7. New upper bounds on \u03c7OL for bipartite graphs. As we noted in sec-\ntion 5, in [18], the authors leave it as an \u201ceasy exercise\u201d to construct an on-line\ncoloring algorithm A such that \u03c7A(G) = O(log2 n) on the class of bipartite graphs\n(where G is a bipartite graph on n vertices). There are several choices for A to solve\nthis exercise. One of these choices is the algorithm BicolorMax that we presented and\nanalyzed in this paper.\nAs a byproduct, using the derived properties of BicolorMax, below we give an\nupper bound on \u03c7A(G) for a bipartite graph G in terms of the independence number\n\u03b1(G) and in terms of the number of remote induced P5\u2019s in G. It is not possible\nto prove an upper bound in terms of induced subgraphs isomorphic to P6, since it\nhas been proven in [9] (and also follows from Proposition 6.6) that no competitive\nalgorithm exists for the family of P6-free bipartite graphs.\nTheorem 7.1. Let G be a bipartite graph in which each component has at most\ns remote induced subgraphs isomorphic to P5. If s = 0, then \u03c7BM (G) \u2264 4. If s > 0,\nthen \u03c7BM (G) \u2264 2 log2(s) + 6.\nProof. We prove the theorem by showing that a component C of G contains at\nleast 2k\u22123 remote induced subgraphs isomorphic to P5 if BicolorMax uses color ak on\nC with k \u2265 3. We use induction on k.\nLet k = 3. It is easy to check that a component of G contains an induced P5\nif BicolorMax uses color a3 on a vertex of that component. Let k \u2265 4. Suppose\nv = \u03c0(j) is colored by ak or bk. Then there exists a (k \u2212 1)-mixed pair (x, y) in\nCk\u22121j . By Lemma 6.1, x and y belong to two different components in G\nk\u22121\nj \u2212 v, both\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nCopyright \u00a9 by SIAM. Unauthorized reproduction of this article is prohibited. \nNEW ALGORITHM FOR ON-LINE COLORING BIPARTITE GRAPHS 89\ncontaining 2k\u22124 remote induced subgraphs isomorphic to P5.\nOur next result gives an upper bound on the number of colors used by BicolorMax\non a bipartite graph G in terms of its independence number \u03b1(G) (i.e., the largest\nnumber of vertices of G that are mutually nonadjacent in G).\nTheorem 7.2. Let G be a bipartite graph with independence number \u03b1. Then\n\u03c7BM (G) \u2264\n\u23a7\u23a8\n\u23a9\n\u03b1+ 1 if 1 \u2264 \u03b1 \u2264 3,\n4 if \u03b1 = 4,\n2p if 5 \u00b7 2p\u22123 \u2264 \u03b1 \u2264 5 \u00b7 2p\u22122 \u2212 1 for some p \u2265 3.\nProof. Let k be the highest index such that BicolorMax uses color ak on a vertex\nv in G. If \u03b1 = 1, then k = 1; hence, \u03c7BM (G) \u2264 2. If \u03b1 = 2, then k \u2264 2 but color b2\nis never used; hence, \u03c7BM (G) \u2264 3. Now assume that \u03b1 \u2265 3.\nLet v = \u03c0(j). We write Ck\u22121j = (I\nk\n1 , I\nk\n2 ) for the bipartition with v \u2208 Ik1 . Clearly,\n|I21 | \u2265 2 and |I22 | \u2265 2. We will use induction to show that |Ik1 | \u2265 5 \u00b7 2k\u22123 and\n|Ik2 | \u2265 5 \u00b7 2k\u22123 \u2212 1 for k \u2265 3.\nFor a fixed k \u2265 3, by definition of BicolorMax, there exists a (k \u2212 1)-mixed pair\n(x, y) in Ck\u22121j with x \u2208 Ik1 and y \u2208 Ik2 . By Lemma 6.1, x and y belong to two\ndifferent components D = (J1, J2) and D\n\u2032 = (J \u20321, J\n\u2032\n2) in G\nk\u22121\nj \u2212 v, say x \u2208 J1 \u2286 Ik1\nand y \u2208 J \u20321 \u2286 Ik2 . For k = 3, we get |I31 | \u2265 |J1| + |J \u20322| + 1 = 2 + 2 + 1 = 5 and\n|I32 | \u2265 |J2|+ |J \u20321| \u2265 2 + 2 = 4.\nNow let k \u2265 4. Then |Ik1 | \u2265 |J1|+ |J \u20322|+ 1 = 5 \u00b7 2k\u22124 + 5 \u00b7 2k\u22124 \u2212 1 + 1 = 5 \u00b7 2k\u22123\nand |Ik2 | \u2265 |J2| + |J \u20321| \u2265 5 \u00b7 2k\u22124 \u2212 1 + 5 \u00b7 2k\u22124 = 5 \u00b7 2k\u22123 \u2212 1. We conclude that\n|Ik1 | \u2265 5 \u00b7 2k\u22123 and |Ik2 | \u2265 5 \u00b7 2k\u22123 \u2212 1 for k \u2265 3.\nAssume 3 \u2264 \u03b1 \u2264 4. If k = 3, then \u03b1 \u2265 |I31 | \u2265 5. Hence k \u2264 2. Then \u03c7BM \u2264 2k \u2264\n4.\nFinally assume 5 \u00b7 2p\u22123 \u2264 \u03b1 \u2264 5 \u00b7 2p\u22122 \u2212 1 for some p \u2265 3. If k \u2265 p + 1, then\n\u03b1 \u2265 |Ik1 | \u2265 5 \u00b7 2p\u22122. Hence k \u2264 p. Then \u03c7BM \u2264 2p. This completes the proof of\nTheorem 7.2.\nThe bounds of Theorem 7.2 improve a bound in [5] for bipartite graphs: the main\nresult of [5] applied to bipartite graphs shows that for any bipartite graph G any\ngreedy on-line coloring algorithm uses at most \u03b1(G) + 1 colors.\n8. Final remarks. As we noted in section 5, BicolorMax is not on-line com-\npetitive for the family of paths. This is in contrast to FF, which uses at most three\ncolors on any path Pn. Below we show in a more general way how to combine two\non-line competitive algorithms satisfying certain conditions.\nFor this purpose we need the following terminology. We call a family of graphs G\ndecidable if there exists a (finite) procedure to decide whether or not a graphG belongs\nto G. Note that the family of H-free graphs is decidable for any fixed graph H. Also\nthe family of paths is decidable. We call an on-line coloring algorithm A for a graph\nG component-independent if the color assigned by A to every revealed vertex v = \u03c0(j)\ndepends only on the component of G[{\u03c0(1), . . . , \u03c0(j)}] that vertex v belongs to. For\ninstance, FF and BicolorMax are component-independent. For two families of graphs\nF and G we define F + G = {L | L \u2208 F \u222a G, or L = F +G with F \u2208 F and G \u2208 G}.\nTheorem 8.1. Let F be a decidable family of graphs for which an on-line compet-\nitive coloring algorithm A1 exists, and let G be a decidable family of graphs for which\nan on-line competitive component-independent coloring algorithm A2 exists. Then\nthere exists an on-line coloring algorithm A3 that is on-line competitive for F + G.\nProof. We assume A1 and A2 use disjoint color sets {c1, c2, . . .} and {d1, d2, . . .},\nrespectively. Let \u03c0 \u2208 \u03a0(L) for some graph L \u2208 F + G.\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nCopyright \u00a9 by SIAM. Unauthorized reproduction of this article is prohibited. \n90 H. J. BROERSMA, A. CAPPONI, AND D. PAULUSMA\nWe inductively define A3 as follows. The vertex \u03c0(1) is colored with d1. Suppose\nthat vertices \u03c0(1), . . . , \u03c0(j\u22121) have already been colored and let v = \u03c0(j) be the next\nvertex of L presented to A3. For i = 1, 2, we let Lj(Ai) be the subgraph of L that\nconsists of v and all vertices in {\u03c0(1), . . . , \u03c0(j \u2212 1)} colored by Ai. We let Cj(A2) be\nthe component of Lj(A2) that contains v. If Cj(A2) is an induced subgraph of some\ngraph in G, then color v with the color that A2 would have used on v after the other\nvertices of Cj(A2) had been presented to A2 in the suborder defined by \u03c0. Otherwise,\nLj(A1) is a subgraph of a graph in F , and we color v with the color that A1 would\nhave used on v after the other vertices of Lj(A1) had been presented to A1 in the\nsuborder defined by \u03c0. It is easy to see that A3 is on-line competitive on F+G.\n9. Conclusions and future work. We have presented an on-line coloring al-\ngorithm BicolorMax for bipartite graphs. We have shown that the number of colors\nused by this algorithm on a bipartite graph G is bounded from above by the number of\nremote induced subgraphs of G isomorphic to P5, and we gave a similar upper bound\nin terms of the independence number of G. As a consequence we improved known\nupper bounds for the on-line chromatic number of bipartite graphs given in [5, 18].\nWe showed in [3] that for any P6-free bipartite graph G, BicolorMax uses at most\ntwice as many colors as any optimal on-line coloring algorithm for G. Here we showed\nthat for any P7-free bipartite graph G, BicolorMax uses at most eight times as many\ncolors as any optimal on-line coloring algorithm for G.\nIn a future continuation of this work, we would like to face the problem of deciding\nwhether for any n \u2265 8 a linear on-line competitive algorithm can be defined for the\nclass of Pn-free bipartite graphs. We also consider analyzing BicolorMax and related\nalgorithms for other classes of H-free bipartite graphs, in particular for bipartite\ngraphs H with six vertices. A seemingly difficult and interesting open case is the\n(non)existence of an on-line competitive algorithm for the class of C6-free bipartite\ngraphs.\nAcknowledgments. We thank the anonymous referees for their useful com-\nments on an earlier version of this paper.\nREFERENCES\n[1] J. A. Bondy and U. S. R. Murty, Graph Theory with Applications, Elsevier, New York, 1976.\n[2] A. Borodin and R. El-Yaniv, Online Computation and Competitive Analysis, Cambridge\nUniversity Press, New York, 1998.\n[3] H. J. Broersma, A. Capponi, and D. Paulusma, On-line coloring of H-free bipartite graphs,\nin Proceedings of the 6th Annual Italian Conference on Algorithms and Complexity\n(CIAC 2006), Rome, Italy, Lecture Notes in Comput. Sci. 3998, Springer-Verlag, Berlin,\n2006, pp. 284\u2013295.\n[4] M. Chrobak and M. S\u00b4lusarek, Problem 84\u201323, J. Algorithms, 5 (1984), p. 588.\n[5] I. Cies\u00b4lik, M. Kozik, and P. Micek, On-line coloring of Is-free graphs and co-planar graphs,\nin Proceedings of the Annual Discrete Mathematics and Theoretical Computer Science AF,\nNancy, France, 2006, pp. 61\u201368.\n[6] T. Erlebach and J. Fiala, On-line coloring of geometric intersection graphs, Comput. Geom.,\n23 (2002), pp. 243\u2013255.\n[7] A. Gya\u00b4rfa\u00b4s, Z. Kira\u00b4ly, and J. Lehel, Online Competitive Coloring Algorithms, Technical\nreport TR-9703-1, 1997; available online at http:\/\/www.cs.elte.hu\/tr97\/tr9703-1.ps.\n[8] A. Gya\u00b4rfa\u00b4s, Z. Kira\u00b4ly, and J. Lehel, On-line 3-chromatic graphs. II. Critical graphs, Dis-\ncrete Math., 177 (1997), pp. 99\u2013122.\n[9] A. Gya\u00b4rfa\u00b4s and J. Lehel, On-line and first-fit colorings of graphs, J. Graph Theory, 12\n(1988), pp. 217\u2013227.\n[10] A. Gya\u00b4rfa\u00b4s and J. Lehel, First fit and on-line chromatic number of families of graphs, Ars\nCombin., 29 (1990), pp. 168\u2013176.\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nCopyright \u00a9 by SIAM. Unauthorized reproduction of this article is prohibited. \nNEW ALGORITHM FOR ON-LINE COLORING BIPARTITE GRAPHS 91\n[11] A. Gya\u00b4rfa\u00b4s and J. Lehel, Effective on-line coloring of P5-free graphs, Combinatorica, 11\n(1991), pp. 181\u2013184.\n[12] M. M. Halldo\u00b4rsson and M. Szegedy, Lower bounds for on-line graph coloring, Theoret.\nComput. Sci., 130 (1994), pp. 163\u2013174.\n[13] H. A. Kierstead, The linearity of first-fit coloring of interval graphs, SIAM J. Discrete Math.,\n1 (1988), pp. 526\u2013530.\n[14] H. A. Kierstead, Coloring graphs on-line, in Online Algorithms: The State of the Art, Lecture\nNotes in Comput. Sci. 1442, Springer-Verlag, Berlin, 1998, pp. 281\u2013305.\n[15] H. Kierstead and S. G. Penrice, Radius two trees specify \u03c7-bounded classes, J. Graph Theory,\n18 (1994), pp. 119\u2013129.\n[16] H. Kierstead, S. G. Penrice, and W. Trotter, On-line coloring and recursive graph theory,\nSIAM J. Discrete Math., 7 (1994), pp. 72\u201389.\n[17] K. Kolossa, On the on-line chromatic number of the family of on-line 3-chromatic graphs,\nDiscrete Math., 150 (1996), pp. 205\u2013230.\n[18] L. Lova\u00b4sz, M. Saks, and W. T. Trotter, An on-line graph coloring algorithm with sublinear\nperformance ratio, Discrete Math., 75 (1989), pp. 319\u2013325.\n[19] B. Randerath and I. Schiermeyer, Vertex colouring and forbidden subgraphs\u2014A survey,\nGraphs Combin., 20 (2004), pp. 1\u201340.\n[20] D. D. Sleator and R. E. Tarjan, Amortized efficiency of list updates and paging rules,\nComm. ACM, 28 (1985), pp. 202\u2013208.\n"}