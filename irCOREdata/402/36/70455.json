{"doi":"10.1007\/3-540-45809-3_26","coreId":"70455","oai":"oai:eprints.lancs.ac.uk:12075","identifiers":["oai:eprints.lancs.ac.uk:12075","10.1007\/3-540-45809-3_26"],"title":"Context Acquisition Based on Load Sensing","authors":["Schmidt, Albrecht","Strohbach, Martin","Van Laerhoven, Kristof","Friday, Adrian","Gellersen, Hans"],"enrichments":{"references":[{"id":16302908,"title":"A.: A New Location Technique for the Active Office,","authors":[],"date":"1997","doi":"10.1109\/98.626982","raw":"Ward, A. J., Hopper, A.: A New Location Technique for the Active Office, IEEE Personal Communications, vol. 4, pp. 42-47, 1997.","cites":null},{"id":16302887,"title":"A.: Implementing a Sentient Computing System.","authors":[],"date":"2001","doi":"10.1109\/2.940013","raw":"Addlesee, M.D., Curwen, R., Hodges, S., Newman, J., Steggles, P., Ward, A., Hopper, A.: Implementing a Sentient Computing System. IEEE Computer Magazine, Vol. 34, No. 8, August 2001, pp. 50-56.","cites":null},{"id":16302905,"title":"Context-Aware Computing Applications.","authors":[],"date":"1994","doi":"10.1109\/wmcsa.1994.16","raw":"Schilit, B.N., Adams, N.I., Want, R.: Context-Aware Computing Applications. Proceedings of the Workshop on Mobile Computing Systems and Applications, Santa Cruz, CA, December 1994. Pages 85-90. IEEE Computer Society.","cites":null},{"id":16302894,"title":"Institut of Technology. The Aware Home Research Initiative.","authors":[],"date":null,"doi":null,"raw":"Georgia Institut of Technology. The Aware Home Research Initiative. http:\/\/www.cc.gatech.edu\/fce\/ahri\/","cites":null},{"id":16302900,"title":"Multi-Camera Multi-Person Tracking for EasyLiving.","authors":[],"date":"2000","doi":"10.1109\/vs.2000.856852","raw":"Krumm, J., Harris, S., Meyers, B., Brumitt, B., Hale, M., and Shafer S.: Multi-Camera Multi-Person Tracking for EasyLiving. IEEE Workshop on Visual Surveillance, July 2000.","cites":null},{"id":16302885,"title":"ORL Active Floor.","authors":[],"date":"1997","doi":"10.1109\/98.626980","raw":"Addlesee, M.D., Jones, A., Livesey, F., and Samaria, F.: ORL Active Floor. IEEE Personal Communications, Vol.4, No 5, October 1997, pp. 35-41. IEEE, Piscataway, NJ, USA.","cites":null},{"id":16302898,"title":"Passage: Physical Transportation of Digital Information in Cooperative Buildings. In:","authors":[],"date":null,"doi":"10.1007\/10705432_5","raw":"Konomi, S., M\u00fcller-Tomfelde, C., Streitz, N.: Passage: Physical Transportation of Digital Information in Cooperative Buildings. In: Streitz, N., Siegel, J., Hartkopf, V., Konomi, S. (Eds.), Cooperative Buildings - Integrating Information, Organizations, and Architecture. Proceedings of the Second International Workshop (CoBuild'99). LNCS 1670. Springer: Heidelberg. pp. 45 -54.","cites":null},{"id":16302891,"title":"Pattern-based Support for Interactive Design in Domestic Settings.","authors":[],"date":"2001","doi":"10.1145\/778712.778749","raw":"Crabtree, A., Hemmings, T. and Rodden, T.: Pattern-based Support for Interactive Design in Domestic Settings. Technical Report Equator-01-016, University of Nottingham, The School of Computer Science and IT, December 2001. http:\/\/www.equator.ac.uk\/papers\/Authors\/crabtree.html","cites":null},{"id":16302893,"title":"Providing Architectural Support for Building Context-Aware Applications.","authors":[],"date":"2000","doi":null,"raw":"Dey, A.K.: Providing Architectural Support for Building Context-Aware Applications. Ph.D. thesis, December 2000, Dr. Gregory D. Abowd (advisor), College of Computing, Georgia Institute of Technology","cites":null},{"id":16302903,"title":"The Magic Carpet: Physical Sensing for Immersive Environments.","authors":[],"date":null,"doi":"10.1145\/1120212.1120391","raw":"Paradiso, J, Abler, C., Hsiao, K., Reynolds, M.: The Magic Carpet: Physical Sensing for Immersive Environments. In Late-Breaking\/Short Demonstrations of CHI'97, pp.277-278. ACM, USA.","cites":null},{"id":16302902,"title":"The Smart Floor: A Mechanism for Natural User Identification and Tracking.","authors":[],"date":"2000","doi":"10.1145\/633292.633453","raw":"Orr, R. J. and Abowd, G. D.: The Smart Floor: A Mechanism for Natural User Identification and Tracking. Proceedings of CHI 2000 Human Factors in Computing Systems (April 1\u20136, 2000, The Hague, Netherlands), ACM\/SIGCHI.","cites":null},{"id":16302889,"title":"Ubiquitous Computing and the Role of Geometry.","authors":[],"date":"2000","doi":"10.1109\/98.878536","raw":"Brumitt, B., Krumm, J., Meyers, B., and Shafer, S.: Ubiquitous Computing and the Role of Geometry. IEEE Personal Communications, August 2000.","cites":null},{"id":16302896,"title":"Ubiquitous Game Control. UBICOMP","authors":[],"date":"2001","doi":"10.1007\/s007790200045","raw":"Headon, R. and Curwen R.: Ubiquitous Game Control.  UBICOMP  2001  Workshop on Designing Ubiquitous Computing Games. Atlanta, 2001. 8.  Kidd, C .,  Orr, R.,  Abowd,  G.D.,  Atkeson,  C.G.,  Essa,  I.A., MacIntyre, B., Mynatt,  E., Starner, T.E., and Newstetter, W.: The Aware Home: A Living Laboratory for Ubiquitous Computing Research. Proceedings of the Second International Workshop on Cooperative Buildings - CoBuild'99. Position paper, October 1999.","cites":null},{"id":16302906,"title":"Ubiquitous Interaction - Using Surfaces in Everyday Environments as Pointing Devices. Paper submitted to 7th ERCIM Workshop &quot;User Interfaces For All&quot;,","authors":[],"date":"2002","doi":"10.1007\/3-540-36572-9_21","raw":"Schmidt A., Laerhoven, K., Strohbach, M., Gellersen, H.: Ubiquitous Interaction - Using Surfaces in Everyday Environments as Pointing Devices. Paper submitted to 7th ERCIM Workshop &quot;User Interfaces For All&quot;, 2002.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2002-09","abstract":"Load sensing is a mature and robust technology widely applied in process control. In this paper we consider the use of load sensing in everyday environments as an approach to acquisition of contextual information in ubiquitous computing applications. Since weight is an intrinsic property of all physical objects, load sensing is an intriguing concept on the physical-virtual boundary, enabling the inclusive use of arbitrary objects in ubiquitous applications. In this paper we aim to demonstrate that load sensing is a versatile source of contextual information. Using a series of illustrative experiments we show that using load sensing techniques we can obtain not just weight information, but object position and interaction events on a given surface. We describe the incorporation of load-sensing in the furniture and the floor of a living laboratory environment, and report on a number of applications that use context information derived from load sensing","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/70455.pdf","fullTextIdentifier":"http:\/\/eprints.lancs.ac.uk\/12075\/1\/schmidt%2Dloadsensing%2Dubicomp02%2Dpreprint.pdf","pdfHashValue":"e34a8c46b45b93f1690cd58ef552e162b370018c","publisher":"Springer Verlag","rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:eprints.lancs.ac.uk:12075<\/identifier><datestamp>\n      2018-01-24T02:09:46Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      7375626A656374733D51:5141:51413735<\/setSpec><setSpec>\n      74797065733D626F6F6B5F73656374696F6E<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n    \n      \n        Context Acquisition Based on Load Sensing<\/dc:title><dc:creator>\n        Schmidt, Albrecht<\/dc:creator><dc:creator>\n        Strohbach, Martin<\/dc:creator><dc:creator>\n        Van Laerhoven, Kristof<\/dc:creator><dc:creator>\n        Friday, Adrian<\/dc:creator><dc:creator>\n        Gellersen, Hans<\/dc:creator><dc:subject>\n        QA75 Electronic computers. Computer science<\/dc:subject><dc:description>\n        Load sensing is a mature and robust technology widely applied in process control. In this paper we consider the use of load sensing in everyday environments as an approach to acquisition of contextual information in ubiquitous computing applications. Since weight is an intrinsic property of all physical objects, load sensing is an intriguing concept on the physical-virtual boundary, enabling the inclusive use of arbitrary objects in ubiquitous applications. In this paper we aim to demonstrate that load sensing is a versatile source of contextual information. Using a series of illustrative experiments we show that using load sensing techniques we can obtain not just weight information, but object position and interaction events on a given surface. We describe the incorporation of load-sensing in the furniture and the floor of a living laboratory environment, and report on a number of applications that use context information derived from load sensing.<\/dc:description><dc:publisher>\n        Springer Verlag<\/dc:publisher><dc:date>\n        2002-09<\/dc:date><dc:type>\n        Contribution in Book\/Report\/Proceedings<\/dc:type><dc:type>\n        NonPeerReviewed<\/dc:type><dc:format>\n        application\/pdf<\/dc:format><dc:identifier>\n        http:\/\/eprints.lancs.ac.uk\/12075\/1\/schmidt%2Dloadsensing%2Dubicomp02%2Dpreprint.pdf<\/dc:identifier><dc:relation>\n        http:\/\/dx.doi.org\/10.1007\/3-540-45809-3_26<\/dc:relation><dc:identifier>\n        Schmidt, Albrecht and Strohbach, Martin and Van Laerhoven, Kristof and Friday, Adrian and Gellersen, Hans (2002) Context Acquisition Based on Load Sensing. In: Proceedings of Ubicomp 2002. Lecture Notes in Computer Science, 2498 . Springer Verlag, pp. 161-192.<\/dc:identifier><dc:relation>\n        http:\/\/eprints.lancs.ac.uk\/12075\/<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/dx.doi.org\/10.1007\/3-540-45809-3_26","http:\/\/eprints.lancs.ac.uk\/12075\/"],"year":2002,"topics":["QA75 Electronic computers. Computer science"],"subject":["Contribution in Book\/Report\/Proceedings","NonPeerReviewed"],"fullText":"Context Acquisition Based on Load Sensing \nAlbrecht Schmidt, Martin Strohbach, Kristof van Laerhoven,  \nAdrian Friday, Hans-W. Gellersen \nComputing Department \nLancaster University \nLancaster, LA1 4YR, UK \n{albrecht, strohbach, kristof, adrian, hwg}@comp.lancs.ac.uk \nhttp:\/\/ubicomp.lancs.ac.uk   \nAbstract. Load sensing is a mature and robust technology widely applied in \nprocess control. In this paper we consider the use of load sensing in everyday \nenvironments as an approach to acquisition of contextual information in \nubiquitous computing applications. Since weight is an intrinsic property of all \nphysical objects, load sensing is an intriguing concept on the physical-virtual \nboundary, enabling the inclusive use of arbitrary objects in ubiquitous \napplications. In this paper we aim to demonstrate that load sensing is a versatile \nsource of contextual information. Using a series of illustrative experiments we \nshow that using load sensing techniques we can obtain not just weight \ninformation, but object position and interaction events on a given surface. We \ndescribe the incorporation of load-sensing in the furniture and the floor of a \nliving laboratory environment, and report on a number of applications that use \ncontext information derived from load sensing. \n1 Introduction \nLoad sensing is widely applied in process control to measure the weight of goods, to \nmonitor the strain on structures, and to gauge filling levels of containers. However, in \nubiquitous computing applications, we find that despite the research community\u2019s \nstrong interest in context-awareness and sentient computing, load sensing has not \nreceived much attention as a potential technology for the capture of contextual \ninformation. In this paper we aim to redress this balance by demonstrating that load \nsensing can be a versatile source of context information for everyday environments; \njust as location technologies are a source for much more than absolute position, we \nshow that load sensing technologies can provide rich contextual information, beyond \nmere load or weight. \nContext-aware computing aims to embody information about the situation in which \npeople interact with computational processes [5,8,15]. The notion of sentient \ncomputing stresses how sensors can be used to obtain such contextual information [2]. \nSo far, ubiquitous computing research has primarily embraced location sensing for \nthis purpose, as location information usually provides access to rich context beyond \nposition, for instance on available infrastructure and co-located people [15,17]. \nComputer vision is a similarly generic approach, as visual scenes lend themselves to \nextract various kinds of context, for instance identity and location of people and \ndetection of certain activity [6,11]. Other sensing techniques including load sensing \nhave been used to obtain context in ubiquitous computing, but they are generally \nconsidered as too specific for wider application.  \nLoad sensing though has some properties that appear to be well suited for context \nacquisition in ubiquitous computing. Firstly, gravitational force applies to all physical \nthings, giving them weight and in principle rendering them detectable by load sensors. \nSecondly, changes in weight distribution in everyday settings can be assumed to be \nclosely coupled with human interaction in a physical environment. Thirdly, load \nsensing lends itself to an event-based model in which applications respond to changes \nin observed load and do not have to monitor load continuously. Finally, load sensing \nis a mature and robust technology that lends itself to unobtrusive augmentation of \npractically any surface. Moreover, load sensing can be realized at very low cost; as \nevidenced by the use of strain gauges in kitchen and bathroom scales.  \nThis paper investigates the utility of load sensing for context acquisition. As an \ninitial contribution, we identify three context primitives that can be extracted from \nsensory observations on load-sensitive surfaces: weight, position, and type of \ninteraction.  Weight is an obvious contextual parameter that can and has been used for \ninstance as key to identify objects. Load sensing for acquisition of object position and \ninteraction events though has not been considered in context-aware computing before. \nWe address this in our main contribution, a series of illustrative experiments that \ndemonstrate high accuracy object positioning, and classification of interactions such \nas objects being placed, removed, or knocked over. The experiments explicitly \nconsider conditions in everyday environments, such as pre-loading of surfaces with a \nmultitude of objects. In the latter part of our paper we describe the implementation of \nload-sensing in the furniture and the floor of a small living laboratory environment. \nWe also report briefly on a few applications facilitated in this environment, \ndemonstrating various uses of load-sensing based context. \n2 Related Work \nPrevious research has considered observation of the forces applied on surfaces to infer \ninformation on activity. More specifically, Addlesee et al. have built an Active Floor \nin an office environment, measuring ground reaction force to identify and track \npeople [1]. In contrast to the load-sensitive surfaces considered in our work, they use \na segmented surface, i.e. a floor composed of load-sensitive tiles. The same approach \nis used in the SmartFloor, implemented by Orr and Abowd in the Aware Home \nproject [13]. Ground reaction forces are studied in more detail in bio-mechanics \nhowever based on special purpose equipment such as the Kistler force plate [9]. \nWhile the early Active Floor work used sensor analysis to extract identity, more \nrecent work has extended this to extract activity-related context, for instance whether \na person is jumping or lifting a heavy object [7]. Paradiso presented an augmented \ncarpet that facilitates tracking of movement, however designed as input device, for \ninstance for artistic performance, rather than as infrastructure for context acquisition \n[14]. His work is based on a different sensing technology, using a grid of piezoelectric \nwires under the carpet instead of load cells. \nActive Floor and Smart Floor are all focused on floor-level sensing of people\u2019s \nidentity, position or movement. In contrast, we are exploring more pervasive \naugmentation of surfaces in everyday environment including specifically tables as \nhighly interactive spaces. More pervasive augmentation provides access to more fine-\ngrained information on activity, for instance based on identification and tracking of \nobjects.  \nAn interesting example for object identification based on load sensing has been \nused in the i-Land project for implementation of the Passage mechanism [10]. Passage \nallows a user to temporarily link a virtual object to a physical item placed on a load-\nsensitive surface (called bridge) which has high precision scales embedded. In the \nsystem, the link is simply maintained by reference to the weight of the physical item, \nenabling seemingly physical transport to another bridge where the virtual object can \nbe recalled. The Passage mechanism represents a very specific use of load sensing. In \ncontrast we seek to establish load sensing as versatile source for context.  \n2.1 Context Primitives obtained from Load Sensors \nOur approach is to augment many surfaces from floors to tables, shelves, and possibly \neven smaller surface units, with the intention of integrating these surfaces for \ndeveloping a more versatile load sensing platform for context capture. This is not \ndriven by a single application, but rather developed bottom-up by considering the \ncontext primitives that can be obtained from load sensing, and the construction of \nhigher-level context capture techniques. We identify these primitives as: \n\u00b7 Weight: the load registered on a surface and attributed as weight to objects on \nthe surface. \n\u00b7 Position: the spatial location at which the weight (i.e. gravitation force) occurs. \n\u00b7 Interaction: the shape of the load signal over time resulting from interaction. \nWeight is the most obvious contextual primitive that can be used for the \nidentification of objects; we may identify single instances of objects or entire classes \nof similar objects from their intrinsic property of weight. Konomi\u2019s passage \nmechanism is an example for how weight might be used to identify objects. \nPosition has been considered in the Active Floor and Smart Floor; by dividing the \nsurface into a number of tiles some positional information is available by considering \neach tile\u2019s sensor ID. We have observed that more fine-grained positional information \ncan be obtained by utilising the distribution of forces on a single surface. We examine \nthis issue further in section 4. \nThe last principle we consider in this paper is interaction; this context can be \nobtained by analyzing the output of the load sensors over time. One example where \nthe load sensor trend has been used to great effect is in the Active Floor, where the \ninteraction context is used to analyze differences in footfall. On a more simplistic \nlevel, simple changes in output such as load increase and decrease may provide useful \ncontext on object placement and removal, as examined in more detail in section 5. \n3 Determining 2-D Position of Objects on Surfaces \nIn this section we demonstrate how the 2-D position of an object can be detected on a \nsurface using load sensing. We begin by describing the basic algorithms and \ndemonstrate the feasibility of our technique. The configuration of our experiment is \nintended to recreate a typical surface that might be found in an everyday environment. \nFor the experiment we placed a table-top on four industrial load cells each of \nwhich can detect forces of up to 500N. The load cells are placed at the corners of the \ntable-top and each connected to a commercial signal conditioning unit. The \nconditioning units are in turn fed to a standard 16-bit Analog to Digital Converter \n(ADC) which links to the serial line of the PC. The load cells are driven with 10V, \nresulting in a output ranging from 0 to 40mV which is amplified by the conditioning \nunit to 0 to 2.5V and sampled by ADC. As these components are normally used for \nscales, the sampling frequency is necessarily rather low (each load cell can be read 4 \ntimes a second). The resolution of load sensing in this setup is approximately 16g. To \nminimize the influence of bit-errors in the ADC, our driver software only calculates \nthe position of objects between 100g and 100Kg (objects less than 100g are ignored). \n3.1 Algorithm to Determine the 2D Position of an Object on a Surface \nTo detect the position of an object we calculate the centre of pressure on the surface \nbased on the load measured at each corner of the table. The overall force on the \nsurface introduced by an object placed on the surface at x,y is denoted by Fx. The \nsetup assumes static forces, so the sum of all 4 load cells F1, F2, F3, and F4 is equal to \nFx, see equation (1) and figure 1. If there is already an object on the table-top that is \nrepresented by F0x that can be measured by the forces on each load cell F01, F02, F03, \nand F04, see equation (2), then we need to incorporate these into our algorithm for \ncomputing the position of a new object. The algorithm for identifying the position of a \nnew object on a pre-loaded surface is described by equation (3) and (4) below. \n \n4321 FFFFFx +++=   (1) \n4321 00000 FFFFF x +++=   (2) \n)0(\n)0()0( 3322\nmax\nxx FF\nFFFF\nxx\n-\n-+-=   (3) \n)0(\n)0()0( 4433\nmax\nxx FF\nFFFF\nyy\n-\n-+-=   (4) \n \nThe voltage level measured at each load cell is linearly dependent on the force \napplied to it. In the experiment the measured voltage level at the load cells were used \ndirectly without prior conversion into a value of the force applied. Similarly we store \nthe existing preload, F01, F02, F03, and F04 as raw voltage levels. We take all values \nfrom the ADC and average them over the last 4 values. The size of the surface is fixed \nin this experiment, xmax is 135cm and ymax is 75cm. The calculation for the position is \nrounded to centimetres.  \n3.2 Proof of Concept: Position on the Surface \nTo carry out the experiments we developed a program in Visual Basic that reads \nperiodically from the ADC, calculates the point of pressure, and visualizes the result. \nIn the program the user can manually reset the preload by pressing a button, storing \nthe currently measured forces into F01, F02, F03, and F04.  \nIn the first experiment, the position of objects on the table-top is detected. Before \neach object was placed on the surface, we measured and stored the preload F01, F02, \nF03, and F04 resulting from the table top itself. We then selected six well distributed \npositions and marked them on the surface. We measured the x and y coordinates of \neach of the positions manually and recorded them for later comparison. Next we \nsystematically placed one object at a time onto the selected points. After we put each \nthe object down and the values stabilised, we measured the load F1, F2, F3, and F4, and \ncalculated its position. This sequence was repeated for all six objects. \nThe objects we chose to measure were everyday items of varying weights, and \nincluded a 500ml water bottle (about 530g) and a two litre water jar (about 2kg). We \nregard the centre of the object as its position. \nThe results of the experiment show that it is possible to achieve an accuracy of \nabout 2% of the surface length in each dimension. In our tests this corresponds to less \nthan 4cm in the y axis 2cm in x axis. The difference between the positions obtained \nfrom the weight calculations during repetitions of the experiment with the same set of \nobjects is even smaller: the maximum difference in both axis was 1cm, indicating that \nwe can achieve higher resolution by calibrating the system \u2013 if desired by the \napplication. \nForce Fx\nat (x,y)\nForce F1\nat (0,0)\nForce F3\nat (xmax,ymax)\nForce F4\nat (0,ymax)\nForce F2\nat (xmax,0)\n \nFig. 1. Forces on a surface used to determine the 2-D position of objects. \n3.3 Real Environment: Position on a Tablecloth covered Surface with Preload \nTo simulate a more realistic environment, we repeated the same experiment with a \nnumber of different objects already placed on the table. The table top was covered \nwith a tablecloth. Five objects were randomly distributed on the surface before the \npreload values were acquired. These objects were: a TV-set, a book, a 2 litre water \nbottle, a magazine and a cable reel, totalling an overall weight of about 34kg. Figure 2 \nillustrates this setup. \nThe initial set of measurement tests were repeated, the objects now being added on \ntop of the TV-set, on the magazine, and the other four on the tablecloth. \nThe results we obtained were similar to those obtained in the original experiment with \nthe empty table. In most cases we achieve a slightly better resolution because the \nadditional weight provides stability to the system. \nThis experiment shows that using load sensing we can determine the static position \nof an object on a surface irrespective of objects already on the surface or between the \nsurface and the new object. Furthermore, our results indicate that it is possible to \nreliably obtain centimetre level accuracy. The success of such an experiment also lead \nus to postulate that our approach for object detection is deployable in non-lab \nenvironments and is especially well suited to ubiquitous computing settings. \n4 Recognizing Interaction on a Load Sensing Surface \nAs the world is not static and we interact with objects, place them on surfaces and \nremove them again it is of interest to recognize events that relate to these actions. In \nthe second series of experiments, we explore how interaction resulting from events on \na load sensitive surface can be recognized with a simple algorithmic approach. \nThe setup used for the experiment is a wooden table-top, 80x80cm, resting on 4 \nindustrial load cells. Each of the load cells can handle a maximum load of 20N. The \nweight of the table-top is about 1kg. For this setup we built a hardware which \namplifies the output signal of the load cells by 220, resulting in an output voltage of \nbetween 0 and 4.4V. Each of the 4 signals is sampled at 250Hz with 10 bit resolution \nusing a PIC16F876 \nmicrocontroller. The \nmicrocontroller is connected \nto a PC via a serial line. The \nobjects used to generate the \nevents in this experiment are \na 500ml water bottle (520g) \nand a book (~200g). Detailed \ninformation and the \nschematics, software, and \ndatasets are available on the \nproject web page [12].  \nFig. 2. The experimental setup; objects are stationary on \na table while the position of an added object is detected. \n4.1 Algorithm to Detect Interaction Events on a Surface \nTo detect the events we use an algorithm which considers the last 500ms using a \nsliding window and the sum of load (Fx). At the selected sampling frequency, this \nequates to the last 125 sample values, denoted by Fx(t),\u2026, Fx(t-124). At each sample \ninterval we run the analysis algorithm described by the formulae shown in table 1. \nThe expressions have been selected to be as simple as possible to facilitate easy \nimplementation on a microcontroller1 while at the same time yielding reliable event \ndetection and differentiation. \nIn the following experiment we investigate whether or not it is possible to \nrecognize different events based on the features extracted from the data gathered. \nHere we concentrate on the most important primitives: putting objects down onto the \nsurface and removing objects from the surface. We also included a further event: \nknocking an object over which is already on the surface. The following rules are used \nto decide which event has taken place.  \n                                                        \n1 In the later implementation the features were adjusted so that the division could be replaced \nby a shift operation. \n \n \n25\n)(\n)100)..(124(\n\u00e5\n--== ttj\nx\ns\njF\nA  \nAs is the average value of the first 25 values in \nthe window that is currently processed. This is \nused as an indicator for the overall load on the \nsurface before the interaction. \n75\n)(\n)25)..(101(\n\u00e5\n--== ttj\nx\nm\njF\nA  \nAm is the average value of the middle 75 \nvalues in the window that is currently \nprocessed. This value is required for the \ncalculation of Dm. \n25\n)(\n)24)..((\n\u00e5\n-== ttj\nx\ne\njF\nA  \nAe is the average value of the last 25 values in \nthe window that is currently processed. This is \nused as an indicator for the overall load on the \nsurface after the interaction. \n25\n)(\n)100)..(124(\n\u00e5\n--=\n-\n= ttj\nsx\ns\nAjF\nD  \nDs is an indicator for the change in the signal \nduring the first 25 samples. If no interaction \ntakes place Ds is close to 0. \n75\n)(\n)25)..(101(\n\u00e5\n--=\n-\n= ttj\nmx\nm\nAjF\nD  \nDm is an indicator for the change in the signal \nduring the middle 75 samples.  \n25\n)(\n)24)..((\n\u00e5\n-=\n-\n= ttj\nex\ne\nAjF\nD  \nDe is an indicator for the change in the signal \nduring the last 25 samples. \nTable 1. Formulae calculated to detect interaction events. \n\u00b7 Putting an object on the surface.  \nThis is characterized by an increase in the overall load. In other words, before the \nevent the overall load is smaller than after the event (As+d< Ae). The threshold of \nweights is denoted by d. Assuming that once the object has been put down on a \nsurface it remains stable, it can be seen that Ds is close to zero (Ds<e). In the \nmiddle of the interaction the change to the signal is greater (the moment the object \nhits the surface) than later (when the object is already on the surface), stated as \n(Dm> De).  \n\u00b7 Removing an object from the surface.  \nThis is inverse of placing an object on the surface, so the overall load is reducing \n(As>Ae+d). To begin with the signal is stable (Ds<e) and the change during the \ninteraction is greater than at the end (Dm> De). \n\u00b7 Knocking an object over.  \nWhen an object is knocked over, this results in a large change in the middle of the \ninteraction, greater than at both the start and the end, and also greater than a set \nthreshold f, (Dm>f \u00d9 Dm>Ds \u00d9 Dm>De). As the overall weight on the surface stays \nthe same, As and Ae are similar (|As-Ae|<d). \n4.2 Proof of concept: Events on an Empty Surface \nIn this experiment the force over time is recorded while a number of different \ninteractions are performed. First, we place the water bottle on the table and remove it \nafter a few seconds. Next, the book is placed or dropped onto the table and lifted \naway a few seconds later. Lastly, the bottle is put down on the surface, left there for a \nfew seconds, knocked over, and removed after a few seconds. The experiment is \nrepeated with each object ten times. Overall, this experiment results in 70 recorded \nevents for analysis. Using the simple algorithm described above 94% of the events \nwere classified correctly, 6% were missed, and no events were misclassified. A \nvisualization of the raw data stream is shown in figure 3. \n1000\n1500\n2000\n2500\nTime\nLo\nad\nE1 E2 E3 E4\n \nFig. 3. The graph shows the load change recorded over time. An object is placed on the surface at \nposition E1 and E4. At E2 an object is knocked over and at E3 the object is removed from the \nsurface. \n4.3 Real Environment: Events on Tablecloth covered Surface with Preload \nThe experiment was repeated on a table that was covered with a tablecloth. On the \ntable were also 4 static objects, a notebook computer (about 2.2kg), a book (about \n500g), a newspaper (about 200g) and a water bottle (about 520g). The same sets of \ninteractions were performed. About half of the interactions were made on the \ntablecloth and the remaining half on top of static objects. Out of the 70 events \nrecorded, the algorithm could classify 96% correctly, 4% were missed. \n4.4 Discussion on Event Recognition \nAs seen from the results of our experiments, it is feasible to detect basic interaction \nevents with a high degree of probability, even when using simple algorithms. We can \nalso observe that covering the surface has a negligible effect on the data recorded. \nFurthermore, having other objects on the surface of the table, vibrations were \ndeadened increasing the recognition performance. \nWe believe that it may be possible to use similar techniques to identify further \nevents, such as moving an object on a surface, sliding an object over the surface and \ntouching the surface. The datasets of the experiments reported here and also for other \nexperiments are available on our project web page [11]. \nThe observation that preload has little influence on detecting the events or \nidentifying an object\u2019s position, suggests that it is feasible to implement a system that \ncan dynamically track objects that are added, moved, or removed from surfaces in \neveryday environments. \n5 Incorporating a Weight Lab into a \u2018Living Laboratory\u2019 \nThe results obtained by our experiments on using the intrinsic weight of objects to \ncalculate position and detect events and activities on a given surface, suggest that a \nlarger scale implementation would provide us with a rich source of contextual \ninformation. In order to prove this we have designed and implemented a \u201cweight lab\u201d \nas an integral part of our living lab area. In the weight lab, all surfaces are load \nsensitive and equipped with networked data acquisition units. Currently, the weight \nlab is comprised of four \u2018load sensitive\u2019 artefacts: the floor, two tables and a shelf. \nOther, non-load sensitive artefacts can be arranged on these surfaces. The \narrangement of these artefacts is not fixed; all components can be moved to create \nnew experimental configurations. We have designed the space to be used as a \ncommon room, as depicted in figure 8 and 9. \nIn order to make the artefacts \u2018aware\u2019 of the load placed upon them and also of the \nposition of an object or a subject, the surface must be augmented with load cells. \nDifferent load cells have been selected depending on estimates for the overall \noperating load for each surface, together with some practical engineering and \naesthetic considerations. We have also tried to use cheap and easily available \nconsumer load cells taken from kitchen and bathroom scales where appropriate. \nDedicated hardware \nhas been developed to \ndrive the load cells and \nfacilitate the data \nacquisition. The current \nprototype offers both \nwired RS-232 and \nwireless communication \ninterfaces to our own \ncustom data analysis \nsoftware. \n5.1 Weight Floor \nThe floor is constructed \nfrom a wooden structure \nof 240cm by 180cm. The \nsurface of the floor is \nmounted on three \nsupporting timber beams \nresulting in an overall \nheight of approximately 9cm. At each corner of the floor a single load cell is mounted \ninto the supporting timber, see figure 4. The whole floor rests entirely on the four load \ncells and the remaining structure is in contact with the conventional load bearing floor \nof the building.  \nAn estimate of the typical load in our environment is: 2 people (70kg each), 2 \narmchairs (15kg each), a coffee table (10kg), a shelf (20kg), and the weight of the \nfloor (80kg) resulting in 280kg.  \nDue to the structure and anticipated loading of the floor, we selected S-load cells \neach with a capacity of 1000N. In this range the measurements have a guaranteed \naccuracy and the cells continue to be overload safe to 2000N (in this range the load \ncells still give a reading and are not damaged, but their accuracy is reduced). As there \nare 4 load cells, the total weight that can be put on the floor (including the weight of \nthe floor, itself about 80kg) is 800kg or 400kg with well defined accuracy. The \nanticipated load of 280kg - even if such a load is not evenly distributed \u2013 is still well \nwithin the specification. \nThe four load cells are connected to the data acquisition hardware described later \nin this section. The floor system incorporates an \u2018auto-tare\u2019 mechanism which allows \nus to discount the position of stationary objects and improve our estimation of the \nposition of new objects introduced into the environment. More specifically, whenever \nthe load is considered stable this preload is stored (F01, F02, F03, and F04) then \nfactored in to successive calculations to determine the point of pressure of further \nobjects, e.g. the position of someone is walking on the floor. Using this mechanism, \nfurniture can be added to the floor and automatically included in the position \ncalculation once the floor is not occupied for several seconds. Stability is assumed if \nthe values of Ds, Dm, De. are close to zero for more than 5 seconds and the preload \n     \nFig. 4. The floor when it was installed in upright position (left). \nEnlarged view of the load cell embedded into the floor (right). \nvalues are updated. The position algorithm, given in section 3 is used for calculating \nthe point of pressure. Note that in case of a single person the position of the person is \ndetermined, whereas in case of more people, the point of pressure is the centre of \nmass of the group. Although not yielding their individual positions, such information \nmay still help us determine the locus of activity.  \nThe floor currently recognises three types of event: no interaction, people moving \nand stationary occupation (e.g. someone is sitting in an armchair or standing in front \nof the pin board). These events can be recognized with an accuracy of over 99%. The \nposition of a single person moving in a space already populated with furniture and \ncovered with a rug can be acquired with approximately 10cm accuracy. \n5.2 Weight tables and shelves \nWe embedded load sensing technology in several pieces of furniture: a small coffee \ntable, a larger dining table, and a shelf\/drawer unit. Both tables are constructed using \nload cells installed between the table top and the frame, such that the table top rests on \na load cell at each corner (see figure 5). \nThe coffee table can measure a maximum load of 8kg (including the 1.5kg table \ntop). Loads over 8kg are prevented by a mechanical overload protector which also \nsuspends data acquisition. The low overall weight capacity is acceptable given the \n      \n \n      \nFig. 5. Coffee table (top) and dining table equipped with load cells (bottom). Close ups of the \nload cells and how they are fixed (right). \nnormal use of the table (e.g. putting \nnewspapers, magazines and cups on it) \nand that it permits us a far higher \naccuracy of measurement. For the larger \n\u2018dining\u2019 table we selected load cells with \na capacity of 500N each, resulting in an \noverall capacity of 200kg (which is \nappropriate as people sometimes sit or \nlean on the edge of tables). \nThe tables and shelves use the same \ndata acquisition hardware as the floor, \nbut run different software on the \nmicrocontrollers. The main events we \nrecognise are as explained in section 4. \nHowever, with the sensitive small coffee \ntable we are able to track the pressure \nfrom a finger or an object over the \nsurface and convert it into a mouse-like track-pad, for details see [12,16]. \nThe shelf unit was placed on 4 load cells of the same type as the ones used for the \nlarge table. The position of the interaction is assigned to a column of the shelf, as a \nsingle set of load cells can not detect where in the vertical axis the interaction took \nplace. Additionally, some of the shelf boards within the unit are equipped with load \nsensing boards. These boards are built based on cheap consumer load cells. \n5.3 Hardware for Data Acquisition, Event Recognition and Communication \nAll of the load cells used in the experiments presented in this paper are based on \nresistive technology. Put simply, each cell is a wheat stone bridge providing a \nmaximum output signal of 20mV at a driving voltage of 5V. The AD-converter \nincluded in the microcontroller can measure voltages between 0 and 5V. To best \nutilise this range, we amplify the output signal of the load cells by a factor of 220 \nusing an LM324, resulting in a output signal of 0 to 4.4V (the exact values vary \nslightly between the load cells). The amplified output voltage of each of the load cells \nis converted into a 10 bit sample; the best resolution offered by the MCU\u2019s internal \nAD converter. Each of the four input channels is sampled at about 250Hz. The four \ninput values correspond to the load that is measured on each of the load cells, setting \nthe values for F1(t), F2(t), F3(t), and F4(t). \nEvents from the table and shelf unit are sent wirelessly using an RF transceiver \nmodule (Radiometrix BIM2) that offers data rates of up to 64kbit\/s. We run the \nprotocol at 19,200 bits\/s. Events, such as putting an object down at a certain position, \nremoving an object, tracking over the surface or pressing down, are sent in a single \npacket. Each packet comprises a preamble, followed by a start-byte, an object \nidentifier to determine the origin (coffee table, large table, shelf), the event type, and \nthe event dependent data. Finally, two bytes of 16-bit CRC are attached to ensure that \nthe transmitted data will be received correctly. The data acquisition unit only \n \nFig. 6. First generation data acquisition \nand communication hardware \ntransmits data (there are no \nacknowledgements), however, \nwe have found the protocol to \nbe very reliable at the low \ntransmission speed. \nThe hardware module used \nfor data acquisition (as depicted \nin figure 6) also acts as a base \nstation that receives the events \nand sends them to the host PC \nvia RS-232. The floor is directly \nconnected to the PC. The \nexperiments reported in the next \nsection are based on this \nhardware. \nLearning from the experience \ngained by deploying our system \nwe have designed and built a \nsecond hardware iteration that \noffers some improvements over \nour first design. The block \ndiagram of the newer system is \ndepicted in figure 7. In \nparticular the following improvements have been made: \n\u00b7 Increased AD resolution.  \nTo avoid the influence of single bit errors in the position calculation and also to \nincrease the weight range of the objects that can be detected, an ADC with higher \nresolution has been chosen (an external 16 bit ADS8320 analog to digital converter \nwith a voltage reference of 3.3V). This chip offers only one input so a multiplexer \nwas used. \n\u00b7 In order to improve the performance of the amplification we used instrumentation \namplifier (INA118 from Analog Devices) instead of Op-Amps. The INA118 offers \nan amplification range of up to a factor of 10000. \n\u00b7 As the load on the surface changes and as it is also desirable to be able to detect \nvery light objects or minimal interaction, the factor for the amplification can be \nselected at runtime from the microcontroller. Two amplification factors are \nimplemented (factor 150 and 1000) using a solid state relay that switches resistors \nin the periphery of the instrumentation amplifier. \n\u00b7 Additional RAM.  \nIn some of the more advanced scenarios we conceived, we realized that keeping a \nhistory on the artefact is useful to detect more complex events or patterns of \nevents. Therefore we added a FRAM chip that is connected over I2C and offers \n8KByte of non-volatile RAM (FM24C64 from Ramtron). \n \nFurther technical details, full schematics, and PCB layouts together with the \nsoftware are available on our project page [11]. \n4-1 MUX\nLoad\nCell\nLoad\nCell\nLoad\nCell\nLoad\nCell\namp amp amp amp\nAD conversion, 16Bit\nADS8320\nProcessing, PIC16F876\nRF-Communication\nRadimetrix BIM2\nSerial\nCommunication\nFRAM\n64kbit\n \n \nFig. 7. The second generation of the load sensing \nand communication unit. \n5.4 Software  \nSeveral pieces of software have been developed to capture and analyse the data from \nthe load sensors. The microcontroller runs a basic interactive system which allows the \nuser to configure the board for a particular artefact via serial line. Parameters, such as \nthe size of the surface, sampling speed and the object identifier can be specified using \na serial terminal program. These parameters are permanently stored in the internal \nEEPROM of the microcontroller. After the board is configured all events recognized \nare broadcast using the RF module. \nOn the base station a program is running that receives all the broadcast events and \npasses them to the PC. The unit offers two modes: one where all the data coming in is \nstreamed over the serial line, and the other, where the last 3 events are stored for each \nartefact and can be requested from the PC using the artefact identifier. \nWe have also developed a number of programs for the PC to allow the storage and \nvisualisation of the data. One of these applications is depicted in the following section \nin figure 8. This application visually maps events happening on the tables and on the \nfloor onto the plan of the lab. \n6 Applying the Setup in a real-world Environment \nThe infrastructure described in section 5 is deployed in a part of our living lab area. \nThe basic floor plan and photos are presented in figure 8 and 9. On one side of the \nfloor there are two armchairs. In front of the armchairs there is the coffee table. On \nthe wall behind the floor there are two pin boards. To one side of the floor is the \nlarger table, next to the floor. On this table is a TV-set and people put things \ntemporally down (e.g. orders arrived, books, food) on the remaining part of the table. \nThe area is used to as a place where people come and chat, have a coffee or where \npeople read. \nIn the remainder of this section we will report on some of the applications \nimplemented on the load sensing infrastructure and also on the experience gained \nfrom deploying the system. \n6.1 \u201cDon\u2019t leave your things behind\u201d \u2013 Application \nThis application shows the potential of having interconnected surfaces that can sense \nweight. As the larger table is used by people to leave items (e.g. files, books, etc.) \ntemporally, people sometimes forget whatever they have put down when they leave. \nThis application reminds the user to take their objects with them when they leave the \nroom. The basic idea of the application was inspired by ethnographic studies reported \nin [4]. \nWhenever the addition of an object on the large table is recognized, the weight \nadded to the table is stored together with the weight added on the floor (e.g. usually \nthe persons weight). When the person leaves the floor (the overall weight is reduced \nby a certain amount) \u2013 the negative change of weight is used to check for an entry in \nthe stored data set. If there is an entry \u2013 the person has put something down on the \nsurface while entering \u2013 the software running on the PC provides an audio cue to \nremind the user to take his items with him. As the weight of the object is known it is \nalso possible to prompt the user when the disappearing weight is not matching those \nstored in the dataset. \n6.2 Tracking the Position of a single Person and Estimating Activity \nUsing the setup described we have built an application that can track the position of a \nperson in the space. The position of the person is visualized, as shown in figure 8. The \n \nFig. 8. Weight lab viewer showing a trace on the floor layout of the lab and also some \ninteraction with the table (object put down). \n       \nFig. 9. Corresponding situation to the mapping in figure 8. User is interacting with the right \npin board and then sits down in the arm chair in the corner. \nposition of the person is available in the system as coordinates in centimetres (x,y). \nGiven domain knowledge, e.g. the whereabouts of furniture, walls and devices, this \nmakes it possible to provide the position information in a symbolic form, such as on \nchair 1, on chair 2, in front of the left pin board, in front of the right pin board, in \nfront of the TV, entering the floor. As suggested in [3], geometric domain knowledge \ncan also be used to create a higher level description of the position. The positional \ninformation is also available via HTTP to be included in other applications. As there \nis also a temporal element to the tracking data the direction and speed of movement \ncan be determined and offered to applications for further use.  \nAccumulating the tracking data over time offers a way to estimate the overall \nactivity in the space. A simple measure for this is to calculate the distance the person \nhas covered in a certain time.  \n6.3 Recognizing Situations \nIn figure 8, the tracked activity over a period of approximately 50 seconds is \nillustrated. The corresponding situations are shown in figure 9. The person is entering \nthe floor, going to the left pin board, turning around to the right pin board, and then \nwalking to the upper arm chair. On his way he puts a chocolate bar on the table. \nThe context of sitting down on a particular chair, putting a cup down on the table, \ntaking a magazine from the table can all be recognized in the above setting. On a \nlonger time scale, it may be possible to determine patterns that relate to non-atomic \nlonger term activities such as drinking coffee, having lunch, reading the newspaper \ngiven certain side conditions, such as domain specific knowledge about the location. \nThese situations can be described in terms of rules. For some of the situation these \nrules involve constants that are specific for the space which is occupied, e.g. the \nposition of the pin board or where the table is. These constants are acquired either \ngeometrically by measuring and calculation, or by supervised learning from example \nsituations. \nAs more people enter the same space, the recognition of context is made more \ncomplex. However as people enter one after another (even if the time between them \nmay be very short, e.g. less then a second) it is still possible to detect the number of \nsubjects. When multiple people are on the weight sensitive floor the centre of pressure \nis usually between them (their aggregate centre of mass). For example when both \nchairs are occupied the centre of pressure is in the middle between the chairs. To \nrecognize such contexts we find it useful to create the situation, log the data, and \nrecord the analysis as vectors; new situations are then matched against these samples \nto select the closest match. This can be realized using nearest neighbour matching or \nmore complex supervised learning methods. \n7 Conclusion \nIn the work presented in this paper we have tested the hypothesis that load sensing \ncan be used in everyday environments as a versatile source of contextual information. \nWhile it is obvious that weight information is a useful context for the identification of \nobjects, we have shown that load sensing can also be used to obtain positional \ninformation and interaction events. \nWe have demonstrated that the position of objects on surfaces can be determined \nwith high accuracy and reliability. It has to be stressed that the algorithms are simple, \nand geared toward implementation on low-cost micro-controller platforms. Further, \ninteraction events such as object placement on and removal from a surface can be \ndetected, likewise with high reliability and little computational cost. \nThe reported experiments also highlight the applicability in everyday settings \nwhich we have simulated by preloading surfaces with additional objects. In order to \ncontinue to study load sensing under living lab conditions we have augmented a \nnumber of surfaces, including a relatively large unsegmented floor area, various tables \nand shelves. The setup is an example for unobtrusive facilitation of everyday \nenvironments with context acquisition technology. This property is especially relevant \nin domains where preserving privacy is a central issue, e.g. care for elderly and \nassisted living.  \nIn our future work we will build on our basic techniques for identification, \npositioning and event detection and develop algorithms that account for complex \ninteractions with multiple objects on surfaces, and that support object tracking across \nmultiple surfaces. \nAcknowledgement \nThis research was partially funded by the Equator IRC, EPSRC GR\/N15986\/01 \n(http:\/\/www.equator.ac.uk). \nReferences \n1. Addlesee, M.D., Jones, A., Livesey, F., and Samaria, F.: ORL Active Floor. IEEE Personal \nCommunications, Vol.4, No 5, October 1997, pp. 35-41. IEEE, Piscataway, NJ, USA. \n2. Addlesee, M.D., Curwen, R., Hodges, S., Newman, J., Steggles, P., Ward, A., Hopper, A.: \nImplementing a Sentient Computing System. IEEE Computer Magazine, Vol. 34, No. 8, \nAugust 2001, pp. 50-56. \n3. Brumitt, B., Krumm, J., Meyers, B., and Shafer, S.: Ubiquitous Computing and the Role of \nGeometry. IEEE Personal Communications, August 2000. \n4. Crabtree, A., Hemmings, T. and Rodden, T.: Pattern-based Support for Interactive Design in \nDomestic Settings. Technical Report Equator-01-016, University of Nottingham, The \nSchool of Computer Science and IT, December 2001.  \nhttp:\/\/www.equator.ac.uk\/papers\/Authors\/crabtree.html \n5. Dey, A.K.: Providing Architectural Support for Building Context-Aware Applications. \nPh.D. thesis, December 2000, Dr. Gregory D. Abowd (advisor), College of Computing, \nGeorgia Institute of Technology \n6. Georgia Institut of Technology. The Aware Home Research Initiative.  \nhttp:\/\/www.cc.gatech.edu\/fce\/ahri\/ \n7. Headon, R. and Curwen R.: Ubiquitous Game Control. UBICOMP 2001 Workshop on \nDesigning Ubiquitous Computing Games. Atlanta, 2001. \n8. Kidd, C., Orr, R., Abowd, G.D., Atkeson, C.G., Essa, I.A., MacIntyre, B., Mynatt, E., \nStarner, T.E., and Newstetter, W.: The Aware Home: A Living Laboratory for Ubiquitous \nComputing Research. Proceedings of the Second International Workshop on Cooperative \nBuildings - CoBuild'99. Position paper, October 1999. \n9. Kistler force plate. http:\/\/www.kistler.com\/ \n10.Konomi, S., M\u00fcller-Tomfelde, C., Streitz, N.: Passage: Physical Transportation of Digital \nInformation in Cooperative Buildings. In: Streitz, N., Siegel, J., Hartkopf, V., Konomi, S. \n(Eds.), Cooperative Buildings - Integrating Information, Organizations, and Architecture. \nProceedings of the Second International Workshop (CoBuild'99). LNCS 1670. Springer: \nHeidelberg. pp. 45 -54. \n11.Krumm, J., Harris, S., Meyers, B., Brumitt, B., Hale, M., and Shafer S.: Multi-Camera \nMulti-Person Tracking for EasyLiving. IEEE Workshop on Visual Surveillance, July 2000.  \n12.Lancaster University, Embedded load sensing project, \nhttp:\/\/www.comp.lancs.ac.uk\/~albrecht\/load\/ \n13.Orr, R. J. and Abowd, G. D.: The Smart Floor: A Mechanism for Natural User Identification \nand Tracking. Proceedings of CHI 2000 Human Factors in Computing Systems (April 1\u20136, \n2000, The Hague, Netherlands), ACM\/SIGCHI. \n14.Paradiso, J, Abler, C., Hsiao, K., Reynolds, M.: The Magic Carpet: Physical Sensing for \nImmersive Environments. In Late-Breaking\/Short Demonstrations of CHI'97, pp.277-278. \nACM, USA.  \n15.Schilit, B.N., Adams, N.I., Want, R.: Context-Aware Computing Applications. Proceedings \nof the Workshop on Mobile Computing Systems and Applications, Santa Cruz, CA, \nDecember 1994. Pages 85-90. IEEE Computer Society. \n16.Schmidt A., Laerhoven, K., Strohbach, M., Gellersen, H.: Ubiquitous Interaction - Using \nSurfaces in Everyday Environments as Pointing Devices. Paper submitted to 7th ERCIM \nWorkshop \"User Interfaces For All\", 2002. \n17.Ward, A. J., Hopper, A.: A New Location Technique for the Active Office, IEEE Personal \nCommunications, vol. 4, pp. 42-47, 1997. \n"}