{"doi":"10.1109\/VLHCC.2005.17","coreId":"8412","oai":"oai:eprints.brighton.ac.uk:3272","identifiers":["oai:eprints.brighton.ac.uk:3272","10.1109\/VLHCC.2005.17"],"title":"An experimental study into the default reading of constraint diagrams","authors":["Fish, Andrew","Masthoff, Judith"],"enrichments":{"references":[{"id":42747587,"title":"A constraint diagram reasoning system.","authors":[],"date":"2003","doi":null,"raw":"Stapleton, G., Howse, J, and Taylor, J. A constraint diagram reasoning system. Proceedings of the 9th International Conference on Distributed Multimedia Systems, International Conference on Visual Languages and Computing, pp. 263-270, Knowledge Systems Institute 2003.","cites":null},{"id":42747574,"title":"A reading algorithm for constraint diagrams.","authors":[],"date":"2003","doi":"10.1109\/hcc.2003.1260220","raw":"Fish, A., and Flower, J., and Howse, J. A reading algorithm for constraint diagrams. Proceedings of VL\/HCC 03, pp.161-168, IEEE, 2003.","cites":null},{"id":42747577,"title":"Computing reading trees for constraint diagrams.","authors":[],"date":"2003","doi":"10.1007\/978-3-540-25959-6_19","raw":"Fish, A., and Howse, J. Computing reading trees for constraint diagrams. Proceedings of AGTIVE 03, pp.260-274., LNCS 3062, Springer, 2003.","cites":null},{"id":42747583,"title":"Constraint diagrams: Visualising invariants in object oriented models.","authors":[],"date":"1997","doi":"10.1145\/263700.263756","raw":"Kent, S. Constraint diagrams: Visualising invariants in object oriented models. Proceedings of OOPSLA \u201897, ACM SIGPLAN Notices 32 Issue 10 , pp. 327-341, 1997.","cites":null},{"id":42747580,"title":"Do Monkeys Like Elephants or Do Elephants Watch Monkeys? An Empirical study into the default reading of Constraint Diagrams. Technical report: http:\/\/cmis.mis.brighton.ac.uk\/Research\/vmg\/publications .htm","authors":[],"date":"2005","doi":null,"raw":"Fish, A., and Masthoff, J. (2005) Do Monkeys Like Elephants or Do Elephants Watch Monkeys? An Empirical study into the default reading of Constraint Diagrams. Technical report: http:\/\/cmis.mis.brighton.ac.uk\/Research\/vmg\/publications .htm","cites":null},{"id":42747582,"title":"Precise visual modelling: A case study.","authors":[],"date":"2005","doi":"10.1007\/s10270-004-0074-x","raw":"Howse, J. and Schuman, S. Precise visual modelling: A case study. To appear in Software and Systems Modelling Journal, Vol.4, No.3, 2005.","cites":null},{"id":42747581,"title":"Spider diagrams: A diagrammatic reasoning system.","authors":[],"date":"2001","doi":"10.1006\/jvlc.2000.0210","raw":"Howse, J. Molina, F., Taylor, J., Kent, S. and Gil, J. Spider diagrams: A diagrammatic reasoning system. Journal of Visual Languages and Computing, vol 12, pp. 299-324, 2001.","cites":null},{"id":42747586,"title":"The logical status of diagrams.","authors":[],"date":"1994","doi":"10.1017\/cbo9780511574696","raw":"Shin, S.-J. The logical status of diagrams. Cambridge University Press, 1994.","cites":null},{"id":42747589,"title":"The Object Constraint Language.","authors":[],"date":"1998","doi":"10.5381\/jot.2003.2.6.r1","raw":"Warmer and Kleppe (1998). The Object Constraint Language. Addison-Wesley.","cites":null},{"id":42747576,"title":"The semantics of augmented constraint diagrams.","authors":[],"date":"2005","doi":"10.1016\/j.jvlc.2005.03.001","raw":"Fish, A., and Flower, J., and Howse, J. The semantics of augmented constraint diagrams. To appear in Journal of Visual Languages and Computing, 2005.","cites":null},{"id":42747579,"title":"Towards a default reading for constraint diagrams.","authors":[],"date":"2004","doi":"10.1007\/978-3-540-25931-2_8","raw":"Fish, A., and Howse, J. Towards a default reading for constraint diagrams. Proceedings of Diagrams \u201804, pp.51-65, LNAI 2980, Springer, 2004.","cites":null},{"id":42747588,"title":"Using DAG transformations to verify Euler\/Venn homogeneous and Euler\/Venn heterogeneous rules of inference.","authors":[],"date":"2004","doi":"10.1007\/s10270-003-0044-8","raw":"Swoboda, N. and Allwein, G. Using DAG transformations to verify Euler\/Venn homogeneous and Euler\/Venn heterogeneous rules of inference. Journal of Software and System Modeling, Vol. 3, No.2, pp.136-149, 2004.","cites":null},{"id":42747585,"title":"Version 1.4. Available from www.omg.org.","authors":[],"date":null,"doi":null,"raw":"OMG. UML Specification, Version 1.4. Available from www.omg.org.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2005-01-01","abstract":"Constraint diagrams are a complex diagrammatic notation designed to express logical statements especially for use in software specification and reasoning. Not surprisingly, since this is an expressive language, there are some difficulties in reading the semantics of a diagram unambiguously. Some extra annotations (in the form of a reading tree) disambiguate the diagrams. However, this extra requirement (of drawing a reading tree) places a burden on the user. An attempt to remove the need for such a reading tree (or perhaps to automatically generate a reading tree, which could be altered by a user if they wished to) has been given via an algorithm to generate a default reading from the diagram. This algorithm is based on a number of principles \u2013 most of which are properties of the diagram. We wish to know whether these principles are intuitive and whether the default reading reflects a good proportion of users\u2019 intuitions, and we have performed a user-based study to test this. This report summarizes this study","downloadUrl":"","fullTextIdentifier":null,"pdfHashValue":null,"publisher":"IEEE Press","rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:eprints.brighton.ac.uk:3272<\/identifier><datestamp>\n      2015-04-14T13:07:40Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      7375626A656374733D47303030:47343030<\/setSpec><setSpec>\n      74797065733D636F6E666572656E63655F6974656D<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/eprints.brighton.ac.uk\/3272\/<\/dc:relation><dc:title>\n        An experimental study into the default reading of constraint diagrams<\/dc:title><dc:creator>\n        Fish, Andrew<\/dc:creator><dc:creator>\n        Masthoff, Judith<\/dc:creator><dc:subject>\n        G400 Computing<\/dc:subject><dc:description>\n        Constraint diagrams are a complex diagrammatic notation designed to express logical statements especially for use in software specification and reasoning. Not surprisingly, since this is an expressive language, there are some difficulties in reading the semantics of a diagram unambiguously. Some extra annotations (in the form of a reading tree) disambiguate the diagrams. However, this extra requirement (of drawing a reading tree) places a burden on the user. An attempt to remove the need for such a reading tree (or perhaps to automatically generate a reading tree, which could be altered by a user if they wished to) has been given via an algorithm to generate a default reading from the diagram. This algorithm is based on a number of principles \u2013 most of which are properties of the diagram. We wish to know whether these principles are intuitive and whether the default reading reflects a good proportion of users\u2019 intuitions, and we have performed a user-based study to test this. This report summarizes this study.<\/dc:description><dc:publisher>\n        IEEE Press<\/dc:publisher><dc:date>\n        2005-01-01<\/dc:date><dc:type>\n        Contribution to conference proceedings in the public domain<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:format>\n        text<\/dc:format><dc:language>\n        en<\/dc:language><dc:rights>\n        <\/dc:rights><dc:identifier>\n        http:\/\/eprints.brighton.ac.uk\/3272\/1\/FishMasthoffVLHCC05.pdf<\/dc:identifier><dc:identifier>\n          Fish, Andrew and Masthoff, Judith  (2005) An experimental study into the default reading of constraint diagrams  In: Proceedings of Visual Languages and Human Centric Computing (VLHCC05), Dallas, USA, 20-24 September, 2009.     <\/dc:identifier><dc:relation>\n        http:\/\/ieeexplore.ieee.org\/stamp\/stamp.jsp?tp=&arnumber=1509518<\/dc:relation><dc:relation>\n        10.1109\/VLHCC.2005.17<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/eprints.brighton.ac.uk\/3272\/","http:\/\/ieeexplore.ieee.org\/stamp\/stamp.jsp?tp=&arnumber=1509518","10.1109\/VLHCC.2005.17"],"year":2005,"topics":["G400 Computing"],"subject":["Contribution to conference proceedings in the public domain","PeerReviewed"],"fullText":"An experimental study into the default reading of constraint diagrams. \n Andrew Fish        Judith Masthoff \n                      University of Brighton        University of Aberdeen    \n                 Andrew.fish@brighton.ac.uk    jmasthof@csd.abdn.ac.uk \n \nIntroduction \nConstraint diagrams [8] are a complex diagrammatic \nnotation designed to express logical statements \nespecially for use in software specification and \nreasoning. Not surprisingly, since this is an expressive \nlanguage, there are some difficulties in reading the \nsemantics of a diagram unambiguously. Some extra \nannotations (in the form of a reading tree) \ndisambiguate the diagrams [1, 2]. However, this extra \nrequirement (of drawing a reading tree) places a \nburden on the user. An attempt to remove the need for \nsuch a reading tree (or perhaps to automatically \ngenerate a reading tree, which could be altered by a \nuser if they wished to) has been given via an algorithm \nto generate a default reading [4] from the diagram. \nThis algorithm is based on a number of principles \u2013 \nmost of which are properties of the diagram.  \nWe wish to know whether these principles are \nintuitive and whether the default reading reflects a \ngood proportion of users\u2019 intuitions, and we have \nperformed a user-based study to test this. This report \nsummarizes this study, for more detail see [5]. \n \nReasons for the test \nIf we could obtain a default reading that is intuitive \nthen we could:  \n\u2022 impose the default meaning \u2013 this reduces the \ncomplexity of a diagram (by removing the need \nfor reading trees), but is likely to reduce \nexpressiveness and will reduce the \u201cease of \nexpression\u201d (a diagram usually can be given \ndifferent meanings via different reading trees), or \n\u2022 generate the default tree for a diagram \nautomatically, but allow users to specify a \ndifferent tree if they wish to. The user\u2019s attention \ncould also be drawn to points in which the \ndiagram\u2019s meaning deviates from standard \nintuition (highlighting a spider that is an \nunexpected starting point of a reading for \nexample). \nIf some of the principles are deemed intuitive, but \nnot the overall default reading, and we could estimate \nthe relative weighting of these principles (which ones \ntake precedence over others), then we could redesign \nthe default reading to reflect this, making it more \nintuitive.  \nIf no principle can be identified as being intuitive \nthen either:  \n\u2022 users could be taught a default reading (i.e. we \ncould choose a default reading \u2013 but how to do \nthis sensibly without guidance due to user \npreference?), or \n\u2022 the idea of default could be abandoned and one \ncould assert that the complexity associated with \ndrawing a reading tree is necessary if one wishes \nto avoid ambiguity whilst retaining \nexpressiveness.   \nIn the current implementation of the constraint \ndiagram editor [9] we choose a reading tree based on \nthe order a user drew the spiders (or quantifiers) in the \ndiagram.  \nIf the spatial layout of spiders in a diagram is found \nto be important, then perhaps an editor could redraw \ndiagrams to better match people\u2019s intuitions in general; \nfor instance positioning the spider at which the user \nshould start to read on the left. Similarly, such a layout \ncould be used by an automatic proof writer when \ndrawing diagrams and reading trees obtained by the \napplication of some reasoning rules. \n \nNotation \nDue to lack of space we will not introduce the notation \nin detail (nor elucidate fully on the principles) but give \na single example of a constraint diagram, without a \nreading tree, in figure 1; we refer the interested reader \nto [2,4,5].  \n \n \n  Figure 1. A constraint diagram without a reading tree. \n \nIn figure 1, there are two given contours labelled \nMonkey and Elephant which represent disjoint sets. \nThe dot is an existential spider, which represents \nMonkey Elephant \nwatches \nlikes \nexistential quantification (there is a monkey). Its \nhabitat is \u201cinside Monkey\u201d. The asterisk is a universal \nspider, which represents universal quantification (for \nall elephants). The two arrows labeled \u201cwatches\u201d, and \n\u201clikes\u201d represent relations. The arrow labeled \u201clikes\u201d is \nsourced at the existential spider and targets an \nunlabelled derived contour inside Elephant. This \nderived contour represents the image of the relation \n\u201clikes\u201d (the elephants which are liked). The habitat of \nthe universal spider is \u201cinside Elephant outside the \nderived contour\u201d. \nTwo possible readings for figure 1 are:  \n(a) There is a monkey, m, who likes only \nelephants and every elephant not liked by m \nwatches just m. \n(b) Each elephant, e, watches a monkey who likes \nonly elephants excluding e.     \nA spider represents a quantifier, and the domain of \na spider represents the set over which quantification \ntakes place. In reading (b), the domain of the universal  \nspider is the whole of Elephant, while in reading (a) its \ndomain is inside Elephant, but outside the derived \ncontour.  \nPrinciples being tested \ni. Spider Type (or Quantifier Type) - read existential \nspiders (dots) before universal ones (asterisks); \nproposed in [12] as a way to reduce ambiguity. \nPrediction for figure 1 is reading (a).  \nii. Following Chains of Arrows - read from the start of \na chain of arrows; proposed in [4,7]. A Chain of \nArrows is a sequence of arrows where the source \nof an arrow is either equal to the target of the \npreceding arrow or is dependent upon it. For \nexample in Figure 1, the pair (watches, likes) is a \nchain of arrows since the source of \u201clikes\u201d is equal \nto the target of \u201cwatches\u201d, and the pair (likes, \nwatches) is a chain of arrows since the source of \n\u201cwatches\u201d is inside Elephant, but outside the \nderived contour which is the target of \u201clikes\u201d. No \nprediction for figure 1.  \niii. Strongly Versus Weakly Bound \u2013 if there is more \nthan one chain of arrows then read from the start \nof the one which has the target of each arrow equal \nto the source of the next (this is called strongly \nbound); proposed in [4]. Prediction for figure 1 is \nreading (b). \niv. Domain Equals Habitat \u2013 start reading at a spider   \nwhose domain is equal to its habitat; proposed in \n[4]. Prediction for figure 1 is (a). \nv. Outside a Derived Contour \u2013 read from a spider \nwhich is not inside a derived contour; proposed in \n[5]. No prediction for figure 1. \nvi. The Positioning in the Plane of the Spiders \u2013 read \nspiders from top to bottom, and from left to right; \nin most western languages, people read from top to \nbottom and from left to right. Reading from left to \nright predicts (a) for figure 1. Reading from top to \nbottom predicts (b).   \nMethod \nA mixture of a within-subjects and a between-subjects \ndesign was used. A within subjects design was used to \ninvestigate the principles: Spider Type, Following \nChains of Arrows, Strongly Versus Weakly Bound, \nDomain Equals Habitat, and Outside a Derived \nContour. A between subjects design was used to \ninvestigate the effect of the positioning in the plane of \nspiders. Forty subjects were assigned randomly to one \n(out of four) experimental condition. They were given \na questionnaire to fill out, which started with an \nexample-based explanation of the constraint diagram \nnotation. It used only diagrams with one spider, so that \nthere were no ambiguities or suggestions made here.  \nSubjects were allowed to comment on the notation. \nNext, a sequence of Constraint diagrams was shown. \nFor each diagram, two possible meanings were given, \nand subjects were asked to select the meaning that they \nthought the diagram represented most accurately, or to \ngive an alternative meaning. The four conditions \ncontained the same diagrams, except for layout \nchanges, flipping the diagrams in the obvious manners.  \n \nExperimental Design \u2013 strengths \ni. Keeping the diagrams as simple as possible \nwhilst still testing the properties. Since \nambiguous constraint diagrams (without a \nreading tree) have at least two spiders, at least \none of which is universal, we chose examples \nwhich had exactly two spiders, at least one of \nwhich was universal.  \nii. Labelling of diagrams used natural language, \nwhich removes alphabetic ordering \ninterpretations (caused by labels like A, B, etc. \non the contours). \niii. Labelling of diagrams used unusual natural \nlanguage, which is not too semantically \nsuggestive (using labels like \u201cTeacher\u201d and \n\u201cCourse\u201d might have caused subjects to start \nwith \u201cTeacher\u201d because they prefer starting with \nan actor rather than an object, for example; we \nchose labels such as \u201cMonkey\u201d and \u201cElephants\u201d \nand \u201clikes\u201d and \u201cwatches\u201d). \niv. Various pairs of diagrams were used that differed \nin only one aspect, so that we could investigate \nthe effect of most principles in isolation. \n \nExperimental Design \u2013 weaknesses \ni. The order in which the answers are presented \nshould have been randomized.  \nii. A larger number of participants would be \nbeneficial. \niii. Separable principles \u2013 some principles to be \ntested cannot be separated (perhaps this is an \nindication that for those principles another \nmethod of testing may be more appropriate). \n \nResults \nThe only statistically significant results (p<0.05 with \nWilcoxon Signed Ranks Test) that were clearly \ninterpretable were:  \ni. If both of the properties of \u201cdomain equals \nhabitat\u201d and \u201cfollowing arrows\u201d hold then there \nis a preference for starting reading at the \npredicted (by both of these properties) starting \nspider.  \nii. There was a preference for starting with the \nspider on the left. \n \nConclusions  \nThe experiment shows how difficult evaluation of \nsuch complex notations can be. Despite running six \npilot studies (each with two or more subjects) before \nthe experiment, in order to try to optimize the \nexperimental material (such as the explanation of the \nnotation), we experienced problems with subjects not \nunderstanding everything (such as a two-footed \nspider).  \nA major problem of the experiment was that due to \nthe inter-relationships between some properties, some \ndiagrams represented multiple principles. We solved \nthis problem to a large extent by comparing pairs of \ndiagrams which differed in a minor way. However, \nsome principles could not be separated by this \napproach. This made it impossible to decide if some of \nthe non-significant results were caused by conflicting \npreferences for different principles. One option is to \nallow users of a constraint diagram editor to specify \nwhich principles they would like to use for a default \nreading. The layout of diagrams, appropriate \nhighlighting, and the reading trees could then be \naltered accordingly. \nThe difficulties in isolating certain properties could \npoint to a more qualitative method of investigation of \nuser\u2019s preference (such as a thinking-aloud study, \nperhaps with eye-tracking facilities). It may also prove \nsensible to extensively test simpler notations, like \nEuler\/Venn [13] and Spider diagrams [6] before testing \nConstraint diagrams.  \n \nAcknowledgements \nWe would like to thank the anonymous referees for \ntheir comments. This research was partially funded by \nEPSRC grant number GR\/R63516.  \n \nReferences  \n [1] Fish, A., and Flower, J., and Howse, J. A reading \nalgorithm for constraint diagrams. Proceedings of \nVL\/HCC 03, pp.161-168, IEEE, 2003. \n[2] Fish, A., and Flower, J., and Howse, J. The semantics of \naugmented constraint diagrams. To appear in Journal of \nVisual Languages and Computing, 2005. \n[3] Fish, A., and Howse, J. Computing reading trees for \nconstraint diagrams. Proceedings of AGTIVE 03, pp.260-\n274., LNCS 3062, Springer, 2003. \n[4] Fish, A., and Howse, J. Towards a default reading for \nconstraint diagrams. Proceedings of Diagrams \u201804, pp.51-\n65, LNAI 2980, Springer, 2004.  \n[5] Fish, A., and Masthoff, J. (2005) Do Monkeys Like \nElephants or Do Elephants Watch Monkeys? An \nEmpirical study into the default reading of Constraint \nDiagrams. Technical report: \nhttp:\/\/cmis.mis.brighton.ac.uk\/Research\/vmg\/publications\n.htm \n[6] Howse, J. Molina, F., Taylor, J., Kent, S. and Gil, J. \nSpider diagrams: A diagrammatic reasoning system. \nJournal of Visual Languages and Computing, vol 12, pp. \n299-324, 2001. \n[7] Howse, J. and Schuman, S.  Precise visual modelling: A \ncase study. To appear in Software and Systems Modelling \nJournal, Vol.4, No.3, 2005. \n[8] Kent, S. Constraint diagrams: Visualising invariants in \nobject oriented models. Proceedings of OOPSLA \u201897, \nACM SIGPLAN Notices 32 Issue 10 , pp. 327-341, 1997. \n[9] University of Kent\u2019s \u201cReasoning with Diagrams\u201d site: \nhttp:\/\/www.cs.kent.ac.uk\/projects\/rwd\/  \n [10] OMG. UML Specification, Version 1.4. Available from \nwww.omg.org. \n [11] Shin, S.-J. The logical status of diagrams. Cambridge \nUniversity Press, 1994.  \n [12] Stapleton, G., Howse, J, and Taylor, J. A constraint \ndiagram reasoning system. Proceedings of the 9th \nInternational Conference on Distributed Multimedia \nSystems, International Conference on Visual Languages \nand Computing, pp. 263-270, Knowledge Systems \nInstitute 2003. \n [13] Swoboda, N. and Allwein, G. Using DAG \ntransformations to verify Euler\/Venn homogeneous and \nEuler\/Venn heterogeneous rules of inference. Journal of \nSoftware and System Modeling, Vol. 3, No.2, pp.136-\n149, 2004.   \n [14] Warmer and Kleppe (1998). The Object Constraint \nLanguage. Addison-Wesley. \n"}