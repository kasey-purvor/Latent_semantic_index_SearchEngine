{"doi":"10.3389\/neuro.11.027.2009","coreId":"54271","oai":"oai:eprints.lincoln.ac.uk:2666","identifiers":["oai:eprints.lincoln.ac.uk:2666","10.3389\/neuro.11.027.2009"],"title":"CamBAfx: workflow design, implementation and application for neuroimaging","authors":["Ooi, Cinly","Bullmore, Edward","Wink, Alle-Meije","Sendur, Levent","Barnes, Anna","Achard, Sophie","Aspden, John","Abbott, Sanja","Yue, Shigang","Kitzbichler, Manfred","Meunier, David","Maxim, Voichita","Salvador, Raymond","Henty, Julian","Tait, Roger","Subramaniam, Naresh","Suckling, John"],"enrichments":{"references":[{"id":941498,"title":"A (Sort of) New Image Data Format Standard: NIfTI-1. 10th Annual Meeting of the Organization for Human Brain Mapping (OHBM","authors":[],"date":"2004","doi":null,"raw":"(2004). A (Sort of) New Image Data Format Standard: NIfTI-1. 10th Annual Meeting of the Organization for Human Brain Mapping (OHBM 2004), Budapest, Hungary, June 13\u201317. Available at: http:\/\/nifti.nimh. nih.gov\/nifti-1\/documentation\/hbm_ nifti_2004.pdf.","cites":null},{"id":944365,"title":"Advances in functional and structural MR image analysis and implementation as FSL.","authors":[],"date":"2004","doi":"10.1016\/j.neuroimage.2004.07.051","raw":"Smith, S. M., Jenkinson, M., Woolrich, M. W., Beckmann, C. F., Behrens, T. E. J., Johansen-Berg, H., Bannister, P. R., De Luca, M., Drobnjak, I., Flitney, D. E., Niazy, R., Saunders, J., Vickers, J., Zhang, Y., De Stefano, N., Brady, J. M., and Matthews, P. M. (2004). Advances in  functional and structural MR image analysis and implementation as FSL. Neuroimage 23, 208\u2013219. Available at: http:\/\/www.fmrib.ox.ac. uk\/fsl\/.","cites":null},{"id":940761,"title":"Atomoxetine modulates right inferior frontal activation during inhibitory control: a pharmacological functional magnetic resonance imaging study.","authors":[],"date":"2009","doi":"10.1016\/j.biopsych.2008.10.014","raw":"Chamberlain, S. R., Hampshire, A., M\u00fcller, U., Rubia, K., Del Campo, N., Craig, K., Regenthal, R., Suckling, J., Roiser, J. P., Grant, J. E., Bullmore, E. T., Robbins, T. W., and Sahakian, B. J. (2009). Atomoxetine modulates right inferior frontal activation during inhibitory control: a pharmacological functional magnetic resonance imaging study. Biol. Psychiatry 65, 550\u2013555.","cites":null},{"id":940518,"title":"Available at: http:\/\/ www.w3.org\/TR\/REC-xml\/. XML Core Working Group,","authors":[],"date":"2008","doi":null,"raw":"Bray, T., Paoli, J., SperbergMcQueen, C. M.,  Maler,  E.,  and Yergeau, F. (2008). Extensible Markup Language (XML) 1.0, 5th Edn. W3C Recommendation 26 November 2008. Available at: http:\/\/ www.w3.org\/TR\/REC-xml\/. XML Core Working Group, http:\/\/www. w3.org\/XML\/Core\/.","cites":null},{"id":941261,"title":"BrainVISA: software platform for visualization and analysis of multimodality brain data. Neuroimage 13, S98. Available at:","authors":[],"date":"2001","doi":"10.1016\/s1053-8119(01)91441-7","raw":"Cointepas, Y., Mangin, J.-F., Garnero, L., Poline, J.-B., and Benali, H. (2001). BrainVISA: software platform for visualization and analysis of multimodality brain data. Neuroimage 13, S98. Available at: http:\/\/www. brainvisa.info\/.","cites":null},{"id":941741,"title":"Branding Your Application (Eclipse Corner Article). Available at: http:\/\/ www.eclipse.org\/articles\/ArticleBranding\/branding-your- application.","authors":[],"date":"2004","doi":null,"raw":"Eidsness, A., and Rapicault, P. (2004). Branding Your Application (Eclipse Corner Article). Available at: http:\/\/ www.eclipse.org\/articles\/ArticleBranding\/branding-your- application. html.","cites":null},{"id":945386,"title":"CamBAfx: workflow design, implementation and application for neuroimaging.","authors":[],"date":"2009","doi":null,"raw":"Citation: Ooi C, Bullmore ET, Wink A-M, Sendur L, Barnes A, Achard S, Aspden J, Abbott S, Yue S, Kitzbichler M, Meunier D, Maxim V, Salvador R, Henty J, Tait R, Subramaniam N and Suckling J (2009) CamBAfx: workflow design, implementation and application for neuroimaging. Front. Neuroinform. 3:27. doi: 10.3389\/neuro.11.027.2009 Copyright \u00a9 2009 Ooi, Bullmore, Wink, Sendur, Barnes, Achard, Aspden, Abbott, Yue, Kitzbichler, Meunier, Maxim, Salvador, Henty, Tait, Subramaniam and Suckling. This is an open-access article subject to an exclusive license agreement between the authors and the Frontiers Research Foundation, which permits unrestricted use, distribution, and reproduction in any medium, provided the original authors and source are credited.","cites":null},{"id":944058,"title":"Ciccarel l i","authors":[],"date":null,"doi":null,"raw":null,"cites":null},{"id":942656,"title":"Cognitive performance and grey matter density in psychosis: functional relevance of a structural endophenotype.","authors":[],"date":"2008","doi":"10.1159\/000182889","raw":"Habets, P., Krabbendam, L., Hofman, P., Suckling, J., Oderwald, F., Bullmore, E., Woodruff, P., Van Os, J., and Marcelis, M. (2008). Cognitive performance and grey matter density in psychosis: functional relevance of a structural endophenotype. Neuropsychobiology 58, 128\u2013137.","cites":null},{"id":943223,"title":"Eclipse Platform Technical Overview (Eclipse White Paper). Available at:","authors":[],"date":"2009","doi":null,"raw":null,"cites":null},{"id":942000,"title":"Fiswidgets: a graphical computing environment for neuro imag ing ana lys i s .","authors":[],"date":"2003","doi":"10.1385\/ni:1:1:111","raw":null,"cites":null},{"id":18451516,"title":"Fiswidgets: a graphical computing environment for neuroimaging analysis.","authors":[],"date":"2003","doi":"10.1385\/ni:1:1:111","raw":"Fissell, K., Tseytlin, E., Cunningham, D., Iyer, K., Carter, C. S., Schneider, W., and Cohen, J. D. (2003). Fiswidgets: a graphical computing   environment for neuroimaging analysis. Neuroinformatics 1, 111\u2013125. Available at: http:\/\/grommit.lrdc.pitt.edu\/.","cites":null},{"id":944987,"title":"Monofractal and multifractal dynamics of low frequency endogenous brain oscillations in functional MRI.","authors":[],"date":"2008","doi":"10.1002\/hbm.20593","raw":"Wink, A. M., Bullmore, E., Barnes, A., Bernard, F., and Suckling, J. (2008). Monofractal and multifractal dynamics of low frequency endogenous brain oscillations in functional MRI. Hum. Brain Mapp. 29, 791\u2013801. Conflict of Interest Statement: The authors declare that the research was conducted in the absence of any  commercial or financial relationships that could be construed as a potential conflict of interest.","cites":null},{"id":940280,"title":"Notes on the Eclipse Plug-in Architecture (Eclipse Corner Article). Available at: http:\/\/www.","authors":[],"date":"2003","doi":null,"raw":"Bolour, A. (2003). Notes on the Eclipse Plug-in Architecture (Eclipse Corner Article). Available at: http:\/\/www. eclipse.org\/articles\/Article-Plug-inarchitecture\/plugin_architecture. html.","cites":null},{"id":941011,"title":"Orbitofrontal dysfunction in patients with obsessivecompulsive disorder and their unaffected relatives.","authors":[],"date":"2008","doi":"10.1126\/science.1154433","raw":"Chamberlain, S. R., Menzies, L., Hampshire,  A., Suckling, J., Fineberg,  N. A., del Campo, N., Aitken, M., Craig, K., Owen, A. M., Bullmore, E. T., Robbins, T. W., and Sahakian, B. J. (2008). Orbitofrontal dysfunction in patients with obsessivecompulsive disorder and their unaffected relatives. Science 321, 421\u2013422.","cites":null},{"id":945233,"title":"paper pending published: 26","authors":[],"date":"2009","doi":null,"raw":"Received: 31 March 2009; paper pending published: 26 June 2009; accepted: 02 August 2009; published online: 28 August 2009.","cites":null},{"id":943431,"title":"PDE Does Plug-ins (Eclipse Corner Article). Available at:","authors":[],"date":"2003","doi":null,"raw":"Melhem, W., and Glozic, D. (2003). PDE Does Plug-ins (Eclipse Corner Article). Available at: http:\/\/www. eclipse.org\/articles\/Article-PDEdoes-plugins\/PDE-intro.html. PDE project website at http:\/\/www.eclipse. org\/pde\/.","cites":null},{"id":944812,"title":"Permutation testing of orthogonal, factorial effects in a language processing experiment using fMRI.","authors":[],"date":"2006","doi":"10.1002\/hbm.20252","raw":"Suckling, M., Davis, M., Ooi, C., Wink, A. M., Fadili, J., Salvador, R., Welchew, D., Sendur, L., Maxim, V., and Bullmore, E. (2006). Permutation testing of orthogonal, factorial effects in a language processing experiment using fMRI. Hum. Brain Mapp. 27, 425\u2013433.","cites":null},{"id":944602,"title":"Permutation tests for factorially designed neuroimaging experiments.","authors":[],"date":"2004","doi":"10.1002\/hbm.20027","raw":"Suckling, J., and Bullmore, E. (2004). Permutation tests for factorially designed neuroimaging experiments. Hum. Brain Mapp. 22, 193\u2013205.","cites":null},{"id":942259,"title":"Software Foundation","authors":[],"date":"2007","doi":null,"raw":"Free Software Foundation (2007). GNU General Public License. Available at: http:\/\/www.gnu.org\/licenses\/gpl. html.","cites":null},{"id":942415,"title":"Statistical parametric maps in functional imaging: a general linear approach.","authors":[],"date":"1995","doi":"10.1002\/hbm.460020402","raw":"Friston, K. J., Holmes, A. P., Worsley, K. J., Poline, J. B., Frith, C., and Frackowia, R. S. J. (1995). Statistical parametric maps in functional imaging: a general linear approach. Hum.","cites":null},{"id":942950,"title":"The Graphical Editing Framework.","authors":[],"date":"2004","doi":null,"raw":"Hudson, R. (2004). The Graphical Editing Framework. EclipseCon 2\u20135 February 2004, Anaheim, CA, USA. Available at: http:\/\/www.eclipsecon.org\/2004\/ EclipseCon_2004_TechnicalTrackPre sentations\/47_Hudson.pdf.Frontiers in Neuroinformatics  www.frontiersin.org  August 2009  | Volume 3  |  Article 27  |  10 Ooi et al.  CamBAfx International Business Machines (2006). Eclipse Platform Technical Overview (Eclipse White Paper). Available at: http:\/\/www.eclipse.org\/articles\/ Whitepaper-Platform-3.1\/eclipseplatform-whitepaper.pdf.","cites":null},{"id":943960,"title":"The LONI pipeline processing environment.","authors":[],"date":"2000","doi":"10.1016\/s1053-8119(03)00185-x","raw":"Rex, D. E., Ma, J. Q., and Toga, A. W. (2000). The LONI pipeline processing environment. Neuroimage 19, 1033\u20131048. Available at: http:\/\/ pipeline.loni.ucla.edu\/.","cites":null},{"id":944154,"title":"Tract-based spatial statistics: voxelwise analysis of multi- subject diffusion data. Neuroimage 31, 1487\u20131505. Available at: http:\/\/www. fmrib.ox.ac.uk\/fsl\/tbss\/index.html. Implementation described her is based on the version in 2007: http:\/\/web.","authors":[],"date":"2006","doi":null,"raw":"(2006). Tract-based spatial statistics: voxelwise analysis of multi-  subject diffusion data. Neuroimage 31, 1487\u20131505. Available at: http:\/\/www. fmrib.ox.ac.uk\/fsl\/tbss\/index.html. Implementation described her is based on the version in 2007: http:\/\/web. archive.org\/web\/20070703045209\/ http:\/\/www.fmrib.ox.ac.uk\/fsl\/tbss\/ index.html.","cites":null},{"id":943705,"title":"White matter abnormalities in patients with obsessive-compulsive disorder and their first-degree relatives.","authors":[],"date":"2008","doi":"10.1176\/appi.ajp.2008.07101677","raw":"Menzies, L., Williams, G., Chamberlain, S., Ooi, C., Fineberg, N., Suckling, J., Sahakian, B., Robbins, T., and Bullmore, E. (2008). White matter abnormalities in patients with obsessive-compulsive disorder and their first-degree relatives. Am.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2009-08-28","abstract":"CamBAfx is a workflow application designed for both researchers who use workflows to process data (consumers) and those who design them (designers). It provides a front-end (user\\ud\ninterface) optimized for data processing designed in a way familiar to consumers. The back-end\\ud\nuses a pipeline model to represent workfl ows since this is a common and useful metaphor used\\ud\nby designers and is easy to manipulate compared to other representations like programming\\ud\nscripts. As an Eclipse Rich Client Platform application, CamBAfx\u2019s pipelines and functions can\\ud\nbe bundled with the software or downloaded post-installation. The user interface contains all the\\ud\nworkfl ow facilities expected by consumers. Using the Eclipse Extension Mechanism designers\\ud\nare encouraged to customize CamBAfx for their own pipelines. CamBAfx wraps a workfl ow\\ud\nfacility around neuroinformatics software without modifi cation. CamBAfx\u2019s design, licensing\\ud\nand Eclipse Branding Mechanism allow it to be used as the user interface for other software,\\ud\nfacilitating exchange of innovative computational tools between originating labs","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/54271.pdf","fullTextIdentifier":"http:\/\/eprints.lincoln.ac.uk\/2666\/1\/CamBAfx__Workflow_design%2C_implementation_and_application_for_neuroimaging_Full_paper.pdf","pdfHashValue":"8834128210528e36a49cfd9733df514e64c87925","publisher":"Frontiers Research Foundation","rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:eprints.lincoln.ac.uk:2666<\/identifier><datestamp>\n      2013-03-13T08:39:33Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      7375626A656374733D6A6163735F47:6A6163735F47343030<\/setSpec><setSpec>\n      7375626A656374733D6A6163735F42:6A6163735F42313430<\/setSpec><setSpec>\n      74797065733D61727469636C65<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/eprints.lincoln.ac.uk\/2666\/<\/dc:relation><dc:title>\n        CamBAfx: workflow design, implementation and application for neuroimaging<\/dc:title><dc:creator>\n        Ooi, Cinly<\/dc:creator><dc:creator>\n        Bullmore, Edward<\/dc:creator><dc:creator>\n        Wink, Alle-Meije<\/dc:creator><dc:creator>\n        Sendur, Levent<\/dc:creator><dc:creator>\n        Barnes, Anna<\/dc:creator><dc:creator>\n        Achard, Sophie<\/dc:creator><dc:creator>\n        Aspden, John<\/dc:creator><dc:creator>\n        Abbott, Sanja<\/dc:creator><dc:creator>\n        Yue, Shigang<\/dc:creator><dc:creator>\n        Kitzbichler, Manfred<\/dc:creator><dc:creator>\n        Meunier, David<\/dc:creator><dc:creator>\n        Maxim, Voichita<\/dc:creator><dc:creator>\n        Salvador, Raymond<\/dc:creator><dc:creator>\n        Henty, Julian<\/dc:creator><dc:creator>\n        Tait, Roger<\/dc:creator><dc:creator>\n        Subramaniam, Naresh<\/dc:creator><dc:creator>\n        Suckling, John<\/dc:creator><dc:subject>\n        G400 Computer Science<\/dc:subject><dc:subject>\n        B140 Neuroscience<\/dc:subject><dc:description>\n        CamBAfx is a workflow application designed for both researchers who use workflows to process data (consumers) and those who design them (designers). It provides a front-end (user\\ud\ninterface) optimized for data processing designed in a way familiar to consumers. The back-end\\ud\nuses a pipeline model to represent workfl ows since this is a common and useful metaphor used\\ud\nby designers and is easy to manipulate compared to other representations like programming\\ud\nscripts. As an Eclipse Rich Client Platform application, CamBAfx\u2019s pipelines and functions can\\ud\nbe bundled with the software or downloaded post-installation. The user interface contains all the\\ud\nworkfl ow facilities expected by consumers. Using the Eclipse Extension Mechanism designers\\ud\nare encouraged to customize CamBAfx for their own pipelines. CamBAfx wraps a workfl ow\\ud\nfacility around neuroinformatics software without modifi cation. CamBAfx\u2019s design, licensing\\ud\nand Eclipse Branding Mechanism allow it to be used as the user interface for other software,\\ud\nfacilitating exchange of innovative computational tools between originating labs.<\/dc:description><dc:publisher>\n        Frontiers Research Foundation<\/dc:publisher><dc:date>\n        2009-08-28<\/dc:date><dc:type>\n        Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:format>\n        application\/pdf<\/dc:format><dc:language>\n        en<\/dc:language><dc:identifier>\n        http:\/\/eprints.lincoln.ac.uk\/2666\/1\/CamBAfx__Workflow_design%2C_implementation_and_application_for_neuroimaging_Full_paper.pdf<\/dc:identifier><dc:identifier>\n          Ooi, Cinly and Bullmore, Edward and Wink, Alle-Meije and Sendur, Levent and Barnes, Anna and Achard, Sophie and Aspden, John and Abbott, Sanja and Yue, Shigang and Kitzbichler, Manfred and Meunier, David and Maxim, Voichita and Salvador, Raymond and Henty, Julian and Tait, Roger and Subramaniam, Naresh and Suckling, John  (2009) CamBAfx: workflow design, implementation and application for neuroimaging.  Frontiers in Neuroinformatics, 3 .   pp. 1-10.  ISSN 1662-5196  <\/dc:identifier><dc:relation>\n        http:\/\/frontiersin.org\/neuroscience\/neuroinformatics\/paper\/10.3389\/neuro.11\/027.2009\/<\/dc:relation><dc:relation>\n        10.3389\/neuro.11.027.2009<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/eprints.lincoln.ac.uk\/2666\/","http:\/\/frontiersin.org\/neuroscience\/neuroinformatics\/paper\/10.3389\/neuro.11\/027.2009\/","10.3389\/neuro.11.027.2009"],"year":2009,"topics":["G400 Computer Science","B140 Neuroscience"],"subject":["Article","PeerReviewed"],"fullText":"Frontiers in Neuroinformatics www.frontiersin.org August 2009 | Volume 3 | Article 27 | 1\nNEUROINFORMATICS\nORIGINAL RESEARCH ARTICLE\npublished: 28 August 2009\ndoi: 10.3389\/neuro.11.027.2009\nWhilst workfl ows are important tools for both designers and con-\nsumers in their own right, they also form a vital line of  communication \nwithin the neuroimaging community to disseminate new algorithms \nor pipelines, optimised module parameters and standardised pro-\ncedures. A workfl ow represents the collective wisdom on how to \nperform a data analysis task and documents the process allowing \nexperience to be reused, transferred, and consolidated.\nA review of workfl ow applications reveals that the majority of \nexisting workfl ow environments are effective at modifying pipe-\nlines, but not optimised for processing large amounts of data. \nCamBAfx is an Eclipse (International Business Machines, 2006) \nRich Client Platform (RCP, McAffer and Lemieux, 2005) based \nworkfl ow application that provides both a front-end (user inter-\nface) optimized for data processing and a back-end pipeline model \nto facilitate creation and manipulation of pipelines. Additionally, it \noffers the fl exibility of using different process strategies (for exam-\nple, single machine scripting or grid-based computing) within the \nsame pipeline description.\nWe begin with a brief overview of alternative workfl ow appli-\ncations providing context for the objectives of CamBAfx. The \noperation of CamBAfx from the viewpoint of consumers is then \nconsidered showing how the user interface helps in the analysis \nof their data. For designers, discussion is orientated towards the \ndelivery of the pipelines and workfl ows to consumers through the \ndeployment of Eclipse-based facilities. Examples of delivering pipe-\nlines from a variety of neuroinformatics packages are given and \nconcluding remarks made on future directions.\nINTRODUCTION\nWorkfl ows are the combination of pipelines (i.e. modules repre-\nsenting individual programs with connecting pipes representing \ndata transfer from one module to another) and data control systems \nthat coordinate data processing on local or distributed computer \narchitectures. Neuroimaging brings together two broad scientifi c \nconstituencies: the design and implementation of workfl ows and \nthe application of these workfl ows to brain imaging datasets. \nCorrespondingly, the demands made upon workfl ow-based soft-\nware change according to circumstances.\nConceptually, workfl ows are a useful way to gain traction over \ncomplex data analysis tasks. By decomposing the workfl ow into \nconstituent parts, the problem is reduced to the creation and \nmaintenance of small, simple programs that can be reused across \nworkfl ows. To workfl ow designers (designers), the development \nenvironment should offer uncomplicated integration of their pro-\ngrams into existing pipelines, quick construction of new pipelines \nfrom existing modules and facilities for rapid testing, validation \nand deployment of workfl ows.\nFor those who apply workfl ows (consumers), the small effect \nsizes and large between-subject variance associated with most \nneuroimaging techniques call for a simple system for entering \ndata into the workfl ow at low error rates and data control systems \nthat emphasize high dataset throughput. Ideally, all workfl ows \nshould follow a common ontology and it should be possible to use \nthe same workfl ows with different data control systems without \nmodifi cation.\nCamBAfx: workfl ow design, implementation and application \nfor neuroimaging\nCinly Ooi1,2*, Edward T. Bullmore1,2, Alle-Meije Wink3, Levent Sendur1,2, Anna Barnes1,2, Sophie Achard1,2, \nJohn Aspden4, Sanja Abbott2, Shigang Yue5, Manfred Kitzbichler2, David Meunier1,2, Voichita Maxim1,2, \nRaymond Salvador2, Julian Henty1,2, Roger Tait1,2, Naresh Subramaniam2 and John Suckling1,2\n1 Brain Mapping Unit, Department of Psychiatry, University of Cambridge, Cambridge, UK\n2 Behavioural and Clinical Neuroscience Institute, University of Cambridge, Cambridge, UK\n3 Imaging Sciences Department, MRC Clinical Sciences Centre, Imperial College, London, UK\n4 J.L. Aspden Ltd, Cambridge, UK\n5 Department of Computing and Informatics, University of Lincoln, Lincoln, UK\nCamBAfx is a workfl ow application designed for both researchers who use workfl ows to \nprocess data (consumers) and those who design them (designers). It provides a front-end (user \ninterface) optimized for data processing designed in a way familiar to consumers. The back-end \nuses a pipeline model to represent workfl ows since this is a common and useful metaphor used \nby designers and is easy to manipulate compared to other representations like programming \nscripts. As an Eclipse Rich Client Platform application, CamBAfx\u2019s pipelines and functions can \nbe bundled with the software or downloaded post-installation. The user interface contains all the \nworkfl ow facilities expected by consumers. Using the Eclipse Extension Mechanism designers \nare encouraged to customize CamBAfx for their own pipelines. CamBAfx wraps a workfl ow \nfacility around neuroinformatics software without modifi cation. CamBAfx\u2019s design, licensing \nand Eclipse Branding Mechanism allow it to be used as the user interface for other software, \nfacilitating exchange of innovative computational tools between originating labs.\nKeywords: workfl ow, eclipse, rich client platform, batch processing, camba, open source, pipeline\nEdited by:\nJohn Van Horn, University of California, \nUSA\nReviewed by:\nIvo Dinov, University of California, USA\nJohn Van Horn, University of California, \nUSA\n*Correspondence:\nCinly Ooi, Brain Mapping Unit, \nHerchel Smith Building for Brain And \nMind Sciences, University Forvie Site, \nRobinson Way, Cambridge CB2 \n0SZ, UK.\ne-mail: co224@cam.ac.uk\nFrontiers in Neuroinformatics www.frontiersin.org August 2009 | Volume 3 | Article 27 | 2\nOoi et al. CamBAfx\nWORKFLOW ENVIRONMENTS\nWorkfl ows are normally visualised as pipelines, i.e., a collection of \nmodules with pipes to represent the data fl ow from output ports \nof one module to the input ports of another. Traditionally, Visual \nPipeline Editors (VPEs) are used to manipulate pipelines. VPEs \nrepresent pipelines graphically, usually with boxes as modules, lines \nas pipes, and small shapes inside the module box as input and \noutput ports. Users modify workfl ows by manipulating this graphi-\ncal representation, such as adding modules or re-routing pipes. \nCommercially available software offers workfl ow capability in two \ndifferent ways: either specialised for workfl ow operations (National \nInstruments\u2019 LabView)1, with a VPE as the main user interface \nand programming interface for module creation and different data \nprocessing strategies, or as extensions to existing programming lan-\nguages (Simulink)2 that provide VPEs and programming interfaces \nfor modules to accommodate pipelines.\nThe LONI Pipeline (Rex et al., 2000) looks and behaves like a \ntraditional Visual Pipeline Editor. To enter data, consumers click \non input ports which then request single values or a list of values. \nBatch processing is achieved by asking the input port of a module \nto interpret a list of values one-at-a-time instead of all-at-once. For \nbatch-processing, LONI Pipeline offers the run-on-machine method, \nincluding via a script containing the individual processing instruc-\ntions, as well as grid processing. It uses Extensible Markup Language \n(XML, Bray et al., 2008) to describe the pipeline as a combination \nof modules, connections, ports and data. Conveniently, meta-data \nabout modules such as their creators and the software suite to which \nthe modules belong can also be stored. LONI Pipeline modules may \nbe downloaded separately to augment the main package.\nFiswidgets (Fissell et al., 2003) visualizes its pipeline as a linear \nstack without pipes or ports. Modules need not be activated in the \norder the visual representation implies. Clicking on modules brings \nup a module window that asks for data and parameters. Fiswidgets\u2019 \nmodules are defi ned in Java or in XML and describe the layout of \nthe module window. For batch-processing a visual programming \napproach is adopted with loop structures for iteration within the \npipeline. Inside the module windows, symbols defi ne inputs and \noutputs. During data processing the symbols are substituted with \nthe corresponding values from a lookup table. Fiswidgets distrib-\nutes modules as part of the main software.\nBrainVISA (Cointepas et al., 2001) has a collection of workfl ows \neach with a \u201cconfi guration page\u201d that presents a workfl ow as a tree \nof modules. Important module parameters can be attached as leaves \nto the module in the tree, others in an associated detail page. Batch \nprocessing is initiated by duplicating the \u201cconfi guration page\u201d for \neach dataset. BrainVISA\u2019s pipeline is implemented in the form of \nPython scripts. Pipelines are delivered in toolboxes bundled with \nthe software or downloaded post-installation. The toolbox itself is \na directory of confi guration fi les, binary fi les, text fi les, help fi les \nand python scripts. BrainVISA has an optional database for man-\naging datasets that uses a data ontology and provides software for \nconversion between images fi le formats.\nIn summary, based on the applications\u2019 look-and-feel both LONI \nand FisWidgets give strong emphasis to pipeline  manipulation \nwhile softwares like BrainVISA prioritise clear data entry. Finally, \nan established way to deliver workfl ow-based software is to write a \ncustom user interface for each workfl ow; some program interfaces \nin FSL (Smith et al., 2004) and SPM (Friston et al., 1995) fall into \nthis category.\nCamBAfx is a user interface for neuroinformatics software \ndesigned to support multiple pipelines and to provide the facilities \nneeded to support workfl ow operation; namely, data management \nand batch processing. The philosophy is to provide the shortest \npossible bridge between designers and consumers, iteratively \nimproving processing with pipelines via software development \nand practical experience. CamBAfx aims to provide resource in \nequal measure to both constituencies.\nCamBAfx\nOBJECTIVES\nWorkfl ows evolve as algorithms are developed and applications \nbecome more demanding. A Workfl ow environment must therefore \nbe able to maintain fl exibility for development while being able \nto include new applications without modifi cation and maintain a \nconsistent user interface across all pipelines. Thus, a major objec-\ntive in the design of CamBAfx is to provide for consumers\u2019 needs \nat the front-end, while exploiting the fl exibility of workfl ows at \nthe back-end in order to deliver the pipeline assembly capability \nfor designers. As expectations change, the environment should be \nfl exible enough to refocus these different aspects from front-end \nto back-end and vice-versa.\nThe user interface practices a minimalist philosophy: the  initial \ndownload is a complete, ready-to-use package but only con-\ntains those functions that are needed immediately to get started. \nConsumers customise the interface as dictated by their needs.\nGeneric functions to manage pipelines and data are provided. \nDesigners are encouraged to make their pipelines more attractive \nby adding supporting functions.\nThe environment should reuse existing industrial-grade soft-\nware and follow existing and de facto standards and practices. \nAvailability of an Integrated Development Environment (IDE) \nthat supports day-to-day programming work such as debugging, \nversion control and automation of mundane tasks greatly improves \ndevelopers\u2019 productivity.\nFRONT-END: RESOURCES FOR WORKFLOW CONSUMERS\nOur observations indicate that normal practice for workfl ow con-\nsumers is to maintain a library of workfl ows. Once a workfl ow \nhas been demonstrated as robust and capable, its composition \nand parameters are infrequently reconfi gured suggesting that it \nwould not be appropriate to focus on workfl ow manipulation \ncapability for these users. Instead, the biggest workload under-\ntaken by consumers is to enter specifi c data instances into the \nworkfl ow and to ensure the data is valid to maximize the suc-\ncess rate of processing. Thus, the front-end of CamBAfx has as \nits most important undertaking the acceptance and validation of \ndata entered by consumers. Careful validation of the data reduces \nthe number of problematic datasets in a multi-subject dataset, but \ncannot completely eliminate them. The problems that then arise \nare corrected between repeats of batch processing. The challenge \nis to design a system that accommodates multiple repeats, but \n1http:\/\/www.ni.com\/labview\/\n2http:\/\/www.mathworks.co.uk\/products\/simulink\/\nFrontiers in Neuroinformatics www.frontiersin.org August 2009 | Volume 3 | Article 27 | 3\nOoi et al. CamBAfx\nA  New\npipeline\nB  Select Pipeline\nC  Configure Pipeline\nE  Pipeline Scheme\nD  Input Table\nFIGURE 1 | Steps in operation by consumers to select, create and modify workfl ows. See text for details.\nreduces unnecessary reprocessing of datasets already successfully \nprocessed. This overall process maps well onto a traditional soft-\nware usage pattern:\n(1) select a workfl ow and confi gure it\n(2) enter the data into the interface\n(3) run the processing in batch mode\nSelecting and confi guring workfl ows\nIn CamBAfx, the process starts by selecting a pipeline from a library \nof pipelines using a New Wizard (Figures 1A,B). A pipeline-specifi c \nwizard (Figure 1C) is then used to guide the confi guration of the \npipeline, including a review of the important module parameters \nand requests to supply values to parameters that cannot have default \nvalues. CamBAfx requires pipeline designers to guarantee that the \nFrontiers in Neuroinformatics www.frontiersin.org August 2009 | Volume 3 | Article 27 | 4\nOoi et al. CamBAfx\npipeline created at the end of this process is valid and immediately \nuseable.\nData entry via the interface\nThe pipeline itself is not graphically represented. Instead an Input \nTable (Figure 1D) is presented where all the data necessary for \nbatch processing is specifi ed. The Input Table is customised to \nthe workfl ow, although there is consistency across the instances \nof the interface for each pipeline. In general, each row refers to \nthe data for a particular imaging dataset. A table cell only displays \nthe appropriate interactive element determined by the pipeline \nto solicit data (e.g. text boxes, drop-down lists of choices, fi le and \ndirectory selection dialogs). If the data required is a list, then a \nnew table with one column is presented with the same interactive \nelement facilities as the Input Table. If there are two or more list-\nbased data required, they can each use a separate table or share a \nmulti-column table.\nTo improve the chances for successful data processing the table \ncells accept or reject data following input. This can be as simple \nas rejecting letters when numbers are expected or enforcing spe-\ncifi c restrictions imposed by the pipeline, such as minimum and \nmaximum values or lengths. Error messages, possibly containing a \nmessage from the pipeline designer, are displayed to the user where \navailable. The Input Table additionally contains a free-text cell enti-\ntled \u201cNotes\u201d where annotations can be made about the dataset.\nAssociated with each dataset is a \u201cPipeline Schemes\u201d (Figure 1E). \nThis is a drop-down list with preconfi gured schemes that defi ne the \nprecise list of modules activated in the processing of that dataset. \nBy default, the two schemes that bound the possible processing \nare available; namely, one that activates all modules and another \nthat entirely bypasses all the modules. Pipeline designers can add \nnew schemes that activate only part of the pipeline and in doing so \nlead to more effi cient analyses of datasets that have been partially \nprocessed previously.\nA drop-down box below the Input Table (Figure 2A) is used to \nhost functions that work on the Input Table as a whole. A function \nto copy data from another instance of the same pipeline is avail-\nable. Pipeline designers can add pipeline-specifi c functions into \nthis drop-down box. The table of parameters (Figure 2B) can also \nbe invoked from here. Parameters are variables for modules that \nremain constant throughout processing of the datasets (e.g. a spatial \nsmoothing kernel). In keeping with the philosophy of a pipeline-\ncentric view, this table shows all parameters for all modules. It \nuses a two column format with one parameter per row. The fi rst \ncolumn contains the parameter name and the second its value. The \ntable offers the same interactive elements and validation facilities \nas the Input Table. For parameters that must share the same value, \nonly one will be listed and any modifi cation here is propagated to \nall parameters.\nBatch mode processing\nOnce data entry is complete, the workfl ow is initiated via the \u201cRun \nWizard\u201d (Figures 3A,B,C). Here additional information required \nby the data processing engine, such as the summary output direc-\ntory name, will be requested. Currently, the data processing engine \noperates by script generation and execution.\nA  Dropdown Box\nB  Parameter Table\nFIGURE 2 | Steps in operation by consumers to modify parameters for the workfl ow. See text for details.\nFrontiers in Neuroinformatics www.frontiersin.org August 2009 | Volume 3 | Article 27 | 5\nOoi et al. CamBAfx\nOther practical issues\nCamBAfx is a self-extracting archive available for download3 con-\ntaining both CamBAfx, the workfl ow environment, and a set of \npipelines based on modules of the CamBA software (Suckling and \nBullmore, 2004; Suckling et al., 2006). Also included are support-\ning functions such as functions to copy the results of one pipeline \nas the input to another. New pipelines and functions are delivered \npost-installation as plug-ins that are downloaded, dropped into the \noriginal installation and included into the distribution following a \nrestart of the software. Most plug-ins orientated towards consumers \nmodify the user interface to advertise their availability.\nBACK-END: RESOURCES FOR WORKFLOW DESIGNERS\nOut of the box, CamBAfx has all the generic facilities needed to man-\nage workfl ows. For all pipelines, CamBAfx provides all the expected \nfacilities to confi gure pipelines as well as collect, collate and batch-\nprocess datasets that together form the workfl ow. However, since \nthe Eclipse Extension Mechanism (EEM, Bolour, 2003) gives access \nto the user interface and allows them to contribute new functions, \nCamBAfx plug-ins customize the user interface to support the spe-\ncifi c processing requirements of each pipeline and implement sup-\nport facilities such as data imports from other pipelines.\nPipeline features\nAll information CamBAfx needs is contained in the pipeline \nfi le, written in XML, with three sections: Pipeline, Input Data \nand Preferences. The Pipeline section represents the pipeline as \na collection of modules and connections. The modules are fur-\nther decomposed into variables (i.e. installation specifi c values), \nparameters, input and output ports, and how to invoke the pro-\ngram. Almost everything describing the pipeline is in XML except \nfor complex data manipulation, such as generating the command 3http:\/\/www-bmu.psychiatry.cam.ac.uk\/software\/\nA   Run Pipeline\nB   Run Wizard\nC   Run Output\nFIGURE 3 | Steps in operation by consumers to run the workfl ow. See text for details.\nFrontiers in Neuroinformatics www.frontiersin.org August 2009 | Volume 3 | Article 27 | 6\nOoi et al. CamBAfx\nline instructions, where Java program code is used in the form of \na BeanShell Script4. Variables, parameters, input and output ports \nall carry datatype information (e.g., integer or string) and include \nrestrictions on the data. All pipeline components can have varia-\ntions on, for example, datatypes, modules (input or standard) and \nports (data or signals). They start with a XML element with the \nsame name, but with an attribute that identifi es the variant. The \nattached XML leaf elements change according to the variant. The \nInput Data section simply contains a description of each dataset \nas displayed by the Input Table. The Preference section contains \noptional information about the pipeline such as pipeline schemes \nand a list of linked parameters that should share the same value.\nSteps are taken to make the pipeline simpler and easier to \nunderstand: First, looping constructs, normally used to effect batch \nprocessing, but complicating data fl ow, are eliminated by insist-\ning that each dataset is processed through the complete workfl ow \nfrom beginning to end and that each input port can only have \none connection. Second, uncertainty about whether an input port \nneeds to be connected is removed by insisting that all ports need \nto be connected. To satisfy this, and to show where datasets enter \nthe pipeline, each pipeline has one (and only one) input module \nresponsible for communication with the outside world.\nData standard and datatype hierarchy\nFor effective data exchange between modules, CamBAfx has a Data \nStandard for all datatypes it uses that defi nes the fi le format and \nthe meta-data it must provide. For example, functional magnetic \nresonance imaging data (fMRI) is in 4D NifTI (Cox et al., 2004) \nsingle fi le format and must carry the sequence in which the slices \nof the three-dimensional volume were acquired, which is encoded \nas the slice_code meta-data. This approach guarantees the exact \ncontent available to designers for writing modules. In return, the \noutput from a module should also satisfy this standard and the \ndesigner is responsible for converting data to and from the data \nformat their program expects. Adhering to this data standard means \ndata can be easily exchanged between modules. Designers only have \nto convert their data to one other format, i.e. to the data stand-\nard only and not all possible data formats they might encounter. \nAlthough CamBAfx is organised to validate data against the data \nstandard following input, this is postponed until CamBAfx develops \nthe appropriate editors to edit the data in situ as consumers prefer \nto be able to do this if their data fail validation.\nDatatypes are organized into a hierarchy, with each datatype \nhaving only one parent and children must carry all data inherited \nfrom its parent as well as optional data of its own. A special equiva-\nlence is used to defi ne a unidirectional relationship between two \ndatatypes that do not share a common ancestry. This data hierarchy \ntree is used to prevent incompatible data transfer between modules \nin the VPE by restricting connection of output ports to input ports \nthat expect the same datatype or its parents.\nNew pipeline wizards\nA new pipeline can be created by cloning, i.e., loading the pipeline \ninto the user interface and then saving it under a new name. This \napproach may, however, also copy unwanted details from the old \npipelines, such as the specifi c dataset names and modifi cations to \nthe pipeline. Therefore in CamBAfx, the preferred approach is to \ncreate pipelines using a New Pipeline Wizard where the new pipe-\nline is cloned from a clean copy of the parent pipeline and can be \nmanipulated if necessary before being presented to consumers.\nCamBAfx DESIGN AND ARCHITECTURE\nEclipse and eclipse rich client platform\nCamBAfx is an Eclipse Rich Client Platform (RCP, McAffer and \nLemieux, 2005) application. Eclipse5 (International Business \nMachines, 2006) was originally created as an IDE with an exten-\nsion mechanism (Eclipse Extension Mechanism, EEM, also known \nas Eclipse Plug-in Architecture, Bolour, 2003) designed to integrate \ndevelopment tools. The EEM is a way of extending an Eclipse-\naware program. A program that supports extensions publishes an \nextension point and its expectation. Interested parties then provide \nextension(s) that latch on to this extension point. Extensions can \nprovide confi guration information or program code or both and \ntogether with their supporting data, such as icons and programs, \nare packaged into plug-ins.\nEclipse itself is designed as a collection of plug-ins, with the \nexception of a small kernel that starts up and bootstraps the EEM. \nAfter bootstrapping, the EEM discovers and manages all the installed \nplug-ins. It then searches the command that invoked it, and if neces-\nsary a confi guration fi le, to fi nd the master application. This is read \nthrough the EEM and executed. In the original design there was \nonly one master application: the Eclipse IDE. However, the Eclipse \nExtension Mechanism proved suffi ciently useful as a platform for \ndevelopment of standard programs that it was exploited by the \nRich Client Platform (RCP) project. The RCP project allows other \napplications, such as CamBAfx, to be the master application.\nAll RCP applications are programs built using the EEM, and \nall share a common architecture and plumbing. RCP developers \nsimply write the missing part, i.e. the program code specifi c to their \nproject and insert it into the RCP framework.\nCamBAfx as a RCP application\nCamBAfx, like all RCP applications, is actually a collection of plug-\nins. For example, all CamBA\u2019s command line programs, pipelines \nand supporting functions are encapsulated into Eclipse plug-ins and \nmanaged through the EEM. Tasks such as creating a New Pipeline \nWizard are performed by extending CamBAfx using EEM.\nThe Eclipse extension point org.eclipse.core.runtime.applications, \nis the only mandatory extension point allowing CamBAfx to be \ninvoked as a master application. CamBAfx also uses other Eclipse \nextension points such as org.eclipse.ui.editors for the main Input \nTable and org.eclipse.ui.actionSets to add menu and toolbars items. \nCamBAfx also defi nes its own extension points including the org.\ngenericfx.ui.inputtable.taskagents extension point which adds items \nto the Input Table\u2019s drop-down box. Extension points, such as org.\ngenericfx.data.hierarchy which defi ne the datatype hierarchy custom-\nize CamBAfx for designers. CamBAfx also provides a special generic \nNew Pipeline Wizard for the org.eclipse.ui.newWizards extension \npoint eliminating the need to write generic wizards for pipelines by \nusing instead CamBAfx\u2019s org.genericfx.ui.base.newWizards extension \n4http:\/\/www.beanshell.org\/ 5http:\/\/www.eclipse.org\/\nFrontiers in Neuroinformatics www.frontiersin.org August 2009 | Volume 3 | Article 27 | 7\nOoi et al. CamBAfx\npoint to read in the pipeline from a fi le. Part of CamBAfx, such as \nnew items for the Input Table drop-down box, are constructed by \nextending its own extension points. All extension points, either those \nof Eclipse or CamBAfx, are available to downstream developers who \ncan also defi ne their own.\nDeveloping for CamBAfx\nAs standard Eclipse plug-ins, CamBAfx and its plug-ins are devel-\noped using Eclipse\u2019s Plug-in Development Environment (PDE, \nMelhem and Glozic, 2003) that is designed specifi cally to develop, \ntest and integrate plug-ins with their intended application. CamBAfx \nprovides an editor, integrated into the IDE, for development and \ntesting of pipelines. This editor has the Input Table and a rudimen-\ntary VPE. CamBAfx has two data processing engines: traditional \nbatch processing controlled directly by the program itself and a \nversion that writes and then executes the processing steps via scripts. \nBoth are callable from the IDE via its Run Wizard.\nEclipse also makes available supporting software facilities, such \nas an update mechanism and help browser. It provides tools for \nCamBAfx such as the Graphical Editor Framework6 (GEF, Hudson, \n2004) which is the basis of CamBAfx\u2019s VPE.\nDevelopers \u201cpick-and-mix\u201d CamBAfx plug-ins for their applica-\ntions. Architecturally, there are three major parts: Pipeline, Input \nTable and Data Processing Engine (Figure 4). These three parts are \nkept independent of each other with minimum communication \nbetween them. Conceptually, the software is developed in three \nlayers (Figure 5): At the bottom is GenericFX, a complete generic \npipeline application; BrainFX is the middle layer that customizes \nGenericFX for neuroinformatics applications by defi ning the data \nhierarchy, data standard and some commonly used routines, such \nas NifTI data conversion. CamBAfx is the top layer and contains \nonly CamBA-specifi c pipelines and functionalities. Third party \ndevelopers who do not need CamBA can create their applications \nfrom either GenericFX or BrainFX. The same Eclipse Branding \nMechanism (Eidsness and Rapicault, 2004) that defi nes CamBA\u2019s \nown About Dialog, splash screen and icons can be used to brand \nother applications.\nIMPLEMENTATION OF PIPELINES\nCamBA ANALYSIS PIPELINES\nCamBA is software for the analysis of neuroimaging data. The initial \ndownload contains a number of pipelines available for fi rst-level \n(within-subject) and second-level (between-subject) analysis for \nwhich CamBAfx provides customised interfaces. The CamBAfx \napplication running CamBA pipelines has been widely used in \nthe analysis of functional and structural MRI (examples include: \nChamberlain et al., 2008, 2009; Habets et al., 2008; Menzies et al., \n2008; Wink et al., 2008).\nCamBA\u2019s fi rst-level analysis pipelines\u2019 main purpose is to gen-\nerate maps that summarise responses or signal properties from \nraw 4D fMRI. For example, a \u201ctime-series analysis pipeline\u201d pre-\nprocesses the data removing subject movement related artefacts \nfollowed by response estimation with the general linear model. \nThe resulting effect maps are mapped into a standard stereotactic \nspace in readiness for second-level pipelines.\nConsumers start by choosing the \u201cgroup activation mapping\u201d \npipeline from the library of pipelines (Figures 1A,B). Its pipeline \nwizard (Figure 1C) can confi gure the pipeline to perform house-\nkeeping tasks to meet the Data Standard, such as inserting the correct \nslice_code into the fMRI 4D data and removing unwanted 3D \nscans from the start of the data. The Input Table (Figure 1D) asks \nfor the fMRI data and the design matrix fi le. Its Pipeline Schemes \nare carefully selected to activate parts of the pipeline according to \nthe specifi ed usage of the pipeline.\nAt the second level, pipelines that offer fl exibility in choosing \ndifferent statistical models present a more diffi cult challenge for \nparameter confi guration, with many parameters dependent on oth-\ners. The pipeline can be invalidated if the wrong combination of \nparameter values is chosen. The corresponding New Pipeline Wizard \ntherefore guides consumers by changing the display according to \nthe model required. At pipeline creation, the available parameter \nvalues are screened to remove incompatibilities. The Wizard adds, \nFIGURE 4 | Conceptually, CamBAfx application is constructed from of \nthree components: Pipeline, Input Table and Data Processing Engine, \nintegrated inside the Eclipse Rich Client Platform (RCP) framework. \nMinimal communication between each component allows components to be \nreplaced or removed. The separation between front-end (user interface) and \nback-end can be reconfi gured as needs change. \u201cS\u201d denotes supporting \nfunctions which can be attached to the application as plug-ins.\n6http:\/\/www.eclipse.org\/gef\/\nFIGURE 5 | Architecturally, CamBAfx is organized in three layers (Solid \nboxes): CamBAfx, BrainFX and GenericFX. CamBA is unmodifi ed and \ncompletely contained inside a plug-in in the CamBAfx layer. They are all built \non top of the Eclipse RCP Framework and developed inside Eclipse Integrated \nDevelopment Environment\u2019s (IDE) Plug-in Development Environment (dashed \nboxes). CamBAfx extends the Eclipse IDE with a Visual Pipeline Editor to \nvisualize the pipelines during their development and testing.\nFrontiers in Neuroinformatics www.frontiersin.org August 2009 | Volume 3 | Article 27 | 8\nOoi et al. CamBAfx\non request, new ports and connections to the pipeline that represent \nadditional variables. These variables also appear on the Input Table \nas additional columns. The majority of the Input Table columns are \nprogrammed to accept numbers only and where appropriate are fur-\nther restricted to a small range of values. In effect, the wizard creates \ndifferent variations of pipelines for the consumers. All second-level \npipelines insert an item into the drop-down box below the Input \nTable that can import results from fi rst-level pipelines.\nIn general, data generated by one software suite cannot be used \nby another because the data are stored as a different data type. The \nmost common data type mismatch is 32 bit and 64 bit fl oating-\npoint data and therefore CamBAfx provides a pipeline to convert \ndata between these formats. Additional information for performing \ndata type conversions from specifi c software suite is available inside \nthe Help Browser bundled with the core CamBAfx download.\nFor fi rst-level pipelines, the repetitive entering of data is assisted \nby a supporting function for automatically reading data into the \nInput Table from a directory-based data organization. Following \ndownload and installation, it adds itself to the drop-down box of \nthe Input Table. Another download adds a menu item to extract \nstatistics from data in predefi ned regions-of-interest (anatomical \nor identifi ed by statistical testing). Finally, users can download a \nmenu item that modifi es the NifTI header data in batch mode and \nchecks that the modifi cation satisfi es the data standard.\nIMPLEMENTATION OF FSL TRACK-BASED SPATIAL STATISTICS \nTo illustrate the fl exibility of the CamBAfx approach, a plug-in \n(TBSSfx) is available which repackages the tract-based spatial sta-\ntistics (TBSS, Smith et al., 2006) software for diffusion tensor image \nanalysis, available as part of the FSL package. Since TBSS is part of \nthe FSL pipeline, licensing restrictions require a separate download \nof FSL7. In brief, TBSS is a fi ve step process:\n(1) Input data is organised into a directory. Pre-processing sof-\ntware relocates input data into a subdirectory.\n(2) If there is a target image that defi nes the stereotactic space \nof the analysis, copy and rename into the subdirectory. The \ntarget image cannot be copied until step 1 is completed.\n(3) The analysis software is executed.\n(4) A design matrix and a contrast fi le are created and further \nanalysis takes place.\n(5) Call a collection of programs to perform voxel-wise statisti-\ncal analysis.\nThere are a number of restrictions on these steps, particularly with \nregard to the order in which they are conducted. Furthermore, con-\nstruction of the design matrix is interactive and unconstrained.\nTBSSfx is a collection of plug-ins with a plug-in used to host \nthe FSL archive, which the consumers download separately. TBSSfx \nsimplifi es data entry and automates the processing ensuring com-\npliance with the restrictions on the processing steps. For example, \nduring pipeline creation, TBSSfx asks the user to name the number \nof conditions (columns) for the design matrix and to specify the \ncontrast fi le and then validates this against the format of the design \nmatrix. The contrast fi le is defi ned at this stage (and not later in \nthe pipeline) to guarantee that the pipeline created is confi gured \n correctly. In the Input Table consumers enter the image data \nfi lename in the fi rst row with subsequent columns only accepting \nnumerical data corresponding to the design matrix.\nThe Run Wizard asks for an output directory, which is cleaned \nand populated with hard links to the actual data for speed and \neconomy of resources as well as ensuring that the original data are \npreserved. The design matrix fi le and contrast fi le are then created \nwith fi lenames constructed to maintain the list orders from the \nInput Table. The processing script manages data processing in a \nway consistent with the original TBSS process.\nDISCUSSION\nCamBAfx is an application that presents workfl ows according the \nneeds of users: designers or consumers. The initial download con-\nsists of the basic program only. New functionalities and pipelines \ncan be added post-installation maintaining the installation to a size \nadequate for local needs. This is made possible by the EEM which \nmanages plug-ins for consumers.\nThe overall organisation is as Input Table, Pipeline Confi guration \nand Data Processing Engine. The Input Table presents the full view \nof the datasets, allows users to take notes and fi ne tune the actual \nprocessing of individual datasets. Both Input Table and Parameter \nTable validate and reject invalid data. These are all designed to \nimprove the chances of successful data processing.\nCamBAfx packages neuroinformatics software, without modi-\nfi cation, inside plug-ins. Other CamBAfx plug-ins provide the \nbranding, the pipelines and their New Pipeline Wizards as well as \nsupporting functions. Pipelines are organized into directories and \neach pipeline comes with its own customized wizards.\nThe back-end\u2019s aim is to deliver workfl ows to the user. It uses \nthe traditional pipeline view of the workfl ow making modifi cations \nstraightforward. Facilities like data hierarchy, data standards and \npipeline simplifi cation strategies are designed to assist pipeline con-\nstruction and improve readability. Pipelines are written in XML for \nhuman-readability and can be manipulated programmatically.\nFor developers, CamBAfx supplies a generic set of functions for \ntheir pipelines. However, customization of CamBAfx is encouraged \nby developing supporting facilities. These supporting functions \nhave access to the user interface via Eclipse or CamBAfx extension \npoints.\nOrganising software in a consistent manner facilitates construc-\ntion of new pipelines from modules originating from different soft-\nware packages and is an important design objective for CamBAfx. \nAnalysis software is not merely repackaged, rather consumers and \ndesigners can integrate tools to generate custom workfl ows or \nundertake optimisation of pipelines through systematic compari-\nson of modules.\nUsing Eclipse RCP technology means that CamBAfx uses \nindustrial standard architecture reducing development time and \nensuring that the underlying technology is constantly updated \nand improved. Eclipse-based tools can be incorporated easily and \nCamBAfx can integrate with other Eclipse programs. Eclipse\u2019s \nPDE is a useful aid for developing CamBAfx and its plug-ins. \nCamBAfx\u2019s extensions for Eclipse IDE allows plug-in integra-\ntion to be debugged and tested using PDE. The source code is \norganized in a logical and fl exible manner to maximize reuse 7http:\/\/www.fmrib.ox.ac.uk\/fsl\/\nFrontiers in Neuroinformatics www.frontiersin.org August 2009 | Volume 3 | Article 27 | 9\nOoi et al. CamBAfx\n potential. Workfl ow applications can be developed from BrainFX \nor GenericFX if CamBA is not needed.\nCamBAfx is released under the terms of General Public License \n(GPL, Free Software Foundation, 2007) and specifi cally allows \ndesigners to integrate their pipelines before shipping. This removes \nproblems associated with consumers having to download pipelines \nand workfl ow applications separately and following instructions \nto integrate them to form the fi nal application.\nGenericFX, BrainFX, CamBAfx and TBSSfx can be downloaded \nfrom SourceForge.net8 or NITRC9.\nCONCLUSION\nCamBAfx is a workfl ow application designed to be the user interface \nthat services consumers\u2019 needs in the front-end by guiding them \nthroughout the whole process from pipeline creation, through data \nentry and validation, to data processing. At the back-end, workfl ow \ncreation and manipulation are made easier by adopting a pipe-\nline model complete with a strategy to understand and use a data \nstandard and data hierarchy as well as facilities to manipulate these \npipelines. Out of the box, CamBAfx provides all the generic facili-\nties expected of a workfl ow application for any pipeline although, \nuniquely, designers are encouraged to customize CamBAfx for their \nown pipelines. CamBAfx is built as an Eclipse RCP application and \nbenefi ts from industrial standard architecture and modern soft-\nware facilities, such as supporting post-installation modifi cation. \nEEM makes CamBAfx highly fl exible, confi gurable and extensible. \nDesigners use it to customise CamBAfx for their pipelines, to insert \nsupporting functions and to access the user interface. Moreover, by \nselecting components from CamBAfx and with the help of Eclipse \nBranding Mechanism, new workfl ow applications can be created. \nThe availability of PDE, designed to support Eclipse plug-in devel-\nopments, improves CamBAfx designers\u2019 productivity.\nFUTURE WORK\nNew versions of CamBAfx will use EEM more extensively. Small \nutility programs are being developed to check that the CamBAfx \ninstance is error free. The current XML pipeline descriptor can \ncontain two or more ways to describe the same data. This will be \nreduced to one as part of the effort to rationalise the XML descrip-\ntors. The new XML will use XML Namespace (Bray et al., 2006) \nand support XML Schema (Fallside and Walmsley, 2004) valida-\ntion. Meta-data such as the author\u2019s name and email, are managed \ncentrally using the Resource Description Framework (RDF, Beckett, \n2004), removing duplication and simplifying updates. RDF also \nstores the relationship between meta-data.\nACKNOWLEDGEMENTS\nThis neuroinformatics research was supported by a Human Brain \nProject grant from the National Institute of Mental Health and the \nNational Institute of Biomedical Imaging and Bioengineering. EB \nis employed 50% by GlaxoSmithKline and 50% by the University of \nCambridge. The work was conducted in the MRC\/Wellcome Trust \nBehavioural & Clinical Neurosciences Institute, Cambridge UK. This \nproject was awarded an IBM Eclipse Innovation Award 2003.\nSUPPLEMENTARY MATERIAL\nThe Supplementary Material for this article can be found online \nat http:\/\/www.frontiersin.org\/neuroinformatics\/paper\/10.3389\/\nneuro.11\/027.2009\/\n8http:\/\/sourceforge.net\/projects\/camba\/\n9http:\/\/www.nitrc.org\/projects\/camba\/\nREFERENCES\nBeckett, D. (ed.) (2004). RDF\/XML \nSyntax Specifi cation (Revised). W3C \nRecommendation 10 February 2004. \nAvailable at: http:\/\/www.w3.org\/\nTR\/2004\/REC-rdf-syntax- grammar-\n20040210\/. RDF Interest Group, \nhttp:\/\/www.w3.org\/RDF\/.\nBolour, A. (2003). Notes on the Eclipse \nPlug-in Architecture (Eclipse Corner \nArticle). Available at: http:\/\/www.\neclipse.org\/articles\/Article-Plug-in-\narchitecture\/plugin_architecture.\nhtml.\nBray, T., Hollander, D., Layman, A., and \nTobin, R. (eds) (2006). Namespaces \nin XML 1.0, 2nd Edn. W3C \nRecommendation 16 August 2006. \nAvailable at: http:\/\/www.w3.org\/\nTR\/2006\/RECxml-names-20060816\/. \nXML Core Working Group, http:\/\/\nwww.w3.org\/XML\/Core\/.\nBr ay, T. ,  Pao l i ,  J. ,  Sper berg-\nMcQueen, C. M., Maler, E., and \nYergeau, F. (2008). Extensible \nMarkup Language (XML) 1.0, 5th \nEdn. W3C Recommendation 26 \nNovember 2008. Available at: http:\/\/\nwww.w3.org\/TR\/REC-xml\/. XML \nCore Working Group, http:\/\/www.\nw3.org\/XML\/Core\/.\nChamberlain, S. R., Hampshire, A., \nM\u00fcller, U., Rubia, K., Del Campo, N., \nCraig, K., Regenthal, R., Suckling, J., \nRoiser, J. P., Grant, J. E., Bullmore, E. T., \nRobbins, T. W., and Sahakian, B. J. \n(2009). Atomoxetine modulates \nright inferior frontal activation dur-\ning inhibitory control: a pharmaco-\nlogical functional magnetic resonance \nimaging study. Biol. Psychiatry 65, \n550\u2013555.\nChamberlain, S. R., Menzies, L., \nHampshire , A. , Suckl ing , J. , \nFineberg, N. A., del Campo, N., \nAitken, M., Craig, K., Owen, A. M., \nBullmore, E. T., Robbins, T. W., and \nSahakian, B. J. (2008). Orbitofrontal \ndysfunction in patients with obsessive-\ncompulsive disorder and their unaf-\nfected relatives. Science 321, 421\u2013422.\nCointepas, Y., Mangin, J.-F., Garnero, L., \nPoline, J.-B., and Benali, H. (2001). \nBrainVISA: software platform for \nvisualization and analysis of multi-\nmodality brain data. Neuroimage \n13, S98. Available at: http:\/\/www. \nbrainvisa.info\/.\nCox, R. W., Ashbourner, J., Breman, H., \nFissell, K., Haselgrove, C., Holmes, C. J., \nLancaster, J. L., Rex, D. E., Smith, S. M., \nWoodward, J. B., and Strother, S. C. \n(2004). A (Sort of) New Image Data \nFormat Standard: NIfTI-1. 10th \nAnnual Meeting of the Organization \nfor Human Brain Mapping (OHBM \n2004), Budapest, Hungary, June \n13\u201317. Available at: http:\/\/nifti.nimh.\nnih.gov\/nifti-1\/documentation\/hbm_\nnifti_2004.pdf.\nEidsness, A., and Rapicault, P. (2004). \nBranding Your Application (Eclipse \nCorner Article). Available at: http:\/\/\nwww.eclipse.org\/articles\/Article-\nBranding\/branding-your- application.\nhtml.\nFallside, D. C., and Walmsley, P. (eds) \n(2004). XML Schema Part 0, Primer, \n2nd Edn. W3C Recommendation \n28 October 2004. Available at: \nhttp:\/\/www.w3.org\/TR\/2004\/REC-\n xmlschema-0-20041028\/. XML \nSchema Working Group, http:\/\/www.\nw3.org\/XML\/Schema\/.\nFissell, K., Tseytlin, E., Cunningham, D., \nIyer, K., Carter, C. S., Schneider, W., \nand Cohen, J. D. (2003). Fiswidgets: \na graphical computing  environment \nfor  neuro imag ing  ana lys i s . \nNeuroinformatics 1, 111\u2013125. Available \nat: http:\/\/grommit.lrdc.pitt.edu\/.\nFree Software Foundation (2007). GNU \nGeneral Public License. Available at: \nhttp:\/\/www.gnu.org\/licenses\/gpl.\nhtml.\nFriston, K. J., Holmes, A. P., Worsley, K. J., \nPoline, J. B., Frith, C., and \nFrackowia, R. S. J. (1995). Statistical \nparametric maps in functional imag-\ning: a general linear approach. Hum. \nBrain Mapp. 1995, 189\u2013210. Available \nat: http:\/\/www.fi l.ion.ucl.ac.uk\/spm\/.\nHabets, P., Krabbendam, L., Hofman, P., \nSuckling, J., Oderwald, F., Bullmore, \nE., Woodruff, P., Van Os, J., and \nMarcelis, M. (2008). Cognitive per-\nformance and grey matter density \nin psychosis: functional relevance \nof a structural endophenotype. \nNeuropsychobiology 58, 128\u2013137.\nHudson, R. (2004). The Graphical Editing \nFramework. EclipseCon 2\u20135 February \n2004, Anaheim, CA, USA. Available \nat: http:\/\/www.eclipsecon.org\/2004\/\nEclipseCon_2004_TechnicalTrackPre\nsentations\/47_Hudson.pdf.\nFrontiers in Neuroinformatics www.frontiersin.org August 2009 | Volume 3 | Article 27 | 10\nOoi et al. CamBAfx\nInternational Business Machines (2006). \nEclipse Platform Technical Overview \n(Eclipse White Paper). Available \nat: http:\/\/www.eclipse.org\/articles\/\nWhitepaper-Platform-3.1\/eclipse-\nplatform-whitepaper.pdf.\nMcAffer, J., and Lemieux, J.-M. (2005). \nEclipse Rich Client Platform \u2013 \nDesigning, Coding and Packaging \nJava Applications (Addison-Wesley \nProfessional). RCP website, Available \nat: http:\/\/wiki.eclipse.org\/index.\nphp\/Rich_Client_Platform.\nMelhem, W., and Glozic, D. (2003). \nPDE Does Plug-ins (Eclipse Corner \nArticle). Available at: http:\/\/www.\neclipse.org\/articles\/Article-PDE-\ndoes-plugins\/PDE-intro.html. PDE \nproject website at http:\/\/www.eclipse.\norg\/pde\/.\nMenzies, L., Williams, G., Chamberlain, S., \nOoi, C., Fineberg, N., Suckling, J., \nSahakian, B., Robbins, T., and \nBullmore, E. (2008). White mat-\nter abnormalities in patients with \n obsessive-compulsive disorder and \ntheir first-degree relatives. Am. \nJ. Psychiatry 165, 1308\u20131315.\nRex, D. E., Ma, J. Q., and Toga, A. W. \n(2000). The LONI pipeline process-\ning environment. Neuroimage 19, \n1033\u20131048. Available at: http:\/\/\npipeline.loni.ucla.edu\/.\nSmith, S. M., Jenkinson, M., Johansen-\nBerg, H., Rueckert, D., Nichols, T. E., \nMackay, C. E., Watkins, K. E., \nCiccarel l i , O., Cader, M. Z. , \nMatthews, P. M., and Behrens, T. E. J. \n(2006). Tract-based spatial statistics: \nvoxelwise analysis of multi- subject \ndiffusion data. Neuroimage 31, \n1487\u20131505. Available at: http:\/\/www.\nfmrib.ox.ac.uk\/fsl\/tbss\/index.html. \nImplementation described her is based \non the version in 2007: http:\/\/web.\narchive.org\/web\/20070703045209\/\nhttp:\/\/www.fmrib.ox.ac.uk\/fsl\/tbss\/\nindex.html.\nSmith, S . M. , Jenkinson, M. , \nWoolrich, M. W., Beckmann, C. F., \nBehrens, T. E. J., Johansen-Berg, H., \nBannister, P. R., De Luca, M., \nDrobnjak, I., Flitney, D. E., Niazy, R., \nSaunders, J., Vickers, J., Zhang, Y., \nDe Stefano, N., Brady, J. M., and \nMatthews, P. M. (2004). Advances \nin functional and structural MR \nimage analysis and implementation \nas FSL. Neuroimage 23, 208\u2013219. \nAvailable at: http:\/\/www.fmrib.ox.ac.\nuk\/fsl\/.\nSuckling, J., and Bullmore, E. (2004). \nPermutation tests for factorially \ndesigned neuroimaging experiments. \nHum. Brain Mapp. 22, 193\u2013205.\nSuckling, M., Davis, M., Ooi, C., \nWink, A. M., Fadili, J., Salvador, R., \nWelchew, D., Sendur, L., Maxim, V., \nand Bullmore, E. (2006). Permutation \ntesting of orthogonal, factorial effects \nin a language processing experiment \nusing fMRI. Hum. Brain Mapp. 27, \n425\u2013433.\nWink, A. M., Bullmore, E., Barnes, A., \nBernard, F., and Suckling, J. (2008). \nMonofractal and multifractal \n dynamics of low frequency endog-\nenous brain oscillations in func-\ntional MRI. Hum. Brain Mapp. 29, \n791\u2013801.\nConflict of Interest Statement: The \nauthors declare that the research was con-\nducted in the absence of any  commercial \nor financial relationships that could \nbe construed as a potential conflict of \ninterest.\nReceived: 31 March 2009; paper pend-\ning published: 26 June 2009; accepted: 02 \nAugust 2009; published online: 28 August \n2009.\nCitation: Ooi C, Bullmore ET, Wink A-M, \nSendur L, Barnes A, Achard S, Aspden J, \nAbbott S, Yue S, Kitzbichler M, Meunier D, \nMaxim V, Salvador R, Henty J, Tait R, \nSubramaniam N and Suckling J (2009) \nCamBAfx: workflow design, implemen-\ntation and application for neuroim-\naging. Front. Neuroinform. 3:27. doi: \n10.3389\/neuro.11.027.2009\nCopyright \u00a9 2009 Ooi, Bullmore, Wink, \nSendur, Barnes, Achard, Aspden, Abbott, \nYue, Kitzbichler, Meunier, Maxim, Salvador, \nHenty, Tait, Subramaniam and Suckling. \nThis is an open-access article subject to \nan exclusive license agreement between \nthe authors and the Frontiers Research \nFoundation, which permits unrestricted \nuse, distribution, and reproduction in any \nmedium, provided the original authors and \nsource are credited.\n"}