{"doi":"10.1016\/j.ces.2004.10.025","coreId":"140983","oai":"oai:dspace.lib.cranfield.ac.uk:1826\/868","identifiers":["oai:dspace.lib.cranfield.ac.uk:1826\/868","10.1016\/j.ces.2004.10.025"],"title":"Improved branch and bound method for control structure screening","authors":["Cao, Yi","Saha, Prabirkumar"],"enrichments":{"references":[{"id":37923183,"title":"A branch and bound algorithm for determining the optimal feature subset of given size.","authors":[],"date":"1984","doi":"10.2307\/2347457","raw":"Roberts, S. J., 1984. A branch and bound algorithm for determining the optimal feature subset of given size. Applied Statistics 33, 236\u2013241.","cites":null},{"id":37923176,"title":"A branch and bound algorithm for feature subset selection.","authors":[],"date":"1977","doi":"10.1109\/tc.1977.1674939","raw":"Narendra, P. M., Fukunaga, K., 1977. A branch and bound algorithm for feature subset selection. IEEE Transaction on Computers C-26 (9), 917\u2013 922.","cites":null},{"id":37923161,"title":"A branch-and-bound approach for machine screening in just-in-time manufacturing systems.","authors":[],"date":"1996","doi":"10.1080\/00207549608904935","raw":"Gutierrez, R., Sahinidis, N., 1996. A branch-and-bound approach for machine screening in just-in-time manufacturing systems. International Journal of Production Research 34 (3), 797\u2013818.","cites":null},{"id":37923185,"title":"A branch-and-bound approach to global optimization.","authors":[],"date":"1996","doi":"10.1007\/bf00138689","raw":"Ryoo, H., Sahinidis, N., 1996. A branch-and-bound approach to global optimization. Journal of Global Optimization 8 (2), 107\u2013139.","cites":null},{"id":37923195,"title":"A dynamic selection algorithm for globally optimal subsets.","authors":[],"date":"1992","doi":"10.1016\/0952-1976(92)90018-f","raw":"Yu, B., Yuan, B., 1992. A dynamic selection algorithm for globally optimal subsets. Engineering Applications of Arti\ufb01cial Intelligence 5 (5), 457\u2013462.","cites":null},{"id":37923175,"title":"A methodology for screening level control structures in plantwide control systems.","authors":[],"date":"1998","doi":"10.1016\/s0098-1354(98)00243-9","raw":"McAvoy, T., 1998. A methodology for screening level control structures in plantwide control systems. Computers and Chemical Engineering 22 (11), 1543\u20131552.","cites":null},{"id":37923196,"title":"A more e\ufb03cient branch and bound algorithm for feature selection.","authors":[],"date":"1993","doi":"10.1016\/0031-3203(93)90054-z","raw":"Yu, B., Yuan, B., 1993. A more e\ufb03cient branch and bound algorithm for feature selection. Pattern Recognition 26 (6), 883\u2013889. 17P K w u z y","cites":null},{"id":37923156,"title":"A plant-wide industrial process control problem.","authors":[],"date":"1993","doi":"10.1016\/0098-1354(93)80018-i","raw":"15Downs, J. J., Vogel, E. F., 1993. A plant-wide industrial process control problem. Computers Chem. Engng. 17 (3), 245\u2013255.","cites":null},{"id":37923172,"title":"An algorithm for simultanous process design and control.","authors":[],"date":"2001","doi":"10.1021\/ie000622t","raw":"Kookos, I., Perkins, J., 2001. An algorithm for simultanous process design and control. Ind. Eng. Chem. Res. 40, 4079\u20134088.","cites":null},{"id":37923154,"title":"An improved branch and bound algorithm for feature selection.","authors":[],"date":"2003","doi":"10.1016\/s0167-8655(03)00020-5","raw":"Chen, X., 2003. An improved branch and bound algorithm for feature selection.","cites":null},{"id":37923181,"title":"An improved branch and bound algorithm for feature subset selection.","authors":[],"date":"1988","doi":"10.2307\/2347512","raw":"Ridout, M. S., 1988. An improved branch and bound algorithm for feature subset selection. Applied Statistics 37, 139\u2013147.","cites":null},{"id":37923173,"title":"Analyzing the interaction of design and control .1. a multiobjective framework and application to binary distillation synthesis.","authors":[],"date":"1994","doi":"10.1016\/0098-1354(94)e0013-d","raw":"Luyben, M., Floudas, C., 1994a. Analyzing the interaction of design and control .1. a multiobjective framework and application to binary distillation synthesis. Comput. Chem. Eng. 18 (10), 933\u2013969.","cites":null},{"id":37923174,"title":"Analyzing the interaction of design and control .2. reactor separator recycle system.","authors":[],"date":"1994","doi":"10.1016\/0098-1354(94)85006-2","raw":"Luyben, M., Floudas, C., 1994b. Analyzing the interaction of design and control .2. reactor separator recycle system. Comput. Chem. Eng. 18 (10), 971\u2013 994.","cites":null},{"id":37923191,"title":"Comparison of di\ufb00erent minlp methods applied on certain chemical engineering problems.","authors":[],"date":"1996","doi":"10.1016\/0098-1354(96)00066-x","raw":"Skrifvars, H., Harjunkoski, I., Westerlund, T., Kravanja, Z., P\u00a8 orn, R., 1996. Comparison of di\ufb00erent minlp methods applied on certain chemical engineering problems. Computers and Chemical Engineering 20, S333\u2013S338.","cites":null},{"id":37923148,"title":"Comparison of two techniques for assessing input-output controllability in the presence of manipulated variable constraints.","authors":[],"date":"1996","doi":"10.1016\/b978-0-08-042358-6.50010-6","raw":"Cao, Y., Biss, D., Perkins, J. D., 1996. Comparison of two techniques for assessing input-output controllability in the presence of manipulated variable constraints. Computers Chem. Engng. 20 (4), 337\u2013346.","cites":null},{"id":37923152,"title":"Control structure selection for unstable processes using Hankel singular value. In:","authors":[],"date":"2003","doi":"10.1016\/s1570-7946(03)80145-1","raw":"Cao, Y., Saha, P., Jun 2003. Control structure selection for unstable processes using Hankel singular value. In: 13th European Symposium on Computer Aided Process Engineering (ESCAPE-13). Elsevier Science, Lappeenranta, Finland, pp. 383\u2013388.","cites":null},{"id":37923150,"title":"Globally optimal control structure selection using branch and bound method. In:","authors":[],"date":"1998","doi":"10.1016\/s1570-7946(03)80441-8","raw":"Cao, Y., Rossiter, D., Owens, D. H., 1998. Globally optimal control structure selection using branch and bound method. In: Preprints of DYCOPS\u20195. Corfu, Greece, pp. 183\u2013188.","cites":null},{"id":37923168,"title":"Input-output selection and partial control. In:","authors":[],"date":"1996","doi":null,"raw":"Havre, K., Skogestad, S., 1996. Input-output selection and partial control. In: Proceedings of IFAC\u201996 13th World Congress. Vol. M. San Francisco, CA, USA, pp. 181\u2013186.","cites":null},{"id":37923189,"title":"Multivariable Feedback Control. Analysis and Design.","authors":[],"date":"1996","doi":"10.1002\/(sici)1099-1115(199803)12:2<223::aid-acs470>3.0.co;2-f","raw":"Skogestad, S., Postlethwaite, I., 1996. Multivariable Feedback Control. Analysis and Design. John Wiley & Sons, Chichester.","cites":null},{"id":37923179,"title":"New simulink models of two decentralized control strategies. Tennessee Eastman Challenge Archive,","authors":[],"date":"2002","doi":null,"raw":"Ricker, N., 2002. New simulink models of two decentralized control strategies. Tennessee Eastman Challenge Archive, http:\/\/depts.washington.edu\/control\/LARRY\/TE\/download.html.","cites":null},{"id":37923171,"title":"Process control structure selection based on economics.","authors":[],"date":"2000","doi":"10.1002\/aic.690461012","raw":"Heath, J., Kookos, I., Perkins, J., 2000. Process control structure selection based on economics. AICHE J. 46 (10), 1998\u20132016.","cites":null},{"id":37923177,"title":"Relation between minlp modelling and logical interface for chemical process synthesis.","authors":[],"date":"1991","doi":"10.1016\/0098-1354(91)87007-v","raw":"Raman, R., Grossmann, I., 1991. Relation between minlp modelling and logical interface for chemical process synthesis. Computers and Chemical Engineering 15 (2), 73\u201384.","cites":null},{"id":37923159,"title":"Robust stabilization of linear-multivariable systems - relations to approximation.","authors":[],"date":"1986","doi":"10.1080\/00207178608933499","raw":"Glover, K., 1986. Robust stabilization of linear-multivariable systems - relations to approximation. International Journal of Control 43, 741\u2013766.","cites":null},{"id":37923170,"title":"Screening of variables for stabilizing control using pole vectors.","authors":[],"date":"2003","doi":"10.1109\/tac.2003.816062","raw":"Havre, K., Skogestad, S., 2003. Screening of variables for stabilizing control using pole vectors. IEEE Transaction on Automatic Control 48 (8), 1393\u2013 1398.","cites":null},{"id":37923141,"title":"Screening plant designs and control structures for uncertain systems.","authors":[],"date":"1996","doi":"10.1016\/0098-1354(95)00036-4","raw":"Braatz, R., Lee, J., Morari, M., 1996. Screening plant designs and control structures for uncertain systems. Comput. Chem. Eng. 20 (4), 463\u2013468.","cites":null},{"id":37923165,"title":"Selection of variables for regulatory control using pole vectors. In:","authors":[],"date":"1998","doi":"10.1109\/tac.2003.816062","raw":"Havre, K., Skogestad, K., 1998. Selection of variables for regulatory control using pole vectors. In: Preprints of DYCOPS\u20195. Corfu, Greece, pp. 614\u2013619.","cites":null},{"id":37923187,"title":"Synthesis of positive real multivariable feedback systems.","authors":[],"date":"1987","doi":"10.1080\/00207178708933772","raw":"Safanov, M., Jonckheere, E., Verma, M., Limebeer, D., 1987. Synthesis of positive real multivariable feedback systems. International Journal of Control 1645 (3), 817\u2013842.","cites":null},{"id":37923193,"title":"The Algebraic Eigenvalue Problem.","authors":[],"date":"1965","doi":"10.1017\/s0013091500012104","raw":"Wilkinson, J., 1965. The Algebraic Eigenvalue Problem. Claredon Press, Oxford, England.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2005-03-01T00:00:00Z","abstract":"The main aim of this paper is to present an improved algorithm of \u201cBranch and\nBound\u201d method for control structure screening. The new algorithm uses a best-\nfirst search approach, which is more efficient than other algorithms based on\ndepth-first search approaches. Detailed explanation of the algorithms is\nprovided in this paper along with a case study on Tennessee\u2013Eastman process to\njustify the theory of branch and bound method. The case study uses the Hankel\nsingular value to screen control structure for stabilization. The branch and\nbound method provides a global ranking to all possible input and output\ncombinations. Based on this ranking an efficient control structure with least\ncomplexity for stabilizing control is detected which leads to a decentralized\nproportional cont","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/140983.pdf","fullTextIdentifier":"http:\/\/dx.doi.org\/10.1016\/j.ces.2004.10.025","pdfHashValue":"6470d7a7fb6909f7958e8c39e1ef58efbf430f52","publisher":"Elsevier Science B.V., Amsterdam.","rawRecordXml":"<record><header><identifier>\noai:dspace.lib.cranfield.ac.uk:1826\/868<\/identifier><datestamp>2011-11-13T23:24:22Z<\/datestamp><setSpec>hdl_1826_19<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>Improved branch and bound method for control structure screening<\/dc:title><dc:creator>Cao, Yi<\/dc:creator><dc:creator>Saha, Prabirkumar<\/dc:creator><dc:subject>Control structure screening<\/dc:subject><dc:subject>Branch and bound method<\/dc:subject><dc:subject>Hankel singular value<\/dc:subject><dc:subject>Tennessee\u2013Eastman process<\/dc:subject><dc:subject>Process control<\/dc:subject><dc:subject>Stability<\/dc:subject><dc:subject>Systems engineering<\/dc:subject><dc:subject>Optimization<\/dc:subject><dc:description>The main aim of this paper is to present an improved algorithm of \u201cBranch and\nBound\u201d method for control structure screening. The new algorithm uses a best-\nfirst search approach, which is more efficient than other algorithms based on\ndepth-first search approaches. Detailed explanation of the algorithms is\nprovided in this paper along with a case study on Tennessee\u2013Eastman process to\njustify the theory of branch and bound method. The case study uses the Hankel\nsingular value to screen control structure for stabilization. The branch and\nbound method provides a global ranking to all possible input and output\ncombinations. Based on this ranking an efficient control structure with least\ncomplexity for stabilizing control is detected which leads to a decentralized\nproportional contr<\/dc:description><dc:publisher>Elsevier Science B.V., Amsterdam.<\/dc:publisher><dc:date>2011-11-13T23:24:22Z<\/dc:date><dc:date>2011-11-13T23:24:22Z<\/dc:date><dc:date>2005-03-01T00:00:00Z<\/dc:date><dc:type>Article<\/dc:type><dc:identifier>Yi Cao and Prabirkumar Saha, Improved branch and bound method for control\nstructure screening, Chemical Engineering Science, Volume 60, Issue 6, March\n2005, Pages 1555-1564.<\/dc:identifier><dc:identifier>0009-2509<\/dc:identifier><dc:identifier>http:\/\/dx.doi.org\/10.1016\/j.ces.2004.10.025<\/dc:identifier><dc:identifier>http:\/\/dspace.lib.cranfield.ac.uk\/handle\/1826\/868<\/dc:identifier><dc:language>en_UK<\/dc:language><\/oai_dc:dc><\/metadata><\/record>","journals":[{"title":null,"identifiers":["issn:0009-2509","0009-2509"]}],"language":{"code":"en","id":9,"name":"English"},"relations":[],"year":2005,"topics":["Control structure screening","Branch and bound method","Hankel singular value","Tennessee\u2013Eastman process","Process control","Stability","Systems engineering","Optimization"],"subject":["Article"],"fullText":"Improved Branch and Bound Method for\nControl Structure Screening\nYi Cao a,\u2217 Prabirkumar Saha a,1\naSchool of Engineering, Cranfield University, Bedford MK43 0AL, UK\nAbstract\nThe main aim of this paper is to present an improved algorithm of \u201cBranch and\nBound\u201d method for control structure screening. The new algorithm uses a best-first\nsearch approach, which is more efficient than other algorithms based on depth-\nfirst search approaches. Detailed explanation of the algorithms is provided in this\npaper along with a case study on Tennessee-Eastman process to justify the theory\nof Branch and Bound method. The case study uses the Hankel Singular Value to\nscreen control structure for stabilization. The branch and bound method provides a\nglobal ranking to all possible input and output combinations. Based on this ranking\nan efficient control structure with least complexity for stabilizing control is detected\nwhich leads to a decentralized proportional controller.\nKey words: Control Structure Screening, Branch and Bound method, Hankel\nSingular Value, Tennessee-Eastman Process, Process Control, Stability, Systems\nEngineering, Optimization\n1 INTRODUCTION\nControl structure screening has been a challenging research topic among con-\ntrol engineers during the last decade (Heath et al., 2000; Kookos and Perkins,\n2001). It is more difficult than synthesizing a controller, specially for large\nsets of measurements and actuators, because design of control structure is a\ncombinatorial problem. With a large number of candidate measurements and\nmanipulations the number of possible combinations of inputs and outputs have\n\u2217 Author for correspondence (Email: y.cao@cranfield.ac.uk; Fax: +44-1234-\n750728)\n1 Current address: Department of Chemical Engineering, Indian Institute of Tech-\nnology Guwahati, North Guwahati 781039, INDIA\nPreprint submitted to Chemical Engineering Science 25 October 2004\na combinatorial growth. Thus, an approach consisting of performing a control-\nlability analysis for each possible combination becomes time consuming (Havre\nand Skogestad, 1996). Tennessee-Eastman test-bed problem (Downs and Vo-\ngel, 1993) can be referred as an exemplary process due to its umpteen I\/O\ncombinations (41 measurements out of which 22 are potential outputs; 12 ma-\nnipulated variables). In this case, the total number of possible input-output\ncombinations is\n\u221112\nj=1C\n12\nj\n\u221122\ni=1C\n22\ni = (2\n12 \u2212 1)(222 \u2212 1) = 17, 175, 670, 785.\nSuppose it takes only 0.01 sec to evaluate one I\/O combination, it would still\ntake more than 5 years for an exhaustive search to reach a global conclu-\nsion. Therefore an efficient algorithm is essential to tackle the combinatorial\nproblem.\nBefore discussing the importance of control structure screening, it is necessary\nto recapitulate the basics of control structure selection problem. Figure 1 shows\nthe general structure of a feedback process. For a set of exogenous inputs (w)\nto the process, a set of inputs (u) and outputs (y) are to be selected such\nthat a compensator K can be designed to achieve cost function z within a\nspecified limit. It is understandable that more number of u and y selected\nwill generally yield better performance. However, it is intended to minimize\nthe number of u and y (only necessary ones to be selected) to restrict the\ncomplexity of the feedback controller. In this perspective, control structure\nscreening is important because of the following issues:\n\u2022 Usually control structure selection is a multiobjective problem.\n\u2022 Some objectives may not be suitable to be considered together mathemati-\ncally\n\u2022 Even a mixed cost function can be formulated, but it may not be compu-\ntationally tractable.\nA possible solution to the above problems is to separate the objectives into two\ngroups: firstly only use computationally tractable indices suitable for control\nstructure screening to reduce the candidate set, and then perform exhaustive\nsearch in the reduced set for the rest objectives.\nBranch and Bound (BAB) as a general approach to solve combinatorial prob-\nlem is well-known. It has been widely used in numerical algorithms for solv-\ning Mixed-Integer Linear and Nonlinear Programming (MILP and MINLP)\nproblems (e.g. Luyben and Floudas, 1994a,b; Braatz et al., 1996) and global\noptimization softwares such as BARON computational system for solving non-\nconvex optimization problems to global optimality (Gutierrez and Sahinidis,\n1996; Ryoo and Sahinidis, 1996). Several researchers have demonstrated ap-\nplications of BAB algorithm in Chemical Engineering and Process Control as\nwell as in Control Structure Selection (Raman and Grossmann, 1991; Skrifvars\net al., 1996). However, most of the available BAB methods are integrated in\ngeneral MINLP and MILP software, and therefore is difficult to be tailored\n2\nfor control structure screening.\nA particular BAB method for subset selection was proposed by Narendra\nand Fukunaga (1977) in the context of pattern recognition. Roberts (1984)\npresented a FORTRAN code for the algorithm. Over the years, the algorithm\nwas improved by several authors (Ridout, 1988; Yu and Yuan, 1993). Search\nspeed has been considerably increased through the Improved BAB method by\nChen (2003). Basically, it is based on an asymmetrical solution tree, whose\nleaves represent target subsets of optimal features, while the root represents\nthe set of all features. The algorithm is based on the assumption that the\nadopted criterion function fulfills the monotonicity condition to simplify the\nbound estimation. Thus, any subset screening problem, with criterion that\nsatisfies monotonicity property, can be efficiently solved using this method. In\nother words, this method is particularly suitable for control structure screening\nbased on simple controllability indices. Cao et al. (1998) modified this method\nto use with the minimum singular value for control structure selection. This\nwork extends this method to address the following screening issues:\n(1) The screening procedure involves multiobjective search, some objectives\nmay not satisfy monotonicity required by BAB algorithm, for example,\nthe right-half-plane zeros. To reduce the search space for these objectives,\nBAB based on a particular criterion which satisfies monotonicity should\nhave the screening feature, viz.,\n(a) searching all subsets that satisfies \u03c6 \u2265 a, where \u03c6 is the criterion\nfunction and a is a bound (Braatz et al., 1996)\n(b) ranking all possible subsets to find a certain number of best subsets.\n(2) There should not be any restriction over either the subset-size or number\nof input(s) and\/or output(s), i.e., searching algorithm should be able to\nidentify the best possible subset(s) for any series of pre-selected subset-\nsizes irrespective of whether it is square system or nonsquare.\n(3) There should be a provision for joint I\/O screening.\nThe paper is organized as follows. The theoretical details of Branch and Bound\nmethod are discussed in the next section. It includes the basic principle of\nthe theory, newly improved algorithm and the discussions about the special\nrequirements of control structure screening, which are met by the new al-\ngorithm. Section 3 presents the focused criteria function, viz. the minimum\nHankel singular value, which is used for controllability analysis for unstable\nplants. Application of Branch and Bound method is shown in section 4 through\na case study on Tennessee-Eastman test bed process. A brief conclusion on\nthe research finding is presented in section 5.\n3\n2 BRANCH AND BOUND METHOD\n2.1 Principle\nLet XN = {x1, . . . , xN} be an N -element set and Xn be an n-element subset\nselected from XN . There are C\nn\nN = N !\/(N\u2212n)!n! candidate n-element subsets\nXn \u2208 XN for screening with criterion cost function \u03c6. The objective is to find\nan n-element subset, X\u2217n, which satisfies\n\u03c6(X\u2217n) = max\nXn\u2286XN\n\u03c6(Xn) (1)\nLet \u03c6(XN) be an upper bound estimation of the cost function over all possible\nsubsets of XN , i.e.,\n\u03c6(XN) \u2265 max\nXn\u2286XN\n\u03c6(Xn) (2)\nTherefore,\n\u03c6(Xs) \u2264 \u03c6(Xt) if Xs \u2286 Xt (3)\nParticularly, if \u03c6 satisfies monotonicity property, i.e.,\n\u03c6(Xs) \u2264 \u03c6(Xt) if Xs \u2286 Xt (4)\nthen estimation can be simplified as,\n\u03c6(XN) = \u03c6(XN) (5)\nLet B be a lower bound on the optimal value of \u03c6(X\u2217n), i.e.,\nB \u2264 \u03c6(X\u2217n) (6)\nIf a k-element subset, Xk, with k > n satisfies\n\u03c6(Xk) < B (7)\nthen, it can be shown by (3),\n\u03c6(X \u2032n) < B, \u2200X \u2032n \u2286 Xk (8)\nThis means that none of the subsets of Xk can be the optimal solution, thus\nthey can be discarded without any further evaluation. By applying this prin-\nciple properly, the computational load can be reduced considerably.\nThe above BAB principle can be applied to any criterion, where an algorithm\nis required to generate an upper-bound estimation of the criterion over all\npossible subsets of the given set, i.e. (2). The simplest case is where the criteria\n4\nsatisfy monotonicity (4). Hence, no upper-bound estimation is required in this\ncase. For simplicity, the monotonicity condition is presumed in the rest of the\nsection.\n2.2 Branch rule\nAn efficient BAB algorithm requires a proper branching strategy. In a tradi-\ntional BAB algorithm, branching is represented as a solution tree where each\nsubset belongs to one and only one branch (Figure 2). However, structure of\nthe solution tree is depend on the target subset-size. Thus, it is not suitable\nfor a varying subset-size problem. By introducing the concepts of fixed-set and\ncandidate-set, a new branching rule, which suitable for both fixed and variable\nsubset-size problems, is proposed.\nConsider a simple example with X2 = {x1, x2}, X3,1 = {x1, x2, x3} and X3,2 =\n{x1, x2, x4}. Clearly, X2 can be generated from both X3,1 and X3,2. If X2 can\nonly be generated from X3,1, then, x4 cannot be eliminated from X3,2 (fixed\nelement), whilst x3 must be removable from X3,1 (candidate element). More\ngenerally, for an n-element set X, the fixed-set and candidate-set of X are\ndefined as follows.\nDefinition 1 (Fixed set F ) The fixed set, F \u2286 X is the smallest subset of\nX, whose elements are always included in all subsets generated from X. It has\nnumber of nf elements.\nDefinition 2 (Candidate set C) The candidate set is the set of elements\nwhich are elements of X, but not elements of F , i.e. C = X \u2212 F . It has\nnc = n\u2212 nf number of elements.\nAccording to the definitions, a set X can be represented by a three-tuple,\nX = (\u03c6, F, C)\nThe following branch rule, illustrated in Figure 3, determines how F and C\nare propagated into subsets.\nDefinition 3 (Branch rule) Assume X = (\u03c6, F, C) and C = {x1, x2, . . . , xnc}.\nLet Xk = X \u2212 {xk}. Then,\nXk = (\u03c6k, F\nk, Ck), F k := F \u222a {x1, . . . , xk\u22121}, Ck := {xk+1, . . . , xnc} (9)\nStarting from the full set, XN = (\u03c6(XN), {}, XN) and repeatedly applying the\nbranch rule, all subsets are properly branched.\n5\nLemma 4 (Branch completeness) The branch rule of (9) is complete with-\nout any redundancy,i.e. each subset belongs to one and only one branch.\nPROOF. Let S(X) denote all subsets generated by X. Consider, 1 \u2264 i <\nj \u2264 nc. Then, according to the branch rule, xi \u2208 Xs if Xs \u2286 S(Xj). However,\nxi 6\u2208 Xt if Xt \u2286 S(X i). Thus, S(X i) \u2229 S(Xj) = 0, i.e. no subset belongs to\nmore than one branch. On the other hand, the total number of second-level\nsubsets of X is (nc\u22121)+(nc\u22122)+ \u00b7 \u00b7 \u00b7+1+0 = nc(nc\u22121)\/2 = C2nc . Thus, the\nsecond-level subsets of X are complete and without any redundancy. It infers\nthat all subsets of X are complete without redundancy. 2\nLemma 5 For an m-element subset selection problem, let nb be the number\nof expandable branches of X. Then,\nnb = m\u2212 nf + 1 (10)\nPROOF. Any set with more than m elements fixed cannot generate an m-\nelement subset, thus can be discarded. Hence, the number of branches of a\nset is equal to the number of its subsets, which has their fixed-set sizes less or\nequal to m. If a set has nb branches, then, according to (9), the size of F\nnb is\nm, i.e. m = nf + nb \u2212 1, which leads to nb = m\u2212 nf + 1. 2\nRemark 6 If a node has only one branch, there is no need to evaluate inter-\nmediate nodes one by one until the terminal node. Based on this observation,\nYu and Yuan (1993) developed their BB+ algorithm, which has been shown to\nbe faster than the basic BAB algorithm. To implement the same strategy with\nthe above branch rule, a subset with nf = m should be directly converted to\nthe terminal subset by eliminating C.\nRemark 7 The branch rule (9) is based on the element-index of C. In theory,\nthe index-sequence is local (only relevant to the first-level subsets) and can be\narbitrary. For efficiency (Ridout, 1988), the sequence of subset is ordered as\n\u03c6(X1) \u2264 \u03c6(X2) \u2264 \u00b7 \u00b7 \u00b7 \u2264 \u03c6(Xnc) so that the set with least criterion value has\nthe largest candidate set, which are more likely to be discarded although this\nwill increase the number of criterion evaluations (number of subsets evaluated\nmore than number of branches). For some problems, where the first-level subset\ncriterion functions can be efficiently evaluated using an iterative formulation,\nsubset criterion sorting will significantly reduce computational load.\nRemark 8 In the data structure of a three-tuple (\u03c6, F, C), F and C are fixed-\nlength integers, where each bit represents an element in the set (bit=1) or not\nin the set (bit=0). Thus, the branch rule can be efficiently programmed using\ninteger operations.\n6\n2.3 Pool of subsets\nTo solve a variable subset-size selection problem, the concept of pool of subset\nis adopted from Yu and Yuan (1992). The pool, P is a dynamic queue, which\nconsists of all active subsets to be visited. All subsets are stored in the three-\ntuple structure and sorted according to their criterion values. Initially, P0 =\n{XN}. Assume at k-th iteration,\nPk = {X1, X2, . . . , Xn}, (11)\nX i = (\u03c6i, F\ni, Ci) for i = 1, . . . , n,\n\u03c61 = max(\u03c61, . . . , \u03c6n).\nThen, the pool is dynamically updated by the following expanding and con-\ntracting rules.\nDefinition 9 (Pool expanding) Let S(X1) be the set of all first-level sub-\nsets of X1 generated by eliminating one element from C1 using the branch rule\n(9). Then, the pool is expanded as\nPk+1 = S(X1) \u222a (Pk \u2212 {X1}) (12)\nDefinition 10 (Pool contracting) Assume the target subset size is m. Let\nnf,i be the size of F\ni, D = {X i|nf,i \u2265 m} and T = {(\u03c6(F i), F i, {})|nf,i = m}.\nThen, the pool is contracted as\nPk+1 = T \u222a (Pk \u2212D) (13)\nThe optimal subset of a pool is determined by the following theorem.\nTheorem 11 (Global optimum) For Pk in (11), let ni be the size of X i,\nfor i = 1, . . . , n. Then X1 is globally optimal among all n1-element subsets if\nn1 = min(n1, n2, . . . , nn).\nPROOF. Since Pk consists all active subsets and n1 is the minimum subset\nsize among all pool members, any n1-element subset will be a subset of one\nof the pool members. However, X1 has the largest criterion among all pool\nmembers. Hence, it is globally optimal among all n1-element subsets. 2\nRemark 12 The pool algorithm can be applied to both fixed and variable\nsubset-size selection problems. For a fixed-size problem, the size of the first\nsubset, n1 in the current pool is compared with the target size, m. The pool\nwill be continuously updated until n1 = m. For a variable-size problem, the\nmultiple target sizes, m1,m2, . . . ,mk are sorted in descending order. Then,\n7\nthe pool is dynamically updated to find n1 matching m1, then m2, until all\ntarget sizes being matched.\nRemark 13 The pool algorithm can also be applied to find l best m-element\nsubsets. In this case, when the first member of a pool is size of m, it will be\nfixed. The pool is continuously updated to find the second member with size\nm. And so on, until the first l members are all of size m. Alternatively, if the\nscreening problem is to find all m-element subsets which have criterion value\nlarger than a given threshold, then any pool members whose criterion value\nless than the threshold will be removed from the pool and only subsets with size\nlarger than m will be expanded. The final pool contains the solution sets.\nRemark 14 The pool algorithm described above is a best-first-search approach.\nIt is normally more efficient than traditional BAB algorithms, which are based\non a depth-first-search solution tree (e.g. Cao et al., 1998) in terms of the\nnumber of subsets expanded. In a depth-first-search algorithm, to determine\nif a subset should be expanded, the criterion value of the subset is compared\nwith the current best bound of the optimal solution, B in (6). However, in the\nbest-first-search algorithm, the subset criterion value is compared with those of\nall pool members (including B). Hence, the subset is less likely to be expanded\nthan in a depth-first-search algorithm.\nRemark 15 Recently, Chen (2003) spotted some redundant evaluations in\nBAB algorithms, which can be removed to improve efficiency. That is, when\na non-terminal subset, X is discarded (\u03c6(X) \u2264 B), all natural subsets of X,\nwhich may not belong to the branch of X, can also be discarded. In the pool-\nbased BAB algorithm, this is implemented by checking the first pool-set, X1\nbefore expanding. If C1 has an element, xk, which, when eliminated, will make\nthe generated subset be a natural subset of a pool member ranked after B, then\nxk will be moved from C\n1 to F 1.\nThe pool-based branch and bound algorithm is summarized in the following\nprocedures.\nStep 1 Define XN = (\u03c6, {}, XN), a target-size array, M = {m1,m2, . . . ,mk}\nsorted in descending order, and the number of best subsets required, l.\nInitialize a subset pool, P = {XN} and a pointer of the target-size array,\nI = 1.\nStep 2 If I > k stop. Otherwise, get current target size m = M(I), I =\nI +1, and initialize a pointer, L = 0 to indicate the number of best subsets\nobtained.\nStep 3 Let P = {Xp1 , . . . , Xpn} be the current pool. Sort \u03c6(Xpi) for i =\nL+ 1, . . . , n in descending order.\nStep 4 If pL+1 = m, then XpL+1 is a new best-subset, L = L+1. If L = l, then\nall best-subsets required have been found, goto Step 2. Otherwise, continue.\n8\nStep 5 Check XpL+1 and adjust its F and C according to Remark 15.\nStep 6 Perform pool expanding using (12).\nStep 7 Perform pool contracting using (13).\nStep 8 Return to Step 3.\n2.4 Joint I\/O screening\nIn most cases, due to lack of suitable tools, the importance of inputs and\noutputs have to be assessed separately i.e., inputs have to be screened with a\noutput set fixed, whilst to screen outputs, an input set has to be presumed.\nObviously, such a way to screen inputs and outputs cannot reveal the effect\nof cross-combination between inputs and outputs. As a result, global solution\nof the best I\/O combination is not guaranteed. To solve this problem, input\nand output variables are considered together in the Branch and Bound search\nprocedure via an index translation scheme. More specifically, the k-th input is\nthe k-th variable of the joint I\/O set, whilst the k-th output is the M + k-th\nvariable in the I\/O set (where M is the total number of inputs). In this way,\nany input-output combination can be translated as a subset of the total I\/O\nset. To avoid a subset with pure inputs or pure output being selected, the\ncriterion function of such a subset is defined as zero. Therefore, such a subset\nwill never be selected by the Branch and Bound algorithm.\nFinally the screening result can be represented graphically for criterion func-\ntion vs. I\/O subset-size. In this way, the screening is done both vertically (a\ngroup of subsets with the same size) as well as horizontally (subsets with dif-\nferent size). Wherein the best I\/O combination could be determined at the\npoint where the increase of criterion value against the increase of subset-size\nbecomes negligible, or at the point where the controllability criterion is at a\nsatisfactory level but the I\/O subset-size is minimum.\n3 STABILIZING CONTROL STRUCTURE SELECTION\nStabilization of an unstable plant is mandatory before designing higher level\ncontrol structure of the system. Therefore, as argued by Havre and Skogestad\n(2003), stabilizing control usually belongs to a secondary control layer, where\noutput performance is not an important issue because the output setpoint is\nnormally determined by a higher level controller. Instead, the input usage is\nmore important for stabilizing control because it directly relates to possible\ninput saturation, which may lead to instability. Glover (1986) has proven that\nthe minimum input usage to stabilize an unstable plant can be quantified by\nthe minimum Hankel Singular Value (HSV) of the anti-stable projection of the\n9\nplant. This result has been applied to stabilizing control structure selection\nCao and Saha (2003). However, global optimality is not guaranteed in the\ndirect application of the minimum HSV because of the combinatorial nature\nof the evaluation.\nIn this section, an algorithm is proposed to evaluate the minimum HSV based\non the BAB approach described in Section 2. This algorithm gives global\nranking of minimum HSV for all possible I\/O combinations without exhaustive\nevaluation of the index.\n3.1 Hankel Singular Value\nConsider a linear system with nx states, ny outputs and nu inputs, denoted\nby G = {A,B,C}, where A, B and C are state, input and output matrices of\nthe state space equations.\nThe controllability and observability gramians, Lc and Lo of the system are\nsymmetric matrices and satisfy the following Lyapunov equations:\nALc + LcA\nT +BBT = 0 (14)\nATLo + LoA+ C\nTC = 0 (15)\nThe Hankel Singular Value, \u03c3 = \u03c31 \u2264 \u03c32 . . . \u2264 \u03c3nx = \u03c3 of the system is defined\nas the square roots of the eigenvalues of LoLc, i.e.,\n\u03c3k(G) =\n\u221a\n\u03bbk(LoLc); k = 1, 2, . . . , nx (16)\nFor a subsystem with the i-th output and j-th input, its controllability and\nobservability gramians and HSV are denoted as Lcj, Loi and \u03c3\nij\nk , respectively.\nThen according to (14) and (15) the following equations can be obtained:\nLc =\nnu\u2211\nj=1\nLcj Lo =\nny\u2211\ni=1\nLoi (17)\nIf the system, G possesses unstable poles, then it is possible to decompose the\nsystem into stable (Gs ) and anti-stable (Ga) projections, i.e., G = Gs + Ga\n(Safanov et al., 1987). Glover (1986) studied the robust stabilization problem\nof a linear multivariable open-loop unstable system G. The task for a controller\nK to stabilize (G+\u2206) for all allowable perturbations \u2206 with minimum control\neffort is to minimize \u2016KS\u2016\u221e, where S := (I\u2212GK)\u22121 is the sensitivity matrix.\n10\nIt has been proved by Glover (1986) that\nmin \u2016KS\u2016\u221e = 1\n\u03c3([Ga(\u2212s)]\u2217) (18)\nAccording to Glover\u2019s theorem, it is desired to select an input and output com-\nbination which has the largest minimum HSV. Understandably, it is possible\nto extract subsystems with m selected inputs and n selected outputs from G.\nSuppose the selected inputs and outputs have index sets, J = {j1, j2, . . . , jm}\nand I = {i1, i2, . . . , in}, respectively. Controllability and observability grami-\nans for any such subsystem will be\nLcJ =\n\u2211\nj\u2208J\nLcj LoI =\n\u2211\ni\u2208I\nLoi (19)\nThe HSV can be calculated in a similar manner as in (16). Hence, the best\ncombination of inputs and outputs are to be detected by comparing the min-\nimum HSV.\nThere are a couple of issues involved with the HSV which are discussed below:\n\u2022 Pure integrator: One particular issue with the HSV is that it is not well-\ndefined for systems which have pure integrators, i.e., poles at zero. Presence\nof pure integrators in the system will invalidate the above theory as the ma-\ntrix A in (14) and (15) will be singular. To counter this problem, a diagonal\nmatrix, having a small constant as elements, can be added to the system ma-\ntrix A before decomposing it into stable and anti-stable parts. Through this\noperation, the poles will be shifted slightly towards right without disturb-\ning overall characteristics of the process. However, the pure integrators will\nmove to the right-half-plane (RHP) of imaginary axis and will be converted\ninto small positive poles which can later be extracted in Ga.\n\u2022 Combinatorial problem: The selection of inputs and outputs by using the\nHSV is a combinatorial problem. This problem can be tackled by using the\nBAB algorithm described previously.\nThe following theorem shows that the minimum HSV satisfies the monotonic-\nity condition (4). Therefore the BAB approach can be simplified to take this\nadvantage as explained in Sec 2.\nTheorem 16 If I1 \u2286 I2 and J1 \u2286 J2 then \u03c3I1J1 \u2264 \u03c3I2J2\nPROOF. If \u03c3I2J2 = 0, then \u03c3I1J1 = 0. For the case \u03c3I2J2 6= 0, LoI2 and LcJ2\nare symmetric and positive definite. Let J1 \u2286 J2 and I1 = I2 = I, then LcJ2 =\nLcJ1 + Lc(J2\u2212J1). Thus, \u03bb(LoILcJ2) = \u03bb(L\n1\/2\noI LoJ2L\n1\/2\noI ) = \u03bb(L\n1\/2\noI LcJ1L\n1\/2\noI +\nL\n1\/2\noI Lc(J2\u2212J1)L\n1\/2\noI ). As L\n1\/2\noI LcJ1L\n1\/2\noI and L\n1\/2\noI Lc(J2\u2212J1)L\n1\/2\noI are both symmetric,\n11\naccording to Wilkinson (1965), \u03bb(LoILcJ2) \u2265 \u03bb(L1\/2oI LcJ1L1\/2oI ) = \u03bb(LoILcJ1).\nSimilarly, it can be proved that \u03bb(LoI2LcJ) \u2265 \u03bb(LoI1LcJ), if I1 \u2286 I2. Hence\n\u03c3I2J2 \u2265 \u03c3I2J1 \u2265 \u03c3I1J1 . 2\n3.2 I\/O Screening Procedure\nIn spite of these advantages, BAB method with the HSV does have a demerit,\nbecause only part of effect of RHP Zeros is identified with this method. If an\nRHP zero is close to an RHP pole then the HSV will be very small indicating\nthe system to be either uncontrollable or unobservable. However, RHP zeros\nat other locations have little effect on the Hankel SV. Such RHP zeros do cause\ndifficulty in stabilization of system. According to the principle of Root Locus,\nclosed-loop poles start from open-loop poles and finish at open-loop zeros as\nthe closed-loop gain varying. Therefore, RHP zeros will normally cause an\nunstable plant not possible to be stabilized by proportional-only controllers\nbecause extra poles and zeros from the controller are required to shape the\nRoot Locus. Thus, RHP zeros should be avoided in control structure selection,\nif possible. However, RHP zeros cannot be directly handled by Branch and\nBound method. Nevertheless, we can use Branch and Bound method to secure\nan overall ranking on the Hankel SV and then examine the existence of RHP\nzeros in those ranked structures starting from top towards bottom (considering\nthe fact that the \u201cmathematically\u201d best structure is at the top) until the most\ntop structure without any RHP zeros is found. Thus the following is the step\nby step procedure of control structure screening with BAB method using the\nminimum HSV as controllability criterion:\nStep 1: Input and output scaling is essential for reliable analysis. Here inputs\nand outputs should be scaled to their possible range, e.g. inputs could be\nscaled to their nearest bound (Cao et al., 1996) whilst output might be\nscaled to their noise level (Skogestad and Postlethwaite, 1996).\nStep 2: Shift poles to convert pure integrator(s) to small RHP pole(s).\nStep 3: All unstable poles are extracted out of the process through projection\nmethod.\nStep 4: BAB method is applied to the anti-stable sub-system to screen the\nbest possible subsets of I\/O base on the minimum HSV.\nStep 5: The top ranked subsets are examined for possible existence of RHP\nzeros.\nStep 6: A decision is reached about the best I\/O combination.\n12\n4 APPLICATION OF BRANCH AND BOUND ALGORITHM\nThe Branch and Bound technique is applied to a highly-integrated chemical\nplant, viz. Tennessee-Eastman (TE) process. This process has been chosen\nwith an intention of demonstrating usage of controllability measure discussed\nin the previous section, i.e., the minimum Hankel singular values.\n4.1 Tennessee-Eastman process\nThe Tennessee-Eastman test-bed problem (Downs and Vogel, 1993) involves\nthe control of five unit operations: an exothermic two-phase reactor, a water-\ncooled condenser, a centrifugal compressor, a flash drum and a product strip-\nper. The simulated plant has 41 process variables and 12 manipulated variables\nwhich are modelled with 50 state variables. The twelve manipulated variables\nare the four feed rates, the purge rate, the agitation rate, steam rate, condenser\ncoolant rate, reactor coolant rate, compressor recycle, flash drum discharge\nrate and the stripper production rate. Out of 41 process variables there are 22\ncontrollable outputs including level, pressure, temperature, flow and 19 com-\nposition indicators. Complete lists of input and output variables are shown in\nTables 1 and 2 respectively.\nDetails of the process are available elsewhere (Downs and Vogel, 1993). A\nmodel of the process is generated by Ricker (2002) in Simulink software. Open\nloop simulation of the model indicates that the process is unstable in nature.\nThe objective is to select the inputs and outputs in order to stabilize the\ncomplete system.\n4.2 Input-output selection\nThe entire analysis has been carried out through MATLAB software. The step-\nby-step procedure, described in sec 3.2, is followed while doing the analysis.\nScaling factors for each I\/O subset-size are obtained from the model itself.\nInputs are already scaled in the model within 0 to 100% range. However,\nan extra scaling factor, viz. the maximum possible deviation from its steady\nstate value for each input variable, is incorporated. More specifically, scaling =\nmin(x, 100\u2212x), where x is the base case value, as shown in Table 1. Whereas,\nthe output variables are scaled using noise level found from the model, as\nshown in Tables 2.\nThe scaled process is decomposed into stable and anti-stable subsystems using\nSTABPROJ subroutine of the Robust Control Toolbox (Safanov et al., 1987).\n13\nThe anti-stable subsystem has two pairs of positive complex poles, 3.0648 \u00b1\n5.0837i and 0.024973\u00b1 0.15521i and two pure integrators (numerical value is\nof the order of 10\u22129).\nUsing the Branch and Bound method, 10 sets of best I\/O combinations are\ncomputed as in Figure 4. The figure shows the minimum HSV against the\nsubset-size. Although the calculation is performed for subset-sizes from 1\nthrough 34, HSV does not increase notably over subset-size of 20. It can be\nnoted from Figure 4 that the minimum HSV for up to a subset-size of 4 is\nnearly zero. By mathematical derivation, it can be proved that it is actually\nzero. The significance of this result is a conclusion that, it is impossible to sta-\nbilize the plant with any combination of a total number of inputs and outputs\nless than 4. That means a minimum total of 5 inputs and outputs are neces-\nsary to achieve that stabilization. However, in terms of decentralized control\na 3\u00d7 2 or 2\u00d7 3 system has no advantage at all compared to a 3\u00d7 3 system as\nfar as the complexity of controller design is concerned. Hence, the minimum\nHSVs for subset-size 6 are ranked for the best 10 sets in Table 3.\nBased on the discussions about RHP zeros in section 3.1, it is observed (Ta-\nble 3) that best control structure without the presence of RHP zeros is the\n4th structure in Table 3, i.e., with liquid levels in stripper and the separator\n(outputs 12 and 15), reactor temperature (output 9), separator and strip-\nper outflows (inputs 7 and 8) and reactor cooling water flow (input 10). The\nobservation is identical with the results obtained by (Cao and Saha, 2003)\nand similar to those suggested by Havre and Skogestad (1998) and McAvoy\n(1998). However, the guarantee for best I\/O combination is obtained in this\nwork through BAB technique. Moreover, this guarantee is obtained with only\n16160 computations instead of possible 17175670785 in an exhaustive search.\nThe efficiency of the improved Branch and Bound algorithm is compared with\na depth-first search based algorithm (Cao et al., 1998) in Figure 5. The main\nadvantage of the new algorithm is for a variable subset-size selection problem,\nwhere the total number of evaluations is significantly reduced due to the reuse\nof the pool of subsets. However, even for a fixed subset-size problems, the new\nalgorithm is still more efficient than depth-first search approaches due to the\nreason explained in Remark 14. This is also shown in the comparison figure,\nwhere the total number of evaluations of the pool-based algorithm using in-\ndependent pools (every time performing a fixed subset-size selection, a new\npool is initialized) is still less than depth-first search algorithm.\nThe closed loop simulation results are shown in Figure 6. It is observed that\nstabilization of the process is achieved with three unit-gain proportional con-\ntrollers. Simulation results are obtained without any disturbance but with\nmeasurement noise.\n14\n5 CONCLUSION\nAn improved Branch and Bound algorithm based on the best-first search ap-\nproach is proposed. The new algorithm is more efficient than other depth-\nfirst search based algorithms. Application of the improved Branch and Bound\nmethod is demonstrated in this work for I\/O screening using a controllabil-\nity criterion, viz., the minimum Hankel singular value. The results, obtained\nthrough simulation, show that the proposed method inherits all the advantages\nof the original branch and bound method. Nevertheless, it demonstrates a few\nmore merits than the original in terms of efficiency and subset-size screening.\nA screened set of I\/O combinations is more useful than a single set of best\ncombination because the screened set provides more options for control struc-\nture selection if the mathematically best combination leads to RHP zeros. A\ncase study with Tennessee-Eastman test bed problem shows that it is possible\nto stabilize the open-loop unstable plant with minimum control effort, by us-\ning three decentralized P-controllers with unit gains. It has also been proved\nthat it is impossible to stabilize the plant with total number of inputs and\noutputs less than four.\n6 ACKNOWLEDGMENT\nThe authors gratefully acknowledge the financial support provided by the\nEPSRC, UK (Grant number GR\/R 57324) for this research work.\nReferences\nBraatz, R., Lee, J., Morari, M., 1996. Screening plant designs and control\nstructures for uncertain systems. Comput. Chem. Eng. 20 (4), 463\u2013468.\nCao, Y., Biss, D., Perkins, J. D., 1996. Comparison of two techniques for as-\nsessing input-output controllability in the presence of manipulated variable\nconstraints. Computers Chem. Engng. 20 (4), 337\u2013346.\nCao, Y., Rossiter, D., Owens, D. H., 1998. Globally optimal control structure\nselection using branch and bound method. In: Preprints of DYCOPS\u20195.\nCorfu, Greece, pp. 183\u2013188.\nCao, Y., Saha, P., Jun 2003. Control structure selection for unstable processes\nusing Hankel singular value. In: 13th European Symposium on Computer\nAided Process Engineering (ESCAPE-13). Elsevier Science, Lappeenranta,\nFinland, pp. 383\u2013388.\nChen, X., 2003. An improved branch and bound algorithm for feature selection.\nPattern Recognition Letters 24, 1925\u20131933.\n15\nDowns, J. J., Vogel, E. F., 1993. A plant-wide industrial process control prob-\nlem. Computers Chem. Engng. 17 (3), 245\u2013255.\nGlover, K., 1986. Robust stabilization of linear-multivariable systems - rela-\ntions to approximation. International Journal of Control 43, 741\u2013766.\nGutierrez, R., Sahinidis, N., 1996. A branch-and-bound approach for machine\nscreening in just-in-time manufacturing systems. International Journal of\nProduction Research 34 (3), 797\u2013818.\nHavre, K., Skogestad, K., 1998. Selection of variables for regulatory control\nusing pole vectors. In: Preprints of DYCOPS\u20195. Corfu, Greece, pp. 614\u2013619.\nHavre, K., Skogestad, S., 1996. Input-output selection and partial control. In:\nProceedings of IFAC\u201996 13th World Congress. Vol. M. San Francisco, CA,\nUSA, pp. 181\u2013186.\nHavre, K., Skogestad, S., 2003. Screening of variables for stabilizing control\nusing pole vectors. IEEE Transaction on Automatic Control 48 (8), 1393\u2013\n1398.\nHeath, J., Kookos, I., Perkins, J., 2000. Process control structure selection\nbased on economics. AICHE J. 46 (10), 1998\u20132016.\nKookos, I., Perkins, J., 2001. An algorithm for simultanous process design and\ncontrol. Ind. Eng. Chem. Res. 40, 4079\u20134088.\nLuyben, M., Floudas, C., 1994a. Analyzing the interaction of design and con-\ntrol .1. a multiobjective framework and application to binary distillation\nsynthesis. Comput. Chem. Eng. 18 (10), 933\u2013969.\nLuyben, M., Floudas, C., 1994b. Analyzing the interaction of design and con-\ntrol .2. reactor separator recycle system. Comput. Chem. Eng. 18 (10), 971\u2013\n994.\nMcAvoy, T., 1998. A methodology for screening level control structures in\nplantwide control systems. Computers and Chemical Engineering 22 (11),\n1543\u20131552.\nNarendra, P. M., Fukunaga, K., 1977. A branch and bound algorithm for\nfeature subset selection. IEEE Transaction on Computers C-26 (9), 917\u2013\n922.\nRaman, R., Grossmann, I., 1991. Relation between minlp modelling and logical\ninterface for chemical process synthesis. Computers and Chemical Engineer-\ning 15 (2), 73\u201384.\nRicker, N., 2002. New simulink models of two decentral-\nized control strategies. Tennessee Eastman Challenge Archive,\nhttp:\/\/depts.washington.edu\/control\/LARRY\/TE\/download.html.\nRidout, M. S., 1988. An improved branch and bound algorithm for feature\nsubset selection. Applied Statistics 37, 139\u2013147.\nRoberts, S. J., 1984. A branch and bound algorithm for determining the op-\ntimal feature subset of given size. Applied Statistics 33, 236\u2013241.\nRyoo, H., Sahinidis, N., 1996. A branch-and-bound approach to global opti-\nmization. Journal of Global Optimization 8 (2), 107\u2013139.\nSafanov, M., Jonckheere, E., Verma, M., Limebeer, D., 1987. Synthesis of pos-\nitive real multivariable feedback systems. International Journal of Control\n16\n45 (3), 817\u2013842.\nSkogestad, S., Postlethwaite, I., 1996. Multivariable Feedback Control. Anal-\nysis and Design. John Wiley & Sons, Chichester.\nSkrifvars, H., Harjunkoski, I., Westerlund, T., Kravanja, Z., Po\u00a8rn, R., 1996.\nComparison of different minlp methods applied on certain chemical engi-\nneering problems. Computers and Chemical Engineering 20, S333\u2013S338.\nWilkinson, J., 1965. The Algebraic Eigenvalue Problem. Claredon Press, Ox-\nford, England.\nYu, B., Yuan, B., 1992. A dynamic selection algorithm for globally optimal\nsubsets. Engineering Applications of Artificial Intelligence 5 (5), 457\u2013462.\nYu, B., Yuan, B., 1993. A more efficient branch and bound algorithm for\nfeature selection. Pattern Recognition 26 (6), 883\u2013889.\n17\nPK\nw\nu\nz\ny\nFig. 1. Basic structure of a feedback system\nRoot Level 1\nLevel 2\nLevel 3\nLevel 4\nLevel 5\n4\n1 6\n1 5 6 2 6 2\n3 6 2 2 3 3 6 3 5 5\n5 6 2 5 2 5 3 6 6 2 3 5 5 3 3\nFig. 2. The solution tree for a C26 problem\n18\nC = x | i= n{ 1, 2, ..., }i c\nX = \u0001 \u0002 \u0002 \u0003\u03c6 F C\nX = X \u2013 x\n1\n{\n1\n}\n\u0001 \u0002\u0004\u0005x\n2\n... nc1\u0002 \u0003F X }\u03c6\nX = X \u2013 xnc\nnc\n{ }X = X \u2013 x\n2\n{\n2\n}\n\u0001 \u0005U x\u0006 ... nc\u0007\u0002 \u0002 \u0003F x X{ } }1\u03c6\nX = X \u2013 x\n3\n{\n3\n}\n\u0001 \u0005Unc nc -\u0002 \u0002 \u0003F x ...x{ } }1 1\u03c6\n\u0001 \u0005U x\b ... nc\u0006\u0002 \u0002 \u0002 \u0003F x x X{ } }1 2\u03c6\nFig. 3. Fixed-set and candidate-set propagation in subsets\n0 5 10 15 20\n0\n200\n400\n600\n800\n1000\n1200\n1400\n1600\n1800\nM\nin\nim\nu\nm\nH\na\nn\nk\ne\nl\nS\nin\ng\nu\nla\nr\nV\na\nlu\ne\nSubset size (Number of Inputs and Outputs)\nFig. 4. HSV vs subset-size for 10 best cases of I\/O combination\n19\n0 5 10 15 20 25 30 35\n0\n5000\n10000\n15000\nN\num\nbe\nr o\nf E\nva\nlu\nat\nio\nns\nSubset Size\nPool inherited\nPool independent\nDepth\u2212first BAB\nFig. 5. Total number of evaluations executed by different algorithms\n0 0.2 0.4 0.6 0.8 1\n40\n45\n50\n55\n60\nSe\npa\nra\nto\nr l\nev\nel\n (%\n)\nControlled output profiles\n0 0.2 0.4 0.6 0.8 1\n37\n37.5\n38\n38.5\n39\nSe\np.\n p\not\n li\nq.\n fl\now\n (%\n) Manipulated Input profiles\n0 0.2 0.4 0.6 0.8 1\n40\n45\n50\n55\n60\nSt\nrip\npe\nr l\nev\nel\n (%\n)\n0 0.2 0.4 0.6 0.8 1\n45.5\n46.5\n47.5\nSt\nr. \nliq\n. p\nro\nd.\n fl\now\n (%\n)\n0 0.2 0.4 0.6 0.8 1\n120.3\n120.4\n120.5\nTime (hr)\nR\nea\nct\nor\n te\nm\npe\nra\ntu\nre\n (\u00b0\nC)\n0 0.2 0.4 0.6 0.8 1\n40\n40.5\n41\n41.5\n42\nTime (hr)\nR\nea\nct\nor\n w\nat\ner\n fl\now\n (%\n)\nFig. 6. Closed-loop response of TE plant using stabilizing P-only controllers\n20\nTable 1\nTennessee-Eastman process manipulated variables\nVariable Variable Base case Scaling\ndescription number value (%) (%)\nD feed flow XMV 1 63.053 36.947\nE feed flow XMV 2 53.980 46.020\nA feed flow XMV 3 24.644 24.644\nA and C feed flow XMV 4 61.302 38.698\nCompressor recycle valve XMV 5 22.210 22.210\nPurge valve XMV 6 40.064 40.064\nSeparator pot liquid flow XMV 7 38.100 38.100\nStripper liquid product flow XMV 8 46.534 46.534\nStripper steam valve XMV 9 47.446 47.446\nReactor cooling water flow XMV 10 41.106 41.106\nCondenser cooling water flow XMV 11 18.114 18.114\nAgitator speed XMV 12 50.000 50.000\n21\nTable 2\nTennessee-Eastman process output variables\nVariable Variable Base Scaling Unit\ndescription number case (noise\nvalue level)\nA feed XMEAS 1 0.2502 0.0012 Kscm\/h\nD feed XMEAS 2 3664 18 Kg\/h\nE feed XMEAS 3 4509.3 22 Kg\/h\nA and C feed XMEAS 4 9.3477 0.05 Kscm\/h\nRecycle flow XMEAS 5 26.902 0.2 Kscm\/h\nReactor feed rate XMEAS 6 42.339 0.21 Kscm\/h\nReactor pressure XMEAS 7 2705 0.3 KPa gauge\nReactor level XMEAS 8 75 0.5 %\nReactor temperature XMEAS 9 120.4 0.01 \u25e6C\nPurge rate XMEAS 10 0.33712 0.0017 Kscm\/h\nProduct separator temperature XMEAS 11 80.109 0.01 \u25e6C\nProduct separator level XMEAS 12 50 1 %\nProduct separator pressure XMEAS 13 2633.7 0.3 KPa gauge\nProduct separator underflow XMEAS 14 25.16 0.125 M3\/h\nStripper level XMEAS 15 50 1 %\nStripper pressure XMEAS 16 3102.2 0.3 KPa gauge\nStripper underflow XMEAS 17 22.949 0.115 M3\/h\nStripper temperature XMEAS 18 65.731 0.01 \u25e6C\nStripper steam flow XMEAS 19 230.31 1.15 Kg\/h\nCompressor work XMEAS 20 341.43 0.2 KW\nReactor cooling water outlet temp XMEAS 21 94.599 0.01 \u25e6C\nSeparator cooling water outlet temp XMEAS 22 77.297 0.01 \u25e6C\n22\nTable 3\nControllability indices of 10 best I\/O set of size 6\nSet Input No. Output No. \u03c3 RHP zeros\n1 1, 8, 10 9, 12, 15 926.65 0.152 and 109.522\n2 4, 8, 10 9, 12, 15 878.57 0.1103 and 5.6057\u00b1 10.5721i\n3 2, 8, 10 9, 12, 15 868.89 0.1571 and 29.2248\n4 7, 8, 10 9, 12, 15 721.47 None\n5 4, 8, 10 11, 12, 15 688.34\n6 2, 8, 10 11, 12, 15 681.30\n7 7, 8, 10 11, 12, 15 673.45\n8 2, 4, 10 11, 12, 15 660.25\n9 2, 4, 10 9, 12, 15 658.35\n10 1, 8, 10 12, 15, 21 610.55\n23\n"}