{"doi":"10.1117\/12.725769","coreId":"97001","oai":"oai:generic.eprints.org:587\/core69","identifiers":["oai:generic.eprints.org:587\/core69","10.1117\/12.725769"],"title":"A biomimetic algorithm for the improved detection of microarray features,","authors":["Nicolau jr, D. V.","Nicolau, D. V.","Maini, P. K."],"enrichments":{"references":[{"id":823242,"title":"A noise-resistant algorithm for grid finding in microarray image analysis. Machine Vision and Applications.","authors":[],"date":"2006","doi":"10.1007\/s00138-006-0040-4","raw":null,"cites":null},{"id":824393,"title":"Enhancement of DNA and Microarray Analysis using Image Processing Practices (presentation),","authors":[],"date":"2005","doi":null,"raw":null,"cites":null},{"id":823653,"title":"Fungi use efficient algorithms for the exploration of microfluidics networks.","authors":[],"date":"2006","doi":"10.1002\/smll.200600105","raw":null,"cites":null},{"id":823447,"title":"Improved processing of microarray data using image reconstruction techniques","authors":[],"date":"2003","doi":"10.1109\/TNB.2003.817022","raw":null,"cites":null},{"id":823922,"title":"Maze solving by an amoeboid organism,","authors":[],"date":"2000","doi":null,"raw":null,"cites":null},{"id":824142,"title":"Motive behavior of bacteria.","authors":[],"date":"2000","doi":"10.1063\/1.882934","raw":null,"cites":null},{"id":822394,"title":"On denoising and compression ofDNAmicroarray images. Pattern Recognition 39:2478\u20132493,","authors":[],"date":"2006","doi":"10.1016\/j.patcog.2006.02.019","raw":null,"cites":null},{"id":822518,"title":"Robust segmentation and analysis of DNA microarray spots using an adaptative split and merge algorithm. Computer methods and programs in biomedicine, 8:174\u2013180,","authors":[],"date":"2006","doi":"10.1016\/j.cmpb.2005.12.001","raw":null,"cites":null},{"id":822151,"title":"Sources of variation in Affymetrix microarray experiments.","authors":[],"date":"2005","doi":"10.1186\/1471-2105-6-214","raw":null,"cites":null},{"id":823003,"title":"Spectral embedding finds meaningful (relevant) structure in image and microarray data.","authors":[],"date":"2006","doi":null,"raw":null,"cites":null},{"id":822782,"title":"Spot shape modelling and data transformations for microarrays.","authors":[],"date":"2004","doi":null,"raw":null,"cites":null}],"documentType":{"type":1}},"contributors":["Farkas, D. L.","Lief, R. C.","Nicolau, D. V."],"datePublished":"2007","abstract":"One the major difficulties of microarray technology relate to the processing of large and - importantly - error-loaded images of the dots on the chip surface. Whatever the source of these errors, those obtained in the first stage of data acquisition - segmentation - are passed down to the subsequent processes, with deleterious results. As it has been demonstrated recently that biological systems have evolved algorithms that are mathematically efficient, this contribution attempts to test an algorithm that mimics a bacterial-\"patented\" algorithm for the search of available space and nutrients to find, \"zero-in\" and eventually delimitate the features existent on the microarray surface","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/97001.pdf","fullTextIdentifier":"http:\/\/eprints.maths.ox.ac.uk\/587\/1\/229.pdf","pdfHashValue":"95828a4f32ee98d5cb2dde558021df61adc91df2","publisher":"The International Society for Optical Engineering","rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:generic.eprints.org:587<\/identifier><datestamp>\n      2015-05-29T18:24:57Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      7375626A656374733D4143:4D3932<\/setSpec><setSpec>\n      74797065733D626F6F6B<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/eprints.maths.ox.ac.uk\/587\/<\/dc:relation><dc:title>\n        A biomimetic algorithm for the improved detection of microarray features,<\/dc:title><dc:creator>\n        Nicolau jr, D. V.<\/dc:creator><dc:creator>\n        Nicolau, D. V.<\/dc:creator><dc:creator>\n        Maini, P. K.<\/dc:creator><dc:subject>\n        Biology and other natural sciences<\/dc:subject><dc:description>\n        One the major difficulties of microarray technology relate to the processing of large and - importantly - error-loaded images of the dots on the chip surface. Whatever the source of these errors, those obtained in the first stage of data acquisition - segmentation - are passed down to the subsequent processes, with deleterious results. As it has been demonstrated recently that biological systems have evolved algorithms that are mathematically efficient, this contribution attempts to test an algorithm that mimics a bacterial-\"patented\" algorithm for the search of available space and nutrients to find, \"zero-in\" and eventually delimitate the features existent on the microarray surface.<\/dc:description><dc:publisher>\n        The International Society for Optical Engineering<\/dc:publisher><dc:contributor>\n        Farkas, D. L.<\/dc:contributor><dc:contributor>\n        Lief, R. C.<\/dc:contributor><dc:contributor>\n        Nicolau, D. V.<\/dc:contributor><dc:date>\n        2007<\/dc:date><dc:type>\n        Book<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:format>\n        application\/pdf<\/dc:format><dc:language>\n        en<\/dc:language><dc:identifier>\n        http:\/\/eprints.maths.ox.ac.uk\/587\/1\/229.pdf<\/dc:identifier><dc:identifier>\n          Nicolau jr, D. V. and Nicolau, D. V. and Maini, P. K.  (2007) A biomimetic algorithm for the improved detection of microarray features,.    In Imaging, Manipulation, and Analysis of Biomolecules, Cells and Tissues V, 64411C  (n\/a).  The International Society for Optical Engineering, USA.  ISBN 10.1117\/12.725769     <\/dc:identifier><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/eprints.maths.ox.ac.uk\/587\/"],"year":2007,"topics":["Biology and other natural sciences"],"subject":["Book","PeerReviewed"],"fullText":"A Biomimetic Algorithm for the Improved Detection  \nof Microarray Features \n \n \nDan V. Nicolau, Jr1, Dan V. Nicolau2, Philip K. Maini1 \n \n1 Centre for Mathematical Biology, Mathematical Institute,  \nUniversity of Oxford, Oxford, OX1 3LB, UK \n \n2 Department of Electrical and Electronic Engineering, \nLiverpool University, Brownlow Hill L69 3GJ, Liverpool, UK \n \n \nABSTRACT \n \nOne the major difficulties of microarray technology relate to the processing of large and \u2013 importantly \u2013 error-\nloaded images of the dots on the chip surface. Whatever the source of these errors, those obtained in the first stage of \ndata acquisition \u2013 segmentation \u2013 are passed down to the subsequent processes, with deleterious results. As it has been \ndemonstrated recently that biological systems have evolved algorithms that are mathematically efficient, this \ncontribution attempts to test an algorithm that mimics a bacterial-\u201cpatented\u201d algorithm for the search of available space \nand nutrients to find, \u201czero-in\u201d and eventually delimitate the features existent on the microarray surface. \n \n1. INTRODUCTION \n \nThe introduction of microarray technology in the late 1990s has been the workhorse of genomics revolution \nand incoming proteomics and cellomics revolutions as well as being relevant to other high throughput screening \ntechniques. Microarray technology is based on the large parallel testing of biomolecular interactions of pair \nbiomolecules, of which one (probe biomolecule) is immobilized on the surface of the microarray chip and its pair (target \nbiomolecule) is presented to the microarray surface from a solution. The deposition of the probe biomolecules on the \nmicroarray surface can be achieved by a variety of methods, either based on direct mechanical contact (as in the initial \nmicroarray technology), or thorough more evolved technologies derived from ink-jet printing. Whatever the case, the \nspots produced on the microarray surface have approximate circular shapes with uneven distribution of the \nconcentration of the probe biomolecules inside the spot. The microarrays are then read through the biomolecular-\nspecific recognition of the regions where probe biomolecules are immobilized and subsequent attachment of the target \nbiomolecules. The geometrical imperfections of the dots comprising probes can be -at times- greatly amplified by this \nprocess, which has its own imperfections, e.g., non-specific attachment. Furthermore, uncertainties regarding the \nrelationship between the intensity and the emission wavelength of the fluorescence \u2013the classical method for readout- \nversus the concentration of the target biomolecules can also conspire towards the deterioration of the images of the \nfeatures on the microarray surface. \nThe interpretation of the microarray data starts with the integration of the signal compared with the background \non the area of individual dots \u2013 segmentation-, the results being further used for elaborate clustering methods. It follows \nthat the incorrect demarcation of the circular dot features will propagate throughout the whole microarray data \nprocessing and will add to the other sources of variability of microarray data, e.g., biological variability, technical \nvariability and labeling [1]. Several methods have been proposed to denoise data [2], adaptative split and merge \nalgorithm [3], polynomial-hyperbolic spot shape model in combination with the Box\u2013Cox transformation [4], spectral \nembedding [5], noise-resistant algorithms [6], background extraction [7], just to name few recent contributions.  \nIt has been demonstrated recently that biological systems have evolved algorithms that are mathematically \nefficient, inter alia, for the exploration of available space [8] and finding nutrients [9]. This contribution attempts to test \nImaging, Manipulation, and Analysis of Biomolecules, Cells, and Tissues V,\nedited by Daniel L. Farkas, Robert C. Leif, Dan V. Nicolau, Proc. of SPIE\nVol. 6441, 64411C, (2007) \u00b7 1605-7422\/07\/$18 \u00b7 doi: 10.1117\/12.725769\nProc. of SPIE Vol. 6441  64411C-1\nan algorithm that mimics a bacterial-\u201cpatented\u201d algorithm for the search of available space and nutrients to find, \u201czero-\nin\u201d and eventually delimitate the features existent on the features on the microarray surface. \n \n2. METHODS \n \nWe begin by describing the swimming behavior of Escherichia coli. E coli is a single-celled organism that lives \nin the gut. Each bacterium possesses a set of around 6 rotary motors each roughly 45 nm wide. Each motor drives a thin, \nhelical filament that extends several cell body lengths out from the bacterium; the motor-filament ensemble is called a \nflagellum. E coli uses the motion of the flagella in concert to swim towards favorable areas (for example, regions of \nhigh nutrient concentration). If all the flagella rotate counterclockwise, they form a spinning bundle and the cell swims \nin a roughly straight line (the trajectory is perturbed slightly by Brownian forces) \u2013 a \u201crun\u201d. If some or all of the flagella \nspin clockwise, the bundle flies apart and the cell turns in place in a random fashion \u2013 a \u201ctumble\u201d. By combining these \ntwo modes, the cell can alternate between swimming towards favorable areas and randomizing its new direction of \ntravel, thus staying in these regions or keeping away from other, less favorable areas (Berg, 2000).  \nThe cell can find areas of high nutrient concentration by biasing its random walk. The biochemical network \nresponsible for chemotaxis compares the last second of the bacterium\u2019s life with the previous 3 seconds (Berg, 2000). If \nconditions have improved then the mean run length is increased. If, to the contrary, conditions have become less \nfavorable, then the mean run length is decreased. Both the run and tumble times are exponentially distributed. In a \ngradient-free medium, the mean run time is 1.0 s and the mean tumble time is 0.1 s. Examples of typical E. coli \ntrajectories in such a medium are shown in Figure 1.  \n \n   \nFigure 1. Typical E coli trajectories in a gradient-free medium. \n \nIn order to mimic the swimming behavior of E coli, we implemented the following Monte Carlo algorithm. The \nmedium in which the organisms evolve in our simulations is a two-dimensional lattice (representing a microarray \nimage) of dimensions n \u00d7 n voxels. Initially, a fixed number of model organisms is randomly distributed on the lattice. \nAn attractant \u03c7(x,y) is distributed on this surface, such that the maximum concentration is found in the centre of the \nsimulation area and the minimum at the edges. \nBesides its position and direction vector \u03b8i, each bacterium i is endowed with the following properties: (1) a \nstate \u2013 either \u201cswimming\u201d or \u201cturning\u201d, (2) a simple comparative memory function M defined as \n \n \n                                                                                                                                                                              (1) \n \n\u23aa\u23a9\n\u23aa\u23a8\n\u23a7\n\u2264<\u2212\n\u2264<\n=\notherwise              ,0\n    ,\/1\n0       ,\/1\n)( drd\nrr\nwww\nww\nM \u03c4\n\u03c4\n\u03c4\nProc. of SPIE Vol. 6441  64411C-2\nwhere wr and wd are called the recent and distant memory windows, respectively and (3) two response functions, S and T \n(described below).  \nThe algorithm visits each organism. We calculate the comparison function A(t) as follows: \n \n \n                                                                                                                                                                              (2) \n \n \n \nwhere C(t) is the concentration of attractant seen by the organism at time t, i.e. the difference is calculated between the \naverage attractant seen over the last wr steps and that seen over the preceding wd steps (a simple comparison of the \nrecent and distant past). The algorithm visits each organism in turn, incrementing its position and direction, updating its \nstate, computing the comparison function A and recording the amount of attractant seen at each step. After every \norganism is visited, the simulation time is incremented by 1 and the cycle is repeated. The position and state of the \norganism are changed at each step according to the following rules: \n \n\u2022 If the organism is in the \u201cswimming\u201d state: \no Its direction \u03b8i is perturbed by \u03b7Drot, where \u03b7 is a normally distributed random number with mean \n0 and standard deviation 1 and Drot is a rotational diffusion coefficient, known to be 0.15 rad2\/sec \nfor E. coli (Strong et al., 1998). \no Its position is incremented by a vector of length v (set to 1 in our simulations) pointing in the \ncurrent direction. \no A random number r between 0 and 1 is generated and compared with the swimming function \nS(A(t)), described below. If r<S(A(t)) then the organism stays in the \u201cswimming\u201d state, otherwise \nit switches to the \u201cturning\u201d state. \n\u2022 If the organism is in the \u201cturning\u201d state: \no Its direction is perturbed by \u03b7(Drot + Dturn) similarly to above, where Dturn is the diffusion \ncoefficient of \u201cturning\u201d and is set to \u03c0\/2 in our simulations.  \no A random number r between 0 and 1 is generated and compared with the turning function T(A(t)), \ndescribed below. If r<T(A(t) then the organism stays in the \u201cturning\u201d state, otherwise it switches \nto the \u201cswimming\u201d state. \n \nWe now describe the meaning of each of the functions. Informally, A(t) is a comparison of the recent and \ndistant past using the memory function M. Note that in order to calculate A(t), the organism only uses, at each step, the \ncurrent concentration of attractant. The functions S and T are then used by the organism to probabilistically decide, \nbased on A(t), whether to remain in the current state (if swimming, using S; if turning, using T), or to switch to the other \nstate: a Markov chain model. S and T could in principle be continuous in A(t), so that the probability of remaining in the \ncurrent state depends continuously on the comparison of recent and distant past. However, in silico, we discretise these \nfunctions so that the A(t) space is partitioned into m bins each of size 2Amax\/m where Amax is the maximum value of A(t) \nwe expect (which can be estimated using the attractant distribution). We find, at each step, the appropriate bin j such \nthat  \n \n                                                                                                       .                      .                                               (3) \n \n \nS and T can then be determined using a lookup table. For simplicity we restrict ourselves to the m = 2 case, in \nwhich the organism can only tell whether life is getting \u2018better\u2019 (positive A(t), j=1) or \u2018worse\u2019 (negative A(t), j=2) but \ncannot quantify the improvement or deterioration. Larger values m would correspond to a higher resolution and allow \nthe organism to employ increasingly sophisticated strategies to find regions of high attractant concentration (in all cases, \nj=m\/2 is the point between life getting better and worse).  \nThinking about the intensity of an image as different levels of nutrient concentration in space allows us to use \nthis algorithm to identify regions of high intensity. Clearly, the form of \u03c7(x,y) will affect the motion of the model \nbacteria. We initially suppose for simplicity that the intensity of a spot can be well described by a Gaussian function. \n)()()(\n),min(\n0\n\u03c4\u03c4\n\u03c4\nMtCtA\ntww dr\u2211+\n=\n\u2212=\nm\njAAj\nm\nAjA maxmaxmaxmax\n2)1(2\n+\u2212<\u2264\u2212+\u2212\nProc. of SPIE Vol. 6441  64411C-3\nTo locate the centre of a spot that is located randomly inside the simulation area, we can compute, at periodic \nintervals, the \u201ccentre of mass\u201d of the model bacteria as follows: \n \n \n \n \n                                                            (4) \n \n \n \n \n \nwhere xi and yi are the x and y coordinates of bacterium i. As bacteria aggregate around the intensity centre of the image \n(the centre of the spot), the point (cx,cy) approaches the true centre of the intensity spot. We can also get a measure of the \ndimensions of the spot by computing the standard deviation of the bacterial positions: \n \n                                               \nn\ncycx\nn\ni\nyi\nn\ni\nxi\nspot\n\u2211\u2211\n==\n\u2212+\u2212\n=\n1\n2\n1\n2 )()(\n\u03c3 .                                                    (5) \n \n3. RESULTS \n \nWe first tried our method on detecting the centre and size of a single spot located somewhere at random inside \na rectangular area. We let the spot have a Gaussian intensity distribution, so that the intensity of the image is given by \n \n                                                             2\n2\n0\n2\n0\n2\n)()(\n22\n1),( \u03c3\n\u03c0\u03c3\n\u03c7\nyyxx\neyx\n\u2212+\u2212\n\u2212\n=                                                          (6) \n \nwhere (x0, y0) is the centre of the spot and \u03c3 is the standard deviation of the Gaussian and is the characteristic spot size. \nWe seeded the lattice with 200 model bacteria, initially randomly located and heading in randomly chosen directions. \nFigure 2 shows the computed centre of the image (using Eq. 4) and the dimensions of the spot, determined using Eq. 5. \n \n \nFigure 2. Determining the centre and width of a spot using model bacteria. Regions of high intensity are shown \nin red. Left: iterates of the spot centre, computed using Eq 4. Right: iterates of the spot size, computed using \nEquation 5. \nn\ny\nc\nn\nx\nc\nn\ni\ni\nx\nn\ni\ni\nx\n\u2211\n\u2211\n=\n=\n=\n=\n1\n1\nProc. of SPIE Vol. 6441  64411C-4\nGaussian intensity distributions leads to good performance of the algorithm, possibly because in the natural \nhabitat of bacteria, the nutrient is dispersed through diffusive processes, which are typically characterised by Gaussian \nor Gaussian-like distributions (since the fundamental solution of Fick\u2019s equation takes this form). However, this form \nmay not be realistic for a microarray spot since, for example, we expect the edges of the spot to be much sharper than \nthe long tail of a Gaussian distribution. We can simulate this, however, by truncating the Gaussians below a given \nthreshold of intensity \u03b8 so that for all values of \u03c7(x,y)<\u03b8 we simply set \u03c7=0. Equation 4 can then be modified so that \nonly the model bacteria located on voxels whose intensity is non-zero will be taken into account. Equation 5 can be \nsimilarly modified. \nFurthermore, microarray images consist of many spots and the algorithm must deal with this additional \nconstraint. Suppose for simplicity that the microarray is already segmented into square areas, each of which may or may \nnot contain a spot \u2013 segmentation algorithms for this problem exist and perform well [3, 6]. We tested the bacterial \nalgorithm using these two additional constraints. Typical results are shown in Figure 3 on a model 2 \u00d7 2 microarray with \ndifferent (randomly generated) spot sizes, located at random points inside each array location. \n \n \nFigure 3. Spot sizes and centres on a 2 \u00d7 2 model microarray located using the bacterial algorithm. Each spot \nis a truncated Gaussian with \u03b8=0.15 (see text). \n \nFinally, we measured the performance of our algorithm on a real microarray image chosen from [11]. Figure 4 \nshows the determined spot sizes and centres. \n \n \nProc. of SPIE Vol. 6441  64411C-5\nC 0\nca\n\\\\ \/\n3\n   \nFigure 4. Performance of the algorithm on a real 3\u00d73 microarray image after 100 (left) and 1000 iterations \n(right) (determined spot areas shown by solid circles). \n \n4. DISCUSSION AND FUTURE WORK \n \nImportantly, the algorithm presented here has potential even if the image is not segmented, as we have assumed \nit to be. In this more general case, the model bacteria would still converge on the spots present in the image, but it would \nnot be possible to identify the number of spots or set bounds on their locations a priori. To solve this problem, one \nwould need to detect when a cluster of bacteria has formed, this in turn requiring an algorithm dedicated to this task. \nOne possibility is to mimic \u201cquorum sensing\u201d, a phenomenon whereby bacteria not only consume but also release a \nchemoattractant into the environment. Other bacteria are then attracted to this region and in such a way a stable cluster \nis formed. It would then be possible to identify a cluster formed by model bacteria when the mean \u201cchemoattractant\u201d \nreleased on a set of voxels exceeds a known threshold. This will form the subject of future work. \nOne key step is to compare this algorithm with more classical approaches such as those presented in [2, 4, 5] \nand other contributions. We have not done this here and it will also form the subject of future work. However, we note \nthat in general, biomimetic algorithms are expected to be useful in areas where classical algorithms encounter \ndifficulties, such as image analysis, object identification and pattern recognition and therefore, that there is some \nevidence to suggest that bacterial-inspired algorithms could be useful in image analysis in general and in microarray \nanalysis in particular. \n \n5. ACKNOWLEDGEMENTS \n \nThe authors would like to thank Alex Oshmyansky for useful discussions. D.V.N. Jr is supported by the \nClarendon Scholarship, the United Kingdom ORS Award Scheme and the Devorguilla Scholarship at Balliol College, \nOxford University.  \n \n6. REFERENCES \n \n[1] Zakharkin, S.O., Kim, K., Mehta, T., Chen, L., Barnes, S., Scheirer, K.E., Parrish, R.S., Allison, D.B., Page, G.P. \nSources of variation in Affymetrix microarray experiments. BMC Bioinformatics, 6:214-225, 2005. \n[2] Adjeroh, D.A., Zhang, Y., Parthe, R. On denoising and compression ofDNAmicroarray images. Pattern Recognition \n39:2478\u20132493, 2006. \nProc. of SPIE Vol. 6441  64411C-6\n[3] Barra, V. Robust segmentation and analysis of DNA microarray spots using an adaptative split and merge algorithm. \nComputer methods and programs in biomedicine, 8:174\u2013180, 2006. \n[4] Ekstr\u00f8m, C.T., Bak, S., Kristensen, C., Rudemo, M. Spot shape modelling and data transformations for microarrays. \nBioinformatics, 20:2270\u20132278, 2004. \n[5] Higgs, B.W., Jennifer Weller, J., Solka, J.L. Spectral embedding finds meaningful (relevant) structure in image and \nmicroarray data. BMC Bioinformatics, 7:74-87, 2006. \n[6] Novikov, E. Barillot, E. A noise-resistant algorithm for grid finding in microarray image analysis. Machine Vision \nand Applications. 17:337\u2013345, 2006. \n[7] O\u2019Neill, P., Magoulas, G.D. Improved processing of microarray data using image reconstruction techniques \nIEEE Transtactions on Nanobioscience, 2, 176-183, 2003. \n[8] Hanson, K.L., Nicolau, D.V., Jr, Filipponi, F., Wang, L., Lee, A.P. Nicolau, D.V. Fungi use efficient algorithms for \nthe exploration of microfluidics networks. Small, 2, 1212-1220, 2006. \n[9] Nakagaki, T., Yamada, H., T\u00f3th, \u00c1. Maze solving by an amoeboid organism, Nature, 407:470, 2000. \n[10] Berg, H.C., Motive behavior of bacteria. Physics Today, 53(1):24\u201329, 2000. \n[11] Rhodes, P., Enhancement of DNA and Microarray Analysis using Image Processing Practices (presentation), 2005. \nProc. of SPIE Vol. 6441  64411C-7\n"}