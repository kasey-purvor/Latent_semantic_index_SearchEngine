{"doi":"10.1145\/355324.355325","coreId":"70509","oai":"oai:eprints.lancs.ac.uk:11867","identifiers":["oai:eprints.lancs.ac.uk:11867","10.1145\/355324.355325"],"title":"Exploiting Space and Location as a Design Framework for Interactive Mobile Systems","authors":["Dix, Alan","Rodden, Tom","Davies, Nigel","Friday, Adrian","Palfreyman, Kevin"],"enrichments":{"references":[{"id":16304642,"title":"Aether: An Awareness Engine for CSCW.","authors":[],"date":"1997","doi":"10.1007\/978-94-015-7372-6_15","raw":"SANDOR, O., BOGDAN, C., AND BOWERS, J. 1997. Aether: An Awareness Engine for CSCW. In Proceedings of the Fifth European Conference on Computer Supported Cooperative Work (ECSCW\u201997), J. Hughes, Ed. Kluwer Academic, Dordrecht, Netherlands, 221\u2013236.","cites":null},{"id":16304646,"title":"An Overview of the ParcTab Ubiquitous Computing Experiment.","authors":[],"date":"1995","doi":"10.1109\/98.475986","raw":"WANT, R., SCHILIT,B .N . ,A DAMS,N .I . ,G OLD, R., PETERSEN, K., GOLDBERG, D., ELLIS,J .R . ,AND WEISER, M. 1995. An Overview of the ParcTab Ubiquitous Computing Experiment. IEEE Personal Commun. 2, 6 (Dec.), 28\u201343.","cites":null},{"id":16304563,"title":"Cooperation without (reliable) Communication: Interfaces for Mobile Applications.","authors":[],"date":"1995","doi":"10.1088\/0967-1846\/2\/3\/005","raw":"DIX, A. J. 1995. Cooperation without (reliable) Communication: Interfaces for Mobile Applications. Distrib. Syst. Eng. 2, 3, 171\u2013181.","cites":null},{"id":16304656,"title":"CyberDesk: automated integration of desktop and network services.","authors":[],"date":"1997","doi":"10.1145\/258549.259031","raw":"WOOD, A., DEY, A., AND ABOWD, G. D. 1997. CyberDesk: automated integration of desktop and network services. In Proceedings of the ACM Conference on Human Factors in Computing Systems (CHI \u201997, Atlanta, GA, Mar. 22\u201327), S. Pemberton, Ed. ACM Press, New York, NY, 552\u2013553.","cites":null},{"id":16304639,"title":"Design of a multi-media vehicle for social browsing.","authors":[],"date":"1988","doi":"10.1145\/62266.62269","raw":"ROOT, R. W. 1988. Design of a multi-media vehicle for social browsing. In Proceedings of the ACM Conference on Computer-Supported Cooperative Work (CSCW \u201988, Portland, OR, Sept. 26\u201328), I. Greif, Chair. ACM Press, New York, NY, 25\u201338.","cites":null},{"id":16304579,"title":"Design principles for interactive software.","authors":[],"date":"1997","doi":"10.1007\/978-0-387-34912-1","raw":"GRAM,C .AND COCKTON, G., EDS. 1997. Design principles for interactive software. Chapman and Hall, Ltd., London, UK.","cites":null},{"id":16304559,"title":"Developing a Context Sensitive Tourist Guide.","authors":[],"date":"1998","doi":"10.1016\/s0097-8493(99)00119-3","raw":"DAVIES, N., MITCHELL, K., CHEVERST, K., AND BLAIR, G. S. 1998. Developing a Context Sensitive Tourist Guide. University of Lancaster, Lancaster, UK. Technical Report Computing Department.","cites":null},{"id":16304565,"title":"Exploiting Space and Location \u2022 319","authors":[],"date":"2000","doi":null,"raw":"Exploiting Space and Location \u2022 319 ACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.DIX, A. J. 1996. Closing the Loop: modelling action, perception and information. In Proceedings on Advanced Visual Interfaces (AVI\u201996, Gubbio, Italy), T. Catarci, M. F. Costabile, S. Levialdi, and G. Santucci, Eds. ACM Press, New York, NY, 20\u201328.","cites":null},{"id":16304664,"title":"Exploiting Space and Location \u2022 321","authors":[],"date":"2000","doi":"10.1145\/355324.355325","raw":"Exploiting Space and Location \u2022 321 ACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.","cites":null},{"id":16304577,"title":"Generative communication in Linda.","authors":[],"date":"1985","doi":"10.1145\/2363.2433","raw":"GELERNTER, D. 1985. Generative communication in Linda. ACM Trans. Program. Lang. Syst. 7, 1 (Jan.), 80\u2013112.","cites":null},{"id":16304635,"title":"Getting to Know: the design space for notification servers.","authors":[],"date":"1998","doi":"10.1145\/289444.289497","raw":"RAMDUNY, D., DIX, A., AND RODDEN, T. 1998. Getting to Know: the design space for notification servers. In Proceedings on CSCW.","cites":null},{"id":16304567,"title":"Interactive systems design and formal development are incompatible?.","authors":[],"date":"1989","doi":null,"raw":"DIX,A .J .AND HARRISON, M. D. 1989. Interactive systems design and formal development are incompatible?. In The Theory and Practice of Refinement, J. McDermid, Ed. Butterworth Publishers, Stoneham, MA, 12\u201326.","cites":null},{"id":16304644,"title":"Java Distributed Computing White Papers.","authors":[],"date":"1998","doi":null,"raw":"SUN MICROSYSTEMS. 1998. Java Distributed Computing White Papers. http:\/\/java.sun.com\/ products\/javaspaces\/whitepapers\/index.html.","cites":null},{"id":16304584,"title":"Looking at ourselves: an examination of the social organisation of two research laboratories.","authors":[],"date":"1992","doi":"10.1145\/143457.143542","raw":"HARPER, R. H. R. 1992. Looking at ourselves: an examination of the social organisation of two research laboratories. In Proceedings of the ACM Conference on Computer-Supported Cooperative Work (CSCW \u201992, Toronto, Canada, Oct. 31\u2013Nov. 4), M. Mantel and R. Baecker, Chairs. ACM Press, New York, NY, 330\u2013337.","cites":null},{"id":16304551,"title":"Meme tags and community mirrors: moving from conferences to collaboration.","authors":[],"date":null,"doi":"10.1145\/289444.289490","raw":"Meme tags and community mirrors: moving from conferences to collaboration. In Proceedings of the 1998 ACM Conference on Computer-Supported Cooperative Work (CSCW \u201998, Seattle, WA, Nov. 14\u201318), S. Poltrock and J. Grudin, Chairs. ACM Press, New York, NY, 159\u2013168.","cites":null},{"id":16304566,"title":"Modelling status and event behaviour of interactive systems.","authors":[],"date":"1996","doi":"10.1049\/sej.1996.0044","raw":"DIX,A .AND ABOWD, G. 1996. Modelling status and event behaviour of interactive systems. Softw. Eng. J. 11, 6, 334\u2013346.","cites":null},{"id":16304631,"title":"Notification servers for synchronous groupware.","authors":[],"date":"1996","doi":"10.1145\/240080.240232","raw":"PATTERSON,J .F . ,D AY, M., AND KUCAN, J. 1996. Notification servers for synchronous groupware. In Proceedings of the 1996 ACM Conference on Computer-Supported Cooperative Work (CSCW \u201996, Boston, MA, Nov. 16\u201320), M. S. Ackerman, Ed. ACM Press, New York, NY, 122\u2013129.","cites":null},{"id":16304556,"title":"PAC: an object oriented model for dialogue design.","authors":[],"date":"1987","doi":"10.1016\/b978-0-444-70304-0.50074-1","raw":"COUTAZ, J. 1987. PAC: an object oriented model for dialogue design. In Proceedings on Human Computer Interaction (INTERACT\u201987), H.-J. Bullinger and B. Shackel, Eds. Elsevier North-Holland, Inc., New York, NY, 431\u2013436.","cites":null},{"id":16304561,"title":"Pace and interaction.","authors":[],"date":"1992","doi":null,"raw":"DIX, A. 1992. Pace and interaction. In Proceedings on People and Computers VII: Proceedings of HCI \u201992 (HCI \u201992, York, UK, Sept.), A. Monk, D. Diaper, and M. D. Harrison, Eds. Cambridge University Press, New York, NY, 193\u2013207.","cites":null},{"id":16304572,"title":"Physical spaces, virtual places and social worlds: a study of work in the virtual.","authors":[],"date":"1996","doi":"10.1145\/240080.240322","raw":"FITZPATRICK, G., KAPLAN, S., AND MANSFIELD, T. 1996. Physical spaces, virtual places and social worlds: a study of work in the virtual. In Proceedings of the 1996 ACM Conference on Computer-Spported Cooperative Work (CSCW \u201996, Boston, MA, Nov. 16\u201320), M. S. Ackerman, Ed. ACM Press, New York, NY, 334\u2013343.","cites":null},{"id":16304637,"title":"Populating the application: a model of awareness for cooperative applications.","authors":[],"date":"1996","doi":"10.1145\/240080.240200","raw":"RODDEN, T. 1996. Populating the application: a model of awareness for cooperative applications. In Proceedings of the 1996 ACM Conference on Computer-Spported Cooperative Work (CSCW \u201996, Boston, MA, Nov. 16\u201320), M. S. Ackerman, Ed. ACM Press, New York, NY, 87\u201396.","cites":null},{"id":16304661,"title":"PSI: A Platform for Shared Interaction.","authors":[],"date":"1999","doi":"10.1007\/978-94-011-4441-4_19","raw":"PALFREYMAN, K., TREVOR, J., AND RODDEN, T. 1999. PSI: A Platform for Shared Interaction. In Proceedings on ECSCW (ECSCW99, Copenhagen, Denmark, 12-16 Sept.). Kluwer Academic, Dordrecht, Netherlands, 351\u2013371.","cites":null},{"id":16304630,"title":"Rapid prototyping of mobile context-aware applications: the Cyberguide case study.","authors":[],"date":"1996","doi":"10.1145\/236387.236412","raw":"LONG, S., KOOPER, R., ABOWD,G .D . ,AND ATKESON, C. G. 1996. Rapid prototyping of mobile context-aware applications: the Cyberguide case study. In Proceedings of the 2nd Annual International Conference on Mobile Computing and Networking (MOBICOM \u201996, Rye, NY, 320 \u2022 A. Dix et al.","cites":null},{"id":16304582,"title":"Real time groupware as a distributed system: concurrency control and its effect on the interface.","authors":[],"date":"1994","doi":"10.1145\/192844.193011","raw":"GREENBERG,S .AND MARWOOD, D. 1994. Real time groupware as a distributed system: concurrency control and its effect on the interface. In Proceedings of the ACM Conference on Computer-Supported Cooperative Work (CSCW \u201994, Chapel Hill, NC, Oct. 22\u201326), J. B. Smith, F. D. Smith, and T. W. Malone, Chairs. ACM Press, New York, NY, 207\u2013217.","cites":null},{"id":16304586,"title":"Rooms: The use of multiple virtual workspaces to reduce space contention in a window-based graphical user interface.","authors":[],"date":"1986","doi":"10.1145\/24054.24056","raw":"HENDERSON,D .A .AND CARD, S. 1986. Rooms: The use of multiple virtual workspaces to reduce space contention in a window-based graphical user interface. ACM Trans. Graph. 5, 3 (July), 211\u2013243.","cites":null},{"id":16304625,"title":"Rover: A Toolkit for Mobile Information Access.","authors":[],"date":"1995","doi":"10.1145\/224057.224069","raw":"JOSEPH, A., DELESPINASSE, A., TAUBER, J., GIFFORD, D., AND KAASHOEK, M. F. 1995. Rover: A Toolkit for Mobile Information Access. In Proceedings of the 15th ACM Symposium on Operating System Principles (SOSP, Copper Mountain Resort, Colorado, U.S., 3-6 Dec.). ACM Press, New York, NY, 156\u2013171.","cites":null},{"id":16304569,"title":"Software issues in wearable computing.","authors":[],"date":"1997","doi":null,"raw":"FICKAS, S., KORTUEM, G., AND SEGALL, Z. 1997. Software issues in wearable computing. In Proceedings of the CHI Workshop on Research Issues in Wearable Computers (Atlanta, GA). ACM, New York, NY.","cites":null},{"id":16304652,"title":"Some computer science issues in ubiquitous computing.","authors":[],"date":"1993","doi":"10.1145\/159544.159617","raw":"WEISER, M. 1993. Some computer science issues in ubiquitous computing. Commun. ACM 36, 7 (July), 75\u201384.","cites":null},{"id":16304558,"title":"Supporting Adaptive Services in a Heterogeneous Mobile Environment.","authors":[],"date":"1994","doi":"10.1109\/mcsa.1994.513475","raw":"DAVIES, N., BLAIR, G., CHEVERST, K., AND FRIDAY, A. 1994. Supporting Adaptive Services in a Heterogeneous Mobile Environment. In Proceedings of the Workshop on Mobile Computing Systems and Applications (Mobile \u201994, Santa Cruz, CA, Dec.), L.-F. Cabrera and M. Satyanarayanan, Eds. IEEE Computer Society Press, Los Alamitos, CA, 153\u2013157.","cites":null},{"id":16304546,"title":"Supporting co-operative work in virtual environments.","authors":[],"date":"1994","doi":null,"raw":"BENFORD, S., BOWERS, J., FAHLEN,L .E . ,M ARIANI, J., AND RODDEN, T. 1994. Supporting co-operative work in virtual environments. Computer J. 37,8 .","cites":null},{"id":16304594,"title":"Tangible bits: Towards seamless interfaces between people, bits and atoms.","authors":[],"date":"1997","doi":"10.1145\/258549.258715","raw":"ISHII,H .AND ULLMER, B. 1997. Tangible bits: Towards seamless interfaces between people, bits and atoms. In Proceedings of the ACM Conference on Human Factors in Computing Systems (CHI \u201997, Atlanta, GA, Mar. 22\u201327), S. Pemberton, Ed. ACM Press, New York, NY, 234\u2013241.","cites":null},{"id":16304641,"title":"TeamRooms: Network places for collaboration.","authors":[],"date":"1996","doi":"10.1145\/240080.240319","raw":"ROSEMAN,M .AND GREENBERG, S. 1996. TeamRooms: Network places for collaboration. In Proceedings of the 1996 ACM Conference on Computer-Spported Cooperative Work (CSCW \u201996, Boston, MA, Nov. 16\u201320), M. S. Ackerman, Ed. ACM Press, New York, NY, 325\u2013333.","cites":null},{"id":16304588,"title":"Temporal Aspects of Usability: The relevance of time to the development and use of human-computer systems.","authors":[],"date":"1998","doi":null,"raw":"HOWARD,S .AND HOWARD, J., EDS. 1998. Temporal Aspects of Usability: The relevance of time to the development and use of human-computer systems. Interact. Comput..","cites":null},{"id":16304574,"title":"The affordances of media spaces for collaboration.","authors":[],"date":"1992","doi":"10.1145\/143457.371596","raw":"GAVER, W. W. 1992. The affordances of media spaces for collaboration. In Proceedings of the ACM Conference on Computer-Supported Cooperative Work (CSCW \u201992, Toronto, Canada, Oct. 31\u2013Nov. 4), M. Mantel and R. Baecker, Chairs. ACM Press, New York, NY, 17\u201324.","cites":null},{"id":16304627,"title":"The art and science of Smalltalk.","authors":[],"date":"1995","doi":null,"raw":"LEWIS, S. 1995. The art and science of Smalltalk. Prentice Hall International (UK) Ltd., Hertfordshire, UK.","cites":null},{"id":16304649,"title":"The computer of the 21st century.","authors":[],"date":"1991","doi":"10.1038\/scientificamerican0991-94","raw":"WEISER, M. 1991. The computer of the 21st century. Sci. Am. 265, 3 (Sept.), 66\u201375.","cites":null},{"id":16304554,"title":"The Effects Of Mobility on Reliable Transport Protocols.","authors":[],"date":"1994","doi":"10.1109\/icdcs.1994.302385","raw":"C\u00c1CERES,R .AND IFTODE, L. 1994. The Effects Of Mobility on Reliable Transport Protocols. In Proceedings of the 14th International Conference on Distributed Computer Systems (ICDCS, Prozen, Poland, June 22-24). 12\u201320.","cites":null},{"id":16304623,"title":"The impact of time and place on the operation of mobile computing devices.","authors":[],"date":"1997","doi":"10.1007\/978-1-4471-3601-9_11","raw":"JOHNSON, C. W. 1997. The impact of time and place on the operation of mobile computing devices. In Proceedings of the conference of HCI \u201997 on People and Computers XII (HCI \u201997, Bristol, UK). 175\u2013190.","cites":null},{"id":16304591,"title":"The role of ethnography in interactive systems design.","authors":[],"date":"1995","doi":"10.1145\/205350.205358","raw":"HUGHES, J., KING, V., RODDEN, T., AND ANDERSEN, H. 1995. The role of ethnography in interactive systems design. interactions 2, 2 (Apr.), 56\u201365.","cites":null},{"id":16304549,"title":"Understanding and constructing shared spaces with mixed-reality boundaries.","authors":[],"date":"1998","doi":"10.1145\/292834.292836","raw":"BENFORD, S., GREENHALGH, C., REYNARD, G., BROWN, C., AND KOLEVA, B. 1998. Understanding and constructing shared spaces with mixed-reality boundaries. ACM Trans. Comput. Hum. Interact. 5, 3, 185\u2013223.","cites":null},{"id":16304544,"title":"Virtual objects in the real world.","authors":[],"date":"1997","doi":"10.1145\/245108.245120","raw":"ALIAGA, D. G. 1997. Virtual objects in the real world. Commun. ACM 40, 3, 49\u201354. BASS, L., KASABACH, C., MARTIN, R., SIEWIOREK, D., SMAILAGIC, A., AND STIVORIC, J. 1997. The design of a wearable computer. In Proceedings of the ACM Conference on Human Factors in Computing Systems (CHI \u201997, Atlanta, GA, Mar. 22\u201327), S. Pemberton, Ed. ACM Press, New York, NY, 139\u2013146.","cites":null},{"id":16304633,"title":"Why, What, Where, When: Architectures for Co-operative work on the WWW.","authors":[],"date":"1998","doi":"10.1007\/978-1-4471-3601-9_17","raw":"RAMDUNY,D .AND DIX, A. 1998. Why, What, Where, When: Architectures for Co-operative work on the WWW. In Proceedings of the primary European Annual Conference on Human Computer Interaction (HCI\u201998, Sheffield Hallam University, Bristol, UK, Sept. 1-4). Springer-Verlag, Vienna, Austria, 283\u2013301.","cites":null},{"id":16304620,"title":"Workshop Report: Temporal Aspects of Usability.","authors":[],"date":"1996","doi":"10.1145\/226650.226662","raw":"JOHNSON,C .AND GRAY, P. 1996. Workshop Report: Temporal Aspects of Usability. SIGCHI Bull. 28,2 .","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2000-09","abstract":"This article considers the importance of context in mobile systems. It considers a range of context-related issues and focus on location as a key issue for mobile systems. A design framework is described consisting of taxonomies of location, mobility, population, and device awareness. The design framework informs the construction of a semantic model of space for mobile systems. The semantic model is reflected in a computational model built on a distributed platform that allows contextual information to be shared across a number of mobile devices. The framework supports the design of interactive mobile systems while the platform supports their rapid development","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/70509.pdf","fullTextIdentifier":"http:\/\/eprints.lancs.ac.uk\/11867\/1\/tochi%2Ddix.pdf","pdfHashValue":"8785adb93cd8166d56e369c49393d03e80daa63c","publisher":null,"rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:eprints.lancs.ac.uk:11867<\/identifier><datestamp>\n      2018-01-24T00:04:23Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      7375626A656374733D51:5141:51413735<\/setSpec><setSpec>\n      74797065733D61727469636C65<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n    \n      \n        Exploiting Space and Location as a Design Framework for Interactive Mobile Systems<\/dc:title><dc:creator>\n        Dix, Alan<\/dc:creator><dc:creator>\n        Rodden, Tom<\/dc:creator><dc:creator>\n        Davies, Nigel<\/dc:creator><dc:creator>\n        Friday, Adrian<\/dc:creator><dc:creator>\n        Palfreyman, Kevin<\/dc:creator><dc:subject>\n        QA75 Electronic computers. Computer science<\/dc:subject><dc:description>\n        This article considers the importance of context in mobile systems. It considers a range of context-related issues and focus on location as a key issue for mobile systems. A design framework is described consisting of taxonomies of location, mobility, population, and device awareness. The design framework informs the construction of a semantic model of space for mobile systems. The semantic model is reflected in a computational model built on a distributed platform that allows contextual information to be shared across a number of mobile devices. The framework supports the design of interactive mobile systems while the platform supports their rapid development.<\/dc:description><dc:date>\n        2000-09<\/dc:date><dc:type>\n        Journal Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:relation>\n        http:\/\/dx.doi.org\/10.1145\/355324.355325<\/dc:relation><dc:identifier>\n        Dix, Alan and Rodden, Tom and Davies, Nigel and Friday, Adrian and Palfreyman, Kevin (2000) Exploiting Space and Location as a Design Framework for Interactive Mobile Systems. ACM Transactions on Computer-Human Interaction (TOCHI), 7 (3). pp. 285-321. ISSN 1073-0516<\/dc:identifier><dc:relation>\n        http:\/\/eprints.lancs.ac.uk\/11867\/<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/dx.doi.org\/10.1145\/355324.355325","http:\/\/eprints.lancs.ac.uk\/11867\/"],"year":2000,"topics":["QA75 Electronic computers. Computer science"],"subject":["Journal Article","PeerReviewed"],"fullText":"Exploiting Space and Location as a\nDesign Framework for Interactive Mobile\nSystems\nALAN DIX\naQtive Limited\nand\nTOM RODDEN, NIGEL DAVIES, JONATHAN TREVOR, ADRIAN FRIDAY,\nand KEVIN PALFREYMAN\nLancaster University\nThis article considers the importance of context in mobile systems. It considers a range of\ncontext-related issues and focus on location as a key issue for mobile systems. A design\nframework is described consisting of taxonomies of location, mobility, population, and device\nawareness. The design framework informs the construction of a semantic model of space for\nmobile systems. The semantic model is reflected in a computational model built on a\ndistributed platform that allows contextual information to be shared across a number of\nmobile devices. The framework supports the design of interactive mobile systems while the\nplatform supports their rapid development.\nCategories and Subject Descriptors: C.2.4 [Computer-Communication Networks]: Distrib-\nuted Systems\u2014Distributed applications; H.1.2 [Models and Principles]: User\/Machine\nSystems; H.4.3 [Information Systems Applications]: Communications Applications; H.5.3\n[Information Interfaces and Presentation]: Group and Organization Interfaces\u2014Synchro-\nnous interaction; Theory and models\nGeneral Terms: Design, Human Factors, Theory\nAdditional Key Words and Phrases: Mobile systems, context information, virtual space,\nawareness, platform support, shared interaction, design framework, location-sensitive\napplications\nAuthors\u2019 addresses: A. Dix, Birmingham Research Park, aQtive Limited, Birmingham B15\n2SQ, UK; T. Rodden, N. Davies, J. Trevor, A. Friday, and K. Palfreyman, Department of\nComputing, Lancaster University, Lancaster LA1 4YR, UK.\nPermission to make digital \/ hard copy of part or all of this work for personal or classroom use\nis granted without fee provided that the copies are not made or distributed for profit or\ncommercial advantage, the copyright notice, the title of the publication, and its date appear,\nand notice is given that copying is by permission of the ACM, Inc. To copy otherwise, to\nrepublish, to post on servers, or to redistribute to lists, requires prior specific permission\nand \/ or a fee.\n\u00a9 2000 ACM 1073-0516\/00\/0900\u20130285 $5.00\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000, Pages 285\u2013321.\n1. INTRODUCTION\n1.1 The Emergence of Connected Mobility\nThe increased availability of communication facilities has seen a shift in\nthe nature of mobile computers systems and applications. Prior to the\nwidespread emergence of mobile communication services the work on\nmobile computer systems has tended to focus upon the development of\nsmall devices and the forms of interaction that they afford. In particular,\nwe have seen considerable focus on the development of techniques and\napproaches to overcome display limitations and the ergonomics of new\ninteractive devices [Bass et al. 1997]. However, the development of a new\nclass of mobile devices that link with telecommunication services to offer\nconnections to other systems means that we need to extend our consider-\nation of design for mobile systems. These mobile systems are particularly\nproblematic because of the various ways in which they break assumptions\nthat are implicit in the design of fixed-location computer applications,\nleading to new design challenges for human-computer interaction.\nOne immediate issue arising from the nature of wireless communications\nare delays and outages, leading to slow and unpredictable temporal charac-\nteristics at the user interface. These issues have already been addressed in\nsome detail in our previous work on pace of interaction and practical\nexperience in building collaborative mobile applications [Davies 1994; Dix\n1992; 1995]. They are also considered in the wider study of temporal issues\nin HCI [BCS HCI 1997; Howard and Fabre 1998; Johnson 1997; Johnson\nand Gray 1995].\nAnother issue that has been of considerable importance is the develop-\nment of context-sensitive devices that have a distinct awareness of their\nlocation and other devices [Davies 1994; Fickas et al. 1997; Long et al.\n1996; Want et al. 1995]. However, the treatment of these issues has, so far,\nbeen predominantly focused on the design of specific devices and applica-\ntions. In this article we are aiming to produce a broader view of context and\nlocation-aware computation. In particular, we will present a framework to\nsupport the design of interactive mobile systems based on an understand-\ning of location within these systems.\n1.2 Context and Mobility\nIn mobile systems, as in other areas of human-computer interaction, it is\nnot sufficient to focus on the specific interface of a device. The device\noperates within a broader context. This context includes the network and\ncomputational infrastructure, the broader computational system, the appli-\ncation domain, and the physical environment.\nEach of the different contexts represents a different part of the design\nspace within which mobile systems must be placed, and the features of\ninfrastructure, system, domain, and environment all suggest trade-offs that\ndevelopers must address in realizing mobile interactive systems. Currently,\n286 \u2022 A. Dix et al.\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\ndesigners undertake this trade-off with little support or guidance, as little\nis known about the design space into which mobile applications are placed.\nThe design framework developed in this article focuses on the context-\nsensitive nature of mobile devices in the design and development of\ncooperative mobile systems. We wish to chart the design space for mobile\nsystems to allow developers to consider the properties of mobile systems\nunder construction and how they may be related to other applications and\nsystems. In developing this design framework we focus particularly on\nlocation, as ideas of space and location are of paramount importance in any\nconsideration of the context of these systems.\nIn undertaking this task we wish to build upon the research lessons from\nresearch on temporal issues in interaction. This research community has\nsuccessfully created frameworks to improve the general understanding of\ntemporal aspects prior to design and construction of new forms of technol-\nogy. We wish to apply a similar tactic by moving from a theoretical\nconsideration of the context of mobile systems, through an examination of\nlocation and the development of a framework for the design of mobile\nsystems, to the development of models to support these systems. Our\nparticular interest is in the way in which the interactive nature of cooper-\native mobile systems drives the development of supporting infrastructures,\nand our endpoint is a computational infrastructure we have developed for\nthese systems.\n1.3 Structure of this Article\nIn developing our design framework we focus particularly on the impor-\ntance of location and space in mobile systems. However, it would be unwise\nfor us to suggest that location is the only manifestation of context in mobile\nsystems. In order to place our framework within the broader picture of the\ndesign of interactive mobile applications we begin, in Section 2, by consid-\nering the nature of the context in which interaction with mobile applica-\ntions takes place. This broader consideration of context acts as a general\nbackdrop for our focus on location as a means of designing for context-\nsensitive mobile systems.\nIn Section 3, we address the need to consider location in terms both of the\nphysical space in which a mobile device exists and of the virtual models of\nspace exploited by applications. The importance of location underpins the\ndevelopment, in Section 4, of multiple taxonomies of location, mobility,\npopulation, and device awareness. This conceptual analysis allows us to\nexploit location as a means of understanding interactive mobile applica-\ntions. In Section 5, we build upon these taxonomies to suggest a simple\nsemantic model of space that allows us to more generally represent and\nreason about the location of devices. We then use this semantic model to\ndevelop a simple computational model and supporting infrastructure that\nallows the understanding of location to be conveyed across a number of\ndevices working in tandem to realize cooperative mobile applications.\nOur computational model of location is realized on top of a distributed\narchitecture and infrastructure. In Section 6, we discuss this architecture\nExploiting Space and Location \u2022 287\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nand general architectural issues for contextual systems. This section ends\nwith a short description of the distributed architecture that instantiates\nmany of the principles espoused in this article by realizing a computational\nmodel of space that is accessible from a range of mobile devices.\n2. THE CONTEXTUAL NATURE OF MOBILE SYSTEMS\nIn considering the design of mobile systems we wish to focus particularly\non the situation where mobile devices behave differently and offer different\ninteraction possibilities depending on the particular context in which the\nsystem is being used. For example, in the development of mobile multime-\ndia guides, such as the systems at Georgia Tech [Long et al. 1996] and the\nLancaster GUIDE [Davies et al. 1998], the information presented to the\nuser and the interaction possibilities are strongly linked to the location\nwhere the device is being used. In these cases interaction is no longer solely\na property of the device but rather of the device in context. While location is\noften the principal determinant used to represent this context and the main\nfocus of this article it is worth briefly considering the general importance of\ncontext in mobile systems and why understanding and modeling this\ncontext is important.\nA considerable amount of research surrounding the development of\nmobile devices has obviously focused on the portable nature of these\ndevices and the technical problems of implementation. Mobile computing\ndevices represent real technical challenges and have always stretched the\nstate of the art in terms of displays and interaction devices.\nThe emergence of mobile telecommunication standards such as GSM and\nthe increased availability of these services have also led more recently to\nthe development of devices that provide mobile access to on-line services\n(e.g., the Nokia communicator). This merging of computer and communica-\ntion facilities allows the development of systems that provide immediate\non-line access to information. These portable networked devices have also\nbeen combined with the use of GPS technologies to develop portable devices\nthat are aware of their position [Long et al. 1996].\nThe current generation of portable devices has an awareness of their\nsetting and an increased ability to access network resources. This means\nthat we need to balance the current consideration of the interaction\nproperties of individual devices with a broader consideration of the context\nof use. The importance of context to interactive systems is not unique to\nmobile devices and is already reflected in research in ubiquitous comput-\ning, wearable computers, and augmented reality [Aliaga 1997; Weiser 1991;\n1993], as well as more recent work at MIT on the development of devices\nthat exploit context to provide an ambient awareness of interaction [Ishii\nand Ullmer 1997].\nThe term \u201ccontext\u201d has become problematic for interactive systems\ndevelopment and is itself the subject of some debate. One aim of the\ngrowing focus on context is to allow the highly situated nature of interac-\ntive devices to be reflected in the design of systems. This focus on the\n288 \u2022 A. Dix et al.\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nsituated nature of these devices reflects their growing acceptance and the\nneed to allow them to closely mesh with existing practices, and mirrors\nprevious work in the development of interactive systems within CSCW\n[Hughes et al. 1995]. Rather than engage in this much broader discussion\nwe wish to concentrate on location. However, in the remainder of this\nsection we wish to briefly characterize some of the broader debate on\ncontext that is relevant to mobile systems.\n2.1 Context in the Design of Mobile Systems\nIn order to reflect the broader role of context in our consideration of\nlocation we wish to unpack what we might mean by the term context and\nhow we may exploit it to determine different interaction possibilities for\nmobile systems. In the following sections we consider some of the ways in\nwhich context has played a key design role in the development of distrib-\nuted mobile applications. We outline some of the different forms of context\nthat influence interaction with mobile systems before we consider the\ncentral role of location in Section 3. Our consideration of context moves\nfrom the nature of the underlying infrastructure context to consider the\noverall system context, the broader application domain context, and finally\nthe actual physical context.\n2.1.1 Infrastructure Context. The interaction offered by mobile applica-\ntions is not solely dependent on the particular features of the mobile\ndevices used. Rather it is a product of the device and the supporting\ninfrastructure used to realize the application. The impact of the properties\nof the supporting distribution infrastructure on different styles of interac-\ntion has been discussed in CSCW and HCI [Greenberg and Marwood 1994].\nIn mobile systems the nature of the infrastructure is even more likely to\nchange as the application is used, and the sort of service available may\nalter dramatically. This variability in the infrastructure can dramatically\naffect interaction, and it is essential that interaction styles and interfaces\nalso reflect the state of the infrastructure.\nIn essence, the user interfaces to mobile applications must be designed to\ncope with the level of uncertainty that is inevitably introduced into any\nsystem that uses wireless communications. Consider our experiences in the\ndevelopment of an advanced mobile application used to support collabora-\ntive access to safety-critical information by a group of field engineers\n[Davies 1994]. If one of these engineers becomes disconnected from the\ngroup as a result of communications failure then it is vital that the\nremaining users\u2019 interfaces reflect this fact. For example, if an engineer is\nabout to work on a cable it is important that the system either (a) correctly\nreflects the current state of the cable or (b) clearly shows that the\ninformation is not current. If this does not hold, the engineer could easily\ntouch a live cable with potentially fatal consequences. Reflecting this\ninformation requires interaction between the application\u2019s user interface\nand the underlying infrastructure via which failures will be reported. In\naddition, if the information being manipulated is replicated by the distributed-\nExploiting Space and Location \u2022 289\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nsystems platform the validity of each replica will clearly be important to\nthe engineers. In this case the user interface needs to reflect this platform\ninformation.\n2.1.2 System Context. Most advanced mobile applications are distrib-\nuted in nature. Rather than functionality residing solely within a single\nmachine (or device) it is spread across the system as a whole. This means\nwe need to consider the interactive properties of the system in terms of the\ndistributed nature of the application. This is particular true when we\nconsider issues of pace and interaction [Dix 1992]. For example, rapid\nfeedback is an accepted premise of HCI design, and many applications\nprovide direct-manipulation interfaces that rely on rapid feedback. The\ndevelopment of distributed applications and the impact of the delays\ninherent in the technical infrastructure have already seen a reconsidera-\ntion of feedback [Dix 1995; Ramduny and Dix 1997]. The need to consider\nthe overall functionality of the application and to design structures that\nprovide appropriate access to different levels of functionality is amplified in\nthe case of mobile applications where the infrastructure may vary dynami-\ncally as the application is in use.\nConsider, for example, the development of caching strategies for field\nengineers who will only ever be examining or servicing units within a\nsubregion of a particular area. The choice of the appropriate location to\ncache information will depend on the required feedback, the safety-critical-\nity of the information, the speed and reliability of different parts of the\nnetwork, and on who else is likely to be using and updating the cached\ninformation. A local writeable cache would improve the feedback for an\nindividual user. However, it may also make it appear that the user\u2019s data\nchanges have been reflected in the system as a whole, when, in fact, the\nconnection between the cache server and the data server is broken and\nother users are seeing dangerously out-of-date information.\nAnother aspect of this system context is the extent to which a device is\naware of other devices in its vicinity and, related to this, the extent to\nwhich an application is aware of other applications. This is important,\npartly because such devices can adversely affect one another as they\ncontend for resources, but more importantly, because combinations of\ndevices may be able to offer more advanced services to the user. This can\nlead to a planned or accidental emergent behavior of the devices as a group,\nwhich is not defined in any individual device. One example of this is onCue\n(see Section 6.3), which only offers certain services when particular soft-\nware is available on the local machine.\n2.1.3 Domain Context. As well as addressing the infrastructure and\nsystem issues discussed above, distributed mobile applications need to\nconsider the semantics of the application domain. The situated nature of\nadvanced multimedia applications is such that design needs to explicitly\nidentify the nature of the work being supported and the practicalities of\nthis work. In doing so, developers need to consider the relationship between\nthe mobile devices and their users and how this can be used to determine\n290 \u2022 A. Dix et al.\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nthe nature of the interfaces presented. In the case of mobile applications\nthe normal design considerations are amplified by the need to consider the\nlimited interaction facilities of mobile devices.\nMobile devices are intended to be readily available and useful to the\ncommunity of users being supported. As a consequence we need to consider\nthe highly situated nature of this interaction. Developing a clear under-\nstanding of what people do in practice and the relationship with technology\nis essential to informing the development of these applications. The rela-\ntionship between users and mobile technology is still unclear, and few\nstudies have taken place that consider the development of mobile coopera-\ntive applications [Davies 1994].\nFor example, we may choose to exploit the personal nature of these\ndevices to associate mobile devices with users. This allows us to tailor\napplications to allow them to be sensitive to the identity of the user of the\ndevice. This information may be exploited along with additional contextual\ninformation (e.g., location) to present appropriate information. One exam-\nple of this would be a particular doctor visiting patients within a hospital.\nAt a particular bed, who the doctor is and his or her relationship to the\npatient in the bed may determine the information presented. Contrast this\nsituation with the development of a museum guide where the devices need\nto be considered as general purpose and where no information is available\nabout the relationship between users and the artefact being described.\nAnother aspect of the domain is the level of trust and mutual awareness\nbetween participants in collaborative interactions. This is particularly\nimportant if devices are to be used to identify users and potentially make\ninformation about their location and what they are doing available to\nothers. In this case a consideration of the issues of privacy and the need for\nsome management of privacy is essential [Harper 1992].\n2.1.4 Physical Context. Finally, mobile computer systems are likely to\nbe aware of, or embedded into, their physical surroundings. Often this is\nbecause they are embedded in an application-specific device, e.g., in a\nmobile telephone or car. In these situations the computer system is mobile\nby virtue of being part of a larger mobile artefact. This context can and\ndoes affect the application interface, e.g., the telephone directory within a\nmobile telephone can be very different from one in an independent PDA.\nAnother example is a car radio (now often computer-controlled) which has\ndifferent design considerations to a static radio including the need to\nautomatically retune as the car travels between local radio areas and\ntransmitter zones. Because the computer systems are embedded into appli-\ncation-specific devices, they may also be aware of their environmental\ncontext, e.g., the speed of the car. Some of this sensory information may be\nused simply to deliver information directly to the user, but some may be\nused to modify interface behavior, e.g., in a tourist guide, increasing text\nsize in poor lighting conditions, or, in a car system, limiting unimportant\nfeedback during periods of rapid maneuvering.\nExploiting Space and Location \u2022 291\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\n2.1.5 Context in Context. Context is largely about relationship, and the\nfour forms of context considered in this section have focused on the\nrelationship between an interaction device and surrounding elements.\nThese forms of context, the associated relationships, and the issues raised\nare summarized in Table I.\nAlthough each of the different kinds of context discussed in this section\nare worthy of further study in their own right, this article is predominantly\nconcerned with physical context and the use of location in determining this.\nIn the following section we discuss the central role of location and physical\ncontext for mobile systems. This is partly because of our desire to produce a\ncomputational infrastructure to support location-aware applications, but\nalso reflects the dynamic changes of location as a unique feature of mobile\nsystems. However, as you would expect, these various forms of context are\nclosely related, and we will see elements of various other kinds of context\nthroughout this article.\n3. THE IMPORTANCE OF LOCATION IN UNDERSTANDING CONTEXT\nClearly, the very idea of \u201cmobility\u201d demands an understanding of location,\nand one of the unique aspects of mobile devices is that they can have an\nawareness of the location within which they are being used. Furthermore,\nthis location information may be exploited as a means of understanding the\noverall context within which the system is placed. Essentially, location\nbecomes a useful indexing device from which to infer the overall context\ninfluencing the mobile application: in order to ask \u201cwhat devices are near\nthis device\u201d (system context) we need to know the location of this device\nand others; it only makes sense to measure the environment (physical\ncontext) when a device is physically located in space. Furthermore, the\nneed to be contextually aware in other ways depends to a large extent on\nthe mobility in space of devices. If devices are spatially static, many aspects\nof their environment are also static, or at most slowly varying.\nTable I. Taxonomy of Context\nContext Relationship with Issues\ninfrastructure network bandwidth, reliability,\nand display resolution\nvariability of service, user awareness of\nservice, liveness of data\nsystem other devices, applications, and\nusers\ndistributed applications, pace of feedback\nand feedthrough, emergent behavior\ndomain application domain, style of use,\nidentification of user\nsituated interaction, personalization, task\nand work studies, privacy\nphysical physical nature of device,\nenvironment, location\nnature of mobility, location-dependent\ninformation, use of environmental sensors\n292 \u2022 A. Dix et al.\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\n3.1 Location and Space\nAny notion of location puts the device within some form of space. The space\nwithin which a device is located may also contain other devices and users\nwith which the device may interact. A device involved in a mobile system\ncan be considered as\n\u2014having location in the space,\n\u2014having an effect on the space (and devices and users within it), and\n\u2014being subject to influencing events from the space (and devices and users\nwithin it).\nEssentially, devices are situated and embedded within a space, and their\ninteraction is mediated through this space (Figure 1). Consequently, under-\nstanding the nature of their location in that space is key to understanding\nthe nature of the mobile system being designed and provides a means of\nreflection on the context.\nIf the device in Figure 1 and other devices were at fixed locations, then\nthe nature of these interactions would be one of configuration. However,\nthe interesting and challenging nature of mobile interfaces is the changing\nnature of these relationships. So, to have an overall model of spatially\nsituated interaction, we need to understand the following:\n\u2014location in space (of the device and other bodies)\n\u2014mobility through space (of these)\n\u2014the kinds of bodies populating the space (which the device may interact\nwith)\n\u2014the awareness (of the device) of these other bodies.\nIn Section 4, we will develop each of these, but before we consider the\ndifferent relationships between a device and space it is worth reflecting on\nwhat we may mean by space.\nFig. 1. A device situated in space.\nExploiting Space and Location \u2022 293\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\n3.2 Of Real and Virtual Worlds\nFocusing on a device situated in space is only the start of any consideration\nof the importance of space to mobile systems. Consider a purely physical\ndevice like a lawnmower: it inhabits the real world and can be used to\naffect the real world. It exists only in a single space, and its relationship is\nonly with the physical world it inhabits. Its location is unique to that space,\nand its influences and effects are only through the physical space within\nwhich it resides.\nHowever, this is not the case for many mobile systems and our interac-\ntion with mobile systems. Computers and mobile devices are different in\nthat we can consider their existence and presence in terms of many spaces.\nThey can be thought of as simultaneously inhabiting a real world and some\nform of virtual world (or indeed multiple virtual worlds). A computational\ndevice\u2019s ability to exist in the physical world while also having an existence\nin an electronic or virtual worlds is significant to any consideration of\nmobility.\n3.2.1 The Emergence of Virtual Space. Our consideration of an exist-\nence in an electronic world extends beyond the realm of virtual reality, and\nwe would suggest is equally evident as we surf the Web, use FTP to access\nremote files, or even simply explore our own file system. In all of these\ncases we are in a sense inhabiting virtual space. Even the vocabulary we\nuse reflects this: we \u201cvisit,\u201d \u201cexplore,\u201d \u201cgo to,\u201d \u201cnavigate\u201d; our Web browsers\neven have a button to go \u201cback.\u201d This turning to virtual spaces and spatial\napproaches generally grows from the use of spatial metaphors and tech-\nniques to represent information and action in electronic systems. One of\nthe early examples of the use of spatial metaphors includes the use of a\nrooms metaphor to allow the presentation of information [Henderson and\nCard 1985]. From these early spatial approaches we have seen concepts of\nspatial arrangement exploited in the development of desktop conferencing\nsystems such as Cruiser [Root 1988] and more generally in the work of\nMediaspaces [Gaver 1992].\nThe recent development of cooperative systems in CSCW has also seen a\ngrowing application of concepts drawn from spatial arrangements. These\ninclude the development of groupkit to form teamrooms [Roseman and\nGreenberg 1996], the emergence of the worlds system [Fitzpatrick et al.\n1996], and the use of a notion of places to support infrastructure [Patterson\net al. 1996]. This exploitation of virtual spaces is most notable in the\ndevelopment of shared social worlds existing solely within the machine\n[Benford et al. 1995]. However, the use of space and virtual spaces has not\nbeen isolated to an existence solely within the computer, and a number of\nresearchers have considered how space and location can be considered both\nvirtually and physically within the development of applications. This is\nmost evident in the augmenting of existing physical spaces to form digital\nspaces populated by electronically sensitive physical artefacts (or tangible\nbits) [Ishii and Ullmer 1997] that are sensitive to their position within both\nphysical and virtual space.\n294 \u2022 A. Dix et al.\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\n3.2.2 Combining the Real and the Virtual. The work in tangible bits\nundertaken by Ishii and Ullmer [1997] represents the start of a trend to\ninterweave real and virtual spaces. This work exploits the combined use of\na number of devices within a space so that their physical manipulation can\nbe used to generate a computational (or virtual) effect. Various other\nstrands of recent research have explored these boundaries between the\nphysical and virtual including wearable computing and augmented reality.\nOne example of this has been the explicit development of boundaries that\nspan between the physical and the virtual [Benford et al. 1998]. We would\nsuggest that this interplay between the real and the virtual is at the core of\nthe design of cooperative mobile applications, as devices and users have a\nlocation and presence that is both virtual and physical and since each is\navailable to the computer application.\nThis interplay between the real and the virtual provides a starting point\nfor the development of our taxonomy. A direct result of the need to\nrecognize this coupling is that many of the categories we will consider for\nunderstanding mobile and context-aware computation have counterparts in\nboth the real physical world and the virtual electronic world. There are\nimportant differences\u2014the virtual world does not always behave in ways\nwe have come to expect from the physical world\u2014and designers and\ndevelopers often exploit these differences.\nIn particular, even the object of interest for mobile computation may\nhave a physical or virtual existence depending on the nature of the\napplication. At one extreme we have hand-held GPS systems that simply\ntell you where you are in physical space\u2014perhaps these do not even rank\nas mobile computation. At the other extreme there are agents that only\nhave an existence within the virtual world, e.g., Web crawlers or the\ncomponents within CyberDesk [Wood et al. 1997]. Between these we have\nmore complex physical devices, such as the PDA, which both have a\nreal-world existence and serve as windows into virtual space (especially\nwhen combined with mobile communications).\nTo some extent context-awareness can be seen in hardware-configuration\narchitectures such as Plug&Play. In both, the emphasis is on self-discovery\nand automatic reconfiguration of software to reflect the current hardware.\nThe main difference between these and \u201creal\u201d context-aware applications is\none of time\u2014the rate of reconfiguration required by, say, Plug&Play on a\npersonal computer may only be a few times during the lifetime of the\ndevice. However, as interdevice protocols and standards such as BlueTooth\nbecome more prevalent, hardware reconfiguration will become far more\nfrequent and will be an important source of contextual information for\nhigher levels of the interface.\nAs we consider taxonomies and then models of space and location in\nSections 4 and 5, we explicitly consider both physical and virtual location\nand endeavor to construct theoretical and computational models which\nencompass both.\nExploiting Space and Location \u2022 295\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\n4. A DESIGN FRAMEWORK FOR MOBILE SYSTEMS\nThe core of our framework for understanding the design of mobile systems\nis a series of taxonomies that considers the relation between different\ndevices and the spaces they inhabit using location as a starting point for\nthis consideration. Rather than seek to understand all senses of mobility\nfor all potential forms of space, we will particularly focus on the physical\nspace of devices as a distinguishing feature. However, we will also draw on\nexamples of the virtual where they are instructive to highlight the coexist-\nence of these two forms of space and the issues of mobility that may exist in\nboth. Although it is worth stressing that our understandings of this virtual\nspace is still under development. We will also return to the issue of the real\nand the virtual when we consider the development of a model of space to\nsupport mobile systems.\nAs described in Section 3.1, the core of our framework is an understand-\ning of\n\u2014location in space (of the device and other bodies)\n\u2014mobility through space (of the device and other bodies)\n\u2014the kinds of bodies populating the space (which the device may interact\nwith) and\n\u2014the awareness (of the device) of these other bodies.\nIn this section we will develop taxonomies of location, mobility, and\npopulation, in turn, then finally a decomposition of types of device aware-\nness.\n4.1 A Taxonomy of Location\nMobility makes us think automatically about location, the way in which\nthis sense of location can be understood in the system, as well as how\nchanges in location can affect the system. Any simple mobile device will\nhave a physical location in space. It is important to understand the nature\nof this location, and how the developers of interactive mobile applications\nmay exploit this understanding. In this section we wish to consider what\nwe might actually mean by location in space. This brief exploration is more\nthan a mere issue of terminology, as developing an understanding of what\nwe actually mean by location represents a consideration of one of the core\ndesign concepts in the production of mobile systems.\nLooking at the spatial dimension, we can see there are some devices (e.g.,\nGPS-based map systems) where the exact Cartesian position in 2D or 3D\nspace is important in defining a sense of absolute physical location. For\nothers a more topological idea of space is sufficient in understanding\nposition, and in these cases location is considered not in an absolute sense\nbut in relation to other objects or sensors. For example the Lancaster\nGUIDE system is based on radio cells roughly corresponding to rooms and\nsections of Lancaster Castle, and the CyberGuide [Long et al. 1996] system\n296 \u2022 A. Dix et al.\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nat Georgia Tech. shows visitors around the GVU laboratory by altering its\nbehavior, depending on what item of equipment is closest.\nIn Section 5 we will look at more formal models of space in greater detail.\nFor now we will just use this two-way distinction between Cartesian space\nand topological space and consider location in these terms. As we discussed\nin Section 3.2, it is important to consider location in both a physical and a\nvirtual sense. If we consider ideas of virtual location, e.g., position within a\nhypertext, we see that we may have similar ideas of space within the\nelectronic domain. This consideration of location provides us with the\nsimple taxonomy shown in Table II.\nNote that these are not mutually exclusive categories: an item in a room\nalso has a precise longitude and latitude, and a computational entity may\nhave an existence in one or more virtual spaces as well as physical space.\nIndeed, possibly many of the most interesting interaction possibilities occur\nwhen these different ideas of location are linked. For example, moving a\ndisplay up and down in physical space could be used to change the display\nof hypertext help system for the maintenance of a piece of machinery.\nSimilarly, in an aircraft cockpit, setting the destination city (topological\ndestination) instructs the autopilot to take an appropriate course in Carte-\nsian space\/time. This interplay between the real and the virtual is central\nto the development of augmented reality spaces where the movement of\ndevices within a space may manifest in effects that are both real and\nvirtual. These spaces only work because the location of the device can be\ncontrolled in virtual and physical space and because its effects provide\nalterations to either the physical or virtual space.\n4.2 A Taxonomy of Mobility\nOur core concern in the development of our design framework is the issue\nof mobility and its implications for how we understand human-computer\ninteraction. In the previous section we considered how the issue of location\ncan be unpacked to provide understanding in both a physical and a virtual\nsense and how the nature of the space affects our consideration of location.\nIn this section we wish to focus on how to understand mobility and what\npotential design issues may emerge from a more detailed consideration of\nmobility.\nDevices may be mobile for a number of reasons. They may be mobile\nbecause they are carried around by users (as with a PDA or a wearable\ncomputer), because they move themselves (robots), or because they are\nembedded within some other moving object (a car computer). Furthermore,\na number of different devices may be spread within our environment so\nTable II. Location in Different Kinds of Space\nSpace Real Virtual\nCartesian GPS VR\nTopological room hypertext\nExploiting Space and Location \u2022 297\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nthat they become pervasive, as in the case of an active room such as the\nambient room suggested by Ishii and Ullmer [1997]. The issue of pervasive-\nness is itself a rather thorny one in that it is not clear what constitutes\npervasiveness in terms of devices and how this relates to previous discus-\nsions surrounding ubiquitous devices. Ubiquitous computing has focused on\nthe backgrounding of the device and the computer essentially \u201cdisappear-\ning\u201d into the environment. For us the issue of pervasive devices has less to\ndo with the devices fading into the environment and more to do with an\nexpectation that devices are normally available. Pervasive computing is\nintimately bound up with the interrelationship between different devices\nand the expectation that these devices can work together to provide some\nform of shared functionality. An active room is active because it contains a\nnumber of devices which when they work in unison provide some function.\nEssentially, we are seeing a number of computing devices which in cooper-\nation provide some functionality. Some of these devices may be mobile, but\nmany are not. Consider, for example, the layout of radio-LAN based\nstations for the GUIDE tourist information system. These base stations\nhave a fixed location in Lancaster, but are the source both of location and\nother information displayed on mobile devices. Neither the base stations\nnor the mobile devices can function by themselves, but together they allow\nthe space to offer a pervasive computing facility.\nWe can disentangle the different levels of mobility into three dimensions\nthat are used in Table III to classify examples of mobile systems.\nFirst, we can consider the level of mobility within the environment, which\ndivides into three main categories:\n\u2014fixed: that is, the device is not mobile at all! (e.g., a base station fixed in\na particular place)\n\u2014mobile: may be moved by others (e.g., a PDA or wearable computer that\nis carried around)\n\u2014autonomous: may move under its own control (e.g., a robot)\nThe devices relation to other devices or its environment provides our\nsecond dimension and can also be divided into three different categories:\n\u2014free: the computational device is independent of other devices, and its\nfunctionality is essentially self-contained.\n\u2014embedded: the device is part of a larger device\n\u2014pervasive: the functionality provided by the device is essentially spread\nthroughout the environment.\nThese separations do not consider the nature of the device and the sort of\nfunctions it may afford. The physical design of the device itself is an issue\nthat needs to be considered carefully, especially in terms of existing\ntraditions of aesthetic and practical design. The consideration of these\nfeatures is beyond the scope of the framework and taxonomy we wish to\npresent here, which focuses on the development of the device.\n298 \u2022 A. Dix et al.\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nAs a final part of our taxonomy we can reflect the cooperative nature of\nadvanced mobile applications by considering the extent to which the device\nis bound to a particular individual or group. We have three classes for this\ntoo:\n\u2014personal: the device is primarily focused on supporting one person\n\u2014group: the device supports members of a group such as a family\n\u2014public: the device is available to a wide group\nWe do not suggest that these categories are absolute but rather provide\nthem as sample equivalent cases of utility to designers. All the categories\nhave gray cases, but perhaps this last dimension most of all. In particular\nwe should really consider both the static and dynamic nature of how these\ncategories are applied. For example, we could classify a computer labora-\ntory as \u201cpublic,\u201d but of course, after logging in, each computer becomes\npersonal. We will return to these dynamic aspects when we look at how\ndevices can become aware of their users.\nIn fact, the \u201cgroup\u201d category really covers two types of device. Some, like\na liveboard actually support a group working together. Others, like an\nactive refrigerator (which allows messages to be left, email browsing, etc.),\nmay primarily support one person at a time but are available to all\nmembers of a family. In-car computer systems exhibit both sorts of \u201cgroup-\nness\u201d: they may perform functions for the benefit of the passengers of the\ncar as well as the driver, and the exact mix of people from within the family\n(or others) in the car may vary from trip to trip.\nSome of the examples in Table III are clear, but some may need a little\nexplanation. The \u201cStar Trek\u201d reference is to the computer in Star Trek that\nresponds to voice commands anywhere in the ship, but does not actually\ncontrol the ship\u2019s movements. This pervasiveness of interaction is also\nevident in the work on ubiquitous environments developed by those at\nPARC [Want et al. 1995]. Here the computational infrastructure is consid-\nered to be continually available. In a similar vein, we put HAL (the\ncomputer from the 1960\u2019s movie 2001: A Space Odyssey) in the group\nTable III. A Taxonomy of Different Levels of Mobility\nPersonal Group Public\nFree Fixed office PC Liveboard computer lab.\nMobile PDA tour guides tour guides\nAutonomous factory robot\nFixed active fridge ATM\nEmbedded Mobile wearable devices car computer shopping cart\nAutonomous auto pilot monorail\nFixed active room active room\nPervasive Mobile Star Trek\nAutonomous Web agent HAL Web crawler\nExploiting Space and Location \u2022 299\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\ncategory, as it has a small crew, but this is exactly one of the gray\ndistinctions in constructing a taxonomy of this form. Our reference to\n\u201cshopping cart\u201d refers to the development of smart supermarket trolleys\nthat allow shoppers to scan the barcode of items as they are added to the\ntrolley and keep track of your purchases to enable a fast checkout. Often\nthese require the insertion of a shopper identification, in which case they\nbecome dynamically personalized.\nNotice there are various blank cells in this taxonomy reflecting our use of\nit as a means of charting the design space for interactive mobile devices.\nSome of these blanks represent difficult cases where there may not be any\nsensible device. For example, a fixed-pervasive-personal device would have\nto be something like an active hermit\u2019s cell. In fact, the whole pervasive-\npersonal category is problematic, and the items \u201cWeb agent\u201d and \u201cWeb\ncrawler\u201d in the final row may be better regarded as virtual devices of the\nfree-autonomous class.\nOther gaps represent potential research opportunities. For example,\nwhat would constitute a free-mobile-group device? This would be a portable\ncomputational device that supports either different individuals from a\ngroup, or a group working together\u2014possibly an electronic map that can be\npassed around and marked.\nAs we suggested at the outset of our discussion of the design framework\nmost of the examples are of physical devices. Virtual devices may also be\nclassified in a similar way; for example, Word macros are embedded-mobile\n(or even autonomous in the case of macro viruses!) as are Java applets. The\nonly virtual devices in Table III are the items \u201cWeb agent\u201d and \u201cWeb\ncrawler\u201d in the final row which, as we have said, may be regarded as\nvirtual devices of the free-autonomous class. This ambiguity is because any\nvirtual device or agent must be stored and executed upon a physical\ncomputational device and the attributes of the physical device and virtual\ndevice may easily differ. For example, a PDA may contain a diary applica-\ntion. This is mobile by virtue of being stored within the PDA (a virtual\ndevice embedded within a physical device). However, if the PDA is used as\na Web browser it may execute a Java applet that is a form of virtual agent\nembedded within a Web page (a virtual embedding in a mobile artefact).\nThat is, we have an embedded-mobile-public virtual agent temporarily\nexecuting on a free-mobile-personal device! This dual presence in multiple\ncontexts is both the problem and the power of virtual environments and\nwill require significant further research to resolve.\n4.3 A Taxonomy of Population\nIn addition to having a location in a space and exhibiting some degree of\nmobility, devices also need to be aware that they populate a space and need\nto reflect the coupling with the space they inhabit depicted in Table I. This\nawareness may include both the physical nature of the space (light,\ntemperature, weather) and the electronic environment (network state,\navailable memory, current operating system). A simple example of virtual\n300 \u2022 A. Dix et al.\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\ndevices understanding the space they inhabit are Javascript Web pages\nthat run different code depending on the browser they are running on.\nSpaces are normally populated with a range of different devices. Within\nthe physical and virtual spaces of a device there may be other computa-\ntional devices, people (including the user(s) of the device), and passive\nobjects such as furniture. These may be used to modify the behavior of the\ndevice. For example, in CyberDesk \u201cActOn\u201d buttons are generated depend-\ning on what other applications are available and the types of input they can\naccept [Wood et al. 1997]\nWe can consider the issue of population in terms of the sorts of bodies\nthat populate a space and the different spaces they populate. Table IV gives\nexamples of items in the environment that may be relevant for a mobile or\ncontext-aware device and the bodies that may populate the space. In order\nto illustrate the development of this taxonomy, we have taken a car\ncomputer and an active Web page as two simple running examples.\n4.4 Measurement and Awareness\nEach of the three taxonomies developed in the framework relies on devices\nhaving an awareness of the surrounding space and using this as a resource\nin interaction. The central role of awareness of the surrounding environ-\nment and how this awareness is conveyed to others is an issue of some\nsensitivity in design. For example, in the case of active badges the issue of\nawareness of users and how this may be applied became embroiled within a\ndiscussion of privacy [Harper 1992]. This may become even more problem-\natic in the case of multiple devices that display an awareness of others.\nConsider the suggested \u201cfun\u201d interest badge devices offered by Philips in\nthe development of its visions of the future design study or the \u201cMeme tags\u201d\ndeveloped at MIT [Borovoy et al. 1998]. These badges are programmed with\na set of profiles for people and are intended to light up when you meet\nsomeone else with a compatible profile. The social acceptability of this form\nof device may well become a significant issue in determining their success\nand the general acceptance of devices of this form. For example, they have\nproven successful in conference settings [Borovoy et al. 1998].\nIn order to have an awareness of their environment, devices must be able\nto detect or measure significant attributes (e.g., we have mentioned their\nlocation, environment, other devices, people, and things). The discrete\nnature of computation means that both specification and implementation of\ncomputer systems tends to focus on events that occur at specific times.\nHowever, most of the contextual information above is of a different kind:\nTable IV. Examples of Bodies within the Environment\nPhysical (e.g., car computer) Virtual (e.g., active web page)\nPeople current driver of car visitor at Web page\nDevices other cars running applets\nObjects roadside fence other pages on the site\nExploiting Space and Location \u2022 301\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nstatus phenomena, i.e., they are things which constantly have a value that\ncan be sampled. The translation of status phenomena into events is\nproblematic and is often done \u201caccidentally\u201d within systems, with the\nconsequent probability of errors. Status-event analysis is a collection of\ntechniques that lay equal weight to events and status. In particular, one\nstrand of previous work in this area has looked in detail at the ways in\nwhich an active agent can become aware of a status change [Dix and Abowd\n1996; Ramduny et al. 1998]. In short, these reduce to finding out directly by\nits own sensors or indirectly via another agent (human or electronic). For\nexample, a car with a built-in GPS sensor can detect its position directly\nand thus give directions to the driver, but a simple PDA may need to be\ntold of the current location by its user in order to adjust time zones. Other\ncomputational agents may also be important sources of information about\nthemselves (as in the case of onCue, where objects register themselves with\nthe system) and about other parts of the environment (e.g., recommender\nsystems, which say \u201cothers have visited here\u201d).\nThis leads to the two-way table (Table V). The first axis is how a device\nfinds out about contextual information: directly using own sensors mea-\nsurement or indirectly told another device\/user. The second axis is what is\nbeing discovered: the device\u2019s own attributes (location, etc.), the attributes\nof another device, and, in the case when told indirectly, whether that device\nis telling of its own or a third-party\u2019s attributes.\nItems in the environment (people, devices, objects) are particularly\ndifficult: not only may they change their attributes (position, etc.), but also\nthe configuration of items may change over time (e.g., people may enter or\nleave an active room). This leads to three levels of awareness. We will look\nat these with the example of a car computer:\n\u2014presence: someone has sat down in the driver\u2019s seat, but all the car can\ntell is that the door has been opened then closed\n\u2014identity: the driver enters a personal pin number, and the car can then\nadjust the seat position for the driver\n\u2014attributes: the car detects from the steering behavior that the driver is\ngetting drowsy and sounds a short warning buzzer.\nNotice how, in this example, presence was not detected at all; identity\nwas informed by the driver, but the sleepiness of the driver was detected\ndirectly. In other cases different combinations of detection or informing\nmay be found. Security systems often have ultrasonic sensors to tell that\nTable V. Types of Measurement and Examples\nHow\nDirect\u2014Own Sensors Indirect\u2014Told by Others\nown attributes (self) GPS PDA\u2014location set\nWhat other bodies proximity sensors object registration\nother (third party) proximity sensors Recommender\n302 \u2022 A. Dix et al.\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nsomeone is near (presence). Similarly, the car could be equipped with a\npressure sensor in the driver\u2019s seat. Active badges, video-based face recog-\nnition, or microphones matching footstep patterns can be used to tell a\nroom who is there and hence play the occupant\u2019s favorite music and adjust\nthe room temperature.\nThese examples are all about detecting people, but the same things occur\nin other settings. In the virtual world an agent may need to detect the same\nlevels of awareness: presence\u2014whether any other applications are running;\nidentity\u2014if so what they are (e.g., Netscape); and attributes\u2014what Web\npage is currently being viewed. Also, physical devices may detect one\nanother, e.g., allowing several people with PDAs to move into \u201cmeeting\u201d\nmode. In fact, awareness models that do just this form of detection within\nthe virtual world abound [Rodden 1996].\nTable VI summarizes these various factors laying out awareness levels\nagainst the \u201cwhat\u201d from Table V. Differences between direct\/indirect mea-\nsurement are drawn out where relevant. Perhaps most interesting is the\n\u201cpresence\u201d row. There is no need for a device to measure its own pres-\nence\u2014a computational equivalent of cognito ergo sum. Also, in the at-\ntributes, we have distinguished internal attributes (memory state of device)\nfrom external ones (sound coming from the speaker, position in space).\nAgain this is because, a device is implicitly able to be aware of the former\n(although may not be in practice), whereas external attributes need some\nform of physical sensors. This state of affairs is reversed when looking at\nother bodies. Note that in this table the word \u201cannouncement\u201d means some\nsort of directed or broadcast communication between the other body and\nthe device.\nIn all the cases considered, detection and measurement may vary in\naccuracy: perhaps a box was put onto the car-seat pressure sensor, or the\ndriver lied about her identity, or the ultrasonic sensor cannot tell whether\nthere is one person or more. There will also typically be some delay,\nespecially when indirect means are used, which is especially problematic if\nTable VI. Taxonomy of Device Awareness of Self and Other Bodies\nSelf Other Bodies\nDirect Indirect Direct Indirect\nPresence implicit n\/a proximity sensor announcement\nIdentity Intel chip! DHCP Identifying\nattribute\nannouncement\nInternal\nAttributes\nimplicit n\/a only if explicitly\nrepresented in\nexternal\nattributes\nannouncement\nExternal\nAttributes\nautosensors, e.g.,\nscreen Pantone\ncolor matcher\nWindows message\n\u201cdid that screen\nsetting work?\u201d\nsensors autosensing 1\nannouncement\nExploiting Space and Location \u2022 303\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nthe attribute being measured changes rapidly. Thus actual detection is a\ntrade-off between accuracy, timeliness, and cost. Depending on the out-\ncomes certain adaptations may be ill advised (a car wrongly identifies its\ndriver and adjusts the seat thinking the driver is short, the real driver is\nquite tall and ends up squashed behind the steering wheel). The fidelity of\nawareness is very closely tied to the demands of the application and\nrepresents a genuine trade-off between the cost of measurement, the\nnature of the measurement, and the importance of accuracy in the aware-\nness information.\nIn developing the framework in this section, we have explored the overall\ndesign space and suggested some ways in which we might characterize it.\nThis characterization forms the basis of the development of a model of\nspace that supports mobile devices in maintaining an awareness of others\nreported in the following section. This model builds upon the taxonomies of\nlocation (Table II) and bodies (Table IV). This focus is partly pragmatic and\npartly intrinsic: we cannot computationally model mobility until we model\nlocation; we cannot model awareness of other bodies in close locations until\nwe have modeled bodies and their location. So, for the purposes of this\narticle, the taxonomies in Tables III, V, and VI will inform our discussion,\nbut will not be explicitly represented.\n5. DEVELOPING SUPPORTING MODELS\nThe focus on the characterization in the previous section has been a sense\nof location and mobility in space. In developing this characterization we\nhave concentrated on physical space while suggesting that a significant\nfeature of the interactive nature of mobile systems is that they tie together\ndifferent forms of virtual space without elaborating on the nature of these\nspaces. One reason for this is that while considerable agreement exists on\nthe basic structure and nature of physical space a similar general model of\nelectronic spaces has yet to emerge.\nTo address this problem we have developed a general model of space that\nsupports mobile devices in maintaining an awareness of others. Not sur-\nprisingly, ideas of space and location are of critical importance in develop-\ning such a model. In order to adapt itself to its location, a mobile device\nneeds to be able to ask:\n(1) Where am I?\n(2) What else is nearby?\n(3) How should I behave in the light of (1) and (2).\nAnd in the case of autonomous devices, a mobile device needs to be able to\nask\n(4) How do I get to where I want to be?\nWe will concentrate on the models of location needed to answer the first\ntwo questions, as the final two questions are highly application specific.\n304 \u2022 A. Dix et al.\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nActual Space and Represented Space. In practice, a device does not\naccess the \u201cactual\u201d location of itself or other objects directly; instead it\naccesses some computational representation of location held by itself or\nsome sort of location service. Some form of transducer relates the \u201cactual\u201d\nspace and the representation of the space. This actual vs. representation is\nnot just an issue for physical space, but also virtual space. An awareness\nmechanism on a Web server may tell you about other current visitors to the\nsite based on a site login\/logout. However, some of the current \u201cvisitors\u201d\nmay have simply omitted to logout before going to pages on another site.\nThus, the server\u2019s representation of the virtual location of those users is not\ntheir actual location in this virtual space.\nTo represent this separation between the actual space and representation\nof the space we need two kinds of model:\n\u2014a semantic model which can be used for both the actual space and the\ncomputational representation of the space and\n\u2014a computational model which is part of the run-time architecture.\nThe semantic model gives a common meaning to the actual and represen-\ntational space and, thush, allows us to discuss issues in the mapping\nbetween them including the fidelity of that mapping.\nAlthough we need to deal with different kinds of space, if they are\nsuitable for questions of type (1) and (2), they must share some idea of\nlocation and some idea of nearness. There are several mathematical models\nof space that are informative as well as implicit models of space in various\nawareness models. In both types of model we will find explicit representa-\ntions of nearness. We will briefly review these existing models and use\nthese together with the taxonomies from Section 4 to inform our construc-\ntion of a semantic model, which in turn, will be instantiated in our\ncomputational model.\n5.1 Existing Models of Space and Awareness\nWe all feel we have some knowledge of ordinary physical space, and those\nwith a scientific background are used to encoding this in the x,y,z-coordi-\nnates of Cartesian geometry. The Cartesian view of physical space allows a\nunique labeling of space and allows us to understand the relationships\nbetween locations in terms of their coordinates alone. Scientifically it has\nbeen of tremendous importance, and practically it enables global navigation\nand the civil construction. In virtual reality it is this Cartesian 3D space\nthat is emulated and in desktop interfaces Cartesian 2D space. One of the\nrequirements we have is to have a measure of nearness, and Cartesian\ngeometry supplies this with the familiar Pythagorean (as the crow flies)\ndistance:\ndist2 5 x2 1 y2 22D space\ndist2 5 x2 1 y2 1 z2 23D space\nExploiting Space and Location \u2022 305\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nThe awareness model of Benford et al. [1995] was designed to deal with\nproximity and attention in shared virtual environments. It is thus formu-\nlated within a strongly Cartesian spatial framework. Some of the concerns\ndriving this model were pragmatic: \u201chow can we know when an object is not\nthe center of a user\u2019s attention and so render it in less detail?\u201d and \u201chow\ncan we know to whom to transmit a particular user\u2019s audio so as not to\ndrown everyone in a uniform babble?\u201d. The concepts of aura, nimbus, and\nfocus (and in later work, third-party objects) introduced in this model\ncapture a relative notion of \u201cnearness\u201d: \u201cwhat can I see\/hear?\u201d. The fact\nthat this is set within a Cartesian virtual reality environment means that\nthere are already clear \u201cnearness\u201d clues given by the scaling of objects with\ndistance.\nDespite its influence and conceptual power, Cartesian geometry is not as\nuniversal in the physical world as first appears. Cartesian coordinates are\nthemselves built upon Euclidean geometry, which for almost two millennia\nwas seen as self-evident. It was only comparatively recently (17th century)\nthat alternative regular geometries were discovered: spherical geometry\n(the surface of a sphere, where there is too little \u201cspace\u201d as one moves\nfarther away) and hyperbolic geometry (where there is too much \u201cspace\u201d as\none looks further away\u2014cabbage leaf geometry!). Still more recently with\ngeneral relativity it has become clear that large-scale space is neither\nEuclidean not regular, but instead \u201ccurves\u201d as it is influenced by anything\nand everything that has mass or energy. At the quantum level things are\nstill worse, and it appears that space may become fractal.\nIn mathematics there are a number of fields of study aimed at under-\nstanding alternative kinds of space. Important historically was the study of\nthe geometry of regular spherical and hyperbolic space, following in the\nsame vein as traditional geometry with theorems about triangles, circles,\netc. and a whole study of spherical trigonometry. More interesting for\nvirtual environments are various kinds of \u201cspace\u201d that are less regular and\nembody more abstract notions of \u201cnearness.\u201d Two common abstract mathe-\nmatical models of space that capture aspects of nearness are Metric Spaces\nand Topological Spaces.1 Both of these abstract mathematical spaces cap-\nture an idea of nearness. In the case of Metric Spaces this is a numerical\nmeasure of the distance between two points which satisfies the \u201ctriangle\ninequality\u201d:\ndist~a,c! 1 dist~c,b! $ dist~a,b!\nThis effectively says that if you want to go from A to B, it is always as\nfast or faster to go directly rather than to stop of at some other place C on\nthe way\u2014a reasonable minimal property of distance.\n1Note that when we used the word \u201ctopological\u201d in Section 4.1, it was in the weaker sense in\nwhich it is used in computing rather than the precise mathematical formulation of a\n\u201cTopological Space\u201d (which will be capitalized to avoid confusion).\n306 \u2022 A. Dix et al.\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nIn the case of Topological Spaces, the idea of nearness is captured by\never-decreasing \u201cneighborhoods\u201d which contain a point and all sufficiently\nclose neighbors. In both these kinds of spaces, the main interest in\nmathematics is in the notion of series of points which get ever closer\nwithout reaching a given point (convergent sequences); they are treated\nlike \u201crubber sheets\u201d which can be stretched as much as you like so long as\nthey are not torn (continuous mappings). Hence, even in the case of Metric\nSpaces which have a numeric measure of distance, the important factor for\ntheir mathematics is not the absolute measure of nearness, but the use of\nthe numbers to see whether things are getting closer.\nMore abstract notions of space can be found in Rodden\u2019s formalization\n[Rodden 1996] of the Benford et al. awareness model. The spatial model\nunderlying Benford et al.\u2019s work was clearly Euclidean, but largely implicit.\nRodden\u2019s work looked at awareness over a graph structure as is found in\nthe Web and many other computational domains. Nearness in such a space\ncan be measured by number of arcs traversed or similar weighted measures\nboth of which yield Metric Spaces. However, the critical properties of\nnearness in this work do not depend on these particular properties of the\nunderlying graph. This suggests that we need models of space which may\nbe stronger in that we would like some absolute sense of nearness and\nweaker in that we do not need the complex mechanisms needed to discuss\nconvergent sequences, etc.\nA final form of mathematical \u201cspace\u201d which is relevant is the Differential\nManifold. This is used to model curved space-time in General Relativity.\nThis is not directly relevant as a model of the kinds of location found in\nvirtual space or much-slower-than-light-speed physical space. However, the\nways in which relativity has challenged our understanding of \u201cspace\u201d in the\nphysical world has a lot to teach us about the challenges of \u201cvirtual\u201d space.\nOne particular point is the way general relativity models space using\nmathematical structures called Differential Manifolds. Because space\ncurves may have \u201csingularities\u201d (such as black holes) and even distant\nlinked points (wormholes), it is impossible to use a single coordinate system\nto refer to all points. Instead, the models consist of a number of patches,\neach of which has \u201cordinary\u201d Cartesian coordinates. Where the patches\noverlap there is a gentle transition between the coordinate systems (in\nmathematical terms they are related by a smooth function). Virtual spaces,\nsuch as the Web, may similarly have no global map or model, but if we can\nestablish patches with well-defined structure and clear transitions between\nthem then there is some hope for lost users.\nNot only is space in general relativity not flat, but its shape and \u201csize\u201d\nchange in time. We have all heard of the expanding universe. This does not\nmean simply that the stars are flying apart through space, but instead that\nthe space itself between the galaxies is stretching. This at first sounds as if\nit is only of interest to cosmologists. However, it is also precisely the\nexperience of those using wireless communications when their connection is\nbroken. Before the break in communication they have established a sense\nof \u201cnearness\u201d in virtual space with other people and things on the network.\nExploiting Space and Location \u2022 307\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nThen when the connection breaks this virtual geometry suddenly changes\u2014\nthings that were near suddenly become far away. It is precisely the\ndifference between this and \u201cnormal\u201d space that makes such disconnections\nso disturbing, especially if a collaborative system engenders any sense of\nimmersion.\nThe feature of space in General Relativity that is perhaps most well\nknown (although not necessarily understood) is that time and space are\ndealt with on an equal and interlocked basis: the time-space continuum.\nThis blending of time and space can also be found in more mundane areas\nof virtual environments and interface design.\nThe Aether model of Sandor et al. [1997] adopts a graphical network as\nits underlying space, very like Rodden\u2019s model. However, whereas both\nBenford et al. and Rodden have declarative definitions of awareness, the\nAether model adopts a more process-oriented mechanism whereby the\ninfluence of an object (aura, nimbus, and focus) percolates through the\nnetwork, getting weaker as it passes from node to node. The choice of this\nmechanism was largely driven by implementation considerations of produc-\ning an \u201cawareness engine,\u201d but is, of course, very like the physical trans-\nmission of sound and light. The Aether model has an implicit measure of\nnearness given by the rate at which network links and nodes attenuate\ninfluence, but also the Aether model explicitly introduces time as part of its\nawareness model. Whether in physical space or virtual, as soon as one\ntakes into account transmission delays, space and time become inseparably\ninterlinked.\nThis interlinking of time and space also becomes important as we\nconsider different sensory experiences [Dix 1996]. Different senses give us\ndifferent \u201ccuts\u201d through time and space. For objects within sight, we can\nconsider the speed of light as practically instantaneous. Hence a quick\nglance around tells you about an area of space at a particular instant in\ntime. If you want to know where something was a few seconds ago, you\nneed to have looked then and remember. Imagine, however, that you are a\ndog or mole and are working using a sense of smell. As you sniff at a\nparticular location you get some idea of the various creatures that have\npassed and even recent weather conditions at that point, i.e., smelling tells\nyou about recent time at a single point of space. If you want to know what\nhappened at other locations you need to have smelled there and remember.\nFinally consider a creature that uses sonar such as a whale or bat. Because\nsound takes time to travel through water or air, the echoes heard at a\nsingle moment correspond to close things recently, but further things\nlonger ago. Figure 2 shows how each of these give us a particular cut of\nspace-time.\nIn virtual space, network delays mean that we have sonar-like mixing of\ntime and space. But also computer systems embody a memory of interac-\ntion\u2014traces of past commands, windows opened for a previous purpose and\nnever closed, copies of possibly out-of-date information\u2014more like the\nworld of smell. To add to the confusion, these different cuts through\ntime-space are typically all presented visually!\n308 \u2022 A. Dix et al.\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nIn order to be able to talk about time-space interactions precisely, we\nneed a semantic model of space (virtual and physical). Before we consider\nsuch a model it is worth highlighting that we will not be able to investigate\nall the aspects of time-space in this article and that the model presented in\nthe following section is only one part of a much richer picture.\n5.2 Developing a Semantic Model of Space\nAs discussed, existing awareness models are focused primarily on virtual\nspace taking lessons from physical phenomena and are based on different\nunderlying models of space. In order to support this range of approaches to\nawareness we need an abstract model of space that includes both Euclidean\nspace and network space. We do not need the full richness and complexity\nof the mathematical spaces, but we do need an explicit formulation, as we\nneed to be able to talk about several simultaneous spaces and their\nrelationships.\nKinds of Space. The fundamental concepts we require are location and\nnearness. So we define a \u201cSpace-Kind\u201d to include precisely these two plus\nsome functions relating them:\nSpace-Kind 5 Location 2 set of elements representing \u2018\u2018locations\u2019\u2019\nNearness 2 partially ordered set of \u2018\u2018nearness\u2019\u2019 values\ndist: Location 3 Location 3 Nearness\n. . .\nThe Location set depends on the precise kind of space. In 2D Cartesian\nspace it would be the set of all (x,y) coordinate pairs; on the Web it would be\nthe set of all URLs; in a building it would include locations such as \u201cfloor\n3,\u201d \u201croom A 312,\u201d or \u201cnortheast stairwell.\u201d\nFig. 2. Different cuts through space-time.\nExploiting Space and Location \u2022 309\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nThe Nearness set will normally contain a minimal element \u201cHERE\u201d\nrepresenting \u201cat the same place as.\u201d In the case of Cartesian space it is\nsimply positive real numbers, and \u201cdist\u201d would be the normal as-the-crow-\nflies distance. In other spaces Nearness is a less precise concept and has\nvalues such as \u201con the same Web page,\u201d \u201cat the same site as,\u201d \u201cin the same\nroom as,\u201d and \u201cin the same building as.\u201d\nThe Nearness measure need not be a total order. For example, in a\ngeographical information system we may be able to locate roads within\ntowns, so \u201cin the same road as\u201d is obviously closer than \u201cin the same town\nas.\u201d However, if we look in the countryside it may simply be able to tell us\n\u201con the same mountain as.\u201d Is this a closer measure than \u201cin the same town\nas\u201d? Although this Nearness set is intended to give some idea of absolute\ndistance, we need to be careful. A very clear lesson from the mathematical\nstudies of metric and topological spaces is that nonlocal measures of\ndistance need to be treated with extreme caution. In our context we want to\nbe able to conclude that if A is a device and X and Y are objects in a space\nsuch that\ndist~A,X! , dist~A,Y !\nthen it is fair to make A\u2019s behavior more dependent on X\u2019s presence than\nthat of Y. However, if A and B are devices such that\ndist~A,X! , dist~B,Y !\nthen we should be extremely cautious about making any strong statements\nabout the comparative strength of the relationships A-X and B-Y.\nThis does not mean we never use absolute judgments of distance. We\nhave to be able to say things like the following:\nIf object X is in the same room as device A,\nthen A shows a representation of X in its screen.\nHowever, when designing such rules we have to be aware that \u201cin the\nsame room as\u201d could mean a broom cupboard or an auditorium.\nSome kinds of location have a natural idea of containment. In an office\ncomplex \u201croom A 315\u201d may be on \u201cfloor 3\u201d of \u201cbuilding A.\u201d Similarly, the\nhierarchy of a Web site leads to a natural hierarchy of locations. In\nCartesian spaces locations are mutually exclusive, but one can have regions\nof space, e.g., \u201call points within three miles of Great St. Mary\u2019s Church\nCambridge.\u201d In order to capture both these uniformly we allow a space to\nhave a set of regions which may either be a subset of locations (in the case\nof a hierarchy), or represent well-formed sets of points (in the case of a\nCartesian space) or some other domain-specific concept:\n310 \u2022 A. Dix et al.\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nSpace-Kind 5 . . .\nRegion 2 sensible areas\ncontains: Region 3 Location 3 Boolean\nSpaces and Bodies. As we have already noted, even in the physical\nworld we have several simultaneous ideas of space: longitude and latitude,\ntown-street, etc. In the virtual world this multiplies further. So our model\nof the world has a number of spaces each of a particular kind and with\nother domain-specific attributes:\nWorld 5 Spaces 2 set of elements representing \u2018\u2018locations\u2019\u2019\nkind: Spaces 3 Space-Kind\nattr: Spaces 3 Attributes\n. . .\nPeople, devices, and passive objects also inhabit the world as we have\ndiscussed previously. We call these collectively \u201cBodies.\u201d These again have\nvarious domain-specific attributes, but the crucial question is the location\nof a specific body. This is not absolute, but defined relative to a specific\nspace (e.g., GPS coordinates):\nWorld 5 . . .\nBodies 2 ~Bodies 5 People 1 Devices 1 Objects!\nattr: Bodies 3 Attributes\nloc: Bodies 3 Spaces 3 Location\nThe \u201cloc\u201d function is partial, as there may be \u201cspaces\u201d for which a\nparticular body has no clear relationship, e.g., there is no sensible answer\nto the question \u201cwhat URL (Web location) is my tea cup at?\u201d.\n5.3 A Computational Model\nOur semantic model of space is based on the concepts of Space and Bodies\nand a representation of location. We have developed a corresponding\ncomputational model to allow mobile applications to share a common\nawareness of a space and the bodies that inhabit that space. The general\napproach is to use an object-oriented model with a small number of simple\nobjects that can be made shared across a distributed information space.\nThis allows the state of defined objects to be accessed by a number of\ndifferent devices.\nThe core of the model depends upon the definition of a virtual model of\nspace in which the bodies relevant to the system are located and the ability\nto reason about the location of these in terms of a developed virtual space\nand the physical space of the real world. The central elements in the\ncomputational model are a world object and a body object. Each of these\nobjects are intended to provide the root of two distinct specialization trees\nto represent the different forms of space and the bodies that exist within\nExploiting Space and Location \u2022 311\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nthe space. These two object hierarchies essentially instantiate the different\nkinds of space and bodies suggested in the semantic model. This develop-\nment of a number of models of space mirrors the taxonomy we developed in\nthe design framework and provides us way of reasoning about the location\nof devices in mobile systems in terms of both a real and virtual locations.\nAll the objects are realized on top of a distributed platform that allows\nthe state of Java objects to be shared between different applications. The\nclasses introduced below are therefore subclasses of SharedEntity, which is\nthe root of all objects shared across the distributed platform.\nThe Space Object. The space object focuses on the ability of a space to\nact as a container of objects and on the way in which space can structure\nthe world in terms of containment. The core space object has only two\nsignificant attributes: a set of bodies that it contains and a set of locations\nfor these objects in the space. Location depends on a location object that\ncan represent different senses of location.\nThe space object is provided to developers as a Java class that can be\nextended and specialized in order to represent different forms of space.\nUpdates to the space object are propagated to all those that have registered\nan interest in the space. The key elements of the space object are reflected\nin Java as\nClass Space extends SharedEntity {\nKind kind; \/\/ The kind of space (e.g., Cartesian or Topology..)\nVector bodies;\nVector locations; \/\/ corresponding locations of bodies\n. . . }\nThe core Space class includes methods for adding and removing bodies to\na space, finding the location of a body within the space, and moving bodies\nin the space. Specializations drawn from this core object exploit the\nsemantics of the space to provide more sophisticated views of proximity and\ndistance.\nThe Location Object. A location class handles the location of bodies in\nspace and is closely associated with the space object: each location object\nhas an attribute to determine the kind of space it refers to, and each body\nin the space has an associated instance of a location object. Each location\nobject basically represents the more general structure of the space within\nwhich bodies are placed. The attributes of the core Location class are\nClass Location extends SharedEntity {\nKind kind; \/\/ The kind of space (e.g., Cartesian or topological)\nVector connected_entities; \/\/ The entities connected to this one\nPosition position; \/\/ The position in the space.\n. . . }\nThis basic location class has attributes that allow two different kinds of\nspace to be represented: Cartesian spaces that define a location in terms of\na position with reference to a fixed origin and topological spaces that\nconsider the linkage between different spaces. This is also reflected in the\n312 \u2022 A. Dix et al.\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nfact that the space provides two distinct methods position that returns a 3D\nposition for a given object and connected which returns a list of spaces that\na given space is connected to. The connected attribute allows us to repre-\nsent a range of graph-like spaces. Although there are other forms of\nnon-Cartesian space these graph-like spaces include those most commonly\nfound in information systems, and the base class can easily be subclassed\nfor other kinds of space. The kind attribute of the location should of course\nagree with the kind of space it is being used in, and the methods provided\nby the core classes maintain this consistency.\nThe Body Class. The definition of the location class allows us to repre-\nsent and reason about the location and position of bodies within any space.\nThe core of our design framework was the need to consider bodies as having\nboth real and virtual locations and to manage interaction in terms of the\ncorrespondence between these. This means that our computational model\nneeds to allow an interaction with bodies in terms of their position in\nmultiple spaces. The link between the bodies representing the overall\nsystem and the spaces in which they reside are reflected in the definition of\nthe class that provides the root of the bodies hierarchy making up the\noverall system. This is achieved in the computational model by having a\nBody class definition that allows state information about the spaces bodies\nare in to be externalized. The core attributes of the root Body class is a list\nof the spaces the body exists in. (Recall that a body may simultaneously\nexist in several physical and virtual spaces.) This is represented in the\nJava class as a simple vector:\nClass Body extends SharedEntity\nVector Spaces; \/\/ The spaces a body exists in\n. . . }\nAs in the case of the definition of the Space class the Body class inherits\nfrom SharedEntity. This means that the state information can be shared\nand made available across the distributed platform. Each shared entity has\na unique name and a set of optional tags that can be used to find objects of\nparticular interest. This arrangement allows the different components\nmaking up a mobile system to be aware of the location of other entities in\nthe various spaces in which they reside.\nUsing the Model. The computational model has been realized over a\ndistributed infrastructure called Limbo (discussed in Section 6.2). This\nplatform allows search facilities over the distributed shared object store,\nthus allowing any application to find out\n\u2014what spaces exist and what bodies are in those spaces,\n\u2014what other entities are in locations close to a body, and\n\u2014what other spaces is this body in and what is it location in these spaces.\nThis information can be used to infer distinct contextual cues about the\nnature of space. As an example consider a simple illustration of the use of\nExploiting Space and Location \u2022 313\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nthe platform drawn from our experiences of the GUIDE project. A portable\nnotebook has facilities that allow it to know which cell it is in a cell-based\nradio infrastructure. This is a topological space with a close correspondence\nto the physical arrangement of the devices in the real world.\nThis complete space can be represented as an instance of (a subclass of)\nSpace called \u201cphysical radio\u201d which has a Kind attribute set to \u201cTopologi-\ncal.\u201d Each location in the space is named. Location names are based on the\nname of the base station supporting the cell. All the notebooks within the\nspace are associated with a location, and we can ask the platform for the\nbodies in the space and their location. The physical movement of notebooks\nis reflected as changes to the associated location in the \u201cphysical radio\u201d\nspace.\nEach notebook\u2019s body definition also records the other spaces in which it\nis present, and this can be exploited or even coupled with the information\nabout its location in the physical space. For example, each of the notebooks\nin the GUIDE project shows a Web page based on the radio cell that it is\nphysically located in. This is achieved by putting the notebook in a virtual\ninformation space we shall call \u201cguide space.\u201d This space is actually a set of\nconnected Web pages. The guide browser shows the appropriate page by\nfinding its location within the virtual information space and updating this\nlocation as the location of the notebook in the \u201cphysical radio\u201d space\nchanges.\nThe computational model allows us to represent a range of different\nmodels of space and location central to the contextual interaction underpin-\nning mobile systems. This model can then be accessed by a range of mobile\ndevices and shared between them. This shared computational model pro-\nvides a higher-level representation, which allows the rapid development\nand alteration of interactive applications essential to most prototyping\napproaches.\nHowever, note that this computational model needed to be realized over\nan underlying infrastructure and system architecture (in our case the\nextended Limbo platform [Palfreyman et al. 1999]). In the next section, we\nwill discuss the various issues involved in designing and selecting such\narchitectures and discuss how the Limbo platform meets these require-\nments.\n6. FROM REQUIREMENTS TO ARCHITECTURE\nThe taxonomies we have developed in this article have highlighted a wide\nrange of application niches and suggests many exciting design possibilities\nfor specific applications exploiting the contextual nature of mobile devices.\nAlthough we are investigating some of these in a number of projects the\nprimary aim of our current \u201cinfrastructure\u201d project is to examine the\ngeneric requirements to emerge from taxonomies of this form. These\nrequirements can then be exploited to develop the underlying toolkits,\narchitecture and infrastructure needed for temporally well-designed, con-\ntext-aware, collaborative mobile systems.\n314 \u2022 A. Dix et al.\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nMobile systems extend our considerations of interaction beyond the user\ninterface to consider interaction in terms of the entire environment (hu-\nman, physical, and computational). As our framework has highlighted, in\nmobile systems the relevant semantics includes issues of location in physi-\ncal and virtual space; proximity of other devices and people; and capabili-\nties of devices and communication infrastructure. The necessary informa-\ntion and functionality to exploit this context is typically widely distributed\nwithin the computational environment\u2014spread over different devices,\nspread over different physical locations, and spread between different\nlayers in the system. The individual application developer will simply not\nhave the relevant information and functionality available unless the infra-\nstructure is designed taking into account human interface requirements.\nThus, in mobile systems\u2014more than other areas of HCI\u2014the design of\ninfrastructure is a central and essential concern.\n6.1 Requirements\nUnfortunately, research has repeatedly demonstrated the shortcomings of\nexisting infrastructure components for supporting adaptive mobile applica-\ntions [Davies 1994; Joseph et al. 1995]. In more detail, existing components\nhave two critical shortcomings. Firstly, they are often highly network\nspecific and fail to provide adequate performance over a range of network\ninfrastructures (e.g., TCP has been shown to perform poorly over wireless\nnetworks [C\u00e1ceres and Iftode 1994]). Secondly, existing components often\nlack suitable APIs for passing status information to higher levels. As a\nconsequence of these shortcomings new systems are increasingly being\ndeveloped using bespoke communications protocols and user interfaces. For\nexample, the GUIDE system described in Davies et al. [1998] uses a\nbroadcast-style protocol. This is appropriate in a location-based informa-\ntion system where it is likely that pages of information needed by one\ndevice will be useful to all. It also uses the presence of base stations as an\nindicator of location, a technique shared with several current location-\naware systems.\nAs these devices become more widespread the need increases for generic\napplication architectures for at least specific subclasses of the mobile\ndomain. There is clear commercial pressure for this; in particular, Win-\ndows-CE is being promoted for use in embedded systems. However, if these\nare simply developed by modifying architectures and toolkits originally\ndesigned for fixed environments there is a danger that some of the rich\ninteraction possibilities afforded by mobile devices may be lost.\nThere are some examples of generic frameworks on which we can build.\nIn Georgia Tech., location-aware guides are being constructed using the\nCyberDesk\/Cameo architecture [Wood et al. 1997]. Because the phenomena\nwe are trying to model are largely status, there is a great advantage of the\nunderlying architecture also reflects status and change in status. For\nexample, Cameo is a software architecture based on the theoretical frame-\nwork of status-event analysis (as discussed in Section 4.4).\nExploiting Space and Location \u2022 315\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nAnother major architectural issue for context-aware applications is the\nway in which contextual issues cut across the whole system design. This is\nreminiscent of other aspects of user interface where the structures appar-\nent at the user interface often do not match those necessary for efficient\nimplementation and sound software engineering [Dix and Harrison 1989].\nIn UI design this has led to a conflict between architectures which\ndecompose in terms of user interface layers, such as the Seeheim and\nARCH-Slinkey models [Gram and Cockton 1996] and more functionally\ndecomposed object-oriented models. In fact the object- and agent-based\narchitectures themselves usually include a layered decomposition at the\nobject level as in the MVC (Model-View-Controller) model [Lewis 1995] and\nin the PAC (Presentation-Abstraction-Control) model [Coutaz 1987]. Al-\nthough the display and input hardware may be encapsulated in a single\nobject or group of objects, its effects are felt in the architectural design of\nvirtually every user interface component. In a similar fashion the hardware\nthat supplies contextual information may well be encapsulated within\ncontext-objects, but their effect will permeate the system. This requires a\nsimilar orthogonal matrix structure similar to that found in models such as\nPAC or MVC. We expect context-awareness mechanisms to emerge as\nstructures cutting across application layers and interface components.\nReviewing our discussion, an architecture for supporting mobile, context-\naware applications must be\n\u2014distributed: as this is the nature of the devices over which it operates,\n\u2014capable of representing location,\n\u2014able to effectively deal with both status and event phenomena, and\n\u2014be orthogonal to other interface components.\n6.2 Extending Limbo to Provide a Supporting Platform\nOur computational model has been instantiated over a distributed platform\nthat allows a number of devices to make state information accessible to\neach other and thus allows the creation of a community of devices. This\nframework builds directly on the authors\u2019 previous work on Limbo and the\ndevelopment of a shared interaction platform [Palfreyman et al. 1999]. The\nplatform exploits a distributed tuple space to share state information\nbetween geographically remote clients allowing them to function as a single\ncollaborating system. The developed infrastructure is constructed using a\ncombination of C11 and Java and has four significant components:\n\u2014A distributed tuple space (Limbo) that allows tuples of data values to be\nshared between different devices and accessed across a range of commu-\nnication facilities. Our particular tuple space is a mobile variant of the\nestablished Linda model [Gelernter 1985].\n\u2014A notification services that informs applications about changes in the\ntuple space.\n316 \u2022 A. Dix et al.\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\n\u2014An infrastructure that allows structured information to be mapped onto\nshared tuples.\n\u2014The set of specific Java context objects (as described in Section 5.3) that\nallow communal access to the shared information about bodies, spaces,\nand locations.\nThe general architectural arrangement is shown in Figure 3. The general\nplatform interface is provided through a set of Java objects. The implemen-\ntation of the distributed tuple space allows the rapid replication of these\nobjects and for changes in state to be propagated.\nWe will examine this architecture using the requirements identified in\nSection 6.1.\nDistribution. Limbo is one of a number of distributed platforms. Indeed,\nour use of Limbo has similarities to the recent emergence of JavaSpaces\n[Sun Microsystems 1998] which provides a tuple-based infrastructure for\nJava programs. However, there are significant differences in the implemen-\ntation resulting from the requirements that have driven their respective\ndesigns. Our platform is specifically designed for rapid dissemination of\nevents and context information, and this is reflected in the use of multicast\nwithin its underlying implementation. Limbo is thus not only distributed,\nbut optimized for the kinds of transactions we envisage for context-aware\napplications.\nLocation. The underlying Limbo architecture supports the sharing of\nany kind of objects. This, combined with our computational model of space,\nallows the representation and sharing between devices of\n\u2014different elements of space,\n\u2014bodies and their locations, and\n\u2014other domain-specific objects.\nFig. 3. The platform architecture.\nExploiting Space and Location \u2022 317\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nTogether these facilities allow applications to provide interaction possi-\nbilities sensitive to context information pooled from a number of distrib-\nuted sources.\nStatus and Event Phenomena. Limbo, the distributed Linda tuple space,\nupon which we have built our computational model of space and location, is\nalready a status-orientated representation. The raw Linda space is a\npassive status requiring polling to discover changes. However, the addi-\ntional \u201cShared Universe\u201d layer adds explicit event notification facilities\nallowing applications to react to status-change events and to use the\nplatform for general event notification. Because of the ability of the\nplatform to manage both status and event phenomena, we expect it to\nsupport other forms of context awareness as well as the location services\nexplored in detail here.\nOrthogonality. It is in recognition of the pervasive nature of contextual\ndependency within the interface that we have developed our shared space\nmodel as an underlying service rather than a widget or component. The\ndistributed nature of Limbo means that the shared space model allows\nappropriate definitions of space to be shared between devices and for these\ndevices to exploit this contextual information represented by this shared\ncontext. The orthogonality of the model to other infrastructure components\nmeans that it is capable of capturing location information from both\nlow-level sources (such as a GPS data interface) or higher-level sources\n(such as a Web browser\u2019s current page).\n7. CONCLUSION\nThis article has consider the emergence and development of a new class of\nadvanced cooperative application and the different forms of interaction that\nmay need to be supported. The maturing of technology to allow the\nemergence of multiuser distributed applications that exploit mobile appli-\ncations means that we can no longer focus the issues of interaction on the\nnature of the device. Rather we must explicitly consider impact of the\ncontext in informing the design of different interaction techniques.\nWe have focused on understanding the design space to emerge for this\nnew class of application and the importance of location in mobile systems.\nThe article has presented a characterization of this design space and, for a\nparticular portion of the design space, described more detailed models and\nsupporting platforms that reflect the general approach to understanding\nthe design space.\nThe general approach to developing our characterization of the design\nspace has been to focus on the central role of location in mobile systems.\nThis focus represents only one of the potential contexts of relevance to\nmobile systems considered in Section 2. The importance of space and\nlocation described in Sections 3 and 4 respectively represent a fairly unique\naspect of mobile systems and underpin the development of the more\n318 \u2022 A. Dix et al.\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\ndetailed models described in Section 5 that are instantiated in the platform\ndescribed in Section 6.\nThe use of location within this article represents only one approach to\nunderstanding and managing context for these systems, but as we said in\nSection 2 the issues of context are much broader than location. In addition\nto the location of the device the overall context needs to be considered in\nterms of the devices relationship with the technical infrastructure, the\napplication domain, the socio-technical system in which it is situated, and\nthe physical nature of the device. The interaction style supported by mobile\napplications is as dependant on this context as the properties of the device\nitself. As a result, it is essential that work on the nature of these devices is\ncomplemented by a broader consideration of the nature of interaction. Our\nconsideration of location and the development of the taxonomies, models,\nand supporting platforms represents one step in this broader consideration.\nREFERENCES\nALIAGA, D. G. 1997. Virtual objects in the real world. Commun. ACM 40, 3, 49\u201354.\nBASS, L., KASABACH, C., MARTIN, R., SIEWIOREK, D., SMAILAGIC, A., AND STIVORIC, J. 1997. The\ndesign of a wearable computer. In Proceedings of the ACM Conference on Human Factors in\nComputing Systems (CHI \u201997, Atlanta, GA, Mar. 22\u201327), S. Pemberton, Ed. ACM Press,\nNew York, NY, 139\u2013146.\nBCS HCI. 1997. Proceedings on British HCI Group Workshop on Time and the Web. British\nComputer Society Workshop Series. British Computer Society, Swinton, UK.\nBENFORD, S., BOWERS, J., FAHLEN, L. E., MARIANI, J., AND RODDEN, T. 1994. Supporting\nco-operative work in virtual environments. Computer J. 37, 8.\nBENFORD, S., GREENHALGH, C., REYNARD, G., BROWN, C., AND KOLEVA, B. 1998. Understanding\nand constructing shared spaces with mixed-reality boundaries. ACM Trans. Comput. Hum.\nInteract. 5, 3, 185\u2013223.\nBOROVOY, R., MARTIN, F., VEMURI, S., RESNICK, M., SILVERMAN, B., AND HANCOCK, C. 1998.\nMeme tags and community mirrors: moving from conferences to collaboration. In Proceed-\nings of the 1998 ACM Conference on Computer-Supported Cooperative Work (CSCW \u201998,\nSeattle, WA, Nov. 14\u201318), S. Poltrock and J. Grudin, Chairs. ACM Press, New York, NY,\n159\u2013168.\nC\u00c1CERES, R. AND IFTODE, L. 1994. The Effects Of Mobility on Reliable Transport Protocols. In\nProceedings of the 14th International Conference on Distributed Computer Systems (ICDCS,\nProzen, Poland, June 22-24). 12\u201320.\nCOUTAZ, J. 1987. PAC: an object oriented model for dialogue design. In Proceedings on\nHuman Computer Interaction (INTERACT\u201987), H.-J. Bullinger and B. Shackel, Eds.\nElsevier North-Holland, Inc., New York, NY, 431\u2013436.\nDAVIES, N., BLAIR, G., CHEVERST, K., AND FRIDAY, A. 1994. Supporting Adaptive Services in a\nHeterogeneous Mobile Environment. In Proceedings of the Workshop on Mobile Computing\nSystems and Applications (Mobile \u201994, Santa Cruz, CA, Dec.), L.-F. Cabrera and M.\nSatyanarayanan, Eds. IEEE Computer Society Press, Los Alamitos, CA, 153\u2013157.\nDAVIES, N., MITCHELL, K., CHEVERST, K., AND BLAIR, G. S. 1998. Developing a Context\nSensitive Tourist Guide. University of Lancaster, Lancaster, UK. Technical Report\nComputing Department.\nDIX, A. 1992. Pace and interaction. In Proceedings on People and Computers VII: Proceedings\nof HCI \u201992 (HCI \u201992, York, UK, Sept.), A. Monk, D. Diaper, and M. D. Harrison, Eds.\nCambridge University Press, New York, NY, 193\u2013207.\nDIX, A. J. 1995. Cooperation without (reliable) Communication: Interfaces for Mobile\nApplications. Distrib. Syst. Eng. 2, 3, 171\u2013181.\nExploiting Space and Location \u2022 319\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nDIX, A. J. 1996. Closing the Loop: modelling action, perception and information. In\nProceedings on Advanced Visual Interfaces (AVI\u201996, Gubbio, Italy), T. Catarci, M. F.\nCostabile, S. Levialdi, and G. Santucci, Eds. ACM Press, New York, NY, 20\u201328.\nDIX, A. AND ABOWD, G. 1996. Modelling status and event behaviour of interactive systems.\nSoftw. Eng. J. 11, 6, 334\u2013346.\nDIX, A. J. AND HARRISON, M. D. 1989. Interactive systems design and formal development are\nincompatible?. In The Theory and Practice of Refinement, J. McDermid, Ed. Butterworth\nPublishers, Stoneham, MA, 12\u201326.\nFICKAS, S., KORTUEM, G., AND SEGALL, Z. 1997. Software issues in wearable computing. In\nProceedings of the CHI Workshop on Research Issues in Wearable Computers (Atlanta,\nGA). ACM, New York, NY.\nFITZPATRICK, G., KAPLAN, S., AND MANSFIELD, T. 1996. Physical spaces, virtual places and\nsocial worlds: a study of work in the virtual. In Proceedings of the 1996 ACM Conference on\nComputer-Spported Cooperative Work (CSCW \u201996, Boston, MA, Nov. 16\u201320), M. S. Acker-\nman, Ed. ACM Press, New York, NY, 334\u2013343.\nGAVER, W. W. 1992. The affordances of media spaces for collaboration. In Proceedings of the\nACM Conference on Computer-Supported Cooperative Work (CSCW \u201992, Toronto, Canada,\nOct. 31\u2013Nov. 4), M. Mantel and R. Baecker, Chairs. ACM Press, New York, NY, 17\u201324.\nGELERNTER, D. 1985. Generative communication in Linda. ACM Trans. Program. Lang. Syst.\n7, 1 (Jan.), 80\u2013112.\nGRAM, C. AND COCKTON, G., EDS. 1997. Design principles for interactive software. Chapman\nand Hall, Ltd., London, UK.\nGREENBERG, S. AND MARWOOD, D. 1994. Real time groupware as a distributed system:\nconcurrency control and its effect on the interface. In Proceedings of the ACM Conference on\nComputer-Supported Cooperative Work (CSCW \u201994, Chapel Hill, NC, Oct. 22\u201326), J. B.\nSmith, F. D. Smith, and T. W. Malone, Chairs. ACM Press, New York, NY, 207\u2013217.\nHARPER, R. H. R. 1992. Looking at ourselves: an examination of the social organisation of two\nresearch laboratories. In Proceedings of the ACM Conference on Computer-Supported\nCooperative Work (CSCW \u201992, Toronto, Canada, Oct. 31\u2013Nov. 4), M. Mantel and R. Baecker,\nChairs. ACM Press, New York, NY, 330\u2013337.\nHENDERSON, D. A. AND CARD, S. 1986. Rooms: The use of multiple virtual workspaces to\nreduce space contention in a window-based graphical user interface. ACM Trans. Graph. 5,\n3 (July), 211\u2013243.\nHOWARD, S. AND HOWARD, J., EDS. 1998. Temporal Aspects of Usability: The relevance of time\nto the development and use of human-computer systems. Interact. Comput..\nHUGHES, J., KING, V., RODDEN, T., AND ANDERSEN, H. 1995. The role of ethnography in\ninteractive systems design. interactions 2, 2 (Apr.), 56\u201365.\nISHII, H. AND ULLMER, B. 1997. Tangible bits: Towards seamless interfaces between people,\nbits and atoms. In Proceedings of the ACM Conference on Human Factors in Computing\nSystems (CHI \u201997, Atlanta, GA, Mar. 22\u201327), S. Pemberton, Ed. ACM Press, New York, NY,\n234\u2013241.\nJOHNSON, C. AND GRAY, P. 1996. Workshop Report: Temporal Aspects of Usability. SIGCHI\nBull. 28, 2.\nJOHNSON, C. W. 1997. The impact of time and place on the operation of mobile computing\ndevices. In Proceedings of the conference of HCI \u201997 on People and Computers XII (HCI \u201997,\nBristol, UK). 175\u2013190.\nJOSEPH, A., DELESPINASSE, A., TAUBER, J., GIFFORD, D., AND KAASHOEK, M. F. 1995. Rover: A\nToolkit for Mobile Information Access. In Proceedings of the 15th ACM Symposium on\nOperating System Principles (SOSP, Copper Mountain Resort, Colorado, U.S., 3-6\nDec.). ACM Press, New York, NY, 156\u2013171.\nLEWIS, S. 1995. The art and science of Smalltalk. Prentice Hall International (UK) Ltd.,\nHertfordshire, UK.\nLONG, S., KOOPER, R., ABOWD, G. D., AND ATKESON, C. G. 1996. Rapid prototyping of mobile\ncontext-aware applications: the Cyberguide case study. In Proceedings of the 2nd Annual\nInternational Conference on Mobile Computing and Networking (MOBICOM \u201996, Rye, NY,\n320 \u2022 A. Dix et al.\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\nNov. 10\u201312), H. Ahmadi, R. H. Katz, I. F. Akyildz, and Z. J. Haas, Chairs. ACM Press, New\nYork, NY, 97\u2013107.\nPATTERSON, J. F., DAY, M., AND KUCAN, J. 1996. Notification servers for synchronous\ngroupware. In Proceedings of the 1996 ACM Conference on Computer-Supported Cooperative\nWork (CSCW \u201996, Boston, MA, Nov. 16\u201320), M. S. Ackerman, Ed. ACM Press, New York,\nNY, 122\u2013129.\nRAMDUNY, D. AND DIX, A. 1998. Why, What, Where, When: Architectures for Co-operative\nwork on the WWW. In Proceedings of the primary European Annual Conference on Human\nComputer Interaction (HCI\u201998, Sheffield Hallam University, Bristol, UK, Sept.\n1-4). Springer-Verlag, Vienna, Austria, 283\u2013301.\nRAMDUNY, D., DIX, A., AND RODDEN, T. 1998. Getting to Know: the design space for notification\nservers. In Proceedings on CSCW.\nRODDEN, T. 1996. Populating the application: a model of awareness for cooperative\napplications. In Proceedings of the 1996 ACM Conference on Computer-Spported Cooperative\nWork (CSCW \u201996, Boston, MA, Nov. 16\u201320), M. S. Ackerman, Ed. ACM Press, New York,\nNY, 87\u201396.\nROOT, R. W. 1988. Design of a multi-media vehicle for social browsing. In Proceedings of the\nACM Conference on Computer-Supported Cooperative Work (CSCW \u201988, Portland, OR, Sept.\n26\u201328), I. Greif, Chair. ACM Press, New York, NY, 25\u201338.\nROSEMAN, M. AND GREENBERG, S. 1996. TeamRooms: Network places for collaboration. In\nProceedings of the 1996 ACM Conference on Computer-Spported Cooperative Work (CSCW\n\u201996, Boston, MA, Nov. 16\u201320), M. S. Ackerman, Ed. ACM Press, New York, NY, 325\u2013333.\nSANDOR, O., BOGDAN, C., AND BOWERS, J. 1997. Aether: An Awareness Engine for CSCW. In\nProceedings of the Fifth European Conference on Computer Supported Cooperative Work\n(ECSCW\u201997), J. Hughes, Ed. Kluwer Academic, Dordrecht, Netherlands, 221\u2013236.\nSUN MICROSYSTEMS. 1998. Java Distributed Computing White Papers. http:\/\/java.sun.com\/\nproducts\/javaspaces\/whitepapers\/index.html.\nWANT, R., SCHILIT, B. N., ADAMS, N. I., GOLD, R., PETERSEN, K., GOLDBERG, D., ELLIS, J. R., AND\nWEISER, M. 1995. An Overview of the ParcTab Ubiquitous Computing Experiment. IEEE\nPersonal Commun. 2, 6 (Dec.), 28\u201343.\nWEISER, M. 1991. The computer of the 21st century. Sci. Am. 265, 3 (Sept.), 66\u201375.\nWEISER, M. 1993. Some computer science issues in ubiquitous computing. Commun. ACM 36,\n7 (July), 75\u201384.\nWOOD, A., DEY, A., AND ABOWD, G. D. 1997. CyberDesk: automated integration of desktop and\nnetwork services. In Proceedings of the ACM Conference on Human Factors in Computing\nSystems (CHI \u201997, Atlanta, GA, Mar. 22\u201327), S. Pemberton, Ed. ACM Press, New York, NY,\n552\u2013553.\nPALFREYMAN, K., TREVOR, J., AND RODDEN, T. 1999. PSI: A Platform for Shared Interaction. In\nProceedings on ECSCW (ECSCW99, Copenhagen, Denmark, 12-16 Sept.). Kluwer Aca-\ndemic, Dordrecht, Netherlands, 351\u2013371.\nExploiting Space and Location \u2022 321\nACM Transactions on Computer-Human Interaction, Vol. 7, No. 3, September 2000.\n"}