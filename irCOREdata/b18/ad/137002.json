{"doi":"10.1007\/s11263-010-0392-0","coreId":"137002","oai":"oai:bradscholars.brad.ac.uk:10454\/4825","identifiers":["oai:bradscholars.brad.ac.uk:10454\/4825","10.1007\/s11263-010-0392-0"],"title":"The Canny edge detector revisited","authors":["McIlhagga, William H."],"enrichments":{"references":[],"documentType":{"type":1}},"contributors":[],"datePublished":"16\/10\/2010","abstract":"yesCanny (IEEE Trans. Pattern Anal. Image Proc. 8(6):679-698, 1986) suggested that an optimal edge detector should maximize both signal-to-noise ratio and localization, and he derived mathematical expressions for these criteria. Based on these criteria, he claimed that the optimal step edge detector was similar to a derivative of a gaussian. However, Canny's work suffers from two problems. First, his derivation of localization criterion is incorrect. Here we provide a more accurate localization criterion and derive the optimal detector from it. Second, and more seriously, the Canny criteria yield an infinitely wide optimal edge detector. The width of the optimal detector can however be limited by considering the effect of the neighbouring edges in the image. If we do so, we find that the optimal step edge detector, according to the Canny criteria, is the derivative of an ISEF filter, proposed by Shen and Castan (Graph. Models Image Proc. 54:112-133, 1992).\\ud\nIn addition, if we also consider detecting blurred (or non-sharp) gaussian edges of different widths, we find that the optimal blurred-edge detector is the above optimal step edge detector convolved with a gaussian. This implies that edge detection must be performed at multiple scales to cover all the blur widths in the image. We derive a simple scale selection procedure for edge detection, and demonstrate it in one and two dimensions","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/137002.pdf","fullTextIdentifier":"https:\/\/bradscholars.brad.ac.uk\/bitstream\/10454\/4825\/3\/Canny%20Revisited%20Authors%20Version-3.pdf","pdfHashValue":"d007f261b4e4cda65fa8a0a9e4c16b8faac7b66c","publisher":null,"rawRecordXml":"<record><header><identifier>\n        \n            \n                oai:bradscholars.brad.ac.uk:10454\/4825<\/identifier><datestamp>\n                2016-08-19T16:23:37Z<\/datestamp><setSpec>\n                com_10454_152<\/setSpec><setSpec>\n                col_10454_6342<\/setSpec>\n            <\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:doc=\"http:\/\/www.lyncode.com\/xoai\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n            \nThe Canny edge detector revisited<\/dc:title><dc:creator>\nMcIlhagga, William H.<\/dc:creator><dc:subject>\nEdge detectors;<\/dc:subject><dc:subject>\nOptimal;<\/dc:subject><dc:subject>\nScale space;<\/dc:subject><dc:subject>\nHuman vision;<\/dc:subject><dc:subject>\nREF 2014<\/dc:subject><dc:description>\nyes<\/dc:description><dc:description>\nCanny (IEEE Trans. Pattern Anal. Image Proc. 8(6):679-698, 1986) suggested that an optimal edge detector should maximize both signal-to-noise ratio and localization, and he derived mathematical expressions for these criteria. Based on these criteria, he claimed that the optimal step edge detector was similar to a derivative of a gaussian. However, Canny's work suffers from two problems. First, his derivation of localization criterion is incorrect. Here we provide a more accurate localization criterion and derive the optimal detector from it. Second, and more seriously, the Canny criteria yield an infinitely wide optimal edge detector. The width of the optimal detector can however be limited by considering the effect of the neighbouring edges in the image. If we do so, we find that the optimal step edge detector, according to the Canny criteria, is the derivative of an ISEF filter, proposed by Shen and Castan (Graph. Models Image Proc. 54:112-133, 1992).\\ud\nIn addition, if we also consider detecting blurred (or non-sharp) gaussian edges of different widths, we find that the optimal blurred-edge detector is the above optimal step edge detector convolved with a gaussian. This implies that edge detection must be performed at multiple scales to cover all the blur widths in the image. We derive a simple scale selection procedure for edge detection, and demonstrate it in one and two dimensions.<\/dc:description><dc:date>\n2011-03-01T13:00:21Z<\/dc:date><dc:date>\n2011-03-01T13:00:21Z<\/dc:date><dc:date>\n16\/10\/2010<\/dc:date><dc:type>\nArticle<\/dc:type><dc:type>\nAccepted Manuscript<\/dc:type><dc:identifier>\nMcIlhagga, W. (2010). The Canny edge detector revisited. International Journal of Computer Vision. Vol. 91, No. 3, pp. 251-261.<\/dc:identifier><dc:identifier>\n90007049<\/dc:identifier><dc:identifier>\nhttp:\/\/hdl.handle.net\/10454\/4825<\/dc:identifier><dc:identifier>\nINTERNATIONAL JOURNAL OF COMPUTER VISION<\/dc:identifier><dc:language>\nen<\/dc:language><dc:relation>\nhttp:\/\/dx.doi.org\/10.1007\/s11263-010-0392-0<\/dc:relation>\n<\/oai_dc:dc>\n<\/metadata>\n        <\/record>","journals":null,"language":null,"relations":["http:\/\/dx.doi.org\/10.1007\/s11263-010-0392-0"],"year":2010,"topics":["Edge detectors;","Optimal;","Scale space;","Human vision;","REF 2014"],"subject":["Article","Accepted Manuscript"],"fullText":"  \nThe University of Bradford Institutional \nRepository \nhttp:\/\/bradscholars.brad.ac.uk \nThis work is made available online in accordance with publisher policies. Please \nrefer to the repository record for this item and our Policy Document available from \nthe repository home page for further information. \nTo see the final version of this work please visit the publisher\u2019s website. Where \navailable access to the published online version may require a subscription. \nAuthor(s): McIlhagga, William H. \nTitle: The Canny Edge Detector Revisited \nPublication year: 2010 \nJournal title: International Journal of Computer Vision \nPublisher: Springer \nLink to original published version: http:\/\/dx.doi.org\/10.1007\/s11263-010-0392-0 \nCitation: McIlhagga, W. (2010). The Canny Edge Detector Revisited. International \nJournal of Computer Vision. Vol. 91, No. 3, pp. 251-261. \nCopyright statement: \u00a9 2010 Springer. Reproduced in accordance with the \npublisher's self-archiving policy. Original publication is available at \nhttp:\/\/www.springerlink.com \n \n1 \nOptimal Edge Detectors Revisited. \nWilliam McIlhagga \nBradford School of Optometry and Vision Science, University of Bradford, Bradford, \nEngland BD7 1DP. \ntel. 00441274235957 \nfax. 00441274235570 \nmailto: w.h.mcilhagga@bradford.ac.uk \nhomepage: http:\/\/www.brad.ac.uk\/acad\/lifesci\/optometry\/index.php\/Staff\/DrWilliamMcIlhagga \n \nAbstract. \nCanny (1986) suggested that an optimal edge detector should maximize both signal-to-noise ratio and \nlocalization, and he derived mathematical expressions for these criteria. Based on these criteria, he claimed that \nthe optimal step edge detector was similar to a derivative of a gaussian. However, Canny\u2019s work suffers from \ntwo problems. First, his derivation of localization criterion is incorrect. Here we provide a more acurate \nlocalization criterion and derive the optimal detector from it. Second, and more seriously, the Canny criteria \nyield an infinitely wide optimal edge detector. The width of the optimal detector can however be limited by \nconsidering the effect of the neighbouring edges in the image. If we do so, we find that the optimal step edge \ndetector, according to the Canny criteria, is the derivative of an ISEF filter, proposed by Shen and Castan \n(1992).  \nIn addition, if we also consider detecting blurred (or non-sharp) gaussian edges of different widths, we find that \nthe optimal blurred-edge detector is the above optimal step edge detector convolved with a gaussian. This \nimplies that edge detection must be performed at multiple scales to cover all the blur widths in the image. We \nderive a simple scale selection procedure for edge detection, and demonstrate it in one and two dimensions.  \n \n \n \n \n \n \nNote: This is a slightly improved version of the published article. A number of minor errors and clumsy \nexpressions crept into that paper, as a result of the limited time given to authors by Springer (although they \napparently give unlimited time to the reviewers). \n2 \n1. Introduction \nEdges are projections of physical processes, such as changes of reflectance at object \nboundaries, or a changes of illumination. They are informative cues to the three dimensional \nstructure of the world and, because of this, edge detection is a vital first step in many vision \nsystems. Many edge detectors have been developed (see Peli and Malah (1982), Ziou and \nTabbone (1998)), often from informal or ad hoc arguments. Canny (1986), in an influential \npaper, suggested that edge detectors should optimize two specific performance criteria. First, \nthe edge detector should have a good signal-to-noise ratio, so that edges can be detected even \nwhen image quality is poor. Second, edge detectors should accurately localize the edges, to \nsupport subsequent visual processes that need a high degree of positional accuracy. Canny \nsuggested that the optimal edge detector maximizes the product of signal-to-noise and \nlocalization. He also found it necessary to constrain the smoothness of the edge detector. The \nresulting constrained optimal filter was similar to a derivative of a gaussian.  \n \nUnfortunately, Canny\u2019s development of optimal edge detectors contains two significant \nproblems. The first, lesser, problem is that Canny did not provide the correct expression for \nlocalization  (Tagare and deFigueiredo, 1990, Koplowitz and Greco, 1994). Here we provide \na more accurate expression for edge localization. This new measure includes the filter \nsmoothness, which explains why Canny found it necessary to constrain this. The second, \nbigger, problem is that the Canny criteria imply that the optimal edge detector is infinitely \nwide.  This renders the edge detector useless, because it will pick up an infinite amount of \ninterference from other edges in the image. To solve this problem, we need to include the \neffects of the other edges on filter performance. This can be done by modelling the other \nedges in the image as a Brown noise stochastic process.  \n \nWhen we do this, we find that the optimal edge detector is a derivative of an ISEF filter \n(Shen and Castan, 1992). In addition to providing the correct optimal edge detector for step \nedges, we also generalize the edge detection task to include detecting blurred edges of any \nwidth. When the noise in the image is low, the resultant algorithm is similar to a scheme \nproposed by Lindeberg (1998), but its optimality properties were not previously known. This \noptimal edge detection scheme is demonstrated in two dimensions.  \n2. Canny\u2019s Optimal Edge Detector. \nWe begin by summarising Canny\u2019s (1986) approach to edge detection. Consider a linear filter \nf(x) designed to detect an isolated step edge g(x), located at x=0, in white noise n(x). The filter \nresponse )(xh is given by  \n)()(\n)()()()()(\nxhxh\ndttftxndttftxgxh\nng\nr\nr\nr\nr\n+=\n\u2212+\u2212= \u222b\u222b\n+\n\u2212\n+\n\u2212\n  (1) \nwhere hg(x) and hn(x) are the filter responses to edge and noise respectively. Edges are \nmarked by peaks in the filter response h(x). The edge is detected by a peak in the filter \n3 \nreponse, and in the absence of noise, hg(0) is the sole peak. The filter is zero outside the \ninterval [-r, r].  \n \nThe signal to noise ratio of the filter is its response to the edge hg(0)  divided by the r.m.s. \nresponse to noise 2\/12 ])0([ nhE , which is \n\u222b\u222b\n+\n\u2212\n+\n\u2212\n\u2212=\nr\nr\nr\nr\ndxxfndxxfxgfSNR 20 )()()()(   (2) \nwhere n0 is the r.m.s. amplitude of the noise.  \n \nIn noise, the peak response hg(x) will occur at some point xmax, different from zero. Ideally, \nhowever, the peak location should be close to 0. Canny defined the localization of the edge \ndetector to be the reciprocal of the standard deviation of xmax about zero, namely 2\/12max ][ \u2212xE . \nNear the true edge location, the filter response can be approximated by a Taylor expansion: \n2\/)0()0(2\/)0()0()0(\n2\/)0()0()0()(\n22\n2\nnngg hxhxhxhxh\nhxhxhxh\n\u2032\u2032+\u2032+\u2032\u2032+\u2032+=\n\u2032\u2032+\u2032+\u2248\n (3) \nSince )0(gh  is a maximum, the derivative )0(gh\u2032  is zero. Taking the derivative of Equation \n(3) with respect to x and substituting xmax gives \n))0()0(()0()( maxmax ngn hhxhxh \u2032\u2032+\u2032\u2032+\u2032=\u2032   (4) \nSince )( maxxh  is a maximum, the derivative )( maxxh\u2032  is zero. Solving Equation (4) for xmax \ngives  \n)0()0(\n)0(\nmax\nng\nn\nhh\nh\nx\n\u2032\u2032+\u2032\u2032\n\u2032\n\u2212\n=     (5) \nwhere both )0(nh\u2032  and )0(nh \u2032\u2032  are uncorrelated  zero-mean gaussian random variables when \nthe noise is gaussian (Koplowitz and Greco, 1994). \n \nCanny assumed )0(nh \u2032\u2032  =01,  so Equation (5) simplifies to 222max )0(\/])0([][ gn hhExE \u2032\u2032\u2032= , and \nthe localization is then \n\u222b\u222b\n+\n\u2212\n+\n\u2212\n\u2032\u2032\u2212\u2032=\n\u2032\n\u2032\u2032\n\u2248\nr\nr\nr\nrn\ng\nC dxxfndxxfxghE\nhfL 202\/12 )()()(])0([\n)0(\n)(\n  (6) \nThe subscript C in )( fLC  indicates that this is Canny\u2019s expression for localization.  \n \n                                                 \n1\n To be precise, Canny\u2019s assumption was that 22max )]0([])([ nn hExhE \u2032\u2248\u2032 , which is only guaranteed when \n0)( \u2248\u2032\u2032 xhn . \n4 \nBoth )( fSNR  and )( fLC  are proportional to the ratio of edge amplitude A to noise \namplitude n0. To obtain performance criteria that depend only on the filter, Canny defined \u03a3 \nand \u039bC as \n)()(   and   ),()(\n00\nf\nn\nAfLf\nn\nAfSNR CC \u039b=\u03a3=  (7) \nBoth  \u03a3 and \u039bC  can be optimized simultaneously by finding a filter f which optimizes their \nproduct, \n)()()( fffOpt C\u039b\u03a3=   (8) \nUnfortunately, the optimizing filter produces multiple noise peaks in the vicinity of the edge, \nmaking it hard to decide which of the peaks is the edge.  \n \nTo lessen this problem, Canny constrained the average distance between the noise peaks to be \ngreater than some fraction of the filter width. The average distance between noise peaks is \nproportional to \n\u222b\u222b\n+\n\u2212\n+\n\u2212\n\u2032\u2032\u2032=\n\u2032\u2032\n\u2032\n=\nr\nr\nr\nrn\nn dxxfdxxf\nhE\nhEfZ 222\/12\n2\/12\n)()(])0([\n])0([)(  (9) \nThe quantity )( fZ is a measure of filter smoothness. The filter which maximized the product \n)( fOpt  subject to a constraint on )( fZ  was similar to a gaussian derivative (Canny 1986).  \n3. Two Problems with Canny\u2019s Edge Detector. \nIt has been previously noticed  that Canny\u2019s localization measure )( fLC  is incorrect (Tagare \nand deFigueiredo, 1990,  Koplowitz and Greco, 1994). In section 3.1 below we derive a more \ncorrect localization criterion, which incorporates the smoothness functional )( fZ  when the \nedge amplitude is small. This means it is no longer necessary to impose a constraint on )( fZ  \nto get a good edge detection filter.  \n \nIt has not however been previously noticed that the optimal filter, according to Canny\u2019s \ncriteria, must be infinitely wide. In section 3.2, we show why this occurs. An infinitely wide \nfilter is useless for edge detection in real images. In section 4, we suggest a solution to the \ninfinite width problem, which leads us to a different form of optimal edge detector than that \nproposed by Canny. \n3.1 Canny\u2019s Localization is Incorrect. \nTagare and deFigueiredo (1990) and Koplowitz and Greco (1994) have noted that Canny\u2019s \nassumption that )0(nh \u2032\u2032 =0 is most likely wrong. By defining standardized normal random \nvariables 2\/12 ])0([\/)0( nn hEhX \u2032\u2032=  and 2\/12 ])0([\/)0( nn hEhY \u2032\u2032\u2032\u2032= , Equation (5) can be written \nas \n5 \nYhEh\nXfZ\nYhEh\nX\nhE\nhE\nx\nng\nngn\nn\n+\u2032\u2032\u2032\u2032\n=\n+\u2032\u2032\u2032\u2032\uf8f7\n\uf8f7\n\uf8f8\n\uf8f6\n\uf8ec\uf8ec\n\uf8ed\n\uf8eb\n\u2032\u2032\n\u2032\n=\n2\/12\n2\/122\/12\n2\/12\nmax\n])0([\/)0()(\n])0([\/)0(])0([\n])0([\n (10) \nX and Y are uncorrelated if the noise n(x) is white gaussian noise. Note that \n)()(])0([\/)0( 2\/12 fZfLhEh Cng =\u2032\u2032\u2032\u2032   (11) \nso Equation (10) can be written as \n\uf8f7\uf8f7\n\uf8f8\n\uf8f6\n\uf8ec\uf8ec\n\uf8ed\n\uf8eb\n+\n=\nYfZfL\nXfZfL\nfLx C\nC\nC )]()([\n)]()([\n)(\n1\nmax   (12) \nFor brevity, we will write \u2126  for the product )()( fZfLC . The edge detector localization L(f) \nis then \n2\/1\n2\n2\/12\nmax ][)(][)( \u2212\u2212 \uf8f7\n\uf8f8\n\uf8f6\n\uf8ec\n\uf8ed\n\uf8eb\n+\u2126\n\u2126\n==\nY\nXEfLxEfL C  (13) \nThis is Canny\u2019s localization )( fLC  divided by the standard deviation of a ratio of normal \nrandom variables, ( ) 2\/12 ])\/([ YXE +\u2126\u2126 . Unfortunately this ratio has an undefined first \nmoment and infinite higher moments (Marsaglia 1965, Hinkley 1969), which makes the \nlocalization )( fL  zero. Apparently, then, it is impossible to localize a step edge! However, \nthe infinite moments of the ratio )\/( YX +\u2126\u2126  are due to a subset of events where the \ndenominator )( Y+\u2126  is close to zero (Marsaglia, 2006). These events most likely occur when \nthe edge couldn\u2019t be detected at all (because of noise), rather than being detected infinitely far \nfrom its true location.  \n \nIf we avoid these events by conditioning on a nonzero denominator, \u03b5>+\u2126 || Y  for small \u03b5, \nthen the moments of the ratio )\/( YX +\u2126\u2126  do exist  (Marsaglia, 2006). The first moment is \nzero. There is however no closed form for the second moment, but it can be estimated by \nMonte Carlo methods. Figure 1 shows Monte-Carlo estimates of ( ) 2\/12 ])\/([ \u2212+\u2126\u2126 YXE  \nplotted as a function of \u2126. A good approximation to these estimates is  \n2.1\n2\/1\n2\n3.0\n2.3\narctan\n15.0][ \uf8f7\uf8f7\n\uf8f8\n\uf8f6\n\uf8ec\uf8ec\n\uf8ed\n\uf8eb\n\uf8f7\n\uf8f8\n\uf8f6\n\uf8ec\n\uf8ed\n\uf8eb \u2212\u2126\n+\u2248\uf8f7\n\uf8f8\n\uf8f6\n\uf8ec\n\uf8ed\n\uf8eb\n+\u2126\n\u2126\n\u2212\npiY\nXE   (14) \nThis approximation is also plotted in Figure 1. \n \n \n \n \n \n \n \n6 \n \nFigure 1. Monte Carlo estimates of \n( ) 2\/12 ])\/([ \u2212+\u2126\u2126 YXE  as a function of \nthe parameter \u2126. One Monte Carlo run \nconsisted of 10,000 samples of the ratio \n)\/( YX +\u2126\u2126  at a particular value of \u2126 , \nfrom which  ( ) 2\/12 ])\/([ \u2212+\u2126\u2126 YXE  is \ncalculated. The circles are medians of 1000 \nsuch runs at the same value of \u2126. Medians \nwere used to discount extreme values of the \nratio )\/( YX +\u2126\u2126 . The number of \nsamples is sufficient that repeated runs \nproduce almost no change in the plotted \nestimates. The curve shows the \napproximation given by Equation (14). \n \n \n \nSubstituting Equation (14) into Equation (13), and expanding the abbreviation \u2126  gives  \n2.1\n3.0\n2.3)()(\narctan\n15.0)()( \uf8f7\uf8f7\n\uf8f8\n\uf8f6\n\uf8ec\uf8ec\n\uf8ed\n\uf8eb\n\uf8f7\n\uf8f8\n\uf8f6\n\uf8ec\n\uf8ed\n\uf8eb \u2212\n+\u2248\nfZfLfLfL CC pi  (15) \nWe can, as before, define an optimality measure in terms of )( f\u03a3  and )( fC\u039b  as \n2.1\n0\n3.0\n2.3)()()\/(\narctan\n15.0)()()( \uf8f7\uf8f7\n\uf8f8\n\uf8f6\n\uf8ec\uf8ec\n\uf8ed\n\uf8eb\n\uf8f7\n\uf8f8\n\uf8f6\n\uf8ec\n\uf8ed\n\uf8eb \u2212\u039b\n+\u039b\u03a3= fZfnAfffOpt CC pi  (16) \nUnlike Canny\u2019s criterion, this still involves the edge-to-noise ratio 0\/ nA  and the functional \n)( fZ . A set of optimal detectors for different 0\/ nA  ratios is shown in Figure 2. Note that \nthese are unconstrained optima; it is no longer necessary to impose a constraint on filter \nsmoothness )( fZ . These are very similar to detectors derived by Canny for different \nconstraints on )( fZ . \n \nThe choice of optimal detector depends on the ratio 0\/ nA , but we do not know what this is in \nadvance. We can derive a compromise filter, which works reasonably well at all ratios, and \nCanny\u2019s choice was a filter rather similar to the one for 0\/ nA =1.33 in Figure 2. However, we \nwill not commit to a choice here, as there is a more serious problem with Canny\u2019s edge \ndetector. \n \n7 \n \nFigure 2. Optimal edge detectors for different edge to noise ratios 0\/ nA . The topmost filter is the best for very \nlow noise; the influence of the functional Z(f) here is minor. It is not a matched filter but is smoothed at either \nend because of the need to minimize the derivative at the boundary. The filters for high noise levels (bottom \nfilter) begin to look like the low noise filters again, because performance at low noise levels is not much \ndependent on Z(f) either. \n \n3.2. The Optimal Edge Detector is Infinitely Wide. \nThe width of the edge detection filter has so far been set at some arbitrary value r. It would be \nuseful to have an optimality argument for choosing the best filter width;  indeed, without it, it \nis hard to claim that the filter at any particular width r is optimal. Canny (1986) argued that \nthe signal-to-noise ratio )( f\u03a3  increases with filter width while the localization )( fC\u039b  \ndecreases so that the product )()( ff C\u039b\u03a3  is constant. Thus all widths are equally good, and \nsome other consideration must be used to select the appropriate width. However, the \nreduction in filter localization as width increases is a consequence of Canny\u2019s constraint on \n8 \nthe filter smoothness )( fZ . He forced wider filters to be smoother than narrow filters, and \nthis made localization poorer in the wider filters. When this constraint on filter smoothness is \nremoved \u2013 as it can be thanks to the new formulation for localization given by Equation (15) \n\u2013 we find that wide optimal filters are as good as narrow ones for localization. \n \nConsider the filter in Figure 3(a). This can be widened to improve the signal to noise ratio \nwhile keeping localization constant. One way of doing this is by first locating nonzero peaks \nor plateaus in the filter (shown by circles in Figure 3(a)) and then stretching them out (Figure \n3(b)). Such peaks must always exist because the filter is odd, and is zero at the endpoints and \nthe centre. The localization )( fLC of the stretched filter is unchanged because the added \npoints all have a derivative )(xf \u2032  of zero, so they do not change the integrals in )( fLC . \nEqually, the introduction of points where )(xf \u2032  =0 does not change the numerator of )( fZ  \nin Equation (9). The second derivative )(xf \u2032\u2032  is unchanged except at the endpoints of the \nstretch (where it actually decreases), so the denominator of )( fZ  is likewise unaffected. \nHence the localization )( fL  of the filter is unchanged because )( fLC  and )( fZ  are \nunchanged.  \n \n)( fSNR is improved by this stretching process, intuitively because the stretched filter looks \nmore like a step edge. Consider the stretched filter in Figure 3(b). For simplicity, let n0 = 1 \nand g(x)=1 or -1. Let the maximum value of the filter itself be fmax, and let y be the total \nlength of the plateau after stretching. The SNR for the stretched filter is  \n2\nmax\n2\nmax\n0\n)(\n)(\n)(\n2\n1\nyfdxxf\nyfdxxf\nfSNR\nr\nr\nr\n+\n+\n=\n\u222b\n\u222b\n+\n\u2212\n+\n (17) \nIf stretching the filter increases the SNR, then the derivative of 2)( fSNR  with respect to y \nshould be positive at y=0. The derivative is \n2\n2max2max\n0\n2\n)(\n)(\n)(\n)(\n2)(\n4\n1\n\uf8f7\n\uf8f7\n\uf8f8\n\uf8f6\n\uf8ec\n\uf8ec\n\uf8ed\n\uf8eb\n\u2212=\n\u2202\n\u2202\n\u222b\n\u222b\n\u222b\n\u222b\n=\ndxxf\ndxxf\nf\ndxxf\ndxxf\nf\ny\nfSNR\ny\n (18) \nand it will be positive when \n\u222b\n\u222b\n>\ndxxf\ndxxf\nf\n2max )(\n)(\n2\n  (19) \nThe fraction on the right hand side attains a maximum when )(xf  is a constant, say \u03b1, and it \nthen has the value 1\/\u03b1. However, if \u03b1=)(xf  then \u03b1=maxf , so the maximum value of the \nright hand side of the inequality is 1. We conclude that the derivative of SNR with respect to y \nis positive, and stretching the filter improves SNR. \n \n \n9 \n \n \nFigure 3. This shows how a filter can be altered \nto improve SNR while keeping localization LC \nand smoothness, Z, constant. The upper filter is \nthe original (narrow) filter. The peaks in the \nfilter are identified by circles. These peaks are \nstretched out to form plateaus in (b). These \nplateaus do not affect localization and they \nincrease signal-to-noise. \n \n \nSince the stretched filter has increased )( fSNR and unchanged )( fL , it has increased \n)( fOpt , from which it follows that the optimum filter must be infinitely wide2. This \nundesirable outcome is a consequence of the simplified edge model used so far. Canny\u2019s edge \ndetection filter is optimized to detect an isolated edge in white noise, and under those \nconditions, the optimum filter is indeed infinitely wide, because there are no other edges that \nmight interfere with detection. In real images, though, an infinitely wide filter will integrate \nover infinitely many edges, and will obviously be useless at detecting any one edge in \nparticular. The only principled way to solve this infinite-width problem is to change the edge \nmodel to account for neighbouring edges. We do this in the next section. \n \n4 Optimal Edge Detection in The Presence of Other Edges. \nIn real applications we are interested in detecting one edge in the presence of many other \nedges. A wide edge detector will have better signal-to-noise ratio for a single edge, but will \nbe more likely to overlap other edges than a narrow detector. If a filter overlaps other edges, \nthey will interfere unpredictably with the detection of the edge we are interested in. In this \nrespect the other edges behave like noise, and they can be modelled as a stochastic process.  \nImages typically have a 2\/1 \u03c9  power spectrum, where \u03c9  is the spatial frequency (Burton and \nMoorhead, 1987, Field 1987) which make them similar to Brown noise, albeit with a more \ninteresting phase spectrum (Tadmor and Tolhurst, 1993). Given that the phase spectrum is \nunlikely to affect how the other edges interfere with detection of the edge we\u2019re interested in, \n                                                 \n2\n This is different from the infinite filters of Deriche (1987)  or Sarkar and Boyer (1991),which have a finite \nsecond moment.  \n10 \nit is sufficient for our purposes to model the other edges as simple Brown noise. This Brown \nnoise will be what limits the width of the edge detector.  \n4.1 The Optimal Detector in Brown Noise. \nSuppose the Brown noise in the image has a power spectrum 22 \/\u03c9C . This is added to the \nwhite noise, with power spectrum 20n , to give a total noise power spectrum of 2022 \/ nC +\u03c9 . \nWith brown noise, the expressions for SNR, LC and Z are easier to handle in the Fourier \ndomain. Corresponding to Equations (2), (6), and (9), these are: \n \n\u222b\u222b\n\u222b\u222b\n\u222b\u222b\n++=\n+=\n+=\n\u03c9\u03c9\u03c9\u03c9\u03c9\u03c9\u03c9\u03c9\n\u03c9\u03c9\u03c9\u03c9\u03c9\u03c9\u03c9\n\u03c9\u03c9\u03c9\u03c9\u03c9\u03c9\ndnCFdnCFFZ\ndnCFdsFGFL\ndnCFdFGFSNR\nC\n)\/(|)(|)\/(|)(|)(\n)\/(|)(|)()()(\n)\/(|)(|)()()(\n2\n0\n22242\n0\n2222\n2\n0\n22222\n2\n0\n222\n (20) \n \nHere, )(\u03c9F  is the Fourier transform of the filter )(xf , and \u03c9\u03c9 \/)( iAG \u2212=  is the Fourier \ntransform of  the step edge )(xg  with amplitude A. These expressions follow from Parseval\u2019s \ntheorem and the derivative theorem (Bracewell, 1986).  \n \nLet )(\u03c9W  be the filter with Fourier transform \n)()(\n22\n0\n2\n\u03c9\u03c9\n\u03c9\n\u03c9\n\u03c9 Bi\nnC\niW =\n+\n=\n  (21) \nwhich is the derivative operator \u03c9i multiplied by a 1st-order Butterworth filter \n2\/122\n0\n2 )()( \u2212+= \u03c9\u03c9 nCB . This filter whitens the noise, because  1)\/(|)(| 20222 =+ nCW \u03c9\u03c9 . \nThe edge detector )(\u03c9F  can be factored into a product of the whitening filter )(\u03c9W  and a \npost-whitening detector )(\u03c9K , \n )()()( \u03c9\u03c9\u03c9 KWF = .   (22) \nwhere )(\u03c9K  is the Fourier transform of some filter )(xk . Since 0)0( =W , this factorization \nrequires that 0)0( =F , which is satisfied since )(xf  is an odd filter. By substituting the \nproduct )()( \u03c9\u03c9 KW  for )(\u03c9F , we can rewrite Equations (20) very simply in terms of the \npost-whitening detector )(\u03c9K  as  \n\u222b\u222b\n\u222b\u222b\n\u222b\u222b\n=\n=\n=\n\u03c9\u03c9\u03c9\u03c9\u03c9\u03c9\n\u03c9\u03c9\u03c9\u03c9\u03c9\u03c9\u03c9\n\u03c9\u03c9\u03c9\u03c9\u03c9\ndKdKKZ\ndKdKGKL\ndKdKGKSNR\nWC\nW\n2422\n222\n2\n|)(||)(|)(\n|)(|)()()(\n|)(|)()()(\n  (23) \nwhere 220\n2\/)()()( \u03c9\u03c9\u03c9\u03c9 nCAGWGW +== is the Fourier transform of a whitened step \nedge, )(xgW . The optimality criterion for the post-whitening detector )(\u03c9K  is thus  \n11 \n2.1\n3.0\n2.3)()(\narctan\n15.0)()(),( \uf8f7\uf8f7\n\uf8f8\n\uf8f6\n\uf8ec\uf8ec\n\uf8ed\n\uf8eb\n\uf8f7\n\uf8f8\n\uf8f6\n\uf8ec\n\uf8ed\n\uf8eb \u2212\u039b\n+\u039b\u03a3= KZKAKKAKOpt CC pi\n (24) \nwhere as before  )()( KAKSNR \u03a3=  and )()( KAKL CC \u039b= . Here we explicitly note the \nfunctional dependence of the optimality criterion on the edge amplitude A by writing it as \n),( AKOpt . Note that after whitening the noise amplitude is 1, so it can be dropped from \nEquation (24). However, the noise amplitude implicitly affects the shape and height of \n)(\u03c9WG , and thus of )(K\u03a3  and )(KC\u039b . \n \nThe optimal detection filter )(\u03c9K  maximizes ),( AKOpt . In addition, we have to require the \nspatial version of the filter )(xk  to be non-negative. This is because the whitened edge \n)(xgW  is entirely positive or entirely negative depending on the sign of the edge amplitude \nA3. If )(xk  has negative lobes, it would be impossible to determine whether a positive peak in \nthe filter output was due to the overlap between a positive edge )(xgW and the positive centre \nof )(xk , or to a negative edge  )(xgW\u2212 which lines up with a negative part of )(xk . This \nconstraint is necessary because without it the optimal detector )(xk does have wide negative \nregions at some values of edge amplitude A. \n \nWhen the edge amplitude A is large, ),( AKOpt  simplifies to )()( KK C\u039b\u03a3 , and is maximized \nby the matched filter )()( \u03c9\u03c9 WGK =  (Canny, 1986). In this case, the edge detector )(\u03c9F  is  \n22\n0\n2)()()( \u03c9\n\u03c9\n\u03c9\u03c9\u03c9\nnC\niGWF W\n+\n==   (21) \nwhich, up to a multiplicative constant, corresponds to the spatial filter \n|)|)\/(exp()()( 0 xnCxsignxf \u2212=   (22) \nThe width of the filter varies according to the ratio of white noise to brown noise. In the \nextreme case of C=0, the filter is an infinitely wide step edge, which is consistent with the \ninfinitely wide filter found  in section 3.2. The other extreme, as n0 tends to zero, yields a \nderivative operator. \n \nThe filter in equation (22) is identical to one previously suggested by Shen and Castan \n(1992). It is the derivative of an infinite symmetric exponential filter (ISEF), so we will refer \nto it as a DISEF filter. Shen and Castan (1992) derived the DISEF filter using an isolated \nedge model, like Canny, but used different, albeit related, optimality criteria. They also \nconsidered the problem of multiple edges, but they modelled the edges in an image by a \nrandom telegraph-signal (RTS), which switches randomly between two values. Under the \nRTS model, Shen and Castan derived the scale factor in the exponential of equation (22) as \n2\n0\n22 \/4 nC+\u03bb , where \u03bb is the switching density, rather than 0\/ nC . Shen (1995) further \nconsiders a sum-of-RTS\u2019s edge model, more similar to the Brown noise model used here, but \n                                                 \n3\n The whitened edge )(xgW  is, to within a multiplicative constant, |)(|0 xAK , where )(xK n  is the \nmodified Bessel function of the second kind of order n. If A is positive, 0)( >xgW  for all x. \n12 \nthis yields a complicated edge detection scheme. Despite these differences of detail, there is a \nremarkable convergence of results between the Canny approach used here and Shen and \nCastan\u2019s edge detector. \n4.2 A Compromise Edge Detector. \nThe DISEF filter of Equation (22) is only optimal for large edge amplitudes A. When A is \nsmaller, the optimal post-whitening detector )(\u03c9K  is not matched to the whitened edge. \nFigure 4 shows some examples of optimal post-whitening detectors in the spatial domain, \n)(xk , and their corresponding edge detectors )(xf , for different values of A. These result \nfrom numerical optimization of the spatial domain version of equation (24). The dependence \nof the detectors on the unknown amplitude A means it is impossible to find an edge detector \nwhich is universally optimal. We can nonetheless propose a compromise filter, which works \nreasonably well at all amplitudes A. A common characteristic of the detectors in Figure 4 is \nthat they are all wider than the matched filter obtained when \u221e=A . A good compromise \nedge detector might therefore be obtained by simply widening, or blurring, the matched filter \nslightly.  \n \n \n \n \nFigure 4: (a) Plot of some optimal post-whitening detectors )(xk , for various values of edge amplitude A, \ngiven C=1 and n0=0.8. The thick lined profile is the matched detector. The wider detectors are for intermediate \nvalues of A. The plots are 30 pixels wide. (b) Plot of corresponding edge detectors )(xf , which are whitened \nversions of the detectors )(xk . The thick-lined edge detector is the DISEF filter (Equation 22) which \ncorresponds to the matched post-whitening detector in (a). \n \nWe need to define what we mean by a good compromise. Let AK  be the detector which \nmaximizes ),( AKOpt  at some edge amplitude A. The matched detector (Equation 22) is \n\u221e\nK . \nWe wish to find a compromise detector K\n)\n which is good in a minimax sense compared to all \nthe optimal detectors AK . That is, we wish to find a detector K\n)\n which minimizes the \nmaximum loss \n{ }),(\/),(sup AKOptAKOpt A\nA\n)\n  (23) \n13 \nIn addition, we want to limit the loss for the compromise detector at high edge contrasts, \nnamely ),(\/),( \u221e\u221e\n\u221e\nKOptKOpt\n)\n, to a \u201creasonable\u201d value, so that the compromise detector \ndoes not throw away too much performance when the edge has high contrast.  Finally, we \nwould like the compromise filter to be mathematically simple. We restrict ourselves to filters \nK\n)\n produced by convolving the matched filter \n\u221e\nK  with a simple nonnegative smoothing \nfunction; a gaussian smoother was found to produce good results. Thus our compromise \ndetector is given by \n22\n0\n22\n2\n\/))(exp(\n))(exp()(),(\n\u03c9\u03c9\u03c3\n\u03c9\u03c3\u03c9\u03c3\u03c9\nnC\nKK\n+\u2212=\n\u2212=\n\u221e\n)\n (24) \nwhere \u03c3 is the smoothing parameter. The choice of compromise filter thus boils down to the \nchoice of \u03c3. \n \nFigure 5 compares the performance of a compromise filter to the optimal filter performance. \nHere, the noise parameters are set to C=1 and 0n =0.05 (for the top set of curves) or 0n =0.8 \n(for the lower set of curves). The crosses show the performance of the matched filter, given \nby ),( AKOpt\n\u221e\n, for various values of A. The thick solid lines show ),( AKOpt A . Each point \nin this curve gives the performance of a different optimal filter AK . The thin line shows the \nperformance of a compromise filter ),( AKOpt ) . This filter is given by smoothing the matched \nfilter for that 0\/ nC  ratio by a small 3-point gaussian equal to [ 0.2221    0.5557    0.2221 ] \u2245  \n[2\/9, 5\/9, 2\/9] . The optimal detector is no more than 85% better than this compromise detector, \nand the matched filter is no more than 40% better than it, while the compromise filter often \ngreatly exceeds the matched filter\u2019s performance. \n \n \n \n \n \nFigure 5. Performance of edge detectors at \ndifferent noise levels. The brown noise was set to \nC=1. White noise density 0n was either 0.05 (top \ncurves) or 0.8 (bottom curves). In each group of \ncurves, the thick solid line shows the \nperformance of the optimal detectors at different \nvalues of the ratio A. The crosses show the \nperformance of the matched post-whitening filter \n\u221e\nK . The matched filter suffers a substantial loss \nof performance for some values of A. The thin \nline shows the performance of the best \ncompromise filter, which is the matched filter \nconvolved with a three-point gaussian. \n \n  \n14 \nTo summarize, the best compromise edge detection algorithm in one dimension is as follows: \n \nAlgorithm 1: \n1) Estimate C and 0n from the image, or use sensible presets. \n2) Convolve the image with a 3 point gaussian [2\/9, 5\/9, 2\/9]  \n3) Convolve the resultant blurred image with the DISEF filter \n|)|)\/(exp()()( 0 xnCxsignxf \u2212= .  \n4) Positive-valued peaks or negative-valued troughs in the output of this filter represent \nedges, if they are strong enough. \n \nThis edge detection scheme can be easily extended to two dimensions (although the \noptimality properties of this extension are unknown). To develop the 2D scheme, we can \nwrite the optimal 1D edge detector as a series of filters \n)}()}{()({\n)()()(\n3 \u03c9\u03c9\u03c9\u03c9\n\u03c9\u03c9\u03c9\nBiGB\nWKF\n=\n=\n \nwhere in the second line we have factored the whitening filter )(\u03c9W  into the derivative \u03c9i\nand a Butterworth smoothing filter )(\u03c9B , and the optimal post-whitening filter )(\u03c9K  is \nfactored into the product of a Butterworth filter (which is matched to the whitened edge) and \nthe three point gaussian )(3 \u03c9G . We can rearrange this to give \n)()()( 32 \u03c9\u03c9\u03c9\u03c9 GBiF =  \nwhere 2)(\u03c9B  is the ISEF filter. To extend the algorithm to two dimensions, we replace \n2)(\u03c9B  and )(3 \u03c9G  with their two-dimensional counterparts, and replace the derivative with \nthe directional derivative. This yields the following algorithm: \n \nAlgorithm 2: \n1) Estimate C and 0n from the image, or use sensible presets. \n2) Convolve the image rows, then the columns, with a 3 point gaussian  \n[2\/9, 5\/9, 2\/9]  \n3) Convolve the resultant blurred image with the circularly symmetric ISEF filter \n))\/(exp( 220 yxnC +\u2212 .  \n4) Compute the directional derivatives in all directions. These can easily be computed \nfrom the direction derivatives along the rows and columns. \n5) Peaks in the output of this filter across space and derivative direction represent edges, \nif they are strong enough. It is usually necessary to use a hysteresis algorithm (Canny, \n1986) to sort these peaks into coherent edges. \n \nThe performance of this algorithm is shown in Figure 7, middle panel. One can see that in the \nabsence of significant noise, it appears to perform well. However, shadow edges are poorly \nrepresented.  \n15 \n5. Detecting Blurred Edges. \nMany edges are not step edges. Generally, softer or blurred edges are caused by defocus, self-\nshadowing of a curved surface, or by shadow penumbrae (see e.g. Elder and Zucker 1998, \nElder 1999). These various kinds of blurred edge can be modelled as a step edge blurred with \na gaussian function,  \n),(*)(),( \u03c3\u03c3 xgaussxgxg =   (25) \nwhere 222 2\/))2\/(exp(),( pi\u03c3\u03c3\u03c3 xxgauss \u2212=  is a unit gaussian distribution with width \u03c3.  \nA step edge is the limiting case of zero blur, i.e. g(x,0).  \n5.1 The Optimal Detector for Blurred Edges \nIntroducing blurred edges changes the expressions for )(KSNR  and )(KLC  in Equation (23) \nto the following: \n\u222b\u222b\n\u222b\u222b\n=\n=\n\u03c9\u03c9\u03c9\u03c9\u03c9\u03c3\u03c9\u03c9\u03c9\n\u03c9\u03c9\u03c9\u03c9\u03c3\u03c9\u03c9\ndKdKGaussGKL\ndKdKGaussGKSNR\nWC\nW\n222\n2\n|)(|)()},()({)(\n|)(|)()},()({)(\n (26) \nHere ),( \u03c3\u03c9Gauss  is the Fourier transform of ),( \u03c3xgauss  in Equation (25), and  \n)},()({ \u03c3\u03c9\u03c9 GaussGW  is the Fourier transform of the whitened gaussian edge. The product of \n)(KSNR  and )(KLC  is, as before, maximized by the matched filter \n),()(),( \u03c3\u03c9\u03c9\u03c3\u03c9 GaussGK W= . Hence the optimal edge detector for a gaussian edge of width \n\u03c3, ),( \u03c3\u03c9F ,  is given by \n),()()(),( 22\n0\n2 \u03c3\u03c9\u03c9\n\u03c9\n\u03c9\u03c9\u03c3\u03c9 Gauss\nnC\niGWF W\n+\n==   (27) \nwhich is just a blurred DISEF filter. The optimal spatial filter is then \n),(*|)|)\/(exp()(),( 0 \u03c3\u03c3 xgaussxnCxsignxf \u2212=   (28) \nwhere * denotes convolution. \n \nEach edge detector ),( \u03c3xf  is optimized for a particular edge blur, but will respond to edges \nwith other blurs as well. How can we select the appropriate blur detector for the edge, given \nthat we don\u2019t know in advance what the blur is? When we restrict ourselves to  matched \ndetectors, this problem is easily solved. Let ),( \u03c3xk be the spatial version of ),( \u03c3\u03c9K above, \nand let ),( \u03c3xh  be the detector output obtained by convolving ),( \u03c3xk  with the whitened \nsignal. The detector output ),( \u03c3xh  forms a scale space representation of the input signal \n(Witkin, 1983). If we normalize the detector ),( \u03c3xk  so that 1),( 2\u222b =dxxk \u03c3 , then its \nexpected response at any point is identical to the signal to noise ratio, )(kSNR . Hence a peak \nin the scale space ),( \u03c3xh is a local maximum of )(kSNR . This will also be a local maximum \nof )(kLC , since SNR and LC are maximized by the same matched filter (Canny, 1986).  The \npeak in the scale space ),( \u03c3xh  is therefore a local maximum of the product )()( kLkSNR C  \nand identifies the locally optimal detector.  \n16 \n \nFigure 6. The top image shows an example of a signal with three gaussian edges, with widths of 1, 3 and 8 from \nleft to right. One thousand such images were generated, with different noise samples, and the blurred-edge \ndetection algorithm run on them. Each image was then convolved with a DISEF filter and gaussian blurs of \ndifferent sizes to yield a scale space map h(x,\u03c3). Strong peaks in the scale space indicate edges. The bottom \nimage shows all the edges found in 1000 runs of the algorithm, given C=0.5 and n0=0.2. Most of the time, the \nedge is located within a few pixels of its true location, but identification of the blur is less accurate. In particular, \nthere is a tendency to detect the edge at a finer scale than it really is. If we look at the example image, however, \nwe can see that sometimes the added noise does make the edge (particularly the far right one) appear sharper \nthan it is. Incidentally, in equivalent conditions human observers also seem to have this problem (May & \nGeorgeson, 2007).  \n \nThe performance of this model in visualized in Figure 6. The top panel shows an example \nnoisy edge.  The bottom panel shows all the local maxima (after thresholding to remove \nnoise) accumulated over 1000 runs of the optimal scale-space edge detector described above, \neach with a different noise sample but the same set of edges. The position of the edges is \nfairly well estimated, but the blur less so.  \n \nThe matched scale-space detector described above takes on an interesting form when the \nwhite noise n0 is zero. In this case, the whitening operator is a simple derivative, and the \nwhitened edge )(xgW  is an impulse function. The matched post-whitening detector is \n),(*)(),( \u03c3\u03c3 xgaussxgxk W= , which is simply ),( \u03c3xgauss . The norm of this is \n\u222b = )2\/(1),( 2 \u03c3pi\u03c3 dxxgauss , hence ),(2),( 2\/14\/1 \u03c3\u03c3pi\u03c3 xgaussxk =  is a normalized post-\nwhitening filter. Since whitening is simply a derivative operation, this means that the blurred \nedge detector is, to within a constant scaling, just \n),(),( 2\/1 \u03c3\u03c3\u03c3 xgauss\ndx\nd\nxf =   (30) \n17 \nThis is identical to Lindeberg\u2019s (1998) edge detection scheme (also suggested for human \nedge perception by Georgeson et al. 2007), so these proposals can both be understood as \noptimal blurred edge detectors for minimal amounts of white noise.  \n5.2 Two Dimensions \nAs with step edges, the blurred edge detector can be extended to a 2D algorithm, in a similar \nway. The optimal one-dimensional detector ),( \u03c3\u03c9F for an edge of blur \u03c3 is given by \n2)(),(\n)}()}{(),({\n)(),(),(\n\u03c9\u03c3\u03c9\u03c9\n\u03c9\u03c9\u03c9\u03c3\u03c9\u03bb\n\u03c9\u03c3\u03c9\u03c3\u03c9\nBGaussi\nBiBGauss\nWKF\n=\n=\n=\n \nwhere ( ) 2\/12|),(| \u2212\u222b= \u03c9\u03c3\u03c9\u03bb dK is the normalization factor for the filter. For simplicity, the \nthree-point gaussian used to make a compromise filter has been left out here. To extend this \nto two dimensions, we simply replace 2)(\u03c9B  and ),( \u03c3\u03c9Gauss  with their two-dimensional \ncounterparts, and replace the derivative with the directional derivative. The appropriate \nnormalization factor is trickier. At first sight it would seem  reasonable to use ( ) 2\/121221 |),,(| \u2212\u222b= \u03c9\u03c9\u03c3\u03c9\u03c9\u03bb ddK , where  1\u03c9  and  2\u03c9  are the row and column frequencies. \nHowever, this does not work well at all. The normalization is only appropriate along the \ndirection of the derivative, since that is the only direction in which the post-whitening \ndetector K  can be expected to  match the edge. Because of this, the appropriate normalization \nis one dimensional, \n2\/1\n2\n2\n1212 ),,(\n\u2212\n\uf8f7\n\uf8f8\n\uf8f6\n\uf8ec\n\uf8ed\n\uf8eb\n= \u222b \u222b \u03c9\u03c9\u03c3\u03c9\u03c9\u03bb ddKD  \nThat is, we integrate along one dimension parallel to the edge, then square and integrate \nalong the other dimension perpendicular to the edge4. This leads to Algorithm 3, for 2D \nblurred edge detection. \n \nAlgorithm 3: \n1) Estimate C and 0n from the image, or use sensible presets. \n2) Convolve the image with the circularly symmetric ISEF filter ))\/(exp( 220 yxnC +\u2212\n.  \n3) For each scale \u03c3, \na. convolve the image with a two-dimensional gaussian ),,( \u03c3yxgauss . The \nconvolution is then scaled by the normalization factor \u03bb given above. \nb. Compute the directional derivatives in all directions \u03b8. These can easily be \ncomputed from the direction derivatives along the rows and columns. \n                                                 \n4\n I\u2019m not 100% sure this is the correct normalization, as it would depend on the model for the image in the \nvicinity of an edge.  \n18 \n4) Local peaks in the output of this filter across space (x,y), derivative direction \u03b8, and \nscale \u03c3, represent edges, if they are strong enough. It is necessary to use a hysteresis \nalgorithm (Canny, 1986) to sort these peaks into coherent edges. \n \nThe performance of this algorithm on a relatively noise free image is shown in Figure 7, right \nhand panel. Compared to the middle panel (Algorithm 2), which only detects step edges, we \ncan see that Algorithm 3 correctly picks up the shadow edges. However, its performance in \nsome other parts of the image is not as clean as the step edge algorithm. \n \nOne useful feature of this edge detection model is its ability to cope with noise when the \nparameters of the whitening filter, C and 0n , are estimated from the image. This is shown in \nFigure 8. As the white noise increases, the smoothing provided by the Butterworth filter also \nincreases. \n \n \n \n \n \n \n \n \n \n \n19 \nFig\nu\nre\n 7\n:\n Th\ne\n optim\nal\n 2D\n edg\ne\n d\netecto\nr\n in\n actio\nn\n.\n Th\ne\n g\nrey\n scale\n im\nag\ne\n o\nn\n th\ne\n left\n is\n an\naly\nzed\n by\n th\ne\n 2D\n step\n edg\ne\n d\netecto\nr\n (A\nlg\no\nrith\nm\n 2)\n in\n \nth\ne\n m\niddle\n p\nan\nel\n.\n This\n alg\no\nrith\nm\n is\n g\no\nod\n at\n d\netecting\n m\nany\n edg\nes\n,\n b\nut\n fails\n w\nh\nen\n giv\nen\n a\n blu\nrred\n edg\ne\n,\n su\nch\n as\n th\ne\n sh\nad\no\nw\ns\n.\n Th\ne\n right\n h\nand\n \np\nan\nel\n sh\no\nw\ns\n th\ne\n edg\nes\n fo\nu\nnd\n by\n A\nlg\no\nrith\nm\n 3\n.\n Th\ne\n edg\ne\n scale\n is\n colo\nu\nr\n cod\ned\n red\n,\n g\nreen\n,\n cy\nan\n,\n p\nu\nrple\n fro\nm\n fin\nest\n to\n co\narsest\n scales\n.\n This\n \nalg\no\nrith\nm\n co\nrrectly\n id\nentifies\n th\ne\n sh\nad\no\nw\n edg\nes\n as\n w\nell\n as\n so\nm\ne\n blu\nrred\n g\nro\no\nv\nes\n.\n In\n b\noth\n p\nan\nels\n,\n th\ne\n im\nag\ne\n n\noise\n p\naram\neters\n C\n and\n \n0nw\nere\n \nestim\nated\n fro\nm\n th\ne\n im\nag\ne\n.\n \n \n \n \n \n \n \n \n \n \n20 \n \nFigure 8. The grey scale image in Figure 7, with added noise. The result of running Algorithm 3 on it is shown \non the right panel. Visually, the noise has eliminated much of the detail in the image, but most of what remains \nis detected by the algorithm, and most of the noise can be rejected. \n6. Conclusion. \nCanny\u2019s (1986) paper was a significant contribution to the methodology of edge detection. \nPrior to it, the actual performance criteria for edge detectors were rarely stated explicitly. \nAfter it, it is more or less impossible to propose an edge detector without reference to the \nCanny criteria. After such a major methodological advance, the issue of what an optimal edge \ndetector actually looks like is perhaps less vital, although since we must use them, it is \nimportant to get it right. When we do so, we find that the optimal step edge detector is not \nsimilar to a derivative of a gaussian filter, but is instead the derivative of an exponential filter \n(DISEF) proposed by Shen and Castan (1992). In addition, once we have solved the optimal \ndetector for step edges, it is relatively easy to extend to the task of detecting edges of \ndifferent blurs. One remaining problem with the optimal detector proposed here is \nlocalization: the very complex localization criterion means that no one filter can be optimal at \nall edge contrasts.  \n \nThe ISEF filter is optimal when the noise has a power spectrum of the form 202 nC + . \nHowever, this sometimes is not the true form of the noise. For example, if the imaging device \nhas poor optical quality (such as a cheap webcam, a CCTV camera, or the human eye), the \noptical blur will change the slope of the Brown noise. In this case, the whitening filter will \nchange, and one must replace the ISEF filter with something else; namely, a filter with power \nspectrum 2|)(|)( \u03c9\u03c9 WK = , where the whitening filter )(\u03c9W  changes with the image \nstatistics. Thus the algorithms in this paper can be altered to adapt to image statistics. A \nprocedure like this is potentially behind adaptation effects in human vision (e.g. Wainwright, \n1999, Webster & Georgeson, 2002). \n \n21 \nFinally, the optimality of the edge detectors here was only shown for the 1D case. While the \n2D algorithms perform well, it is still an open problem what criteria should be used to \ndevelop optimal 2D detectors.  \n  \n22 \n \nReferences. \nBracewell, R.N. (1986) The Fourier Transform and Its Applications, McGraw-Hill, New York. \nBurton GJ, Moorhead IR (1987) Color and spatial structure in natural scenes. Applied Optics, 26 157-170 \nCanny, J (1986) A Computational Approach to Edge Detection, IEEE Trans. Patt. Anal. Image Proc. 8(6) 679-\n698. \nDeriche, R. (1987) Using Canny\u00b4s Criteria to Derive a Recursively Implemented Optimal Edge Detector, \nInternational Journal of Comp. Vision, 1(2), 167-187 \nElder, J & Zucker, S. (1998) Local Scale Control for Edge Detection and Blur Estimation, IEEE Trans. Patt. \nAnal. Machine Intell. 20(7) 699-716 \nElder, J (1999) Are Edges Incomplete?, International Journal of Comp. Vision, 34, 97-122. \nField, D (1987) Relations between the statistics of natural images and the repsonse properties of cortical cells, J. \nOpt. Soc. Am. A 4 2379-2394 \nGeorgeson, M. A., May, K. A., Freeman, T. C. A., & Hesse, G. S. (2007). From filters to features: Scale\u2013space \nanalysis of edge and blur coding in human vision. Journal of Vision, 7(13):7, 1\u201321, \nhttp:\/\/journalofvision.org\/7\/13\/7, doi:10.1167\/7.13.7. \nHinkley D.V (1969). On the Ratio of Two Correlated Normal Random Variables. Biometrika, 56, 635\u2013639. \nKoplowitz, J & Greco, V (1994) On the Edge Location Error for Local maximum and Zero-Crossing Edge \nDetectors, IEEE Trans. Patt. Anal. Image Proc. 16(12) 1207-1212. \nLindeberg, T (1998) Edge Detection and Ridge Detection with Automatic Scale Selection, International Journal \nof Comp. Vision, 30(2), 117--154. \nMarsaglia G (1965) Ratios of Normal Variables and Ratios of Sums of Uniform Variables. Journal of the \nAmerican Statistical Association, 60, 193\u2013204. \nMarsaglia, G (2006) Ratios of Normal Variables, Journal of Statistical Software, 16(4) 1-10. \nMay, K. and Georgeson, M (2007) Blurred edges look faint, and faint edges look sharp, Vision Research 47 \n1705\u20131720 \nPeli, T. & Malah, D. (1982) A Study of Edge Detection Algorithms, Computer Graphics and Image Processing, \n20, 1-21. \nPetrou, M. & Kittler, J. (1991) Optimal Edge Detectors for Ramp Edges, IEEE Transactions on Pattern Analysis \nand Machine Intelligence, 13, 483-491  \nSarkar, S. & Boyer, K.L. (1991) On Optimal Infinite Impulse Response Edge Detection Filters, IEEE Trans. \nPattern Analysis Machine Intelligence, 13, 1154-1171 \nShen, J & Castan, S. (1992) An optimal linear operator for step edge detection, CVGIP: Graphical Models and \nImage Processing, 54,  112-133 \nShen J (1995) Multi-Edge Detection by Isotropical 2-D ISEF Cascade, Pattern Recognition, 28, 1871-1885. \nTadmor, Y & Tolhurst, DJ (1993), Both the phase and the amplitude spectrum may determine the appearance of \nnatural images, Vision Research, 33(1):141-145 \nTagare, H & deFigueiredo, R (1990) On the Localization Performance Measure and Edge Detection, IEEE \nTrans. Patt. Anal. Image Proc. 12(12) 1186-1190. \nWainwright, M. J. (1999) Visual adaptation as optimal information transmission, Vision Research. 39, 3960\u2013\n3974 \nWebster, M.A. Georgeson, M. & Webster, S.M. (2002) Neural adjustments to image blur, Nature Neuroscience, \n5(9) 839-840 \nWitkin, A. P. (1983) Scale\u2013space filtering, Proceedings of the 8th International Joint Conference on Artificial \nIntelligence, 1019\u20131022. \nZiou, D. & Tabbone, S. (1998) Edge Detection Techniques - An Overview, International Journal of Pattern \nRecognition and Image Analysis, 8, 537-559. \n"}