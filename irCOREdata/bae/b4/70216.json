{"doi":"10.1109\/LCN.2007.137","coreId":"70216","oai":"oai:eprints.lancs.ac.uk:12935","identifiers":["oai:eprints.lancs.ac.uk:12935","10.1109\/LCN.2007.137"],"title":"Reliability Control for Aggregation in Wireless Sensor Networks","authors":["Benson, Jonathan","Roedig, Utz","O'Donovan, Tony","Sreenan, Cormac"],"enrichments":{"references":[{"id":16312743,"title":"An Overview of Data Aggregation Architecture for Real-Time Tracking with Sensor Networks.","authors":[],"date":"2006","doi":"10.1109\/ipdps.2006.1639413","raw":"T. He, L. Gu, L. Luo, T. Yan, J. Stankovic, T. Abdelzaher, S. Son, An Overview of Data Aggregation Architecture for Real-Time Tracking with Sensor Networks. Workshop on Parallel and Distributed Real-Time Systems, 2006.","cites":null},{"id":16312729,"title":"Data aware, Low cost Error correction for Wireless Sensor Networks.","authors":[],"date":"2004","doi":"10.1109\/wcnc.2004.1311480","raw":"S. Mukhopadhyay, D. Panigrahi, S. Dey. Data aware, Low cost Error correction for Wireless Sensor Networks. Proceedings of Wireless Communications and Networking Conference, 2004.","cites":null},{"id":16312731,"title":"Information assurance in sensor networks.","authors":[],"date":"2003","doi":"10.1145\/941350.941373","raw":"B. Deb, S. Bhatnagar, B. Nath. Information assurance in sensor networks. Proc. of the 2nd ACM International Conference on Wireless Sensor Networks and Applications, 2003.","cites":null},{"id":16312752,"title":"Medians and beyond: new aggregation techniques for sensor networks.","authors":[],"date":"2004","doi":"10.1145\/1031495.1031524","raw":"N. Shrivastava, C. Buragohain, D. Agrawal, S. Suri: Medians and beyond: new aggregation techniques for sensor networks. Proceedings of SenSys 2004.","cites":null},{"id":16312740,"title":"On the Effects of Aggregation on Reliability in Sensor Networks.","authors":[],"date":"2007","doi":"10.1109\/vetecs.2007.42","raw":"J. Benson, U. Roedig, A. Barosso, C. Sreenan. On the Effects of Aggregation on Reliability in Sensor Networks. Proceedings of the 65th Vehicular Technology Conference, 2007.","cites":null},{"id":16312727,"title":"PowerAware In-Network Query Processing for Sensor Data.","authors":[],"date":"2003","doi":"10.1201\/9780203356869.ch11","raw":"J. Beaver, M. A. Sharaf, A. Labrinidis, Panos K. Chrysanthis. PowerAware In-Network Query Processing for Sensor Data. Proc. of the 2nd Hellenic Data Management Symposium, 2003.","cites":null},{"id":16312722,"title":"Query Processing for Sensor Networks.","authors":[],"date":"2004","doi":"10.1109\/mprv.2004.1269131","raw":"J. Gehrke, Y. Yao. Query Processing for Sensor Networks. IEEE Pervasive Computing 2004, vol 3, number 1, pages 46-55.","cites":null},{"id":16312724,"title":"Query Processing in a Device Database System.","authors":[],"date":"1999","doi":null,"raw":"P. Bonnet, J. Gehrke, T. Mayr, P. Seshadri. Query Processing in a Device Database System. Tech. Report, number 99-1775, Cornell University, Ithaca, NY, USA, 1999.","cites":null},{"id":16312734,"title":"ReInForM: Reliable Information Forwarding using Multiple Paths in Sensor Networks.","authors":[],"date":"2003","doi":"10.1109\/lcn.2003.1243166","raw":"B. Deb, S. Bhatnagar and B. Nath. ReInForM: Reliable Information Forwarding using Multiple Paths in Sensor Networks. Proc. of the 28th Annual IEEE Conference on Local Computer Networks, 2003.","cites":null},{"id":16312728,"title":"RMST: Reliable Data Transport in Sensor Networks.","authors":[],"date":"2003","doi":"10.1109\/snpa.2003.1203361","raw":"F. Stann and J. Heidemann. RMST: Reliable Data Transport in Sensor Networks. Proceedings of the 1st IEEE International Workshop on Sensor Net Protocols and Applications, 2003.","cites":null},{"id":16312748,"title":"Scale-Free Aggregation in Sensor Networks,","authors":[],"date":"2005","doi":"10.1016\/j.tcs.2005.06.023","raw":"M. Enachescu, A. Goel, R. Govindan, R. Motwani, Scale-Free Aggregation in Sensor Networks, Theoretical Computer Science: Special Issue on Algorithmic Aspects of Wireless Sensor Networks, Vol. 344, pp. 15-29, 2005.","cites":null},{"id":16312730,"title":"Service Differentiation in Sensor Networks.","authors":[],"date":"2001","doi":"10.1145\/941350.941373","raw":"S. Bhatnagar, B. Deb and B. Nath. Service Differentiation in Sensor Networks. Proc. of the 4th International Symposium on Wireless Personal Multimedia Communications, 2001.","cites":null},{"id":16312726,"title":"TAG: a Tiny AGgregation Service for Ad-Hoc Sensor Networks.","authors":[],"date":"2002","doi":"10.1145\/1060289.1060303","raw":"S. Madden, M. J. Franklin, J. M. Hellerstein, W. Hong. TAG: a Tiny AGgregation Service for Ad-Hoc Sensor Networks. Proc. of the 5th Annual Symposium on Operating Systems Design and Implementation, 2002.","cites":null},{"id":16312737,"title":"Using energy where it counts: Protecting important messages in the link layer.","authors":[],"date":"2005","doi":"10.1109\/ewsn.2005.1462015","raw":"A. Kopke, H. Karl and M. Lobbers. Using energy where it counts: Protecting important messages in the link layer. Proc. of the IEEE European Workshop on Wireless Sensor Network, 2005.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2007-10","abstract":"Data aggregation is a method used in sensor networks to reduce the amount of messages transported. By aggregating, the data contained in several messages is fused into one single message. If such a message, containing the equivalent of many individual messages, is lost due to transmission errors then this has a detrimental effect on the application quality experienced. In many sensor network applications a constant supply of data is needed and therefore application quality is severely effected by excessive data loss. This paper proposes and evaluates the use of an in-network control mechanism to offset this disadvantageous effect. The control mechanism analytically calculates the correct reliability that an aggregate of given size must be forwarded at in order to meet application specific goals","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/70216.pdf","fullTextIdentifier":"http:\/\/eprints.lancs.ac.uk\/12935\/1\/senseapp07benson.pdf","pdfHashValue":"9ddaddd4d5c4392282d877ed0d59c5f7fce9c7a3","publisher":null,"rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:eprints.lancs.ac.uk:12935<\/identifier><datestamp>\n      2018-01-24T02:10:31Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      7375626A656374733D51:5141:51413735<\/setSpec><setSpec>\n      74797065733D626F6F6B5F73656374696F6E<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n    \n      \n        Reliability Control for Aggregation in Wireless Sensor Networks<\/dc:title><dc:creator>\n        Benson, Jonathan<\/dc:creator><dc:creator>\n        Roedig, Utz<\/dc:creator><dc:creator>\n        O'Donovan, Tony<\/dc:creator><dc:creator>\n        Sreenan, Cormac<\/dc:creator><dc:subject>\n        QA75 Electronic computers. Computer science<\/dc:subject><dc:description>\n        Data aggregation is a method used in sensor networks to reduce the amount of messages transported. By aggregating, the data contained in several messages is fused into one single message. If such a message, containing the equivalent of many individual messages, is lost due to transmission errors then this has a detrimental effect on the application quality experienced. In many sensor network applications a constant supply of data is needed and therefore application quality is severely effected by excessive data loss. This paper proposes and evaluates the use of an in-network control mechanism to offset this disadvantageous effect. The control mechanism analytically calculates the correct reliability that an aggregate of given size must be forwarded at in order to meet application specific goals.<\/dc:description><dc:date>\n        2007-10<\/dc:date><dc:type>\n        Contribution in Book\/Report\/Proceedings<\/dc:type><dc:type>\n        NonPeerReviewed<\/dc:type><dc:format>\n        application\/pdf<\/dc:format><dc:identifier>\n        http:\/\/eprints.lancs.ac.uk\/12935\/1\/senseapp07benson.pdf<\/dc:identifier><dc:relation>\n        http:\/\/dx.doi.org\/10.1109\/LCN.2007.137<\/dc:relation><dc:identifier>\n        Benson, Jonathan and Roedig, Utz and O'Donovan, Tony and Sreenan, Cormac (2007) Reliability Control for Aggregation in Wireless Sensor Networks. In: LCN '07 Proceedings of the 32nd IEEE Conference on Local Computer Networks. , pp. 833-840. ISBN 0-7695-3000-1<\/dc:identifier><dc:relation>\n        http:\/\/eprints.lancs.ac.uk\/12935\/<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/dx.doi.org\/10.1109\/LCN.2007.137","http:\/\/eprints.lancs.ac.uk\/12935\/"],"year":2007,"topics":["QA75 Electronic computers. Computer science"],"subject":["Contribution in Book\/Report\/Proceedings","NonPeerReviewed"],"fullText":"Reliability Control for Aggregation in Wireless\nSensor Networks\nJonathan P. Benson, Tony O\u2019Donovan, Cormac J. Sreenan.\nMobile and Internet Systems Laboratory (MISL),\nComputer Science Department, University College Cork (UCC), Ireland\n\u2014\nUtz Roedig\nInfoLab21, Lancaster University, UK\nAbstract\u2014 Data aggregation is a method used in sensor\nnetworks to reduce the amount of messages transported. By\naggregating, the data contained in several messages is fused into\none single message. If such a message, containing the equivalent\nof many individual messages, is lost due to transmission errors\nthen this has a detrimental effect on the application quality\nexperienced. In many sensor network applications a constant\nsupply of data is needed and therefore application quality is\nseverely effected by excessive data loss. This paper proposes and\nevaluates the use of an in-network control mechanism to offset\nthis disadvantageous effect. The control mechanism analytically\ncalculates the correct reliability that an aggregate of given size\nmust be forwarded at in order to meet application specific goals.\nI. INTRODUCTION\nMany wireless sensor network (WSN) applications collect\nperiodically generated sensor data at a central point - the data\nsink or base station - where the data is subsequently analysed.\nThis class of applications is considered within this paper.\nIn a realistic deployment scenario, messages are lost in\ntransport while travelling hop-by-hop through the network\ntowards the sink. These packet losses happen due to the natural\nlossy characteristics of the wireless links between the sensor\nnodes. An application analysing the data may be able to deal\nwith some of these losses. More specifically, the application\nmight be able to infer the correct conclusions even if a (small)\nportion of the sensor readings is not available for the analysis.\nThis could be due to the ability to interpolate missing data or\nthe availability of redundant sensor data.\nUsing data aggregation, several messages transported along\nthe same path can be combined into a single message.\nAggregation techniques reduce the amount of messages and\nthus reduce energy expensive transceiver operation and help\nto preserve scarce bandwidth. As aggregation increases the\namount of data concentrated in a single message, the data\nreliability at the sink is altered. Losing a message containing\na single data reading has surely a different impact on the\noverall data reliability than losing a message containing the\ninformation of several sensor readings. This effect is described\nin [11]. Where aggregation occurs the average amount of data\narriving at the sink, expressed by the expected value E(X) is\nunaltered compared to when aggregation is not used. However\nthis has the effect of increasing the variance about E(X)\nand therefore the standard deviation \u03c3. This leads to unstable\napplication quality since the amount of data arriving at the\ndata sink can fluctuate significantly.\nThis paper presents and evaluates a control mechanism\nto combat the effects of the increases in \u03c3 caused by in-\ncreasing amounts of aggregation. Worst case dimensioning\nwas examined in [11] where it was found that, although the\nmethods used were successful from a dimensioning point of\nview, significant overshooting of application defined targets\noccurred due to the use of worst case assumptions. In contrast\nthis paper relaxes the assumptions used and recalculates the\nnecessary forwarding reliability to meet application targets\nas aggregation occurs in network. This offers a much more\nfine grained approach than [11] and also relaxes a number of\nassumptions used in that paper. An alternative to altering the\nforwarding reliability to suit the aggregation level would be to\nadjust the aggregation level to suit the inherent reliability of the\nlinks available. However, the number of assumptions necessary\nfor this approach are far greater than those for the method\nexamined in this paper. In addition it is easy to see a situation\narising whereby, without global knowledge of network condi-\ntions, aggregated data may need to be broken up and reformed\nas it progresses through the network and encounters different\nconditions. Therefore modifying the aggregation level to suit\nthe link reliabilities found is not considered in this paper.\nThe remainder of the paper is organised as follows. Section\nII describes the motivation for this work. Section III discusses\nrelated work. Section IV analyses the effects of aggregation\nwhile section V describes how our control goals are formally\nset. Section VI describes how this goal is achieved. An ex-\nperimental evaluation of the control methodology is presented\nand examined in section VII. Finally conclusions and future\nwork are discussed in section VIII.\nII. MOTIVATION\nA number of sensor network applications operate in an\nevent based manner, i.e. nodes only send data if an abnormal\nor specific condition has occurred. For example a medical\napplication may only send data if an irregular condition is\ndetected or a heat sensor may only send data if a fire is\ndetected. In contrast another class of applications periodically\ngather data from the sensor network and use this data for\na particular purpose (It is this class of applications under\nconsideration in this work). In some cases this data may be\nfor the purposes of logging a phenomenom while in others\nsome form of control or actuation may take place based on\nthe data collected. In the case of actuation or control data must\nbe successfully delivered in sufficient quantity to ensure the\napplication can function correctly. The tolerance to lost data\nwill be defined by the nature of the application, the degree\nof redundant sensors available and the ability to interpolate\nmissing data. Consider the following scenario. An industrial\ncooling system consists of a large lattice of pipes which deliver\npressurised coolant to nozzles which spray the coolant onto a\nsurface below. Each of the nozzles must deliver the correct\namount of coolant and a network of sensors monitors the\npressure in the pipe lattice feeding the nozzles. A drop in\npressure in a pipe means that remedial action needs to be\ntaken and pressure is restored by closing relief valves or by\nincreasing the pressure of the input feed to that section of\npipe. In this scenario data must regularly be delivered to the\napplication and any data loss must not exceed application\ndefined tolerances (i.e. there are redundant sensors in each\nsection of the lattice).\nFor the purposes of this study an application similar to\nthe one outlined above which periodically gathers sensor data\nfrom the network (or a particular region or subsection of the\nnetwork) is considered. Within each data gathering interval\neach sensor generates a reading which is transmitted to the data\nsink. It is worth stating that the use of data gathering intervals\ndoes not suggest that fine grained time synchronisation is\nneeded. Nodes can generate and send data in a periodic manor\nbased on the time of arrival of an interest. The sensor readings\ngenerated may or may not be aggregated en route to the data\nsink. Due to the lossy nature of the wireless channel several\nmessages will inevitably be lost. How this loss affects the\napplication quality is described below.\nA. Data Reliability and Application Quality\nIt is assumed that the needs of an application analysing\ndata at the sink of a sensor field can be given by a utility\nfunction. Consider a simple utility function U(X) for some\narbitrary application. U(X) is a function of the percentage of\nthe total amount of sensor samples sent that the application\nreceives during a discrete time interval. The utility function\nindicates how useful a certain amount of data units are to an\napplication and is thus a mapping of application level quality\nrequirements to data transport reliability. At some point the\nrequired amount of sensor samples are received that will give\nan acceptable utility value. It has to be noted that simple utility\nfunctions cannot be used for all application types. For example\nin cases where the data readings of specific sensors are more\nimportant for the functioning of the application than others.\nHowever, a large class of data gathering applications can be\ndescribed by utility functions.\nIf the quality of the application depends on the amount of\nreceived data as it is described by the utility curve, a mapping\nbetween data delivery reliability and application quality is\npossible. The amount of data being delivered during each\ntime interval has to be kept at a value such that the utility\nof the application is kept at an acceptable level. The variance\nin the amount of data delivered has to be controlled also\nsince fluctuations below the minimum amount of data required\nwould prevent the utility from staying at a constant acceptable\nlevel. Thus, if the utility curve of an application is known,\nthe bounds for the minimum amount of data per discrete time\ninterval can be determined and the correct reliability measures\ncan be put in place in order to facilitate the correct operation\nof the application.\nIII. RELATED WORK\nThe related work section is split into two parts that discuss\nprevious work related to the research presented in this paper.\nFirst, related work on data aggregation in sensor networks is\ndiscussed. Second, existing work that describes methods to\ncontrol the reliability is presented. Reliability control is the\nmethod proposed in Section VI to counter the problem of\nvariable link reliability and path length; thus it is important\nto show that appropriate technical implementations exist.\n1) Aggregation: Several papers address the issue of ag-\ngregation in sensor networks. These papers vary in their\napproaches and emphasis.\nA common approach is to abstract aggregation from the\nunderlying network operation by implementing a SQL like\nquery layer which a programmer or end user can use to pose\nqueries to the sensor network [1], [2], [3], [4]. It is arguable\nwhether some of the functions of query based aggregation are\nin fact aggregation. Often the function of SQL-like queries\nis to filter data and reduce the number of tuples rather than\nactively use and combine data into an aggregated format. MIN\nand MAX operators are examples of such functions. This form\nof aggregation is not related to the problem discussed within\nthe paper. In this paper is assumed that the application requires\na minimum number of sensor samples to derive a correct\ndecision. This assumption allows a more generalised view of\naggregation methods and allows for redundancies inherent in\nsensor networks.\nOther related work considers that sensors can only detect\na phenomenon with limited accuracy [12]. This uncertainty\nin the sensor readings can be interpreted as detection relia-\nbility. If several sensors monitor the same phenomenon, this\nuncertainty can be mitigated. This spatial and\/or temporal\ncorrelation of sensor readings can also be used for aggregation\npurposes in the network [13]. Normally the reduction of sensor\nreading uncertainty can be traded for the aggregation level\n[14]. Methods to improve sensing accuracy in conjunction with\naggregation are not investigated in this paper.\n2) Reliability Control.: Ensuring reliable delivery in sensor\nnetworks has been the focus of a number of research papers.\nSeveral papers advocate the use of acknowledgements\n(ACKs) or negative acknowledgements (NACKs) and the\nsubsequent retransmission of a lost message [5], [8]. Another\napproach is to forward a message more than once so that its\nreliability is increased [7], [8], [9]. A more complex method\ninvolves forwarding multiple packets along multiple disjoint\npaths [7], [8], [9]. The loss\/corruption of data packets due\nto noisy wireless channels and data errors, and a method\nto correct this corrupt data are investigated in [15]. [10] is\nclosely related to this work in a number of respects, although\naggregation is not the focus, and describes, in general terms,\nsome methods that may be used to evaluate the informational\nvalue of sensor data. Various informational values are then\nmapped to various protection measures, FECs (Forward Er-\nror Correction codes) in this case. The principal difference\nbetween that paper and this is that this paper presents a\nformal link between data and the reliability needed for a\ngiven application scenario. [10] does not calculate the required\nreliability for an aggregate and does not take into account the\nnumber of hops to the data sink.\nIV. AGGREGATION - RELIABILITY INTERDEPENDENCY\nThis Section defines the terms aggregation and data trans-\nport reliability. Subsequently, the interdependency between\ndata transport reliability and data aggregation is investigated.\nA. Aggregation\nThe term data aggregation, sometimes also referred as\nmessage aggregation, can be applied to a range of different\noperations taking place inside a network. For the purposes of\nthis study, a valid aggregation function \u03c6 is defined as follows:\nDefinition 1: An aggregation function \u03c6 maps several mes-\nsages to a single message. Formally, if M is the set of\nall possible messages transmitted, this can be expressed as:\n\u03c6 : Ma \u2192M \u2200a \u2265 2.\nData aggregation is used in sensor networks for several rea-\nsons. The main objective of data aggregation is the reduction\nof energy consumption. Energy is saved as less messages,\nnormally containing a smaller payload than the unaggregated\nmessages together, have to be forwarded. An additional effect\nof aggregation is the reduced amount of bandwidth necessary\nto transport information through the network.\nThere are several approaches to data aggregation which can\nbe used on their own or in combination. On a packet level\nit is possible to combine the payload of several messages in\na single message. This form of aggregation leads to energy\nsavings as the header overhead is reduced, energy costly media\naccess mechanisms have to be executed less frequently or the\nhardware defined fixed frame capacity is used efficiently. A\ndifferent aggregation approach consists of applying in-network\nfunctions to process or pre-process the data generated. These\nfunctions include SQL type operators such as SUM, AVG,\nCOUNT and combinations thereof. Other more application\nspecific functions may be possible to implement in-network.\nThese may include data correlation, correction and verification\nalgorithms or data fusion algorithms. In general, if the infor-\nmation required from the sensor network is a function f such\nthat f(x1, x2, x3) = f(f(x1, x2), x3) = f(x1, f(x2, x3)) then\nthe result can be computed in parts as data is transferred in the\nnetwork towards the base-station. This form of aggregation is\napplied on the application level and leads to energy savings as\nthe net amount of bytes transmitted is significantly reduced.\nB. Reliability\nIn this paper, it is assumed that sensor data readings are\ntransported towards a sink. It is assumed that all sensor\nsamples are considered to be equally valuable. It is generally\ndifficult to ascertain the \u201cvalue\u201d of a given sensor reading\nwith respect to another and it is more difficult to ascertain\nthe correct value of an aggregate of a number of such sensor\nreadings. One method of evaluating aggregates is to simply\ncount the number of sensor reading contained therein. It can\nbe argued that this method is inappropriate for evaluating a\nnumber of query based aggregates. For example, when using\nthe MAX operator the most valuable sensor reading, whether a\npart of an aggregate or not, is the one with the highest value at\nthat given time or during a specific time interval. However it\ncan be argued that MAX, MIN and similar functions should be\ndisregarded as they are actually data suppression or filtering\nfunctions as opposed to aggregation functions which combine\ndata.\nA further assumption is that a collisionless TDMA-like\nMAC protocol is used and as a consequence error rates are\ntraffic invariant. We believe that these assumptions still result\nin a reasonably accurate model that can be used for the study\ndescribed in the paper. Using the assumptions, the reliability\non the different abstraction levels is given by the following\nthree definitions:\nDefinition 2: The hop-by-hop message transport reliability\n(short: hop-by-hop reliability), rij , describes the probability\nthat a message is delivered successfully between two neigh-\nbouring sensor nodes i and j.\nDefinition 3: The end-to-end message transport reliability\n(short: end-to-end reliability), r, is described by the product of\nthe message transport reliabilities ri,j on the path from source\nto sink.\nDefinition 4: The data transport reliability (short: data reli-\nability) is described by the expected amount of sensor readings\nE(X) per unit time reaching the sink and also by the variance\n\u03c32. The variance describes fluctuations about the expected\nvalue.\nC. Interdependency\nThe data reliability, characterised by E(X) and \u03c32, is\ninfluenced by the amount of data lost in transit. These losses\nare characterised by the hop-by-hop reliability of each link\nand the degree of aggregation. The degree of aggregation, a,\ninfluences how many data readings are lost by losing a single\nmessage.\nConsider a line of nodes where the topmost node is the\ndata sink and the bottommost node has a number of N\ndata readings to send. The readings can now either be sent\nunaggregated as N messages, each containing a single sensor\nreading, or aggregated in n \u2264 N messages depending on\nthe selected aggregation degree. The value 1 \u2264 a \u2264 N\ndescribes how many readings are combined in each message.\nThus it is assumed that all messages carry the same number of\na sensor readings (homogeneous aggregation). Note that the\nassumption of homogeneous aggregation has no net effect on\nthe expected value calculations and gives a worst case variance\ncalculation for a maximum aggregation level a. As a result of\nthe aggregation, the following number of messages are sent to\nthe sink:\nn = N\/a (1)\n1) Expected Values : The question here is how aggregation\ninfluences the expected value E(X). The expected value can\nbe calculated by:\nE(X) =\nn\u2211\na \u00b7 r = n \u00b7 a \u00b7 r (2)\nUsing (1) and substituting the value of a with N\/n gives:\nE(X) = Nr (3)\nThus, the expected value1 is a function of the number of\nsensor data N and the end-to-end reliability r. The degree\nof aggregation a has no effect on the expected value. It\ntherefore seems logical to aggregate as much as possible as\nno cost regarding data transport reliability, in terms of the\nexpected value, must be paid. In the literature it is sometimes,\nfor example [10], assumed that aggregated packets should be\nhandled with greater care than non-aggregated ones. As shown,\nthis is not true regarding the expected value of the amount of\ndata readings.\n2) Variance: The variance gives an impression of the\nfluctuations of the amount of data readings reaching the sink.\nThe variance \u03c32 is given by the formula:\n\u03c32 = E(X2)\u2212 [E(X)]2 (4)\nThe variance can now be calculated and using (1):\n\u03c32 =\nn\u2211\n(a2 \u00b7 r) \u2212 (a2 \u00b7 r2) = N \u00b7 a \u00b7 r \u00b7 (1 \u2212 r) (5)\nHere, the variance depends linearly on the degree of ag-\ngregation and linearly on the number of samples. Now both\nextremes can be compared; no aggregation with a = 1 and\ntotal aggregation with a = N . In the first case, the variance\ndepends linearly on the amount of sensor readings. In the\nsecond case, the variance depends quadratically on the amount\nof sensor readings sent. It can be concluded that the variance\nof amount of data readings per time unit reaching the sink\ndepends heavily on the degree of aggregation. Regarding the\nvariance it is therefore useful to handle aggregated packets\nwith greater care than non-aggregated ones.\n1The equations used here are used for simplicity and brevity. Probability\nof delivery of data packets has a binomial distribution. Expected values for\nbinomial probabilities can be reduced to give the same result.\nV. AGGREGATION - RELIABILITY CONTROL\nIn this Section, the control goals are formulated along\napplication requirements. Thereafter the control mechanism\nand its implementation is presented.\nA. Application Requirements\nIt is assumed that an application requires a data transport\nreliability above a given value to function correctly. Mathe-\nmatically expressed, it is required that E(X) \u2265 N \u00b7 R. Here,\nR is the reliability level desired by the application, N is the\ntotal number of sensor data. Additionally, it has now to be\ntaken into account that the amount of actual data delivered\nwill fluctuate about the expected value, which is described by\nthe variance. Thus the control goal is defined as:\nDefinition 5: The network should achieve a transport reli-\nability such that expected value minus some multiple of the\nstandard deviation equals to or is greater than the minimum re-\nliability level desired by the application. This can be expressed\nas follows: E(X)\u2212 z\u03c3 >= NR.\nFor example, if a normal distribution of the incoming sensor\nreadings is assumed and z = 1.96 is selected, in 97.5% of\ncases the application requirements can be met.\nB. Control Mechanism\nAs it was shown by (3) and (5), the expected value and\nvariance depend on the aggregation degree a and the end-\nto-end message reliability r. Thus, aggregation degree a and\nend-to-end transport reliability r have to be balanced, such\nthat the needs of the application can be met.\nUsing the application requirements given in Definition 5,\nequations that allow the computation of the maximum aggre-\ngation degree and\/or the necessary transport reliability can be\nderived:\nE(X)\u2212NR = z\u03c3 (6)\nUsing (2) and (5):\nn \u00b7 a \u00b7 r \u2212N \u00b7R = z \u00b7\n\u221a\nN \u00b7 a \u00b7 r \u00b7 (1\u2212 r) (7)\nSquaring both sides of (7) gives:\nN2 \u00b7 (r2 \u2212 2 \u00b7 r \u00b7R+ R2) = z2 \u00b7N \u00b7 a \u00b7 r \u00b7 (1\u2212 r) (8)\nTo calculate the maximum aggregation degree a if r is\nalready known, (8) can be modified as:\na =\nN \u00b7 (r2 \u2212 2 \u00b7 r \u00b7 R+R2)\nz2 \u00b7 r \u00b7 (1\u2212 r)\n(9)\nFinally the following equation to compute the end-to-end\ntransport reliability r needed for a given a can be generated\nusing (8):\n(N + z2 \u00b7 a) \u00b7 r2 \u2212 (2 \u00b7N \u00b7R+ z2 \u00b7 a) \u00b7 r +N \u00b7R2 = 0 (10)\nEquation (9) gives the maximum aggregation degree that\ncan be used in the network if the end-to-end reliability r\nis known. Solving (10) for r gives the necessary end-to-end\nreliability for messages if the aggregation degree is known. Of\ncourse, both equations can be used together to balance these\nvalues.\nC. Reliability Control\nEquations (9) and (10), assume that the end-to-end relia-\nbility, r, for messages transported in the network is constant\nfor all messages regardless of their distance to the sink. For\nexample, if a constant hop-by-hop reliability is assumed, mes-\nsages will have a different end-to-end reliability. A possible\nsolution to this problem and one which is explored in this\nwork is to ensure that all messages achieve the same end-to-\nend reliability r. The method used to do this is described in\nSection VI-A.\nVI. CONTROL METHODOLOGY\nIn order to consider the use of a dynamic in-network\nsolution without the use of global knowledge it is necessary\nthat the individual actions of the nodes lead to the desired\ngoals. In order to see that this is true consider the following:\nFact 1: E(X) = \u03a3(Xi)\nFact 1 merely states that the overall expected value is merely\nthe sum of all the expectancies within the network. For\nexample if one message has an expected value of 0.7 and\nanother an expected value of 0.8 then their combined expected\nvalue is 0.7+0.8=1.5\nFact 2: \u03c32 = \u03a3\u03c32i\nFact 2 states that the variance is the sum of the individual\nvariances from within the network. This holds since the\ndelivery probability of each message both uncorrelated and\nindependent. If this is the case then\nvar(\nn\u2211\ni = 1\nXi) =\nn\u2211\ni = 1\nvar(Xi)\nIf both fact 1 and 2 hold then the following must hold also.\nFact 3: If E(Xi)\u2212 \u03c3i = Ri then\nN\u2211\ni = 1\n(E(Xi)\u2212 \u03c3i) = E(X)\u2212 \u03c3 = NR\nThis means that if techniques to modify the reliability to meet\nthe condition described by (6) are applied within the network,\nglobal awareness is not necessary in order to satisfy (10).\nEquation (10) can therefore be modified to determine the\ncorrect end-to-end reliability for any given aggregate. To do\nthis (10) is simply divided by a to give:\n(\nN\na\n+ z2) \u00b7 r2 \u2212 (2 \u00b7\nN\na\n\u00b7 R+ z2) \u00b7 r +\nN\na\n\u00b7 R2 = 0 (11)\nA. Adaptation\nEach node must know the number of reporting nodes N .\nThis information will be monitored at the data sink and\ndisseminated via requests along with the desired reliability R.\nUsing this data each node will then compute the correct end-\nto-end-reliability r needed for a packet or aggregate packet\nusing (11).\nA node adapts its forwarding mechanism such that the\ndesired end-to-end reliability r for the message is achieved.\nA node, upon receiving a request from the data sink to\ngenerate messages and forward these messages with end-to-\nend reliability r would need to know the number of hops h to\nthe data sink (it is assumed that the routing tree is stable). The\nnode could then calculate the reliability rf at which it would\nneed to forward this message over each hop to meet the end-\nto-end reliability requirements. To calculate rf the following\nsimple formula is used: rf = ceiling(loghr). The value of\nrf needs to be forwarded in each packet so that the receiving\nnode is able to calculate what steps it needs to take to ensure\nthat the packet is again forwarded with reliability rf . Methods\nto achieve the desired rf are discussed in the III section. In\nparticular, [7], [8], [9] discuss this in detail.\nConsider the following example:\n\u2022 Node A receives two packets from different senders\nwhich are to be aggregated. Node A needs to calculate the\nend-to-end reliability, r, necessary for a packet consisting\nof two data samples. Node A does this using (11).\n\u2022 Using r and the number of hops to the data sink the\nrequired forwarding reliability rf can be calculated.\n\u2022 Now node A must examine the forwarding reliability\nconstraints in both of packets containing the data to be\naggregated. Let us call them rf1 and rf2 respectively\nand denote the forwarding reliability calculated in the\nprevious step as rfa (a denotes aggregate). The final\nforwarding reliability, rf , is simply max(rf1, rf2,rfa).\nNote that the effects of ignoring this step is examined in\nSection VII-D.\n\u2022 Having calculated rf the amount of retransmissions,\nredundant packets or other reliability measures needed\nto achieve this reliability level (assuming the link error\nprobability is known) must be calculated.\nVII. EXPERIMENTAL EVALUATION\nA. Topology\n100 nodes are placed in a grid. The transmission range is set\nsuch that each node can only communicate to their adjacent\nneighbours in the grid. The topmost left node is designated\nas the data sink and the other 99 nodes deliver data to this\nlocation. A request is flooded by the sink into the network\nand a routing tree is formed along the reverse path. For the\npurposes of the experiment the routing tree is considered to\nbe stable.\nB. Aggregation\nIn order to facilitate aggregation a node must hold its\nmessages in a buffer and await the arrival of messages from\nits upstream neighbours. Since the envisaged operation of the\nsensor network in this paper is periodic a cascading system\ncan be put in place. In such a system each node will wait\nfor a progressively longer period as hop distance to the data\nsink decreases. This allows adequate time for data generated\nfrom nodes farther away to catch up and be aggregated. The\nmethod is formally described as follows: A waiting period Ti\nat node ni, hi hops from the data sink, in the routing tree is\ncalculated for each message in order to facilitate a cascading\naggregation system using the following formula:\nTi =\nTmax\nhmax\n\u00b7 (hmax \u2212 hi)\nIt is assumed that Tmax <data gathering interval.\nC. Traffic\nEvery node periodically generates a sensor reading (1 per\nsensing period) and sends it to the data sink. Before the\nnext period all the data generated is forwarded to the sink\nand recorded. Each node generates 1000 data readings per\nsimulation. After each period the amount of sensor readings\ndelivered to the sink is recorded. Finally the standard deviation\nis calculated for the 1000 data gathering rounds.\nRather than set the maximum aggregation level a or cal-\nculate a worst case scenario forwarding reliability rf (as was\ndone in [11]) the end-to-end and forwarding reliability is re-\nevaluated when aggregation occurs in the network. This should\nreduce the amount of overshooting seen in [11]. Aggregation\nis allowed to grow without bound and packet size does\nnot increase except in later experiments in section VII-F\nwhere the effects of growing packet size on the number of\nretransmissions needed is examined.\nThe experiments use a simple bit error model and it is as-\nsumed that each node has an accurate bit error rate estimation\n(the effects of inaccuracies in the BER estimation is examined\nin section VII-E). Naturally acknowledgements are also prone\nto errors. The basic calculation for converting bit error rates\n(BER) to packet error rates (PER) and acknowledgement error\nrates (AER) is given by the following formula: PER or\nAER = (1 \u2212 BER)length where length is the length of\nthe packet in bits. No correctable bits are assumed. A fixed\npacket length of 160 bits (20 bytes) and 80 bits (10 bytes) is\nassumed for data packets and acknowledgements respectively,\nexcept in the case where packet length is allowed to grow with\naggregation. Given the assumption that the link reliability can\nbe modified a mechanism to do so must be provided. The cho-\nsen mechanism in these experiments is an ARQ protocol. The\nnumber of retransmissions needed is calculated using the fol-\nlowing formula: max transmissions = ceiling(logPER(r)).\nNaturally the rounding upward, to a whole number, of the\nnumber of transmissions to be used results in a small amount\nof overshooting of the target reliability.\nD. Experiment 1\nThe dynamic control methodology is implemented and\ntested for a variety of differing target reliabilities ranging\n 0\n 20\n 40\n 60\n 80\n 100\n 0  0.2  0.4  0.6  0.8  1\nD\nat\na \nR\nec\nie\nve\nd \n[%\n]\nDesired Reliability [R]\nData_received\nApplication_target\nFig. 1. Algorithm performance with end-to-end constraints.\n 0\n 20\n 40\n 60\n 80\n 100\n 0  0.2  0.4  0.6  0.8  1\nD\nat\na \nR\nec\nie\nve\nd \n[%\n]\nDesired Reliability [R]\nData_received\nApplication_target\nFig. 2. Algorithm performance without end-to-end constraints.\nfrom 0.1 to 0.9. Packet sizes are fixed and do not grow\ndue to aggregation. A constant bit error rate of 0.002 is\nused which gives a packet error rate (PER) of 0.247 and an\nacknowledgement error rate (AER) of 0.148.\nTwo separate experiments were run. The first kept the\nconstraints set by packets sent from further away (highest rf ,\ndiscussed in section VI-A) while the second experiment did\nnot. In addition the results of these experiments are compared\nin two different ways. Firstly the average amount of data\ndelivered is examined with the standard deviation shown as\nerror bars. Secondly the amount of failed data rounds (where\nthe data delivered was less than 70%) is considered. Since a z-\nvalue of 1.0 is used this implies that 85.13% of rounds should\nbe successful. In essence figures 1 and 3 are from the same\ndata and likewise with figures 2 and 4 represent the second\nexperiment.\nIn figure 1 a significant overshoot can be seen when\nend-to-end constraints (i.e. use worst case rf ) are obeyed.\nNevertheless in almost all situations application requirements\nare met or exceeded. Likewise upon examination of figure 3\n 20\n 30\n 40\n 50\n 60\n 70\n 80\n 90\n 100\n 110\n 0  0.2  0.4  0.6  0.8  1\nSu\ncc\nes\nsf\nul\n R\nou\nnd\ns \n[%\n]\nDesired Reliability [R]\nSuccessful rounds (%)\nApplication_target\nFig. 3. Number of failed rounds of data gathering with end-to-end constraints.\n 20\n 30\n 40\n 50\n 60\n 70\n 80\n 90\n 100\n 110\n 0  0.2  0.4  0.6  0.8  1\nSu\ncc\nes\nsf\nul\n R\nou\nnd\ns \n[%\n]\nDesired Reliability [R]\nSuccessful rounds (%)\nApplication_target\nFig. 4. Number of failed rounds of data gathering without end-to-end\nconstraints.\nit can be seen that in excess of the target 85.13% of data\nrounds were successful in every case. When ignoring end-\nto-end constraints, figure 2, it can be seen that the average\ndata received tracks the desired reliability R more closely\nalthough the standard deviation invariably fails to come within\ntarget in every case. An examination of figure 4 reveals that\nthe required amount of data is rarely received where end-\nto-end constraints are not kept, indicating it is necessary to\nkeep the constraints. Thus there are two reliability constraints\nthat an aggregate must obey; those derived from (10) and\nthe maximum forwarding reliability of all the constituent\nmessages. However adopting the most conservative rf results\nin a significant amount of over shooting the target reliability\nwhich can be seen in both figure 1 and 3. This is due to\nthe fact that aggregates must become reasonably large before\nthe increase in reliability necessitated by increased variance\nexceeds the maximum forwarding reliability of the worst case\nhop distance. Thus many aggregates get a \u201cfree\u201d boost in their\nend-to-end reliabilities by aggregating with data that is further\nfrom the sink. Also note that the rounding up of the number\n 0\n 20\n 40\n 60\n 80\n 100\n 0  0.0005  0.001  0.0015  0.002\nD\nat\na \nR\nec\nie\nve\nd \n[%\n]\nBER randomness\nData_received\nApplication_target\nFig. 5. The effect of fluctuations in the BER on reliability\n 60\n 70\n 80\n 90\n 100\n 110\n 0  0.0005  0.001  0.0015  0.002\nSu\ncc\nes\nsf\nul\n R\nou\nnd\ns \n[%\n]\nBER randomness\nSuccessful rounds (%)\nApplication_target\nFig. 6. The effect of fluctuations in the BER on reliability\nof transmissions used contributes to this overshooting. While\nthis is not ideal from an analytical perspective it does allow a\nrelaxation of assumptions such as accuracy of BER estimation\nwhich shall be see in the next experiment.\nE. Experiment 2\nOne weakness that is present in the methodology chosen\nis that it is reliant on the accuracy of the bit error estimation\nprocess available to the sensor node. Naturally this estimation\nmay not be entirely accurate and errors and fluctuations\nwill cause some variance from this figure. This experiment\nintroduces a randomly generated value, of varying range\n(\u00b10.0002, 0.0004,...,0.002), that will be added or subtracted\nfrom the BER for a set of transmissions. The sender remains\nunaware of any change and uses the base BER of 0.002 for\nall calculations.\nAs would be expected the algorithm is resilient to unde-\ntected variances in the BER up to a certain point. This can be\nexplained by the overshoot caused by the adoption of the most\nconservative rf which can be seen in the previous experiment\nalong with the rounding error from calculating the number\n 60\n 80\n 100\n 120\n 140\n 160\n 180\n 200\n 0  5  10  15  20  25  30  35  40\nTo\nta\nl T\nra\nns\nm\nis\nsi\non\ns\nNum aggregates before packet size increase\nTransmissions\nAcknowledgements\nFig. 7. Effect of increasing packet size on number of transmissions needed\nof retransmissions necessary. Naturally as the BER estimation\nerror increases to larger values the control methodology used\nfails to meet the required target.\nF. Experiment 3\nExperiment 3 examines the effects of increasing packet size\non the total amount of transmissions needed to deliver all 99\nmessages in a gathering round. The purpose of this experiment\nis to examine the cost of implementing the scheme described\nfor a number of aggregation scenarios (packet stuffing, in-\nnetwork processing and pre-processing, etc.). An allowance is\nmade for the number of aggregates that can be contained in a\nfixed size packet of 160 bits (this can be seen on the x-axis).\nWhen this is exceeded the length of the packet is incremented\nby 16 bits per extra aggregate. As before a constant BER of\n0.002 is used and the desired reliability, R, is 0.7.\nWhile the number of retransmissions needed to send an\naggregate packet successfully can grow quite large this is off\nset by the reduction of messages due to aggregation. However\nit must be pointed out that as packet size grows the energy\nneed to transmit and receive a single packet also grows and\ntherefore the graph presented does not represent the actual\nenergy cost to the network. Nevertheless a significant energy\nsaving is likely even in the worst case scenario where no\ndata are aggregated without increasing packet length (leftmost\npart of x-axis in figure 7). Consider that without aggregation\nand not including retransmissions (assuming a perfect link) a\nminimum of 615 transmissions and acknowledgements would\nbe needed to transport all 99 sensor data to the sink.\nVIII. CONCLUSION & FUTURE WORK\nThe results clearly show that aggregation does not affect\nthe probable amount of data delivered but has an adverse\neffect on the fluctuations about this value. These fluctuations\nlead to unstable application level quality and are undesirable.\nHaving quantified the effects of aggregation a methodology\nis presented to determine the correct end-to-end reliability\nlevel necessary to control these effects by selecting and\nimplementing the correct hop-by-hop reliability, dynamically\nin-network, for any given aggregate size. It has been shown\nthat this method can be used effectively to meet application\nspecified targets.\nFuture work shall consider the distribution of packet losses\nand how these are affected by aggregation. In addition the\napplicability of the methods discussed in this paper will be\nexamined with non-periodic poisson generated traffic. An\nexamination of the current scheme and its effects on contention\nbased MAC protocols for varying traffic conditions shall be\nundertaken.\nIX. ACKNOWLEDGEMENTS\nThe support of the Informatics Commercialisation Initia-\ntive of Enterprise Ireland is gratefully acknowledged. Mr.\nO\u2019Donovan is supported by Microsoft Research through its\nEuropean PhD Scholarship Programme and the EMBARK Ini-\ntiative of the Irish Research Council for Science, Engineering\nand Technology.\nREFERENCES\n[1] J. Gehrke, Y. Yao. Query Processing for Sensor Networks. IEEE\nPervasive Computing 2004, vol 3, number 1, pages 46-55.\n[2] P. Bonnet, J. Gehrke, T. Mayr, P. Seshadri. Query Processing in a Device\nDatabase System. Tech. Report, number 99-1775, Cornell University,\nIthaca, NY, USA, 1999.\n[3] S. Madden, M. J. Franklin, J. M. Hellerstein, W. Hong. TAG: a Tiny\nAGgregation Service for Ad-Hoc Sensor Networks. Proc. of the 5th\nAnnual Symposium on Operating Systems Design and Implementation,\n2002.\n[4] J. Beaver, M. A. Sharaf, A. Labrinidis, Panos K. Chrysanthis. Power-\nAware In-Network Query Processing for Sensor Data. Proc. of the 2nd\nHellenic Data Management Symposium, 2003.\n[5] F. Stann and J. Heidemann. RMST: Reliable Data Transport in Sensor\nNetworks. Proceedings of the 1st IEEE International Workshop on\nSensor Net Protocols and Applications, 2003.\n[6] S. Mukhopadhyay, D. Panigrahi and S. Dey. Data Aware, Low Cost\nError Correction for Wireless Sensor Networks. Proc. of IEEE Wireless\nCommunications and Networking Conference, 2004.\n[7] S. Bhatnagar, B. Deb and B. Nath. Service Differentiation in Sensor Net-\nworks. Proc. of the 4th International Symposium on Wireless Personal\nMultimedia Communications, 2001.\n[8] B. Deb, S. Bhatnagar, B. Nath. Information assurance in sensor net-\nworks. Proc. of the 2nd ACM International Conference on Wireless\nSensor Networks and Applications, 2003.\n[9] B. Deb, S. Bhatnagar and B. Nath. ReInForM: Reliable Information\nForwarding using Multiple Paths in Sensor Networks. Proc. of the 28th\nAnnual IEEE Conference on Local Computer Networks, 2003.\n[10] A. Kopke, H. Karl and M. Lobbers. Using energy where it counts:\nProtecting important messages in the link layer. Proc. of the IEEE\nEuropean Workshop on Wireless Sensor Network, 2005.\n[11] J. Benson, U. Roedig, A. Barosso, C. Sreenan. On the Effects of\nAggregation on Reliability in Sensor Networks. Proceedings of the 65th\nVehicular Technology Conference, 2007.\n[12] T. He, L. Gu, L. Luo, T. Yan, J. Stankovic, T. Abdelzaher, S. Son,\nAn Overview of Data Aggregation Architecture for Real-Time Tracking\nwith Sensor Networks. Workshop on Parallel and Distributed Real-Time\nSystems, 2006.\n[13] M. Enachescu, A. Goel, R. Govindan, R. Motwani, Scale-Free Aggrega-\ntion in Sensor Networks, Theoretical Computer Science: Special Issue\non Algorithmic Aspects of Wireless Sensor Networks, Vol. 344, pp. 15-\n29, 2005.\n[14] N. Shrivastava, C. Buragohain, D. Agrawal, S. Suri: Medians and\nbeyond: new aggregation techniques for sensor networks. Proceedings\nof SenSys 2004.\n[15] S. Mukhopadhyay, D. Panigrahi, S. Dey. Data aware, Low cost Error\ncorrection for Wireless Sensor Networks. Proceedings of Wireless Com-\nmunications and Networking Conference, 2004.\n"}