{"doi":"10.1109\/TVCG.2007.1011","coreId":"66334","oai":"oai:dro.dur.ac.uk.OAI2:1917","identifiers":["oai:dro.dur.ac.uk.OAI2:1917","10.1109\/TVCG.2007.1011"],"title":"Deformable model retrieval based on topological and geometric signatures.","authors":["Tam, G,","Lau, R."],"enrichments":{"references":[],"documentType":{"type":1}},"contributors":[],"datePublished":"2007-05","abstract":"With the increasing popularity of 3D applications such as computer games, a lot of 3D geometry models are being created. To encourage sharing and reuse, techniques that support matching and retrieval of these models are emerging. However, only a few of them can handle deformable models, i.e., models of different poses, and these methods are generally very slow. In this paper, we present a novel method for efficient matching and retrieval of 3D deformable models. Our research idea stresses on using both topological and geometric features at the same time. First, we propose Topological Point Ring (TPR) analysis to locate reliable topological points and rings. Second, we capture both local and global geometric information to characterize each of these topological features. To compare the similarity of two models, we adapt the Earth Mover Distance (EMD) as the distance function, and construct an indexing tree to accelerate the retrieval process. We demonstrate the performance of the new method, both in terms of accuracy and speed, through a large number of experiments","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/66334.pdf","fullTextIdentifier":"http:\/\/dro.dur.ac.uk\/1917\/1\/1917.pdf","pdfHashValue":"55679a6e2ebdac589222315620e0f7361e30eef2","publisher":"IEEE","rawRecordXml":"<record><header><identifier>\n  \n    \n      oai:dro.dur.ac.uk.OAI2:1917<\/identifier><datestamp>\n      2011-08-10T15:36:12Z<\/datestamp><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n    \n      \n        Deformable model retrieval based on topological and geometric signatures.<\/dc:title><dc:creator>\n        Tam, G,<\/dc:creator><dc:creator>\n        Lau, R.<\/dc:creator><dc:description>\n        With the increasing popularity of 3D applications such as computer games, a lot of 3D geometry models are being created. To encourage sharing and reuse, techniques that support matching and retrieval of these models are emerging. However, only a few of them can handle deformable models, i.e., models of different poses, and these methods are generally very slow. In this paper, we present a novel method for efficient matching and retrieval of 3D deformable models. Our research idea stresses on using both topological and geometric features at the same time. First, we propose Topological Point Ring (TPR) analysis to locate reliable topological points and rings. Second, we capture both local and global geometric information to characterize each of these topological features. To compare the similarity of two models, we adapt the Earth Mover Distance (EMD) as the distance function, and construct an indexing tree to accelerate the retrieval process. We demonstrate the performance of the new method, both in terms of accuracy and speed, through a large number of experiments.<\/dc:description><dc:subject>\n        Deformable geometry models<\/dc:subject><dc:subject>\n         Model matching<\/dc:subject><dc:subject>\n         Retrieval<\/dc:subject><dc:subject>\n         Geometry model processing.<\/dc:subject><dc:publisher>\n        IEEE<\/dc:publisher><dc:source>\n        IEEE transactions on visualization and computer graphics, 2007, Vol.13(3), pp.470 -482 [Peer Reviewed Journal]<\/dc:source><dc:date>\n        2007-05<\/dc:date><dc:type>\n        Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:identifier>\n        dro:1917<\/dc:identifier><dc:identifier>\n        issn:1077-2626<\/dc:identifier><dc:identifier>\n        doi:10.1109\/TVCG.2007.1011<\/dc:identifier><dc:identifier>\n        http:\/\/dro.dur.ac.uk\/1917\/<\/dc:identifier><dc:identifier>\n        http:\/\/dx.doi.org\/10.1109\/TVCG.2007.1011<\/dc:identifier><dc:format>\n        application\/pdf<\/dc:format><dc:identifier>\n        http:\/\/dro.dur.ac.uk\/1917\/1\/1917.pdf<\/dc:identifier><dc:rights>\n        \u00a92007 IEEE. Personal use of this material is permitted. However, permission to reprint\/republish this material for advertising or promotional purposes or for creating new collective works for resale or redistribution to servers or lists, or to reuse any copyrighted component of this work in other works must be obtained from the IEEE.\\ud\n<\/dc:rights><dc:accessRights>\n        info:en-repo\/semantics\/openAccess<\/dc:accessRights><\/oai_dc:dc><\/metadata><\/record>","journals":[{"title":null,"identifiers":["1077-2626","issn:1077-2626"]}],"language":{"code":"en","id":9,"name":"English"},"relations":[],"year":2007,"topics":["Deformable geometry models","Model matching","Retrieval","Geometry model processing."],"subject":["Article","PeerReviewed"],"fullText":"Durham Research Online\nDeposited in DRO:\n08 October 2008\nVersion of attached file:\nPublished Version\nPeer-review status of attached file:\nPeer-reviewed\nCitation for published item:\nTam, G, and Lau, R. (2007) \u2019Deformable model retrieval based on topological and geometric signatures.\u2019,\nIEEE transactions on visualization and computer graphics., 13 (3). 470 -482.\nFurther information on publisher\u2019s website:\nhttp:\/\/dx.doi.org\/10.1109\/TVCG.2007.1011\nPublisher\u2019s copyright statement:\n2007 IEEE. Personal use of this material is permitted. However, permission to reprint\/republish this material for\nadvertising or promotional purposes or for creating new collective works for resale or redistribution to servers or lists,\nor to reuse any copyrighted component of this work in other works must be obtained from the IEEE.\nAdditional information:\nUse policy\nThe full-text may be used and\/or reproduced, and given to third parties in any format or medium, without prior permission or charge, for\npersonal research or study, educational, or not-for-profit purposes provided that:\n\u2022 a full bibliographic reference is made to the original source\n\u2022 a link is made to the metadata record in DRO\n\u2022 the full-text is not changed in any way\nThe full-text must not be sold in any format or medium without the formal permission of the copyright holders.\nPlease consult the full DRO policy for further details.\nDurham University Library, Stockton Road, Durham DH1 3LY, United Kingdom\nTel : +44 (0)191 334 3042 \u2014 Fax : +44 (0)191 334 2971\nhttp:\/\/dro.dur.ac.uk\n Use policy \n \nThe full-text may be used and\/or reproduced, and given to third parties in any format or medium, without \nprior permission or charge, for personal research or study, educational, or not-for-profit purposes \nprovided that : \n \n\u0083 a full bibliographic reference is made to the original source \n\u0083 a link is made to the metadata record in DRO \n\u0083 the full-text is not changed in any way \n \nThe full-text must not be sold in any format or medium without the formal permission of the copyright \nholders.  \n \nPlease consult the full DRO policy for further details. \n \nDurham University Library, Stockton Road, Durham DH1 3LY, United Kingdom \nTel : +44 (0)191 334 2975 | Fax : +44 (0)191 334 2971 \nhttp:\/\/dro.dur.ac.uk \nDurham Research Online \n Deposited in DRO:\n08 October 2008\nVersion of attached file:\nPublished\nPeer-review status of attached file:\nPeer-reviewed\nCitation for published item:\nTam, G, and Lau, R. (2007) 'Deformable model retrieval based on topological and geometric signatures.',\nIEEE transactions on visualization and computer graphics., 13 (3), 470 -482.\nFurther information on publishers website:\nhttp:\/\/dx.doi.org\/10.1109\/TVCG.2007.1011\nPublishers copyright statement:\n\u00a92007 IEEE. Personal use of this material is permitted. However, permission to reprint\/republish this material\nfor advertising or promotional purposes or for creating new collective works for resale or redistribution to servers\nor lists, or to reuse any copyrighted component of this work in other works must be obtained from the IEEE.\u0000\u0000\nDeformable Model Retrieval Based on\nTopological and Geometric Signatures\nGary K.L. Tam, Student Member, IEEE, and Rynson W.H. Lau, Senior Member, IEEE\nAbstract\u2014With the increasing popularity of 3D applications such as computer games, a lot of 3D geometry models are being created.\nTo encourage sharing and reuse, techniques that support matching and retrieval of these models are emerging. However, only a few of\nthem can handle deformable models, that is, models of different poses, and these methods are generally very slow. In this paper, we\npresent a novel method for efficient matching and retrieval of 3D deformable models. Our research idea stresses using both topological\nand geometric features at the same time. First, we propose Topological Point Ring (TPR) analysis to locate reliable topological points\nand rings. Second, we capture both local and global geometric information to characterize each of these topological features. To\ncompare the similarity of two models, we adapt the Earth Mover Distance (EMD) as the distance function and construct an indexing\ntree to accelerate the retrieval process. We demonstrate the performance of the new method, both in terms of accuracy and speed,\nthrough a large number of experiments.\nIndex Terms\u2014Deformable geometry models, model matching\/retrieval, geometry model processing.\n\u00c7\n1 INTRODUCTION\nTHErecent rapid development of computer graphics (CG)animation and 3D games stimulates a dramatic growth\nin the number of 3D models available on the Internet. Many\nonline 3D repositories store and share hundreds or even\nthousands of models. Most of them categorize models into\ngroups to facilitate searching. However, because there are\ndiscrepancies between text annotation and model content, it\nmay still be difficult for users to locate suitable models. Like\nother media such as audio, images, and videos, there is a\nneed for an accurate and efficient content-based 3D model\nsearch engine. Content-based methods typically comprise\ntwo main processes: feature extraction and feature matching.\nFeature extraction concerns the use of compact features to\nrepresent a model, whereas feature matching computes the\nsimilarity of the extracted features using some distance\nfunctions. Since feature matching is time consuming when\nthe database is large, some indexing techniques may be\napplied to speed up the retrieval process.\nThere is a substantial amount ofworkdevoted tomatching\nand retrieving rigid geometry models efficiently and accu-\nrately. PrincetonUniversityhasdevelopedasearchengine [7]\nwhere benchmarking is also available [25]. The method\npresented here, however, targets another type of model: the\ndeformable model, that is, models with similar skeletons but\ndifferent postures. There are many tools and methods for\ncreating these models. Notable examples include [13] and\n[24]. To support deformable models, a retrieval system\nshould be able to classify, for example, a sitting human\nmodel as similar to a standing one. There are only a few\nmethodsproposed todo this. They typically extract graphlike\nfeatures to represent a model and local geometric features to\ndescribe each node of the graph.However, graphmatching is\ncomputationally expensive.\nIn this paper, we propose a new matching methodology,\nemphasizing accuracy and speed. It computes both topolo-\ngical and geometric features to represent a model and uses\nboth features together for feature matching. To accelerate the\nmatching process, we intentionally throw away all skeletal\ngraph information and convert the matching problem to an\nEarth Mover Distance (EMD) formulation, which measures\nthe energy transfer between two signatures. The contribu-\ntions of this work can be summarized as follows:\n. To avoid using slow graph matching algorithms and\nto keep the feature size small, we propose to extract\ntopological points and rings as features to represent\nthe 3D models. This representation is compact and\ncan significantly reduce the matching cost.\n. To discriminate models with similar or dissimilar\nskeletons, we stress using both local and global\ngeometric features. These features help discriminate\ndifferent model groups that have similar skeletons,\nlike girls and babies. (We refer to these models as\nsimilar-skeleton models hereafter.) Existing methods\nuse only local geometric features for matching. They\nwork best to discriminate model groups with dissim-\nilar skeletons, like dogs and men. (We refer to these\nmodels as dissimilar-skeleton models hereafter.)\n. We formulate the feature-matching problem as a flow\nand transportation problem and propose a new\nsimilarity measure based on EMD. As this similarity\nmeasure is ametric,wecanbuildavantagepoint (VP)-\ntree to answer retrieval queries efficiently byk-nearest\nneighbor search. To the best of our knowledge, our\nindexing scheme is the first to support matching of\nboth topological and geometric features in one pass.\n470 IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS, VOL. 13, NO. 3, MAY\/JUNE 2007\n. The authors are with the Department of Computer Science, University of\nDurham, E-Science Building, Science Laboratories, South Road, Durham,\nCounty Durham, DH1 3LE, United Kingdom.\nE-mail: {g.k.l.tam, rynson.lau}@durham.ac.uk.\nManuscript received 8 Aug. 2005; revised 11 June 2006; accepted 1 Nov. 2006;\npublished online 8 Jan. 2007.\nFor information on obtaining reprints of this article, please send e-mail to:\ntvcg@computer.org, and reference IEEECS Log Number TVCG-0102-0805.\nDigital Object Identifier no. 10.1109\/TVCG.2007.1011.\n1077-2626\/07\/$25.00 \u0002 2007 IEEE Published by the IEEE Computer Society\nAuthorized licensed use limited to: University of Durham. Downloaded on October 8, 2008 at 09:22 from IEEE Xplore.  Restrictions apply.\nThe rest of this paper is organized as follows: Section 2\nsummarizes the existing 3D model matching and retrieval\ntechniques. Section 3 presents an overview of our method.\nSections 4 and 5 discuss how we extract topological and\ngeometric features, respectively. Section 6 presents our\nfeature-matching scheme. Section 7 evaluates the perfor-\nmance of our method through a number of experiments.\nSection 8 briefly concludes this paper.\n2 RELATED WORK\nClassical 3D retrieval methods can be categorized into four\napproaches: geometry-based, transform-based, image-\nbased, and topology-based. The first three methods can\nonly handle nondeformable models, whereas the fourth can\nhandle deformable models.\n2.1 Methods for Nondeformable Geometry Models\nGeometry, transform, and image-based approaches focus on\nretrieving nondeformable 3D models only. The geometry-\nbased approach concerns properties related to the shape and\nsize of a model. In general, methods of this approach can be\nclassified into three types: methods based on extracting\nphysical properties [12], [5], methods based on computing\nhistograms or some distribution functions [18], [20], [10], and\nmethods based on computing energy for morphing a model\n[2], [28], [30]. The transform-based approach analyzes\n3D models in a different feature domain. Transformation\nfunctions used include Fourier Transform [29], Wavelets\nTransform [21], and Zernike Transform [17]. Funkhouser et\nal. [7],Kazhdanet al. [11], andNovotni andKlein [17]propose\nSpherical Harmonic for extracting rotation-invariant fea-\ntures. The image-based approach captures features from\n2D image views of a 3D model [1], [19].\nGenerally, the geometry-based approach is efficient and\neasy to implement, but itsmatching accuracy is usually lower\nthan the other two approaches. The transform-based ap-\nproach has several advantages such as supporting multi-\nresolution analysis and having improved accuracy with the\nrecent development in concentric spherical harmonic. A\nmajor advantage of the image-based approach is its indepen-\ndence from 3Ddata representation. However, it typically has\na large feature size and, hence, high matching cost.\n2.2 Methods for Deformable Geometry Models\nThe topology-based approach is the only approach that\nsupports matching of deformable models through analyz-\ning the model with skeletal or topological information. As\nthis approach is the focus of our work, we discuss these\nmethods in detail here. In [9], the Multiresolution Reeb\nGraph (MRG) is proposed. It first partitions a model into\nnodes using integral geodesic at different resolutions.\nUnlike Euclidean distance, geodesic measures distances\non the surface and is not affected by model deformation.\nThus, integral geodesic indicates how far a point is from the\nsurface center. (We discuss this further in Section 4.1.) MRG\nthen constructs an MRG tree by analyzing the adjacency of\neach node in the current and lower\/higher resolutions. In\neach node, it uses area and length as geometric features. To\nmatch two MRG trees, a heuristic graph-matching algo-\nrithm is applied in a coarse-to-fine manner, starting from\nthe root nodes of the two trees and traversing down the\ntrees following the child nodes with maximum similarity.\nWhen all high-resolution nodes are exhausted, the matching\nprocess traces back to the lowest resolution nodes again. All\nsimilarity values computed are added up as the final\nsimilarity value.\nIn [23], a voxel thinning method is proposed to extract\nthe skeleton from a voxelized model. In each skeletal node,\nthe radial distribution of edges is preserved for local shape\nmatching. To speed up the query process, a topological\nfeature vector is generated for each skeletal graph as an\nindex to the database. Nearest neighbor search is then\napplied for model retrieval. To further verify the correctness\nof the retrieved models, an enhanced maximum cardinality\nminimum weight bipartite matching algorithm is used.\nInstead of using the skeletal graph, [26] analyzes models\nbased on the component graph. A model is first split by\nmesh decomposition with each component node described\nby one primitive. An optimal error-correcting subgraph\nisomorphism algorithm is then applied to match two\ncomponent graphs.\nIn [8], a pose-oblivious shape signature is proposed,\nwhich supports deformable models. The shape descriptor is\na 2D histogram of two functions: local diameter and integral\ngeodesic (centricity). Experiments showed that the new\nmethod could produce interesting retrieval results.\nIn summary, topology-based methods handle deform-\nable models using skeletal information. However, several\nresearch issues have still not been explored yet. First,\nalthough most of these methods work well in discriminat-\ning dissimilar-skeleton models, none of them consider the\nissue of discriminating similar-skeleton models as they use\nonly local geometric features. Second, due to the large\nfeature size or the use of slow graph matching techniques\n[26], these methods are generally slow in practice and do\nnot scale well to large databases. Third, although [23]\nproposes an indexing scheme for large databases, it may\nstill suffer from the accuracy problem when answering\nnearest neighbor queries as it separates topological match-\ning and geometric matching into two processes. To improve\nthe recall rate, it needs to return a large number of models\nin the first pass, causing a performance penalty to the\nindexing scheme.\nTo address these problems, we proposed in [27] to use\nboth topological and geometric features simultaneously. It\nextracts bounded regions as topological features using\nsaddle critical points from two source points. As will be\ndiscussed later, these critical points may be unstable or\nextraneous, leading to stability problems. Here, we improve\nthe work significantly to address this problem by proposing\nto use topological points and rings as features. To support\nfast retrieval, we further extend the matching algorithm to\nsupport indexing search with both topological and geo-\nmetric features in a single pass.\n3 METHOD OVERVIEW\nThe focus of our method is on the use of both topological\nand geometric features at the same time. We extract two\ntypes of topological features: topological points and topologi-\ncal rings. A topological point is defined as the salient point\nTAM AND LAU: DEFORMABLE MODEL RETRIEVAL BASED ON TOPOLOGICAL AND GEOMETRIC SIGNATURES 471\nAuthorized licensed use limited to: University of Durham. Downloaded on October 8, 2008 at 09:22 from IEEE Xplore.  Restrictions apply.\nlocated at a protrusion tip, and a topological ring is defined\nas the border that separates two significant components in a\nmodel.\nTo capture topological points to represent protrusion tips,\nwe first derive our algorithm from a skeleton extraction\ntechnique Level Set Diagram (LSD) [14]. However, LSD\nsuffers from twoproblems: extraneous critical points [16] and\nslicing direction [15]. To alleviate these problems while\nremaining fast and automatic, we propose two solutions:\nCritical Point Analysis and Topological Point Selection, which\nare described in detail in Sections 4.3 and 4.4, respectively.\nThese two steps produce the validated maximum critical\npoints, referred to as topological points. To reduce computa-\ntion time, we further discuss how we select the minimum\ncritical points (source points) in Section 4.5. Our method also\nuse topological rings as features, which are first discussed in\n[15]. However, this method has its own limitations that make\nit impractical for our use. To extract reliable topological rings\nto represent joint locations, we propose Topological Ring\nExtraction in Section 4.6.Wenameour approach for extracting\nboth topological points and rings as Topological Point Ring\n(TPR) analysis.\nAfter obtaining all topological features (points and\nrings), we extract geometric features to characterize each\nof them. There are two kinds of geometric features in our\nmethod: local and global features. Local features include\nnormalized integral geodesic and effective area. They are\nused to characterize the locations and importance of a\ntopological feature, as will be discussed in Sections 5.1 and\n5.2, respectively. Global geometric features are used to\ncapture the surface information of a model. They help\ndiscriminate similar-skeleton models like girls and babies, as\nwill be discussed in Section 5.3. Hence, our model signature\nis defined by a collection of topological features and each of\nthem is characterized by a number of geometric features.\nWe formulate the matching of two models as the energy\ntransfer between two signatures by adapting the EMD,\nwhich computes the minimum energy required to trans-\nform one signature into another. We define our metric\ndistance function for the EMD matching framework in\nSection 6. Since the function is a metric, we can construct a\nfast indexing scheme by building a VP-tree. Such an\nindexing scheme can support both topological and geo-\nmetric nearest neighbor searches in one pass.\n4 TOPOLOGICAL POINT RING (TPR) ANALYSIS\nIn this section, we first briefly introduce integral geodesic\nand LSD, which are fundamental to our method. We then\ndiscuss the two problems of using LSD to extract maximum\ncritical points as the topological points and propose our\nmethods to tackle the two problems. Finally, we discuss\nhow topological rings can be extracted reliably based on\nthese topological points.\n4.1 Integral Geodesic\nGeodesic and integral geodesic are basic to our method.\nAs mentioned earlier, geodesic is the shortest distance\nbetween two points on a surface. Hilaga et al. [9] first\nsuggest the use of integral geodesic, which is defined on\na surface as G\u00f0q\u00de \u00bc Rp2S gq\u00f0p\u00de@S. Given a vertex q, integral\ngeodesic is the integral of all geodesics g measured from\nq to all vertices p on a surface S. In general, integral\ngeodesic gives a small scalar value if vertex q is near to\nthe center of the mesh (brighter region in Fig. 1) and a\nlarger scalar value if q is located away from the center\n(darker region in Fig. 1). Hence, integral geodesic\nindicates how far a vertex is from the points that have\nminimum integral geodesic. Note that a point with\nminimum integral geodesic is not the center of mass of\nthe model; the center of mass can be considered as the\nminimum integral Euclidean distance of a point set. In\nthe following discussion, we refer to the points having\nminimum integral geodesic as the surface centers. Fig. 1\nshows the integral geodesic of a surface.\n4.2 Level Set Diagram\nThe LSD [14], which is based on the Morse theory, is a\nskeleton extraction technique. The Morse theory describes\nhow the differential geometry of a surface algebraically\nrelates to the topology. LSD applies the theory on\npolyhedral surfaces to extract the skeletons. It uses\ngeodesics as the Morse function to build a scalar field on\nthe surface, which is then used to extract three kinds of\ncritical points (minima, saddles, and maxima) by tracing the\ngeodesic wavefront. A geodesic wavefront originates from a\nminimum point, meets itself at a saddle point, and closes at\na maximum point. These critical points form an LSD tree\nwith the minimum, saddle, and maximum points forming\nthe root, the internal nodes, and the leaf nodes of the tree,\nrespectively. LSD also defines a level set C\u00f0ls\u00de as a\npolygonal contour of the same level ls on the surface,\nwhere ls is a scalar field value and s is the origin of the field.\nAn edge \u00f0vi; vj\u00de is called a cross-edge if it passes through\nlevel set ls satisfying the condition: gs\u00f0vi\u00de < ls < gs\u00f0vj\u00de,\nwhere gs\u00f0v\u00de is the scalar field at vertex v obtained by\ncalculating the geodesic from a minimum (source) point s.\nLSD uses the Dijsktra algorithm to approximate the\ngeodesic distance.\n4.3 Critical Point Analysis\nAs mentioned, our topological features are composed of\ntopological points and rings. We choose the maximum\ncritical points from LSD as the topological points because\nthe location of maximum critical points matches the\ndefinition of topological points discussed in Section 3.\nThough it is easy to apply LSD, there are two problems that\nhinder us from using it directly here: extraneous critical\npoints and slicing direction.\nShortest path algorithms usually suffer from getting\nextraneous critical points when they are applied on meshes.\nAs LSD is based on computing shortest path distances\n(geodesics), it also suffers from this problem. According to\n472 IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS, VOL. 13, NO. 3, MAY\/JUNE 2007\nFig. 1. Integral geodesic on a surface. The brighter region is closer to the\nsurface center, whereas the darker regions are farther away from the\nsurface center.\nAuthorized licensed use limited to: University of Durham. Downloaded on October 8, 2008 at 09:22 from IEEE Xplore.  Restrictions apply.\n[16], extraneous critical points may result from noise,\nprecision errors, or the fact that geodesic distance is not a\ngoodMorse function. Though [16] provides a method to find\nthe optimal number of critical points, it is not fully automatic,\nmaking it less suitable for use in a 3Dmodel search engine. To\nalleviate this problem, we propose an efficient method based\non LSD. We observe that extraneous points arise during the\nregistration of saddles, producing critical points that are very\nclose to each other. As such, we apply a proximity-filtering\nstep before a saddle is registered. We refer to the modified\nLSD as Critical Point Analysis.\nBefore we register a vertex v as a saddle in LSD, we\napproximate the level set C\u00f0ls\u00de by defining a vertex set\nC\u00f0ls\u00de\u00fe \u00bc [vj such that ls < gs\u00f0vj\u00de for all cross-edges \u00f0vi; vj\u00de\nrelated to ls \u00bc gs\u00f0v\u00de. The set contains the unvisited vertices\nadjacent to the geodesic wavefront in LSD. It can be\nobtained by a depth first search algorithm on the Dijsktra\nheap. We do not compute C\u00f0ls\u00de because of speed concerns.\nAs v is a saddle candidate, the geodesic wavefront meets\nitself at v; so, the vertex set C\u00f0ls\u00de\u00fe can be split into a\ncollection of cycles depending on the sign change around v,\nC\u00f0ls\u00de\u00fe \u00bc Cycle1 [ Cycle2 . . . [ Cyclen. Fig. 2 shows an ex-\nample where C\u00f0ls\u00de\u00fe has three cycles.\nIn our filtering step, we consider a cycle,Cyclei, as valid if\nand only if the number of vertices inside is greater than a\nnumbern,wheren indicates howstrong the filtering step is. If\nthe number is small, it allows a smaller distance between\nadjacent critical points. In our case, we choose n \u00bc 1 because\nwe do not want to miss small features for our feature-\nmatching step. Then, by considering the number of valid\ncycles around a saddle candidate, we further decide if the\nregistration is a success or not. Table 1 and Fig. 3 explain the\nconsiderations and subsequent actions. Fig. 4 shows an\nexample to compare LSD and Critical Point Analysis. The two\ndiagrams are generated using geodesic as the scalar field.\n4.4 Topological Point Selection\nAnother problem of LSD is the slicing direction problem.\nWhen a different source point is chosen, a different set of\ncritical points may be extracted [15]. Consider Fig. 4; LSD\nidentifies a source point at the horse nose and extracts many\ncritical points from the back of the model. However, if the\nsource pointwere located at the bottomof one of the rear legs,\nLSD would extract critical points from the front neck of the\nhorse. To tackle this stability problem, we introduce the idea\nof using multiple source points and derive Topological Point\nSelection as a process for selecting valid topological points.\nSuppose that we have n source points, s1 . . . sn, on the\nsurface. We apply Critical Point Analysis on each of these\nn source points to obtain n critical points sets, each consisting\nof three kinds of critical points: CriticalSetsi \u00bcMaxi [\nSaddlei [Mini. Maxi and Saddlei are the sets of maximum\nand saddle points, respectively. The minimum pointMini \u00bc\nsi is the source point.\nOur Topological Point Selection then identifies valid\ntopological points by counting the number of different\nmaximum points in a region. First, for each maximum point\nm in Maxi, we search for the number of maximum critical\npoints nearby. The search radius is set to the geodesic\ndistance measuring from point m to the nearest saddle\nTAM AND LAU: DEFORMABLE MODEL RETRIEVAL BASED ON TOPOLOGICAL AND GEOMETRIC SIGNATURES 473\nFig. 2. C\u00f0ls\u00de\u00fe and its three cycles, which are shown as dotted lines.\nTABLE 1\nSummary of Critical Point Analysis during Saddle Registration\nFig. 3. Selection of saddles in Critical Point Analysis.\nFig. 4. Comparison of LSD and our method.\nAuthorized licensed use limited to: University of Durham. Downloaded on October 8, 2008 at 09:22 from IEEE Xplore.  Restrictions apply.\nwhich may exist in any Saddlei. If the number of maximum\npoints in the search region is higher than n=2, that is, more\nthan half of the source points produce maximum points in\nthe region, we consider it as a valid maximum point. We\nrepeat this for all unvisited m in Maxi, i \u00bc 1 . . .n. Since\nthere may be many maximum critical points in a region, we\narbitrarily choose one of them as the topological point. Note\nthat the actual location of a topological point is not\nimportant as it is used for feature representation only.\n4.5 Source Point Selection\nTo perform Topological Point Selection, a number of source\npoints must be selected. We have found from experiments\nthat three source points, if selected appropriately, are\nsufficient to identify all valid topological points with\nminimal computational cost. We choose the two furthest\npoints in a 3D mesh as the source points. The first point can\nbe found by running Dijkstra on an arbitrary point on the\nmodel to obtain the point with maximum geodesic. The\nsecond point can then be determined by applying Dijkstra\nagain on the first point to obtain another point with\nmaximum geodesic [14]. However, since they are located\nat the far end of a model, LSD may still favor a particular\ndirection and miss some critical points. Thus, we choose the\nthird source point near the center of a mesh. A good choice\nis the surface center that we have discussed earlier in\nSection 4.1.\nIn [9], an approximation method is proposed to find the\nsurface center, but it is too slow for a search engine as it\nsamples at least 120 points on the surface. We observe that\nmost deformable models are not perfectly symmetric after\ndeformation and, usually, there is only one point that\ncorresponds to the minimum integral geodesic. To speed up\nthe process,we apply a hierarchical search to locate the point.\n(Note that our method still works even if there is more than\none such point in a mesh as we only need to find a reference\npoint.) In ourhierarchical search,we first split the surface into\nmany patches. For each patch, we calculate the integral\ngeodesic at the patch center. We then identify the patch with\nthe smallest integral geodesic. We split it again into many\nsubpatches and calculate the integral geodesic at each\nsubpatch center. We apply this strategy recursively until the\nchange in the smallest integral geodesic is less than a\nthreshold or the patch area is too small. Fig. 5 shows the\ntopological points obtained from Topological Point Selection\nand the LSD tree constructed using Critical Point Analysis\nwith the surface center s being the source point.\n4.6 Topological Ring Extraction\nThe term \u201cTopological Ring\u201d is first mentioned in [15].\nGiven some initial points, the method applies topological\nexpansion of a 1-ring neighborhood. When frontiers of\ndifferent topological expansions collide, a branching is\nidentified. Mortara and Patane [15] defines the borders of\nthese frontiers as topological rings. However, as its objective\nis on skeleton extraction, the topological rings produced are\nnot suitable to be used as features here for two reasons.\nFirst, the topological expansion in [15] depends on a 1-ring\nneighborhood only. To extract topological rings reliably for\nuse as features, a regular tessellation of the mesh surface is\nrequired. Second, the method processes all source points at\nthe same time and, thus, the locations of topological rings\ngreatly depend on the differences in branch lengths. For\ngeneral 3D models, these two requirements may be difficult\nto satisfy. Hence, the method cannot ensure consistent\nrecovery of topological rings.\nHere, we propose our Topological Ring Extraction to\naddress this problem. Our method features a multisource\npoint approach. It is modified from the Dijkstra algorithm,\nwhich approximates geodesic distances. Since our topologi-\ncal expansion is basedon shortest pathgrowing insteadof a 1-\nring neighborhood, it does not require regular tessellation of\nthe mesh surface. In addition, different source points are\ngiven different initial values. This allows more stable\nextraction of topological rings with no regard for branch\nlengths. Our method comprises three stages: initialization,\nshortest path algorithm, and termination. The initialization\nstage defines different initial values for different topological\npoints. Our shortest path algorithm then traces the geodesic\nwavefronts from these topological points using the corre-\nsponding initial values. When executing the algorithm,\ndifferent wavefronts merge and newwavefronts are formed,\nwhich become the topological rings.When all frontiersmerge\ninto one, the algorithm terminates. The details of these three\nstages are discussed as follows.\n4.6.1 Initialization\nIn this stage, we determine an initial value for each\ntopological point such that topological rings may collide\nnear joint locations. We assign a smaller initial value to a\ntopological point that is far away from the mesh center and\na larger value to one that is near the mesh center. This initial\nvalue is the starting time of the shortest path algorithm for\nthat point. Since all topological points are located far away\nat protrusion tips, these initial values ensure that the\nshortest path algorithm is always moving toward the center.\nWe use the surface center to approximate the mesh center.\nBecause integral geodesic is a good measure of the relative\ndistance from the surface center, o, we compute the initial\nvalue of a topological point m based on the following:\nMAXq2Sgo\u00f0q\u00de \u0002 MAXq2SG\u00f0q\u00de \u0003G\u00f0m\u00de\nMAXq2SG\u00f0q\u00de \u0003MINq2SG\u00f0q\u00de : \u00f01\u00de\nThis initial value of m is calculated by the maximum\ngeodesic MAXq2Sgo\u00f0q\u00de measured from o, which is the\nlongest possible distance that the shortest path algorithm\ntravels and is interpolated by integral geodesic G\u00f0m\u00de.\n474 IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS, VOL. 13, NO. 3, MAY\/JUNE 2007\nFig. 5. Selection of topological points.\nAuthorized licensed use limited to: University of Durham. Downloaded on October 8, 2008 at 09:22 from IEEE Xplore.  Restrictions apply.\n4.6.2 The Shortest Path Algorithm\nAfter defining the initial values for the topological points,\nwe put these points in the heap of a Dijsktra algorithm. By\nusing Dijsktra, the topological expansion is, in effect, a\nshortest path algorithm. During the execution, the vertex\nwith the smallest initial value is removed from the heap one\nat a time and its neighbors are updated. Hence, we may\nconsider that different geodesic wavefronts grow from\ndifferent topological points and are moving toward the\nmesh center. When executing the algorithm, if two geodesic\nwavefronts meet, a merge of geodesic wavefronts occurs\nand a new wavefront is formed.\nWithout loss of generality, we consider here a typical\ncase where two geodesic wavefronts meet at vertex v. We\ndefine two vertex sets C\u00f0lsa\u00de\u0003 and C\u00f0lsb\u00de\u0003 to represent them,\nwhere lsa and lsb are the two level sets that originated from\ntwo distinct source points sa and sb. If we let gsa\u00f0v\u00de and\ngsb\u00f0v\u00de be the scalar fields that originated from sa and sb,\nrespectively, we have gsa\u00f0v\u00de \u00bc gsb\u00f0v\u00de at vertex v. We also\ndefine C\u00f0ls\u00de\u0003 \u00bc\nS\nvi such that ls > gs\u00f0vi\u00de for all cross-edges\n\u00f0vi; vj\u00de related to ls, where ls \u00bc gs\u00f0v\u00de and s is the source\npoint. C\u00f0ls\u00de\u0003 refers to the vertices that form the geodesic\nwavefronts at v and are stored in the heap of the Dijsktra\nalgorithm. We further define C\u00f0l<sa;sb>\u00de\u0003 as the resulting\ngeodesic wavefront of merging C\u00f0lsa\u00de\u0003 and C\u00f0lsb\u00de\u0003 as\nshown in Fig. 6. Note that, in practice, gsa\u00f0v\u00de may differ\nslightly from gsb\u00f0v\u00de at v as the initial values are only\napproximations. However, the small difference will not\naffect the shortest path algorithm.\nWe mentioned earlier that topological rings are regis-\ntered when geodesic wavefronts meet. However, redundant\ntopological rings may sometimes be created. For example,\nin Fig. 6, we would expect to have three rings located at the\nthree joints between the arm and the fingers as shown\ninside the square box. Hence, C\u00f0l<s1;s2>\u00de\u0003 is redundant. To\ndetect this case, we check if a geodesic wavefront is a valid\ntopological ring by measuring the length of the region\nformed. We first define Region() and Length() as follows:\nRegion\u00f0C\u00f0l<sa;sb>\u00de\u0003\u00de \u00bc q\n\u0002\u0002\u0002\u0002\u0002\ngsa\u00f0q\u00de < l<sa;sb>\nor\ngsb\u00f0q\u00de < l<sa;sb>\n8><\n>:\n9>=\n>;\n\u0003Region\u00f0C\u00f0lsa\u00de\u0003\u00de \u0003Region\u00f0C\u00f0lsb\u00de\u0003\u00de;\n\u00f02\u00de\nwhere Region\u00f0C\u00f0ls\u00de\u0003\u00de \u00bc fqjgs\u00f0q\u00de < lsg for all q in S. Here,\nwe define a region associated with a geodesic wavefront as\nall the vertices that have scalar field g less than the level set\nat the wavefront except those already registered in other\nregions. The scalar field should be measured according to\nall the possible source points sa and sb. Since a wavefront\nmay be originated from a merge of two rings, (2) is defined\nas a recursive function. The length of a region is defined as\nthe minimum difference between the level set values of the\ncurrent geodesic wavefront and each of the originating\ntopological rings:\nLength\u00f0C\u00f0l<sa;sb>\u00de\u0003\u00de \u00bcMinimumf\u00f0l<sa;sb> \u0003 lsa\u00de;\n\u00f0l<sa;sb> \u0003 lsb\u00deg:\n\u00f03\u00de\nTo check whether a geodesic wavefront is a valid\ntopological ring, we simply check if the length of the region\nis longer than a given threshold. All valid geodesic\nwavefronts are marked as topological rings.\n4.6.3 Termination of the Algorithm\nThe algorithm terminates when all geodesic wavefronts\nhave merged into one. However, we note that, when we\nhave visited all saddle points obtained from Critical Point\nAnalysis using the surface center as the source point, there\nshould be no more branching left and the algorithm may\nend. The unvisited vertices or vertices that are visited but\nnot yet included in any region are grouped into one final\nregion (FR). Fig. 7 shows some example models with\nvarious topological rings extracted using our algorithm.\nTAM AND LAU: DEFORMABLE MODEL RETRIEVAL BASED ON TOPOLOGICAL AND GEOMETRIC SIGNATURES 475\nFig. 6. Shortest path growing and validation with three topological points.\nFig. 7. Topological rings (borders between different colored regions).\nAuthorized licensed use limited to: University of Durham. Downloaded on October 8, 2008 at 09:22 from IEEE Xplore.  Restrictions apply.\n5 GEOMETRIC FEATURE EXTRACTION\nAfter TPR analysis, we obtain a set of topological points and\nrings together with a set of regions. These topological points\nand rings are located at protrusion tips and articulated\njoints. They provide skeletal information of the model,\nindependent of model deformation. We characterize each of\nthese topological features with three types of geometric\ninformation: Normalized Integral Geodesic, Effective Area,\nand Geometric Surface Vector.\n5.1 Normalized Integral Geodesic\u2014Spatial\nInformation\nIntegral geodesic is a function defined over the surface to\nindicate how far a point is from the surface center. It maps a\npoint to a scalar value and is thus a good feature to describe\nthe spatial location of a topological point. To generalize this\nfunction to any topological feature (point or ring), we need\nto consider the case of the topological ring as well. To\ncompute the integral geodesic for a ring, we interpolate the\nvalue from the integral geodesic of the surface center and\nthe value of one of the originating topological points of the\nring. Since a ring may come from many originating\ntopological points, we use the one that is furthest away\nfrom the ring, which is the ancestor topological point as its\ndistance from each vertex on the ring has a smaller\ndeviation. The interpolation requires two distance values:\nfrom the ring to the surface center and to the ancestor\ntopological point. To compute these distances, we use\ngeodesics with respect to a vertex set \u00f0vs\u00de. Such distance,\nwhich is denoted as gvs, can be calculated by Dijsktra with\nall the vertices in the ring as source points. The generalized\nIntegral Geodesic G0\u00f0U\u00de of topological feature U is as\nfollows:\nG0\u00f0U\u00de \u00bc\nif U is a topological point :\nG\u00f0U\u00de\nif U is a topological ring :\ngvs\u00f0o;U\u00de\u0002G\u00f0w\u00de\u00fegvs\u00f0w;U\u00de\u0002G\u00f0o\u00de\ngvs\u00f0o;U\u00de\u00fegvs\u00f0w;U\u00de ;\n8><\n>:\n\u00f04\u00de\nwhere G\u00f0v\u00de is the integral geodesic of point v. gvs\u00f0o; U\u00de and\ngvs\u00f0w;U\u00de are the shortest distances measured from topolo-\ngical ring U to surface center o and to ancestor topological\npoint w, respectively. Finally, we calculate the Normalized\nIntegral Geodesic as follows:\nG0norm\u00f0U\u00de \u00bc\nG0\u00f0U\u00de \u0003MINq2SG\u00f0q\u00de\nMAXq2SG\u00f0q\u00de \u0003MINq2SG\u00f0q\u00de : \u00f05\u00de\n5.2 Effective Area\u2014Weights of Importance\nWe note that the importance of a topological ring located in\na finger, for example, should be smaller than that located in\nthe leg. This is intuitive as removing a leg from a 3D model\ngives a larger perceptual impact than removing a finger.\nHence, we approximate the importance of topological\nfeatures by distributing the local surface areas among the\nadjacent topological features. We denote such a redistrib-\nuted area as the Effective Area.\nTo simplify our discussion, we first define some abbrevia-\ntions. A Protrusion Region (PR) is a region bounded by a\ntopological point and a topological ring. A Segment Region\n(SR) is a region bounded by topological rings only. An FR, as\nmentioned in Section 4.6.3, is the final extracted region. We\nconsider two cases in our method:\n. PR. Simply divide the PR surface area into two and\nassociate half to the point and half to the ring.\n. SR and FR. Distribute the local surface area to the\nadjacent topological rings in proportion to\nRegion\u00f0C\u00f0ls\u00de\u0003\u00de computed for each adjacent ring\nC\u00f0ls\u00de\u0003.\nNote that:\nX\nEffectArea\u00f0U\u00de\n\u00bc\nP\nArea\u00f0PR\u00de \u00fePArea\u00f0SR\u00de \u00feArea\u00f0FR\u00de\nArea\u00f0S\u00de \u00bc 1:\n\u00f06\u00de\n5.3 Geometric Surface Vector\u2014Surface Distribution\nIn order to better discriminate similar-skeleton models, we\ncapture additional geometric information to describe the\nglobal surface change. We consider three global geometric\nfeatures: curvature, area, and average distance. We con-\nstruct three vectors from these features by first dividing the\nmodel into many bands according to their geodesic\ndistances from a given topological feature. Again, since\ngeodesic is calculated on the surface, the resulting feature\nvector is stable toward mesh deformation. As an example,\nwe divide two dog models shown in Fig. 8 into geodesic\nbands relative to a topological ring located at one of the\nlegs. Bands of the same color indicate that they are within\nthe same geodesic interval from the ring. We can see that,\nalthough the two dogs have different poses, the locations of\nthe color bands are similar.\nSometimes, a single band may be composed of several\nsegments. For example, some color bands in Fig. 8 may\nhave segments at different locations like the body, the\nlimbs, and the tail. We apply depth first search to locate all\nsegments of each band. We then use the surface area of each\nsegment to compute the weighted average to be the final\nvalue of that band. In our implementation, we use Gaussian\ncurvature to be the curvature information. The average\ndistance of a segment is defined as the average Euclidean\ndistance from its center of mass to all vertices in the\nsegment. In general, area and curvature are used to capture\nthe global surface change, whereas average distance\nmeasures the thickness of individual segments.\n6 FEATURE MATCHING\nWith a signature for each model, that is, a set of topological\nfeatures (points or rings) each described by three types of\ngeometric features, we may compare the similarity of\ndifferent models based on matching the signatures.\n476 IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS, VOL. 13, NO. 3, MAY\/JUNE 2007\nFig. 8. Models divided into 20 bands from topological rings (dashed\nlines).\nAuthorized licensed use limited to: University of Durham. Downloaded on October 8, 2008 at 09:22 from IEEE Xplore.  Restrictions apply.\n6.1 Simliarity Measure\nTo compare the similarity of two signatures, we propose to\nuse EMD [22] as a distance measure. EMD computes the\nminimum energy required to transform one point set to\nanother. Each point in the set has a mass (weight) and\nrequires some energy to transfer to another location. In our\napproach, we consider a topological feature as an EMD\npoint and define Effective Area as weight. To describe the\nenergy transfer between two EMD points, we further define\na distance function Dist\u00f0\u00de based on geometric features as\nfollows:\nDist\u00f0U1; U2\u00de \u00bcW1 \u0002 jG0norm\u00f0U1\u00de \u0003G0norm\u00f0U2\u00dej\n\u00feW2 \u0002 L2;norm\u00f0K\u00f0U1\u00de; K\u00f0U2\u00de\u00de\n\u00feW3 \u0002 L2;norm\u00f0A\u00f0U1\u00de; A\u00f0U2\u00de\u00de\n\u00feW4 \u0002 L2;norm\u00f0H\u00f0U1\u00de; H\u00f0U2\u00de\u00de;\n\u00f07\u00de\nwhere G0norm is the Normalized Integral Geodesic.K, A, and\nH are the geometric surface vectors representing curvature,\narea, and average distance, respectively, and they implicitly\ncapture different branch arrangements relative to a topolo-\ngical feature. Hence, G0norm, K, A, and H together describe\nthe spatial location of the topological feature. W1, W2, W3,\nand W4 are ratios such that W1 \u00feW2 \u00feW3 \u00feW4 \u00bc 1. We\nuse these weights to adjust the relative importance of G0norm,\nK, A, and H. By using EMD, we can now avoid slow graph\nmatching algorithms by converting the matching problem\nto a flow and transportation problem.\n6.2 Indexing Scheme\nIn content-based retrieval, we typically expect the system to\nreturn a given number of objects that are most similar to a\ngiven query\u2014k-nearest neighbor search (k-NNS). To speed\nup the retrieval process, it is common to apply an indexing\nscheme. Here, we discuss how our similarity measure can\nbe used for indexing retrieval.\nSince our model signature is not a single k-dimensional\nvector, but a set of topological features characterized by\nmany geometric features, we need to use a distance-based\nindexing method. We use a VP-tree as it is such a method\nand has been reported to have good performance over\nothers [6]. A VP-tree stores all the indexing data points in a\ntree. By comparing from the root nodes and level by level\ndown the tree, it may return the nearest neighbors of a\ngiven query. A distance-based indexing method generally\nrequires a distance function that satisfies metric properties.\nOur method is based on the EMD framework, which can be\nproven a true metric if it satisfies the following properties\nunder EMD formulation [22]:\n. The sum of all feature weightings for each model\nshould be the same.\n. The ground distance function used by EMD must be\na metric.\nOur algorithm satisfies the first property because we use\nthe normalized Effective Area as the weight, as shown in (6).\nIt is also clear thatDist\u00f0\u00de, shown in (7), is a metric because it\nonly makes use of ratio combination of metric functions.\n7 EXPERIMENTAL RESULTS\nTo evaluate the performance of the proposed retrieval\nmethod for deformable models, we discuss a number of\nexperiments here. We have constructed a database from\n150 models for these experiments. To test the invariant\nproperties of our method in rotation and scaling, we create\nthree additional sets by rotating the 150 models against the\nxy-axis, random scaling between (1.0, 2.0], and rotating by\nthe yz-axis plus random scaling to produce a total of\n600 models. We then manually categorize these models into\n13 groups as shown in Fig. 9. Each group consists of similar\nmodels but at different postures. All the experiments\npresented here are performed on a PC with a Pentium 4\n2.4-GHz CPU and 1-Gbyte RAM.\n7.1 Performance on Model Discrimination\nTables 2 and 3 show some matching results, using all\nmodels and normalized by maximum and minimum work\ndone. We can see that our method can distinguish models\nbased on their skeletons and shapes. In Table 2, man, frog,\nand dolphin have dissimilar skeletons. Our method can\ndiscriminate them as the similarity values among different\nmodel groups are relatively small. In Table 3, man, girl, and\nbaby are model groups with similar skeletons. Our method\nagain can discriminate them as the similarity values among\ndifferent model groups, but are still comparatively small;\nalthough, they are slightly larger than those in Table 2.\nThese two sets of results match human intuition well.\n7.2 Performance Comparison with\nNontopology-Based Methods\nFig. 10 shows the precision-recall graph of our method\ncompared with some nontopology-based methods. It shows\nTAM AND LAU: DEFORMABLE MODEL RETRIEVAL BASED ON TOPOLOGICAL AND GEOMETRIC SIGNATURES 477\nFig. 9. The 13 model groups in our model database.\nTABLE 2\nMean Similarity of Dissimilar-Skeleton Models\nTABLE 3\nMean Similarity of Similar-Skeleton Models\nAuthorized licensed use limited to: University of Durham. Downloaded on October 8, 2008 at 09:22 from IEEE Xplore.  Restrictions apply.\nthat our method outperforms the geometry-based D2\nmethod [20] (feature size: 72) and the transform-based\nFourier method [29] (feature size: 21). From the plot, we\nmay conclude that our method is capable of handling\ndeformable models, whereas the D2 and Fourier methods\nare incapable as their precisions drop dramatically when\nthe recalls rise over 0.1.\n7.3 Performance Comparison with MRG\n(Topology-Based Method)\nTopology-based methods are generally difficult to imple-\nment as they require specific skeletal tree construction and\ngraph matching techniques. To study the performance of\nthe new method as compared to existing ones, we have\nimplemented the MRG method [9] for comparison. We have\nchosen to implement MRG because both MRG and TPR\nmake use of geodesic distance, and we have all the\nnecessary information to reimplement MRG. In our experi-\nments, we compare the performance of TPR with MRG in\nterms of accuracy and speed.\n7.3.1 Accuracy Comparison\nThe similarity matrix can be used to serve as a measure of\nmatching performance among topology-based methods.\nBecause of the large number of models in our database\nand due to page limitation, Fig. 11 only shows the mean\nsimilarity matrices of TPR and MRG. Each cell in the matrix\nindicates the similarity of two model groups\u2014the darker a\ncell is, the higher the similarity of the two corresponding\ngroups. The similarity values shown are normalized by the\nmaximum and minimum values of the corresponding\ngroups.\nFrom the similarity matrices, we have the following\nobservations:\n1. The diagonal lines of both matrices give the darkest\ncolor. This means that both TPR and MRG perform\nequally well in identifying models of the same\ngroup.\n2. TPR gives lower similarity values than MRG in the\ntwo regions circled by solid lines. These regions\nshow the similarity among different model groups\nwith dissimilar skeletons. This means that TPR can\ndiscriminate dissimilar-skeleton models better.\n3. TPR also gives lower similarity values in the four\nregions circled by dashed lines. These regions show\nthe similarity among different model groups with\nsimilar skeletons. We can see that TPR can dis-\ncriminate hand from horse, wolf, dog, and cat with\nhigher similarity contrast. Although MRG considers\ncat to be similar to dolphin and dino, TPR can\ndiscriminate them better and considers cat to be\nsimilar to dog and wolf, which matches human\ninspection. This means that TPR can discriminate\nsimilar-skeleton models better.\nTo explain these observations, we may analyze the\nfeatures used by TPR and MRG. First, though our database\ncontains many models of different postures, both methods\ncan identify models of the same groups with highest\nsimilarity. This can be explained by the fact that they are\nboth topology-based methods.\nSecond, TPR gives a higher similarity contrast than MRG\nto dissimilar-skeleton models. This can be explained by the\nuse of topological and geometric features in TPR. In MRG,\nthe models are partitioned into regular intervals and\nmatched. Since intervals are regular, it cannot tell how\nimportant a branch or limb is when compared with others.\nTo match two nodes, only local geometric features like area\nand length are used in MRG.\nIn our third observation, TPR can discriminate similar-\nskeleton models better. For MRG, the similarity measure is\nbased on matching multiresolution reeb graphs. With\nsimilar-skeletonmodels, the differences can only be captured\nat the lowest level of the graphs using local geometric\nfeatures, area, and length. These features are local and do not\nrepresent the overall shape of the model. As a result, MRG is\nless effective on these models. Although TPR represents\nsimilar-skeleton models by the same number of topological\nfeatures, it captures the overall shape of the models by the\n478 IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS, VOL. 13, NO. 3, MAY\/JUNE 2007\nFig. 10. Performance comparison of TPR with other methods.\nFig. 11. Mean similarity matrices for TPR and MRG.\nAuthorized licensed use limited to: University of Durham. Downloaded on October 8, 2008 at 09:22 from IEEE Xplore.  Restrictions apply.\nglobal geometric features and weights. For example, dog,\nwolf, cat, horse, and dino are four-legged animals with tails,\ndolphinhas four side fins andaback fin, and thehandhas five\nfingers. It is difficult to discriminate them if we consider only\ntopological and local geometry information, as in MRG.\nAlthough the mean similarity matrix shows the relative\nsimilarity among model groups, it cannot show the actual\nretrieval performance. If the range of maximum and\nminimum similarity values within one particular model\ngroup overlaps with those of the others, the precision-recall\nvalues may drop due to the increase in mismatches. This is\na general phenomenon when the database contains many\nmodel groups. To compare the actual retrieval performance\nof TPR with MRG, we have plotted their mean precision-\nrecall values. In Fig. 10, we can see that TPR and MRG have\nsimilar performance when recall is below 0.3. When recall is\nabove 0.3, the precision of MRG begins to drop more\nsignificantly compared with that of TPR. To further\ncompare the performance of the two methods, we have\nalso plotted the precision-recall graph for each model\ngroup. Fig. 12 shows some of them. We observe that TPR\nperforms better than MRG for model groups like dog, wolf,\nraptor, dinopet, baby, girl, man, dino, and dolphin or\nequally well as MRG for model groups like hand, frog, cat,\nand horse.\nFrom these graphs, we notice that TPR outperforms\nMRG particularly on similar-skeleton models such as\ncanines (dog, wolf), cannibal dinosaurs (raptors, dinopet),\nand humans (baby, girl, man). These models have similar\nskeletons that cause MRG to drop in performance. By also\nconsidering the global geometric features, TPR performs\nsignificantly better. For example, in the case of baby and\ngirl, the arms, legs, and bodies of girl are relatively longer\nthan those of baby, and in the case of dog and wolf, the\nbodies and ears of wolf are fatter and sharper, respectively,\nthan those of dog. All of these differences affect the weights\nand distributions of area, curvature, and average distance in\nTPR. We also notice that both TPR and MRG perform well\non hand, frog, cat, and horse. This indicates that the range\nof maximum and minimum similarity values of one model\ngroup does not overlap with those of the other model\ngroups. This is because their shapes are comparatively\nunique in our database. As a result, both TPR and MRG\nperform equally well on them.\n7.3.2 Speed Comparison\nWe have also compared the time complexity of different\nprocesses between TPR and MRG as follows:\nFeature Extraction: Table 4 shows all the steps and\ncomputation complexities of the feature extraction process.\nFirst, we apply LSD heuristics and hierarchical partitioning\nto find three source points using the Dijsktra algorithm.\nSecond, we apply Critical Point Analysis on these three\nsource points to identify feature points of the model. Third,\nwe apply Topological Point Selection, which will stop as soon\nas the search radius is reached. Hence, only boundary\nvertices of each region may be visited more than once. The\nselection process thus visits most of the vertices, and its\ncomplexity is slightly higher than O\u00f0n logn\u00fe e\u00de, but\nbounded by R\u0002O\u00f0n logn\u00fe e\u00de. Topological Ring Extraction\nis a modified Dijsktra algorithm, and its complexity is the\nsame as Dijsktra. For integral geodesic calculation, it is\n\u00f0\u0002\u00fe \u0003\u00de \u0002O\u00f0n logn\u00fe e\u00de. Since \u00f07\u00feR\u00de is a constant, the\noverall complexity of the algorithm depends on the number\nof geodesic calculations, which is  \u00fe \u0002\u00fe \u0003.\nSimilar to TPR, MRG also requires the computation of\nintegral geodesics for interval partitioning. It first samples a\nlarge number of seeds regularly over the model surface. It\nthen computes the integral geodesics and interpolates the\nTAM AND LAU: DEFORMABLE MODEL RETRIEVAL BASED ON TOPOLOGICAL AND GEOMETRIC SIGNATURES 479\nFig. 12. Precision-recall graphs for some of the model groups.\nTABLE 4\nComplexity Analysis of TPR\nAuthorized licensed use limited to: University of Durham. Downloaded on October 8, 2008 at 09:22 from IEEE Xplore.  Restrictions apply.\nvalues over other vertices. In order to obtain a good\napproximation for interval partitioning, the number of seeds\nrequired is usually over 130 as shown in Table 5. TPR is\ncomparatively much more efficient as it does not require a\nlarge number of seeds. Further, we limit the geodesic\ncalculations to topologically important locations only as they\ndominate the overall feature extraction time. Hence, the\nnumber of geodesic calculations, which is  \u00fe \u0002\u00fe \u0003, has an\naverage value of 50. This significantly speeds up the whole\nprocess. Table 5 compares the performance of TPR andMRG.\nWe can see that TPR is nearly two times faster thanMRG todo\nthe geodesic calculations. However, the overall feature\nextraction time of TPR is only about 40 percent faster. This\nis mainly due to the higher computational cost of computing\nthe global geometric features.\nFeature Matching: We apply the EMD to compare the\nfeaturesof twomodels.A theoretical computationanalysis on\nthe complexity of EMD isdifficult as it is basedon the simplex\nalgorithm. However, according to [22], if EMD is formulated\nas a bipartite graph problemwith signatures of the same size,\nthe time complexity is roughly O\u00f0n3 logn\u00de, where n is the\nnumber of topological features. As a comparison, the overall\ncomplexity ofMRG isO\u00f0nr \u0002 \u00f0mr \u00fe nr\u00de\u00de,wheremr andnr are\nthe numbers of r-nodes of the two matching models. Hence,\nTPR has a higher complexity. However, as shown in Table 6,\nmatching one model using TPR is 15 times faster than MRG\nbecause TPR has a much smaller number of topological\nfeatures, nt. On average, nt \u00bc 30 for TPR and nt depends on\nthe topology of the model. For MRG, the number of r-nodes,\nnr \u00bc 555.\n7.4 Performance of the Indexing Scheme\nWe have created a VP-tree with two fanouts. It stores at\nmost two data points in each node. To build the indexing\ntree for our existing database, it takes 778.7 s. To carry out\nthe retrieval test, we use all models in the database as input\nqueries and vary k for nearest neighbor search. Table 7\nshows the results for the retrieval experiment.\nThe diagram in Table 7 shows the total time of the\nk-Nearest Neighbor Search (using all 600 models as input\nqueries) against k (the number of returned models) in the\nindexing scheme. FromTable 7,we can see that if we perform\na similar experiment as in Table 6 (that is, k \u00bc 600), the total\ntime required (531.2 s) is roughly the same as that in Table 6\n(529.1 s).However, asmostusers typically like to retrieveonly\na few models that are most relevant to a given query, the\nindexing scheme would certainly speed up the retrieval\nprocess. In theextremecase, if auser justwants to find thebest\nmatch, the retrieval system can handle 1-nearest neighbor\nsearch in 0.39 s on average, which is 44 percent of the original\nfullmatching timeofTPRwithout indexingor 4percent of the\nmatching time of MRG. Table 7 also shows that the total\ncomputation time is proportional to the total number of EMD\noperations.\n7.5 Summary\nFrom the above experiments, we may conclude that TPR\noutperforms MRG in both accuracy and speed. However,\nTPR has some limitations. First, TPR currently cannot\nsupport nonmanifold, nonclosed models, or works poorly\non models with genus number greater than zero. This is\nbecause Critical Point Analysis is modified from LSD and\nLSD performs poorly on such models. Second, because TPR\nconsiders only neighboring vertices within the same\ngeodesic wavefront in Critical Point Analysis, the features\nmay still be affected by noise if they appear in finely\ntessellated regions. Since our current focus is only on\n480 IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS, VOL. 13, NO. 3, MAY\/JUNE 2007\nTABLE 5\nTime Analysis of TPR and MRG on Feature Extraction\nTABLE 6\nTime Analysis of TPR and MRG on Feature Matching\nTABLE 7\nSummary of K-Nearest Neighbor Search\nAuthorized licensed use limited to: University of Durham. Downloaded on October 8, 2008 at 09:22 from IEEE Xplore.  Restrictions apply.\naccuracy and speed, we have not explored multiresolution\nor part matching.\nDue to the unavailability of source codes and the\ndifficulties in implementing topology-based methods, we\nhave only implemented MRG for comparison. However,\nour method also has advantages over the others. First, our\nmethod avoids slow subgraph isomorphism matching and\nis expected to be more efficient. Second, most existing\nmethods do not consider discriminating similar-skeleton\nmodels. Their features are relatively local and may not be\nadequate to distinguish these models. Third, our similarity\nmeasure is a metric. By using spatial database techniques,\nour algorithm supports an indexing tree that encapsulates\nboth topological and geometric features in one pass. It\noutperforms [23], as we have discussed in Section 2.\nCurrently, we are targeting a faster and more accurate\nmethod for feature extraction. One approach is to adapt\nfrom mesh segmentation methods. However, since most\nsegmentation methods focus on segmenting meshes in a\nvery accurate way, they generally have a higher computa-\ntional cost and are not suitable for use in search engines.\nAnother direction is to stabilize critical points by choosing\nan optimal scalar field [4]. One of the implementations that\nwe can consider is to fix all maxima obtained from our\nCritical Point Analysis as a Dirichlet boundary condition [3]\nand calculate harmonic scalar field instead of geodesic.\n8 CONCLUSION\nIn conclusion, we have introduced a novel and efficient\nmethod for retrieving 3D deformable models. Unlike\nclassical topology-based approaches, we propose to use\ntopological points and rings to describe a 3D model. By\nusing additional global geometric features and weights to\ndescribe the importance of features, the matching can be\nmodeled as a flow and transportation (EMD) problem. This\nopposes traditional methods that require skeleton or graph\nmatching algorithms for matching topological entities. Our\nexperimental results show that the new method outper-\nforms MRG [9] in both accuracy and speed. In addition,\nsince our similarity measure is a metric function, an\nindexing tree can be constructed that encapsulates both\ntopological and geometric information in one pass.\nACKNOWLEDGMENTS\nThe authors would like to thank the anonymous reviewers\nfor their helpful and constructive comments on this paper.\nREFERENCES\n[1] D. Chen, X. Tian, Y. Shen, and M. Ouhyoung, \u201cOn Visual\nSimilarity Based 3D Model Retrieval,\u201d Proc. Eurographics, Sept.\n2003.\n[2] T. Dey, J. Giesen, and S. Goswami, \u201cShape Segmentation and\nMatching with Flow Discretization,\u201d Proc. Workshop Algorithms\nData Structures, pp. 25-36, 2003.\n[3] S. Dong, S. Kircher, and M. Garland, \u201cHarmonic Functions for\nQuadrilateral Remeshing of Arbitrary Manifolds,\u201d Computer Aided\nGeometry Design, vol. 22, no. 5, pp. 392-423, 2005.\n[4] S. Dong, P.-T. Bremer, M. Garland, V. Pascucci, and J. Hart,\n\u201cSpectral Surface Quadrangulation,\u201d ACM Trans. Graphics, vol. 25,\nno. 3, pp. 1057-1066, 2006.\n[5] M. Elad, A. Tal, and S. Ar, \u201cContent Based Retrieval of VRML\nObjects\u2014An Iterative and Interactive Approach,\u201d Proc. Euro-\ngraphics (EG) Multimedia, pp. 97-108, 2001.\n[6] A. Fu, P. Chan, Y. Cheung, and Y. Moon, \u201cDynamic VP-Tree\nIndexing for N-Nearest Neighbor Search Given Pair-Wise\nDistances,\u201d Very Large Data Bases J., 2000.\n[7] T. Funkhouser, P. Min, M. Kazhdan, J. Chen, A. Halderman, D.\nDobkin, and D. Jacobs, \u201cA Search Engine for 3D Models,\u201d ACM\nTrans. Graphics, vol. 22, no. 1, pp. 83-105, Jan. 2003.\n[8] R. Gal, A. Shamir, and D. Cohen-Or, \u201cPose-Oblivious Shape\nSignature,\u201d IEEE Trans. Visualization and Computer Graphics,\nvol. 13, no. 2, pp. 261-271, Mar.\/Apr. 2007.\n[9] M. Hilaga, Y. Shinagawa, T. Kohmura, and T. Kunii, \u201cTopology\nMatching for Fully Automatic Similarity Estimation of 3D\nShapes,\u201d Proc. ACM SIGGRAPH \u201901, pp. 203-212, 2001.\n[10] M. Kazhdan, B. Chazelle, D. Dobkin, T. Funkhouser, and S.\nRusinkiewicz, \u201cA Reflective Symmetry Descriptor for 3D Mod-\nels,\u201d Algorithmica, 2003.\n[11] M. Kazhdan, T. Funkhouser, and S. Rusinkiewicz, \u201cRotation\nInvariant Spherical Harmonic Representation of 3D Shape\nDescriptors,\u201d Proc. Symp. Geometry Processing, 2003.\n[12] M. Kazhdan, T. Funkhouser, and S. Rusinkiewicz, \u201cShape\nMatching and Anisotropy,\u201d Proc. ACM SIGGRAPH \u201904, Aug. 2004.\n[13] L. Kobbelt, S. Campagna, J. Vorsatz, and H. Seidel, \u201cInteractive\nMulti-Resolution Modeling on Arbitrary Meshes,\u201d Proc. ACM\nSIGGRAPH \u201998, pp. 105-114, Aug. 1998.\n[14] F. Lazarus and A. Verroust, \u201cLevel Set Diagrams of Polyhedral\nObjects,\u201d Proc. ACM Symp. Solid Modeling and Applications, 1999.\n[15] M. Mortara and G. Patane, \u201cAffine-Invariant Skeleton of 3D\nShapes,\u201d Proc. Int\u2019l Conf. Shape Modeling and Applications, 2002.\n[16] X. Ni, M. Garland, and J. Hart, \u201cFair Morse Functions for\nExtracting the Topological Structure of a Surface Mesh,\u201d Proc.\nACM SIGGRAPH \u201904, Aug. 2004.\n[17] M. Novotni and R. Klein, \u201c3D Zernike Descriptors for Content\nBased Shape Retrieval,\u201d Proc. ACM Symp. Solid Modeling and\nApplications, June 2003.\n[18] R. Ohbuchi and T. Takei, \u201cShape-Similarity Comparison of 3D\nShapes Using Alpha Shapes,\u201d Proc. Pacific Graphics Conf. \u201903, Oct.\n2003.\n[19] R. Ohbuchi, M. Nakazawa, and T. Takei, \u201cRetrieving 3D Shapes\nBased on Their Appearance,\u201d Proc. ACM SIGMM Workshop\nMultimedia Information Retrieval, Nov. 2003.\n[20] R. Osada, T. Funkhouser, B. Chazelle, and D. Dobkin, \u201cMatching\n3D Models with Shape Distributions,\u201d Proc. Int\u2019l Conf. Shape\nModeling and Applications, pp. 154-166, May 2001.\n[21] E. Paquet and M. Rioux, \u201cContent-Based Access of VRML\nLibraries,\u201d Proc. Multimedia Information Analysis and Retrieval Conf.,\npp. 20-32, 1998.\n[22] Y. Rubner, C. Tomasi, and L. Guibas, \u201cThe Earth Mover\u2019s Distance\nas a Metric for Image Retrieval,\u201d Int\u2019l J. Computer Vision, vol. 40,\nno. 2, pp. 99-121, Nov. 2000.\n[23] H. Sundar, D. Silver, N. Gagvani, and S. Dickinson, \u201cSkeleton\nBased Shape Matching and Retrieval,\u201d Proc. Int\u2019l Conf. Shape\nModeling and Applications, May 2003.\n[24] R. Sumner, M. Zwicker, C. Gotsman, and J. Popovi\u0002c, \u201cMesh-Based\nInverse Kinematics,\u201d Proc. ACM SIGGRAPH \u201905, 2005.\n[25] P. Shilane, P. Min, M. Kazhdan, and T. Funkhouser, \u201cThe\nPrinceton Shape Benchmark,\u201d Proc. Int\u2019l Conf. Shape Modeling and\nApplications, June 2004.\n[26] A. Tal and E. Zuckerberger, \u201cMesh Retrieval by Components,\u201d\nTechnical Report CCIT-475, EE-2004, Faculty of Electrical Eng.,\nTechnion, Mar. 2004.\n[27] G. Tam, R. Lau, and C. Ngo, \u201cDeformable Geometry Model\nMatching by Topological and Geometric Signatures,\u201d Proc. 17th\nInt\u2019l Conf. Pattern Recognition (ICPR \u201904), pp. 910-913, Aug. 2004.\n[28] J. Tangelder and R. Veltkamp, \u201cPolyhedral Model Retrieval Using\nWeighted Point Sets,\u201d Proc. Int\u2019l Conf. Shape Modeling and\nApplications, pp. 119-129, 2003.\n[29] D. Vranic and D. Saupe, \u201c3D Shape Descriptor Based on 3D\nFourier Transform,\u201d Proc. EURASIP Conf. Digital Signal Processing\nfor Multimedia Comm. and Services (ECMCS \u201901), pp. 271-274, Sept.\n2001.\n[30] M. Yu, I. Atmosukarto, W. Leow, Z. Huang, and R. Xu, \u201c3D Model\nRetrieval with Morphing-Based Geometric and Topological\nFeature Maps,\u201d Proc. IEEE Conf. Computer Vision and Pattern\nRecognition (CVPR), 2003.\nTAM AND LAU: DEFORMABLE MODEL RETRIEVAL BASED ON TOPOLOGICAL AND GEOMETRIC SIGNATURES 481\nAuthorized licensed use limited to: University of Durham. Downloaded on October 8, 2008 at 09:22 from IEEE Xplore.  Restrictions apply.\nGary K.L. Tam received the BEng degree in\ncomputer science from the Hong Kong Univer-\nsity of Science and Technology in 2002 with first-\nclass honors. In the same year, he was selected\nas one of the 23 Youth Telecom Ambassadors in\nthe \u201cITU Telecom Asia 2002 Youth Forum\u201d in\nHong Kong. In 2004, he received the MPhil\ndegree from the City University of Hong Kong.\nAfter graduation, he worked as an instructor in\nthe Department of Computer Science of the\nsame university for about two years. He is currently a PhD student of the\nUniversity of Durham, England. His research mainly focuses on\ncomputer graphics and geometry processing. He is a student member\nof the IEEE.\nRynson W.H. Lau received the BSc degree in\ncomputer systems engineering with first class\nhonors from the University of Kent in 1988 and\nthe PhD degree in computer graphics from the\nUniversity of Cambridge in 1992. He is currently\na professor at the University of Durham. Prior to\nhis current appointment, he taught at the City\nUniversity of Hong Kong from 1998 to 2006 and\nthe Hong Kong Polytechnic University from 1993\nto 1998. He serves on the editorial board of\nComputer Animation and Virtual Worlds. He has served as the guest\neditor of a number of journal special issues, including ACM Transactions\non Internet Technology, IEEE Transactions on Multimedia, IEEE\nTransactions on Visualization and Computer Graphics, Presence, and\nIEEE Computer Graphics and Applications. He has also served on the\nconference committee of a number of conferences, including program\ncochair of ACM VRST \u201904, ICAT \u201906, and conference cochair of ACM\nVRST \u201905 and CASA \u201905. He is a senior member of the IEEE.\n. For more information on this or any other computing topic,\nplease visit our Digital Library at www.computer.org\/publications\/dlib.\n482 IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS, VOL. 13, NO. 3, MAY\/JUNE 2007\nAuthorized licensed use limited to: University of Durham. Downloaded on October 8, 2008 at 09:22 from IEEE Xplore.  Restrictions apply.\n"}