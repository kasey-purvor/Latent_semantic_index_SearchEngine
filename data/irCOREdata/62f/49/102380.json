{"doi":"10.1109\/IWSSC.2008.4656731","coreId":"102380","oai":"oai:epubs.surrey.ac.uk:1839","identifiers":["oai:epubs.surrey.ac.uk:1839","10.1109\/IWSSC.2008.4656731"],"title":"Evaluation of TCP variants and bandwidth on demand over next generation satellite network","authors":["Kittiperachol, S","Sun, Zhili","Cruickshank, Haitham"],"enrichments":{"references":[],"documentType":{"type":1}},"contributors":[],"datePublished":"2008-10","abstract":"The Internet has become an important part of day to day activities. There is hardly a day without using Internet, such as reading Emails and articles as well as enjoying music and video. Thus, it is very important for the Internet to be provided to anyone anywhere. Terrestrial network has been the underlying infrastructure for the Internet. However, terrestrial network by itself cannot always satisfy all of the growing demands for the Internet, particularly in the remote areas. Thus, the deployment of the Next Generation Satellite Network (NGSN) is needed to fill in the gap and break the digital divide. This paper evaluates how the performances of TCP over NGSN with dynamic bandwidth allocation mechanism. The TCP used in this work is a real-world TCP based on both Linux and Window Vista implementations which have been integrated into a network simulator, INET. The study reveals that the TCP performances in terms of utilization and robustness, friendliness and fairness, and user's perceived Quality of Service are clearly affected by the dynamic bandwidth allocation mechanism. \u00a92008 IEEE","downloadUrl":"","fullTextIdentifier":null,"pdfHashValue":null,"publisher":"IEEE","rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:epubs.surrey.ac.uk:1839<\/identifier><datestamp>\n      2017-07-05T08:25:25Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      74797065733D636F6E666572656E63655F6974656D<\/setSpec><setSpec>\n      6469766973696F6E733D656E67616E64706879736963616C736369656E636573:656C656374726F6E6963656E67696E656572696E67:63637372<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/epubs.surrey.ac.uk\/1839\/<\/dc:relation><dc:title>\n        Evaluation of TCP variants and bandwidth on demand over next generation satellite network<\/dc:title><dc:creator>\n        Kittiperachol, S<\/dc:creator><dc:creator>\n        Sun, Zhili<\/dc:creator><dc:creator>\n        Cruickshank, Haitham<\/dc:creator><dc:description>\n        The Internet has become an important part of day to day activities. There is hardly a day without using Internet, such as reading Emails and articles as well as enjoying music and video. Thus, it is very important for the Internet to be provided to anyone anywhere. Terrestrial network has been the underlying infrastructure for the Internet. However, terrestrial network by itself cannot always satisfy all of the growing demands for the Internet, particularly in the remote areas. Thus, the deployment of the Next Generation Satellite Network (NGSN) is needed to fill in the gap and break the digital divide. This paper evaluates how the performances of TCP over NGSN with dynamic bandwidth allocation mechanism. The TCP used in this work is a real-world TCP based on both Linux and Window Vista implementations which have been integrated into a network simulator, INET. The study reveals that the TCP performances in terms of utilization and robustness, friendliness and fairness, and user's perceived Quality of Service are clearly affected by the dynamic bandwidth allocation mechanism. \u00a92008 IEEE.<\/dc:description><dc:publisher>\n        IEEE<\/dc:publisher><dc:date>\n        2008-10<\/dc:date><dc:type>\n        Conference or Workshop Item<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:format>\n        text<\/dc:format><dc:language>\n        en<\/dc:language><dc:identifier>\n        http:\/\/epubs.surrey.ac.uk\/1839\/1\/fulltext.pdf<\/dc:identifier><dc:identifier>\n          Kittiperachol, S, Sun, Zhili and Cruickshank, Haitham  (2008) Evaluation of TCP variants and bandwidth on demand over next generation satellite network  In: International Workshop on Satellite and Space Communications (IWSSC) 2008, Oct 1 - Oct 3 2008, Toulouse, France.     <\/dc:identifier><dc:relation>\n        10.1109\/IWSSC.2008.4656731<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/epubs.surrey.ac.uk\/1839\/","10.1109\/IWSSC.2008.4656731"],"year":2008,"topics":[],"subject":["Conference or Workshop Item","PeerReviewed"],"fullText":"978-1-4244-1948-7\/08\/$25.00 \u00a92008 IEEE                              IWSSC 2008 \nEvaluation of TCP Variants and Bandwidth on \nDemand over Next Generation Satellite Network  \nSongrith Kittiperachol, Zhili Sun and Haitham Cruickshank \nCentre for Communication Systems Research \nUniversity of Surrey \nGuildford, Surrey, GU2 7XH, UK \ns.kittiperachol@surrey.ac.uk \n \n \nAbstract\u2014the Internet has become an important part of day \nto day activities. There is hardly a day without using Internet, \nsuch as reading Emails and articles as well as enjoying music and \nvideo. Thus, it is very important for the Internet to be provided \nto anyone anywhere. Terrestrial network has been the underlying \ninfrastructure for the Internet. However, terrestrial network by \nitself cannot always satisfy all of the growing demands for the \nInternet, particularly in the remote areas. Thus, the deployment \nof the Next Generation Satellite Network (NGSN) is needed to fill \nin the gap and break the digital divide. This paper evaluates how \nthe performances of TCP over NGSN with dynamic bandwidth \nallocation mechanism. The TCP used in this work is a real-world \nTCP based on both Linux and Window Vista implementations \nwhich have been integrated into a network simulator, INET. The \nstudy reveals that the TCP performances in terms of utilization \nand robustness, friendliness and fairness, and user\u2018s perceived \nQuality of Service are clearly affected by the dynamic bandwidth \nallocation mechanism. \nKeywords\u2014Linux, TCP, Next Generation Satellite Network, \nBandwidth on Demand \nI.  INTRODUCTION \nOver the Internet,  transmission Control Protocol or TCP [1] \nis the most dominant protocol since it is the protocol on which \n\u2018legacy\u2019 Internet applications are based. Although NewReno, \nthe latest IETF standard TCP [2], performs exceptionally well \nover the traditional network, its performances are quite limited \nin the next generation network having large Bandwidth Delay \nProduct (BDP). Thus, various developments have been carried \nout to improve TCP performances. Linux TCP is a part of the \nLinux TCP\/IP network stack which provides ten other TCP \nvariants, i.e. bic, cubic, highspeed, hamilton, hybla, scalable, \nvegas, veno and westwood, in addition to the standard TCP, \nreno. Details of these variants can be found in literatures. In \naddition, the Window Vista based TCP, known as compound, \nis integrated into Linux kernel by [3]. Thus, to obtain realistic \nTCP dynamic, TCP functionalities of Linux TCP\/IP network \nstack (ver. 2.6.21.3) are integrated into a network simulator, \nINET [4, 5]. As a consequence, more accurate TCP dynamic \ncan be observed in simulated network environments of INET. \nThe advance in satellite technologies, i.e. powerful coding, \nhighspeed link, multiple spotbeam and on-board processor, \npresents NGSN. Moreover, the adoption of the latest standards \nin Digital Video Broadcasting (DVB), i.e. DVB-S\/S2 [6, 7] \nand DVB-RCS [8] enables fully interactive Internet services \nover NGSN at a relatively low cost. With dynamic bandwidth \nallocation, i.e. Bandwidth on Demand (BoD), NGSN is able to \nutilize bandwidth efficiently. Nonetheless, BoD when coupled \nwith network characteristics, such as large BDP and high data \nloss rate, can considerably affect TCP performances and thus \nInternet services over NGSN.  \nThis work is to evaluate the performances of non standard \nTCP, based on Linux and Microsoft Vista implementations, \nagainst reno in terms of utilization and robustness, friendliness \nand fairness, and user\u2019s perceived Quality of Service over the \nNGSN with BoD. Simulation setup is outlined in Section II \nwhereas simulation results and discussions are given in section \nIII. Finally, section IV presents conclusions and future works. \nII. SIMULATION SETUP \nThe setup is based on NGSN. The satellite itself is the next \ngeneration geostationary satellite having multiple spotbeams, \nhighspeed links and on-board processor. The downlink\/uplink \nis based on TDM\/TDMA and both have the same bandwidth. \nThe uplink bandwidth is segmented into frames. Each frame \ncontains 48 time slots; one of which is a preamble slot and the \nrest are data slots. A data slot is equivalent to eight MPEG-II \n(188-bytes) frames or 1504 bytes; thus supporting Ethernet \nframes or 1500 bytes. In general, given bit rate (R) and slot \nlength (SL), slot duration (SD) can be calculated as follow.  \n  = \nSL\nSD\nR\n (1) \nenhanced client enhanced server\nstandard serverstandard client\nNGSN\n \nFig. 1 Simulation setup \nAuthorized licensed use limited to: University of Surrey. Downloaded on April 12,2010 at 09:00:40 UTC from IEEE Xplore.  Restrictions apply. \n          \n  \n \n  \nThe total frame duration is 48\u00b7SD. The bandwidth is allocated \ndynamically according to a request\/allocation scheme of BoD \n[9]. The request is based on Volume Based Dynamic Capacity \n(VDBC) and the allocation is based on proportional allocator. \nBandwidth is requested and allocated in numbers of slots and \nis performed once every superframe, i.e. multiple frames. The \nallocator is located on board the satellite where all the requests \nare collected and data slots are computed and then allocated in \na round robin manner. Let Ri and Ai be slot request and slot \nallocation whereas Qi(\u2206t) and Di(\u2206t) be queue occupancy and \nslot deficit since the last request for terminal i,  \n \n \n( ) ( )ii iQ tR D tL\n\u0394\n= \u0394\u23a1 \u23a4 +\u23a2 \u23a5\u23a2 \u23a5  (2) \nand \n \n if \nif otherwise and s.t.\ni\ni\ni i i\niR R DSA\nR R A DS\n=\n\u2264\n\u2264\n\u23a1 \u23a4\u23a2 \u23a5\n\u2211\n\u2211 \u2211 (3) \nwhere \u23a1 \u23a4x is the smallest integer greater than x, DS is the data \nslots per frame and \u2018s.t.\u2019 is the abbreviation for \u2018subject to\u2019.  \nThe slot allocation, i.e. Terminal Burst Time Plan (TBTP), \nis broadcasted at the beginning of the next superframe. Once \nreceiving the TBTP, satellite terminals can begin transmitting \ndata but only in the designated data slots of the corresponding \nsuperframe. The allocation time T, i.e. time needed for a slot \nrequest to become effective, follows this expression, \n ( ) s.t.  T n F DS SL T P= \u22c5 \u22c5 \u2265\u22c5  (4) \nwhere n is the smallest integer that satisfies the condition, F is \nframes per superframe and P is the propagation delay, roughly \n500 ms for geostationary satellite. If the request is not entirely \nsatisfied, slot deficit is added to the next request. In this study, \nthe request\/allocation is performed every three frames and the \nnetwork is setup as displayed in Fig. 1. \nClient network consists of standard and enhanced peers and \nconnects to a satellite gateway. Two corresponding servers are \non the other side of the network and connect to two gateways. \nA TCP application (200 MB file download) is requested by \npeers at a random time which is exponentially distributed and \none second on average. The uplinks are setup for three cases \n(a) 2-Mbps with 100-packet, (b) 4-Mbps with 200-packet and \n(c) 8-Mbps link with 400-packet buffer. The choices of buffer \nsizes are simply to accommodate the BDP of the satellite link. \nThe network simulator used is the modified INET [5].  \nIII.  RESULTS AND DISCUSSIONS \nA. Utilization and Robustness \nIn general, utilization and robustness indicate the efficiency \nof TCP when utilizing a bottleneck link and when dealing with \npacket losses. In this study, the satellite links are assumed to \nbe lossy with bit error rate (BER) ranging from 10-10 to 10-7. \nUtilizations and robustness of TCP over the satellite link with \nBoD for the three link setups are displayed in Fig. 2.  \nFig. 2 (a) illustrates that with 2-Mbps link and 100-packet \nbuffer, all variants achieve utilization at 40 percents or lower. \nFor low BER, i.e. 10-10 to 10-9, reno, bic, cubic, highspeed and \nscalable achieve utilization at roughly 30-40 percents whereas \ncompound, hamilton, hybla, veno and westwood are at 20-30 \npercents. For high BER, i.e. 10-8 to 10-7, cubic, hamilton and \nhybla are the only variants that do not suffer significant drop \nin utilization. However, vegas displays the lowest utilization at \n10 percents or less regardless of BER. Fig. 2 (b) illustrates that \nwith 4-Mbps link and 200-packet buffer, all variants display \nimprovement in utilization but still limited to 60 percents. It is \nclear that variants having the highest and the lowest utilization \nare veno and vegas respectively. For low BER, bic and cubic \nachieve utilization at 50 percents whereas the rest are around \n40-50 percents. For high BER, cubic, hamilton and hybla are \nthe only variants having utilization maintained at 20 percents \nor more. Fig. 2 (c) illustrates that with 8-Mbps link and 400-\npacket buffer, all variants appear to display utilization similar\nUtilization (%) \nreno bic compound cubic highspeed hamilton hybla scalable vegas veno westwood\n0\n0.2\n0.4\n0.6\n0.8\n1.0\nu\ntil\niz\nat\nio\nn\n \n \n10-10\n10-09\n10-08\n10-07\n \n(a)  2-Mbps link with 100-packet buffer  \nreno bic compound cubic highspeed hamilton hybla scalable vegas veno westwood\n0\n0.2\n0.4\n0.6\n0.8\n1.0\nu\ntil\niz\nat\nio\nn\n \n \n10-10\n10-09\n10-08\n10-07\n \n(b)  4-Mbps link with 200-packet buffer  \nreno bic compound cubic highspeed hamilton hybla scalable vegas veno westwood\n0\n0.2\n0.4\n0.6\n0.8\n1.0\nu\ntil\niz\nat\nio\nn\n \n \n10-10\n10-09\n10-08\n10-07\n \n(c) 8-Mbps link with 400-packet buffer   \nFig. 2  Utilization of TCP over the satellite lossy link with BoD.  \nAuthorized licensed use limited to: University of Surrey. Downloaded on April 12,2010 at 09:00:40 UTC from IEEE Xplore.  Restrictions apply. \n          \nto the results previously found in Fig. 2 (b). But, compound \nand highspeed are the only variants able to achieve utilization \nat 80 and 70 percents respectively whereas vegas still displays \nthe lowest utilization. \nThese low utilizations are rather uncommon when a large \nfile download is considered but it is all due to the interaction \nbetween TCP and BoD. Prior to data transmission, bandwidth \nhas to be first allocated. According to (2) and (4), the numbers \nof data slots that can be requested given the buffer size of 100, \n200 and 400 are 102, 141 and 141 slots per superframe and the \nallocation time given the links of 2, 4 and 8 Mbps are 0.866, \n0.866 and 0.649 s; therefore, increasing the overall latency and \nresulting in 1, 2 and 3 idle superframes prior to transmission. \nThus, to have all 141 data slots allocated per superframe, the \nminimum buffer size of 141 is needed. Likewise, to request all \ndata slots in the subsequent superframe, a buffer size of 282 or \nmore is required in order to avoid any packet drops if another \n141 packets arrive before any of the previous 141 packets can \nbe transmitted. Evidently, when BoD is used, queued packets \ndo not necessarily imply full utilization and larger buffers are \nessential to maintain full utilization.  \nAccording to the results, TCP using an increase in delay as \na sign for network congestion, like vegas, is likely to display \nsignificantly degraded performances due to large variations in \ndelay caused by BoD mechanism. In addition, the buffer size \nof 100 or 200 packets are insufficient to request all 141 data \nThroughput (Mbps) vs Time (s) \n0 1000 2000 3000 4000\n0\n1.0\n2.0\n0 1000 2000 3000 4000\n0\n1.0\n2.0\n0 1000 2000 3000 4000\n0\n1.0\n2.0\n0 1000 2000 3000 4000\n0\n1.0\n2.0\n0 1000 2000 3000 4000\n0\n1.0\n2.0\n0 1000 2000 3000 4000\n0\n1.0\n2.0\n0 1000 2000 3000 4000\n0\n1.0\n2.0\n0 1000 2000 3000 4000\n0\n1.0\n2.0\n0 1000 2000 3000 4000\n0\n1.0\n2.0\n0 1000 2000 3000 4000\n0\n1.0\n2.0\n0 1000 2000 3000 4000\n0\n1.0\n2.0\n \n aggregate throughput of\n2 reno flows\naggregate throughput of\n2 competing flows\nreno-reno\nreno-westwoodreno-venoreno-vegas\nreno-scalable\nreno-bic reno-compound reno-cubic\nreno-highspeed reno-hamilton reno-hybla\n \n(a)  2-Mbps link with 100-packet buffer \n0 500 1000 1500 2000\n0\n2.0\n4.0\n0 500 1000 1500 2000\n0\n2.0\n4.0\n0 500 1000 1500 2000\n0\n2.0\n4.0\n0 500 1000 1500 2000\n0\n2.0\n4.0\n0 500 1000 1500 2000\n0\n2.0\n4.0\n0 500 1000 1500 2000\n0\n2.0\n4.0\n0 500 1000 1500 2000\n0\n2.0\n4.0\n0 500 1000 1500 2000\n0\n2.0\n4.0\n0 500 1000 1500 2000\n0\n2.0\n4.0\n0 500 1000 1500 2000\n0\n2.0\n4.0\n0 500 1000 1500 2000\n0\n2.0\n4.0\n \n aggregate throughput of\n2 reno flows\naggregate throughput of\n2 competing flows\nreno-reno\nreno-westwoodreno-venoreno-vegas\nreno-scalable\nreno-bic reno-compound reno-cubic\nreno-highspeed reno-hamilton reno-hybla\n \n(b)  4-Mbps link with 200-packet buffer \n0 250 500 750 1000\n0\n4.0\n8.0\n0 250 500 750 1000\n0\n4.0\n8.0\n0 250 500 750 1000\n0\n4.0\n8.0\n0 250 500 750 1000\n0\n4.0\n8.0\n0 250 500 750 1000\n0\n4.0\n8.0\n0 250 500 750 1000\n0\n4.0\n8.0\n0 250 500 750 1000\n0\n4.0\n8.0\n0 250 500 750 1000\n0\n4.0\n8.0\n0 250 500 750 1000\n0\n4.0\n8.0\n0 250 500 750 1000\n0\n4.0\n8.0\n0 250 500 750 1000\n0\n4.0\n8.0\n \n aggregate throughput of\n2 reno flows\naggregate throughput of\n2 competing flows\nreno-reno\nreno-westwoodreno-venoreno-vegas\nreno-scalable\nreno-bic reno-compound reno-cubic\nreno-highspeed reno-hamilton reno-hybla\n \n(c)  8-Mbps link with 400-packet buffer  \nFig. 3  Aggregate throughput of two reno and two competing flows over the satellite link with BoD. \nAuthorized licensed use limited to: University of Surrey. Downloaded on April 12,2010 at 09:00:40 UTC from IEEE Xplore.  Restrictions apply. \n          \nslots for two consecutive superframes, therefore resulting in \npoor utilizations. Although two consecutive superframes can \nbe requested by the 400-packet buffer, three superframes are \nidle and cannot be utilized before TBTP arrives. Given that \nTCP requires feedbacks, i.e. acknowledgement, to increase \nits transmission rate, having more idle superframes can lead \nto even lower utilization. Clearly, BoD adversely affects the \nperformances of TCP by increasing both round trip time and \ndelay variation as well as leaving a number of superframes \nunutilized. In addition to BoD, lower BER is also necessary \nto obtain higher utilization particularly for larger bandwidth.  \nAccording to the results, compound, highspeed and veno \nachieve higher utilization for very low BER whereas cubic, \nhamilton, hybla and scalable appear to be more robust when \ncompared to reno. \nB. Friendliness and Fairness \nIn general, TCP is said to be friendly if its throughput is \nno higher than that of reno under the same conditions and to \nbe fair if its throughput is relatively the same as that of reno \nwhen competing on the same bottleneck link. In this study, \nfour concurrent file downloads are used; two of which are \nreno while the other two are other competing variants. The \nsatellite links are assumed to be error free and the smoothed \naggregate throughputs of reno flows and competing variants \nfor the three link setups are displayed in Fig. 3.  \nFig. 3 (a) illustrates that with 2-Mbps link and 100-packet \nbuffer, all variants are friendly and fair except for vegas that \nis friendly but unfair. In addition, even with four concurrent \nflows, i.e. two reno and two competing flows, 100-percent \nutilization is yet to be achieved. This is due to the effects of \nBoD on TCP mentioned earlier. As a result, the aggregate \nthroughputs in any cases are unable to achieve the fair share \nof bandwidth at 1 Mbps, i.e. half of the available bandwidth. \nFig. 3 (b) illustrates that with 4-Mbps link and 200-packet \nbuffer, all variants are friendly and fair except for vegas that \nis friendly but unfair. In addition, in the cases of reno, bic, \ncompound, cubic, highspeed, scalable, veno and westwood \nbeing competing flows, the aggregate throughputs are able \nto achieve the fair share of 2-Mbps bandwidth but not in the \ncases of hamilton and hybla. Fig. 3 (c) illustrates that with \n8-Mbps link and 400-packet buffer, all variants still remain \nfriendly and fair except for vegas that remains friendly but \nunfair. In addition, the aggregate throughputs in all cases are \nable to achieve the fair share of 4-Mbps bandwidth. A closer \ninvestigation reveals that the throughput displays trajectory \nwith three distinct characteristics when converging to the \nfair share. The first one is the sudden convergence, forming \na rectangle-like shape, i.e. reno, compound, highspeed and \nwestwood. The second one is the slow convergence, forming \na triangle-like shape, i.e. bic, cubic and scalable. The third \none is similar to the second one except with higher variation \nduring convergence, i.e. hamilton and hybla.  \nDespite the fact that some variants, such as bic, cubic, \nhamilton, hybla and scalable, are known to be unfriendly \nand unfair to reno in the terrestrial network, the study \nreveals that BoD mechanism is able to entirely change their \ncharacteristics when competing with reno such that they \nbecome friendly and fair. According to the results, all TCP \nvariants, except vegas, are found to be both friendly and fair \nwhereas vegas is found to be friendly but fails to be fair.  \nC. User\u2019s Preceived Quality of Service \nUser\u2019s perceived QoS (UQoS) is used to indicate on how \nwell the given services perform from the user point of view. \nIn general, higher throughput often implies better UQoS, \nparticularly for downloading services. Based on the results \nof Fig. 3, average throughput of individual competing flows \nis displayed in Fig. 4. In each group, the first two bars are \nthe average throughput of reno whereas the other two bars \nare that of other competing variants. The \u2018tcp?\u2019 indicates the \ncompeting variant that is labeled on the x-axis. In this study, \nthe average throughput is loosely used as UQoS.  \nFig. 4 (a) illustrates that with 2-Mbps link and 100-packet \nThroughput (Mbps) \nreno bic compound cubic highspeed hamilton hybla scalable vegas veno westwood\n0\n0.5\n1.0\nth\nro\nug\nhp\nut\n \n \nreno 1\nreno 2\ntcp? 1\ntcp? 2\n \n(a)  2-Mbps link with 100-packet buffer \nreno bic compound cubic highspeed hamilton hybla scalable vegas veno westwood\n0\n1.0\n2.0\nth\nro\nug\nhp\nut\n \n \nreno 1\nreno 2\ntcp? 1\ntcp? 2\n \n(b)  4-Mbps link with 200-packet buffer \nreno bic compound cubic highspeed hamilton hybla scalable vegas veno westwood\n0\n2.0\n4.0\nth\nro\nug\nhp\nut\n \n \nreno 1\nreno 2\ntcp? 1\ntcp? 2\n \n(c)   8-Mbps link with 400-packet buffer \nFig. 4  Average throughput of reno and other competing flows over the satellite link with BoD. \nAuthorized licensed use limited to: University of Surrey. Downloaded on April 12,2010 at 09:00:40 UTC from IEEE Xplore.  Restrictions apply. \n          \nbuffer, bic, compound, highspeed, hamilton, hybla and veno, \nwhen competing against reno, achieve relatively the same \nthroughput as reno does whereas cubic and scalable achieve \nslightly higher throughput than reno. However, vegas and \nwestwood display lowest and slightly lower throughput \nrespectively. Fig. 4 (b) illustrates that with 4-Mbps link and \n200-packet buffer, bic, compound, highspeed, hamilton, \nhybla and veno achieve throughput similar to reno whereas \ncubic and scalable still achieve slightly higher throughput \nthan reno. But, vegas and westwood display throughput that \nis lower than reno. Fig. 4 (c) illustrates that with 8-Mbps \nlink and 400-packet buffer, besides vegas and westwood, all \nvariants achieve throughput comparable to reno. Still, vegas \nand westwood displays lower throughput. \nAccording to the results, UQoS based on bic, compound, \nhighspeed, hamilton, hybla and veno are at the same level as \nreno whereas UQoS based on cubic and scalable is slightly \nbetter. However, UQoS provided by westwood is marginally \nlower and UQoS provided by vegas is the lowest.  \nIV. CONCLUSIONS AND FUTURE WORKS \nThis paper evaluates the performances of real-world TCP \nbased on Linux and Microsoft Vista implementations over a \nsatellite link of NGSN with BoD. The metrics of interest are \nutilization and robustness, friendliness and fairness, and \nUQoS. The findings based on the study are summarized in \nTABLE I. The Novelties of this work are first the use of the \nexisting protocol implementation in simulated environment \nin which more realistic protocol behaviors can be produced \nand captured, and second the discovery that real-world TCP \nmay not perform optimally over a typical NGSN particularly \nwith BoD. Evidently, the performances of TCP can easily be \ndegraded by a simple BoD mechanism.  \nThe result suggests that given the satellite environments, \ncompound and highspeed are best at utilization while cubic, \nhamilton and hybla are best at robustness. Additionally, all \nvariants, other than vegas, are both friendly and fair when \ncompeting against reno. Lastly, cubic and scalable delivers \nslightly better UQoS when sharing the same link with reno. \nAlthough not having the best utilization, cubic and scalable \nappear to be the best TCP from the user\u2019s point of views. \nWith BoD, the presence of queue occupancy no longer \nimplies full utilization and additional slot waiting time has \nto be added to the overall round trip time. Therefore, larger \nbuffer size is required not only to accommodate larger BDP \nbut also to allow a number of superframes to be requested. It \nis clear that BoD causes several superframes to be idle and \nunutilized in which it contributes to even lower utilization. \nThus, to optimize TCP performances over NGSN with BoD, \nbuffer size, bandwidth and frame structure have to carefully \nbe fine tuned, since they are related to one another. The final \naim is to optimize the slot waiting time and the number of \nunutilized superframes caused by BoD. In addition to BoD, \nAdaptive Coding and Modulation (ACM), a mechanism that \nadapts transmission rate to best suit wireless environment, \nalso affect TCP performances by causing the total available \nbandwidth to vary. Moreover, if interworking between the \nnext generation terrestrial network and NGSN is important, \nIP QoS architecture, such as Differentiated Service, has to \nbe considered in order to provide end-to-end QoS across the \nintegrated next generation network.  \nThe future works include further study on the impacts of \nBoD, i.e. different buffer sizes, different request\/allocation \nsetups and different BoD schemes, on TCP performances. \nNext, the impact of ACM and later the combined effects of \nboth BoD and ACM on TCP performances will be studied. \nFinally, the performances of TCP over the integrated next \ngeneration satellite-terrestrial network, utilizing BoD, ACM \nand IP QoS, will be investigated. \nACKNOWLEDGMENT \nSongrith Kittiperachol thanks the Royal Thai Navy and \nEPSRC for financial support.  \nREFERENCE \n[1] M. Allman, V. Paxson, and W. Stevens, \"TCP congestion control,\" \nRFC 2581, April, 1999. \n[2] S. Floyd, T. Henderson, and A. Gurtov, \"The NewReno modification \nto TCP's fast recovery algorithm,\" RFC 3782, April, 2004. \n[3] D. X. Wei and P. Cao, \"NS-2 TCP-Linux: an NS-2 TCP \nimplementation with congestion control algorithms from Linux,\" in \nProceeding of 2006 workshop of ns-2: the IP network simulator, Pisa, \nItaly, 10 October 2006. \n[4] A. Varga, \"OMNeT++ discrete event simulation system,\" \nhttp:\/\/www.omnetpp.org. \n[5] S. Kittiperachol, Z. Sun, and H. Cruickshank, \"Integration of Linux \nTCP implementation: verification and validation,\" in Proceeding of \nSPECTS '08, Edinburgh, UK, 16-18 June 2008, to be published. \n[6] ETSI, \"Digital Video Broadcasting (DVB) - framing structure, \nchannel coding and modulation for 11\/12 GHz satellite services,\" EN \n300 421, August, 1997. \n[7] ETSI, \"Digital Video Broadcasting (DVB): user guidelines for the \nsecond generation system for broadcasting, interactive services, news \ngathering and other broadband satellite applications (DVB-S2),\" TR \n102 376, February, 2005. \n[8] ETSI, \"Digital Video Broadcasting (DVB): interaction channel for \nsatellite distribution systems,\" EN 301 790, 2003. \n[9] A. Gotta, F. Potorti, and R. Secchi, \"Simulating dynamic bandwidth \nallocation on satellite links,\" in Proceeding of 2006 workshop on ns-\n2: the IP network simulator, Pisa, Italy, 10 October 2006. \nTABLE I.  TCP PERFORMANCES \n \nbic \ncom\npound \ncubic \nhighspeed \nham\nilton \nhybla \nscalable \nvegas \nveno \nw\nestw\nood \n1 flow \nutilization o ++ o ++ - o o -- + - \nrobustness + o ++ o ++ ++ o -- o o \n4 concurrent flows (2 reno and 2 competing variants) \nfriendliness o o o o o o o ++ o o \nfairness o o o o o o o -- o o \nUQoS o o + o o o + -- o - \n \nwhen compared to reno \n+ means better  o means comparable  - means lower\nAuthorized licensed use limited to: University of Surrey. Downloaded on April 12,2010 at 09:00:40 UTC from IEEE Xplore.  Restrictions apply. \n"}