{"doi":"10.1109\/PDP.2007.76","coreId":"102515","oai":"oai:epubs.surrey.ac.uk:1977","identifiers":["oai:epubs.surrey.ac.uk:1977","10.1109\/PDP.2007.76"],"title":"Social Peer-to-Peer for Resource Discovery","authors":["Liu, Lu","Antonopoulos, Nick","Makin, Stephen"],"enrichments":{"references":[],"documentType":{"type":1}},"contributors":[],"datePublished":"2007-02-07","abstract":"<p>For resource discovery in social networks, people can directly contact some acquaintances that have knowledge about the resources they are looking for. However, in current peer-to-peer networks, peer nodes lack capabilities similar to social networks, making it difficult to route queries efficiently. In this paper, we present a social-like system (Social-P2P) for resource discovery by mimicking human behaviours in social networks. Different from most informed search algorithms, peer nodes learn knowledge from the results of previous searches and no additional overhead is required to obtain extra information from neighbouring nodes. Unlike community-based P2P information sharing systems, we do not intend to create and maintain peer groups or communities consciously. Peer nodes with the same interests will be highly connected to each other spontaneously. Social-P2P has been simulated in a dynamic environment. From the simulation results and analysis, Social-P2P achieved better performance than current methods.<\/p","downloadUrl":"","fullTextIdentifier":null,"pdfHashValue":null,"publisher":null,"rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:epubs.surrey.ac.uk:1977<\/identifier><datestamp>\n      2017-10-31T14:03:53Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      74797065733D636F6E666572656E63655F6974656D<\/setSpec><setSpec>\n      6469766973696F6E733D656E67616E64706879736963616C736369656E636573:436F6D707574696E67<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/epubs.surrey.ac.uk\/1977\/<\/dc:relation><dc:title>\n        Social Peer-to-Peer for Resource Discovery<\/dc:title><dc:creator>\n        Liu, Lu<\/dc:creator><dc:creator>\n        Antonopoulos, Nick<\/dc:creator><dc:creator>\n        Makin, Stephen<\/dc:creator><dc:description>\n        <p>For resource discovery in social networks, people can directly contact some acquaintances that have knowledge about the resources they are looking for. However, in current peer-to-peer networks, peer nodes lack capabilities similar to social networks, making it difficult to route queries efficiently. In this paper, we present a social-like system (Social-P2P) for resource discovery by mimicking human behaviours in social networks. Different from most informed search algorithms, peer nodes learn knowledge from the results of previous searches and no additional overhead is required to obtain extra information from neighbouring nodes. Unlike community-based P2P information sharing systems, we do not intend to create and maintain peer groups or communities consciously. Peer nodes with the same interests will be highly connected to each other spontaneously. Social-P2P has been simulated in a dynamic environment. From the simulation results and analysis, Social-P2P achieved better performance than current methods.<\/p><\/dc:description><dc:date>\n        2007-02-07<\/dc:date><dc:type>\n        Conference or Workshop Item<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:format>\n        text<\/dc:format><dc:language>\n        en<\/dc:language><dc:identifier>\n        http:\/\/epubs.surrey.ac.uk\/1977\/1\/fulltext.pdf<\/dc:identifier><dc:identifier>\n          Liu, Lu, Antonopoulos, Nick and Makin, Stephen  (2007) Social Peer-to-Peer for Resource Discovery  In: 15th EUROMICRO International Conference on Parallel, Distributed and Network-Based Processing (PDP'07).     <\/dc:identifier><dc:relation>\n        10.1109\/PDP.2007.76<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/epubs.surrey.ac.uk\/1977\/","10.1109\/PDP.2007.76"],"year":2007,"topics":[],"subject":["Conference or Workshop Item","PeerReviewed"],"fullText":" Social Peer-to-Peer for Resource Discovery \n \n \nLu Liu \nSurrey Space Centre \nUniversity of Surrey \nGuildford, United Kingdom \nl.liu@surrey.ac.uk \nNick Antonopoulos \nDepartment of Computing \nUniversity of Surrey \nGuildford, United Kingdom \nn. antonopoulos@surrey.ac.uk \nStephen Mackin \nSurrey Satellite Technology Limited \nSurrey Research Park, \n Guildford, UK \ns.mackin@sstl.co.uk\n \n \nAbstract \n \nFor resource discovery in social networks, people \ncan directly contact some acquaintances that have \nknowledge about the resources they are looking for. \nHowever, in current peer-to-peer networks, peer nodes \nlack capabilities similar to social networks, making it \ndifficult to route queries efficiently. In this paper, we \npresent a social-like system (Social-P2P) for resource \ndiscovery by mimicking human behaviours in social \nnetworks. Different from most informed search \nalgorithms, peer nodes learn knowledge from the \nresults of previous searches and no additional \noverhead is required to obtain extra information from \nneighbouring nodes. Unlike community-based P2P \ninformation sharing systems, we do not intend to create \nand maintain peer groups or communities consciously. \nPeer nodes with the same interests will be highly \nconnected to each other spontaneously. Social-P2P has \nbeen simulated in a dynamic environment. From the \nsimulation results and analysis, Social-P2P achieved \nbetter performance than current methods. \n \n \n1. Introduction \n \nIn human society, people are connected by their \nsocial relationships. Small world phenomenon [1], \nobserved by Stanley Milgram, is the hypothesis that \neveryone in this world can be reached through a short \nchain of social acquaintances, known as \u201csix degrees of \nseparation.\u201d Duncan Watts proposed a mathematical \nmodel [2] to analyze the small world phenomenon with \nhighly clustered sub-networks consisting of local nodes \nand random long-range shortcuts that help produce \nshort paths to remote nodes. He demonstrated that the \npath-length between any two nodes of his model is \nsurprisingly small. For resource discovery in social \nnetworks, people can directly contact some \nacquaintances that have knowledge about the resources \nthey are looking for. However, in current peer-to-peer \nnetworks, peer nodes lack capabilities similar to social \nnetworks, making it difficult to route queries \nefficiently.  \nExisting solutions for resource discovery in the P2P \nsystems can be generally classified into two categories: \nstructured and unstructured P2P systems. Structured \nP2P systems (e.g. Chord [3], CAN [4], and Pastry [5]) \nhave dedicated network structure on the overlay \nnetwork. Distributed hash tables (DHTs) have become \nthe dominant methodology for resource discovery in \nstructured P2P networks [6]. However, some recent \nstudies (e.g. [8], [9]) argued that the cost of \nmaintaining a consistent distributed index is very high \nin the dynamic and unpredictable Internet \nenvironments. Some structured P2P protocols (e.g. \nKademlia [7]) is seeking ways to save the cost of \nmaintaining a consistent index. In contrast, \nunstructured P2P systems are more resilient in dynamic \nenvironments, but current unstructured P2P search \ntechniques tend to either require high search overhead \nor generate massive network traffic.  \nStudies like [10], [11], and [12] have explored the \npossibility of building an information sharing system \nby clustering peer nodes into \u201cgroups\u201d or \n\u201ccommunities\u201d based on their interests. However, the \nsimple community formation and discovery becomes \nmuch more complex due to the lack of a central server. \nA large communication overhead is required to \ncompensate for the server even when operating with \nhigh-performance information dissemination \ntechniques (e.g. Gossiping and Rumour Spreading \n[13]) and compact data structures (e.g. Bloom Filters \n[14]).   \nIn this paper, we present a new social-like P2P \nalgorithm (Social-P2P) for resource discovery by \nmimicking human interactions in social networks \nwhere peer nodes are people and connections are \nrelationships. Different from most unstructured P2P \nsystems (e.g. local indices [15]), no overhead is \n15th EUROMICRO International Conference on Parallel, Distributed and Network-Based Processing (PDP'07)\n0-7695-2784-1\/07 $20.00  \u00a9 2007\n required to obtain additional information from \nneighbouring nodes. Unlike community-based P2P \ninformation sharing systems, we do not intend to create \nand maintain peer groups or peer communities \nconsciously. In contrast, each node connects to other \npeer nodes with the same interests gradually by the \nresult of daily searches. Finally, peer nodes with the \nsame interests will be highly connected to each other \nspontaneously. The Social-P2P algorithm can be \ndeployed on top of any unstructured P2P network (e.g. \nGnutella) to improve the performance of resource \ndiscovery. \n \n2. Related work \n \nThough current search methods in unstructured P2P \nsystems are heterogonous and incompatible, most of \nthem are dedicated to solving the observed issues of \nblind flooding mechanisms and generally can be \nclassified into the following approaches according to \ntheir design principles. The first approach enables peer \nnodes to create query routing tables by hashing file \nkeywords and regularly exchanging those with their \nneighbours (e.g. [15]). Peer nodes normally maintain \nadditional indices of files offered by connected \nneighbours or neighbours\u2019 neighbours within a specific \ndistance. A peer node can decide which peer nodes to \nforward a query to by using this additional information. \nThe second approach is based on hierarchical \narchitecture which reorganises peer nodes into a two-\nlayer hierarchy with super-peer nodes (e.g. [16], [17]). \nSuper-peer nodes are capable and reliable peer nodes \nthat take more responsibility for providing services in \nP2P networks.  \nThe third and fourth approaches are closely related \nto the algorithms we are presenting in this paper. In \nmany P2P applications, topology determines \nperformance. The third approach improves network \nperformance by adapting and optimizing overlay \ntopology (e.g. [18], [19]). In Social-P2P, the \nconnections of peer nodes are adaptive with cached \nknowledge and only a number of associated \nconnections are kept in each node. The fourth approach \nutilizes the historic record of previous searches to help \npeer nodes make routing decisions, such as Adaptive \nProbabilistic Search (APS) [20], NeuroGrid [21] and \nREMINDIN [22]. Different from self-organizing \nnetworks, the search algorithms of APS are not \nallowed to alter the overlay topology. In APS, each \nnode keeps an index describing which files were \nrequested by each neighbour. The probability of \nchoosing a neighbour to find a particular file depends \non previous search results. In the NeuroGrid network, \npeer nodes support distributed search through semantic \nrouting by maintaining routing tables at each node \n[21]. REMINDIN utilizes a similar principle as \nNeuroGrid which was implemented on the Semantic \nWeb Application Platform (SWAP) [23]. However, \nboth methods are only effective for previously queried \nkeywords and are not suitable for networks where peer \nnodes come and go rapidly. \nIn addition, the \u201csmall world\u201d social phenomenon \nhas also been observed in current P2P networks. \nMaintaining and searching \u201csmall world\u201d has been \ndiscussed in recent studies. Jon Kleinberg discussed \nthe problem of decentralized search in P2P networks \nwith partial information about the underlying structure \nin [24]. A study in [25] proposes an enhanced \nclustering cache replacement scheme by forcing the \nrouting tables to resemble neighbour relationships in a \nsmall-world acquaintance graph. Small world \narchitecture for P2P networks has been proposed in our \nprevious work [26] with a semi-structured search \nalgorithm in multi-group P2P systems, which has \nadvantages of both structured and unstructured P2P \napproaches. The small world phenomenon has also \nbeen observed in our Social-P2P by mimicking social \nintercommunications as discussed in section 4. \n \n3. Algorithm description \n \nIn this section, we will describe Social-P2P by \nanalogizing from the human strategies in social \nnetworks.  \nIn social networks, people remember and update \npotentially useful knowledge from social interactions. \nAs similar to social networks, each Social-P2P node \nbuilds a knowledge index that stores associations \nbetween topics and other peer nodes according to the \nresults of searches. If a search is successful, the \nrequesting node updates its knowledge index to \nassociate the peer nodes that have responded data \nsuccessfully and connects to these nodes. In the \nmeantime, the requesting node also removes invalid \ncached knowledge according to the results of searches. \nTherefore, peer nodes can learn from the results of \nprevious searches, which makes future searches more \nfocused. When more searches have been done, more \nknowledge can be collected from search results. If this \nprocess continues, each node can cache a great deal of \nuseful knowledge that is useful to quickly find the peer \nnodes with the required data in the future. \nFor resource discovery in social networks, people \nusually recall information in memory to find the right \npeople to contact. The persons recalled from memory \nmay directly relate to their requests. For example, Bob \nwants to borrow an Oxford English Dictionary and \nremembers that he once borrowed it from his friend \n15th EUROMICRO International Conference on Parallel, Distributed and Network-Based Processing (PDP'07)\n0-7695-2784-1\/07 $20.00  \u00a9 2007\n Alice. Therefore, he can directly contact Alice again \nfor the dictionary. However, in most circumstances, \npeople cannot find the persons who are directly related \nto their requests, but people can find some \nacquaintances that potentially have knowledge about \nthe resources they are looking for. For example, Bob \nmay never have borrowed or he can not clearly \nremember whether he has ever borrowed an Oxford \nEnglish Dictionary. But he believes his friend Alice, \nwho is a linguist, probably has the dictionary or at least \nshe has more knowledge about who has the dictionary. \nIn this case, the Oxford English Dictionary is in the \narea of linguistics and Bob found Alice has abundant \nknowledge on the interest area of linguistics from \nprevious intercommunications. Alice probably does not \nhave the dictionary, but she will use her own \nknowledge to help Bob find the dictionary with a high \nlikelihood. \nAnalogous to social networks, Social-P2P utilises a \nsimilar logic-based semantic approach to route queries \nto a subset of neighbouring nodes. Social-P2P uses a \nsimilar method to Gnutella to prevent infinite \npropagation: Time to Live (TTL). TTL represents the \nnumber of times a message can be forwarded before it \nis discarded. \nThis routing algorithm involves the following three \nphases. When a node receives a query which needs to \nbe forwarded, the node routing algorithm firstly \nsearches the local knowledge index for the peer nodes \ndirectly associated with the requested topic and ranks \nthem with their updating time. The peer node that is \ninput or updated more recently gets a higher rank. \nHowever, the success probability of the first phase is \nlow, especially for new peer nodes with little \nknowledge. If there are not enough directly associated \nnodes found in the first phase, the algorithm will move \nto the second phase that searches for peer nodes \nsharing content associated with the interest area of the \nrequested topic from the local knowledge index. An \ninterest area of Social-P2P is a semantic area with a set \nof topics. The corresponding interest area can be found \nfrom the Open Directory Categories [27], which is the \nmost widely distributed database of Web content \nclassified by humans. These peer nodes will be ranked \naccording to the degree of correlation to the interest \narea of query. The routing algorithm prefers to select \npeer nodes with higher degrees of correlation rather \nthan peer nodes with lower correlation. If two or more \nnodes have the same correlation degree, we put the \npeer node that responded most recently first. If a peer \nnode has a large amount of content in a particular area, \nit is very likely that it will also have other data in this \narea. In our simulations, the correlation degree of a \npeer node in a particular area is generated by how \nmany relevant topics in the area the peer node is \nassociated with: \ntotal\nmatches\nn\nnc = , where matchesn is the \nnumber of topics in this area that the peer node is \nassociated with and totaln  is the total number of topics \nin this area.  \n \n \nFigure 1. Flowchart of the second phase of node \nrouting algorithm. \n \nThe flowchart shown in Figure 1 describes the \nsecond-phase of the routing algorithm used in our \nsimulation, where n is the number of peer nodes that \nhave been forwarded in the first and second phase and \nd is the defined number of peer nodes to forward a \nquery to in each hop. n is increased by one when one \nmore node is selected. The query will be sent to the \npeer nodes only if the number of forwarded nodes n is \nsmaller than the defined number of peer nodes to be \ncontacted in each hop d ( dn < ). If dn \u2265 , the node \nselection procedure is completed in the second phase. \nIf all peer nodes associated with the area of the \nrequested topic have been taken from the list in the \nsecond phase, but there are still not enough nodes \ndn < , the selection procedure will move to the third \nphase to randomly pick up peer nodes from the rest of \ncached peer nodes.  \n15th EUROMICRO International Conference on Parallel, Distributed and Network-Based Processing (PDP'07)\n0-7695-2784-1\/07 $20.00  \u00a9 2007\n Figure 2 shows an example of query routing with \nSocial-P2P algorithm. Suppose node S receives a query \nwith the topic \u201cradar remote sensing.\u201d  Node S will \nretrieve the peer nodes associated with the topic \u201cradar \nremote sensing.\u201d However, no matches are found in the \nknowledge index in this case. Node S will further \nretrieve peer nodes associated with the relevant topics \n\u201coptical remote sensing\u201d and \u201claser remote sensing\u201d \nfrom the same interest area of the requested topic. In \nthis case, node S gets node A and node B associated \nwith these topics from the knowledge index. Because \nnode A is associated with both topics \u201coptical remote \nsensing\u201d and \u201claser remote sensing\u201d and node B is only \nassociated with one topic, node A is more correlated \nwith the interest area of \u201cremote sensing\u201d according to \nthe cached knowledge. The query will be forwarded \nmore preferentially to node A than node B. Node A \nmay not have the requested files, but it will use its own \ncached knowledge to propagate the query further and \nfind peer nodes for the query that will have a higher \nlikelihood of having the requested files. In this \nexample, node A knows that node D is associated with \nthe querying topic and the requested files are obtained \nin node D. \n \n \nFigure 2. Social-P2P routing. \n \nIn social networks, a person builds his\/her social \nnetwork by the result of experiences in previous \ninteractions with other people. Similar to social \nnetworks, a node builds its social network by \nconnecting to other peer nodes according to the results \nof previous searches. If a search is successful, the \nrequesting node will connect to the remote nodes that \nsupplied the requested files. In social networks, some \nevents with associated people fade from a person\u2019s \nmemory with time and a person\u2019s social network is \nadjustable with changed environments. Similarly, the \nsize of knowledge index of Social-P2P is finite and the \nnode connections are adjusted with cached knowledge. \nSocial-P2P involves a topology adaptation method to \nresemble the dynamics of social connections. The \nknowledge index is maintained in a queue using a \nLeast Recently Used (LRU) policy without duplicates. \nThe oldest knowledge will be dropped when the \nknowledge index reaches a maximum. When some \npeer nodes are removed with some old or invalid \nknowledge and no longer exist in the knowledge index, \nthe corresponding connections will be released and \nonly a number of associated connections are kept in \neach node. \nIn social networks, a social community is a group of \npeople with common interests, goals or \nresponsibilities. In Social-P2P, each peer node shares a \nnumber of files associated with its interests. It is not \nnecessary for a peer node to declare its interest since \nthat has already been implied by its shared files, which \nis similar to social networks where a person does not \nneed to tell everybody that he\/she is an expert in the \nareas which has been indicated with his\/her social \nbehaviours. Because connections are built according to \nthe results of searches, a node has more probability to \nconnect to other peer nodes with the same interests that \nhave files of interest to him\/her with a high degree of \nlikelihood. Therefore, the peer nodes that have the \nsame interests are highly connected to each other and \nform a virtual community spontaneously, which is a \nsimilar environment to Duncan\u2019s model [2] in social \nnetworks. Because the virtual communities are formed \nspontaneously, no additional overhead is required to \nobtain extra information to maintain these communities \ncompulsorily.   \n \n4. Simulation methodology \n \n4.1. Network generation \n \nWe evaluated the performance of Social-P2P by \nsimulation in a dynamic environment with 1000 peer \nnodes. Each peer node randomly connected to four \npeer nodes bi-directionally to generate a random \ntopology. Each peer node kept about eight links at \nstart-up of the simulations. Since there have been no \ninteractions between peer nodes at the beginning of \neach simulation run, each peer node keeps a empty \nknowledge index which can contain a maximum of 40 \nentries about topics and associated addresses of peer \nnodes. We ran simulations to trace the results of about \none month (30 days, 60000 time steps). \n \n4.2. Content generation and distribution \n \nThe topic keyword distribution to files is uneven in \nP2P file-sharing networks, where popular topics are \nwidely distributed to files but unpopular topics receive \nlittle attention by people. The previous studies \nobserved that the distribution of keywords in files \ncould be approximated by Zipf\u2019s law in the form of \n\u03b1x\ny 1~ , where y is frequency, x is rank and \u03b1  is \n15th EUROMICRO International Conference on Parallel, Distributed and Network-Based Processing (PDP'07)\n0-7695-2784-1\/07 $20.00  \u00a9 2007\n constant. The estimated distribution in the \nmeasurement study [28] has been followed in our \nsimulations to generate topic keyword distribution to \nfiles. In each simulation run, we generated 1280 topics, \ndistributed them to 10000 files, and each file was \nassigned two topics. Previous measurement studies \nhave shown the distribution of the number of shared \nfiles to peer nodes in P2P networks is also unbalanced. \nSome nodes observed in existing P2P networks tend to \ndownload a large amount of files, but share few files or \nnone at all [29]. In the simulations, we implemented \nthe distribution of file sharing in the measurement \nstudy [28], where about 40% of peer nodes share 10 \nfiles or less, including 27% of \u201cfree-riders\u201d who share \nnothing to the network and 32% of peer nodes share \nmore than 100 files. \nThe measurement study [30] for the music sharing \nnetwork on Stanford shows that most peer nodes only \nshares one or a few styles of music that are highly \ncorrelated with users\u2019 preferences. In our simulations, \neach peer node was assigned a primary interest area \nand shared a number of files to the network with a \nprobabilistic method: these shared files were mostly \nrelevant to the primary interest area of node with a \nprobability of 90%, but occasionally were irrelevant to \nthis area. For files relevant to the primary interest area, \nat least one of the topics of each file should be in the \ninterest area of the hosting node. A total of 32 interest \nareas were generated and each covered 40 topics.  \n \n4.3. Query generation \n \nIn each time step, we randomly chose a node as the \nrequesting node and start a search with a topic. The \nquerying topic was generated with a probabilistic \nmethod that the topic was randomly selected from its \nprimary interest area with a probability of 90%, but \nsometimes was from a random area with a probability \nof 10%. Each query was tagged by TTL to limit the life \ntime of message to 3 hops in the simulations. The \nnumber of peer nodes to be contacted in each hop \n3=d . Even though the request frequency was variable \nfor different users in different periods, the study [34] \nobserved that each peer node generates an average of \ntwo requests each day. This has been implemented in \nour simulations. \n \n4.4. Network churns \n \nIn the dynamic and unpredictable Internet \nenvironment, network churns are usually caused firstly \nby peer nodes frequently going online and offline and \nsecondly by content sharing and removing. The study \n[31] measured network churns by using a user ID \ninstead of an IP address that was used by some \nprevious measurement studies (e.g. [32]). IP address \naliasing is a significant issue in the deployed P2P \nsystems (almost 40% of peer nodes use more than one \nIP address over one day according to [31]). Therefore, \nour simulations followed the availability distribution of \npeer nodes in the study [31], where about 50% of peer \nnodes are present less than 30%.  \nThe research in [33] argued that user interest shift is \na vital factor for P2P file-sharing networks, especially \nin today\u2019s dynamic information era. To address this \nissue, 1% of peer nodes randomly shifted their interest \neach day in the simulations. Their major requests and \nadditional file sharing followed the new interests after \nshifting interest. To simulate the dynamics of file \nsharing, we randomly picked 1% of peer nodes to share \nextra 5% files to the network and 1% of peer nodes to \nremove 5% of shared files from the network every day \n(2000 queries, 2000 time steps).  \nNetwork churns in this case could affect the \n\u201ccorrectness\u201d of information in the knowledge index. \nThe selected peer nodes that previously had the \nrequested files could be offline from the network at the \nmoment of requesting. Or, the requested files that were \npreviously available on the selected peer nodes could \nhave already been removed from the network.  \n \n4.5. Performance metrics \n \nPerformance is evaluated with the following \nmetrics:  \n\u2022 Average path length of searches: the average of \ndistances from the requesting node to the target node \nwhich firstly finds a matched file. \n\u2022 Recall: the ratio of the number of found files to the \nnumber of all matched files in the network. \n\u2022 Average path length to nodes: the average of the \nshortest distances between any two peer nodes in the \nnetwork.  \n\u2022 Average clustering coefficient: the average of the \nclustering coefficients of all nodes in the network. \nClustering coefficient of a node is the proportion of \nthe links between nodes within its neighbourhood \ndivided by the number of links that could possibly \nexist between them [2]. \n \nThe performance metrics were recorded and \nstatistically analysed. Each average result was \ngenerated from the experimental results of each day \n(2000 queries, 2000 time steps).   \n \n \n \n15th EUROMICRO International Conference on Parallel, Distributed and Network-Based Processing (PDP'07)\n0-7695-2784-1\/07 $20.00  \u00a9 2007\n 5. Simulation results \n \n5.1. Performance evaluation \n \nWe compare the performance of Social-P2P with the \nfollowing methods:  \n\u2022 RAN: a constrained Gnutella-like routing strategy \nwithout a knowledge index. Received queries are \nrandomly passed to a number of connected peer \nnodes. \n\u2022 NEURO: a semantic routing strategy extended from \nNeuroGrid with adaptive connections that the node \nconnections are adaptive with cached knowledge. \nReceived queries are passed to peer nodes directly \nassociated with the requested topic from the \nknowledge index. If not enough matches are found, \nthe algorithm randomly forwards query to peer nodes \nfrom the rest of neighbours. \n0\n0.05\n0.1\n0.15\n0.2\n0.25\n0.3\n0.35\n1 3 5 7 9 11 13 15 17 19 21 23 25 27 29\nDays\nR\nec\nal\nl\nSocial-P2P NEURO RAN Maximum\n \nFigure 3. Recall of searches \n1\n1.5\n2\n2.5\n3\n3.5\n1 3 5 7 9 11 13 15 17 19 21 23 25 27 29\nDays\nA\nve\nra\nge\n P\nat\nh \nLe\nng\nth\n o\nf S\nea\nrc\nhe\ns\nSocial-P2P NEURO RAN\n \nFigure 4. Average path length of searches \n \nFrom the results in Figure 3 and Figure 4, Social-\nP2P achieved the best performance, which more \nquickly targeted more requested files and more \nefficiently established a knowledge index about the \nlocation of files than NEURO method. At the early \nstage of searches, it is very difficult for peer nodes to \nfind directly associated peer nodes with the requested \ntopic by using either Social-P2P or NEURO method, \nbut Social-P2P is capable of retrieving the peer nodes \nwho share associated files with the requested topic \nmore often. These peer nodes that are highly correlated \nwith the semantic area of the requested topic have \nmore knowledge about the query than random nodes. \nTherefore, Social-P2P can find the requested files more \nquickly and efficiently based on the same knowledge. \nMore successful searches, in turn, help to build the \nknowledge index more efficiently. Therefore, Social-\nP2P has a better search capability and a better \nknowledge-collecting capability. With these \nadvantages, Social-P2P achieved better performance \nthan other methods. In Figure 3, the maximum possible \nrecalls are all below 35%, because a large amount of \nfiles are available on a large number of offline nodes. \nAs shown in Figure 3, the recalls of all simulated \nmethods are also in a low-value area by setting a small \nTTL ( 3=TTL ). \n0\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30\nDays\nAv\ner\nag\ne \nC\nlu\nst\ner\nin\ng \nCo\nef\nfic\nie\nnt\nSocial-P2P NEURO RAN\n \nFigure 5. Average cluster coefficient. \n1\n1.5\n2\n2.5\n3\n3.5\n4\n0 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30\nDays\nA\nve\nra\nge\n P\nat\nh \nLe\nng\nth\n to\n N\nod\nes\nSocial-P2P NEURO RAN\n \nFigure 6. Average path length to nodes. \n \n \n5.2. Topology evolution \n \nIn Duncan\u2019s model [2], a small world network is a \nkind of network with a high clustering coefficient of \nnodes and a short average path length to other peer \nnodes. Figure 5 and Figure 6 show the comparison of \nthe average cluster coefficient and average path length \nof Social-P2P, NEURO, and RAN, respectively. As \nshown in Figure 6, the average path length of Social-\nP2P is only slightly smaller than that of NEURO, since \nwe imposed the same connection adaptation strategy to \nthem. However, by using different routing strategies, \ntheir search performances are clearly different as \n15th EUROMICRO International Conference on Parallel, Distributed and Network-Based Processing (PDP'07)\n0-7695-2784-1\/07 $20.00  \u00a9 2007\n shown in Figure 3 and Figure 4. The average path \nlengths of Social-P2P and NEURO decrease with time \nand the peer nodes in the network are in the average of \n\u201ctwo degrees of separation\u201d in the end.  \nWe also compare the clustering coefficient of \nSocial-P2P to that of a random network with the same \nnumber of nodes and connections. The clustering \ncoefficients of the random network are given by the \nequation [35]: NkC \/\u2248 , where k  is the average \nnode degree of the network and N is the total number \nof nodes in the network. As shown in Figure 7, the \nclustering coefficient of Social-P2P is much greater \nthan that of the random network with the same number \nof nodes and connections. The simulation results show \nthat the small-world phenomenon also appears in the \nSocial-P2P with a high clustering coefficient and a \nshort average path length to other peer nodes. \n0\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30\nDays\nA\nve\nra\nge\n C\nlu\nst\ner\nin\ng \nC\noe\nff\nic\nie\nnt\nSocial-P2P Random network\n \nFigure 7. Clustering coefficient comparison \nbetween Social-P2P and a random network with the \nsame number of nodes and connections. \n \n \n5.3. Request structure \n \nWe simulated Social-P2P with different request \nstructures. Recall that the requested topic was selected \nfrom the primary interest area of the requesting node \nwith a probability p , but was from a random area with \na probability ( p\u22121 ). In the case of %0=p , a purely \nrandom topic was chosen as the requested topic which \nis the worst case, since the requesting peer node cannot \nbenefit from repeated queries in its interest area. On \nthe contrary, in the case of %100=p , all requested \ntopics were randomly selected from the primary \ninterest area of the requesting node.  \nFigure 8 shows the results of average path length of \nsearches by Social-P2P on some representative \nsamples of p of 0%, 50%, 90%, and 100%, \nrespectively. In this simulation, the request scope was \nenlarged by setting a smaller p . Since the probability \nof matching cached knowledge decreases with p , the \naverage path length of each search increases along with \np  which means the peer nodes generally need more \nhops to target the requested files in the network where \nusers have very wide interests. But the performance of \nSocial-P2P is still better than that of NEURO even in \nthe worst case of %0=p  as shown in Figure 8, \nbecause Social-P2P can still find the peer nodes that \npotentially have the knowledge about queries even \nthough it can not find the directly associated peer \nnodes from the knowledge index. \n1\n1.5\n2\n2.5\n3\n3.5\n1 3 5 7 9 11 13 15 17 19 21 23 25 27 29\nDays\nA\nve\nra\nge\n P\nat\nh \nLe\nng\nth\n o\nf S\nea\nrc\nhe\ns\nSocial-P2P (p=100%) Social-P2P (p=90%)\nSocial-P2P (p=50%) Social-P2P (p=0%)\nNEURO (p=0%)\n \nFigure 8. Average path length of searches with \ndifferent request structures. \n \n \n6. Conclusions \n \nDue to the similarity of social networks and peer-to-\npeer networks, we believe and demonstrate that human \nstrategies in social networks are useful for improving \nresource discovery by building a social P2P network. \nIn this paper, we present a Social-P2P algorithm for \nresource discovery by mimicking human behaviours in \nsocial networks without additional overhead. In Social-\nP2P, a knowledge index is built according to the results \nof previous searches. Queries are routed intelligently \neven only with limited knowledge and connections. \nThe small-world phenomenon has been observed in \nSocial-P2P networks with a high clustering coefficient \nand a short average path length. Social-P2P system has \nbeen simulated in a dynamic environment with \nprobabilistic request structure and file sharing. From \nthe results and analysis, Social-P2P achieved better \nperformance, more quickly found more matched files \nand more efficiently established a knowledge index \nabout the location of files, than current methods. \n \nReferences \n \n[1] S. Milgram, \u201cThe Small World Problem,\u201d Psychology \nToday 2, 1967, pp.60-67. \n[2] D. Watts and S. Strogatz, \u201cCollective Dynamics of \nSmall-World Networks,\u201d Nature 393, 1998, pp.440-442. \n15th EUROMICRO International Conference on Parallel, Distributed and Network-Based Processing (PDP'07)\n0-7695-2784-1\/07 $20.00  \u00a9 2007\n [3] I. Stoica, et al., \u201cChord: A Scalable Peer-to-Peer Lookup \nService for Internet Applications,\u201d in Proc. of ACM \nSIGCOMM, San Diego, CA, 2001, pp.149-160. \n[4] S. Ratnasamy, et al., \u201cA Scalable Content-Addressable \nNetwork,\u201d in Proc. of the ACM SIGCOMM, San Diego, \nCA, 2001, pp.161-172. \n[5] A. Rowstron and P. Druschel., \u201cPastry: Scalable, \nDistributed Object Location and Routing for Large-scale \nPeer-to-Peer Systems,\u201d in Proc. of IFIP\/ACM \nInternational Conference on Distributed Systems \nPlatforms, Heidelberg, Germany, 2001. \n[6] N. Antonopoulos and J. Salter, \u201cEfficient Resource \nDiscovery in Grids and P2P Networks,\u201d Internet \nResearch, Vol 14, No 5, 2004, pp.349-346. \n[7] P. Maymounkov and D. Mazieres, \u201cKademlia: A Peer to \nPeer Information System Based on the XOR Metric,\u201d in \nProc. of International Workshop on Peer-to-Peer \nSystems, Cambridge, MA, 2002. \n[8] B. Yang and H. Garcia-Molina, \u201cEfficient Search in \nPeer-to-Peer Networks,\u201d in Proc. of International \nConference on Distributed Computing Systems, Vienna, \nAustria, 2002. \n[9] S. Rhea, D. Gells, T. Roscoe, and J. Kubiatowicz, \n\u201cHandling Churn in a DHT,\u201d in Proc. the USENIX \nAnnual Technical Conference, Boston, MA, 2004.  \n[10] F.M. Cuenca-Acuna and T.D. Nguyen. \u201cText-based \nContent Search and Retrieval in ad hoc P2P \nCommunities,\u201d in Proc. of International Workshop on \nPeer-to-Peer Computing, Pisa, Italy, 2002. \n[11] M.S. Khambatti, K.D. Ryu and P. Dasgupta, \u201cEfficient \nDiscovery of Implicitly Formed Peer-to-Peer \nCommunities,\u201d Journal of Parallel and Distributed \nSystems and Networks, 5(4), 2002, pp.155-164. \n[12] M. Khambatti, K.D. Ryu and P. Dasgupta, \u201cStructuring \nPeer-to-Peer Networks Using Interest-Based \nCommunities,\u201d in Proc. of International Workshop on \nDatabases, Information Systems, and Peer-to-Peer \nComputing, Toronto, Canada, 2004. \n[13] R. Karp, S. Shenker, C. Schindelhauer, and B. Vocking, \n\u201cRandomized Rumour Spreading,\u201d in Proc. of 41st \nSymposium Foundation on Computer Science, Redondo \nBeach, CA, 2000. \n[14] B. Bloom. \u201cSpace\/time Tradeoffs in Hash Coding with \nAllowable Errors,\u201d CACM, 13(7), 1970, pp.422-426. \n[15] A. Crespo and H. Garcia-Molina, \u201cRouting Indices for \nPeer-to-Peer Systems,\u201d in Proc. of the International \nConference on Distributed Computing Systems, Vienna, \nAustria, 2002. \n[16] JXTA. Available: http:\/\/www.jxta.org. \n[17] Bearshare. Available: http:\/\/www.bearshare.com. \n[18] L. Xiao, Y.Liu, and L.M. Ni, \u201cImproving Unstructured \nPeer-to-Peer Systems by Adaptive Connection \nEstablishment,\u201d IEEE Transactions on Computers 54, \n2005, pp.176-184. \n[19] Y. Chawathe, S. Ratnasamy, L. Breslau, N. Lanham, \nand S. Shenker, \u201cMaking Gnutella-Like P2P System \nScalable,\u201d in Proc. of ACM SIGCOMM, Kasruhe, \nGermany, 2003. \n[20] D. Tsoumakos and N. Roussopoulos, \u201cAdaptive \nProbabilistic Search for Peer-to-Peer Networks,\u201d in \nProc. of the International Conference on Peer-to-Peer \nComputing, Linkoping, Sweden, 2003. \n[21] S. Joseph, \u201cNeuroGrid: Semantically Routing Queries in \nPeer-to-Peer Networks,\u201d in Proc. of the International \nWorkshop on Peer-to-Peer Computing, Cambridge, MA, \n2002. \n[22] C. Tempich, S. Staab, and A. Wranik, \u201cREMINDIN: \nSemantic Query Routing in Peer-to-Peer Networks \nBased on Social Metaphors,\u201d in Proc. of 13th WWW \nConference, New York City, 2004. \n[23] SWAP, Available: http:\/\/swap.semanticweb.org\/. \n[24] Jon Kleinberg, \u201cSmall-World Phenomena and the \nDynamics of Information,\u201d Advances in Neural \nInformation Processing Systems (NIPS) 14, 2001. \n[25] H. Zhang, A. Goel, R. Govindan, \u201cUsing the Small-\nWorld Model to Improve Freenet Performance,\u201d \nComputer Networks 46(4), 2004, pp.555-574. \n[26] L. Liu, S. Mackin, and N. Antonopoulos, \u201cSmall World \nArchitecture for Peer-to-Peer Networks,\u201d in Proc. of \nIEEE\/WIC\/ACM Workshop on Peer-to-Peer Networking \nand Autonomous Agents, Hong Kong, 2006, in press. \n[27] The Open Directory Project. Available: \n http:\/\/dmoz.org\/.  \n[28] P. Makosiej, G. Sakaryan, and H. Unger, \u201cMeasurement \nStudy of Shared Content and User Request Structure in \nPeer-to-Peer Gnutella Network,\u201d  in Proc. of the \nInternational Conference on Design, Analysis, and \nSimulation of Distributed Computing System, 2004. \n[29] C. Pauli and M. Shepperd, \u201cAn Empirical Investigation \ninto P2P File-Sharing User Behaviour,\u201d in Proc. of \nAmericas Conference on Information Systems, Omaha, \nNebraska, 2005. \n[30] A. Crespo and H. Garcia-Molina, \u201cSemantic Overlay \nNetwork for P2P System,\u201d Technical Report, Stanford \nUniversity, 2002. \n[31] R. Bhagwan, S. Savage, and G.M. Voelker, \n\u201cUnderstanding Availability,\u201d in Proc. of the \nInternational Workshop on Peer-to-Peer Computing \nSystem, San Joes, CA, 2003. \n[32] S. Saroiu, \u201cA Measurement Study of Peer-to-Peer File \nSharing Systems,\u201d in Proc. of Multimedia Computing \nand Networking, San Jose, CA, 2002. \n[33] Y. Ren, et al., \u201cExplore the Small World Phenomena in \nPure P2P Information Sharing System,\u201d in Proc. of the \nInternational Symposium on Cluster Computing and the \nGrid, Tokyo, 2003. \n[34] P. Krishna, \u201cMeasurement, Modelling and Analysis of a \nP2P File-sharing Workload,\u201d in Proc. of ACM \nSymposium on Operating Systems Principles, New \nYork, 2003. \n[35] H. Zhou, \u201cScaling Exponents and Clustering \nCoefficients of a Growing Random Network,\u201d Physical \nReview E66, 016125, 2002. \n15th EUROMICRO International Conference on Parallel, Distributed and Network-Based Processing (PDP'07)\n0-7695-2784-1\/07 $20.00  \u00a9 2007\n"}