{"doi":"10.1080\/0968776940020109","coreId":"14372","oai":"oai:generic.eprints.org:154\/core5","identifiers":["oai:generic.eprints.org:154\/core5","10.1080\/0968776940020109"],"title":"Intelligent approaches to performance support","authors":["Barker, Philip","Richards, Stephen","Banerji, Ashok"],"enrichments":{"references":[{"id":201576,"title":"Designing Electronic Performance Support Systems,","authors":[],"date":"1994","doi":"10.1080\/1355800950320102","raw":"Banerji, A.K., Designing Electronic Performance Support Systems, draft Ph.D. thesis, School of Computing and Mathematics, University of Teesside (in progress, 1994).","cites":null},{"id":201578,"title":"Electronic books and libraries of the future',","authors":[],"date":"1992","doi":"10.1108\/eb045143","raw":"Barker, P.G. (1992), 'Electronic books and libraries of the future', The Electronic Library, 10, 3, 139-149.","cites":null},{"id":201583,"title":"Electronic Performance Support Systems - How and Why to Remake the Workplace through the Strategic Application of Technology,","authors":[],"date":"1991","doi":null,"raw":"Gery, G.J. (1991), Electronic Performance Support Systems - How and Why to Remake the Workplace through the Strategic Application of Technology, Boston MA, Weingarten.","cites":null},{"id":1043432,"title":"Hypermedia and performance support', to appear in","authors":[],"date":"1993","doi":null,"raw":"Whitlock, Q. et al (1993), 'Hypermedia and performance support', to appear in Proceedings of ED-MEDIA '93, Orlando FL.","cites":null},{"id":201585,"title":"Information Retrieval - Computational and Theoretical Aspects,","authors":[],"date":"1978","doi":"10.1145\/1095383.1095385","raw":"Heaps, H.S. (1978), Information Retrieval - Computational and Theoretical Aspects, New York, Academic Press.","cites":null},{"id":1043430,"title":"ISDN: theoretical specification, practical potential' in","authors":[],"date":"1994","doi":"10.1049\/pbte905e_ch1","raw":"Jacobs, G. (1994), 'ISDN: theoretical specification, practical potential' in Mason R. and Bacsich, P. (eds), ISDN Applications in Education and Training, London, Institution of Electrical Engineers.","cites":null},{"id":201584,"title":"Knowledge Acquisition for Expert Systems,","authors":[],"date":"1986","doi":"10.1007\/978-1-4471-1632-5_10","raw":"Hart, A. (1986), Knowledge Acquisition for Expert Systems, London, Kogan Page.","cites":null},{"id":201577,"title":"KnowledgePro: a review and assessment',","authors":[],"date":"1989","doi":"10.1016\/0952-1976(89)90020-1","raw":"Barker, P.G. (1989), 'KnowledgePro: a review and assessment', Engineering Applications of Artificial Intelligence, 2, 4, 325-38.","cites":null},{"id":201582,"title":"Management Sciences: Models and Techniques,","authors":[],"date":"1963","doi":null,"raw":"Churchman, C.W. and Cerhulst, M. (1963), Management Sciences: Models and Techniques, New York, Pergamon.","cites":null},{"id":201579,"title":"Multimedia environments for EPSS development',","authors":[],"date":"1993","doi":null,"raw":"Barker. P.G. and Banerji, A.K. (1993), 'Multimedia environments for EPSS development', in Balagurusamy, E. and Sushila B. (eds), Proceedings of the Indian Computing Congress (ICC '92) - - Innovative Applications in Computing, New Delhi, Tata McGraw-Hill Publishing Company, pp. 423-30.","cites":null},{"id":201580,"title":"Neural Computing - an Introduction,","authors":[],"date":"1990","doi":"10.1887\/0852742622","raw":"Beale, R. and Jackson, T. (1990), Neural Computing - an Introduction, Bristol, Adam Hilger.","cites":null},{"id":1043431,"title":"NeuroShell User's Manual, 3rd edition,","authors":[],"date":"1990","doi":null,"raw":"Ward Systems (1990), NeuroShell User's Manual, 3rd edition, Maryland VA.","cites":null},{"id":201581,"title":"Systems Behaviour, London,","authors":[],"date":"1972","doi":"10.1080\/00140137308924543","raw":"Beishon, J. and Peters, G. (1972), Systems Behaviour, London, Open University Press.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"1994","abstract":"Electronic performance support systems provide an important method of meeting on\u2010demand educational and training requirements. They also provide efficient and effective ways of enabling the knowledge and expertise within an organization to be shared. This paper discusses the design of a distributed electronic performance support system and the ways in which \u2018intelligent agents\u2019 based on expert systems and neural networks can be used to locate and share distributed expertise. A case study illustrating our approach to the implementation and use of intelligent agents is presented","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/14372.pdf","fullTextIdentifier":"http:\/\/repository.alt.ac.uk\/154\/1\/ALT_J_Vol2_No1_1994_Intelligent%20approaches%20to%20perf.pdf","pdfHashValue":"685b77413bf8cd9e4e8528c34e7a0d281dc7f3e7","publisher":"Universit of Wales Press","rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:generic.eprints.org:154<\/identifier><datestamp>\n      2011-04-04T09:27:10Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      7375626A656374733D4C:4C42<\/setSpec><setSpec>\n      7375626A656374733D4C:4C43:4C4331303232<\/setSpec><setSpec>\n      74797065733D61727469636C65<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/repository.alt.ac.uk\/154\/<\/dc:relation><dc:title>\n        Intelligent approaches to performance support<\/dc:title><dc:creator>\n        Barker, Philip<\/dc:creator><dc:creator>\n        Richards, Stephen<\/dc:creator><dc:creator>\n        Banerji, Ashok<\/dc:creator><dc:subject>\n        LB Theory and practice of education<\/dc:subject><dc:subject>\n        LC1022 - 1022.25 Computer-assisted Education<\/dc:subject><dc:description>\n        Electronic performance support systems provide an important method of meeting on\u2010demand educational and training requirements. They also provide efficient and effective ways of enabling the knowledge and expertise within an organization to be shared. This paper discusses the design of a distributed electronic performance support system and the ways in which \u2018intelligent agents\u2019 based on expert systems and neural networks can be used to locate and share distributed expertise. A case study illustrating our approach to the implementation and use of intelligent agents is presented.<\/dc:description><dc:publisher>\n        Universit of Wales Press<\/dc:publisher><dc:date>\n        1994<\/dc:date><dc:type>\n        Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:format>\n        application\/pdf<\/dc:format><dc:language>\n        en<\/dc:language><dc:rights>\n        cc_by_nc_nd<\/dc:rights><dc:identifier>\n        http:\/\/repository.alt.ac.uk\/154\/1\/ALT_J_Vol2_No1_1994_Intelligent%20approaches%20to%20perf.pdf<\/dc:identifier><dc:identifier>\n          Barker, Philip and Richards, Stephen and Banerji, Ashok  (1994) Intelligent approaches to performance support.  Association for Learning Technology Journal, 2 (1).  pp. 63-69.  ISSN 0968-7769     <\/dc:identifier><dc:relation>\n        10.1080\/0968776940020109<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/repository.alt.ac.uk\/154\/","10.1080\/0968776940020109"],"year":1994,"topics":["LB Theory and practice of education","LC1022 - 1022.25 Computer-assisted Education"],"subject":["Article","PeerReviewed"],"fullText":"ALT-J VOLUME 2 NUMBER 1\nIntelligent approaches to performance support\nPhilip Barker, Stephen Richards and Ashok Banerji\nInteractive Systems Research Group, School of Computing and\nMathematics, University of Teesside, UK\nAbstract\nElectronic performance support systems provide an important method of meeting on-demand\neducational and training requirements. They also provide efficient and effective ways of\nenabling the knowledge and expertise within an organization to be shared. This paper dis-\ncusses the design of a distributed electronic performance support system and the ways in\nwhich 'intelligent agents' based on expert systems and neural networks can be used to locate\nand share distributed expertise. A case study illustrating our approach to the implementation\nand use of intelligent agents is presented.\nIntroduction\nThe performance of virtually all organizations depends on a wide range of internal and\nexternal factors that can interact with each other in many complex ways. One very important\naspect of performance is competitivity - the ability to perform organizational tasks in ways\nthat are more efficient and more effective than those of other organizations. Research has\nshown that the competitivity of any given organization in the manufacturing and services\nsector largely depends on four critical factors (Churchman and Cerhulst 1963; Beishon and\nPeters 1972): (1) a flexible management structure that is able to take advantage of the latest\ndecision-making tools; (2) the availability of appropriate facilities to enable the organization\nto perceive and understand changes and trends in market forces; (3) an adaptable and respon-\nsive workforce; and (4) the ability to make information and knowledge available at critical\npoints of need. Such aspects of organizational activity are, obviously, also broadly applicable\nto educational institutions, not least since each aspect involves people and human behaviour.\nIn order to be successful and competitive, it is therefore imperative that an organization\nprovides appropriate opportunities and facilities to enable its workforce to perform jobs to\nmaximum effect in an ergonomically pleasing way. One approach to realizing this objective is\nthrough the use of various types of performance support system.\nA performance support system is essentially a 'job aid' that enables its users to improve the\nefficiency and effectiveness with which they are able to complete particular tasks. A simple\nexample of a performance support system is a pocket calculator. Word-processing systems and\n63\nPhilip Barker et al. Intelligent approaches to performance support\ndesktop-publishing packages are further examples: they significantly improve the efficiency\nwith which their users can create documentation. Email and computer-supported co-operative\nwork (CSCW) techniques are also important performance aids since they enable geographi1\ncally distributed organizations to undertake rapid inter-site and interpersonal communication,\nto share intellectual and managerial resources, and to participate in collaborative problem-\nsolving at a distance.\nHigh-performanee, general-purpose, multimedia, interactive, computer-based workstations\nnow provide a powerful environment within which to implement a new type of sophisticated\nelectronic performance support system (EPSS). Such systems can be designed to perform a\nnumber of generic job-aiding functions such as the provision of help and advice, the sharing\nof organizational expertise, and access to large volumes of information and documentation.\nAlso, in situations where it is appropriate, an EPSS can provide on-demand instruction at a\nparticular point of need. This latter function can be achieved by means of a just-in-time (JIT)\nparadigm which can be realized through interactive on-the-job training techniques. JIT\ntraining methods involve providing instruction to an individual as and when it is needed in\norder to perform a particular job function effectively. The concept and potential of EPSSs is\nwell-documented in the literature (see, for example, Gery 1991; Barker and Banerji 1993; and\nWhitlock et al 1993).\nOne important aspect of EPSS design and implementation is the provision of organizational\ndocumentation in electronic form. This requirement is necessary for a number of practical\nreasons, but primarily because of the large volumes of information that are involved and the\nWS. = multimedia workstation\nISDN = Integrated Services Digital Network\nElectronic Books\nExperts\nEmployees\nTypes of electronic book:\n1: common shared books\n2: private local books\n3: external public books\nElectronic Books\nExperts\nExperts\nV J \/ Employees\nElectronic Books\nFigure 1: A distributed\nelectronic performance support\nsystem\n64\nAu-J VOLUME 2 NUMBER 1\nease with which electronic documentation can be accessed, updated and shared. As part of our\nEPSS research we have therefore been exploring the problems involved in converting conven-\ntional paper-based documentation into electronic form.\nAs an alternative publication medium we have been using CD-ROM to produce a series of\nelectronic books for use with performance support systems (Barker 1991; Barker 1992). A\nrange of different types of publication have been produced, containing textual information,\nmultimedia information (text, pictures and sound) and hypermedia material. These electronic\npublications embed the information necessary to facilitate many different aspects of organiza-\ntional activity, and a range of storage and retrieval techniques has been used in order to\nprovide access to the information held on the CD-ROMs.\nOur previous research into generic EPSS structures has been described in detail elsewhere\n(Barker 1991; Banerji 1993). This paper now describes the ways in which we have been using\nelectronic books to provide intelligent approaches to performance support within a distributed\nEPSS facility. The basic type of system we have been considering is illustrated schematically\nin Figure 1.\nThe implementation depends on the creation of three basic types of electronic-book publica-\ntion: common shared books, private local books, and external public books. Within our\nsystem, 'intelligent agents' are used to keep track of an organization's expertise within\ndifferent problem-solving domains. These agents can be used to locate sources of relevant\nexpertise, and to facilitate the transfer of this expertise (in electronic form) to the required\npoint of need. This transfer can be accomplished using a dedicated network or, for example,\nthe Integrated Services Digital Network (ISDN) when large amounts of data have to be\ntransferred rapidly over public telephone lines (for a technical overview of ISDN, its limita-\ntions and practical potential within education and training, see Jacobs 1994).\nDevelopment tools for intelligent agents\nA range of different artificial-intelligence techniques can be used to develop intelligent agents\nfor use within distributed EPSSs. Two of the most important types of generic.tool we have\nbeen using in our work are expert systems and neural networks.\nAn expert system is a software tool containing domain expertise which can be used to solve\nproblems within a particular subject area. Most of the commonly available expert systems\nmodel domain knowledge in terms of collections of 'if-then-else' rules (Hart 1986). Essen-\ntially, these rules constitute a decision tree which, given the necessary input parameters,\nreduces a large problem-space to more manageable proportions. The rules then provide\nrelevant sources of advice about the problem being solved. The major limitation of expert\nsystems, however, is that they cannot learn: all the rules used have to be coded into an expert\nsystem by human experts before it can be used to solve problems.\nA neural network system is a computing facility modelled on the basic way in which the\nhuman brain is thought to work (Beale and Jackson 1990). Such systems consist of a large\ncollection of artificial neural elements interconnected in various ways in order to solve\nparticular classes of problem. The interconnections within a given neural network are formed\nby a process of training. During its training phase, a neural network learns what connections\nare necessary in order to solve a given type of problem. Once the training phase is complete, a\ntrained neural network can be put to work within the problem domain for which it has been\ncreated.\n65\nPhilip Barker et al. Intelligent approaches to performance support\nIn many situations, tools can be constructed which depend on the useful features of both\nexpert system and neural-network technologies. This is the approach we have adopted in order\nto create the intelligent agents used in the case study described below. In the example pre-\nsented, the expert system is used to embed rule-based 'common-sense' knowledge, while a set\nof neural networks is used to encode 'deep' compiled knowledge. Each neural net represents a\ndifferent conceptual view of a knowledge domain within a particular distributed EPSS facility.\nObviously, within the distributed EPSSs we are developing, the expert system and the neural-\nnetwork components have to be integrated in a transparent and seamless manner. They also\nhave to be combined with those other components of the EPSS that are needed for the particu-\nlar application being considered (email, text retrieval, simulation, computer-based instruction,\nand so on). We will now describe in more detail the way in which these objectives are real-\nized.\nCase study - views of knowledge\nThe work we have been undertaking is aimed at finding ways of sharing expertise and knowl-\nedge within a distributed EPSS facility similar to the one illustrated in Figure 1. The particu-\nlar aspect we have been exploring relates to the sharing of different views of a common\nknowledge domain within a distributed environment. The basic structure of the system we\nhave been developing is illustrated schematically in Figure 2. In this particular work, the\nknowledge pool consists of large collections of text-based material that have been published\nin the form of electronic books on CD-ROM.\nterminal communications\nfacility\nEPSS SHELL\nexpert\nsystem\nneural\nnetwork\nintelligent agents\nwindow\ndata\nbase\nfull-text\nretrieval browsers\nknowledge pool (electronic books)\nFigure 2: Use of intelligent\nagents in an EPSS facility\n66\nALT-J ' VOLUME 2 NUMBER 1\nFundamental to the basic EPSS shell is its system database, used to organize and control\naccess to all the underlying information. A user has full access to all the available material\nthrough the mechanisms associated with conventional computer-based full-text retrieval\n(Heaps 1978), book indexes and book contents lists. Of course, if necessary a user could also\nsimply browse through the material in the knowledge pool using a range of different browsing\ntechniques, but because of the significant volumes of information involved this approach\nwould be time-consuming and inefficient\nThe full-text retrieval method is difficult to direct with regard to context. This can be both an\nadvantage and a disadvantage. It is an advantage in the sense that all information associated\nwith a given set of keywords is retrieved. On the other hand, it is a disadvantage in that high\ndegrees of relevance are often difficult to achieve; that is, the problem with full-text retrieval\nis that it can retrieve a substantial volume of information which is irrelevant, even when\nBoolean search techniques (AND, OR etc.) are used.\nWithin the system we have been developing, users are able* to initiate both 'direct' or 'as-\nsisted' information access. Direct access involves invoking either the full-text search engine,\nthe book browser, or a direct query to a specified neural net (that is targeted towards a particu-\nlar part of the knowledge pool). Such direct access depends on a user having a clear idea of\nboth problem formulation and knowledge-pool organization. While this may be feasible with\nsmall amounts of knowledge, it can become a problem when access to information from a\nlarge corpus is required. An alternative strategy involves a user seeking guidance from an\nexpert system for direction as to the most suitable access method based on his\/her current\norientation to a particular problem. In this situation, the expert system uses basic rules about\nthe knowledge pool and the user's problem definition in order to identify the strategy most\nlikely to yield the desired information.\nIf a user chooses an approach based on a neural network, the expert system will access the\nsystem database in order to obtain the necessary information (keywords and their associated\nweightings) to supply to the neural-network engine. Because people differ in their views of\nknowledge, different views of the knowledge pool can be constructed by changing the\nweightings assigned to the keywords. This information is used to create a new window (or\n'view') onto the knowledge pool through the production of a new net (see Figure 2). The\nresulting net, with particular values of keywords and strengths, constitutes the compiled\nversion of various experts' knowledge. These nets provide multiple views of the information -\nfor instance, from the perspective of a particular type of expertise, context, interest or prob-\nlem area.\nWe are currently using two strategies to create the information needed to train our neural\nnetworks. One of these is automated, while the other (manual method) depends on the encod-\ning of knowledge by an expert. The automated approach uses software tools, which we have\ndeveloped, in order to identify potential keywords and calculate their frequency within the\nvarious sections of a document. These frequencies are then used to calculate weightings and\nproduce a training set for the neural-network engine. A typical training set could be as follows\n(where kw = keyword and w = weighting):\nInput: kwl,w3; kw2,w2; kw4,w5; Output: a\nInput: kwl,w5; kw3,w4; kw5,wl; Output: b\nThe expert encoding technique relies on an expert to input relevant keywords and\/or phrases,\nalong with respective weightings, into our training-set generation tool. The latter technique\n67\nPhilip Barker et al. Intelligent approaches to performance support\nrequires greater production time and effort but provides increased accuracy. When using the\ndelivery system, a net appropriate to the current task is selected - either manually by the user\nor automatically by the expert system. Information about the current problem, consisting of\nkeywords and relative weightings from the user, is then encoded into a query. This query is\npassed, along with the appropriate neural-net information from the database, to the neural\nnetwork engine. Information is returned in the form of a list of locations in order of relevance\nto the current problem. Direct access is then available to the locations suggested. Only on the\noccasion when such a strategy fails will the user need laboriously to access every instance of a\nparticular set of keywords using the full-text retrieval engine,\nA major advantage of a neural-net approach is the potential for the various networks to\ncontinue learning about the knowledge pool from interaction with expert users. Keywords can\nbe added or removed, weightings can be adjusted, new knowledge can be added to the pool,\nand new training sets can be produced which allow the first-time hit rate of the networks to be\nimproved. In this way, an information environment is created which can learn and adapt to\nconstantly changing environments. Obviously, such a strategy is also very useful when\norganizational expertise is distributed. For example, in on-the-job situations, information\nrequirements are often immediate. If a particular individual does not have the necessary\nexpertise, then very often he\/she will consult the organization's expert in that particular field.\nIn a situation where the expertise is at a remote site, or simply unavailable, efficiency is\nobviously diminished. Even in cases where the remote expert is available, it can take some\ntime for that expert to locate the particular information required. The distributed system we\nare developing goes some way to reducing such problems. When a query is made to an expert,\nthe expert has access to a number of neural nets providing windows on the knowledge pool\nwhich are tuned to particular perspectives or sets of problems. This allows the expert quickly\nto obtain the required information and respond promptly to the remote request. In addition,\nthe expert's neural nets can be sent to the remote sites whenever any new learning has taken\nplace. This means that in the absence of an available expert, any individual can formulate a\nquery based on a combination of the expert system and the relevant expert's neural nets,\nproviding the potential for non-experts to solve problems independently outside their knowl-\nedge domain. Such immediate access to essential information can greatly improve both\nindividual and organizational efficiency.\nThe prototype system which has been built to implement the model described above and\ndepicted schematically in Figure 2 runs under Windows 3.1 on a 486 PC. The EPSS shell is\nwritten in KnowledgePro for Windows (version 2.21). KnowledgePro also provides the\nenvironment for the creation of the expert-system component of our system (Barker 1989).\nThe neural networks used within our prototype have been developed using a low-cost system\ncalled NeuroShell (Ward Systems 1990). Full-text retrieval facilities are available through the\nSTATUS information retrieval package (Harwell Computer Systems 1991). Depending on the\nparticular tasks that have to be carried out, the EPSS shell can invoke the full-text retrieval\nengine or the neural network facility - or use its own inferencing mechanisms in order to take\nappropriate action.\nConclusion\nWorking together, expert systems and neural networks can offer a powerful set of tools for the\nimplementation of intelligent agents for handling information retrieval problems within an\nEPSS. This paper has described some of the ways in which we have been using these tech-\n68\nALT-J VOLUME 2 NUMBER 1\nniques for sharing expertise in a distributed EPSS facility. The methods we have described\nhave been tested using relatively small textual-knowledge corpora, and they seem to work\nsuccessfully. The next phase of our work will extend these methods to large collections of\nmultimedia knowledge.\nNote\nAn earlier version of this paper, here significantly updated, was presented at the International\nComputing Congress held in.Hyderabad, India, in 1993 (Barker and Banerji 1993).\nReferences\nBanerji, A.K., Designing Electronic Performance Support Systems, draft Ph.D. thesis, School\nof Computing and Mathematics, University of Teesside (in progress, 1994).\nBarker, P.G. (1989), 'KnowledgePro: a review and assessment', Engineering Applications of\nArtificial Intelligence, 2, 4, 325-38.\nBarker, P.G. (1991), Electronic Books, special edition of Educational and Training Technol-\nogy International, 28, 4, 269-368.\nBarker, P.G. (1992), 'Electronic books and libraries of the future', The Electronic Library, 10,\n3, 139-149.\nBarker. P.G. and Banerji, A.K. (1993), 'Multimedia environments for EPSS development', in\nBalagurusamy, E. and Sushila B. (eds), Proceedings of the Indian Computing Congress (ICC\n'92) - - Innovative Applications in Computing, New Delhi, Tata McGraw-Hill Publishing\nCompany, pp. 423-30.\nBeale, R. and Jackson, T. (1990), Neural Computing - an Introduction, Bristol, Adam Hilger.\nBeishon, J. and Peters, G. (1972), Systems Behaviour, London, Open University Press.\nChurchman, C.W. and Cerhulst, M. (1963), Management Sciences: Models and Techniques,\nNew York, Pergamon.\nGery, G.J. (1991), Electronic Performance Support Systems - How and Why to Remake the\nWorkplace through the Strategic Application of Technology, Boston MA, Weingarten.\nHart, A. (1986), Knowledge Acquisition for Expert Systems, London, Kogan Page.\nHarwell Computer Systems (1991), STATUS User's Manual, Oxford.\nHeaps, H.S. (1978), Information Retrieval - Computational and Theoretical Aspects, New\nYork, Academic Press.\nJacobs, G. (1994), 'ISDN: theoretical specification, practical potential' in Mason R. and\nBacsich, P. (eds), ISDN Applications in Education and Training, London, Institution of\nElectrical Engineers.\nWard Systems (1990), NeuroShell User's Manual, 3rd edition, Maryland VA.\nWhitlock, Q. et al (1993), 'Hypermedia and performance support', to appear in Proceedings\nof ED-MEDIA '93, Orlando FL.\n69\n"}