{"doi":"10.1109\/UMEDIA.2008.4570932","coreId":"15392","oai":"oai:dro.dur.ac.uk.OAI2:7475","identifiers":["oai:dro.dur.ac.uk.OAI2:7475","10.1109\/UMEDIA.2008.4570932"],"title":"Multicolour sketch recognition in a learning environment.","authors":["Don, Liam","Ivrissimtzis, Ioannis"],"enrichments":{"references":[],"documentType":{"type":1}},"contributors":["Li, Lian","Shih, Timothy","Li, Qing Li","Yang, Shiqiang","Zhou, Qingguo"],"datePublished":"2008-07-22","abstract":"Virtual physics environments are becoming increasingly popular as a teaching tool for grade and high school level mechanical physics. While useful, these tools often offer a complex user interface, lacking the intuitive nature of the traditional whiteboard. Furthermore, the systems are often too advanced to be used by novices for further experimentation. In this paper we describe a physics learning environment using multicolour sketch recognition techniques on digital whiteboards. We argue that the use of coloured pens helps to resolve several ambiguities appearing in single colour sketching interfaces. The recognition system is based on a combination of Support Vector Machines and rule based methods. The system was evaluated using a constructive interaction method, with users completing a set task","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/15392.pdf","fullTextIdentifier":"http:\/\/dro.dur.ac.uk\/7475\/1\/7475.pdf","pdfHashValue":"4a755e7c2f90d3895b8780eeb7aac07d9769da50","publisher":"IEEE","rawRecordXml":"<record><header><identifier>\n  \n    \n      oai:dro.dur.ac.uk.OAI2:7475<\/identifier><datestamp>\n      2017-05-26T13:49:19Z<\/datestamp><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n    \n      \n        Multicolour sketch recognition in a learning environment.<\/dc:title><dc:creator>\n        Don, Liam<\/dc:creator><dc:creator>\n        Ivrissimtzis, Ioannis<\/dc:creator><dc:description>\n        Virtual physics environments are becoming increasingly popular as a teaching tool for grade and high school level mechanical physics. While useful, these tools often offer a complex user interface, lacking the intuitive nature of the traditional whiteboard. Furthermore, the systems are often too advanced to be used by novices for further experimentation. In this paper we describe a physics learning environment using multicolour sketch recognition techniques on digital whiteboards. We argue that the use of coloured pens helps to resolve several ambiguities appearing in single colour sketching interfaces. The recognition system is based on a combination of Support Vector Machines and rule based methods. The system was evaluated using a constructive interaction method, with users completing a set task.<\/dc:description><dc:subject>\n        Sketch recognition<\/dc:subject><dc:subject>\n         Multi-pen environment<\/dc:subject><dc:subject>\n         Virtual physics environment. <\/dc:subject><dc:publisher>\n        IEEE<\/dc:publisher><dc:source>\n        Li, Lian & Shih, Timothy & Li, Qing Li & Yang, Shiqiang & Zhou, Qingguo (Eds.). (2008). 1st IEEE International Conference on Ubi-Media Computing, 15-16 July 2008, Lanzhou, China ; proceedings. Los Alamitos, CA: IEEE, pp. 441-443<\/dc:source><dc:contributor>\n        Li, Lian<\/dc:contributor><dc:contributor>\n        Shih, Timothy<\/dc:contributor><dc:contributor>\n        Li, Qing Li<\/dc:contributor><dc:contributor>\n        Yang, Shiqiang<\/dc:contributor><dc:contributor>\n        Zhou, Qingguo<\/dc:contributor><dc:date>\n        2008-07-22<\/dc:date><dc:type>\n        Book chapter<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:identifier>\n        dro:7475<\/dc:identifier><dc:identifier>\n        doi:10.1109\/UMEDIA.2008.4570932 <\/dc:identifier><dc:identifier>\n        http:\/\/dro.dur.ac.uk\/7475\/<\/dc:identifier><dc:identifier>\n        https:\/\/doi.org\/10.1109\/UMEDIA.2008.4570932<\/dc:identifier><dc:format>\n        application\/pdf<\/dc:format><dc:identifier>\n        http:\/\/dro.dur.ac.uk\/7475\/1\/7475.pdf<\/dc:identifier><dc:rights>\n        \u00a9 2008 IEEE. Personal use of this material is permitted. However, permission to reprint\/republish this material for advertising or promotional purposes or for creating new collective works for resale or redistribution to servers or lists, or to reuse any copyrighted component of this work in other works must be obtained from the IEEE.\\ud\n<\/dc:rights><dc:accessRights>\n        info:en-repo\/semantics\/openAccess<\/dc:accessRights><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":[],"year":2008,"topics":["Sketch recognition","Multi-pen environment","Virtual physics environment."],"subject":["Book chapter","PeerReviewed"],"fullText":"Durham Research Online\nDeposited in DRO:\n25 October 2010\nVersion of attached file:\nPublished Version\nPeer-review status of attached file:\nPeer-reviewed\nCitation for published item:\nDon, Liam and Ivrissimtzis, Ioannis (2008) \u2019Multicolour sketch recognition in a learning environment.\u2019, in 1st\nIEEE International Conference on Ubi-Media Computing, 15-16 July 2008, Lanzhou, China ; proceedings. Los\nAlamitos, CA: IEEE, pp. 441-443.\nFurther information on publisher\u2019s website:\nhttp:\/\/dx.doi.org\/10.1109\/UMEDIA.2008.4570932\nPublisher\u2019s copyright statement:\n2008 IEEE. Personal use of this material is permitted. However, permission to reprint\/republish this material for\nadvertising or promotional purposes or for creating new collective works for resale or redistribution to servers or lists,\nor to reuse any copyrighted component of this work in other works must be obtained from the IEEE.\nAdditional information:\nAdditional urls for Workshop \/Conference: http:\/\/www.hkws.org\/conference\/idet2008\/index.html and\nhttp:\/\/u-media.lzu.edu.cn\/\nUse policy\nThe full-text may be used and\/or reproduced, and given to third parties in any format or medium, without prior permission or charge, for\npersonal research or study, educational, or not-for-profit purposes provided that:\n\u2022 a full bibliographic reference is made to the original source\n\u2022 a link is made to the metadata record in DRO\n\u2022 the full-text is not changed in any way\nThe full-text must not be sold in any format or medium without the formal permission of the copyright holders.\nPlease consult the full DRO policy for further details.\nDurham University Library, Stockton Road, Durham DH1 3LY, United Kingdom\nTel : +44 (0)191 334 3042 \u2014 Fax : +44 (0)191 334 2971\nhttp:\/\/dro.dur.ac.uk\nMulticolour Sketch Recognition in a Learning Environment \nLiam Don  Ioannis Ivrissimtzis \nDepartment of Computer Science, University of Durham, United Kingdom \nAbstract\nVirtual physics environments are becoming increasingly \npopular as a teaching tool for grade and high school \nlevel mechanical physics. While useful, these tools often \noffer a complex user interface, lacking the intuitive \nnature of the traditional whiteboard. Furthermore, the \nsystems are often too advanced to be used by novices for \nfurther experimentation. In this paper we describe a \nphysics learning environment using multicolour sketch \nrecognition techniques on digital whiteboards. We argue \nthat the use of coloured pens helps to resolve several \nambiguities appearing in single colour sketching \ninterfaces. The recognition system is based on a \ncombination of Support Vector Machines and rule based \nmethods. The system was evaluated using a constructive \ninteraction method, with users completing a set task. \n1. Introduction \nSketch recognition, that is, computer recognition of hand \ndrawn shapes, is an area of considerable recent research \nactivity, driven mainly from applications. Indeed, the use \nof sketch recognition on popular electronic devices, such \nas Tablet PCs and Smart Boards, mean that advances in \nthe area can have immediate practical implications. From \nthis applied point of view, the general goal of the \nresearch in sketch recognition is to make drawing on a \ncomputer as close as possible to drawing on a piece of \npaper, or a whiteboard, by placing as few constraints on \nthe user as possible, while still enabling robust and \naccurate recognition of the hand drawn shapes [1].\nThe field of sketch recognition has evolved out the \nmore general and well researched field of pattern \nrecognition. Rather than performing recognition on a \nbitmap input, sketch recognition methods generally \nanalyse user strokes or gestures to produce results. In the \npast, this has meant that special gestures had to be \nlearned by the user, and performed using the same stroke \norientation or speed. However, the latest \nimplementations on geometric shape recognition are now \nextremely robust, and have largely solved these \nproblems as well as employing context sensitivity to \nallow shapes to be constructed using multiple strokes, or \neven multiple shapes from a single stroke. An excellent \nexample of a robust implementation demonstrating both \nthese features is the PaleoSketch system [14]. \nResearchers are also investigating the usability benefits \nof sketch-based interfaces, often for surprisingly \nspecialized and complex applications [15]. \nIn this paper, setting our target application as a \nteaching tool for primary level mechanical physics, we \ndescribe a sketch recognition based interface for 2-\ndimensional shapes. The interface is build around the \nSmart Board, which is a digital whiteboard\/drawing \nscreen using optical detection, see Figure 1.  \nFigure 1. The Smart Board device. \nCombining Support Vector Machines (SVM) and \nrule based methods, the system supports the recognition \nof simple 2-dimensional shapes, such as squares, circles \nand polygons. To increase the interactivity of the \napplication, these shapes are beautified as they are drawn, \nproviding the user with instant feedback as to the success \nof the recognition. Finally, the user can then toggle the \nsystem into a physics simulation mode, in which the \nsketched shapes behave realistically in a physical 2D \nenvironment, see Figure 2. \nOur implementation does not seek to increase the \nusability of the drawing interface by emulating the \ncontext-sensitivity demonstrated by PaleoSketch. Instead, \nour main contribution is that we utilize the multiple \ncoloured pens of the Smart Board device to afford users \na real-world metaphor for input of different classes of \n_____________________________________ \n978 -1-4244-1866-4\/08\/$25.00 \u00a9 2008IEEE\n\u0017\u0017\u0014\nobjects (shapes, constraints and forces). By using \nmultiple coloured pens, we eliminate the need for \ncontext-sensitivity, and the problems associated with it, \nin our recognition engine. The user can also erase \nrecognized shapes using the Smart eraser, and even \nmove objects around by dragging their fingers on the \nboard.\nFigure 2. Our Sketch Board running in \nsimulation mode. \nFar from complicating the user experience, we argue \nthat the use of a real-world \u201cpen\u201d analogy can aid user \nunderstanding of the input options available, perhaps to a \ngreater extent than the \u201cinvisible\u201d method of context-\nsensitivity. The implementation aims to be intuitive \nenough to use both in a classroom teaching environment, \nand at home as a personal learning tool. \n2. Related work \nThe system presented in this paper is primarily informed \nby the ASSIST recognition system developed by \nAlvarado [2], which in turn was a development of \nRecSystem [3]. ASSIST allows the user to sketch a \nmechanical physical system in much the same way as our \nsystem does, but it has a greater context sensitivity, \nwhich we believe opens it up to ambiguity and therefore \nsometimes false recognitions. The reason for this context \nsensitivity is that the ASSIST system uses a single pen \nfor drawing of all objects, which creates a far greater \nnumber of possible results for each stroke. We aim to \ncombat this by making use of the multiple coloured pens \nof the Smartboard, for different stroke types (e.g. base \nobjects, constraints and forces). While this is a user \nconstraint, which runs in opposition to Hammond and \nDavis\u2019 definition of a good sketching interface [1], we \nexpect that the users will accept and find intuitive the \nidea of different coloured pens providing different \nfunctionality.  \nNeural networks is an obvious choice for sketch \nrecognition, and their success has been repeatedly \nproved in the more general setting of pattern recognition \n[4]. However, several of the most popular neural \nnetwork methods for pattern recognition can not be \ndirectly applied to our problem, as they have been \ndeveloped to work with images rather than strokes. \nYaeger [5] has suggested a neural network approach \nusing strokes, in his evaluation of sketch recognition on \nthe Apple Newton device.  \nRule based methods for sketch recognition rely on \ncreating specific rules to characterize particular shapes. \nAs a simple example, an equilateral triangle has its three \ncorners at equal distance to each other. A rule based \nmethod proposed by Peng et. al. [6] takes into account \nthe positions of endpoints of user strokes, and uses this \ninformation to determine what shape has been drawn. \nThis method works very well, but does not take into \naccount the timing of strokes, which can be very useful \nin a heuristic, particularly for broad classification into \ngeneral shapes. Mackenzie [7] lists some methods based \non timing of strokes, although his main focus is on agent \nbased recognition.  \nThe support vector machine is a statistical method \noriginally proposed by Vapnik in [8]. It is a supervised \nlearning technique with similarities to the neural \nnetworks, and can be used to solve the classification \nproblem for two classes. Viewing the sets of data as two \nvectors in an n-dimensional space, a single SVM splits \nthe data into two classes, computing a hyperplane that \nseparates them. Combinations of SVMs can be used to \nsolve the classification problem for n classes. For \nexample, we can use n SVMs, each one trained to \nseparate one particular class from all the other classes. \nFor a more robust classifier, we can use one SVM for \neach pair of classes, that is, n\u01dc(n-1) \/ 2 SVMs in total. \nEach SVM is trained to separate the objects of two \nspecific classes, ignoring all the other classes. Finally, \nthe n\u01dc(n-1) \/ 2 SVMs are combined through a majority \nvoting system to produce a classifier for the n classes. It \nhas been shown that the pair wise coupling scheme is \nmore robust than the one SVM per class scheme [9].  \nWenyin et. al. [10] offer a quantitative comparison of \nSVMs, rule based methods and neural networks. SVMs \nis shown to be the most robust method overall, although, \nin their experiments, rule-based methods achieved 100% \nrecognition rates for elliptical shapes. Neural networks \nperform less well, which is surprising considering their \neffectiveness in more general machine vision problems. \nBased on this work we have chosen to use a combination \nof SVMs and rule-based methods.  \nSketch beautification is an important element of the \nsketching process. Because a user\u2019s sketches can be \nrather rough and unsuitable for design work, it is usually \nhelpful for the computer to \u201ctidy up\u201d lines and connect \nthem cleanly, see Figure 3. Except of improving the \nvisual quality of the sketch, beautification also helps the \n\u0017\u0017\u0015\nusers understand whether a shape has been recognised or \nnot by the computer [13]. We believe that beautification \nshould be applied after every stroke, as the immediate \nfeedback can be very helpful in guiding the user through \nthe sketching process. Without this feature, problems \ncould accumulate, reducing the overall accuracy of the \nsystem. \nFigure 3. Sketch beautification in the ASSIST \nsystem.\nAs a fully functional sketch recognition utility can be \nextremely complex, we tried as far as possible to reuse \nexisting software and libraries that are freely available in \nthe web. One technology which we have used in our \nimplementation is the Diva sketch system, developed at \nBerkeley California [11]. It features a sketching interface, \nwith a data structure that stores user input as timed \nstrokes, and a basic recognition framework which allows \nvarious methods of recognition to be plugged in. An \nexcellent symbol recognition system, based on SVMs, \nhas been proposed by Hse et  al. in [12]. We found that \nHse\u2019s system is excellent for broad recognition of shapes, \nand we make use of it as an initial broad classifier \nbetween circles, rectangles and general polygonal shapes. \nFollowing this step, we use a rule-based approach, using \nsome stroke segmentation and geometry interpolation \nmethods demonstrated in the ASSIST system. We \ncombine these two distinct recognition stages to produce \na robust overall recognition method.\n3. The sketch recognition system \n3.1 The Smart Board hardware \nThe Smart Board is the main hardware around which the \nSketch Board system is built (see Figure 1). \nIt consists of a screen and four pens, coloured black, red, \nblue and green. The pen movement is tracked on the \nscreen by two cameras located at the corners. At any \nparticular time only one pen can be traced on the screen.  \nAnother limitation is that there is no active detection \nsystem for the colour of the pen in use. Instead, at the \nbottom of the screen there are four coloured pen-cases \nmatching the colours of the pens. Each pen-case has an \noptical sensor and the colour in use is the colour of the \npen-case which last had a pen removed from it. This \nlimitation can create user confusion when a pen is not \nreturned to its pen-case after use, or when pens are \nmisplaced in pen-cases of different colour.  \n3.2 Architecture\nThe high level architecture of the Sketch Board system is \ndescribed by the diagram in Figure 4.  \nFigure 4. Diagrammatic overview of the Sketch \nBoard.\nThe system relies on a number of external libraries \nand codebases, some of which are used as black-box \nsolutions and some of which have been modified.  \nThe sketch recognition and simulation pipeline works \nas follows. The Smart SDK of the Smart Board captures \nthe user input in the form of time strokes. The Diva \nframework with the HHreco plugin uses SVM for a \nbroad classification of the time strokes into few \ncategories of objects. The main recognition system, \nusing code from the Microsoft\u2019s version of ASSIST, \nuses rule based methods to complete the object \nrecognition and beautification. Then the objects are sent \nto the Phys2D physics simulation engine whose output is \nagain displayed on the Smart Board.  \nThe main novelty of the Sketch Board is the use of \nmultiple coloured pens, a physical eraser and the user\u2019s \nown fingers to indicate different modes of input. We use \nthree modes of input, black, red and blue for shapes, \nconstraints and forces, respectively. Additionally shapes \ncan be removed with the eraser or moved by dragging a \nfinger on the board. Next we describe each mode of \ninput in detail.  \nOutput \nRecognition \nInput\nUser input\nRule-based \nmethods\nJava2D Graphics\nOutput\nLWJGL Graphics \nOutput\nInput Mode Simulation Mode \n\u0017\u0017\u0016\n"}