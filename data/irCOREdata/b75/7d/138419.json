{"doi":"10.1016\/j.ijpe.2006.12.032","coreId":"138419","oai":"oai:dspace.lib.cranfield.ac.uk:1826\/2676","identifiers":["oai:dspace.lib.cranfield.ac.uk:1826\/2676","10.1016\/j.ijpe.2006.12.032"],"title":"Optimisation of business process designs: An algorithmic approach with multiple objectives.","authors":["Vergidis, K.","Tiwari, Ashutosh","Majeed, Basim","Roy, Rajkumar"],"enrichments":{"references":[{"id":38070323,"title":"A characterization of a business process.","authors":[],"date":"1998","doi":"10.1108\/01443579810225522","raw":"McKay A. and Radnor Z., 1998. A characterization of a business process. The International Journal of Operations and Production Management18 (9\/10), 924-936.","cites":null},{"id":38070314,"title":"A Fast Elitist Non-Dominated Sorting Genetic Algorithm for Multi-Objective Optimization: NSGA-II.","authors":[],"date":"2000","doi":"10.1007\/3-540-45356-3_83","raw":"Deb K., Agrawal S., Pratap A. and Meyarivan T., 2000. A Fast Elitist Non-Dominated Sorting Genetic Algorithm for Multi-Objective Optimization: NSGA-II. KanGAL Report No. 200001.","cites":null},{"id":38070320,"title":"A Formal Framework for Business Process Modelling and Design.","authors":[],"date":"2002","doi":"10.1016\/s0306-4379(01)00055-2","raw":"Koubarakis M. and Plexousakis D., 2002). A Formal Framework for Business Process Modelling and Design. Information Systems 27, 299-319.","cites":null},{"id":38070327,"title":"A robust optimization model for stochastic logistic problems.","authors":[],"date":"2000","doi":"10.1016\/s0925-5273(99)00074-2","raw":"Yu C-S. and Li H-L., 2000. A robust optimization model for stochastic logistic problems. International- 26 -Journal of Production Economics 64, 385-397.","cites":null},{"id":38070325,"title":"A supporting system for evaluation and review of business process through activity-based approach.","authors":[],"date":"2000","doi":"10.1016\/s0098-1354(00)00536-6","raw":"Shimizu Y. and Sahara Y., 2000. A supporting system for evaluation and review of business process through activity-based approach. Computers and Chemical Engineering 24, 997-1003.","cites":null},{"id":38070317,"title":"Algorithmical approaches to business process design.","authors":[],"date":"2001","doi":"10.1016\/s0305-0548(00)00038-1","raw":"Hofacker I. and Vetschera R., 2001. Algorithmical approaches to business process design. Computers & Operations Research 28, 1253-1275.","cites":null},{"id":38070324,"title":"Analysing process models using graph reduction techniques.","authors":[],"date":"2000","doi":"10.1016\/s0306-4379(00)00012-0","raw":"Sadiq W. and Orlowska E. M., 2000. Analysing process models using graph reduction techniques. Information Systems 25, 117-134.","cites":null},{"id":38070328,"title":"Analysis of process models: A fuzzy logic approach.","authors":[],"date":"2001","doi":"10.1007\/s001700170162","raw":"Zakarian A., 2001. Analysis of process models: A fuzzy logic approach. The International Journal of Advanced Manufacturing Technology 17, 444-452.","cites":null},{"id":38070310,"title":"Business process definition: a bottom-up approach.","authors":[],"date":null,"doi":"10.1108\/01443579710159950","raw":"Bititci U.S. and Muir D.,1997. Business process definition: a bottom-up approach. The International Journal of Operations and Production Management 17 (4), 365-374.","cites":null},{"id":38070305,"title":"Business process modelling: Review and framework.","authors":[],"date":"2004","doi":"10.1016\/s0925-5273(03)00102-6","raw":"Aguilar-Saven R. S., 2004. Business process modelling: Review and framework. International Journal of Production Economics 90, 129-149.","cites":null},{"id":38070322,"title":"Business processes - attempts to find a definition.","authors":[],"date":"2003","doi":"10.1016\/s0950-5849(03)00129-0","raw":"Lindsay A., Downs D. and Lunn K., 2003. Business processes - attempts to find a definition.","cites":null},{"id":38070313,"title":"Constrained Multi-objective Optimization Using Steady State Genetic Algorithms.","authors":[],"date":"2003","doi":"10.1007\/3-540-45105-6_95","raw":"Chafekar D., Xuan J. and Rasheed K., 2003. Constrained Multi-objective Optimization Using Steady State Genetic Algorithms. In Proceedings of GECCO 2003, Chicago, Illinois, USA, .pp. 813-824.","cites":null},{"id":38070306,"title":"KEA - A software package for development, analysis and application of multiple objective evolutionary algorithms, viewed 20","authors":[],"date":"2004","doi":null,"raw":"Bartz-Beielstein T., Mehnen J., Naujoks B., Schmitt K. and Zibold D., 2004. KEA - A software package for development, analysis and application of multiple objective evolutionary algorithms, viewed 20 December 2005, <http:\/\/www-isf.maschinenbau.unidortmund.de\/veroeff\/documents\/2004_mehn_kea_a.pdf>.","cites":null},{"id":38070326,"title":"Lot size effects on process lead time, lead time demand, and safety stock.","authors":[],"date":"2006","doi":"10.1016\/j.ijpe.2006.05.003","raw":"Vaughan T.S., 2006. Lot size effects on process lead time, lead time demand, and safety stock. International Journal of Production Economics 100, 1-9.","cites":null},{"id":38070329,"title":"Multi-objective evolutionary algorithms: A comparative case study and the strength pareto approach.","authors":[],"date":"1999","doi":"10.1109\/4235.797969","raw":"Zitzler, E. and Thiele L., 1999. Multi-objective evolutionary algorithms: A comparative case study and the strength pareto approach. IEEE Transactions on Evolutionary Computation 3, 257-71.","cites":null},{"id":38070315,"title":"Multi-objective optimisation using evolutionary algorithms,","authors":[],"date":"2001","doi":"10.1007\/978-0-85729-652-8_1","raw":"Deb K., 2001. Multi-objective optimisation using evolutionary algorithms, New York: John Wiley &- 25 -Sons.","cites":null},{"id":38070316,"title":"Multiobjective Optimization by a Modified Artificial Immune System Algorithm.","authors":[],"date":"2005","doi":"10.1007\/11536444_19","raw":"Freschi F. and Repetto M., 2005. Multiobjective Optimization by a Modified Artificial Immune System Algorithm. Lecture Notes in Computer Science 3627, 248-261.","cites":null},{"id":38070318,"title":"Particle Swarm Optimisation.","authors":[],"date":"1995","doi":"10.1109\/icnn.1995.488968","raw":"Kennedy J. and Eberhart R., 1995. Particle Swarm Optimisation. IEEE International Conference on Neural Networks, Conference Proceedings 4, 942-1948.","cites":null},{"id":38070312,"title":"Process analysis techniques and tools for business improvements.","authors":[],"date":"1998","doi":"10.1108\/14637159810238174","raw":"Cheung Y. and Bal J., 1998. Process analysis techniques and tools for business improvements. Business Process Management 4 (4), 274-290.","cites":null},{"id":38070311,"title":"Production planning: An improved hybrid approach.","authors":[],"date":"2005","doi":"10.1016\/j.ijpe.2004.06.021","raw":"Byrne M.D. and Hossain M.M., 2005. Production planning: An improved hybrid approach. International Journal of Production Economics 93-94, 225-229.","cites":null},{"id":38070321,"title":"Resource constraints analysis of workflow specifications.","authors":[],"date":"2004","doi":"10.1016\/s0164-1212(03)00250-4","raw":"Li H., Yang Y. and Chen T.Y., 2004. Resource constraints analysis of workflow specifications. The Journal of Systems and Software 73, 271-285.","cites":null},{"id":38070330,"title":"SPEA2: Improving the Strength Pareto Evolutionary Algorithm.","authors":[],"date":"2001","doi":null,"raw":"Zitzler E., Laumanns M. and Thiele L., 2001. SPEA2: Improving the Strength Pareto Evolutionary Algorithm. TIK Report Nr. 103, Computer Engineering and Networks Lab (TIK), Swiss Federal Institute of Technology (ETH) Zurich.","cites":null},{"id":38070319,"title":"The Particle Swarm: social adaptation in information-processing systems.","authors":[],"date":"1999","doi":null,"raw":"Kennedy J. and Eberhart R., 1999. The Particle Swarm: social adaptation in information-processing systems. In: Corne D., Dorigo M. and Glover F., (Eds.) New Ideas in Optimisation, 379-388. Cambridge: McGraw-Hill.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2007-09","abstract":"Most of the current attempts for business process optimisation are manual without involving any formal automated methodology. This paper proposes a framework for multi-objective optimisation of business process designs. The framework uses a generic business process model that is formally defined and specifies process cost and duration as objective functions. The business process model is programmed and incorporated into a software platform where a selection of multi-objective optimisation algorithms is applied to a range of test designs including a real example. The test business process designs are of varying complexity and are optimised with three popular optimisation techniques (Non-Dominated Sorting Genetic Algorithm II (NSGA2), Strength Pareto Evolutionary Algorithm II (SPEA2) and Multi-Objective Particle Swarm Optimisation (MOPSO) algorithms). The results indicate that although business process optimisation is a highly constrained problem with fragmented search space; multi-objective optimisation algorithms such as NSGA2 and SPEA2 produce a satisfactory number of alternative optimised business process designs. However, the performance of the optimisation algorithms drops sharply as the complexity of the process designs increases. This paper also discusses the directions for future research in this particular area","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/138419.pdf","fullTextIdentifier":"http:\/\/dx.doi.org\/10.1016\/j.ijpe.2006.12.032","pdfHashValue":"30a41813dc7b5b0ed58346230fb44b120a096793","publisher":"Elsevier","rawRecordXml":"<record><header><identifier>\noai:dspace.lib.cranfield.ac.uk:1826\/2676<\/identifier><datestamp>2008-06-27T17:33:24Z<\/datestamp><setSpec>hdl_1826_24<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>Optimisation of business process designs: An algorithmic approach with multiple objectives.<\/dc:title><dc:creator>Vergidis, K.<\/dc:creator><dc:creator>Tiwari, Ashutosh<\/dc:creator><dc:creator>Majeed, Basim<\/dc:creator><dc:creator>Roy, Rajkumar<\/dc:creator><dc:subject>Business process (bp)<\/dc:subject><dc:subject>bp optimisation<\/dc:subject><dc:subject>bp re-design<\/dc:subject><dc:subject>bp modelling and analysis<\/dc:subject><dc:description>Most of the current attempts for business process optimisation are manual without involving any formal automated methodology. This paper proposes a framework for multi-objective optimisation of business process designs. The framework uses a generic business process model that is formally defined and specifies process cost and duration as objective functions. The business process model is programmed and incorporated into a software platform where a selection of multi-objective optimisation algorithms is applied to a range of test designs including a real example. The test business process designs are of varying complexity and are optimised with three popular optimisation techniques (Non-Dominated Sorting Genetic Algorithm II (NSGA2), Strength Pareto Evolutionary Algorithm II (SPEA2) and Multi-Objective Particle Swarm Optimisation (MOPSO) algorithms). The results indicate that although business process optimisation is a highly constrained problem with fragmented search space; multi-objective optimisation algorithms such as NSGA2 and SPEA2 produce a satisfactory number of alternative optimised business process designs. However, the performance of the optimisation algorithms drops sharply as the complexity of the process designs increases. This paper also discusses the directions for future research in this particular area.<\/dc:description><dc:publisher>Elsevier<\/dc:publisher><dc:date>2008-06-27T17:30:47Z<\/dc:date><dc:date>2008-06-27T17:30:47Z<\/dc:date><dc:date>2007-09<\/dc:date><dc:type>Postprint<\/dc:type><dc:identifier>K. Vergidis, A. Tiwari, B. Majeed, R. Roy, Optimisation of business process designs: An algorithmic approach with multiple objectives, International Journal of Production Economics, Volume 109, Issues 1-2, Special Section on Cost Engineering, September 2007, Pages 105-121.<\/dc:identifier><dc:identifier>0925-5273<\/dc:identifier><dc:identifier>http:\/\/dx.doi.org\/10.1016\/j.ijpe.2006.12.032<\/dc:identifier><dc:identifier>http:\/\/hdl.handle.net\/1826\/2676<\/dc:identifier><dc:language>en<\/dc:language><\/oai_dc:dc><\/metadata><\/record>","journals":[{"title":null,"identifiers":["issn:0925-5273","0925-5273"]}],"language":{"code":"en","id":9,"name":"English"},"relations":[],"year":2007,"topics":["Business process (bp)","bp optimisation","bp re-design","bp modelling and analysis"],"subject":["Postprint"],"fullText":"Optimisation of Business Process Designs:\nAn algorithmic approach with multiple objectives\nK. Vergidis1*, A. Tiwari1, B. Majeed2 and R. Roy1\n1Manufacturing Department, School of Applied Sciences,\nCranfield University, Cranfield, MK43 0AL, U.K.\n2Computational Intelligence Group, IS Lab, BT\nResearch and Venturing, Orion Building,\nAdastral Park, Martlesham, IP5 3RE, U.K.\nAbstract\nMost of the current attempts for business process optimisation are manual without involving any\nformal automated methodology. This paper proposes a framework for multi-objective optimisation of\nbusiness process designs. The framework uses a generic business process model that is formally defined\nand specifies process cost and duration as objective functions. The business process model is\nprogrammed and incorporated into a software platform where a selection of multi-objective\noptimisation algorithms is applied to a range of test designs including a real example. The test business\nprocess designs are of varying complexity and are optimised with three popular optimisation techniques\n(NSGA2, SPEA2 and MOPSO algorithms). The results indicate that although business process\noptimisation is a highly constrained problem with fragmented search space; multi-objective\noptimisation algorithms such as NSGA2 and SPEA2 produce a satisfactory number of alternative\noptimised business process designs. However, the performance of the optimisation algorithms drops\nsharply as the complexity of the process designs increases. This paper also discusses the directions for\nfuture research in this particular area.\nKeywords: Business process (bp), bp optimisation, bp re-design, bp modelling and analysis.\n* Corresponding author. Phone: +44 (0) 1234 754194. Fax: +44 (0) 1234 750852. E-mail address: k.vergidis@cranfield.ac.uk\n- 2 -\n1. Introduction\nIn the modern competitive business world there is a frequent need for enterprises to modify their\ndesign of business processes to become more successful in the marketplace. The design and\nmanagement of business processes is a key factor for companies to effectively compete in today\u2019s\nvolatile business environment. By focusing on the optimisation and continuous improvement of\nbusiness processes, organisations can establish a solid competitive advantage by reducing cost,\nimproving quality and efficiency, and enabling adaptation to changing requirements. Multi-objective\noptimisation of business processes can result in novel approaches and more efficient ways of business\nprocess improvement since more than one optimisation criteria can be selected and satisfied\nconcurrently. The next section examines the relevant work in the specific subject area while the rest of\nthe paper introduces a multi-objective optimisation framework for formally defined business process\ndesigns.\n2. Related work\nProcess modelling methodologies, such as the IDEF family, Computer Integrated Manufacturing \u2013\nOpen Systems Architecture (CIM-OSA), Object-oriented Modelling and Petri-nets, allow for a\nsystematic and a well-defined representation of processes (see Aguilar-Saven, 2004). Based on some of\nthe above methodologies, a number of process modelling tools have been developed, such as ARIS,\nFirstStep, PrimeObjects and TEMAS (Zakarian, 2001). These approaches provide powerful methods\nfor visualising business processes, evaluating their particular characteristics (such as resource utilisation,\ncost and speed) and checking their structural and resource consistency (Sadiq and Orlowska, 2000; Li et\nal., 2004). Zakarian (2001) also integrated the Fuzzy-rule-based Reasoning Approach with IDEF\nmethodology for quantitative analysis of process models to model efficiently the uncertain and\nincomplete information of process variables that exist in most of the traditional modelling techniques.\nVaughan (2006) presents a linear model that with its robustness can contribute to business process\n- 3 -\nmodelling. Grigori et al. (2004) proposed a Business Process Intelligence tool suite that uses Business\nIntelligence Technologies (in particular data mining) for analysing business processes. Also Cheung and\nBal (1998) presented an overview of business process analysis techniques and tools and Byrne and\nHossain (2005) an improved hybrid approach for production planning.\nThe qualitative nature of business processes explains the difficulty in developing their parametric\nmodels. Therefore, although a considerable number of algorithms exist for dealing with process\noptimisation problems in areas such as Logistics (Yu and Li, 2000), there is a lack of algorithmic\napproaches for the optimisation of business processes. McKay and Radnor (1998) attempt to apply\nproduct data engineering principles and methods to the representation of business processes but there\nis no formal optimisation attempt. Much of the recent research in the area of business process\noptimisation has dealt with either selection of a process model from a set of alternatives (Shimizu and\nSahara, 2000) or simple single-objective optimisation (Hofacker and Vetschera, 2001) that does not\naddress the strong synergistic\/anti-synergistic effects among individual activities that constitute a\nprocess design. Therefore, the current research suffers from serious limitations in dealing with the\nscalability requirements and complexity of real-life processes. Hofacker and Vetschera (2001) attribute\nthis to the lack of formal methods to support the design of business processes. One of the main\nreasons for this is that the design elements and constraints on process designs are hard to characterise\nin a formal way amenable to analytical methods. These authors propose a business process modelling\napproach that can be optimised with three different techniques. They describe a business process using\na single-objective mathematical model that can be minimised or maximised according to each\noptimisation concept.\nIn summary, the optimisation attempts for business processes have still a long way to go due to three\nmain problems:\n- 4 -\n1. There is no widely recognised and adopted business process representation in terms of\nquantitative modelling. Most business process modelling techniques (such as flowcharts and\nIDEF) use visual diagrammatic approaches not capable of quantitative analysis and structured\noptimisation. These diagrammatic approaches use standard graphical notations for visual\nrepresentation and analysis of business processes.\n2. The business process optimisation attempts have been mostly manual and based on simplistic\nor isolated cases without generalisation capabilities.\n3. There are no attempts to optimise a business process under multiple criteria. The lack of multi-\nobjectivity makes any algorithmic approach less attractive without tangible benefits.\n3. Multi-objective optimisation of business processes\nThis section introduces the basic steps of the proposed multi-objective optimisation framework. The\nframework\u2019s main aim is to introduce a methodology for applying multi-objective optimisation\nalgorithms to business process designs. The first stage of the framework is the business process model\nspecification. The model is formulated on a mathematical basis to ensure formality, consistency and\nrigour. The second stage of the framework involves the application of the optimisation algorithms to\nthe business process model.\n3.1 Model construction\nAs mentioned above, the first stage of the framework is concerned with the business process model\nconstruction and the necessity for formal representation of the business process. The business process\nmodel is limited by a series of mathematical constraints that define the feasibility boundaries of the\nbusiness process and a set of objective functions that consist of the various business process objectives.\nTo follow a formally correct, repeatable and verifiable approach using a mathematical model guarantees\n- 5 -\nthe construction of consistent and rigorous business process models (Koubarakis and Plexousakis,\n2002).\nFigure 1. A feasible business process design using activities and resources\n(source: Hofacker & Vetschera (2001))\nFigure 1 sketches a feasible business process design using two key concepts: activities and resources.\nThis design is in line with Bititci and Muir (1997) suggestion that business activities that together fulfil a\ngoal form a business process. The business process design of figure 1 has two sets of resources, the\ninitial (Iglob) and the final (Oglob) resources. The initial resources are available at the beginning of the\nbusiness process while the final resources form the final output. The resources flow through the\nprocess and belong to two main categories: physical and information resources. The activities are\nperceived as the transformation steps within the process that make use of some resources as inputs and\nproduce others as outputs. In a feasible process design all the activities are in a defined sequence, the\nresources are adequate and most importantly the final resources are produced by the participating\nactivities.\nThe business process model is optimised by defining the model\u2019s optimisation variables and objectives\nas demonstrated in figure 2. The optimisation variables of the business process model are the\nparticipating activities and their starting times. The aim is to produce an improved process by\nminimising the two objectives, the process duration and cost. For each process design, there is a library\nof candidate activities with attributes such as activity duration and activity cost. These activities are\n- 6 -\ndefined in terms of their input and output resources and their duration and cost attributes. Some\nactivities that have similar requirements in terms of their input and output resources are\ninterchangeable in a business process design. Changing activities in a process design affects directly the\ntotal business process cost and duration. For an optimised business process design to be produced a set\nof activities that generate minimum business process cost and duration needs to be selected.\nFigure 2. Optimisation variables and objectives of the business process model\nIt is important to note that the framework works independently of the number of process objectives.\nProcess duration and cost were chosen as two common objectives for business process improvement.\nThe business process model of figure 2 is formally defined with a mathematical model. The\nmathematical model defines the optimisation objectives with two objective functions and ensures the\nbusiness process consistency and feasibility with thirteen constraints. It is possible to add further\nprocess objectives by formulating more objective functions. The complete mathematical model is the\nfollowing:\n- 7 -\n1\n2 1\n( ) max( ) min, :\n( ) min\n. .\n1. , , : , ,\n2. , , : , ,\n3. , : ,\n4. , : ,\n5. ,\n6. (1 ), , : ,\n7.\nj j j\ni i\ni ij j i j P\ni j j i j I\ni ij j ij i j P\ni i\nj j ij i j I\ni\nj j\ni j i j i\nj\nf P q j b go\nf P u x\ns t\nx r i j b I b B\nx y i j b I b B\ngo r M gi t x j b B\ny gi t x j b B\ny go\np q M x i j b I\nq\n\uf03d \uf0ae \uf022 \uf0ce\n\uf03d \uf0ae\n\uf0a3 \uf022 \uf0ce \uf0ce\n\uf0a3 \uf022 \uf0ce \uf0ce\n\uf02b \uf0a3 \uf0d7 \uf02b \uf022 \uf0ce\n\uf0a3 \uf02b \uf022 \uf0ce\n\uf0b3\n\uf0b3 \uf02d \uf02d \uf022 \uf0ce\n\uf0a3\n\uf0e5\n\uf0e5 \uf0e5\n\uf0e5\n:\n:\n(1 ), :\n8. (1 ) (1 ), : ,\n9. , , : ,\n10. (1 ), : , 0,\n11. 1 (1 ), : , 0,\n12. {0,1}, ,\n13. {0,1}, , :\nj i\nj i\ni i i j i\nj i i i ij j i\nij i j i\nij ij i j P j\ni b O i\nij j j P j\ni b O\ni\nij j\np M x i b O\nq p M x M i b O\nx i j b O\nr og M y j B gi\nM y j b B gi\nx i\ni j b\n\uf064\n\uf064 \uf06c\n\uf06c\n\uf06c\n\uf06c\n\uf06c\n\uf0ce\n\uf0ce\n\uf02b \uf02b \uf02d \uf022 \uf0ce\n\uf0b3 \uf02b \uf02d \uf02d \uf02d \uf02d \uf022 \uf0ce\n\uf0a3 \uf022 \uf0ce\n\uf0b3 \uf02b \uf02d \uf02d \uf022 \uf03d\n\uf0b3 \uf02d \uf02d \uf022 \uf0ce \uf03d\n\uf0ce \uf022\n\uf0ce \uf022 \uf0ce\n\uf0e5 \uf0e5\n\uf0e5\n.iO\nwhere:\nuil = cost of execution for activity ai\nxi = binary variable that indicates whether a candidate activity ai participates in the business process\ndesign\nyj = binary variable that indicates whether resource bj is or becomes available during the business\nprocess\nti,j = matrix of binary variables that links the activities with their output resources\nrij = matrix of binary variables that indicate if a unit of physical resource bj is available for use by activity\nai\ngij and goj = one-dimensional binary constants that indicate which resources belong to global inputs\nand\/or global outputs\nM = large constant indicating that physical resources contained in the set of global inputs are available\nin unlimited amounts\npi = starting time of activity ai\nqj = the time resource bj becomes available\n\u03b4i = duration of activity ai\n- 8 -\n\u03bbij = binary variable indicating that activity ai is used to create resource bj\nIi \/Oi = sets of input\/output resources of activity ai\nBP\/BI = set of physical\/information resources bj.\nThe mathematical expression of process model appears to be complicated in contrast with its visual\nrepresentation (figure 1) where it consisted of activities and resources. The mathematical model\nconsists of a number of binary variables and binary matrices that have a serious impact on the\nproduction of feasible process designs since they result in a highly fragmented search space. The first\nobjective function (f1) of the model calculates the duration of the business process. The total duration\nfor a feasible process equals the time the last resource that belongs to global outputs is produced. The\nsecond objective function (f2) calculates the business process cost as the sum of costs of all participating\nactivities. The mathematical model constraints ensure that the model produces feasible business\nprocesses by examining different aspects of the business process model.\nTable 1 provides a short description of each constraint of the mathematical model. It is important to\nhighlight two features of the business process model. The mathematical model consists of many\ndiscrete binary variables that significantly increase the complexity of even a simple process design as the\nsearch space for feasible solutions is highly fragmented. Another feature of the business process model\nis that although it is simple to conceive, understand and visualise, it proves to be complex and highly\nconstrained when it comes to formal mathematical definition. This can create serious difficulties in\nlocating the optimum solutions among the feasible ones since even feasible solutions are hard to be\nproduced. The concepts that describe the business process and its mathematical model are inspired by\nHofacker and Vetschera (2001). The aim of the paper is to extend their model to multi-objectivity and\noptimise it using evolutionary algorithms.\n- 9 -\n, , : ,i ij j i j Px r i j b I b B\uf0a3 \uf022 \uf0ce \uf0ce \u2026..(1)\nAll input physical resources of an activity must be available (rij=1) at some stage of the\nprocess if the activity is participating (xi=1).\n, , : ,i j j i j Ix y i j b I b B\uf0a3 \uf022 \uf0ce \uf0ce \u2026..(2)\nAll input information resources (yj) of an activity must be available at some stage of the\nprocess if the activity is participating (xi=1).\n, :i ij j ij i j P\ni i\ngo r M gi t x j b B\uf02b \uf0a3 \uf0d7 \uf02b \uf022 \uf0ce\uf0e5 \uf0e5 \u2026.(3)\nThe output physical resources -final or not- must not exceed the sum of initial and produced\n-during the process.\n, :j j ij i j I\ni\ny gi t x j b B\uf0a3 \uf02b \uf022 \uf0ce\uf0e5 \u2026..(4)\nAn information resource (yj) can be available either at the beginning of the process -as initial\nresource (gij) - or as an output resource of a participating activity.\nj jy go\uf0b3 \u2026..(5)\nA resource (yj) cannot be part of the output without first being available at some stage of the\nprocess (goj).\n(1 ), , :i j i j ip q M x i j b I\uf0b3 \uf02d \uf02d \uf022 \uf0ce \u2026..(6)\nIn terms of time, a participating activity must start (pi) only after the time that all its input\nresources have become available.\n(1 ), :j i i i j iq p M x i b O\uf064\uf0a3 \uf02b \uf02b \uf02d \uf022 \uf0ce \u2026..(7)\n(1 ) (1 ), :j i i i ij j iq p M x M i b O\uf064 \uf06c\uf0b3 \uf02b \uf02d \uf02d \uf02d \uf02d \uf022 \uf0ce \u2026..(8)\nIn terms of time, an output resource must become available exactly when the generating\nactivity has been completed (qj=pi).\n, , :ij i j ix i j b O\uf06c \uf0a3 \uf022 \uf0ce \u2026..(9)\nA non-participating activity (xi=0) cannot have output resources (\u03bbij=1).\n:\n(1 ), : , 0,\nj i\nij ij i j P j\ni b O i\nr og M y j B gi\uf06c\n\uf0ce\n\uf0b3 \uf02b \uf02d \uf02d \uf022 \uf03d\uf0e5 \uf0e5 \u2026..(10)\nWhen a physical resource does not belong to initial resources, it must be produced during the\nprocess in greater or equal amounts to the required resource inputs of the participating\nactivities.\n:\n1 (1 ), : , 0\nj i\nij j j P j\ni b O\nM y j b B gi\uf06c\n\uf0ce\n\uf0b3 \uf02d \uf02d \uf022 \uf0ce \uf03d\uf0e5 \u2026..(11)\nEach physical resource that does not belong to initial resources but appears in the output of a\nparticipating activity must be produced at least once.\n{0,1},ix i\uf0ce \uf022 \u2026..(12)\nThe variable x (indicating participating activities) must be binary.\n{0,1}, , :ij j ii j b O\uf06c \uf0ce \uf022 \uf0ce \u2026..(13)\nThe variable \u03bb (indicating output resource j of activity i) must be binary.\nTable 1. Description of the mathematical model constraints\n3.2 Optimisation algorithms\nThe second stage of the framework deals with the identification and application of multi-objective\noptimisation algorithms to the business process model. Although there are many optimisation\ntechniques in literature such as nonlinear programming, tabu search and simulated annealing to name a\nfew, the authors decided to focus exclusively on evolutionary optimisation techniques in an attempt to\ninvestigate their suitability on the business process domain. Evolutionary algorithms have proved to be\n- 10 -\nefficient in dealing with multi-objective and highly constrained problems in other relevant areas such as\nscheduling, supply chain optimisation etc.\nA number of algorithms exist in literature that can deal with multi-objective optimisation problems\nexpressed in the form of mathematical models. These algorithms can deal with any criterion expressed\nusing a mathematical model. After relevant research, three algorithms that allow multi-objective\noptimisation have been selected to optimise the business process model. This selection was based on\nthe requirement of dealing with fragmented search space and constraints. The selected algorithms are\nNon-Dominated Sorting Genetic Algorithm II (NSGA2), Strength Pareto Evolutionary Algorithm II\n(SPEA2) and Multi-Objective Particle Swarm Optimisation (MOPSO). According to Deb (2001),\nNSGA2 and SPEA2 are popular due to their robustness in solving fragmented search space problems.\nMOPSO\u2013a multi-objective extension of the Particle Swarm Algorithm- is a new algorithm that to the\nauthors\u2019 knowledge has never been used on such a constrained problem (Kennedy and Eberhart, 1999).\nThis guided the selection of NSGA2, SPEA2 and MOPSO for this research. Since more than one\noptimisation method is applied to the business process model, the opportunity of comparing the\nperformance of the different algorithms in the particular problem context is created. NSGA2 and\nSPEA2 are demonstrated in a number of papers and although similar, they compete each other in the\nquality of results produced in different subject domains. In more detail:\n1. Non-dominated Sorting Genetic Algorithm II. NSGA2 is a non-dominated, sorting-based, multi-objective\nevolutionary algorithm. The first version of NSGA (Deb, 2000) received criticism because like\nother genetic algorithms that use non-dominated shorting and sharing, has high computational\ncomplexity. NSGA2 overcomes many of its predecessor\u2019s problems by having less complexity as it\nuses fast non-dominated sorting approach (Deb, 2001). Its elitist approach and parameter-less\nsharing approach can be also taken as significant improvements. NSGA2 has been popular and has\n- 11 -\nbeen applied to many problems on a number of research areas. A recent example involve Chafekar\net al. (2003) who explores the potential of constrained multi-objective optimisation.\n2. Strength Pareto Evolutionary Algorithm II. In 1999, Zitzler and Thiele proposed SPEA as another elitist\nevolutionary algorithm. The improved version, namely SPEA2, evolved from the same group of\nauthors (Zitzler et al. 2001) and incorporates in contrast to its predecessor a fine-grained fitness\nassignment strategy, a density estimation technique, and an enhanced archive truncation method.\nSPEA2 has also been popular and used in a variety of optimisation problems.\n3. Multi-Objective Particle Swarm Optimisation (MOPSO). Different from most evolutionary computation\ntechniques, Particle Swarm Optimisation (PSO) method is motivated from the simulation of social\nbehaviour of bird flocking and fish schooling. PSO was originally designed and developed by\nKennedy and Eberhart (1995). It shares many similarities with evolutionary computation\ntechniques. The particles fly through the problem space by following an optimum particle called\nguide. Changing PSO to optimise a multi-objective problem requires a redefinition of what a guide\nis in order to obtain a front of optimal solutions. In Multi-Objective Particle Swarm Optimization\n(MOPSO), the Pareto-optimal solutions should be used to determine the guide for each particle.\nKennedy and Eberhart (1999) point out that MOPSO has demonstrated good performance in\nproblems that have continuous search space.\n4. Test business process designs\nThis section describes the construction of five test business process designs. These five test designs are\ndefined and optimised based a generic business process design that is described below. Only one of\nthese test designs is presented in this section and related to a real example of business process. The\ndescriptions and results of the remaining four can be found in the Appendix.\n- 12 -\n4.1 Generic business process design\nThe generic process design demonstrated in figure 3 has a set of predefined input (Iglob) and output\n(Oglob) resources (bj). Also, the number of activities (ai) that can participate in the business process is\nfixed. The activities that can potentially participate in the business process are selected from a library\nwith alternatives. The size of the library varies for each particular test design.\nFigure 3. Structure of the generic business process design\nBusiness process design optimisation involves the generation of alternative process designs with\noptimised objective values (process duration and cost). These improved designs contain different\ncombinations of the library activities with their starting times appropriately set to result in reduced\nobjective values for the business process.\nThe aim of creating the test designs from the generic design is to assess the performance of the\noptimisation algorithms in optimising these designs. The test designs that are utilised have an increasing\nnumber of participating activities, variations on the number of input and output resources, and also\ndifferent library sizes. The structure of one of the test designs is described below and discussed in\nparallel with a real example. The structure of the other test designs is presented in table 4 in the\nAppendix.\n- 13 -\n4.2 A test design and a real example\nThe name of the test design discussed is ActivitiesST4. This test design involves 4 participating\nactivities and a library of 10 alternatives. It also has two global input resources to start the process.\nThese two resources together with the two global outputs are predefined. The combination of the 4\nactivities selected to participate in the process design must allow the process output resources to be\nproduced. The optimisation variables of the problem are eight, the 4 activities to be selected from the\nlibrary and the 4 four starting times of these activities. In case that two or more activities are linked\nsequentially, their corresponding starting times need to be properly adjusted by the algorithm to reflect\nthis sequence. As can be seen from figure 2, both starting times and activities are optimisation variables\nhaving a significant impact on the design complexity.\nFigure 4. Travel agent process of offering holidays\nA real example of this process is discussed below. The ActivitiesST4 process design can be perceived as\na travel agent\u2019s process of offering holidays to a customer. The process starts with the customer\nproviding the price that he\/she is willing to pay and also the details of his\/her desired holiday, e.g.\ntravel destination, dates and trip duration. The travel agent then takes two simultaneous actions: he\/she\nsearches and checks the availability of existing holiday packages that meet the customer requirements\nand at the same time he\/she explores individual travel options in order to create a tailored package that\nsuits the specific customer needs. The result of these actions is to provide different holiday proposals\n- 14 -\nto the customer along with the payment details for each one of them. The travel agent process of\noffering holidays is demonstrated in figure 4.\nObject name Process element Alternatives Cost Duration\nTravel details Input resource - - -\nPrice limit Input resource - - -\n1. Search from brochures 2 9Browse\npre-booked packages Activity 2. Search company intranet 7 5\n1. Browse past cases 4 8Explore\ntravel options Activity 2. Explore new options 6 6\n1. Via intranet\/e-mail 10 1Check availability Activity\n2. Via phone\/post 5 7\n1. Use specific software 11 2Create\ntailored package Activity 2. Combine options manually 5 6\nHoliday proposals Output resource - - -\nPayment details Output resource - - -\nTable 2. Explanation of the travel agent process elements\nTable 2 provides an explanation of the process elements. \u2018Travel details\u2019 and \u2018price limit\u2019 are the two\ninput resources that are necessary to initiate the process of offering holidays. Then for each activity of\nfigure 4 there are two alternatives with different cost and duration values. In this example the\nalternatives for each activity are the different ways that the activity can be executed. Each activity in the\nprocess design uses input resource(s) and transforms them so that the following activities can utilise\nthem until the final output resources have been produced. In this example, the customer\u2019s preferences\nand details are fed to the process and transformed by the activities to the actual holiday proposal and\npayment details. For each alternative activity the values (provided in arbitrary units) reflect the trade-off\nbetween cost and duration, i.e. manual activities tend to cost less but last longer while automated\nactivities carry a higher cost but have much shorter duration. These cost and duration values are the\naverage for each particular activity. The output resources of the process are considered as the \u2018Holiday\nproposals\u2019 and the \u2018Payment details\u2019. There are two input and output resources in the example, the\nparticipating activities are four and the library contains 8 alternative activities thus making this real\nexample similar to ActivitiesST4 test process design. The alternative activities named in this particular\n- 15 -\nexample are considered as mutually exclusive, however for each activity another alternative can be\npotentially added that utilises both alternatives together. It is expected though that such alternative will\nhave greater values both in cost and duration. This alternative has not been included here. However,\nthe framework is generic and capable of handling additional alternatives.\n5. Experimental results\nThis section describes the experimental results for the process design discussed in the previous section\nand the remaining four that are presented in the Appendix. The aim of this section is to evaluate both\nthe algorithms\u2019 optimisation performance in this constrained problem and to demonstrate the\nalternative optimised processes that are generated for the travel agent process example.\n5.1 Performance of optimisation algorithms\nThe test problems are incorporated in KEA toolbox (Bartz-Beielstein, 2004), a software optimisation\nplatform that utilises NSGA2, SPEA2 and MOPSO algorithms to optimise user-defined problems.\nEach of the five test designs were imported in the platform and optimised with each of the three\nevolutionary algorithms. Table 3 presents the parameters for each of the algorithms as these were\ndefined by the authors. These parameters are typically used in literature for comparing the algorithms\n(see Freschi and Repetto, 2005). These are also the default values in the KEA toolbox (Bartz-Beielstein,\n2004).\nNSGA2 SPEA2 MOPSO\nPopulation size = 100\nGenerations = 250\nMutation prob. = 0.2\nCrossover probability = 0.8\nPopulation size = 100\nGenerations = 1000\nMutation prob. = 0.2\nArchive size = 100\nRecombination prob. = 0.8\nParticles = 20\nHypercubes = 10000\nGenerations = 1000\nRepository = 100\nInertia = 0.4\nPersonal best = 1.0\nRepository weight = 1.2\nTable 3. Main parameters for the optimisation algorithms\n- 16 -\nIn order to evaluate the results produced by optimisation algorithms and acquire a picture of the search\nspace, a random population of 10,000 feasible solutions was initially generated. Random solutions are\nthose, for which the variable values are randomly generated, i.e. in the real example random activities\nare selected from the library and their starting times are also randomly selected. Feasible solutions are\nthose that satisfy all the constraints of the mathematical model and produce the actual process outputs;\nfor the real example these are the holiday proposal and payment details. In order to produce the actual\nresults (i.e. feasible optimised processes) each of the optimisation algorithms was executed 30 times\nwith different random seed values. Most of these 30 runs produced similar results. The results\npresented here belong to one of the typical runs. The graphs in figure 5 demonstrate the solutions that\neach of the three optimisation techniques generated for the ActivitiesST4 process design.\nThe solutions for the remaining four test designs are in the Appendix (figures 8 and 9). The generated\nsolutions consist of feasible business processes with minimised process duration and cost. The graphs\ndepict the process duration and cost values for both the random and the optimised population. The\ndotted points represent the solutions that the techniques produced while the \u2018x points\u2019 the randomly\ngenerated solutions. To evaluate the results a performance metric is introduced. In general, the\nperformance metrics for multi-objective optimisation algorithms focus on two main aspects:\n1. The closeness of solutions to the Pareto-optimal front and\n2. The diversity of solutions.\nDeb (2001) introduced a series of evaluation metrics such as error ratio, set coverage metric, maximum\nPareto-optimal front error and hypervolume. For the business process designs the primary aim is to\nmeasure the number of optimal solutions that are generated. For this reason we used a variation of the\nerror ratio. The error ratio is an illustrative metric that is easily understood by business end users. As\nopposed to this, most other metrics used in multi-objective optimisation literature are designed for\ncomputer scientists. The error ratio measures the percentage of solutions that do not belong to the\n- 17 -\nPareto-optimal front against the total number of produced solutions. To demonstrate better the quality\nof the experimental results, we designed the opposite of error ratio.\nFigure 5. Generated solutions for ActivitiesST4 by the optimisation techniques\n- 18 -\nThe \u2018success ratio\u2019 is calculated as the percentage of generated solutions that belong to the Pareto front\nagainst the total number of solutions.\nThe formula of the success ratio is:\n*_ _\n%\n_R\nno of solutions P\ns\ntotal solutions\n\uf0ce\uf03d\nThe numerator of the success ratio equation holds the number of generated solutions that belong to P*\n(Pareto-optimal front) while the denominator holds the total number of generated solutions. The\nsuccess ratio (sR) calculates the percentage of Pareto-optimal solutions that the optimisation algorithm\nhas generated. Being a real-life situation the Pareto-optimal front is not known for the test problem.\nTherefore in this case, Pareto-optimality of a solution is defined if it is non-dominated with respect to\nthe large set of randomly generated solutions as shown in figure 5.\nFigure 6. Performance evaluation of the test process designs based on success ratio\nFigure 6 demonstrates the performance of the five test designs based on the success ratio evaluation.\nFor ActivitiesST2 process design, both NSGA2 and SPEA2 perform very well unlike MOPSO that\nidentifies only 40% of the Pareto-optimal solutions. SPEA2 also produces very good results for\nActivitiesST3 problem (75%) while NSGA2 gives a satisfactory number of optimum solutions (40%).\n- 19 -\nNevertheless their performance drops significantly with the addition of an extra activity in\nActivitiesST4. MOPSO performs poorly as apart from the first test problem it does not seem to be able\nto locate optimum solutions for the rest. Moving to test problems with bigger activity libraries, NSGA2\nproduced satisfactory results for ActivitiesST4(20), while for ActivitiesST5 problem none of the\nalgorithms was able to locate solutions on the Pareto front due to its increased complexity. The average\nsuccess ratio for both NSGA2 and SPEA2 is approximately 40%, while for MOPSO it is only 8%.\nBefore these results are further discussed, the features of the search space need to be highlighted once\nmore as they have a significant impact on the quality of the results. The mathematical model of the\nbusiness process design consists of discrete binary variables that increase the complexity of optimising\neven a simple process design as the search space is highly fragmented. Also the business process\nmodels are highly constrained having 13 constraints to check for every possible solution, decreasing the\nperformance of the algorithms. The optimisation algorithms have a difficult task even to produce sets\nof feasible solutions. Given the complex nature of the business process designs, the overall\nperformance of NSGA2 can be characterised as good and can be attributed to its elitism. As NSGA2\narchives the optimum solutions of each generation and compares them with the ones it produces, it\nmanages to preserve the identified feasible solutions. SPEA2 is also an elitist algorithm that provides\nbigger spread of the solutions. It also preserves feasible individuals through generation evolution and\nthis justifies its satisfactory results. As opposed to this, MOPSO seems to have a serious problem in\nsuccessfully defining the guide that combines the two objectives. The algorithm demonstrates poor\nperformance as the solutions that it generates do not belong to the Pareto optimal front for most of the\ntest problems. This supports the claim by Kennedy and Eberhart (1999) that MOPSO has better\nperformance in problems with continuous search space which is not the case here.\nFigure 6 also shows that as the complexity of the problems increases, the performance of the\noptimisation algorithms declines significantly. The simplest of test problems (ActivitiesST2) is handled\n- 20 -\nwell by all three algorithms. Moving to medium complexity problems, SPEA2 provides better results\nwhile NSGA2 hits back on high complexity problems with 58% success on one of the problems\n(ActivitiesST4(20)). On average performance NSGA2 holds the best position with slightly better results\nthat SPEA2 which has also performed above 40% on average. This supports the claim by Zitzler et al.\n(2001) that SPEA2 and NSGA2 tend to behave very similar on various problems. Many applications of\nthe NSGA2, SPEA2 and MOPSO are not as successful in dealing with large dimensional problems and\nextremely disconnected Pareto fronts.\n5.2 Evaluation of alternative business process designs\nAfter evaluating the ability of the three optimisation algorithms in producing optimised process\ndesigns, it is of equal importance to examine the practical implications of the results on producing\nalternative business process designs. We selected three NSGA2 solutions (the numbered dots in figure\n5) in order to visually demonstrate the optimised business processes that were generated based on the\ntravel agent business process example that was presented in section 4. Figure 7 sketches the three\noptimised business processes. These processes have different trade-offs between process duration and\ncost, thus none of them is better than the others.\nAt the beginning (time = 0) the two input resources are available and the process starts. The grey boxes\nrepresent the activities and their length depicts their duration. The process cost is calculated by adding\nall the activity costs, while the process duration is defined by the time that the last activity finishes its\nexecution. For the duration and cost values of each activity refer to table 2. Figure 7 proves that the\nsame business process can have different performances in terms of time and cost -by selecting different\nsets from amongst the library activities.\n- 21 -\nFigure 7. Optimised alternatives for the \u2018travel agent\u2019 business process\n- 22 -\nOptimised process 1 for example has the shortest duration (8 units) but it is also the most expensive as\nit is using mostly technological means to produce the resources. Optimised process 2 has reduced cost\nbut has a 50% increase in process duration due to different combinations of the activities. Finally,\noptimised process 3 costs less than half of the first instance but it lasts twice as long. Therefore, the\noptimised solutions provide a range of selection to the process analyst to make a decision. The decision\nmaking criteria could be the company\u2019s priorities or policy at a given time or external factors such as\ncompetitor\u2019s performance. The risk of selecting a particular alternative over the others needs also to be\ntaken into account. Having the opportunity to shape a business process according to two or more\nobjectives and being able to review the trade-offs between these objectives empowers the process\nanalyst when it comes to business process selection and realisation as there is a range of alternatives in\nhis hand.\n6. Discussion\nThis section discusses the practical implications of the framework, along with its limitations and\ndirections for future research. The test problems demonstrated that the proposed framework is capable\nof applying multi-objective optimisation to various business process designs and generating Pareto-\nfront solutions. The ability to produce an overall 40% of optimum solutions provides a good set of\noptimised alternative business processes with different trade-offs in process duration and cost. This\ngives the capability to the process owner to select according to decision making priorities a business\nprocess from a range of optimised ones with different objective values rather than having a single\noptimised alternative. The results are indicative but also promising and future research can lead to\nbetter quality results.\nNevertheless, during the development of the multi-objective optimisation methodology a number of\nlimitations were unveiled. The first limitation originates from the mathematical model of the business\nprocess. The mathematical model focuses on activities and resources as its two main concepts and it\n- 23 -\nignores the participating (physical or mechanical) actors. This consequently results in what is criticised\nby Lindsay et al. (2003) as \u2018a mechanistic viewpoint of business processes\u2019. However, it is more difficult\nfor a formal business process modelling technique to capture the roles of the participants than a\ndiagrammatic approach which visualises the flow of the process. Another limitation lies in the selection\nof the test process designs. In order to better assess the optimisation techniques used, an approach with\na scalable range of problems was selected. To evaluate the algorithms\u2019 performance using a larger series\nof problems can better demonstrate the algorithms\u2019 behaviour by providing a more apparent\nperformance overview. Another limitation is linked with the evaluation metric that was simple and did\nnot take into account the diversity of the generated solutions. In the authors\u2019 opinion the limitations\ndescribed above do not reduce the significance of the methodology that was followed or the quality of\nresults. Addressing these limitations, would lead to improved results perhaps even more encouraging in\nterms of the optimisation algorithms\u2019 performance on multi-objective business processes optimisation.\nFuture research in the relevant area could focus on areas such as building more complete process\nmodels, testing more complicated process designs and exploring more efficient metrics. The\nconstruction of a business process model that can cover more aspects of a \u2018closer to real world\u2019\nbusiness process can be a complicated research area. Business processes in real world have features\nsuch as feedback loops or decision points. Modelling and optimisation of these aspects can prove a\ncomplicated task. Future research should also focus on selecting and customising the most appropriate\ntechniques for business process multi-objective optimisation from a wider set of techniques and\nalgorithms and thus locating more accurately the most suitable optimisation method in order to\nproduce better results.\n7. Conclusions\nThe paper presented a framework for applying multi-objective optimisation to business process\ndesigns. By developing a formal business process model and orienting it to multi-objectivity, the\ngeneration of optimised business process designs was facilitated and demonstrated using the travel\n- 24 -\nagent example. What makes the business process optimisation problem distinctive is its highly\nconstrained nature and the fragmented search space that has a significant impact on locating the\noptimum solutions. It is shown that state-of-the-art multi-objective optimisation algorithms, such as\nNSGA2 and SPEA2, produced satisfactory results by generating and preserving optimal solutions on\nprocess designs of different complexities. That provides an adequate number of alternative optimised\nprocess designs for the business analyst to decide the trade-offs between the different objectives. The\nresults presented here are indicative and encouraging for further research in the area of business\nprocess multi-objective optimisation.\nReferences\nAguilar-Saven R. S., 2004. Business process modelling: Review and framework. International Journal\nof Production Economics 90, 129-149.\nBartz-Beielstein T., Mehnen J., Naujoks B., Schmitt K. and Zibold D., 2004. KEA - A software\npackage for development, analysis and application of multiple objective evolutionary\nalgorithms, viewed 20 December 2005, <http:\/\/www-isf.maschinenbau.uni-\ndortmund.de\/veroeff\/documents\/2004_mehn_kea_a.pdf>.\nBititci U.S. and Muir D.,1997. Business process definition: a bottom-up approach. The International\nJournal of Operations and Production Management 17 (4), 365-374.\nByrne M.D. and Hossain M.M., 2005. Production planning: An improved hybrid approach.\nInternational Journal of Production Economics 93-94, 225-229.\nCheung Y. and Bal J., 1998. Process analysis techniques and tools for business improvements. Business\nProcess Management 4 (4), 274-290.\nChafekar D., Xuan J. and Rasheed K., 2003. Constrained Multi-objective Optimization Using Steady\nState Genetic Algorithms. In Proceedings of GECCO 2003, Chicago, Illinois, USA, .pp. 813-824.\nDeb K., Agrawal S., Pratap A. and Meyarivan T., 2000. A Fast Elitist Non-Dominated Sorting Genetic\nAlgorithm for Multi-Objective Optimization: NSGA-II. KanGAL Report No. 200001.\nDeb K., 2001. Multi-objective optimisation using evolutionary algorithms, New York: John Wiley &\n- 25 -\nSons.\nFreschi F. and Repetto M., 2005. Multiobjective Optimization by a Modified Artificial Immune System\nAlgorithm. Lecture Notes in Computer Science 3627, 248-261.\nGrigori D., Casati F., Castellanos M., Dayal U., Sayal M. and Shan M.C., 2004. Business Process\nIntelligence. Computers in Industry 53, 321-343.\nHofacker I. and Vetschera R., 2001. Algorithmical approaches to business process design. Computers\n& Operations Research 28, 1253-1275.\nKennedy J. and Eberhart R., 1995. Particle Swarm Optimisation. IEEE International Conference on\nNeural Networks, Conference Proceedings 4, 942-1948.\nKennedy J. and Eberhart R., 1999. The Particle Swarm: social adaptation in information-processing\nsystems. In: Corne D., Dorigo M. and Glover F., (Eds.) New Ideas in Optimisation, 379-388.\nCambridge: McGraw-Hill.\nKoubarakis M. and Plexousakis D., 2002). A Formal Framework for Business Process Modelling and\nDesign. Information Systems 27, 299-319.\nLi H., Yang Y. and Chen T.Y., 2004. Resource constraints analysis of workflow specifications. The\nJournal of Systems and Software 73, 271-285.\nLindsay A., Downs D. and Lunn K., 2003. Business processes - attempts to find a definition.\nInformation and Software Technology 45, 1015-1019.\nMcKay A. and Radnor Z., 1998. A characterization of a business process. The International Journal of\nOperations and Production Management18 (9\/10), 924-936.\nSadiq W. and Orlowska E. M., 2000. Analysing process models using graph reduction techniques.\nInformation Systems 25, 117-134.\nShimizu Y. and Sahara Y., 2000. A supporting system for evaluation and review of business process\nthrough activity-based approach. Computers and Chemical Engineering 24, 997-1003.\nVaughan T.S., 2006. Lot size effects on process lead time, lead time demand, and safety stock.\nInternational Journal of Production Economics 100, 1-9.\nYu C-S. and Li H-L., 2000. A robust optimization model for stochastic logistic problems. International\n- 26 -\nJournal of Production Economics 64, 385-397.\nZakarian A., 2001. Analysis of process models: A fuzzy logic approach. The International Journal of\nAdvanced Manufacturing Technology 17, 444-452.\nZitzler, E. and Thiele L., 1999. Multi-objective evolutionary algorithms: A comparative case study and\nthe strength pareto approach. IEEE Transactions on Evolutionary Computation 3, 257-71.\nZitzler E., Laumanns M. and Thiele L., 2001. SPEA2: Improving the Strength Pareto Evolutionary\nAlgorithm. TIK Report Nr. 103, Computer Engineering and Networks Lab (TIK), Swiss\nFederal Institute of Technology (ETH) Zurich.\nAppendix\nThe Appendix describes the remaining four test business process designs and their results. Table 4\npresents a summary of the designs\u2019 main parameters demonstrating also their increasing complexity.\nThe optimisation results of these test problems are demonstrated in figures 8 and 9 below.\nParameters ActivitiesST2 ActivitiesST3 ActivitiesST4(20) ActivitiesST5\nNo. of input resources: 2 2 2 3\nNo. of output resources: 2 2 2 3\nNo. of participating activities: 2 3 4 5\nLibrary size: 10 10 20 20\nTable 4. Summary of parameters for the remaining test business process designs\n- 27 -\nFigure 8. Generated solutions for ActivitiesST2 and ActivitiesST3\n- 28 -\nFigure 9. Generated solutions for ActivitiesST4(20) and ActivitiesST5\n"}