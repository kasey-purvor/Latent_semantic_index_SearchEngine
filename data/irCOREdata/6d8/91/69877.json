{"doi":"10.1109\/ROBOT.1996.503897","coreId":"69877","oai":"oai:eprints.lancs.ac.uk:20429","identifiers":["oai:eprints.lancs.ac.uk:20429","10.1109\/ROBOT.1996.503897"],"title":"LUCIE the robot excavator - design for system safety.","authors":["Seward, D. W.","Margrave, F. W.","Sommerville, I.","Morrey, R."],"enrichments":{"references":[{"id":16337069,"title":"and I.Sommerville, &quot;Viewpoints for requirements defmition&quot;,","authors":[],"date":"1995","doi":null,"raw":"[Kotonya  19921  G.  Kotonya.  and  I.Sommerville, &quot;Viewpoints  for  requirements  defmition&quot;,  IEEiBCS Software Eng. J. 1992.7(6) pp 375-87 [Kotonya  19951  G.  Kotonya.  and  I.  Sommerville, &quot;Requirements Engineering with Viewpoints&quot;  IEE\/BCS Software  Eng.  J.,  1995.  lO(6).  To  appear  November 1995.","cites":null},{"id":16337075,"title":"Authorized licensed use limited to:","authors":[],"date":null,"doi":null,"raw":"Authorized licensed use limited to: Lancaster University Library. Downloaded on December 11, 2008 at 11:49 from IEEE Xplore.  Restrictions apply.","cites":null},{"id":16337061,"title":"Control Systems Design for Robotic Backhoe.&quot;,","authors":[],"date":"1990","doi":null,"raw":"[Bracewell  19901 R  H Bracewell,  D  A  Bradley,  R V Chaplin and D W Seward, &quot;Control Systems Design for Robotic  Backhoe.&quot;,  7th  Int.  Symp.  on  Robotics  in Construction pp 222 - 229, Bristol, (June 1990).","cites":null},{"id":16337064,"title":"Draft. Functional safety of electrical\/ electronic\/ programmable electronic systems: Generic Aspects. Part 1 : General Requirements.","authors":[],"date":"1992","doi":"10.3403\/30143454","raw":"[IEC  19921 IECiTC  65A(Secretariat)  123, May  1992, Draft.  Functional  safety  of  electrical\/  electronic\/ programmable electronic systems: Generic Aspects. Part 1  : General Requirements.","cites":null},{"id":16337068,"title":"Knowledge Acquisition for a Robot Excavator.&quot;,","authors":[],"date":"1990","doi":null,"raw":"[Green 19901 P Green, D W Seward and D A Bradley &quot;Knowledge Acquisition  for  a  Robot  Excavator.&quot;,  7th Int. Symp. on Robotics in Construction pp  351 - 357, Bristol, (June 1990).","cites":null},{"id":16337072,"title":"LUCIE - The autonomous excavator&quot;.","authors":[],"date":"1992","doi":null,"raw":"[Seward 19921 D W Seward, &quot;LUCIE - The autonomous excavator&quot;. Industrial Robot International Quarterly Vol 19 No  1 pp  14 -  18, MCB  University  Press  (March 1992). [Seward 19921 D W Seward, D A Bradley, J E Mann, M R  Goodwin,  &quot;Controlling  an  Intelligent Excavator  for Autonomous  Digging  in  Difficult  Ground&quot;.  9th  Int.","cites":null},{"id":16337058,"title":"Safety and Standards for Advanced Robots - A First Exposition',","authors":[],"date":"1992","doi":null,"raw":"[Advanced 19921 Advanced Robotics Research Limited (1992), 'Safety and Standards for Advanced Robots - A First Exposition', Report ARRL.92.009,  1992.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"1996-04","abstract":"Staff and students at Lancaster University have, for the past five years, been involved in the development of an autonomous robot excavator LUCIE (Lancaster University Computerised Intelligent Excavator). The aim of the project is to add autonomy in order to produce a robot excavator with the following characteristics: it should concentrate on the task of trenching; it should adapt to different soil types without human intervention; it should cope with obstructions; and it should eventually be a self-contained system with no cables to external computers. The hardware and software architectures, optical distance sensor, and safety problems are described","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/69877.pdf","fullTextIdentifier":"http:\/\/eprints.lancs.ac.uk\/20429\/1\/20429.pdf","pdfHashValue":"740bc8a56a738b1b53fcf04a90151c15c54ba8e5","publisher":"IEEE","rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:eprints.lancs.ac.uk:20429<\/identifier><datestamp>\n      2018-01-24T01:57:28Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      7375626A656374733D54:5441<\/setSpec><setSpec>\n      74797065733D626F6F6B5F73656374696F6E<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n    \n      \n        LUCIE the robot excavator - design for system safety.<\/dc:title><dc:creator>\n        Seward, D. W.<\/dc:creator><dc:creator>\n        Margrave, F. W.<\/dc:creator><dc:creator>\n        Sommerville, I.<\/dc:creator><dc:creator>\n        Morrey, R.<\/dc:creator><dc:subject>\n        TA Engineering (General). Civil engineering (General)<\/dc:subject><dc:description>\n        Staff and students at Lancaster University have, for the past five years, been involved in the development of an autonomous robot excavator LUCIE (Lancaster University Computerised Intelligent Excavator). The aim of the project is to add autonomy in order to produce a robot excavator with the following characteristics: it should concentrate on the task of trenching; it should adapt to different soil types without human intervention; it should cope with obstructions; and it should eventually be a self-contained system with no cables to external computers. The hardware and software architectures, optical distance sensor, and safety problems are described.<\/dc:description><dc:publisher>\n        IEEE<\/dc:publisher><dc:date>\n        1996-04<\/dc:date><dc:type>\n        Contribution in Book\/Report\/Proceedings<\/dc:type><dc:type>\n        NonPeerReviewed<\/dc:type><dc:format>\n        application\/pdf<\/dc:format><dc:identifier>\n        http:\/\/eprints.lancs.ac.uk\/20429\/1\/20429.pdf<\/dc:identifier><dc:relation>\n        http:\/\/dx.doi.org\/10.1109\/ROBOT.1996.503897<\/dc:relation><dc:identifier>\n        Seward, D. W. and Margrave, F. W. and Sommerville, I. and Morrey, R. (1996) LUCIE the robot excavator - design for system safety. In: Proceedings of the 1996 IEEE international conference on robotics and automation. IEEE, Minneapolis, pp. 936-968. ISBN 0-7803-2988-0<\/dc:identifier><dc:relation>\n        http:\/\/eprints.lancs.ac.uk\/20429\/<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/dx.doi.org\/10.1109\/ROBOT.1996.503897","http:\/\/eprints.lancs.ac.uk\/20429\/"],"year":1996,"topics":["TA Engineering (General). Civil engineering (General)"],"subject":["Contribution in Book\/Report\/Proceedings","NonPeerReviewed"],"fullText":"Proceedings of the 1996 IEEE \nInternational Conference on Robotics and Automation \nMinneapolis, Minnesota - April 1996 \nLUCIE the Robot Excavator - Design for System Safety \nDerek Seward & Frank Margrave, Department of Engineering \nIan Sommerville & Richard Morrey, Department of Computing \nLancaster University, U K \n1.0 Background \nStaff and students at Lancaster University have, for the \npast five years, been involved in the development of an \nautonomous robot excavator - LUCIE - the Lancaster \nUniversity Computerised Intelligent Excavator. An \nexcavator provides a good opportunity for development, \nas it is basically a highly efficient and well developed \nfour degree-of-freedom manipulator arm, but with the \ncomplete absence of automation or intelligence. The aim \nof the project is to add autonomy in order to produce a \nrobot excavator with the following characteristics: \n0 It should concentrate on the task of trenching, and \nbe able to produce a good quality and accurate \nsmooth-bottomed trench. \nIt should adapt to different soil types without \nhuman intervention. \n0 It should cope with obstructions, such as boulders \nin the trench. \n0 It should eventually be a self-contained system with \nno cables to external computers. \nFigure 1 - Fifth scale hydraulic model \nThe first stage of the work was sponsored by the U.K. \nEngineering and Physical Sciences research Council \n(EPSRC) and involved site studies of the excavation \nprocess [Green 19901. The techniques and strategies of \nskilled drivers were observed and analysed. A working \nhydraulic fifth-scale model was constructed - see figure \n1 - and this enabled automated digging strategies to be \ndeveloped in the laboratory. \nA full-sized rapid prototype was then produced using \nlargely off-the-shelf components The purpose of the \nprototype was to prove the concept and to further refme \nthe system requirements. A hardware platform was \nprovided by the JCB excavator company in the form of \na JCB 801 tracked mini-excavator - see figure 2. An \nidentical system architecture to the fifth-scale model \nwas adopted which enabled software to be transferred \neasily from one to the other. The main processor used \nwas a Harris RTX2000 communicating via a standard \nindustrial STE (IEEE 1000) bus. This processor is a \nhigh speed device optimised for the FORTH computer \nlanguage. For more details see [Bracewell 19901 & \n[Seward 19921. Although the rapid prototype met the \ninitial aims of the project listed above, the solution \nlacked compactness, robustness and was reasonably \nexpensive in hardware terms. Neither was the rapid \nprototype mobile - i.e. the arm was under computer \ncontrol but no attempt was made to control the tracks. \nFigure 2 - The JCB 801 mini-excavator \nHaving shown that the initial aims are realistic it was \ndecided to re-engineer LUCIE in a more robust and \nprofessional manner - the next stage being referred to as \na development prototype. The hardware is described in \n0-7803-2988-4196 $4.00 0 1996 IEEE 963 \nAuthorized licensed use limited to: Lancaster University Library. Downloaded on December 11, 2008 at 11:49 from IEEE Xplore.  Restrictions apply.\nsection 3.0. It was also decided to make LUCIE mobile \nby extending automation to the tracks. This immediately \nemphasises the problems of safety with such large and \npowerful mobile robots. It is the approach to these \nsafety problems that forms the bulk of the remainder of \nthis paper. \n2.0 Basic software architecture \nOne of the most important outcomes of the rapid \nprototype was the effective high level decomposition of \nthe system into discrete modules. A useful guide to \nminimising coupling between modules is to consider the \npoints where a human would intervene in the system in \nthe event of a failure. This is shown in figure 3. The \nsafety manager is not shown connected at this stage as it \nhas a unique status. This is discussed in more detail \nlater. \n~ \n{ Navigationmanager \\\\ \nFigure 3 .. Top-level decomposition with points of \nhuman intervention \nTwo of the above modules, the low-level arm controller \nand the digging manager will be considered in more \ndetail. \nThe purpose of the low-level arm controller is to take \nmovement commands from the digging manager and \nsend the appropriate control signals to the electro- \nhydraulic valves. Experiments with the fifth-scale model \nrevealed the desirability of a dual control strategy which \nis closely reflected in the human approach to digging. \nWhen moving in air (i.e. tipping the spoil and \npositioning the bucket teeth) a positional controller is \nrequired. The commands from the activities manager \nthus instruct the bucket to move to specific X,Y,Z co- \nordinates in space. Angle sensors were placed on the \narm joints to provide closed-loop control. \nWhen moving in soil a velocity controller is required. \nThe commands from the activities manager instruct the \ntip of the bucket teeth to comply with a particular \nvelocity vector (i.e. speed and direction). This strategy \naccepts the fact that movement in the ground needs to be \nhighly adaptive as ground conditions change, and that \nthere is little likelhood of reaching a specific point via a \npredetermined path. Error feedback is used by the \nactivities manager to modify the velocity command in \norder to optimise performance. Thus if the excavator \ncannot achieve the demanded velocity because the \nground is too hard, the activities manager will direct the \nlow-level controller to attempt a shallower dig where the \nground is expected to be softer. This approach has \nproved very effective in providing pseudo-force \nfeedback without the need of additional force sensors. \nThe low-level arm controller is currently implemented \nin \u201cC\u201d. \nOf the above high-level modules, it is most difficult \nto provide an early detailed requirements specification \nfor the digging manager. The digging manager is the \nmodule that directs the digging process and has \nknowledge of the tactics required for efficient operation. \nTo help the prototyping of the digging manager a design \nplatform concept was used. The design platform allows \nthe developers to try out and modify ideas, as well as \nreacting swiftly to requirements changes in other system \ncomponents. \nThe aim of the design platform is to provide \nmaximum flexibility without compromising on \nmaintainability. Maintainability is essential not only \nbecause of the potentially fast and possibly radical \nprototyping process, but also because of the unstable \nnature of developing the system using students. The \npurpose is to produce a detailed and static specification \nof the activities manager module. This specification is \nthen used to produce an optimised and well engineered \nsoftware solution. \nIn order to construct a design platform, it is \nnecessary to have at least a basic understanding of the \nrobotic system and the high level goals of the control \nsoftware. Most useful intelligent robots will be finite \nstate machines. These are systems which are in one or \nother particular state of activity depending upon the \nstimuli received. These stimuli can be as a result of \nsignals from sensors, timers, switches or work \ninstructions from a higher level programme. The stimuli \ntrigger the switch from one state to another. Figure 4 \nshows a state transition diagram for \u201cdigging within \nreach\u201d. The words inside the boxes describe particular \nstates and the words in italics outside the boxes indicate \nthe stimuli that triggers the transition from one state to \nanother. The digging manager is implemented using the \nwell known AI technique of a production system \n[Seward 1992 ] in ADA. The semi-formalism of this \ntechnique assists in making the safety case for the robot. \nAbout seventy production rules are required for \nexcavation, but because the system is a finite state \nmachine only a sub-set of the rules needs to be \nconsidered within any particular state. \n964 \nAuthorized licensed use limited to: Lancaster University Library. Downloaded on December 11, 2008 at 11:49 from IEEE Xplore.  Restrictions apply.\nwithin- I deg. \n-b \ncoords-OK \nI \nconten ts-released \nnof-full \nlitlegen < Penetration > \nat-x-limit bucket_horiz. \nAssessing contents Raising bucket \nat_depth \nheight_OK \n\/ \n\/oca tion- OK \n1 contents-stuck \nVibrating bucket \nFigure 4 - finite state transition diagram \n3.0 System hardware \nThe software architecture shown above leads naturally \nto a hardware architecture. A conventional Intel 486 \nbased system has been adopted - initially based around \nthree processors. One for the digging and navigation \nmanager, one for the low-level controllers and one for \nthe safety manager. The ultra-compact PC 104 format is \nused with the processors communicating via a CAN bus. \nThe following sensors are provided: \n0 Four potentiometers on the joints for angle \nmeasurement \n0 A tilt sensor for reasons of safety and levelling the \ntrench \n0 An obstacle detection sensor (see later) \nBump sensors \n0 A Trimble 7400MSi series satellite GPS for location \nand navigation \nThese sensors are currently hard-wired, but it is the \nlong-term intention to convert all sensors to \u201cintelligent\u201d \nsensors communicating via the CAN bus. \n3.1 Obstacle detection sensor \nThere are potentially two types of sensor \navailable to the project for the detection of \nsurface obstacles: \n(a) Standard \u2018bump\u2019 sensors, which can be \nfitted to the extremities of the vehicle \nand are activated only when they \nactually come into contact with an \nobstacle \n(b) The Leuze RotoScan RS 3 optical \ndistance sensor, which can detected \nobstacles up to a distance of 15 metres. \nLUCIE\u2019s sensing capabilities will be based on a \ncombination of these two types of sensor. \nThe Leuze RotoScan RS3 works by using \ntwo lasers which scan through 90\u201d thus \nproviding a semi-circle of coverage. Objects \ngreater than 7 cm wide are detected up to a 25 \nm range. The area is swept at lOhz and the \nprecise position of objects output in serial form \nto the computer \n2 degrees 1 L Sensor \nFigure 4 - The Leuze RotoScan Sensor \nThere are two important limitations which impinge on \nhow the sensor can be deployed: \n(I) The range in the horizontal plane is very narrow - \n- more-or-less negligible; so it is possible for \nobjects lower than the sensor to be missed, as \nwell as those entirely above it - overhanging \nbranches, birds etc. \n(2) The sensor only detects the obstacle closest to it. \nThis means that if any part of LUCIE (the boom \nfor example) cuts across the sensor\u2019s field of \nvision, temporary blind spots will be created \nbeyond which any obstacles will remain \nundetected. \nThese limitations mean that the single RotoScan we are \nlikely to have available must be positioned carefully. It \n965 \nAuthorized licensed use limited to: Lancaster University Library. Downloaded on December 11, 2008 at 11:49 from IEEE Xplore.  Restrictions apply.\nwill be placed on the top of the cab at the front so that it \nmonitors the region in which the boom moves when the \ncab is stationary, and when the cab rotates, the 'leading \nedge' of the sensor range will monitor the space into \nwhich the cab is moving. See figure 5 .  \nRotoScan Sensor \nI- \n0 More external sensors - to determine appropriate \nbehaviour in unstructured environments \nIn addition, the behaviour of these robots must be \nconsidered to be non-deterministic for the following \nreasons:- \n1. The end-user may need the facility to modify the \nbehaviour of the robot in order to 'train' it to carry out \nnew tasks. \n2. The use of heuristic rules is probably essential for \nflexible operation. \n3. They will operate in unpredictable and unstructured \nenvironments. \nSide View \nFigure 5 - Optimum sensor position \nThis overcomes the problem of the boom triggering the \nsensor for most applications. \n4.0 The safety problem \nThere is currently a great deal of interest and active \nresearch throughout the world in the field of large \nmobile robots. Applications range fiom firefighting, \nhandling of hazardous materials, nuclear de- \ncommissioning and sub-sea activity to general \nconstruction robots. When the time comes for such \ntechnologies to reach the marketplace, safety will be a \nvital issue. Indeed unless considerable research effort is \nput into addressing the safety issues, it is conceivable \nthat the fbture exploitation of such robots will be \nseverely handicapped. \nRobots in the above categories differ from \nconventional industrial robots in four key ways, all of \nwhich have very important implications for system \nsafety:- \n0 Mobility \n0 Higher power to weight ratios \n0 More intelligence - to provide autonomy to tackle \nless well defined problems \nThe report \"Safety and Standards for Advanced Robots - \na First Exposition\" [Advanced 19921 highlights the \nfollowing hdamenta l  dilemma facing advanced robot \ndevelopment:- \n\"Certain functions of an advanced robot i.e. its ability to \ninteract with a dynamically changing world, cannot \nreadily be achieved other than by the use of symbolic \nsojiware representations. To mandate the use of formal \nmethods is in efect to deny thisfunctionali ty.... \" \n\"The issue of artificial intelligence in safety critical \napplications causes concern and has been side-stepped \nin the existing standards committees, although they are \naware of the problems. ' I  \nThis conflict is being addressed by means of a software \nsafety manager. This is conceived as an independent \ndistinct entity, whose job it is to monitor the \nenvironment, and give permission for all behaviour \nwhich could have a safety critical component. This is a \nbehaviourist approach in that it is concerned with \nachieving safe behaviour, but is not concerned with the \nprocesses that determine functional behaviour. Clearly, \nin the interests of efficiency and reliability, the processes \nthat control functional behaviour should be rigorously \ndesigned using the best software engineering practices to \nmaximise safe behaviour. Ultimately the safety manager \nis, however, responsible, and will block all actions that \nmight create a hazard. \n5.0 Developing the safety case \nThe process of developing safe systems is described in \nthe \"Safety Lifecycle Model\" [ IEC 19921, however \nEuropean work [Redmill 19891 has produced a model \nwhich greatly expands the early steps that lead up to the \n966 \nAuthorized licensed use limited to: Lancaster University Library. Downloaded on December 11, 2008 at 11:49 from IEEE Xplore.  Restrictions apply.\ncreation of a suitable safe system requirements to be a substantial document and will contain both \nspecification. verbal high level descriptions of activities, as well as \nThis is shown in modified form in figure 7. The starting much more detailed information such as data-flow \npoint is the creation of five documents that contain the diagrams. If the robot is to handle hazardous materials, \nnecessary data to carry out a safety analysis. they must be clearly defined. \ne.g. The excavator must deposit excavated material at \n5.1. Robot physical characteristics the side of the trench by slewing the arm and cab. \nThe excavator may slew through a full 360' at a - - - rate of up to 1.5 radians per second. \n4.3 \nEnvironment \nDetails \n4.4 \n5.3. Environment details Safety \ncriteria Regulations A clear description of the working environment \ncohints and conditions must be provided. This will \ncontain details of such things as temperature \nranges and noise levels. It will also contain \ninformation about the proximity of the robot to \nhumans and other objects, particularly objects \nwhich can provoke significant secondary hazards \nsuch as power cables or pressure vessels. \ne.g. The machine operates on a site which has a \nsite boundary fence to prevent access by members \nof the public, but no physical barrier exists \nbetween itself and human workers. \n5.4. Safety criteria \n43 \nMachine 4.5 \nand \n4.1 \nMachine Mission \np e m  Specification 1 \nFigure 7 Breakdown for requirements specification \nThis contains such details as the dimensions, power and \nspeed of the proposed robot. Much of this information \nwill be presented in diagrammatic or tabular form. \ne.g. The excavator slewing mechanism can apply a \ntorque of up to 30 W m  \n5.2. Robot mission specification \nThis describes the range of tasks that the robot must \nactually perform. It is essentially the robot requirements \nspecification minus the safety considerations. It is likely \nThis contains the information which will form \nthe basis for decision making concerning safety, \nreliability and availability. \nIt includes the required safety performance for \nthe robot in terms of accident probabilities as well \nas listing requirements for self-test facilities and \nredundancy. \nThis data can be both difficult to acquire and have \nan important influence on the economic viability \nof the robot. \ne.g. The robot must operate in such a manner that \nit will not cause a higher incidence of accidents \nthan a similar manually operated machine. \nThe machine must demonstrate an availability of \nat least 75% in a 24 hour working day. \n5.5. Regulations and constraints \nExisting legislation concerning mobile robots \nis rare, despite the large number of organisations \ndeveloping legislation. There has been a distinct shift \naway from prescriptive technical structures, and a move \ntowards a more open format for implementation of \nsafety issues throughout the design process. In particular \nthis has been reinforced by the onus placed on \ndesigners, manufacturers and suppliers regarding their \nresponsibilities in connection with product liability. \nProcedures which relate to safety issues require clear \nidentification of the possible hazards which exist within \nequipment and the associated risks which are present in \n967 \nAuthorized licensed use limited to: Lancaster University Library. Downloaded on December 11, 2008 at 11:49 from IEEE Xplore.  Restrictions apply.\nits use. The situation is further complicated by \nconflicting regulations from various European and \nInternational organisations, despite much work that has \nbeen carried out to harmonise areas of conflict. \ne.g. Machinery Directive 91\/368\/EEC[4]:- The \nobligations laid down by the essential health and safety \nrequirements apply only when the corresponding hazard \nexists for the machinely in question when it is used \nunder the conditionsforeseen by the manufacturer. \nMistakes and faults from very complex wiring \nlayouts are reduced but bus faults themselves \nbecome safety critical. Provided such faults can be \ndetected the system can be shut down. \n0 The defmition of safety requirements for new \nautomated products is difficult as they are often \nbeing developed in advance of legislation. The \nemerging solution is to prepare a well-argued safety \ncase to demonstrate that the new system is at least as \nsafe as a comparable conventional manual system. \n6.0 The VORD requirements tool \nAcknowledgement \nCurrent analysis methods such as the Ward-Mellor \napproach [Kotonya 1992, 19951 for real-time systems \nare really software design rather than systems \nrequirements engineering methods. System requirements \nengineering, particularly where safety considerations are \nconcerned, needs input from multiple perspectives and \ndifferent engineering disciplines. To support this, we \nhave developed a notion of viewpoints, which represent \nsystem stakeholders or sub-systems, and which are used \nto capture their requirements. To support this we have \ndeveloped a tool called VORD (Viewpoint-Oriented \nRequirements Definition) has been developed which \ncovers the requirements engineering process from initial \nrequirements discovery through to detailed system \nmodelling. The tool has been extended to incorporate an \nexplicit safety analysis activity. \nThe safety analysis process includes the \nidentification of safety considerations, hazard \nidentification, hazard analysis, risk analysis and the \nderivation, recording and checking of safety \nrequirements. The hazard and risk analysis stages use \nany appropriate hazard and risk analysis techniques and \nare not tied to any particular method, however in this \ncase fault-trees are used. VORD automatically computes \nstatistical probabilities of hazards causing incidents. \nConclusions \nThe safety of powerful mobile robots in unstructured \nenvironments is a formidable problem, and some of the \nconclusions that have been reached so far are: \n0 Where possible safety related software should be \nisolated from functional software and given special \nconsideration. An independent safety manager is the \nultimate result of this philosophy. \n0 For reasons of both safety and reliability, the \ndependence on large numbers of sensors should be \nminimised. The move towards intelligent sensors \nwhich self-check and output high grade information \nshould be encouraged. \n0 The issue of whether or not to adopt a \ncommunications bus such as CAN is a difficult one. \nThis work is part of the Safe-SAM project which is \njointly sponsored by the UK Department of Trade and \nIndustry (DTI) and Engineering and Physical Sciences \nResearch Council (EPSRC) Safety Critical Systems \nProgramme. \nReferences \n[Advanced 19921 Advanced Robotics Research Limited \n(1992), 'Safety and Standards for Advanced Robots - A \nFirst Exposition', Report ARRL.92.009, 1992. \n[Bracewell 19901 R H Bracewell, D A Bradley, R V \nChaplin and D W Seward, \"Control Systems Design for \nRobotic Backhoe.\", 7th Int. Symp. on Robotics in \nConstruction pp 222 - 229, Bristol, (June 1990). \n[IEC 19921 IECiTC 65A(Secretariat) 123, May 1992, \nDraft. Functional safety of electrical\/ electronic\/ \nprogrammable electronic systems: Generic Aspects. Part \n1 : General Requirements. \n[Green 19901 P Green, D W Seward and D A Bradley \n\"Knowledge Acquisition for a Robot Excavator.\", 7th \nInt. Symp. on Robotics in Construction pp 351 - 357, \nBristol, (June 1990). \n[Kotonya 19921 G. Kotonya. and I.Sommerville, \n\"Viewpoints for requirements defmition\", IEEiBCS \nSoftware Eng. J. 1992.7(6) pp 375-87 \n[Kotonya 19951 G. Kotonya. and I. Sommerville, \n\"Requirements Engineering with Viewpoints\" IEE\/BCS \nSoftware Eng. J., 1995. lO(6). To appear November \n1995. \n[Redmill 19891 Redmill, F.J. (Ed), 1989, Dependability \nof Critical Computer Systems 2, Elsevier Applied \nScience. \n[Seward 19921 D W Seward, \"LUCIE - The autonomous \nexcavator\". Industrial Robot International Quarterly Vol \n19 No 1 pp 14 - 18, MCB University Press (March \n1992). \n[Seward 19921 D W Seward, D A Bradley, J E Mann, M \nR Goodwin, \"Controlling an Intelligent Excavator for \nAutonomous Digging in Difficult Ground\". 9th Int. \n968 \nAuthorized licensed use limited to: Lancaster University Library. Downloaded on December 11, 2008 at 11:49 from IEEE Xplore.  Restrictions apply.\n"}