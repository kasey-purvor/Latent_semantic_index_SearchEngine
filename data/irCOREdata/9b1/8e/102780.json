{"doi":"10.1109\/ICC.2007.734","coreId":"102780","oai":"oai:epubs.surrey.ac.uk:2318","identifiers":["oai:epubs.surrey.ac.uk:2318","10.1109\/ICC.2007.734"],"title":"Combined delay and rate differentiation packet scheduling for multimedia content delivery in satellite broadcast\/multicast systems","authors":["Du, H","Fan, L","Evans, BG"],"enrichments":{"references":[],"documentType":{"type":1}},"contributors":[],"datePublished":"2007-01-01","abstract":null,"downloadUrl":"","fullTextIdentifier":null,"pdfHashValue":null,"publisher":null,"rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:epubs.surrey.ac.uk:2318<\/identifier><datestamp>\n      2017-10-31T14:05:03Z<\/datestamp><setSpec>\n      74797065733D61727469636C65<\/setSpec><setSpec>\n      6469766973696F6E733D656E67616E64706879736963616C736369656E636573:656C656374726F6E6963656E67696E656572696E67:63637372<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/epubs.surrey.ac.uk\/2318\/<\/dc:relation><dc:title>\n        Combined delay and rate differentiation packet scheduling for multimedia content delivery in satellite broadcast\/multicast systems<\/dc:title><dc:creator>\n        Du, H<\/dc:creator><dc:creator>\n        Fan, L<\/dc:creator><dc:creator>\n        Evans, BG<\/dc:creator><dc:date>\n        2007-01-01<\/dc:date><dc:type>\n        Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:format>\n        text<\/dc:format><dc:language>\n        en<\/dc:language><dc:identifier>\n        http:\/\/epubs.surrey.ac.uk\/2318\/1\/SRF002286.pdf<\/dc:identifier><dc:identifier>\n          Du, H, Fan, L and Evans, BG  (2007) Combined delay and rate differentiation packet scheduling for multimedia content delivery in satellite broadcast\/multicast systems   2007 IEEE INTERNATIONAL CONFERENCE ON COMMUNICATIONS, VOLS 1-14.  pp. 4444-4449.      <\/dc:identifier><dc:relation>\n        http:\/\/ieeexplore.ieee.org\/xpls\/abs_all.jsp?arnumber=4289405&tag=1<\/dc:relation><dc:relation>\n        10.1109\/ICC.2007.734<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/epubs.surrey.ac.uk\/2318\/","http:\/\/ieeexplore.ieee.org\/xpls\/abs_all.jsp?arnumber=4289405&tag=1","10.1109\/ICC.2007.734"],"year":2007,"topics":[],"subject":["Article","PeerReviewed"],"fullText":"  \nCombined Delay and Rate Differentiation Packet Scheduling for \nMultimedia Content Delivery in Satellite Broadcast\/Multicast Systems \nHongfei Du, Linghang Fan and Barry G. Evans \nCenter for Communication Systems Research, Univeristy of Surrey,Guildford, Surrey, GU2 7XH, United Kingdom \nEmail: H.Du@surrey.ac.uk \nAbstract\u2014The design of efficient packet scheduling algorithms \nis crucial to the radio resource management (RRM) in the satellite \ndigital multimedia broadcasting (SDMB) system, which has \nemerged as a promising solution to the multimedia content \ndelivery. In order to achieve more efficient quality of service \n(QoS) provisioning among different multimedia services, a novel \npacket scheduling algorithm, namely combined delay and rate \ndifferentiation (CDRD) packet scheduling, is proposed in this \npaper. This algorithm takes into account key QoS parameters \naiming at fairly prioritising and scheduling heterogeneous \nmultimedia contents in satellite environment. Its performance has \nbeen evaluated via simulations. The results show that, in \ncomparison with existing scheduling algorithms, CDRD achieves \nbetter performance on delay, jitter and channel utilisation. \nIndex Terms \u2014 Packet scheduling, radio resource management, \nSDMB, MBMS, quality of service.  \nI. INTRODUCTION \nHE PROVISIONING of point-to-multipoint services \nover the 3rd generation (3G) terrestrial mobile cellular \nnetworks is investigated within the third generation \npartnership project (3GPP) multimedia broadcast\/multicast \nservices (MBMS) framework [1]. MBMS data is mapped onto \nradio network bearers and is transmitted over air in parallel to \nunicast data. In Europe, much research effort [2] has been \ndevoted to satellite digital multimedia broadcasting (SDMB) \nsystem, where satellite is used in the delivery of \npoint-to-multipoint multimedia services to 3G handsets. \nThe SDMB system implements a satellite based \nbroadcast\/multicast layer over unicast terrestrial universal \nmobile telecommunication system (T-UMTS) infrastructure \naiming at the efficient delivery of the interactive MBMS \nservices to a wide range of audience. Due to the unidirectional \nnature of the system and the point-to-multipoint services it \nprovides, given the absence of the power control mechanism \nand lack of channel state information (CSI), the design of \npacket scheduling scheme, which is a key element of radio \nresource management (RRM) functionalities implemented at \nthe SDMB access layer, is challenging. In fact, an efficient \npacket scheduling algorithm in SDMB is not only required to \nsatisfy the quality of service (QoS) requirements of different \nservices, but also has to optimise the transmission power \nsetting of each physical channel on the basis of the required \nreception QoS level and under the constraint that the total \navailable transmission power within a satellite beam is fixed. \nA large amount of research [4-6] has been taken on \ndeveloping efficient scheduling scheme for effective QoS \nprovisioning, in both wired and wireless systems. One \ninteresting research subject foreseen in this context is delay \ndifferentiated scheduling, where waiting time and queuing \ndelay are considered in packet scheduling, as waiting time \npriority (WTP) and proportional delay differentiation (PDD) \nschemes proposed in [4] for terrestrial networks. Besides, \nadaptive proportional fairness (APF) scheduling was proposed \nin high-speed downlink packet access (HSDPA) system [5], \nconsidering QoS demands for multimedia applications, where \nthe return channel is in presence and CSI for individual user is \navailable. Nevertheless, all those schemes can not be directly \nadopted in SDMB system in that there is no real-time \ninteraction between the user and the satellite radio access \nnetwork (SRAN) in the SDMB baseline architecture, the \nscheduler has to allocate resources without knowledge of the \nchannel conditions, i.e. channel state dependent scheduling is \nnot possible. Previous studies [6] have systematically \naddressed the RRM problems in the SDMB system via \nclassical packet scheduling schemes, namely multi-level \npriority queuing (MLPQ) and weighted fair queuing (WFQ). \nHowever, both of them feature major weaknesses in \nQoS-differentiated multimedia services provisioning with \nrespect to both efficiency and fairness. \nMLPQ employs a strict QoS-based prioritisation scheme, in \nwhich a lower-priority service may suffer from considerably \nlonger queuing delays. Furthermore, since round-robin is \nemployed amongst queues with the same priority, no \ndifferentiation is made for services with the same traffic \npriority. However, an efficient scheduling algorithm must also \nconsider other essential QoS metrics (e.g. queuing delay). \nIn the case of WFQ, the serving orders of the queues depend \non the time-stamp of the head packet of each queue, queues \nwith the lowest time-stamp will be served first. The weights are \nset according to the data rate of each queue rather than its \npriority. The non-priority nature of this scheduling policy leads \nto unacceptable long queuing delay in higher priority queues. \nTo overcome drawbacks inhered in MLPQ and WFQ, in this \npaper, we proposed a novel packet scheduling scheme, namely \ncombined delay and rate differentiation (CDRD) packet \nscheduling, which is distinct from most existing scheduling \nalgorithms in that: 1) it guarantees the prescribed QoS \nrequirements and 2) accounts for queuing behaviours at link \nlayer, while at the same time, 3) preserves the physical layer \npower\/resource constraints. To the best of the authors\u2019 \nknowledge, no results are available to prove this concept under \nthe current RRM framework in SDMB, and this work aims to \nfill this gap. The proposed methodology is envisaged in the  \nT \n1-4244-0353-7\/07\/$25.00 \u00a92007 IEEE \nThis full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the ICC 2007 proceedings. \n4444\nAuthorized licensed use limited to: University of Surrey. Downloaded on May 12,2010 at 16:10:29 UTC from IEEE Xplore.  Restrictions apply. \n  \n \nFigure 1. Proposed packet scheduling framework \nSDMB system, but it can be applied adaptively to any \nWCDMA-based broadcast\/multicast networks. \nThis paper is organised as follows. The proposed CDRD \nalgorithm is presented in Section II. In Section III, the \nsimulation methodology is described. We then proceed in \nsection IV with the performance evaluation of CDRD \nalgorithm, in comparison with existing packet scheduling \nalgorithm. Finally, we draw our conclusion in Section V. \nII. PROPOSED SCHEDULING ALGORITHM \nThe framework of the proposed CDRD scheduling scheme \nfor delivering heterogeneous multimedia services in SDMB is \nillustrated as Fig. 1. The accepted ongoing traffic can comprise \ndifferent sessions with different QoS requirements. Each \nsession is assumed to retain an individual queue in the Forward \nAccess CHannel (FACH) transport channel buffers. The types \nof user service supported within the SDMB system are \nstreaming and download, which correspond to UMTS QoS \nclass streaming and background respectively [7]. Herein the \ntraffic class considered can be divided into two main categories \ndepending on delay constraint. The first category is \ndelay-sensitive streaming class. The second category is the \ndelay-insensitive download class, which can be further \nsub-categorised into two sub-classes according to its sensitivity \nto delay, namely \u201chot download\u201d and \u201ccold download\u201d [3]. \nPackets in FACH buffers are firstly prioritised by \u201cService \nPrioritization\u201d module with their respective QoS metrics as \ncriteria. Consequently, \u201cDynamic Adaptive Packet Scheduler\u201d \nmodule will deal with all the queues in FACH buffers \naccording to their instant priorities instead of their inherent \nQoS class. Nonetheless, since download service has no explicit \ndelay constraint, the scheduler will restrict those download \nservices aiming at preserving certain QoS level for streaming \nservices if the available resource is rather scarce. On the \ncontrary, as long as there is spare resource remaining in the \nstreaming queues, the scheduler will enable download services \nto fill the gap left by the streaming services adaptively. \nThe selected queues will be passed to \u201cResource Allocation\u201d \nmodule and be allocated with the required resources, which \nconsist of bit rate and transmission power assignments. The \nscheduled packets will be delivered to Secondary Common \nControl Physical CHannel (S-CCPCH) in the form of transport \nblock (TB) [3]. For each active physical channel, the exact \nformat of Transport Format Combination(TFC), which consists \nof transport block set (TBS) will be selected (i.e. the amount of \ndata from each transport channel mapped to the physical \nchannel) from the Transport Format Combination Set (TFCS). \nIt is noted that a separate TFCS is provided for each S-CCPCH. \nAs shown in Fig. 2, packet scheduling strategy can be \ngenerally conceptualised into the following two steps: \nA. Service prioritisation \nUpon receiving the incoming service requests, the scheduler \nsorts the queues according to some priority criterion. In \nselecting the respective criteria, the service attributes are \nconsidered in a joint judgment function (JJF) to provide \ndynamic intelligent scheduling task based on several essential \nQoS factors that have crucial impact on system performance. \nCDRD scheme is developed based on proportional delay \ndifferentiation (PDD) scheme [4], where only delay is \nconsidered for service differentiation. By taking into account \nseveral key performance parameters (i.e. required data rate, \nqueuing delay threshold), CDRD is able to balance all service \nflows with diverse QoS requirements, and thus, achieves best \npossible QoS satisfaction and efficient resource utilization. \nFor each FACH queue i at current time slot (i.e. transmission \ntime interval (TTI)) n, the JJF is defined as: \n( ) ( ) ( ) ( )i i i i iP n n n n\u03b1 \u03b4 \u03bb \u03b3= \u22c5 \u22c5 \u22c5             (1) \nwhere )(nPi  is the priority index for queue i at current time \nslot n. n is the sequence number of the TTI at current time. \n \n \nFigure 2. Packet scheduling procedure \nThis full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the ICC 2007 proceedings. \n4445\nAuthorized licensed use limited to: University of Surrey. Downloaded on May 12,2010 at 16:10:29 UTC from IEEE Xplore.  Restrictions apply. \n  \ni\u03b1 is QoS class factor, which is essentially a \ntime-independent parameter designated for queue i. Since \nCDRD assumes that there are QoS ratios between different \nQoS priority classes, the value of i\u03b1  represents the relative \ntraffic priority of the service carried by queue i, i.e. streaming \nservice has higher priority than hot download service, which \nhas higher priority than cold download service. \n)(ni\u03b4 , defined in (2), specifies the delay factor at current \ntime slot n for queue i. This measure describes the delay states \nof all packets passing through the respective queue, including \nboth the packets which are currently in queue i and the packets \nwhich have already been served by queue i till current TTI n.  \n, ,\n1 1\n( ) ( )\n( )\nq dN N\nq d\ni j i k\nj k\ni\nq d\nW n W n\nn\nN N\n\u03b4 = =\n+\n=\n+\n\u2211 \u2211\n         (2) \nwhere )(, nW\nq\nji  is the waiting delay for the j th packet currently \nin queue i; qN  is the number of packets that are currently in \nqueue i; )(, nW dki  is queuing delay for the k th packet which has \nbeen served by queue i before TTI n; Nd is the number of \npackets that have been served by the queue before TTI n. \n)(ni\u03bb  represents the data rate factor for queue i at current \ntime slot n. It is based on the ratio of the service required data \nrate against the average transmitted data rate )(ni\u03bb  for queue i \nat current time slot n, which can be expressed as: \n,\n1\n( 1)   ( )\nN d\ni k\nk\ntti\nS\ni n Tn\u03bb =\u2212 \u00d7\n\u2211\n=                (3) \nwhere ,i kS  is the packet size for k\n th packet in queue i; dN  is \nthe number of packets that have left the queue before this TTI; \nTtti is the value of TTI (e.g. it is 80ms in our simulation). \nTherefore, the data rate factor )(ni\u03bb  is defined as follow: \n( )\n ( ) \nreq\ni\ni\ni\nn\nn\n\u03bb\u03bb\n\u03bb\n=                \n   \n(4) \nwhere reqi\u03bb  is the required\/guaranteed data rate specified by \nthe service QoS level. If the average offered data rate is smaller \nthan the required data rate, )(ni\u03bb  is larger than 1, thus the \npriority index for this queue is increased for this under-utilized \nqueue; otherwise, the priority index will be decreased for this \nover-utilized queue. This factor fine-tunes the priority and lead \nthe offered data rate be approaching to the guaranteed data rate. \n)(ni\u03b3  is the delay constraint factor for queue i at TTI n, \nreflecting the current queuing delay status, which is defined as: \n \n\uf8f4\uf8f4\n\uf8f4\uf8f4\n\uf8f3\n\uf8f4\uf8f4\n\uf8f4\uf8f4\n\uf8f2\n\uf8f1\n<\u2200\n\u2265\u2200\n= \u2211\n\u2211\n=\n=\nthreshold\ni\nq\nN\nj\nq\nji\nthreshold\ni\nq\nN\nj\nq\nji\ni\nW\nN\nnW\nn\nW\nN\nnW\nn\nn q\nq\n    \n)(\n   :   ,1\n    \n)(\n   :,2\n)(\n1\n,\n1\n,\n\u03b3\n   \n(5)\n \nwhere )(, nW\nq\nji  is the waiting delay for the j th packet currently \nin queue i; qN  is the number of packets that currently in \nqueue i; thresholdiW is the delay threshold for the service queue i.  \nIf the average queuing delay for queue i is larger than its \ndelay threshold, the delay constraint factor )(ni\u03b3  doubles the \npriority of this queue for better chance to be processed; \notherwise, it remains the same. The weight can be chosen as \nvarious ratios reflecting the effectiveness of the delay \nconstraint factor in the overall joint judgement function. It is \nnoted that delay threshold can be chosen as a tuneable \nparameter, which depends on the maximum tolerable delay of \nthe corresponding service. )(ni\u03b3  is only in effect when the \naverage queuing delay is beyond the designated delay threshold, \nwhich provides more efficient action to be taken for better QoS \nprovisioning amongst differentiated traffic flows. \nIn each TTI, the scheduler will sort the FACH queues in \ndescending order, according to their priority indices calculated \nfrom the JJF. FACH queues with higher priority indices will be \nserved ahead of their lower priority counterparts. \n \nB. Resource Allocation \nOnce all the services to be transmitted are prioritized, the \nnext step is the allocation of the resources to these services, \nwhich consists of bit rate and transmission power assignments \nwithin the specific resource allocation interval, which in our \ncase is every TTI.  \nAs shown in Fig. 2, for all S-CCPCHs, the packet scheduler \nserves the FACHs according to their instant priorities, which \nare dynamically calculated from the JJF in a particular TTI. \nThe FACH queues with higher priorities will be served ahead \nof the lower priority FACH queues in non-preemptive order.  \nFor each FACH, the packet scheduler scans the TFCS of its \ncorresponding physical channel to find all the different TBS \nsizes and then seeks to allocate the maximum TBS size to the \nselected FACH based on data queued at its buffer [1]. Then the \npacket scheduler checks the power requirement on the basis of \nthe BLER curve of the active service flow. If the power \nallocation satisfies the power and load constraints, the \nscheduler will allocate this FACH and derive a reduced TFCS; \notherwise, this service is not scheduled.  \nThese procedures are repeated recursively until all the \nFACHs mapped to each S-CCPCH are assigned. \nFrom the viewpoint of implementation, the proposed CDRD \nalgorithm poses extra computation complexity. With the input \nsize of n (i.e. total number of FACH queues), the computational \ncomplexity of the proposed algorithm is derived as O(n), \nfollowing typical linear statistics. \nIII. SIMULATION METHODOLOGY \nIn order to elaborate the performance enhancement of the \nproposed CDRD packet scheduling algorithm, a system-level \nThis full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the ICC 2007 proceedings. \n4446\nAuthorized licensed use limited to: University of Surrey. Downloaded on May 12,2010 at 16:10:29 UTC from IEEE Xplore.  Restrictions apply. \n  \nsimulator implementing the SDMB system has been developed \nwith the software package ns2 [8]. The scheduler is \nimplemented in the Satellite Hub (Node-B) employing the \nSDMB functions, supporting three types of QoS classes, \nnamely: 1) real-time video streaming, 2) hot download, and 3) \ncold download [3]. The streaming traffic model applies \npublicly available trace files [9] for video streaming traffics. \nTraffic characteristics associated with hot- and cold- download \n(i.e. push-and-store) services follow the Pareto distribution, \nwith different traffic priorities. In addition, different guaranteed \ndata rates are selected for individual MBMS session. \nOur link budget simulation results provide the Eb\/No v.s \nBLER look-up curves for each FACH. The radio propagation \nchannel model features either Ricean characteristics for \nsatellite-associated path, or Rayleigh multipath fading channel \nfor UE-associated path with the consideration of both Doppler \neffect and propagation impairments. The size of packets is \n1280 bytes, TTI equals to 0.08 seconds, Turbo coder and \nQPSK are applied. The simulation period is set to 1000s or \n12500 TTIs. In the SDMB system, the queuing delay threshold \nis assumed to be 20-100ms for video streaming, and \n200-2000ms for push-and-store service. Accordingly, various \nqueuing delay threshold values are applied and examined for \nthe specific scenario, showing the range of the performance \ngain by tuning the delay threshold parameter. \nSimulation has been conducted over a wide variety of traffic \nmixes. Due to the space limitation, an indicative and \npersuadable scenario is selected to discuss our simulation \noutcomes. We consider 6 individual MBMS session with \ndiverse QoS profiles in terms of service type, data rate, and \ndelay constraints for broadcast transmission, each of which is \ncarried by a single FACH queue, the considered radio bearer \nmapping scenario is given as Table I. Since the performance of \nWFQ-based scheduling algorithm is worse than that of \nMLPQ-based algorithm in terms of both delay and delay \nvariation [6], MLPQ, which is applied in the existing S-DMB \naccess scheme, is used as the reference in this paper. \nIV. PERFORMANCE EVALUATION \nA: Queuing delay and delay variation evaluation \nFirstly, we evaluate the performance of CDRQ scheduling by \ninvestigating the mean queuing delay experienced by packets \nin each FACH. As illustrated in Fig. 3, download multimedia \nservices (i.e. FACHs 1 and 6) experience much less mean \nqueuing delay in CDRD whilst the mean delay experienced by \nstreaming services features similar performance. Numerically, \nhot download and cold download classes have a reduction of \n32.6% and 23.7% on their mean queuing delay respectively, \nwhilst the maximum increase on the mean queuing delay of  \nTABLE I. CHANNEL MULTIPLEXING CONFIGURATION \nS-CCPCH 1 2 3 \nBit rate(kbps) 384 384 384 \nStreaming (kbps) 256x1;64x1 256x1;128x1 - \nHot Download (kbps) 64x1 - - \nCold Download (kbps) - - 384x1 \n0\n5\n10\n15\n20\n25\nM\nea\nn \nde\nla\ny \n(s\nec\non\nds\n)\nMLPQ 23.72 1.07 1.67 1.00 0.87 10.31 \nCDRD 15.68 1.11 1.59 1.10 1.02 8.99 \nFACH 1 FACH 2 FACH 3 FACH 4 FACH 5 FACH 6\n \nFigure 3. Mean queuing delay for MLPQ and CDRD \n0\n1\n2\n3\n4\n5\nM\nea\nn \njit\nte\nr (\nse\nco\nnd\ns)\nMLPQ 3.40 0.75 1.68 0.69 0.87 4.05 \nCDRD 1.76 0.64 1.02 0.53 0.53 2.35 \nFACH 1 FACH 2 FACH 3 FACH 4 FACH 5 FACH 6\n \nFigure 4. Mean queuing jitter for MLPQ and CDRD \nstreaming service is 7.6%. It is noted that the significant \nreduction on delay of the lower class service (i.e. download \nservice) does not result in dramatic performance degradation \non its higher class counterpart (i.e. FACHs 2 to 5 for streaming \nservice) beyond their guaranteed QoS rank. It is implying that \nCDRQ enables the download service to efficiently utilize the \nspare resources of the streaming service without posing \nsignificant detrimental affect on satisfying the QoS target of \nthe streaming services. \nFig. 4 shows the mean queuing jitter experienced by each \nFACH for MLPQ and CDRD. Obviously, the latter features \nmuch lower jitter for both streaming and download services. \nTypically, the average jitter reductions for download services \n(i.e. FACHs 1 and 6) and streaming services (i.e. FACHs 2 to 5) \nare 45.5% and 29.1% respectively. \nIt is worth noticing that the unidirectional streaming service \nin SDMB system is quite sensitive to delay variation (i.e. jitter), \nthereby the delay variation of the flows should be limited in \norder to preserve the time variation between packets of the \nstream [10]. The results in Fig. 4 shows that the proposed \nCDRD scheme provides a way to balance all FACH queues in \norder to get minimum delay variation for streaming services. \nB: Queuing delay statistics analysis \nHerein the probability density function (PDF) statistic of the \nqueuing delay is used to describe statistical distribution density \nof queuing delay for each FACH. Fig. 5 shows the PDF curves \nof queuing delay for each FACH by using MLPQ and CDRD. \nIt is noted that CDRD has better delay distribution characteristics \nThis full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the ICC 2007 proceedings. \n4447\nAuthorized licensed use limited to: University of Surrey. Downloaded on May 12,2010 at 16:10:29 UTC from IEEE Xplore.  Restrictions apply. \n  \n5 10 15 20 25\n0   \n1%\n2%\n3%\n4%\n5%\nPDF delay of FACHs for MPLQ-based packet scheduling\nPacket Delay (seconds)\n P\nD\nF \n(%\n)\nFACH 1\nFACH 2\nFACH 3\nFACH 4\nFACH 5\nFACH 6\n \n0 2 4 6 8 10 12 14 16\n0   \n5%\n10% \n15%\n20% \n25%\n30% \n35%\n40% \nPDF delay of FACHs for CDRD-based packet scheduling\nPacket Delay (seconds)\nPD\nF \n(%\n)\nFACH 1\nFACH 2\nFACH 3\nFACH 4\nFACH 5\nFACH 6\n   \n75%\n80%\n85%\n90%\n95%\n100%\nS-\nC\nC\nPC\nH\n u\nti\nli\nsa\nti\non\n (%\n)\nMLPQ 97.8% 96.2% 85.4%\nCDRD 98.4% 96.2% 86.4%\nS-CCP CH 1 S-CCPCH 2 S-CCPCH 3\n \n    Figure 5. PDF queuing delay for MLPQ and CDRD                Figure 6. Mean code channel utilisation for MLPQ and CDRD\nthan MLPQ. Especially, it achieves both lower average delay \nand delay variation for download service (i.e. FACHs 1 and 6). \nUnlike those of download service, the PDF curves of the \nqueuing delays of streaming FACHs (i.e. FACHs 2 to 5) are \nmixed at the bottom-left corner of Fig. 5. In order to analyse \nthe statistic distribution performance on the queuing delay of \nstreaming service and get better illustration, Fig. 7 plots the \ncumulative distribution function (CDF) distribution curves of \nqueuing delay for considered streaming FACHs, which is a \nstronger expression of this effect. The results show that CDRD \noutperforms MLPQ in that all the streaming FACHs achieve \nbetter probability distribution on queuing delay when \nCDRD-based scheduling is employed. \nIn fact, the explanation of PDF and CDF queuing delay \nperformance becomes straightforward if the conclusions of \nmean queuing delay\/jitter derived from Figs. 3 and 4 are \nrecalled. In conclusion, simulation results show that the delay \nand delay variation are greatly improved in the considered \nmultiplexing scenario by adopting CDRD-based scheduling, \ncompared with MLPQ-based counterpart. \nC: S-CCPCH and FACH channel utilisation evaluation \nChannel utilisation performance is presented in this section, \nconsidering utilisation ratios on both code channels(S-CCPCHs) \nand transport channels (FACHs). Fig. 6 displays average code \nchannel utilisation status when adopting MLPQ and CDRD \nscheduling algorithms for the given scenario.  \nViewable improvements can be noticed from the chart for \nthose code channels which are comprised with transport \nchannel carrying background class services (i.e. S-CCPCHs 1 \nand 3). Both schedulers managed to achieve throughput close \nto the maximum. For instance, the average code channel \nutilisation ratios are: 97.8%, 96.2% and 85.4% for respective \nS-CCPCHs under MLPQ-based scheduling; whilst they \nachieve 98.4%, 96.2% and 86.4% respectively when \nCDRD-based scheduling is adopted. Therefore, CDRD \nmanages to obtain slight channel utilisation improvement on \nthose code channels carrying background traffic (i.e. \nS-CCPCHs 1 and 3). From the results, it can be inferred that \nthe proposed algorithm not only improves the delay \nperformance among different QoS classes, but also has  \n0 2 4 6\n0% \n20%\n40%\n60%\n80%\n100%  \nCDF delay for FACH 2: 256 kbps streaming\nPacket Delay (seconds)\nC\nD\nF \n(%\n)\nMLPQ\nCDRD\n0 2 4 6\n0% \n20%\n40%\n60%\n80%\n100% \nCDF delay for FACH 3: 64 kbps streaming\nPacket Delay (seconds)\nCD\nF \n(%\n)\nMLPQ\nCDRD\n0 2 4 6\n0% \n20%\n40%\n60%\n80%\n100% \nCDF delay for FACH 4: 256 kbps streaming\nPacket Delay (seconds)\nCD\nF \n(%\n)\nMLPQ\nCDRD\n0 2 4 6\n0% \n20%\n40%\n60%\n80%\n100% \nCDF delay for FACH 5: 128 kbps streaming\nPacket Delay (seconds)\nCD\nF \n(%\n)\nMLPQ\nCDRD\n \nFigure 7. CDF queuing delay for MLPQ and CDRD scheduling \nessential impact on increasing the overall physical channel \nutilisation. \nThe explanation of the above statement can be seen from Fig. \n8, where the comparison of the mean channel utilisation ratio \nof FACHs is displayed. Contrary to the MLPQ scheduling, in \nthe CDRD scheduling scheme, it appears to achieve higher \nutilisation score, especially for background class traffic (i.e. \ndownload FACHs 1 and 6). These results also coincide with \nthose of Fig. 6, explaining that the main improvement on code \nchannel utilisation is virtually caused by the higher channel \nutilisation ratio achieved by CDRD-based scheduling on those \nFACHs carrying background traffic. \n D: Delay threshold evaluation \nAs explained earlier, the queuing delay threshold can be \ntuned as an adjustable parameter that indicates different how to \nchoose the queuing delay threshold for specific QoS class, we \nselect typical delay threshold values in our simulation in order \nto illustrate that the delay threshold can be regarded as a \ntuneable parameter for delay tolerance\/sensitivity adjustment. \nFig. 9 presents the performance of CDRD-based packet \nscheduling algorithm with variable delay threshold values \nThis full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the ICC 2007 proceedings. \n4448\nAuthorized licensed use limited to: University of Surrey. Downloaded on May 12,2010 at 16:10:29 UTC from IEEE Xplore.  Restrictions apply. \n  \ng\n7 5 %\n8 0 %\n8 5 %\n9 0 %\n9 5 %\n1 0 0 %\nFA\nC\nH\n u\ntil\nis\nat\nio\nn \n(%\n) \nM L P Q 9 6 .2 % 9 8 .0 % 9 8 .9 % 9 8 .0 % 9 2 .6 % 8 5 .4 %\nC D R D 9 8 .8 % 9 7 .9 % 9 9 .6 % 9 7 .9 % 9 2 .6 % 8 7 .3 %\nFA C H  1 FA C H  2 FA CH  3 FA C H  4 FA C H  5 FA C H  6\n \nFigure 8. Mean FACH channel utilisation for MLPQ and CDRD \nagainst specified scenarios. Tuning the delay threshold factor \nwill change the priority index of related FACH queues and \ntherefore change the serving order of all the FACH queues. As \na result, the delay threshold factor can be adjusted according to \nthe delay sensitivity\/tolerance of differentiated QoS classes \namong heterogeneous multiplexing traffic flows and can be \nused to optimise the overall system performance.  \nAs shown in Fig. 9, by tuning the delay threshold value for a \nspecified QoS service class, the CDRD-based packet \nscheduling algorithm can adjust the delay performance of \ncorresponding FACH queues; this also affects the performance \nof other QoS classes. For example, in comparison with \nScenario 1, cold download FACH 6 suffers from worse delay in \nScenario 4 when its delay threshold is increased from 0.8 \nsecond to 2.0 second, but this leads to the achievable \nperformance gain on the streaming and hot download FACHs. \nOn the contrary, compared with Scenario 1, more stringent \ndelay threshold makes the streaming FACHs 2 to 5 have better \ndelay performance in Scenario 2, whilst it causes longer delay \non the download FACHs 1 and 6.  \nE: Fairness analysis \nHerein the main parameter of interest is normalized \nthroughput, which is obtained by dividing the offered \nthroughput with the guaranteed throughput. The variance of \nnormalized throughput, which compares the fairness scores \nachieved by MLPQ and CDRD, is plotted in Fig. 10. It can be \nseen that CDRD achieves the considerably lower variance \nvalues with a faster convergence curve, which means that it can \nprovide UEs with better throughput equality in a relatively \nshorter time. As time elapses, comparing with MLPQ, CDRD \nis capable of maintaining a fairly low throughput variance, and \nthus, the long-term fairness amongst all queues are proven to \nbe better guaranteed. \nV. CONCLUSIONS \nIn this paper, a novel packet scheduling algorithm is \nproposed for the SDMB system. This algorithm takes into \naccount multiple important performance factors reflecting \nservice QoS demands and queuing behaviours in order to \noptimise the overall system performance. Simulation results \nshow that the proposed packet scheduling scheme achieves \nbetter performance on queuing delay, channel utilisation and \nfairness compared with the existing schemes. \n0\n2\n4\n6\n8\n10\n12\n14\n16\n18\nM\nea\nn \nde\nla\ny \n(s\nec\non\nds\n)  .\nFACH 1 FACH 2 FACH 3 FACH 4 FACH 5 FACH 6\nscenario 1: streaming:0.1s,hot download:0.2s,cold download:0.8s\nscenario 2: streaming:0.02s,hot download:0.2s,cold download:0.8s\nscenario 3: streaming:0.1s,hot download:0.4s,cold download:0.8s\nscenario 4: streaming:0.1s,hot download:0.2s,cold download:2.0s\n \nFigure 9. Mean queuing delay performance for different delay threthods \n0\n0.05\n0.1\n0.15\n0.2\n0.25\n0.3\n0.35\n0 1 2 3 4 5 6 7 8 9 10\nNumber of TTIs\nV\nar\nia\nnc\ne \nof\n n\nor\nm\nal\niz\ned\n th\nro\nug\nhp\nut\n  \nMLPQ\nCDRD\nX 103  \nFigure 10. Variance of normalized throughput for MLPQ and CDRD \n \nACKNOWLEDGMENT \nThis work is supported by the SatNEx project, funded by \nEuropean Commission (EC) under the Research Framework \nProgram 6. The financial contribution of the EC towards this \nproject is greatly appreciated. \nREFERENCES \n[1] 3GPP TS 22.146 V6.6.0, \u201cMultimedia Broadcast\/Multicast Service: Stage \n1\u201d, October 2004. \n[2] N.Chuberre et al. \u201cSatellite Digital Multimedia Broadcasting for 3G and \nbeyond 3G systems\u201d, 13th IST Mobile &Wireless Communication \nSummit 2004, Lyon, France, June, 2004. \n[3] 3GPP TS 25.301 V6.2.0, \u201cRadio Interface Protocol Architecture\u201d, Match \n2005. \n[4] C. Dovrolis et al. \u201cProportional Differentiated Services: Delay \nDifferentiation and Packet Scheduling\u201d, IEEE Transaction on \nNetworking, Vol.10, NO.1, February 2002, pp.12-26. \n[5] G. Aniba and S.Aissa, \u201cAdaptive Proportional Fairness for Packet \nScheduling in HSDPA\u201d, IEEE Globecom 2004, pp. 4033-4037. \n[6] M. Karaliopoulos et al. \u201cPacket Scheduling for the Delivery of Multicast \nand Broadcast Services over S-UMTS\u201d, Int. J. Satell. Commun. Network. \n2004; 22:503-532. \n[7] H. Holma, A. Toskala (Eds). WCDMA for UMTS: radio access for third \ngeneration mobile communications. Second edition, John Willey & Sons \nLtd, 2002. \n[8] http:\/\/www.isi.edu\/nsnam \n[9] http:\/\/www.tkn.tu-berlin.de\/research\/trace\/ltvt.html \n[10] 3GPP TS 23.107 V6.3.0, \u201cQuality of Service (QoS) Concept and \nArchitecture\u201d, June 2005. \nThis full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the ICC 2007 proceedings. \n4449\nAuthorized licensed use limited to: University of Surrey. Downloaded on May 12,2010 at 16:10:29 UTC from IEEE Xplore.  Restrictions apply. \n"}