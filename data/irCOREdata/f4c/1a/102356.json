{"doi":"10.1109\/TSP.2007.897916","coreId":"102356","oai":"oai:epubs.surrey.ac.uk:1815","identifiers":["oai:epubs.surrey.ac.uk:1815","10.1109\/TSP.2007.897916"],"title":"Analysis of root displacement interpolation method for tunable allpass fractional-delay filters","authors":["Hacihabiboglu, H","Guenel, B","Kondoz, AM"],"enrichments":{"references":[],"documentType":{"type":1}},"contributors":[],"datePublished":"2007-10-01","abstract":null,"downloadUrl":"","fullTextIdentifier":null,"pdfHashValue":null,"publisher":"IEEE-INST ELECTRICAL ELECTRONICS ENGINEERS INC","rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:epubs.surrey.ac.uk:1815<\/identifier><datestamp>\n      2017-10-31T14:03:15Z<\/datestamp><setSpec>\n      74797065733D61727469636C65<\/setSpec><setSpec>\n      6469766973696F6E733D656E67616E64706879736963616C736369656E636573:656C656374726F6E6963656E67696E656572696E67:63637372<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/epubs.surrey.ac.uk\/1815\/<\/dc:relation><dc:title>\n        Analysis of root displacement interpolation method for tunable allpass fractional-delay filters<\/dc:title><dc:creator>\n        Hacihabiboglu, H<\/dc:creator><dc:creator>\n        Guenel, B<\/dc:creator><dc:creator>\n        Kondoz, AM<\/dc:creator><dc:publisher>\n        IEEE-INST ELECTRICAL ELECTRONICS ENGINEERS INC<\/dc:publisher><dc:date>\n        2007-10-01<\/dc:date><dc:type>\n        Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:format>\n        text<\/dc:format><dc:language>\n        en<\/dc:language><dc:identifier>\n        http:\/\/epubs.surrey.ac.uk\/1815\/1\/fulltext.pdf<\/dc:identifier><dc:identifier>\n          Hacihabiboglu, H, Guenel, B and Kondoz, AM  (2007) Analysis of root displacement interpolation method for tunable allpass fractional-delay filters   IEEE TRANSACTIONS ON SIGNAL PROCESSING, 55 (10).  pp. 4896-4906.      <\/dc:identifier><dc:relation>\n        10.1109\/TSP.2007.897916<\/dc:relation><dc:language>\n        English<\/dc:language><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/epubs.surrey.ac.uk\/1815\/","10.1109\/TSP.2007.897916"],"year":2007,"topics":[],"subject":["Article","PeerReviewed"],"fullText":"4896 IEEE TRANSACTIONS ON SIGNAL PROCESSING, VOL. 55, NO. 10, OCTOBER 2007\nAnalysis of Root Displacement Interpolation Method\nfor Tunable Allpass Fractional-Delay Filters\nH\u00fcseyin Hac\u0131habibog\u02d8lu, Member, IEEE, Banu G\u00fcnel, Member, IEEE, and Ahmet M. Kondoz, Member, IEEE\nAbstract\u2014One of the simplest ways of designing allpass frac-\ntional-delay filters with maximally flat group delays is by using\nthe Thiran approximation by which the filter coefficients are cal-\nculated using a closed-form equation. However, due to the number\nof multiplications and divisions involved, the calculation of these\ncoefficients is a computationally costly task and is not suitable for\nreal-time applications. The analysis of a root-displacement-based\ninterpolation method used in allpass tunable fractional delays is\npresented in this paper. The method allows continuous adjust-\nments of the approximated fractional delay without the explicit\ncalculation of a new set of filter coefficients. The transient error\nobserved at the output due to the change of filter coefficients is\nanalyzed. The direct and cascade implementations are compared\nwith respect to their transient errors. An example application\nof the proposed method from the field of model-based sound\nsynthesis is given.\nIndex Terms\u2014Allpass systems, audio signal processing, filter in-\nterpolation, fractional delay filters, transients, tunable filters.\nI. INTRODUCTION\nFRACTIONAL-DELAY filter is the generic name given tothe discrete-time filters that simulate noninteger delays [1].\nThey are used in a diverse set of signal processing applica-\ntions such as spatial audio synthesis [2], physical modeling [3],\nspeech synthesis [4], synchronization in wireless telecommuni-\ncations [5], sample-rate conversion [6], and microphone array\nprocessing [7].\nThere are different varieties of the fractional-delay filters.\nMost frequently used fractional-delay filters are finite-im-\npulse-response (FIR) filters based on Lagrange interpolation\n[8], [9]. The Farrow structure [5] allows continuously varying\nthe fractional delay using a single parameter. However, the\nmajor issue with FIR fractional-delay filters is that, both the\nmagnitude and the phase responses will deviate from the\ndesired response, and these errors can only be reduced at\nthe cost of increasing the filter order. Although using an FIR\nfractional-delay filter is sufficient for many applications, a\ngroup of other applications, among which audio processing is\na notable example, require that the original magnitude spectra\nand the bandwidth of the input signal remains unaffected. This\nManuscript received May 17, 2006; revised February 21, 2007. The associate\neditor coordinating the review of this paper and approving it for publication was\nDr. Zoran Cvetkovic\u00b4. This work was funded by the Engineering and Physical\nSciences Research Council (EPSRC) Research Grant GR\/S72320\/01 Portfolio\nPartnership Award in Integrated Electronics.\nThe authors are with the I-Lab, Centre for Communication Systems\nResearch (CCSR), University of Surrey, Guildford, Surrey GU2 7XH,\nU.K. (e-mail: h.hacihabiboglu@surrey.ac.uk; b.gunel@surrey.ac.uk;\na.kondoz@surrey.ac.uk).\nDigital Object Identifier 10.1109\/TSP.2007.897916\nis possible by using allpass fractional-delay filters. There exist\ndesign methods based on optimization for obtaining allpass\nfractional delay filters [10] which are computationally costly\nfor real-time operation. One of the simplest design methods\nto obtain maximally flat delay allpass fractional-delay filters\nis by using the Thiran approximation [11], [12]. Consider\nan -order allpass IIR filter having the following transfer\nfunction:\n(1)\nwhere , , and are the numerator and denomi-\nnator polynomials, respectively. The phase response of this in-\nfinite-impulse-response (IIR) filter can be expressed as\n(2)\nwhere is the coefficient index. For an -order allpass filter\nto have a maximally flat group delay at dc equal to an arbitrary\ndelay , the approximation error\n(3)\nmust vanish at together with of its derivatives. In\nother words, the slope of the phase response must be equal to\nthe desired arbitrary noninteger delay at dc.\nUsing the Thiran approximation, the coefficients of an\n-order allpass fractional-delay filter that approximates the\ntotal fractional delay can be calculated using the\nfollowing closed-form formula [1]:\n(4)\nThe filter with the given coefficients is guaranteed to be stable\nand to have maximally flat group delay corresponding to the\ndesired fractional delay, , at low frequencies [11]. Using (4),\nthe calculation of the coefficient requires mul-\ntiplications and a single division excluding the computation of\nthe binomial term. For an -order Thiran filter, this amounts\nto multiplications and divisions. Consider the\nsituation where we want to have a continuously tunable delay\nelement using a Thiran fractional-delay filter. There are two\noptions. Either, the coefficients of the intermediate filters are\ncalculated during run time as required, or they are obtained by\ninterpolation. The former option is not desirable as the computa-\ntional complexity of calculating a new set of coefficients is high\nfor high-order Thiran filters. The latter option, on the other hand,\nrequires a computationally efficient algorithm for the derivation\n1053-587X\/$25.00 \u00a9 2007 IEEE\nAuthorized licensed use limited to: University of Surrey. Downloaded on February 2, 2010 at 06:11 from IEEE Xplore.  Restrictions apply. \nHACIHABIBO \u02d8GLU et al.: ANALYSIS OF ROOT DISPLACEMENT INTERPOLATION METHOD 4897\nof a new allpass filter that approximates an intermediate frac-\ntional delay. Previously, low-order polynomial approximations\nto obtain the filter coefficient for fractional-delay filters, and\ncorresponding variable filter structures have been proposed to\nsolve the tunability problem [13], [14]. Although quite accurate,\nthanks to the direct algorithmic implementation of the approxi-\nmation, such structures are computationally more complex than\na simple IIR filter of the same order.\nA root displacement method for obtaining intermediate\nfractional-delay filters was previously proposed by the authors\n[15]. The method paralleled similar approaches involved in\nLPC-based speech synthesis, namely for the interpolation of\nfilter magnitude responses by pole shifting [16], or for speaker\nidentity modification [17]. A similar method was also applied\nby the authors to the magnitude response interpolation of\nminimum-phase FIR filters used in binaural synthesis for 3-D\naudio reproduction [18].\nThis paper presents the analysis of the root displacement\nmethod with respect to its application in tunable fractional-delay\nfilters and to the transient errors involved. The root displace-\nment approach is summarized in Section II. Section III explains\nthe effect of interpolation regarding the transient error due to\ncoefficient update. Section IV presents a practical example of\nthe utility of the proposed method in the physical modeling\ndomain. Section V concludes the paper.\nII. INTERPOLATION OF THIRAN FILTERS\nUSING ROOT DISPLACEMENT\nAssume that we have two -order Thiran fractional-delay\nfilters and , which approximate two different frac-\ntional delays and . The aim of interpolation is to ob-\ntain a new allpass fractional-delay filter, , whose phase\ndelay approximates an intermediate delay such that\n. The following section provides an overview of the\ninterpolation method previously proposed by the authors [15].\nA. Root Displacement Method\nAn allpass IIR filter has reciprocal poles and zeros. The nu-\nmerator polynomial of an allpass filter can be obtained simply\nby mirroring the order of the polynomial coefficients. Therefore,\nwe can limit the interpolation process to the denominator poly-\nnomial, as the stability conditions for an IIR filter are imposed\non the radii of the filter poles and as the numerator roots can\nbe obtained trivially. The roots of a Thiran filter do not reveal\nthemselves to a simple closed-form representation for\n(Abel\u2013Ruffini theorem). However, the roots can be obtained nu-\nmerically by using the iterative polynomial root-finding tech-\nniques, by calculating the eigenvalues of the companion ma-\ntrix by QR decomposition or by utilizing the Newton\u2013Raphson\nmethod [19]. Fig. 1(a) shows the loci of the poles of tenth-order\nThiran fractional-delay filters modeling a fractional delay of\n, where . The poles of a Thiran filter approximating\na fractional delay of 10.7 samples are denoted as filled circles.\nFig. 1(b) shows the loci of the poles of tenth-order Thiran frac-\ntional-delay filters modeling a fractional delay of where\n. Considering that the filter has real poles and\nFig. 1. Loci of the poles of tenth-order Thiran filters approximating a fractional\ndelay of 10+ d samples for (a) d \u0015 0, and (b)\u00001 < d < 0. The directions of\nthe arrows show increasing delay.\ncomplex poles, it is possible to express the denominator\npolynomial, in (1) in the following way:\n(5)\nwhere is the complex conjugate pole pair and\nare the real poles of the filter .\nThe positive complex conjugate poles of filters and\nare first sorted with respect to their angles, and then\nAuthorized licensed use limited to: University of Surrey. Downloaded on February 2, 2010 at 06:11 from IEEE Xplore.  Restrictions apply. \n4898 IEEE TRANSACTIONS ON SIGNAL PROCESSING, VOL. 55, NO. 10, OCTOBER 2007\nFig. 2. Obtaining the filter coefficients of the interpolated second-order IIR sec-\ntion from original filter poles. The first coefficient a = 1. The total number\nof multiplications is 5. (From [15].)\npaired according to their angular proximity. The interpolated\ncomplex poles can be calculated from the paired poles using\n(6)\nwhere is a constant between 0 and 1. It was shown that the\nresulting interpolated Thiran filter is always stable as long as\nand the original filters are stable [15].\nConsider two poles inside the unit circle,\nand , with their complex conjugate pairs. The\ninterpolated complex conjugate pole pair can be calculated as\n(7)\nDue to the fact that the pole loci are not linear in pole angle,\nthe relation between and the phase delay is not exactly but\nonly approximately linear. However, for a small delay interval\nbetween the original filters, it can be considered as linear. The\ninterpolated poles constitute the roots of the denominator poly-\nnomial, , of a second-order section of the allpass frac-\ntional-delay filter, , such that\n(8)\nThus, the denominator coefficients of a second-order section\ncan be obtained easily by four multiplications and a shift oper-\nation from the real and complex parts of the original pole (see\nFig. 2). Each real pole is represented by a first-order polynomial\nand thus a first-order section. Therefore, only two multiplica-\ntions and a shift operation are required for interpolating a real\npole. There are two options after this stage to obtain the overall\nfilter.\n1) If a direct-form implementation of the filter is sought\nfor, the denominator polynomials are multiplied (i.e.,\nconvolved) to obtain the direct-form coefficients. The\nnumerator polynomial can then be obtained by mirroring\nFig. 3. Phase delays of Thiran (solid line) and interpolated (dashed line) frac-\ntional-delay filters. Interpolation is carried out using the Thiran filters approxi-\nmating 10.1 and 10.3 samples delay. (From [15].)\nthe denominator coefficients. This option is undesirable as\nit will require additional computational effort.\n2) The interpolated fractional-delay filter can be implemented\nas a cascade of tunable second-order allpass IIR sections\ncorresponding to complex poles and first-order sections\ncorresponding to real poles. The coefficients of the cascade\nsections can be obtained directly and easily as explained\nabove.\nFig. 3 shows the phase delays of interpolated filters obtained\nfrom two tenth-order Thiran fractional-delay filters modeling\n10.1 and 10.3 samples delay. The figure depicts phase delays\nof the interpolated filters, as well as the phase delays of the cal-\nculated Thiran fractional-delay filters approximating the same\ndelays. It may be observed that in comparison with the original\nfilters representing the same fractional delay, the interpolated\nfilters have a shorter bandwidth of flat phase delay. Nonethe-\nless, the phase delays are in good agreement.\nThe absolute deviation of the complex-valued fre-\nquency response from the ideal frequency response can\nbe quantified by the frequency response error FRE\n. Fig. 4 shows the FRE functions for an\ninterpolated filter approximating 10.3 samples delay obtained\nusing a variety of different original filters as well as the FRE\nfunction of the original Thiran filter approximating 10.3 sam-\nples delay. It may be observed that the error increases with the\ndifference between the delays approximated by the original\nfilters.\nIt should be noted that the proposed method does not allow in-\nterpolation when fractional parts, , of the delays approximated\nby the two original filters have different signs. For example, it\nis not possible to utilize the proposed method to obtain an inter-\npolated filter from two tenth-order Thiran filters approximating\n9.9 and 10.3 . This is due to the fact that\nthe root loci for negative and positive values of are very dif-\nferent as may also be observed from Fig. 1.\nAuthorized licensed use limited to: University of Surrey. Downloaded on February 2, 2010 at 06:11 from IEEE Xplore.  Restrictions apply. \nHACIHABIBO \u02d8GLU et al.: ANALYSIS OF ROOT DISPLACEMENT INTERPOLATION METHOD 4899\nFig. 4. Frequency response error (FRE) for interpolated allpass frac-\ntional-delay filters approximating 10.3 samples delay. Interpolation has been\ncarried out using various pairs of Thiran filters.\nB. Comparison With Linear Interpolation\nUsing the two original filters and , the linearly\ninterpolated filter can be obtained by a weighted av-\nerage of the two transfer functions, such that\n(9)\nIt is not possible to obtain an interpolated IIR filter from two IIR\nfilters without increasing the filter order unless all the poles of\nthe two original filters are common. For the general case where\nall the poles of the original filters are different, an interpolated\nfilter can only be obtained at the cost of doubling the filter order.\nTherefore, given that the poles of two different Thiran filters\ncannot be common unless the two filters are the same, linear\ninterpolation of the transfer functions is not a suitable option\nif the computational complexity and thus the memory require-\nments are not to be increased.\nAnother approach is to obtain the numerator and the denomi-\nnator coefficients of a new filter by linear interpolation. With the\naim of demonstrating the effect of linearly interpolating filter\ncoefficients, let us consider the interpolated filter ob-\ntained by calculating a new set of filter coefficients by weighted\naveraging from two sets of original coefficients obtained using\nthe Thiran approximation such that\n(10)\nwhere and represent the coefficients of the first and\nthe second original filters and , respectively. The\nobtained coefficients may directly be used in the direct-form\nimplementation of the filter. Although this interpolation method\nhas the same computational complexity as the root-displace-\nment interpolation, the obtained phase delay provides a worse\ninterpolation accuracy as the filter coefficients do not have a\nlinear relationship with the phase delay. Further, as will be\nFig. 5. (a) Phase delay of the original (solid line), linearly interpolated\n(dashed\u2013dotted line), and root displacement interpolated (dashed line) frac-\ntional delay filters. The original filters model the fractional delays of 16.1, 16.25,\nand 16.4 samples. The original filters are Thiran filters modeling 16.1-sample\nand 16.4-sample fractional-delays, and (b) the corresponding FREs.\nshown in the subsequent sections, linear interpolation is less\nadvantageous as the direct-form implementation causes higher\ntransient errors when coefficients are changed.\nFig. 5(a) shows the phase delays of Thiran fractional-delay\nfilters modeling the fractional delays of 16.1, 16.25, and 16.4\nsamples, as well as the interpolated filters modeling a fractional\ndelay of 16.25 samples obtained from the given Thiran filters\nusing linear interpolation and root displacement interpolation.\nAs may be observed, the absolute deviation of the phase delay of\nlinearly interpolated filter is higher than that of the filter obtained\nusing root displacement. In addition, the root displacement\ninterpolation provides a phase delay which is flatter than the\nphase delay of the linearly interpolated filters. Fig. 5(b) shows\nthe FRE for the same filters. It may also be observed that the FRE\nis also higher for the linearly interpolated filter especially at the\nlower frequencies where the fractional-delay filter is required to\napproximate the desired fractional-delay well.\nAuthorized licensed use limited to: University of Surrey. Downloaded on February 2, 2010 at 06:11 from IEEE Xplore.  Restrictions apply. \n4900 IEEE TRANSACTIONS ON SIGNAL PROCESSING, VOL. 55, NO. 10, OCTOBER 2007\nIII. INTERPOLATION, TUNABILITY, AND TRANSIENTS\nThe root displacement interpolation method is computation-\nally efficient when used in the calculation of a new set of filter\ncoefficients that approximate an arbitrary delay between those\napproximated by two original filters. This allows using the\nmethod for designing computationally efficient tunable allpass\nfractional-delay filters.\nHowever, one of the major implications of root displacement\ninterpolation is that the filter is implemented in cascade form so\nas to avoid the unnecessary task of convolution while obtaining\nthe coefficients. As with all recursive filters, changing the coef-\nficients results in transient errors which are undesirable in many\napplications such as audio and acoustical signal processing. An\nanalysis of transient errors occurring in direct-form II IIR filters\nand the application of the results to Thiran filters for direct-form\nand cascade implementations are given in this section.\nA. Effective Length of an IIR Filter\nThe duration of the transient error is intricately related to the\neffective length of the impulse response of the IIR filter [20].\nThe effective length of the impulse response of an IIR filter can\nbe quantified based on the cumulative energy of the impulse re-\nsponse at a given instant. Laakso and V\u00e4lim\u00e4ki [20] propose a\nmethod of calculating the effective length based on the explicit\ncalculation of the impulse response for low order IIR filters and\npresent a closed-form maximum boundary for higher-order IIR\nfilters. The exact effective length of a filter\u2019s impulse response\nis defined as the instant at which the cumulative en-\nergy of the impulse response is\nat a given percentage of the total energy of the impulse re-\nsponse , such that .\nThe notion of effective length as used in this paper refers to the\noriginal definition by Laakso and V\u00e4lim\u00e4ki [20], where the ef-\nfective length is calculated directly from the original formula\ninvolving the impulse response.\nB. Transient Errors in Direct-Form II Allpass IIR Filters\n1) Analysis of the Transient Error: When the coefficients of\nan IIR filter are changed at an arbitrary instant during runtime,\ntransients will occur at the filter output. The total energy con-\ntained within the transient response can be reduced by selecting\na suitable interpolation range [21]. This selection determines the\ntotal number of filter poles that need to be stored in lookup ta-\nbles for a given application. As suggested previously [21], [22],\nthe state-variable representation of an allpass IIR filter in di-\nrect-form II (DFII) structure [23], [24] can be used to model how\nthe transient errors occur. Consider the following state-variable\nrepresentation:\n(11)\n(12)\nwhere\n(13)\nis the state vector at the instant , is the filter input,\nis the filter output, and\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n(14)\nAssume that the filter coefficients represented by the\nfeedback matrix are changed to a new set of filter coefficients\nrepresented by the feedback matrix at an arbitrary in-\nstant, , such that\n.\n(15)\nIn order to find the state-vector difference , assume\nthat we have two state vectors and , where\nis defined as in (15), and\nrepresents the ideal state vector after the coefficient\nupdate. Neglecting the contribution of and , we can\ndefine the state-vector difference as ,\nsuch that\n.\n(16)\nUsing (12) and (16) for , it is possible to express the\nstate-vector difference and the transient error in the following\nstate-variable representation:\n(17)\n(18)\nwhere , and\n. Therefore,\nthe transient error occurring at the filter output due to\nthe coefficient change can be represented as the response of the\nsecond filter to the state-vector difference observed when the\nfilter input for . It may then be suggested that\nthe total energy of the transient error depends on .\n2) State Vector Difference and the Input Signal: It is possible\nto represent the state vectors and in the -domain\nusing the relation in (11) such that\n(19)\n(20)\nIt can be shown that\n(21)\nAuthorized licensed use limited to: University of Surrey. Downloaded on February 2, 2010 at 06:11 from IEEE Xplore.  Restrictions apply. \nHACIHABIBO \u02d8GLU et al.: ANALYSIS OF ROOT DISPLACEMENT INTERPOLATION METHOD 4901\n(22)\nThe state-vector difference can then be represented in the -do-\nmain as\n(23)\n(24)\nwhere represents the recursive transfer function which\nrelates the state-vector difference to the input signal such as\n(25)\nIt is then possible to express in time domain the elements,\nof the state vector as a convolution sum\n(26)\nwhere is the impulse response associated with the\ntransfer function . It should be noted that due to\ncausality, for . For practical purposes, it may\nalso be assumed that for , where is\nthe effective length of the given impulse response. It is then\npossible to write (26) as a finite sum such that\n(27)\n3) Energy of the Transient Error: Let us assume that the\neffective length of the second IIR filter and also the effective\nduration of the transient error are equal to . It is then possible\nto define the truncated transient error in vectorial form using\n(17) and (18) as\n(28)\nwhere\nis the truncated transient error vector,\nis a matrix, and\nis the\nstate-vector difference. The energy of the transient error can\nbe represented as\n(29)\nHere, represents the Frobenius norm defined for a real-\nvalued matrix as\n, where represents the trace of a\nmatrix. This expression gives an exact value of the total tran-\nsient error energy within the effective length. However, as\ndepends on the previous values of the input, only an\nupper bound can be given for the transient error energy unless\nthe input signal is known. Therefore, in what follows, the ex-\npression for the upper bound of the transient error energy is\nderived.\nBy definition, the following inequality holds for the Frobe-\nnius norm:\n(30)\nTherefore, an upper bound for the transient energy can be de-\nfined as\n(31)\nThe squared value of each element of the state-difference vector\ngiven in (27) can be expressed as\n(32)\nAn upper bound for this value exists due to the Cauchy\u2013Schwarz\ninequality such that\n(33)\nThe second term of the right-hand side of (31) then obeys the\nfollowing inequality:\n(34)\nwhere is the energy of the truncated\nimpulse response of the difference transfer function .\nThe first term of the right-hand side of the inequality in (31) can\nbe expressed as\n(35)\nwhich is independent of the input and which only depends on\nthe coefficients of the second filter that can be expressed as a\nconstant such that . It is then possible to express the\nupper bound for the transient energy as\n(36)\nThus, the upper bound depends on the past\nsamples of the input. Given that the magnitude of the input\nsignal is bounded (i.e., ), the absolute maxima\nof the last term above will be obtained if for\n. It is thus possible to\nsuggest that the following upper bound exists for the transient\nerror energy regardless of the input signal:\n(37)\nAuthorized licensed use limited to: University of Surrey. Downloaded on February 2, 2010 at 06:11 from IEEE Xplore.  Restrictions apply. \n4902 IEEE TRANSACTIONS ON SIGNAL PROCESSING, VOL. 55, NO. 10, OCTOBER 2007\nThe upper bound for the root mean square (rms) transient error\nis then defined as\n(38)\n4) Coefficient Update Rate: Changing filter coefficients be-\nfore the transient error has effectively vanished will result in the\noverlap, and thus the build-up, of transient errors and eventually\nincrease the rms transient error energy observed at the output.\nThis means that the coefficient update rate should be chosen ac-\ncording to the effective length of the transient error. Therefore,\nit is suggested that the maximum coefficient update rate is de-\nfined as the inverse of the effective length of the recursive filter,\ni.e., . This way, the upper bound of the rms\ntransient error will not be exceeded. The coefficients of a filter\nwith a higher effective length will therefore have to be updated\nless often than those of a filter with a lower effective length, re-\nducing the maximum allowable rate of coefficient update.\n5) Remarks: The following general conclusions may be\ndrawn from the discussions in this section.\n1) The transient error is not related to input samples, ,\nafter the coefficients are updated (i.e., ), but those\nprior to this update. The total transient energy is solely\nrelated to the state-vector difference, at . In\nother words, keeping the state-vector difference\nsmall will result in a small transient error energy. This, in\nturn, requires that the change in the filter coefficients is not\nbig.\n2) The duration of the transient error is related to the response\nof the updated filter to the discrepancy at the filter state\nvector. However, the effective length of the impulse re-\nsponse of the IIR filter is still considered to be a measure\nof the duration of the transient error [20].\n3) The upper bound of the total transient energy is related\nto the length of the filter and the effective length of\nthe impulse response of the difference transfer function\n, which is also longer for greater . Therefore, a\nlower order filter having all of its poles common with a\nhigher order filter will have a smaller upper bound for the\nenergy of the transient error than the higher order filter.\nC. Transient Errors and DFII Thiran Fractional-Delay Filters\nAs originally shown by Thiran [11], it is possible to express\nthe denominator polynomial of a maximally flat group-delay\nfilter as a truncated Gauss hypergeometric series\ndefined as\n(39)\nFig. 6. Effective length (P = 99%) of impulse responses for Thiran filters of\norder 2, 4, 8, and 16. For the fractional part of the delay from \u00001 to 1.\nwhere is the Gamma function [25].\nLet us consider the two -order original filters having the\nrespective set of coefficients, , and , approximating de-\nlays and , such that . It is then pos-\nsible to represent the state difference transfer function\nin closed form as in (40), shown at the bottom of the page.\nThis transfer function is stable as the two multiplicative terms\nin the denominator both have roots corresponding to roots of the\nfirst and the second filters that are inside the unit circle.\nFig. 6 shows the effective length, , of the impulse re-\nsponses for 99 for various Thiran fractional-delay filters.\nIt may be observed that the duration of the transient error in-\ncreases with the absolute fractional delay. The figure also shows\nthat, higher order Thiran fractional-delay filters will have longer\ntransient error durations, and thus a higher number of output\nsamples contaminated with the transient error.\nFig. 7 shows the upper limit of the rms transient error for a\nchange in the coefficients of a DFII Thiran filter, modeling a\ndelay of samples to those of one modeling\nsamples, where is the fractional part of the delay and is\nthe filter order. It may be observed that the upper bound of the\nrms transient error increases with the order of the Thiran filters.\nConsidering that the effective length of a higher order Thiran\nfilter is also higher, the total transient energy corresponding to\na small change in the modeled delay will be high if the DFII\nimplementation is used. This is another disadvantage of storing\na small set of direct-form filter coefficients and obtaining the\nnew coefficients by linear interpolation.\n(40)\nAuthorized licensed use limited to: University of Surrey. Downloaded on February 2, 2010 at 06:11 from IEEE Xplore.  Restrictions apply. \nHACIHABIBO \u02d8GLU et al.: ANALYSIS OF ROOT DISPLACEMENT INTERPOLATION METHOD 4903\nFig. 7. Upper bounds of rms transient errors in decibels for Thiran filters of\norder N = 2, 4, 8, and 16 for a change of coefficients modeling a delay of\n(N+d) to (N+d+0:1) for the fractional part of the delay d between 0 and 1.\nD. Transient Error in Cascade Form Implementation\nAs stated earlier, obtaining the coefficients of second-order\nIIR filters from interpolated roots is straightforward and compu-\ntationally more efficient than calculating the direct-form poly-\nnomial coefficients from interpolated roots. Therefore, in order\nto improve the computational efficiency of the proposed inter-\npolation algorithm, the cascade form implementation is consid-\nered. As will be discussed shortly, the cascade implementation\nalso reduces the level of the transient error.\nCascade implementation basically amounts to the decoupling\nof filter roots. For the case of Thiran filters, all cascaded sections\ncan be selected to be allpass, so that the output of each allpass\nsection is input to the next allpass section. Consider the cascade\nimplementation of the -order Thiran filter shown in Fig. 8.\nAs there exists no global feedback and all of the IIR sections\nin the cascade chain are allpass, the transient error occurring at\nthe output of each cascaded section due to coefficient switching\nonly has an additive effect on the output of the cascade chain.\nAlso, because the IIR sections are not zero-phase, transient error\nat the output of each second-order section experiences a nonzero\ndelay effectively shifting each individual transient error in time.\nAssume that the coefficients of all second order sections are\nupdated at time . In order to find an upper bound for\nthe transient error energy, let us first express the transient error\nobserved at the output of a second-order section in\nfrequency domain as , and the overall transient error\nin frequency domain as . It can be shown by\nthe triangle inequality that\n(41)\nNow consider the squared magnitude response. It is possible to\ndefine an upper bound for the squared magnitude spectrum of\nthe transient error by using the Cauchy\u2013Schwarz inequality such\nthat\n(42)\nBy expressing the transient error energy in the frequency do-\nmain using Parseval\u2019s relation, the upper bound of the overall\ntransient energy can be expressed as\n(43)\nEquality will only hold if all transient error energies are equal,\nand if the transient errors completely overlap in time. This is\nnot possible in practice as all the second-order sections have\nnonzero delays. In other words, the total transient error energy\nwill always be smaller than times the sum of transient\nerror energies , observed at the output of each second-order\nsection. On the other extreme, if the transient errors are fully\nnonoverlapping in time, the overall transient error is the sum\nof individual transient error energies. This also is not possible\nin practice as the recursive filters have infinite duration impulse\nresponses which will inevitably overlap in time. This provides\na lower bound for the overall transient error energy such that\nfor (44)\nThe upper and lower bounds of the transient error energy at the\noutput of each cascaded second-order section can be calculated\nas in (37). The overall effective length of the cascade implemen-\ntation is the same as the direct implementation, and the bounds\nof the rms transient error are defined accordingly by using the\neffective length of the overall impulse response of the cascade\nstructure.\nFig. 9 shows the upper bound of the rms transient error for\nthe same filter orders as analyzed for the direct implementation\n(see Fig. 7). The figure is drawn at the same scale so that a\ndirect comparison is possible. It may be observed that the rms\ntransient error for the cascade implementation is around 3 dB\nbelow that of the same order direct implementation. Note that\nthe rms transient error for the DFII and cascade implementation\nare the same when the order, , as expected.\nFig. 10 shows the effect of switching the fractional delay from\n10.1 to 10.5 samples at for a sinusoidal input of\n320 Hz at a sampling frequency of 8 kHz. The first\npanel shows the ideal output together with the output of cascade\nand direct implementations. The second panel shows the error at\nthe output of the direct implementation. The third panel shows\nAuthorized licensed use limited to: University of Surrey. Downloaded on February 2, 2010 at 06:11 from IEEE Xplore.  Restrictions apply. \n4904 IEEE TRANSACTIONS ON SIGNAL PROCESSING, VOL. 55, NO. 10, OCTOBER 2007\nFig. 8. Cascade implementation of an N -order (N even) filter. The transient error of each section is propagated through the subsequent sections.\nFig. 9. Upper bounds of rms transient errors in decibels for Thiran filters in\ncascade implementation for orders N = 2, 4, 8, and 16 for a change of coeffi-\ncients modeling a delay of (N + d) to (N + d+0:1) for the fractional part of\nthe delay d between 0 and 1.\nthe error at the output of the cascade structure. It may be ob-\nserved that the cascade implementation reduces the level of the\ntransient error considerably as discussed above.\nIV. EXAMPLE: DIGITAL WAVEGUIDE STRING\nWITH FRACTIONAL DELAYS\nDigital waveguides (DWGs) present an efficient way to syn-\nthesise musical instrument sounds, model the vocal tract, or\nsimulate room acoustics. A very simple example is the DWG\nstring model [26], which is used in the modeling of plucked\nstring instruments like the guitar. The DWG string is essen-\ntially a damped digital oscillator. The fundamental frequency\nof the model depends on the length of the digital string, or in\nother words the total delay in the feedback path. It is possible\nto use tunable fractional-delay filters [27], [28] to change the\ntotal delay in the feedback path to model effects like glissando\n(i.e., continuous pitch shift). Fig. 11 shows the digital waveguide\nstring whose feedback path is implemented with a fixed delay\nof 10 samples, and five fourth-order Thiran fractional-delay fil-\nters in series. The filter is a\nsingle-pole loop filter for damping the feedback signal [28].\nFor demonstrating the effect of interpolation of the fractional-\ndelay filters, we excite the digital waveguide string with a Ham-\nming pulse of 10 samples width. Fig. 12(a) shows the output\nand the spectrogram of the \u201cfreely vibrating\u201d DWG string when\n. The interpolation method proposed in this paper is used\nFig. 10. Outputs and the transient errors of different implementations of\na tenth-order IIR fractional delay filter for a 320-Hz sinusoidal input at\nF = 8 kHz. Coefficients are switched from those of 10.1 samples delay to\n10.5 samples delay at the 400th sample. (a) Ideal output (solid line), the output\nof the direct-form II implementation (dashed\u2013dotted line), and the output of the\ncascade implementation (dashed line). (b) Transient error for the direct-form II\nimplementation. (c) Transient error for the cascade structure.\nto interpolate the fractional delay modeled by each Thiran filter\n(i.e., ) between 8.0 and 4.0 samples with interpolation\nsteps of 0.02 samples by slowly decreasing . Initially, the total\ndelay (i.e., ) of the digital waveguide string is 50 sam-\nples corresponding to a fundamental frequency of 160 Hz\nat a sampling frequency of 8 kHz. The coefficient update\nis carried out every 40 samples. At the 8000th sample, the total\ndelay modeled by each fractional-delay filter is four samples,\ndecreasing the total length of the digital waveguide string to 30\nsamples. This length corresponds to 266 Hz at the same sam-\npling frequency. Fig. 12(b) shows the magnitude spectrogram\nof this glissando effect. Frequency shift may be observed both\nwith the fundamental frequency and with the higher harmonics.\nV. CONCLUSION\nAn analysis of the application of a simple and effective inter-\npolation method for tunable allpass fractional-delay filters was\npresented in this paper. It was shown that the proposed inter-\npolation method results in more accurate results than the linear\ninterpolation of filter coefficients. The transient errors in IIR fil-\nters that arise from coefficient update were analyzed. The upper\nbound for the rms transient error, independent of the filter input,\nwas derived for a general IIR filter in DFII implementation. The\nmaximum allowable coefficient update rate for which the rms\nAuthorized licensed use limited to: University of Surrey. Downloaded on February 2, 2010 at 06:11 from IEEE Xplore.  Restrictions apply. \nHACIHABIBO \u02d8GLU et al.: ANALYSIS OF ROOT DISPLACEMENT INTERPOLATION METHOD 4905\nFig. 11. Simple digital waveguide string as implemented with variable Thiran fractional-delay filters in the feedback path. The variable fractional-delay filters are\nof order 4. The delay is controlled by the interpolation parameter denoted as \u001a. W (z) represents the loop filter used to damp the feedback signal.\nFig. 12. Output signals and the magnitude spectrograms of (a) the \u201cfreely-vi-\nbrating\u201d DWG string and (b) the frequency shift (i.e., Glissando) on the digital\nwaveguide string carried out by the proposed interpolation method.\ntransient error upper bound is not exceeded was defined based\non the effective length of the filter impulse response. The numer-\nical bounds of rms transient errors were obtained for several all-\npass fractional-delay filters in direct-form implementation. The\nupper and lower bounds of the rms transient error for a cascade\nimplementation consisting of DFII blocks was derived based on\nthe transient error bounds for general DFII IIR filters. It was\ndemonstrated that changing the filter coefficients of the cascade\nimplementation results in lower transient error bounds in gen-\neral. A practical example utilizing the proposed interpolation\nmethod was given, in which the glissando effect was synthesized\non a digital waveguide string by modeling the feedback delay\nwith a cascade of tunable fractional-delay filters interpolated by\nthe proposed method. The proposed method has applications not\nonly in physical model based sound synthesis and audio effects,\nbut also in a variety of other applications including speech syn-\nthesis, microphone array processing, telecommunications sys-\ntems, and spatial audio synthesis.\nACKNOWLEDGMENT\nThis paper is dedicated to the memory of H. Hac\u0131habibog\u02d8lu\u2019s\ngrandfather L. S\u00fcrmeli. The authors would like to thank the As-\nsociate Editor Dr. Z. Cvetkovic\u00b4 and three anonymous reviewers\nfor their feedback and insightful comments.\nREFERENCES\n[1] T. I. Laakso, V. V\u00e4lim\u00e4ki, M. Karjalainen, and U. K. Laine, \u201cSplitting\nthe unit delay,\u201d IEEE Signal Process. Mag., vol. 13, no. 1, pp. 30\u201360,\nJan. 1996.\n[2] L. Savioja, J. Huopaniemi, T. Lokki, and R. V\u00e4\u00e4n\u00e4nen, \u201cCreating inter-\nactive virtual acoustic environments,\u201d J. Audio Eng. Soc., vol. 47, no.\n9, pp. 675\u2013705, Sep. 1999.\n[3] V. V\u00e4lim\u00e4ki, \u201cDiscrete-time modeling of acoustic tubes using frac-\ntional delay filters,\u201d Ph.D. dissertation, Faculty of Elect. Eng., Helsinki\nUniv. Technology, Espoo, Finland, Dec. 1995.\n[4] V. V\u00e4lim\u00e4ki, M. Karjalainen, and T. Kuisma, \u201cArticulatory speech syn-\nthesis based on fractional delay waveguide filters,\u201d in Proc. 1994 IEEE\nInt. Conf. Acoust. Speech, Signal Process. (ICASSP94), Adelaide, Aus-\ntralia, Apr. 1994, pp. I\/585\u2013I\/588.\n[5] C. W. Farrow, \u201cA continuously variable digital delay element,\u201d in Proc.\n1988 IEEE Int. Symp. Circuits Systems (ISCAS), Espoo, Finland, Jun.\n1988, pp. 2641\u20132645.\n[6] K. Rajamani, Y.-S. Lai, and C. W. Farrow, \u201cAn efficient algorithm for\nsample rate conversion from CD to DAT,\u201d IEEE Signal Process. Lett.,\nvol. 7, no. 10, pp. 288\u2013290, Oct. 2000.\n[7] P. Murphy, A. Krukowski, and A. Tarczynski, \u201cAn efficient fractional\nsample delayer for digital beam steering,\u201d in Proc. 1997 IEEE Int. Conf.\nAcoust., Speech, Signal Process. (ICASSP), Munich, Germany, Apr.\n1997, pp. III\/2245\u2013III\/2248.\n[8] E. Hermanowicz, \u201cExplicit formulas for weighting coefficients of max-\nimally flat tunable FIR delayers,\u201d Electron. Lett., vol. 28, no. 20, pp.\n1936\u20131937, Sep. 1992.\n[9] E. Hermanowicz and M. Rojewski, \u201cDesign of FIR first order digital\ndifferentiators of variable fractional sample delay using maximally flat\nerror criterion,\u201d Electron. Lett., vol. 30, no. 1, pp. 17\u201318, Jan. 1994.\n[10] A. Lee, M. Ahmadi, V. Ramachandran, and C. S. Gargour, \u201cDesign\nof fractional delay filters,\u201d Comput. Electr. Eng., vol. 27, no. 3, pp.\n287\u2013292, May 2001.\nAuthorized licensed use limited to: University of Surrey. Downloaded on February 2, 2010 at 06:11 from IEEE Xplore.  Restrictions apply. \n4906 IEEE TRANSACTIONS ON SIGNAL PROCESSING, VOL. 55, NO. 10, OCTOBER 2007\n[11] J.-P. Thiran, \u201cRecursive digital filters with maximally flat group delay,\u201d\nIEEE Trans. Circuit Theory, vol. CT-18, no. 6, pp. 659\u2013664, Nov. 1971.\n[12] A. Fettweis, \u201cA simple design of maximally flat delay digital filters,\u201d\nIEEE Trans. Audio Electroacoust., vol. AU-20, no. 2, pp. 112\u2013114, Jun.\n1972.\n[13] M. Makundi, T. I. Laakso, and V. V\u00e4lim\u00e4ki, \u201cEfficient tunable IIR and\nallpass filter structures,\u201d Electron. Lett., vol. 37, no. 6, pp. 344\u2013345,\nMar. 2001.\n[14] J.-S. Park, B.-K. Kim, J.-G. Chung, and K. K. Parhi, \u201cHigh-speed tun-\nable fractional-delay allpass filter structure,\u201d in Proc. 2003 IEEE Int.\nSymp. Circuits Systems (ISCAS), Bangkok, Thailand, May 2003, pp.\nIV\/165\u2013IV\/168.\n[15] H. Hac\u0131habibog\u02d8lu, B. G\u00fcnel, and A. M. Kondoz, \u201cInterpolated allpass\nfractional-delay filters using root displacement,\u201d in Proc. 2006 IEEE\nInt. Conf. Acoust., Speech, Signal Process., Toulouse, France, May\n2006, pp. III\/864\u2013III\/867.\n[16] V. Goncharoff and M. Kaine-Krolak, \u201cInterpolation of LPC spectra via\npole shifting,\u201d in Proc. 1995 IEEE Int. Conf. Acoust., Speech, Signal\nProcess. (ICASSP), Detroit, MI, May 1995, pp. I\/780\u2013I\/783.\n[17] J. Slifka and T. R. Anderson, \u201cSpeaker modification with LPC pole\nanalysis,\u201d in Proc. 1995 IEEE Int. Conf. Acoust., Speech, Signal\nProcess. (ICASSP), Detroit, MI, May 1995, pp. I\/644\u2013I\/647.\n[18] H. Hac\u0131habibog\u02d8lu, B. G\u00fcnel, and A. M. Kondoz, \u201cHead-related\ntransfer function filter interpolation by root displacement,\u201d in Proc.\n2005 IEEE Workshop Applications Signal Processing to Audio Acous-\ntics (WASPAA), New Paltz, NY, Oct. 2005, pp. 134\u2013137.\n[19] H. J. Orchard, \u201cThe roots of the maximally flat-delay polynomials,\u201d\nIEEE Trans. Circuit Theory, vol. CT-12, pp. 452\u2013454, Sep. 1965.\n[20] T. I. Laakso and V. V\u00e4lim\u00e4ki, \u201cEnergy-based effective length of the\nimpulse response of a recursive filter,\u201d IEEE Trans. Instrum. Meas.,\nvol. 48, no. 1, pp. 7\u201317, Feb. 1999.\n[21] R. Rabenstein, \u201cMinimization of transient signals in recursive\ntime-varying filters,\u201d Circuits, Syst., Signal Process., vol. 7, no. 3, pp.\n345\u2013359, 1988.\n[22] L. H. Zetterberg and Q. Zhang, \u201cElimination of transients in adaptive\nfilters with application to speech coding,\u201d Signal Process., vol. 15, no.\n4, pp. 419\u2013428, 1988.\n[23] D. Schlichth\u00e4rle, Digital Filters: Basics and Design, 1st ed. London,\nU.K.: Springer-Verlag, 2000.\n[24] J. G. Proakis and D. G. Manolakis, Digital Signal Processing: Prin-\nciples, Algorithms, and Applications, 3rd ed. Englewood Cliffs, NJ:\nPrentice-Hall, 1996.\n[25] M. Abramowitz and I. Stegun, Handbook of Mathematical Functions,\n10th ed. Washington, DC: U.S. Government Printing Office, 1972.\n[26] J. O. Smith, \u201cPhysical modelling using waveguides,\u201d Comput. Music\nJ., vol. 16, no. 4, pp. 75\u201387, 1992.\n[27] V. V\u00e4lim\u00e4ki and M. Karjalainen, \u201cImplementation of fractional delay\nwaveguide models using allpass filters,\u201d in Proc. 1995 IEEE Int. Conf.\nAcoust., Speech, Signal Process., Detroit, MI, May 9\u201312, 1995, pp.\nII\/1524\u2013II\/1527.\n[28] V. V\u00e4lim\u00e4ki, T. I. Laakso, and J. Mackenzie, \u201cElimination of transients\nin time-varying allpass fractional delay filters with application to dig-\nital waveguide modeling,\u201d in Proc. Int. Computer Music Conf., Banff,\nCanada, 1995, pp. 303\u2013306, International Computer Music Associa-\ntion.\nH\u00fcseyin Hac\u0131habibog\u02d8lu (S\u201996\u2013M\u201900) was born\nin Ankara, Turkey, in 1978. He received the B.Sc.\n(Hons.) degree from the Middle East Technical\nUniversity, Ankara, Turkey, in 2000, the M.Sc.\ndegree from the University of Bristol, U.K., in 2001,\nboth in electrical and electronic engineering, and\nthe Ph.D. degree in computer science from Queen\u2019s\nUniversity Belfast, U.K., in 2004 for his research\ninto the simplification of signal processing algo-\nrithms used in room auralization by the application\nof psychoacoustical knowledge.\nSince 2004, he has been with the Multimedia and DSP Research Group\n(I-Lab) at the Centre for Communication Systems Research (CCSR), Univer-\nsity of Surrey, U.K. His research interests include audio signal processing,\nroom acoustics modeling and simulation, psychoacoustics of spatial hearing,\nand microphone array processing. He is one of the core members of the\nEPSRC-funded Noise Futures Network.\nDr. Hac\u0131habibog\u02d8lu is a member of the Audio Engineering Society and the\nEuropean Acoustics Association.\nBanu G\u00fcnel (S\u201997\u2013M\u201900) was born in Antalya,\nTurkey, in 1977. She received the B.Sc. degree\nin electrical and electronic engineering from the\nMiddle East Technical University, Ankara, Turkey,\nin 2000, the M.Sc. degree in communication systems\nand signal processing from the University of Bristol,\nU.K., in 2001, and the Ph.D. degree on audio and\nacoustical signal processing from the Queen\u2019s\nUniversity of Belfast, U.K., in 2004.\nSince 2004, she has been working as a Research\nFellow in the Centre for Communication Systems Re-\nsearch (CCSR) at the University of Surrey, U.K. Her main research interests are\nspatial audio, array signal processing, acoustic imaging, psychoacoustics, and\ncommunication acoustics.\nDr. G\u00fcnel is a member of the European Acoustics Association (EAA) and the\nAudio Engineering Society (AES).\nAhmet M. Kondoz (M\u201991) was born in Cyprus.\nHe received the B.Sc. (Hons.) degree in engineering\nfrom the University of Greenwich, U.K., in 1983,\nthe M.Sc. degree in telematics from the University\nof Essex, U.K., in 1984, and the Ph.D. degree in\ncommunication from the University of Surrey, U.K.,\nin 1986.\nIn 1988, he became a Lecturer, a Reader in 1995,\nand then in 1996, a Professor in Multimedia Commu-\nnication Systems and Deputy Director of Centre for\nCommunication Systems Research (CCSR), Univer-\nsity of Surrey, Guildford, U.K. He has over 250 publications, including a book\non low-bit-rate speech coding and several book chapters. He has graduated more\nthan 40 Ph.D. students in the areas of speech\/image and signal processing and\nwireless multimedia communications and has been a consultant for major wire-\nless media terminal developers and manufacturers.\nProf. Kondoz has been awarded several prizes, the most significant of which\nare The Royal Television Societies\u2019 Communications Innovation Award and The\nIEE Benefactors Premium Award. He has been on the Refereeing College for\nEPSRC and on the Canadian Research Councils. He is a member of the Institu-\ntion of Engineering and Technology (IET).\nAuthorized licensed use limited to: University of Surrey. Downloaded on February 2, 2010 at 06:11 from IEEE Xplore.  Restrictions apply. \n"}