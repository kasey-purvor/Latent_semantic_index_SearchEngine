{"doi":"10.1109\/ICCAD.2003.32","coreId":"68158","oai":"oai:eprints.lancs.ac.uk:33246","identifiers":["oai:eprints.lancs.ac.uk:33246","10.1109\/ICCAD.2003.32"],"title":"Analytic modeling of interconnects for deep submicron circuits.","authors":["Pamunuwa, Dinesh B.","Elassaad, Shauki","Tenhunen, Hannu"],"enrichments":{"references":[{"id":868625,"title":"A delay metric for RC circuits based on the Weibull distribution,\u201d in","authors":[],"date":"2002","doi":"10.1109\/TCAD.2004.823343","raw":"F. Liu, C. Kashyap, and C. J. Alpert, \u201cA delay metric for RC circuits based on the Weibull distribution,\u201d in Proc. ICCAD, 2002, pp. 620-4.","cites":null},{"id":870575,"title":"An explicit RC-circuit delay approximation based on the first three moments of the impulse response,\u201d in","authors":[],"date":"1996","doi":null,"raw":"B. Tutuianu, F. Dartu and L. T. Pillage, \u201cAn explicit RC-circuit delay approximation based on the first three moments of the impulse response,\u201d in Proc. DAC, 1996, pp. 611-6. 37fF 50\u2126 25fF 50\u2126 37fF 40fF 50\u2126 50fF 100\u2126 69fF 26fF 33fF 66\u2126 37fF 66\u2126 40fF 50fF 50fF 50\u2126 62\u2126 37fF 37fF 62\u2126 37fF 40fF","cites":null},{"id":867058,"title":"analytic delay model for RLC interconnects,\u201d","authors":[],"date":"1997","doi":null,"raw":"\u2212, \u201cAn analytic delay model for RLC interconnects,\u201d IEEE Trans. Comp.-Aided Design of ICs and Sys., vol. 16, no. 12, pp. 1507-14, Dec. 1997.","cites":null},{"id":869125,"title":"Asymptotic waveform evaluation for timing analysis,\u201d","authors":[],"date":"1990","doi":"10.1109\/43.45867","raw":"L. T. Pillage and R. A. Rohrer, \u201cAsymptotic waveform evaluation for timing analysis,\u201d IEEE Trans. Comp.-Aided Design of ICs and Sys., vol. 9, no. 4, pp. 352-366, Apr. 1990.","cites":null},{"id":865312,"title":"Charge-sharing models for switch level simulation,\u201d","authors":[],"date":"1987","doi":null,"raw":"C. Y. Chu and M. A. Horowitz, \u201cCharge-sharing models for switch level simulation,\u201d IEEE Trans. Comp.-Aided Design, vol. CAD-6, no. 6, pp. 1053-1061, Nov. 1987.","cites":null},{"id":870078,"title":"Crosstalk noise estimation for generic RC trees\u201d, in","authors":[],"date":"2001","doi":null,"raw":"M. Takahashi, M. Hashimoto, and H. Onodera, \u201cCrosstalk noise estimation for generic RC trees\u201d, in Proc. ICCD, 2001, pp. 110-6.","cites":null},{"id":868009,"title":"Delay and Noise Formulas for Capacitively Coupled Distributed RC Lines\u201d,","authors":[],"date":"1998","doi":"10.1093\/ietfec\/e90-a.12.2669","raw":"H. Kawaguchi and T. Sakurai, \u201cDelay and Noise Formulas for Capacitively Coupled Distributed RC Lines\u201d, in Proc. Asian and South Pacific DAC, 1998, pp. 35-43.","cites":null},{"id":866674,"title":"Effects of inductance on the propagation delay and repeater insertion in VLSI circuits,\u201d","authors":[],"date":"2000","doi":null,"raw":"Y. I. Ismail and E. G. Friedman, \u201cEffects of inductance on the propagation delay and repeater insertion in VLSI circuits,\u201d IEEE Trans. VLSI Systems, vol. 8, pp. 195-206, Apr. 2000.","cites":null},{"id":865067,"title":"Efficient closed-form cross-talk delay metrics,\u201d in","authors":[],"date":"2002","doi":null,"raw":"L. H. Chen and M. Marek-Sadowska, \u201cEfficient closed-form cross-talk delay metrics,\u201d in Proc. ISQED, 2002, pp. 431-6.","cites":null},{"id":865899,"title":"Efficient coupled noise estimation for on-chip interconnects,\u201d in","authors":[],"date":"1997","doi":null,"raw":"A. Devgan, \u201cEfficient coupled noise estimation for on-chip interconnects,\u201d in Proc. ICCAD, 1997, pp. 147-153.","cites":null},{"id":870335,"title":"Efficient delay calculation in presence of crosstalk,\u201d in","authors":[],"date":"2000","doi":null,"raw":"X. Tong and M. Marek-Sadowska, \u201cEfficient delay calculation in presence of crosstalk,\u201d in Proc. ISQED, 2000, pp. 491-7.","cites":null},{"id":869832,"title":"Efficient reducedorder modeling of frequency-dependent coupling inductances associated with 3-D interconnect structures,\u201d in","authors":[],"date":"1995","doi":"10.1109\/96.496030","raw":"L. M. Silveira, M. Kamon and J. White, \u201cEfficient reducedorder modeling of frequency-dependent coupling inductances associated with 3-D interconnect structures,\u201d in Proc. DAC, 1995, pp. 376-80.","cites":null},{"id":868339,"title":"h-gamma: An RC delay metric based on a gamma distribution approximation to the homogeneous response,\u201d in","authors":[],"date":"1998","doi":null,"raw":"T. Lin, E. Acar, and L. T. Pileggi, \u201ch-gamma: An RC delay metric based on a gamma distribution approximation to the homogeneous response,\u201d in Proc. ICCAD, 1998, pp. 19-25.","cites":null},{"id":867753,"title":"Noise and delay uncertainty studies for coupled RC interconnects,\u201d in","authors":[],"date":"1999","doi":null,"raw":"A. B. Kahng, S. Muddu, and D. Vidhani, \u201cNoise and delay uncertainty studies for coupled RC interconnects,\u201d in Proc. ASIC\/SOC, 1999, pp. 3-8.","cites":null},{"id":867320,"title":"Noise model for multiple segmented coupled RC interconnects,\u201d in","authors":[],"date":"2001","doi":null,"raw":"A. B. Kahng, S. Muddu, N. Pol, and D. Vidhani, \u201cNoise model for multiple segmented coupled RC interconnects,\u201d in Proc. ISQED, 2001, pp. 145-150.","cites":null},{"id":867516,"title":"On switch factor based analysis of coupled RC interconnects,\u201d in","authors":[],"date":"2000","doi":null,"raw":"A. B. Kahng, S. Muddu, and E. Sarto, \u201cOn switch factor based analysis of coupled RC interconnects,\u201d in Proc. DAC, 2000, pp. 79-84.","cites":null},{"id":865610,"title":"On the determination of the transfer function of electronic circuits,\u201d","authors":[],"date":"1973","doi":null,"raw":"B. L. Cochrun and A. Grabel, \u201cOn the determination of the transfer function of electronic circuits,\u201d IEEE Trans. Circuit Theory, vol. CT-20, pp.16-20, Jan. 1973.","cites":null},{"id":868884,"title":"PRIMA: Passive reduced-order interconnect macromodeling algorithm,\u201d","authors":[],"date":"1998","doi":"10.1109\/43.712097","raw":"A. Odabasioglu, M. Celik and L. T. Pileggi, \u201cPRIMA: Passive reduced-order interconnect macromodeling algorithm,\u201d IEEE Trans. Comp.-Aided Design of ICs and Sys., vol. 17, no. 8, pp. 645-654, Aug. 1998.","cites":null},{"id":868264,"title":"PRIMO: Probability interpretation of moments for delay calculation,\u201d in","authors":[],"date":"1998","doi":null,"raw":"R. Kay and L. T. Pileggi, \u201cPRIMO: Probability interpretation of moments for delay calculation,\u201d in Proc. DAC, 1998, pp. 463-8.","cites":null},{"id":864848,"title":"RC Delay metrics for performance optimization,\u201d","authors":[],"date":"2001","doi":null,"raw":"C. J. Alpert, A. Devgan, and C. V. Kashyap, \u201cRC Delay metrics for performance optimization,\u201d IEEE Trans. Comp.-Aided Design of ICs and Sys., vol. 20, no. 5, pp. 571-582, May 2001.","cites":null},{"id":869406,"title":"RICE: Rapid interconnect circuit evaluator,\u201d in","authors":[],"date":"1991","doi":"10.1109\/43.285250","raw":"C. L. Ratzlaff, N. Gopal and L. T. Pillage, \u201cRICE: Rapid interconnect circuit evaluator,\u201d in Proc. DAC, 1991, pp. 555-60.","cites":null},{"id":864596,"title":"S2P: A stable 2 pole RC delay and coupling noise metric,\u201d in","authors":[],"date":"1999","doi":null,"raw":"E. Acar, A. Odabasioglu, M. Celik, and L. T. Pileggi, \u201cS2P: A stable 2 pole RC delay and coupling noise metric,\u201d in Proc. GLSVLSI, 1999, pp. 60 -63.","cites":null},{"id":869548,"title":"Signal delay in RC tree networks,\u201d","authors":[],"date":"1983","doi":"10.1109\/TCAD.1983.1270037","raw":"J. Rubinstein, P. Penfield, and M. Horowitz, \u201cSignal delay in RC tree networks,\u201d IEEE Trans. Comp.-Aided Design, vol CAD-2, no. 3, pp. 202-211, Jul. 1983.","cites":null},{"id":866198,"title":"The transient response of linear damped circuits,\u201d","authors":[],"date":"1948","doi":null,"raw":"W. C. Elmore, \u201cThe transient response of linear damped circuits,\u201d J. Appl. Physics, vol. 19, pp-55-63, Jan. 1948.","cites":null},{"id":866486,"title":"Timing models for MOS circuits,\u201d","authors":[],"date":"1984","doi":null,"raw":"M. A. Horowitz, \u201cTiming models for MOS circuits,\u201d Ph.D. dissertation, Stanford Electronics Laboratories, Stanford University, Stanford, CA, Jan. 1984.","cites":null},{"id":866934,"title":"Two-pole analysis of interconnection trees,\u201d in","authors":[],"date":"1995","doi":null,"raw":"A. B. Kahng and S. Muddu, \u201cTwo-pole analysis of interconnection trees,\u201d in Proc. MCMC, 1995, pp. 95-104.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2003","abstract":"Closed form equations for second order transfer functions of general arbitrarily-coupled RC trees with multiple drivers are reported. The models allow precise delay and noise calculations for systems of coupled interconnects with guaranteed stability, and represent the minimum complexity associated with this class of circuits. The simplicity, accuracy and generality of the models make them suitable for use in early delay and noise planning of global signals in complex systems","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/68158.pdf","fullTextIdentifier":"http:\/\/eprints.lancs.ac.uk\/33246\/1\/24850835.pdf","pdfHashValue":"2b6c062f712693430c38acc2bb0c25c1e9a1239d","publisher":"IEEE Computer Society","rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:eprints.lancs.ac.uk:33246<\/identifier><datestamp>\n      2018-01-17T00:05:41Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      7375626A656374733D54:5441<\/setSpec><setSpec>\n      74797065733D626F6F6B5F73656374696F6E<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n    \n      \n        Analytic modeling of interconnects for deep submicron circuits.<\/dc:title><dc:creator>\n        Pamunuwa, Dinesh B.<\/dc:creator><dc:creator>\n        Elassaad, Shauki<\/dc:creator><dc:creator>\n        Tenhunen, Hannu<\/dc:creator><dc:subject>\n        TA Engineering (General). Civil engineering (General)<\/dc:subject><dc:description>\n        Closed form equations for second order transfer functions of general arbitrarily-coupled RC trees with multiple drivers are reported. The models allow precise delay and noise calculations for systems of coupled interconnects with guaranteed stability, and represent the minimum complexity associated with this class of circuits. The simplicity, accuracy and generality of the models make them suitable for use in early delay and noise planning of global signals in complex systems.<\/dc:description><dc:publisher>\n        IEEE Computer Society<\/dc:publisher><dc:date>\n        2003<\/dc:date><dc:type>\n        Contribution in Book\/Report\/Proceedings<\/dc:type><dc:type>\n        NonPeerReviewed<\/dc:type><dc:format>\n        application\/pdf<\/dc:format><dc:identifier>\n        http:\/\/eprints.lancs.ac.uk\/33246\/1\/24850835.pdf<\/dc:identifier><dc:relation>\n        http:\/\/dx.doi.org\/10.1109\/ICCAD.2003.32<\/dc:relation><dc:identifier>\n        Pamunuwa, Dinesh B. and Elassaad, Shauki and Tenhunen, Hannu (2003) Analytic modeling of interconnects for deep submicron circuits. In: 2003 International Conference on Computer-Aided Design (ICCAD'03). IEEE Computer Society, San Jose, California, pp. 835-842. ISBN 1-58113-762-1<\/dc:identifier><dc:relation>\n        http:\/\/eprints.lancs.ac.uk\/33246\/<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/dx.doi.org\/10.1109\/ICCAD.2003.32","http:\/\/eprints.lancs.ac.uk\/33246\/"],"year":2003,"topics":["TA Engineering (General). Civil engineering (General)"],"subject":["Contribution in Book\/Report\/Proceedings","NonPeerReviewed"],"fullText":"ABSTRACT\nClosed form equations for second order transfer functions of gen-\neral arbitrarily-coupled RC trees with multiple drivers are reported.\nThe models allow precise delay and noise calculations for systems\nof coupled interconnects with guaranteed stability, and represent\nthe minimum complexity associated with this class of circuits. The\nsimplicity, accuracy and generality of the models make them suit-\nable for use in early delay and noise planning of global signals in\ncomplex systems.\nINTRODUCTION\nAccurately analyzing the impact of delay and noise on perfor-\nmance and functionality has become very important in modern\nVLSI circuits. The majority of signal wires are typically very lossy,\nwith a high degree of capacitive coupling. This, together with\nsmaller signal rise times, results in heavy cross-talk, which couples\na noise voltage onto the victim net. The ability to put billions of\ntransistors on a single die has also imposed severe restrictions on\nthe computational complexity of noise and delay models used in an\niterative design flow. While more accurate modeling is necessary,\nthe sheer size of the systems prohibits expensive dynamic simula-\ntion. Consequently the subject of delay and noise modeling for\nVLSI circuits has received a vast amount of attention in the litera-\nture. The three attributes of accuracy, computational simplicity and\ngenerality, are however difficult to encompass in a single inte-\ngrated model. Most reported models that consider the effect of\ncross-talk on either use heuristics that are tailored for specific\ntopologies, or use multiple moments that make them expensive.\nOur contribution in this paper is as follows. We present new closed\nform models for generating second order transfer functions from\neach driver to the receiver in coupled trees such as shown in Fig. 1,\nwith guaranteed stability. These equations, which are derived from\na rigorous theoretical treatment, define the poles and zeros explic-\nitly in terms of the circuit elements. They are based on the first two\nmoments of the impulse response, and are linear in complexity,\nresulting in a saving over other explicit moment-based 2-pole-1-\nzero models. With our closed form models, the intuition and algo-\nrithmic simplicity of the Elmore delay are retained as will be\nshown. Our work can best be described as an extension of the work\nfor simple trees (an RC tree where all capacitors are grounded)\nreported in [8], to coupled trees (an RC tree consisting of simple\ntrees connected together via series capacitors - Fig. 1). Just as that\nmodel represents the minimum complexity associated with a sec-\nond order response for simple trees, our model represents the mini-\nmum complexity for a second order response for coupled trees,\nwhen no compromise is made on generality.\nRelated Work\nThere is a large body of literature that deals with delay and noise\nmodeling in simple and coupled trees. One of the most important\nmetrics for simple trees, the first moment of the impulse response,\nis known as the Elmore delay [7]. Its attraction is that it has\nunmatched algorithmic simplicity and elegance, explicitly matches\nthe circuit elements to an upper bound on the delay, and yet exhib-\nits good fidelity in interconnect optimization algorithms [22].\nWhen used as the dominant time constant however, its error can be\nas high as several hundred percent, especially for near-end nodes.\nAlso noise effects cannot be included, as a minimum of two time\nconstants are required to model a noise-voltage spike.\nTo consider the effect of noise, timing analyzers often use the con-\ncept of worst-case, average and best-case delay, using a switch fac-\ntor that takes the value of 2, 1 or 0 to modify the Elmore delay. The\ncapacitance for a line is modeled as the sum of two components,\none of which represents the capacitance to ground, and the other\nthe capacitance to adjacent nets. This second component is multi-\nplied by a factor whose value is dependent on whether the coupled\nnet is expected to be quiet or not, and if not, on the direction of\nswitching. This method of modeling is not accurate except in cer-\ntain very simple situations, such as uniform structures or simulta-\nneously switching nets, and indeed was recently shown to not even\nrepresent an upper bound on the delay [13]. A lot of research has\nfocused on simplified configurations of interest. In [15] the authors\nuse the first moment of the impulse response to generate single\npole responses for uniformly coupled RC lines, while [14] presents\na two pole response for a single section coupled \u03c0 circuit with arbi-\ntrary ramp inputs. They extend it to accommodate multiple seg-\nmented aggressors in [12], but the allowed topology is still very\nlimited.\nHistorically, a landmark paper that established bounds which serve\nas indicators for poor prediction by the Elmore model is [22]. Then\na stable approximation to the second order transfer function for\nsimple trees based on the first and second moment of the impulse\nresponse, and the sum of the open circuit time constants was pro-\nposed in [8] and extended to encompass charge sharing networks\nin [4]. Later, generic moment-based techniques that allowed the\ncalculation of an arbitrary number of poles for any kind of linear\ncircuit were developed in [20]. An implementation that is opti-\nmized for the tree like structures of interconnects was proposed in\n[21]. These techniques depend on the Pade approximation, which\ntypically requires 2q moments for a qth order approximation. Hence\nobtaining a second order model requires the calculation of four\nmoments. Reduced-order models based on the Arnoldi algorithm\n[23] match q moments to a qth order approximation. An example is\n[19], which gives reduced order models for linear systems. How-\never the nodal matrices of the system need to formed, and at least\none LU decomposition of the admittance matrix (which has a cubic\ncomplexity) is necessary. For initial analysis of complex systems\nwhich involves many iterations, such techniques are best avoided\nwhen possible.\nThere are several explicit 2-pole-1-zero models that have been\nAnalytic Modeling of Interconnects for Deep Sub-Micron Circuits\nDinesh Pamunuwa* Shauki Elassaad** Hannu Tenhunen*\n*Laboratory of Electronics and Computer Systems\nDept. of Microelectronics and Information Technology\nRoyal Institute of Technology, Kista 16440, Sweden\ndinesh|hannu@imit.kth.se\n**Cadence Berkeley Laboratories\nCadence Design Systems\nBerkeley, CA. 94704, USA\nshauki@cadence.com\n835\nPermission to make digital or hard copies of all or part of this work for\npersonal or classroom use is granted without fee provided that copies are\nnot made or distributed for profit or commercial advantage and that\ncopies bear this notice and the full citation on the first page. To copy\notherwise, to republish, to post on servers or to redistribute to lists,\nrequires prior specific permission and\/or a fee. \nICCAD\u201903, November 11-13, 2003, San Jose, California, USA.\nCopyright 2003 ACM 1-58113-762-1\/03\/0011 ...$5.00.\nProceedings of the International Conference on Computer Aided Design (ICCAD\u201903) \n1092-3152\/03 $ 17.00 \u00a9 2003 ACM \nreported in the literature. For simple trees, the analytic models of\n[8] represent the minimum computational complexity for a second-\norder model. Stable models based on the first three moments were\nproposed in [26] and [1]. Different approaches were suggested in\n[16] and [17], where the moments of the circuit are used to match a\nprobability density function (gamma distribution) to the impulse\nresponse and step response respectively. The underlying circuit\ntransfer function in these models have coincident poles with a real\nnumber order. In [18], the authors match the first two moments of\nthe circuit to a Weibull distribution. Alternate second order models\nfor the transfer function include those reported in [10] and [11],\nwhich involve generating equivalent circuits and are more suited\nfor highly inductive lines. \nNow a two (or higher) pole model cannot be solved explicitly for\nthe delay at a given threshold. Hence there are quite a few works\nthat attempt to garner more information than the first moment\n(Elmore delay) from the circuit, and match it explicitly to the delay\nvia some heuristic, such as in [10], [11], [26] and [1]. The authors\nof [2] present two delay metrics, one based on the first two\nmoments, and another based on an effective capacitance model\nwhich seeks to overcome the effect of resistive shielding that\nmakes the Elmore delay inaccurate at near-end nodes. Explicit\ndelay models for inductive lines were proposed in [9].\nNow as mentioned, it is often necessary to know the coupled noise\namplitude explicitly, to check for spurious errors caused by switch-\ning nets disturbing the logic state of a quiescent net. A single pole\nnoise metric for general circuits was proposed in [6]. Although\ncomputationally efficient, some simplifying assumptions in the\nformulation of the model may cause the results to be very pessi-\nmistic. Some of the works mentioned above which present models\nfor estimating the effect of noise on delay also report noise metrics\n([1], [15] and [12]). In [24] the authors use circuit transformations\nto simplify a general tree to a 2-\u03c0 model when analytic formulae\ncan be used, but intermediate steps require the calculation of\nadmittances at each branch point and the estimation of equivalent\ncapacitances which increase run time and impact on the accuracy.\nWhen dealing with multiple driver systems such as depicted in Fig.\n1, the concept of superposition is very useful, as the coupled RC\nnetwork is still a linear system. The effect of multiple aggressors\nswitching at different times can be estimated by considering one\ninput at a time with all other inputs grounded, and then adding up\nthe individual waveforms. The authors of [25] and [3] adopt such a\nmethodology, where an attempt is made to generate transfer func-\ntions from each driver to the receiver. However the only conces-\nsion to different inputs (and hence different charging\/discharging\npaths) is calculating a unique zero; the poles of the transfer func-\ntion for all switching events are the same, and are the two lowest\nfrequency poles of the system. They are estimated from the meth-\nodology proposed in [5], which gives closed form expressions for\nthe poles of systems with storage elements, and is a technique that\nhas long been used in analog design to estimate the bandwidth of\namplifiers. However using the same two lowest frequency poles in\nall of the transfer functions to model interconnect systems can give\nrise to large errors as the results will be skewed by the highest par-\nasitics in the coupled tree, regardless of their influence on the par-\nticular switching event.\nDERIVATION OF PROPOSED MODEL\nIn this paper we are only concerned with the generation of the\ntransfer function, which is the most important aspect of the model-\ning. Processing of the composite waveform and linearization of\nnon-linear elements can be accomplished in a variety of ways that\nare suitable for the specific application. Linearization can be\naccomplished either through substitution of equivalent linear ele-\nments or by using some form of convolution in the time domain;\nnon-ideal input waveforms can be similarly modelled. The task\nwhich dominates run time for any circuit with more than a few\nhundred nodes is computation of the moments. There is a clear\ndelineation between linearization of the actual circuit, and solving\nof the linearized circuit. We concentrate on the latter part here.\nConsider Fig. 1 which shows an example network comprising a\nvictim net and several aggressors coupled to the victim net through\nbanks of series capacitances. Such a network can be represented by\nan m input single output system as shown. In our methodology we\nuse linear superposition where the response for each input is con-\nsidered with all other inputs grounded, and all those responses are\nsummed up to generate the complete solution (as in all moment-\nbased approaches). Now in general, all the natural poles of the sys-\ntem contribute to the step response for any switching event where\nthe other inputs are grounded, but their relative contribution varies\ngreatly according to the zeros for a particular switching event.\nSince the transfer function is limited to two poles, it is important\nthat for each path the two-pole-single-zero model that best fits that\nparticular charging or discharging path is calculated.\nA coupled RC tree is characterized by a resistive path from the out-\nput node e to the forcing (victim) driver, and series capacitive ele-\nments to other (aggressor) drivers. Hence the output for the victim\ndriver switching will always change rails, while it will start and\nend at the same rail for an aggressor switching. Therefore the\ntransfer function characterizing the response to the victim switch-\ning has a zero on the negative part of the real axis:\nwhile that for an aggressor switching has a zero at the origin. \nComputation of Moments\nIn the following sections, expressions are presented for the first\nand second moment of the impulse response for general coupled\ntrees, which form the core of our models. The derivation is based\non Kirchoff\u2019s laws and integration by parts, and omitted due to\nlack of space. Fig. 1 can be referred to in the following descrip-\ntions. First our notation is described below.      \ne\nR1 R2\nR8 R9 R10\nR3\nR4\nR7R6\nR5\nCS8\nCS1\nCS2\nCS3\nCS4 CS5\nCS7CS6\nCS9 CS10\nCC1 CC3\nCC2\nVictimDriver\nAggressor Driver2\nAggressor Driver1\nTree B\nTree V\nTree A\n8 9 10\n1 2\n3\n4 5\n6 7\nFigure 1. Example of coupled RC tree\nu1(t)\nu2(t)\num(t)\ne\nlin\nea\nr \nsy\nst\nem\ne\nHv s( )\n1 s\u03c4z v,+\n1 s\u03c41 v,+( ) 1 s\u03c42 v,+( )\n----------------------------------------------------= (1)\nHai s( )\ns\u03c4z ai,\n1 s\u03c41 ai,+( ) 1 s\u03c42 ai,+( )\n-------------------------------------------------------= (2)\n836\nProceedings of the International Conference on Computer Aided Design (ICCAD\u201903) \n1092-3152\/03 $ 17.00 \u00a9 2003 ACM \nSuperscripts always refer to simple trees while subscripts always\nrefer to nodes, except in the definition for moments, where the\nsuperscript refers to the order of the moment. Rail voltages are nor-\nmalized to 0 and 1 and the expressions derived for a positive step,\nwithout loss of generality. The quantity (3) is the summation over\nthe reference tree tr, of resistance capacitance products at each\nnode k, where Rke is the shared resistance between node k and sink\ne, on the path from source to sink. The capacitance term  is the\ncapacitance between trees t\nr\n and ti at node k on tr. For example with\nreference to Fig. 1,  is CC1. If the second tree ti is omitted, the\ncapacitance refers to the total capacitance at node k; for example,\n is (CS1+CC1+CC2). In that case, the second tree would also be\nomitted in the name, i.e.  would be with respect to . This\nnotation is used because it makes for a compact description, and\nalso to make it consistent with that adopted in [8]. The lower case\nsubscript in  (e in this case), always refers to the output. If the\noutput node is omitted, the only quantity which is with respect to\nthe output, Rke, becomes Rkk.\nThe first moment of the impulse response at the receiver node e for\nthe victim driver switching is defined as:\nNow the impulse response is the first time derivative of the step\nresponse, for which an expression can be formulated by summing\nup the capacitor currents, or in other words by applying Kirchoff\u2019s\ncurrent and voltage laws. This can then be integrated by parts to\nyield (5), where a1, a2.. are the aggressors.\nThe second moment of the impulse response at the receiver node e\nis given by:\nFollowing the procedure described above in two stages, this can be\nshown to be equivalent to (7).\nFrom an approach identical to that in the former case, the first\nmoment of the impulse response at node e on the victim tree for\naggressor ai switching can be shown to be:\nThe second moment can also be calculated from an approach simi-\nlar to the former case, resulting in:\nThe expressions in (5), (7), (8), (9) and (19) described later, form\nthe basis of our proposed models.\nMatching Moments to Time Constants\nNow the interest is in generating the best two pole single zero\ntransfer function for the response at the output node for any given\nswitching event. The moments can be matched to the characteristic\ntime constants in the circuit by considering the power series expan-\nsion of ex in the definition of the Laplace transform. From the\nexpansion, the following identity can be observed:\nUsing (1), (10), (5) and (7), it can be seen that: \nNow additional information is necessary to solve for the three\nunknowns in (11) and (12). If the reciprocal pole sum is designated\nas \u03c4\nsum, these two equations can be combined to form the following\nquadratic, which yields two time constants.\nOther than \u03c4sum, the other metrics in the equation, the first and sec-\nond moment, are with reference to the victim. At this point, it is\nhelpful to look at the physical interpretation of the first and second\nmoments of the impulse response. The first moment always con-\nsiders resistances of the switching line, and either all capacitances\nconnected to the switching line (in the case of the victim driver\nswitching) or capacitances connecting it to a particular line (for the\nswitching of an aggressor driver). The second moment propagates\noutwards another level, and considers the resistances and capaci-\ntances of immediately adjacent lines as well. This intuition is valu-\nable in generating a solution with minimum computational\ncomplexity; namely, equation (13) can be used to generate the pole\ntime constants for all switching events, by using the appropriate\nreciprocal pole sum.\nCSk\np\ncapacitance to ground at node k in pth tree=\nCCkj\npq Ckj\npq\ncapacitance between node k on pth tree and node j on \nqth tree where first sub(super) script refers to reference tree\n= =\nCk\np total capacitance at node k on pth tree=\nRke\np\n shared resistance from source to nodes e and k on tree p=\n\u03d2k\nn\nnth moment of the impulse response at the kth node=\n\u03c4De\ntrti Rke\ntr Ck\ntrti\nk tr\u2208\n\u2211\n= (3)\nCk\ntrti\nC1\nvb\nC1\nv\nCk\ntr \u03c4De\nt\nr\n\u03c4De\n\u03d2e v,\n1\nthe\nv\nt( ) td\n0\n\u221e\n\u222b\n=\n(4)\n\u03d2e v,\n1 Rke\nv CSk\nv CCk\nva1 CCk\nva2\n\u2026+ + +[ ]\nk victim\u2208\n\u2211\n\u03c4De\nv\n= = (5)\n\u03d2e\n2\nt\n2he\nv\nt( ) td\n0\n\u221e\n\u222b\n= (6)\n\u03d2e v,\n2 2 Rke\nv Ck\nv\n\u03c4Dk\nv CCk\nva1\u03c4Dj\na1 v CCk\nva2\u03c4Dj\u2032\na2 v\n\u2026+ + +\n\uf8f3 \uf8fe\n\uf8f2 \uf8fd\n\uf8f1 \uf8fc\nk v\u2208\n\u2211\n2 \u03c4Ge\nv( )2 say= =\n(7)\n\u03d2e ai,\n1 Rke\nv CCk\nvai\nk v\u2208\n\u2211\n\u2013 \u03c4\u2013 De\nai\n= = (8)\n\u03d2e ai,\n2 2\u2013 Rke\nv Ck\nv\n\u03c4Dk\nvai CCk\nvai\u03c4Dj\nai\n+\n\uf8f3 \uf8fe\n\uf8f2 \uf8fd\n\uf8f1 \uf8fc 2 \u03c4Ge\nai\n\uf8ed \uf8f8\n\uf8eb \uf8f6\n2\n say\u2013=\nk v\u2208\n\u2211\n= (9)\n\u03d2n 1\u2013( )n\ns\nn\nn\nd\nd H s( )\ns 0=\n=\n(10)\n\u03c41 v, \u03c42 v, \u03c4z v,\u2013+ \u03c4De\nv\n= (11)\n\u03c41 v, \u03c4+ 2 v, \u03c4z v,\u2013( ) \u03c41 v, \u03c4+ 2 v,( ) \u03c41 v, \u03c42 v,\u2013 \u03c4Ge\nv( )2= (12)\n\u03c4\n2\n\u03c4sum\u03c4\u2013 \u03c4De\nv\n\u03c4sum \u03c4Ge\nv( )2\u2013+ 0= (13)\n2\u03c4D\ne\nv\n\u03c4\nsum\n\u03c4G\ne\nv\n\uf8ed \uf8f8\n\uf8eb \uf8f6\n2\n\u03c4D\ne\nv\u2044=\n\u03c4\nsum\n2 \u03c4D\ne\nv\n\u03c4D\ne\nv\n\uf8ed \uf8f8\n\uf8eb \uf8f6\n2\n\u03c4G\ne\nv\n\uf8ed \uf8f8\n\uf8eb \uf8f6\n2\n\u2013\u2013\nFigure 2.  Variation of stability function with \u03c4sum\n837\nProceedings of the International Conference on Computer Aided Design (ICCAD\u201903) \n1092-3152\/03 $ 17.00 \u00a9 2003 ACM \nNow first, since (13) can in general yield complex poles or a posi-\ntive pole, some care is necessary to ensure stability. Potential insta-\nbility can take one of two forms: if the sign under the radical in the\nsolution for the roots of (13) is negative, complex poles can result;\nif the magnitude of the square root is greater than the reciprocal\npole sum, a negative time constant results. Using these as limiting\nconditions, a methodology that always yields stable and accurate\nresults can be formulated.\nThe first limiting condition is that the magnitude of the square root\nshould be greater than the reciprocal pole sum:\nThis is true if the following holds: \nThat is to say, the reciprocal pole sum must be large enough.\nThe second limiting condition is that the sign under the radical\nshould be positive.\nWhen (A) is fulfilled the second term in (15) is negative, and hence\nthe inequality is not guaranteed. The left hand side (LHS) is a qua-\ndratic in \u03c4\nsum. By considering the first and second derivatives, this\nparabola can be shown to have a minimum at . The zero cross-\ning points are given by:\nObviously, both of these points are on the right hand side of the\nvertical axis. Now first, if the sign under the radical is negative, its\nroots are complex, or in other words LHS will never become nega-\ntive and (15) is always true. Hence for potential instability to\noccur, the following must always be true:\nUsing this property and the fact that both of these quantities are\npositive, it can easily be proved that: \nHence the equality of (A) is always to the left of the first zero\ncrossing point of LHS, and we have the shape of the parabola (Fig.\n2). Then for stability, \u03c4sum has to appear in the lightly hatched area,\nor to the right of the second zero-crossing point. If \u03c4sum is too small,\nthe sign under the radical is positive, but we end up with one nega-\ntive time constant. If \u03c4sum is situated between the zero crossing\npoints, we get complex poles. Finally if \u03c4sum is to the right of the\nsecond zero crossing point, represented by the darkly hatched area,\nagain a stable solution results. Hence from the zero crossing points,\nwe get the next condition:\nNow the stability conditions have been identified, the values for\n\u03c4sum that give the best response for the different switching events\ncan be derived. Firstly, for the case of the victim driver switching,\nsince all aggressors are grounded, the metric that gives the best\nsolution is the sum of the open circuit time constants with refer-\nence to the victim driver, which we shall call . This is simply the\nsummation of the products of all capacitances connected to the vic-\ntim line with the driving point resistance to each of those capaci-\ntors:\nwhich can be simplified to the following using (3):\nThis is a good approximation for the sum of the pole time con-\nstants [5], giving:\nSubstituting (20) for \u03c4sum in (11) and (13) result in the zero time\nconstant, and pole time constants respectively, for the victim\nswitching. Since >  and (17) always has to be true for insta-\nbility to occur, the following has to hold:\nTherefore (A) is always true and the only possible stability viola-\ntion in this case is (B); i.e. very occasionally, using  can result in\ncomplex poles. The physical interpretation of such an occurrence\nis that the sum of the open circuit time constants underestimates\nthe reciprocal pole sum, which has been unusually escalated by an\naggressor or aggressors with exceptionally high parasitics.\nBecause both exponential waveforms are either additive or sub-\ntractive unlike when an aggressor switches (where one is additive\nand the other is subtractive), the higher frequency pole does not\nhave a significant impact. In fact, this form of instability is usually\nan indication of a very low frequency pole which makes the predic-\ntion of the waveform straightforward. The simplest remedy there-\nfore is to consider a single pole response, with the pole time\nconstant being given by . This results in good accuracy as we\nshall show in the results section.\nSecondly, to solve for the poles and zeros associated with an\naggressor switching, (2), (10), (8) and (9), are combined to give: \nNow the zero time constant is available immediately in (22), and\ndividing (23) by (22) results in the reciprocal pole sum:\nThe pole time constants can be obtained by substituting (24) as \u03c4sum\nin (13). Now it can be seen from an inspection of the relevant\nexpressions that either of (A) or (B) can be violated. The solution\nwithout generating extra information about the circuit, is to accept\nthe next best approximation. That is to say if \u03c4sum is so small that it\nviolates (A), the simplest and most logical remedy is to increase it\nso that is in the lightly hatched area. When (B) is violated, if \u03c4sum is\nless than the minima, it should be decreased so that it falls into the\nlightly hatched region; if it is greater than the minima, it should be\n\u03c4sum \u03c4sum\n2 4\u2013 \u03c4sum\u03c4De\nv\n\u03c4Ge\nv( )2\u2013[ ]> (14)\n\u03c4sum \u03c4Ge\nv( )2 \u03c4De\nv\u2044> (A)\n\u03c4sum\n2 4 \u03c4Ge\nv( )2 \u03c4sum\u03c4\u2013 De\nv\n+ 0> (15)\n2\u03c4D\ne\nv\n\u03c4sum 2 \u03c4De\nv\n\u03c4De\nv( )2 \u03c4Ge\nv( )2\u2013\u00b1= (16)\n\u03c4De\nv( )2 \u03c4Ge\nv( )2> (17)\n\u03c4Ge\nv( )2 \u03c4De\nv\u2044 2 \u03c4De\nv\n\u03c4De\nv( )2 \u03c4Ge\nv( )2\u2013\u2013< (18)\n\u03c4sum 2 \u03c4De\nv\n\u03c4De\nv( )2 \u03c4Ge\nv( )2\u2013+>\n(B)\n\u03c4sum 2 \u03c4De\nv\n\u03c4De\nv( )2 \u03c4Ge\nv( )2\u2013\u2013   or<\n\u03c4p\nk\n\u03c4p\nk Rkk\nv CSk\nv Rkk\nv Rjj\na1\n+( )CCk\nva1 Rkk\nv Rjj\na2\n+( )CCk\nva2\n\u2026+ + +[ ]\nk v\u2208\n\u2211\n=\n\u03c4p\nk \u03c4D\nv\n\u03c4D\na1v \u03c4D\na2v\n\u2026+ + += (19)\n\u03c41 v, \u03c4+ 2 v, \u03c4p\nk\n= (20)\n\u03c4p\nk \u03c4D\ne\nv\n\u03c4p\nk \u03c4Ge\nv( )2 \u03c4De\nv( )2\u2044> (21)\n\u03c4p\nk\n\u03c4D\ne\nv\n\u03c4De\nai \u03c4z ai,=\n(22)\n\u03c4Ge\nai\n\uf8ed \uf8f8\n\uf8eb \uf8f6\n2\n\u03c4z ai,\n\u03c41 ai,\n\u03c42 ai,\n+( )= (23)\n\u03c4Ge\nai\n\uf8ed \uf8f8\n\uf8eb \uf8f6\n2\n\u03c4De\nai\u2044 \u03c41 ai, \u03c42 ai,+=\n(24)\n838\nProceedings of the International Conference on Computer Aided Design (ICCAD\u201903) \n1092-3152\/03 $ 17.00 \u00a9 2003 ACM \nincreased so that it falls into the darkly hatched region. Since the\ninequality will generate coincident poles which is not acceptable,\nthe exact value should be chosen so that it is slightly greater than\nor less than the equality, which can be achieved with a percentage\nfactor, such as 1%. Using this approach, the values that \u03c4sum should\ntake in the different cases are summarized in Table 1.\nOf the two, (A) being violated is by far the most common form of\ninstability. This occurs when the dominant poles for the victim and\nthe particular aggressor are very far apart on the frequency axis.\nPhysically, this translates to a situation where the receiver node is\ncharged extremely rapidly by a very strong aggressor (i.e. through\na relatively very small time constant), and decays with a very long\ntail, dictated by the much larger time constant of the victim. Such\nbehavior is common for far end coupling, as shown in Fig. 5. The\ninstability in the solution predicted by (13) occurs because the\nreciprocal pole sum given by (24) accurately reflects the high fre-\nquency nature of the poles in the aggressor\u2019s charging path, but \nand  reflect the much lower frequency content of the vic-\ntim\u2019s dominant poles, and the gap is too much to bridge. The solu-\ntion without generating extra information about the circuit, is to\naccept the next best approximation. That is to say, if \u03c4sum is so small\nthat it violates inequality (A), the simplest and most logical remedy\nis to increase \u03c4sum so that it is in the lightly hatched area of Fig. 2.\nSince the equality will generate coincident poles which is not\nacceptable, the exact value should be chosen so that it is slightly\ngreater than the equality, which can be achieved with a percentage\nfactor, such as 1%. This yields accurate results, because the inten-\ntion is to generate the best two pole single zero model; in other\nwords the poles and zero need not equate to actual poles and zeros\nof the system, and indeed should differ for a second order approxi-\nmation. Using the factor of 1% beyond the threshold which yields\ncoincident poles ensures that both the high and low frequency\nbehavior is matched. Following this approach, the values that \u03c4sum\nshould take in the different cases are summarized in Table 1. It\nmust be emphasized that conditions (A) and (B) are violated infre-\nquently, and when they do, the solutions proposed above result in a\nsimple yet accurate solution, which requires no extra information.\nCOMPUTATIONAL COMPLEXITY\nAn inspection of the first order metrics (5) and (8) clearly shows\ntheir similarity to the Elmore delay. These can be rearranged so\nthat the expressions are formulated as the sum of the products of\nresistance and downstream capacitance at each node on the path\nfrom source to sink. Because of the extra complexity introduced by\nthe coupling capacitances, it is necessary to keep track of individ-\nual coupling capacitances at each node. This can be achieved by\ncaching the sum of the downstream self (or total) capacitances, and\nthe sum of the individual downstream coupling capacitances with\nassociated root information at each node. Hence similar to the\nElmore delay, all downstream capacitances are cached from a full\ntree traversal, and then the output with respect to a particular node\ne only requires a traversal from the source to e. Also similar to the\nElmore delay, any changes to the tree require only that the capaci-\ntance changes be propagated to the upstream nodes, resulting in\nincremental computation being possible.\nThe final first order metric (19), the sum of the open circuit time\nconstants, requires that at each node in the summation, that node\nshould be treated as the output. Since the output node is therefore\nalways defined for a given victim net (unlike in the previous met-\nrics where the output can be any node in the tree), the incremental\ncomponents of the summation in  can be cached along with the\ndownstream capacitance. For example, in Fig. 1, node 4 should\nhave CS5 as downstream self capacitance, and R5\u2022CS5 as down-\nstream  information. Therefore this metric requires no extra tra-\nversals at all, but instead can be computed along with the\ndownstream capacitances. Again, changes to the tree require only\nthat the changes be propagated to upstream nodes.\nThe second order metrics require the capacitances at each node be\nweighted individually by a first order time constant, which is basi-\ncally expression (3) (in one of the three forms used) for the path\ndefined from the root of the relevant simple tree to the current\nnode, or its coupled counterpart. There are now three issues related\nto the complexity; \n1. How much work is needed to calculate the weights for the orig-\ninal tree?\n2. When the weights are known, how much work needs to be done \nto calculate the second order metrics with respect to any node?\n3. How much work needs to be done to recalculate all the weights \nonce a change or changes have been made to the tree?\nCalculation of the weights are demonstrated on the victim net of\nFig. 1. The weights required are different for the two expressions,\nand also different for types of capacitances (i.e coupling capaci-\ntance between two trees, or the total capacitance, at a particular\nnode), but always characterized in a generic sense by the expres-\nsion (3). Hence any technique that works for one will always work\nfor all the weights. For the sake of explanation, let us assume that\nthe weight consists of  where only self capacitances are con-\nsidered, and that the weights at nodes 1, 2 are \u03c41, \u03c42 etc. Then:\n\u03c4D\ne\nv\n\u03c4Ge\nai\n\uf8ed \uf8f8\n\uf8eb \uf8f6\n2\nTable 1. Different Values for \u03c4sum\nCondition Value of \u03c4sum\nno violation\n(B) violated N\/A (use a single pole \nresponse)\nno violation\n(A) violated:\n(B) violated:\n(B) violated:\nV\nic\ntim\n \nsw\nitc\nhi\nng \u03c4p\nk\ngg\nre\nss\no\nr \nsw\nitc\nhi\nn\ng\n\u03c4Ge\nai( )2 \u03c4Deai\u2044\n\u03c4sum \u03c4Ge\nv( )2 \u03c4Dev\u2044<\n0.99 \u03c4Ge\nv( )2 \u03c4Dev\u2044 0.02\n\u03c4De\nv\n\u03c4De\nv( )2 \u03c4Gev( )2\u2013\u2013[ ]\n+\n2 \u03c4De\nv\n\u03c4De\nv( )2 \u03c4Gev( )2\u2013\u2013[ ]\n\u03c4sum 2< \u03c4De\nv<\n0.01 \u03c4Ge\nv( )2 \u03c4Dev\u2044 1.98\n\u03c4De\nv\n\u03c4De\nv( )2 \u03c4\u03c4Gev( )2\u2013\u2013[ ]\n+\n2\u03c4De\nv\n\u03c4sum 2 \u03c4De\nv\n\u03c4De\nv( )2 \u03c4Gev( )2\u2013\n+[\n]\n< < 2.02 \u03c4De\nv\n\u03c4De\nv( )2 \u03c4Gev( )2\u2013\n+[\n]\n\u03c4p\nk\n\u03c4p\nk\n\u03c4Dk\nv\n\u03c41 R1 CS1 CS2 CS3 CS4 CS5+ + + +( )=\n839\nProceedings of the International Conference on Computer Aided Design (ICCAD\u201903) \n1092-3152\/03 $ 17.00 \u00a9 2003 ACM \nThe rest of the metrics are calculated similarly. Since the weight is\nalways with respect to the root, it is necessary to visit all the nodes\nonce after the downstream capacitance information has been stored\non the initial pass. (It is useful also, to store the upstream resistance\nat each node on this pass, so that in future visits to the node, the \u03c4\ninformation can be updated instantly as will be shown later.) All\nweights can be calculated in one pass by using the property that: \nwhere node m is situated on the path between the root and node n.\nAt branch points a depth first traversal of all child branches pre-\nserves the linearity of the traversal. Hence the weights for all nodes\ncan be calculated by one full tree traversal once the downstream\ncapacitance information has been stored.\nThe answer to the second question is straightforward; an inspection\nof (7) and (9) shows that the form the outer (second order) summa-\ntion takes is exactly similar to the inner (first order) summation,\nwhich is characterized in a generic way by the expression (3).\nTherefore it is possible to cache the downstream \u03c4\u2022C information\n(just as the downstream C information was cached for the first\norder metrics) and obtain the metrics from the root to a particular\nnode by visiting only the nodes along the path from the root to that\nnode.\nSo far two complete traversals have been necessary, one bottom-up\npass to store the downstream capacitance information, and one top-\ndown pass, beginning at the root to store the \u03c4 information (and the\nupstream resistance information, which is necessary later, to mini-\nmize computation when changes are made). Now to calculate the\nsecond order metric to any node, rearranging the terms in the sum-\nmation exactly as in the first order calculation allows the down-\nstream \u03c4\u2022C to be cached in one full traversal. Subsequently, the\nsecond order metric to any node can be calculated simply by visit-\ning all the nodes on the path from the root to that node. Again, if an\nimaginary second order metric is defined to consist only of the self\ncapacitances for simplicity of explanation, the value that would be\ncached at node 5 on the third (bottom-up) traversal would be\n\u03a45=\u03c45\u2022CS5, that at node 4 would be \u03a44=\u03a45+\u03c44\u2022CS4, and so on.\nHence three full traversals are necessary, one bottom-up pass to\nstore the downstream capacitance information, one top-down pass\nto store the weights, and a final bottom-up pass to store the down-\nstream \u03c4\u2022C information. None of these passes can be combined as\nthe necessary order is bottom-up, top-down and bottom-up.\nThe only remaining question is also the most important; if it is nec-\nessary to traverse the entire tree three times each time a change is\nmade, the incremental computation property is lost. However, after\na modification to a component, since only the resulting changes in\nthe stored values need to be accounted for, the calculations that\nrequired three traversals for the original tree can be accomplished\nin one traversal. Consider for example that the component value\nCS2 is changed to CS2'. This immediately causes:\n1. the downstream capacitance values cached at node 2 and all \nnodes upstream of node 2 to be stale;\n2. the cached weight (\u03c4) information at all nodes to be stale;\n3. the cached downstream \u03c4\u2022C information at all nodes to be stale.\nIn node 5 for example, the stored downstream capacitance is cur-\nrent (since the changed capacitor is upstream of it), but the weight\nand downstream \u03c4\u2022C information is stale. The old weight is:\nThe new weight is:\nThe change is:\nTherefore:\nThis is simply the change in the capacitance multiplied by the\nresistance that is upstream of the changed capacitance. This is true\nof all nodes downstream of node 2. At the nodes upstream of node\n2, the capacitance change is multiplied by the upstream resistance\nfrom that node. Similarly, the downstream \u03c4\u2022C information can\nalso be calculated and stored. Hence all stale information can be\nupdated by doing a single bottom-up traversal by considering the\ndifference introduced by the change to the component. First the\nchanged component is located, and its upstream resistance which\nhas been stored earlier, (R1+R2) is noted. Now starting from a leaf\nnode, say node 5 for example, a bottom up traversal is initiated,\nwhere both the weight information, and the downstream \u03c4\u2022C infor-\nmation is updated at once. From node 2 upwards, the downstream\ncapacitance also needs to be updated. Hence the original require-\nment of three passes for the virgin tree has been reduced to a single\npass. This principal also applies for resistor changes, and also mul-\ntiple component changes. That is, the effect of multiple changes\ncan be considered in one pass.\nRESULTS\nThe proposed metrics were tested on several different test beds\nwhich cover a wide range of topologies, by comparing the step\nresponse against a circuit simulator, Spectre. Due to space restric-\ntions, only the results pertaining to three which illustrate all the\ncorner cases are shown; the tree of Fig. 3 consisting of the victim,\nthree primary aggressors, and three secondary aggressors (repre-\nsenting an arbitrarily-coupled circuit, where inequality (B) is vio-\nlated when solving for the poles of the victim switching), the\ncircuit of Fig. 5 (with far end coupling where inequality (A) is vio-\nlated when solving for the poles of the aggressor switching), and\nthe tree of Fig. 6, with four primary and four secondary aggressors\n(representing global distributed interconnects). Shown in Fig. 4 are\nthe waveforms at node e of the circuit in Fig. 3, for each driver\nswitching. It can be seen that the model prediction is very close to\nthe Spectre simulation. Since the actual and predicted delay at a\nsingle threshold can agree very well, and still result in significant\ndeviations along the full waveform, we tested the accuracy at three\npoints along the waveform. For the victim switching, the thresh-\nolds are 10%, 50% and 90%, while for the aggressors they are\n25%, 100% and 25% of the peak amplitude. This is to ensure that\nthree points, with two being on either side of the peak, are tested.\nFor the aggressors, the error at different thresholds is given as a\nfraction of the pulse width between the first and last threshold. The\nwaveforms for the circuit of Fig. 5 are shown alongside, and those\nof Fig. 6 in Fig. 7.\n\u03c42 R1 CS1 CS2 CS3 CS4 CS5+ + + +( ) R2 CS2 CS3 CS4 CS5+ + +( )+=\n\u03c4Dn\nv\n\u03c4Dm\nv\n\u03c4Dm n\u2192\nv\n+=\n\u03c45 R1 CS1 CS2 CS3 CS4 CS5+ + + +( ) R2 CS2 CS3 CS4 CS5+ + +( )\nR4 CS4 CS5+( ) R5 CS5( )\n+\n+ +\n=\n\u03c45\n\u2032 R1 CS1 CS2\n\u2032 CS3 CS4 CS5+ + + +( ) R2 CS2\n\u2032 CS3 CS4 CS5+ + +( )\nR4 CS4 CS5+( ) R5 CS5( )\n+\n+ +\n=\n\u03c45\n\u2032\n\u03c45\u2013 R1 R2+( ) CS2\u2032 CS2\u2013( )=\n\u03c45\n\u2032\n\u03c45 R1 R2+( )+ CS2\n\u2032 CS2\u2013( )=\n840\nProceedings of the International Conference on Computer Aided Design (ICCAD\u201903) \n1092-3152\/03 $ 17.00 \u00a9 2003 ACM \nSUMMARY AND CONCLUSIONS\nClosed form expressions for the first two moments of the impulse\nresponse for general arbitrarily-coupled RC trees with multiple\ndrivers were presented, and used to generate stable and accurate\nsecond order approximations to the transfer function for any\nswitching event. The summation of all waveforms results in the\ncomplete response at the node of interest. These represent new\nmodels for estimating delay and noise in complex systems, with no\ncompromise on generality, and in fact subsume a lot of models that\naddress simplified structures.\nComputing the first two moments of the impulse response of the\ncircuit, and using them to generate a transfer function with two\npoles and one zero results in the matching of boundary conditions\nat time zero and infinity, and geometric properties -namely the area\nand first moment- of the actual waveform (step response) with the\nestimated waveform. The boundary conditions are already consid-\nered in the particular formulation of the transfer function (i.e. that\nthe waveform starts and ends on a specific rail). Hence matching\nthe first and second moment of the impulse response does not\ndefine a unique solution, as a two-pole-one-zero transfer function\nhas three unknowns. The necessary third equation is obtained by\nmatching circuit components to the reciprocal pole sum.\nFor the switching of the victim driver with the other inputs\ngrounded, the sum of the open circuit time constants provides a\ngood approximation to the reciprocal pole sum, and combining it\nwith the moments of the circuit for the victim driver switching has\na straightforward intuitive motivation. For the switching of an\naggressor driver, the geometric properties of the actual waveform\n(via the first and second moments of the impulse response for an\naggressor driver switching) are used to obtain the precise recipro-\ncal pole sum. Since the quadratic (13) obtained from the moments\nof the impulse response for the victim driver switching contain rel-\nevant information about the victim net, combining it with the\nreciprocal pole sum for an aggressor switching gives a good\napproximation to the best two-pole-single-zero model. This is a\nprocedure that works for the vast majority of circuits; however\nsome adjustments are necessary to the reciprocal pole sum for cer-\ntain pathological cases, which was analyzed in a systematic man-\nner, resulting in Table 1.\nThe proposed models have an Elmore-like flavour, and the algo-\nrithm outlined here allows the moments to be calculated with the\nabsolute minimum computational effort. However when the\nmoments are computed in a hierarchical manner, starting from the\nsolution to the DC circuit (a procedure known as path tracing) the\nsame refinements are possible. Our claim that these models repre-\nsent the minimum complexity associated with a two-pole-one-zero\nmodel for this class of circuits is based instead on the fact that the\nsum of the open circuit time constants is used instead of the third\nmoment, which results in a saving of at least one complete tree tra-\nversal (or equivalent arithmetic operations). Two moments can be\nused to map the response to a probability function, but then the\nmodel reverts to a coincident pole transfer function, which reduces\nthe degree of freedom, or the generality of the model.\nFor testing purposes, the models we proposed were used to derive\nthe time domain waveform for the step response. For the delay at a\ngiven threshold, the accuracy was found to be more than 90% on\naverage, even for complex circuits such as shown in Fig. 3 and Fig.\n6. The time at which the peak noise occurs was predicted with even\nbetter accuracy. The peak noise itself was predicted with an accu-\nracy of about 85% or higher in general. These figures cannot be\nclaimed as being hard bounds for all possible circuit topologies as\nit is always possible to create a circuit which is poorly represented\nby a two pole response. However the models did perform very well\nwhen tested over a wide range of circuits that are representative of\ncoupled interconnect structures in nano-meter technologies.\nFigure 3. Testbed 1: arbitrarily-coupled tree\n800\u2126\n150fF\n600fF\n700\u2126\n300fF\n50\u2126 150\u2126\n150fF\n600fF\n450fF\n300fF\n100\u2126 700\u2126\n300fF 150fF\n300fF\n150fF\n800\u2126 800\u2126\n600fF\n200\u2126\n850fF\n300fF 1pF\n100\u2126 400\u2126 400\u2126 400\u2126 400\u2126 150\u2126 300\u2126\n300\u21261k\u2126\n200fF100fF 100fF 100fF 1pF\n1pF 1pF\n500fF 500fF 500fF1pF\n500fF 500fF\n2k\u2126 1k\u2126 1k\u2126 1k\u2126\n10fF\n800\u2126 700\u2126 200\u2126\n600fF 550fF\n150fF 300fF 1pF\nTREE Ba\nTREE B\nVICTIM (V)\nTREE A\nTREE Aa\nTREE Ca\nTREE C\ne\nFigure 4. Waveforms for testbed 1 of Figure 3.\nFig.4.b Tree B Switching Fig.4.c Tree A Switching Fig.4.d Tree C SwitchingFig.4.a Victim Switching\n0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5\nx 10\u22128\n0\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\n0.8\n0.9\n1\nFirst Order Response of Victim\nModel\nSimulated\nError at 10%       = 3% \nError at 50%       = 1%\nError at 90%       = \u22121%\n0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5\nx 10\u22128\n0\n0.005\n0.01\n0.015\n0.02\n0.025\n0.03\n0.035\nResponse of Aggressor TREE1\nError at 25%        = 3% \nError at peak       =  1%\nError at 25%        = \u22121%\nPeak Noise Error = 7%\n0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1\nx 10\u22127\n0\n0.002\n0.004\n0.006\n0.008\n0.01\n0.012\n0.014\n0.016\n0.018\nResponse of Aggressor TREE2\nError at 25%        = 2% \nError at peak       = 2% \nError at 25%        = 0% \nPeak Noise Error = 4%\n0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5\nx 10\u22128\n0\n0.01\n0.02\n0.03\n0.04\n0.05\n0.06\nResponse of Aggressor TREE3\nError at 25%        = 2% \nError at peak       = 7%\nError at 25%        = 1%\nPeak Noise Error = \u22123%\nFigure 5. Example of far-end coupling\ne\n66\u2126\n69fF 26fF\n57fF\n100\u2126\n0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2\nx 10\u22129\n0\n0.02\n0.04\n0.06\n0.08\n0.1\n0.12\n0.14\n0.16\n0.18\n0.2\nModel\nSimulated\nError at 25%        = 1% \nError at peak       =  5%\nError at 25%        = \u22123%\nPeak Noise Error = 11%\nAggressor Switching\n0 0.2 0.4 0.6 0.8 1 1.2 1\n0\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\n0.8\n0.9\n1\nError at 10%       = 0% \nError at 50%       = 0% \nError at 90%       = 0% \nVictim Switching\nComponent values repeated\nwithin simple trees\nVICTIM\nAGGRESSOR\n841\nProceedings of the International Conference on Computer Aided Design (ICCAD\u201903) \n1092-3152\/03 $ 17.00 \u00a9 2003 ACM \nExplicit second-order noise models can be derived easily by equat-\ning the first derivative of the waveforms to zero. These can be used\nwith the single-pole bounds reported in [6] to gain an idea of the\nuncertainty of the estimate. Calculating the delay requires a few\niterations for a multiple-pole waveform, which presents a negligi-\nble overhead in comparison with the moment computation for any\nreasonably sized circuit. The simplicity and accuracy of these\nmodels combined with their generality, in comparison with other\nreported work, should make them useful in delay and noise estima-\ntions in complex systems, early in the design flow.\nREFERENCES\n[1] E. Acar, A. Odabasioglu, M. Celik, and L. T. Pileggi, \u201cS2P: A \nstable 2 pole RC delay and coupling noise metric,\u201d in Proc. \nGLSVLSI, 1999, pp. 60 -63.\n[2] C. J. Alpert, A. Devgan, and C. V. Kashyap, \u201cRC Delay met-\nrics for performance optimization,\u201d IEEE Trans. Comp.-Aided \nDesign of ICs and Sys., vol. 20, no. 5, pp. 571-582, May 2001.\n[3] L. H. Chen and M. Marek-Sadowska, \u201cEfficient closed-form \ncross-talk delay metrics,\u201d in Proc. ISQED, 2002, pp. 431-6.\n[4] C. Y. Chu and M. A. Horowitz, \u201cCharge-sharing models for \nswitch level simulation,\u201d IEEE Trans. Comp.-Aided Design,\nvol. CAD-6, no. 6, pp. 1053-1061, Nov. 1987.\n[5] B. L. Cochrun and A. Grabel, \u201cOn the determination of the \ntransfer function of electronic circuits,\u201d IEEE Trans. Circuit \nTheory, vol. CT-20, pp.16-20, Jan. 1973.\n[6] A. Devgan, \u201cEfficient coupled noise estimation for on-chip \ninterconnects,\u201d in Proc. ICCAD, 1997, pp. 147-153.\n[7] W. C. Elmore, \u201cThe transient response of linear damped cir-\ncuits,\u201d J. Appl. Physics, vol. 19, pp-55-63, Jan. 1948.\n[8] M. A. Horowitz, \u201cTiming models for MOS circuits,\u201d Ph.D. dis-\nsertation, Stanford Electronics Laboratories, Stanford Univer-\nsity, Stanford, CA, Jan. 1984.\n[9] Y. I. Ismail and E. G. Friedman, \u201cEffects of inductance on the \npropagation delay and repeater insertion in VLSI circuits,\u201d \nIEEE Trans. VLSI Systems, vol. 8, pp. 195-206, Apr. 2000.\n[10]A. B. Kahng and S. Muddu, \u201cTwo-pole analysis of intercon-\nnection trees,\u201d in Proc. MCMC, 1995, pp. 95-104.\n[11]\u2212, \u201cAn analytic delay model for RLC interconnects,\u201d IEEE\nTrans. Comp.-Aided Design of ICs and Sys., vol. 16, no. 12, \npp. 1507-14, Dec. 1997.\n[12]A. B. Kahng, S. Muddu, N. Pol, and D. Vidhani, \u201cNoise model \nfor multiple segmented coupled RC interconnects,\u201d in Proc.\nISQED, 2001, pp. 145-150.\n[13]A. B. Kahng, S. Muddu, and E. Sarto, \u201cOn switch factor based \nanalysis of coupled RC interconnects,\u201d in Proc. DAC, 2000, \npp. 79-84.\n[14]A. B. Kahng, S. Muddu, and D. Vidhani, \u201cNoise and delay \nuncertainty studies for coupled RC interconnects,\u201d in Proc. \nASIC\/SOC, 1999, pp. 3-8.\n[15]H. Kawaguchi and T. Sakurai, \u201cDelay and Noise Formulas for \nCapacitively Coupled Distributed RC Lines\u201d, in Proc. Asian \nand South Pacific DAC, 1998, pp. 35-43.\n[16]R. Kay and L. T. Pileggi, \u201cPRIMO: Probability interpretation \nof moments for delay calculation,\u201d in Proc. DAC, 1998, pp. \n463-8.\n[17]T. Lin, E. Acar, and L. T. Pileggi, \u201ch-gamma: An RC delay \nmetric based on a gamma distribution approximation to the \nhomogeneous response,\u201d in Proc. ICCAD, 1998, pp. 19-25.\n[18]F. Liu, C. Kashyap, and C. J. Alpert, \u201cA delay metric for RC \ncircuits based on the Weibull distribution,\u201d in Proc. ICCAD,\n2002, pp. 620-4.\n[19]A. Odabasioglu, M. Celik and L. T. Pileggi, \u201cPRIMA: Passive \nreduced-order interconnect macromodeling algorithm,\u201d IEEE \nTrans. Comp.-Aided Design of ICs and Sys., vol. 17, no. 8, pp. \n645-654, Aug. 1998.\n[20]L. T. Pillage and R. A. Rohrer, \u201cAsymptotic waveform evalua-\ntion for timing analysis,\u201d IEEE Trans. Comp.-Aided Design of \nICs and Sys., vol. 9, no. 4, pp. 352-366, Apr. 1990.\n[21]C. L. Ratzlaff, N. Gopal and L. T. Pillage, \u201cRICE: Rapid inter-\nconnect circuit evaluator,\u201d in Proc. DAC, 1991, pp. 555-60.\n[22]J. Rubinstein, P. Penfield, and M. Horowitz, \u201cSignal delay in \nRC tree networks,\u201d IEEE Trans. Comp.-Aided Design, vol \nCAD-2, no. 3, pp. 202-211, Jul. 1983.\n[23]L. M. Silveira, M. Kamon and J. White, \u201cEfficient reduced-\norder modeling of frequency-dependent coupling inductances \nassociated with 3-D interconnect structures,\u201d in Proc. DAC,\n1995, pp. 376-80.\n[24]M. Takahashi, M. Hashimoto, and H. Onodera, \u201cCrosstalk \nnoise estimation for generic RC trees\u201d, in Proc. ICCD, 2001, \npp. 110-6.\n[25]X. Tong and M. Marek-Sadowska, \u201cEfficient delay calculation \nin presence of crosstalk,\u201d in Proc. ISQED, 2000, pp. 491-7.\n[26]B. Tutuianu, F. Dartu and L. T. Pillage, \u201cAn explicit RC-circuit \ndelay approximation based on the first three moments of the \nimpulse response,\u201d in Proc. DAC, 1996, pp. 611-6.\n37fF50\u2126\n25fF\n50\u2126 37fF\n40fF\n50\u2126\n50fF\n100\u2126\n69fF\n26fF33fF 66\u2126\n37fF\n66\u2126 40fF\n50fF\n50fF\n50\u2126\n62\u2126\n37fF\n37fF 62\u2126\n37fF 40fF\nFigure 6. Testbed 2 (values repeated within simple trees)\nTREE1 TREE2\nTREE3 TREE4\nTREE0\n(VICTIM)\nTREE6\nTREE8\nTREE5\nTREE7\n25fF\nNode e\n0 1 2 3 4 5\nx 10\u22129\n0\n0.04\n0.08\n0.12\nError at 25%        = 1%\nError at peak       = 3%\nError at 25%        = 0%\nPeak Noise Error = 3%\nAgg. TREE6 Switching\n0 1 2 3 4 5\nx 10\u22129\n0\n0.04\n0.08\n0.12\nAgg. TREE4 Switching\nError at 25%        = 1%\nError at peak       = 1%\nError at 25%        = 0%\nPeak Noise Error = 5%\n0 1 2 3 4 5\nx 10\u22129\n0\n0.2\n0.4\n0.6\n0.8\n1\nError at 10%      = 1%\nError at 50%      = 0%\nError at 90%      = 0%\nVictim Switching\n0 1 2 3 4\n0\n0.01\n0.02\n0.03\n0.04\nAgg. TREE3 Switching\nError at 25%        = 4% \nError at peak       = \u22122%\nError at 25%        = \u22121%\nPeak Noise Error = 15%\n0 1 2 3 4\n0\n0.01\n0.02\n0.03\n0.04 Agg. TREE5 Switching\nError at 25%        = 4% \nError at peak       = \u22121%\nError at 25%        = \u22121%\nPeak Noise Error = 15%\nFigure 7. Waveforms for Testbed 2\nn sec\n842\nProceedings of the International Conference on Computer Aided Design (ICCAD\u201903) \n1092-3152\/03 $ 17.00 \u00a9 2003 ACM \n"}