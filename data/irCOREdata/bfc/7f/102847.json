{"doi":"10.1109\/ISCE.2007.4382222","coreId":"102847","oai":"oai:epubs.surrey.ac.uk:2396","identifiers":["oai:epubs.surrey.ac.uk:2396","10.1109\/ISCE.2007.4382222"],"title":"Hybrid WIMAX and DVB-H Emulator for Scalable Multiple Descriptions Video Coding Testing","authors":["Liew, CH","Worrall, S","Mota, MA","Navarro, A"],"enrichments":{"references":[],"documentType":{"type":1}},"contributors":[],"datePublished":null,"abstract":"This paper discusses the construction of a wireless emulator for the study of H.264 scalable video coding (SVC) and H.264 based scalable multiple description coding (SMDC) transmission. This emulator is constructed as a part of European SUIT project for examining the benefit of SVC and SMDC for digital TV broadcasting. The individual component of the emulator and the technique to generate error pattern files will be discussed in this paper. An example of the emulator usage is finally shown","downloadUrl":"","fullTextIdentifier":null,"pdfHashValue":null,"publisher":null,"rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:epubs.surrey.ac.uk:2396<\/identifier><datestamp>\n      2017-10-31T14:05:26Z<\/datestamp><setSpec>\n      74797065733D61727469636C65<\/setSpec><setSpec>\n      6469766973696F6E733D656E67616E64706879736963616C736369656E636573:656C656374726F6E6963656E67696E656572696E67:63637372<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/epubs.surrey.ac.uk\/2396\/<\/dc:relation><dc:title>\n        Hybrid WIMAX and DVB-H Emulator for Scalable Multiple Descriptions Video Coding Testing<\/dc:title><dc:creator>\n        Liew, CH<\/dc:creator><dc:creator>\n        Worrall, S<\/dc:creator><dc:creator>\n        Mota, MA<\/dc:creator><dc:creator>\n        Navarro, A<\/dc:creator><dc:description>\n        This paper discusses the construction of a wireless emulator for the study of H.264 scalable video coding (SVC) and H.264 based scalable multiple description coding (SMDC) transmission. This emulator is constructed as a part of European SUIT project for examining the benefit of SVC and SMDC for digital TV broadcasting. The individual component of the emulator and the technique to generate error pattern files will be discussed in this paper. An example of the emulator usage is finally shown.<\/dc:description><dc:type>\n        Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:format>\n        text<\/dc:format><dc:language>\n        en<\/dc:language><dc:identifier>\n        http:\/\/epubs.surrey.ac.uk\/2396\/1\/SRF002514.pdf<\/dc:identifier><dc:identifier>\n          Liew, CH, Worrall, S, Mota, MA and Navarro, A   Hybrid WIMAX and DVB-H Emulator for Scalable Multiple Descriptions Video Coding Testing   Consumer Electronics, 2007. ISCE 2007. IEEE International Symposium on.  1 -6 - 1 -6.      <\/dc:identifier><dc:relation>\n        http:\/\/ieeexplore.ieee.org\/xpls\/abs_all.jsp?arnumber=4382222<\/dc:relation><dc:relation>\n        10.1109\/ISCE.2007.4382222<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/epubs.surrey.ac.uk\/2396\/","http:\/\/ieeexplore.ieee.org\/xpls\/abs_all.jsp?arnumber=4382222","10.1109\/ISCE.2007.4382222"],"year":null,"topics":[],"subject":["Article","PeerReviewed"],"fullText":"Hybrid WIMAX and DVB-H Emulator for Scalable \nMultiple Descriptions Video Coding Testing \nC. H. Liew and S. Worrall \nCentre for Communication Systems Research \nUniversity of Surrey \nGuildford, Surrey, UK \n{c.liew, s.worrall}@surrey.ac.uk \nM. A. Mota and A. Navarro \nTelecommunications Institute \nUniversity of Aveiro \nAveiro, Portugal \n{mmota, navarro}@av.it.pt\n \n \nAbstract \u2014 This paper discusses the construction of a \nwireless emulator for the study of H.264 Scalable Video \nCoding (SVC) and H.264 based Scalable Multiple \nDescription Coding (SMDC) transmission. This \nemulator is constructed as a part of European SUIT \nproject for examining the benefit of SVC and SMDC for \ndigital TV broadcasting. The individual component of \nthe emulator and the technique to generate error pattern \nfiles will be discussed in this paper. An example of the \nemulator usage is finally shown. \nKeywords \u2013 WIMAX, DVB, Wireless, Emulator  \nI. INTRODUCTION \nHIS paper discusses a Hybrid WIMAX and DVB-H \nEmulator (HIWIDEM) for the testing of H.264 \nScalable Video Coding (SVC) [1][2] and Scalable \nMultiple Descriptions Coding (SMDC) streams over \nWIMAX and DVB wireless bearer for European \nScalable Ultra Fast Interactive TV (SUIT) project [3]. \nSVC is very suitable for fast and dynamic adaptation \nof video source bit rate. SVC utilizes concept of \ntemporal scalability, spatial scalability and SNR \nscalability which respectively provide ease for frame \nrate adaptation, video resolution adaptation and video \nquality adaptation to adjust the video source in \naccordance to device capability and channel \nbandwidth. Multiple Description Coding (MDC) [4] \nprovides extra error resilience against channel error by \ngenerating multiple streams (descriptions) of equal \nimportance from a single video stream. Individual \nstream can be transmitted over different channel and \ndecoded for independent viewing. However, if \nmultiple streams are received simultaneously, the \ndecoded quality is enhanced. Within the SUIT project, \nwe endeavor to facilitate best of the both SVC and \nMDC to guarantee high quality digital video \nbroadcasting by combining both schemes into a highly \nScalable MDC (SMDC) where each stream \n(description) is easily adaptable. The SUIT project will \neventually prototype an end-to-end solution of \nbroadcasting comprising encoder, playout with \ndynamic resource management, wireless transmission \nand decoder. However, it is important to examine SVC \nand SMDC in advance of the field trial in order gauge \nan estimation of performance in terms of video quality. \nThis will give an indication of achievable performance \nallowing the estimation of equipment requirements \nand actual transmission requirements e.g. power \nbudget and bit error rate acceptable. For this purpose, \nwe have constructed a Linux-based wireless emulator \ncalled HIWIDEM consisting of WiMAX and DVB-H \nbearers for realistic testing of SVC and SMDC. The \nHIWIDEM uses two stage processes: pre- simulation \nof error pattern files and real time packet processing \nusing packet filtering capability of Linux system. The \nfollowing sections will discuss HIWIDEM in detail. \nThe organization of the paper is as follows. Section II \nintroduces the simplified SUIT architecture. Based on \nthis basic model, the HIWIDEM is introduced in \nSection III. The inner working of HIWIDEM will be \nexplained. Section IV presents procedures to generate \nerror pattern traces. The simulated trace will be used in \nthe HIWIDEM emulator. Finally, Section V presents \nthe resulting emulator and example usage. \nII. SUIT ARCHITECTURE \nThis paper does not intend to describe the complete \narchitecture of SUIT system. The complete system \nwill be described in separate paper in this proceeding \n[5]. This section will only present a simplified \nimplementation of SUIT architecture and discusses the \nemulator accordingly. In Figure 1, two SMDC \ndescriptions are synchronously streamed from server  \nT \nAuthorized licensed use limited to: University of Surrey. Downloaded on April 16,2010 at 14:48:19 UTC from IEEE Xplore.  Restrictions apply. \n  \nFigure 1: Simplified implementation of SUIT architecture \nto DVB and WIMAX channel. Video files are pre-\nencoded using SMDC codec and stored on the \nstreaming server. In the server, a stream extractor will \nparse and extract SMDC descriptions or the NALUs \n(i.e. H.264 Network Abstraction Layer Units) [2] from \nthe pre-encoded video files. The NALUs encoded \nusing SMDC are scalable and can be truncated easily \nfor source bit rate adaptation. In particular, the SNR \nScalably (i.e. Fine-Grained Scalability) coded NALUs \ncan be truncated at any point of bitstream. NALUs are \nthen packetized into IP\/UDP\/RTP packets according to \nRFC3984 [6] and transmitted into the Ethernet in \nmulticast mode. In the simplified prototyped in Figure \n1, both descriptions are streamed from a single video \nserver, but routed to WIMAX and DVB-H transmitters \nwith an Ethernet Switch. A SUIT receiver (i.e. WLAN \nGateway) received and combined both SMDC streams \nfrom WIMAX and DVB-H back into a single H.264 \nAVC stream for transmission around the residence or \npublic hotspot. Because WIMAX and DVB-H uses \ndifferent frequency band, this creates frequency \ndiversity and is exploited by SMDC for robust digital \nTV transmission. Signal fade is unlikely to happen \nsimultaneously since WIMAX and DVB-H uses \ndifferent frequency band that are uncorrelated. Thus \nthe receiver will receive at least one stream with high \nprobability. As long as either one description is \nreceived, the receiver will be able to view the \ntransmitted program (if both description is received, \nthe video quality is enhanced). For the first stage of \ntesting, we have considered using an emulator called \nHIWIDEM in Figure 1 for controlled environment lab \ntesting before the actual field trials. HIWIDEM \nmodels the behavior of wireless channel and offers the \nflexibility of instantaneous parameters tuning (e.g. \nspeed, Signal to Noise Ratio (SNR), and Modulation \nand Coding Scheme (MCS)). HIWIDEM offers a \ncheap and fast way to test SVC and SMDC in a more \ncontrolled way. HIWIDEM is illustrated in detail in \nthe next section. \nIII. HIWIDEM \nHIWIDEM is divided into a two stage processes for \nchannel emulation: pre-simulation of error pattern files \nand real time packet processing stage (using error \npattern files). The pre-simulated error patterns are \nconsist of traces for different Signal to Noise Ratio \n(SNR) for different Modulation and Coding Scheme \n(MCS) generated using physical layer WIMAX and \nDVB-H baseband simulator. In summary, HIWIDEM \ncaptures incoming packet, process the packet, and \ndecide whether to drop or to a release the packet back \ninto the network according to the channel error \nbehavior. HIWIDEM is situated in a Linux-based PC \nwith four Ethernet cards as portrayed in Figure 1. Each \npair of Ethernet card is linked together as an Ethernet \nbridge for emulation of WIMAX and DVB bearer \nrespectively. The Ethernet bridge functionality is \nsupported natively in Linux-base operating system \nwith kernel version larger than 2.6.x. An open source \nscripts called bridge-utils [7] is used for setting up the \nbridge and linking of Ethernet interfaces. \nThe functions of the HIWIDEM are shown in Figure \n2. The emulator performs filtering on the incoming \npackets on the Ethernet Bridge. The packet filtering \nmodule utilizes iptable and netfilter software [8], also \nsupported natively in Linux system, to capture packets \nstreamed to different IP multicast address. The packet \nfiltering module examines the destination IP address  \nAuthorized licensed use limited to: University of Surrey. Downloaded on April 16,2010 at 14:48:19 UTC from IEEE Xplore.  Restrictions apply. \n Figure 2: Inner functions of HIWIDEM \nof packet and passes it to separate WIMAX and DVB-\nH queue for transmission. The packet filtering module \nis programmed using multi-threading API to process \nthe UDP sockets regularly. WIMAX and DVB-H \nprotocol layer processing engine will process the \nqueue regularly. A pre-set timer fires off periodically \nto trigger the processing engine, e.g. 5 ms for WIMAX \nTDD Frame. \nWIMAX and DVB processing engine perform \nunderlying protocol layer functions such as packet \nfragmentation, MAC encapsulation etc, according to \nthe WIMAX [9] and DVB-H [10] standard. For \nexample, WIMAX and DVB-H protocol layer \nprocessing are shown in Figure 3 and Figure 4. \nDummy protocol headers are inserted to construct \nsmaller source blocks for transmission. At this stage, \nthe source blocks are compared to pre-simulated error \npattern files to decide if the transmission is successful. \nIf the transmissions are not successful, the packet that \nis encapsulated in the source blocks will be dropped or \nreleased back into the network otherwise. The pre-\nsimulated error patterns are composed of traces of \ndifferent SNRs for different MCSs generated using \nphysical layer WIMAX and DVB baseband simulator. \nIV. TRACE GENERATION PROCEDURES \nThis section discusses the error pattern generation \nprocedures for both WIMAX and DVB-H. For both \ncases, simplification have been made in order to \nreduce the overhead and disk storage. This will allow \nfast execution of emulator without delay, i.e. pseudo- \nreal time, performing queue processing according to \nthe pre-set timer, e.g. 5ms for WIMAX. \n \nFigure 3: WIMAX protocol layer processing \n \n \nFigure 4: DVB-H protocol layer processing \n \nFigure 5 illustrates the WIMAX Time Division Duplex \n(TDD) physical layer transmission frame [9]. During \nthe error pattern generation, we have considered only \ndownlink (DL) sub-frame. Basically the DL Data \nBurst #x region is the allocated region for data \ntransmission. A data burst, as shown in the figure, \nallows the user to transmit data depending on the \nMAC scheduler allocation decision. Essentially the DL \nsub-frame is composed of a number of slots. For our \ncase, the DL sub-frame is composed of 30 subchannels \nx 13 time symbols = 390 slots. Each slot comprises 48 \nQAM symbols which allow a certain number of data \nbits depending on the Modulation and Coding Scheme \n(MCS) of the system. \nAuthorized licensed use limited to: University of Surrey. Downloaded on April 16,2010 at 14:48:19 UTC from IEEE Xplore.  Restrictions apply. \n Figure 5: WIMAX TDD frame \nIn order to reduce data storage requirements, the error \npattern files are saved in the form of a data slot error \npattern instead of a bit error pattern. The data slot error \npatterns are obtained by comparing all the data bits \nwithin original data slot to the transmitted data slot. If \nthere is any bit error within the data slot, it is then \ndeclared as an error. Note that we have not specifically \nassumed any IP packet size or data burst size within a \nphysical layer frame. Also, no MAC layer packet \nencapsulation procedure is performed. This decision \nwas made to allow flexibility on the choice of packet \nsize and the data throughput during video transmission \nsimulation. Data slots can be aggregated at later stage \nto different burst sizes for different data throughput. \nThe user of the error pattern trace will need to perform \nthe procedures shown in Figure 3. The error pattern \nfiles are generated with Partial Usage SubChannel \n(PUSC) Scheme, Duo-binary Convolutional Turbo \nCoding (CTC), and MCS of QPSK-1\/2, QPSK-3\/4, \n16QAM-1\/2, 16QAM-3\/4, 64QAM-1\/2. Maximum \nFEC code block size has been assumed for the trace \ngeneration. The maximum code block size is MCS \nmode dependent, as defined in the IEEE 802.16e-2005 \nstandard. OFDMA has been considered with 1024 FFT \nsize. The mobile speed is 60kmph. \nAs for DVB-H, the MPE-FEC transmission frame [10] \nis shown in Figure 6.  It consists of two sections: \nApplication Data Table (ADT) and Reed Solomon \nData Table (RSDT). ADT is used to carry data from a \nvideo service while RSDT is used to carry the Reed \nSolomon parity bytes for enhanced error resilience in \nmobile environment. ADT has fixed number of \ncolumns, i.e. 191, while the number of rows is variable \nto accommodate different service bit rate \nrequirements. The maximum number of rows is 1024  \n \nFigure 6: DVB-H transmission frame \nwhich capped the maximum burst size to (191+64) x \n1024 x 8 = ~ 2Mbit for each MPE-FEC frame. Each \nMPE-FEC frame is then fragmented and encapsulated \ninto MPEG-2 Transport Stream (TS) format before \nmapping it into DVB-T physical layer frame.  \nSimilar to WIMAX, simplification has been assumed \nto avoid overhead. This avoids the need to process \nerror pattern files at bit level which consumes more \ndata storage and computational resources for protocol \nlayer processing. We have assumed number of rows of \n512 and the IP packet size of 512 bytes. Thus each \npacket fits exactly into the each column of MPE-FEC \nframe. The packet error pattern generate by comparing \ntransmitted packet to the received packet. The packet \nis declared as error if the received MPE-FEC column \nthat carries the packet consists of error bytes. The error \npattern files have been generated using 64QAM-3\/4, \nFFT size of 2048, speed of 60 kmph and 140 kmph.  \nV. RESULTS AND DISCUSSIONS \nFigure 7 shows the resulting HIWIDEM wireless \nemulator for testing of SUIT architecture. HIWIDEM \nmodels the behavior of wireless channel and offers the \nflexibility parameters tuning. The Graphical User \nInterface (GUI) was programmed using cross platform \nQT Trolltech GUI C++ Toolkit [11]. We have used the \nopen source license free version for Linux platform. \nThe tunable parameters of HIWIDEM are Signal to \nNoise Ratio (SNR), Modulation and Coding Scheme \n(MCS) and it can easily be configured to capture \npackets of different SVC or SMDC streams by setting \nthe destination address of a stream. HIWIDEM offers \na cheap and fast way to test SVC and SMDC in a  \nAuthorized licensed use limited to: University of Surrey. Downloaded on April 16,2010 at 14:48:19 UTC from IEEE Xplore.  Restrictions apply. \n Figure 7: Hybrid WIMAX and DVB-H Emulator \n \n \nFigure 8: Usage Example for Video Testing \ncontrolled environment to allow simple debugging of \nalgorithms. This allows easy testing of video to give \nearly indication of quality and enables the adjustment \nand optimization of system and video codec. \nHIWIDEM has been successfully integrated into \nsimplified SUIT architecture shown in Figure 1. \nHowever, we only present a usage example for \nillustrative purposes. Figure 8 shows the example \nsetup testing platform. The laptop on the middle is \nused as the streamer while the laptop on the right is \nused as the receiving client.  The PC on the left is \nconfigured and installed with HIWIDEM software to \nperform wireless channel emulation. VideoLAN VLC \n[12] is used as the streamer and also the receiving \nclient. Figure 9 and Figure 10 shows the video \u201cLord \nof the Ring\u201d transmitted to the WIMAX channel and \nvideo \u201cLord of the Ring\u201d received. The SNR value of  \n \nFigure 9: VLC Streamed Video \u201cLord of the Ring\u201d \n \n \nFigure 10: VLC Received Video \u201cLord of the Ring\u201d \nwas set to relatively low value. As seen in Figure 10, \nthe quality of video degrades significantly due to \npacket drops as a result of poor channel conditions. \nObjective quality measurement using Peak Signal to \nNoise Ratio (PSNR) can be performed easily by \ncomparing transmitted and the received stream. \nThis paper has discussed an emulator called \nHIWIDEM for the testing of SVC and SMDC video \ntransmission over WIMAX and DVB channel. The \nbasic construct of Linux-based emulator has been \npresented. The technique for pre-simulated trace was \nalso discussed in view of reducing the data storage and \ncomputational requirement. Finally the resulting \nemulator and usage example of the HIWIDEM were \nillustrated. HIWIDEM, will be used in the project later \nto generate preliminary quality estimation of SVC and \nSMDC encoded video before the actual field trials. \nAuthorized licensed use limited to: University of Surrey. Downloaded on April 16,2010 at 14:48:19 UTC from IEEE Xplore.  Restrictions apply. \nACKNOWLEDGEMENT \nThe authors would like to acknowledge the funding of \nEuropean Commission (EC) for the Scalable Ultra-fast \ninteractive Interoperable Television (SUIT) project in \nwhich this work was performed within.  \nREFERENCES \n[1] T. Wiegand, G. J. Sullivan, G. Bjontegaard and A. \nLuthra, \u201cOverview of the H.264 \/ AVC Video Coding \nStandard\u201d, IEEE Transactions on Circuit and Systems \nfor Video Technology, vol 13, issue 7, July 2003 \n[2] H. Schwarx, D. Marpe and T. Wiegand, \u201cOverview of \nthe Scalable H.264 \/ MPEG4-AVC Extension\u201d , Proc. \nIEEE International Conference on Image Processing, \nAtlanta, GA, USA, Oct 2006 \n[3] EU IST FP6 Project: \u201cScalable, Ultra-fast and \nInteroperable Interactive Television (SUIT)\u201d, \nhttp:\/\/suit.av.it.pt \n[4] W. Yao, A. R. Reibman and Shunan Lin, \u201cMultiple \nDescription Coding for Video Delivery\u201d, Proceedings \nof the IEEE, vol 93, issue 1, Jan 2005 pages: 57- 70 \n[5] A. Navarro, \u201cSUIT - Scalable, Ultra-fast and \nInteroperable Interactive Television,\u201d ISCE 2007, \naccepted \n[6] S. Wenger, M. M. Hannuksela, T. Stockhammer, M. \nWesterlund, D. Singer, \u201cRTP Payload Format for H.264 \nVideo\u201d, RFC3984, Feb 2007 \n[7] Linux Bridge Utilities, http:\/\/linux-\nnet.osdl.org\/index.php\/Bridge \n[8] Netfilter Project,  http:\/\/www.netfilter.org \n[9] \u201cPart 16: Air Interface for Fixed and Mobile Broadband \nWireless Access Systems. Amendments 2: Physical and \nMedium Access Control Layers for Combined Fixed \nand Mobile Operation in Licensed Bands and \nCorrigendum 1,\u201d  Dec 2005 \n[10] ETSI EN 302 304, v.1.1.1, \u201cDigital Video \nBroadcasting: Transmission System for Handheld \nTerminals\u201d, ETSI standard, November 2004. \n[11] QT Trolltech GUI Programming Toolkit, \nhttp:\/\/trolltech.com\/products\/qt \n[12] VideoLAN VLC, http:\/\/www.videolan.org\/vlc\/ \n \nAuthorized licensed use limited to: University of Surrey. Downloaded on April 16,2010 at 14:48:19 UTC from IEEE Xplore.  Restrictions apply. \n"}