{"doi":"10.1142\/S0218127408021816","coreId":"54210","oai":"oai:eprints.lincoln.ac.uk:2688","identifiers":["oai:eprints.lincoln.ac.uk:2688","10.1142\/S0218127408021816"],"title":"Analysis and control of bifurcation and chaos in averaged queue length in TCP\/RED model","authors":["Nga, J. H. C.","Iu, H. H. C.","Ling, Bingo Wing-Kuen","Lam, H. K."],"enrichments":{"references":[{"id":929092,"title":"[2004a] &quot;Washout filter-aided RED control,&quot;","authors":[],"date":null,"doi":null,"raw":"Ranjan, P., La, R.J. & Abed, E.H. [2004a] &quot;Washout filter-aided RED control,&quot; Proc.","cites":null},{"id":929334,"title":"[2004b] \u201cNonlinear instabilities in TCP-RED,\u201d","authors":[],"date":null,"doi":"10.1109\/infcom.2002.1019266","raw":"Ranjan, P., Abed, E.H. & La, R.J. [2004b] \u201cNonlinear instabilities in TCP-RED,\u201d IEEE\/ACM Trans. on Networking, vol. 12, no. 6, pp. 1079-1092.","cites":null},{"id":929696,"title":"A control theoretic analysis of mixed TCP and UDP traffic under RED based on nonlinear dynamic model,\u201d","authors":[],"date":"2005","doi":"10.1109\/icita.2005.6","raw":"Wang, L., Li, Z.Z. & Chen, Y.P. [2005] \u201cA control theoretic analysis of mixed TCP and UDP traffic under RED based on nonlinear dynamic model,\u201d Proc. Third International Conference on Information Technology and Applications, Sydney, Australia, pp. 747-750.","cites":null},{"id":927382,"title":"A study of active queue management for congestion control,\u201d","authors":[],"date":"2000","doi":"10.1109\/infcom.2000.832541","raw":"Firoiu, V. & Borden, M. [2000] \u201cA study of active queue management for congestion control,\u201d Proc. of IEEE INFOCOM\u201900, Tel Aviv, Israel, pp. 1435-1444.","cites":null},{"id":926686,"title":"Chaos: An Introduction to Dynamical Systems.","authors":[],"date":"1996","doi":"10.1063\/1.882006","raw":"Alligood, K.T., Sauer, T.D. & Yorke, J.A. [1996] Chaos: An Introduction to Dynamical Systems. New York: Spring-Verlag.","cites":null},{"id":928086,"title":"Congestion avoidance and control,\u201d","authors":[],"date":"1988","doi":"10.1145\/52324.52356","raw":null,"cites":null},{"id":927122,"title":"Controlling bifurcation and chaos in internet congestion control model,","authors":[],"date":"2004","doi":"10.1142\/s0218127404010217","raw":"Chen, L., Wang, X.F. & Han, Z.Z. [2004] \u201cControlling bifurcation and chaos in internet congestion control model, \u201d International Journal of Bifurcation and Chaos, vol. 14, no. 5, pp.1863-1876.","cites":null},{"id":929933,"title":"Controlling bifurcation and chaos in Internet congestion control system,\u201d","authors":[],"date":"2002","doi":"10.1142\/S0218127404010217","raw":"Wang, X.F. [2002] \u201cControlling bifurcation and chaos in Internet congestion control system,\u201d Proc. Forth World Congress on Intelligent Control and Automation, Shanghai, P.R. China, pp. 573-576.","cites":null},{"id":928566,"title":"Instability of a tandem network and its propagation under RED,\u201d","authors":[],"date":"2004","doi":"10.1109\/tac.2004.829635","raw":"La, R.J. [2004] \u201cInstability of a tandem network and its propagation under RED,\u201d IEEE Trans. on Automatic Control, vol. 49, no. 6, pp1006-1011.","cites":null},{"id":930010,"title":"Modeling TCP\/RED: a dynamical approach,\u201d","authors":[],"date":"2005","doi":"10.1007\/10973509_11","raw":"Zhang, H., Liu, M., Vukadinovic, V. & Trajkovic, L. [2005] \u201cModeling TCP\/RED: a dynamical approach,\u201d in Complex Dynamics in Communication Networks, Springer Verlag Series: Understanding Complex Systems, pp. 251-278.","cites":null},{"id":928353,"title":"Modified TCP congestion avoidance algorithm,\u201d","authors":[],"date":"1990","doi":"10.3724\/sp.j.1087.2011.01472","raw":"Jacobson, V. [1990] \u201cModified TCP congestion avoidance algorithm,\u201d ftp:\/\/ftp.isi.edu\/end2end\/end2end-interest-1990.mail.","cites":null},{"id":929482,"title":"On dynamics of transport protocols","authors":[],"date":"2005","doi":"10.1103\/PhysRevLett.94.198702","raw":"Rao, N.S.V., Gao, J. & Chua, L.O. [2005] \u201cOn dynamics of transport protocols in widearea Internet connections,\u201d in Complex Dynamics in Communication Networks, Springer Verlag Series: Understanding Complex Systems, pp. 69-102.","cites":null},{"id":927867,"title":"Random early detection gateways for congestion avoidance,\u201d","authors":[],"date":"1993","doi":"10.1109\/90.251892","raw":"Floyd, S. & Jacobson, V. [1993] \u201cRandom early detection gateways for congestion avoidance,\u201d IEEE\/ACM Trans. Networking, vol. 1, no. 4, pp.397-413.","cites":null},{"id":926874,"title":"Recommendations on queue management and congestion avoidance in the internet,\u201d Request for comments (RFC)","authors":[],"date":"1998","doi":null,"raw":"Barden, B. et al. [1998] \u201cRecommendations on queue management and congestion avoidance in the internet,\u201d Request for comments (RFC) 2309.","cites":null},{"id":927617,"title":"RED: Discussion of setting","authors":[],"date":"1997","doi":null,"raw":"Floyd, S. [1997] \u201cRED: Discussion of setting parameters,\u201d http:\/\/www.icir.org\/floyd\/REDparameters.txt.","cites":null},{"id":928857,"title":"Stroboscopic model and bifurcations in TCP\/RED,\u201d","authors":[],"date":"2005","doi":"10.1109\/iscas.2005.1465023","raw":"Liu, M., Zhang, H. & Trajkovic, L. [2005] \u201cStroboscopic model and bifurcations in TCP\/RED,\u201d Proc. IEEE Int. Symp. Circuits and Systems, Kobe, Japan, pp. 2060-2063.","cites":null},{"id":18451254,"title":"TCP AIMD dynamics over Internet connections,\u201d","authors":[],"date":"2005","doi":"10.1109\/lcomm.2005.1375223","raw":"Gao, J. & Rao N.S.V. [2005] \u201cTCP AIMD dynamics over Internet connections,\u201d IEEE Communications Letters, vol. 9, pp. 4-6.   16 Jacobson, V. [1988] \u201cCongestion avoidance and control,\u201d ACM Computer Communication Review, vol. 18, no. 4, pp.314-329.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2008-08","abstract":"This paper studies the bifurcation and chaos phenomena in averaged queue length in a\\ud\ndeveloped Transmission Control Protocol (TCP) model with Random Early Detection\\ud\n(RED) mechanism. Bifurcation and chaos phenomena are nonlinear behaviour in network\\ud\nsystems that lead to degradation of the network performance. The TCP\/RED model used\\ud\nis a model validated previously. In our study, only the average queue size k q\\ud\n\u2212\\ud\nis\\ud\nconsidered, and the results are based on analytical model rather than actual measurements.\\ud\nThe instabilities in the model are studied numerically using the conventional nonlinear\\ud\nbifurcation analysis. Extending from this bifurcation analysis, a modified RED algorithm\\ud\nis derived to prevent the observed bifurcation and chaos regardless of the selected\\ud\nparameters. Our modification is for the simple scenario of a single RED router carrying\\ud\nonly TCP traffic. The algorithm neither compromises the throughput nor the average\\ud\nqueuing delay of the system","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/54210.pdf","fullTextIdentifier":"http:\/\/eprints.lincoln.ac.uk\/2688\/1\/letter_chao_TCPIP_bifurcation.pdf","pdfHashValue":"dd597a4b70a70d4175b3c759c578e126b3992393","publisher":"World Scientific Publishing Company \/ Centre for Nonlinear Studies (U Leeds)","rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:eprints.lincoln.ac.uk:2688<\/identifier><datestamp>\n      2013-03-13T08:39:45Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      7375626A656374733D6A6163735F48:6A6163735F48363230<\/setSpec><setSpec>\n      7375626A656374733D6A6163735F48:6A6163735F48333130<\/setSpec><setSpec>\n      74797065733D61727469636C65<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/eprints.lincoln.ac.uk\/2688\/<\/dc:relation><dc:title>\n        Analysis and control of bifurcation and chaos in averaged queue length in TCP\/RED model<\/dc:title><dc:creator>\n        Nga, J. H. C.<\/dc:creator><dc:creator>\n        Iu, H. H. C.<\/dc:creator><dc:creator>\n        Ling, Bingo Wing-Kuen<\/dc:creator><dc:creator>\n        Lam, H. K.<\/dc:creator><dc:subject>\n        H620 Electrical Engineering<\/dc:subject><dc:subject>\n        H310 Dynamics<\/dc:subject><dc:description>\n        This paper studies the bifurcation and chaos phenomena in averaged queue length in a\\ud\ndeveloped Transmission Control Protocol (TCP) model with Random Early Detection\\ud\n(RED) mechanism. Bifurcation and chaos phenomena are nonlinear behaviour in network\\ud\nsystems that lead to degradation of the network performance. The TCP\/RED model used\\ud\nis a model validated previously. In our study, only the average queue size k q\\ud\n\u2212\\ud\nis\\ud\nconsidered, and the results are based on analytical model rather than actual measurements.\\ud\nThe instabilities in the model are studied numerically using the conventional nonlinear\\ud\nbifurcation analysis. Extending from this bifurcation analysis, a modified RED algorithm\\ud\nis derived to prevent the observed bifurcation and chaos regardless of the selected\\ud\nparameters. Our modification is for the simple scenario of a single RED router carrying\\ud\nonly TCP traffic. The algorithm neither compromises the throughput nor the average\\ud\nqueuing delay of the system.<\/dc:description><dc:publisher>\n        World Scientific Publishing Company \/ Centre for Nonlinear Studies (U Leeds)<\/dc:publisher><dc:date>\n        2008-08<\/dc:date><dc:type>\n        Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:format>\n        application\/pdf<\/dc:format><dc:language>\n        en<\/dc:language><dc:identifier>\n        http:\/\/eprints.lincoln.ac.uk\/2688\/1\/letter_chao_TCPIP_bifurcation.pdf<\/dc:identifier><dc:identifier>\n          Nga, J. H. C. and Iu, H. H. C. and Ling, Bingo Wing-Kuen and Lam, H. K.  (2008) Analysis and control of bifurcation and chaos in averaged queue length in TCP\/RED model.  International Journal of Bifurcation and Chaos, 18  (8).   pp. 2449-2459.  ISSN 0218-1274  <\/dc:identifier><dc:relation>\n        http:\/\/dx.doi.org\/10.1142\/S0218127408021816<\/dc:relation><dc:relation>\n        10.1142\/S0218127408021816<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/eprints.lincoln.ac.uk\/2688\/","http:\/\/dx.doi.org\/10.1142\/S0218127408021816","10.1142\/S0218127408021816"],"year":2008,"topics":["H620 Electrical Engineering","H310 Dynamics"],"subject":["Article","PeerReviewed"],"fullText":" 1\nAnalysis and Control of Bifurcation and Chaos in \nAveraged Queue Length in TCP\/RED Model \n \nJ.H.C. Nga and H.H.C. IuP*P \nSchool of Electrical, Electronic and Computer Engineering,  \nThe University of Western Australia, Australia \nP\n*\nPherbert@ee.uwa.edu.au \n \nB.W.K. Ling and H.K. Lam \nDepartment of Electronic Engineering, Division of Engineering, King\u2019s College London, \nWC2R 2LS, United Kingdom \n \nReceived May 10, 2006; Revised November 23, 2006 \n \nThis paper studies the bifurcation and chaos phenomena in averaged queue length in a \ndeveloped Transmission Control Protocol (TCP) model with Random Early Detection \n(RED) mechanism. Bifurcation and chaos phenomena are nonlinear behaviour in network \nsystems that lead to degradation of the network performance. The TCP\/RED model used \nis a model validated previously. In our study, only the average queue size kq\n\u2212\n is \nconsidered, and the results are based on analytical model rather than actual measurements. \nThe instabilities in the model are studied numerically using the conventional nonlinear \nbifurcation analysis. Extending from this bifurcation analysis, a modified RED algorithm \nis derived to prevent the observed bifurcation and chaos regardless of the selected \nparameters. Our modification is for the simple scenario of a single RED router carrying \nonly TCP traffic. The algorithm neither compromises the throughput nor the average \nqueuing delay of the system.  \n \nKeywords: Congestion Control; Transmission Control Protocol; Random Early Detection; \nNonlinear phenomenon; Bifurcation; Chaos. \n \n1. Introduction \n \nThe unprecedented growth of Internet, in terms of size and traffic, has given rise to the \ncongestion control issue. Poor management of congestion may lead to a network being \npartly or fully inaccessible and degrade the performance of networking applications. \nTherefore, various approaches have been proposed over the years to address this issue. \nOne of the approaches is to control the congestion level at each router through active \nqueue management (AQM) mechanisms [Barden et al., 1998]. Random Early Detection \n(RED) mechanism is a widely deployed AQM algorithm. The goal of the RED \nmechanism, proposed by Floyd and Jacobson [Floyd et al., 1993], is to detect early signs \nof congestion and provide feedback by either dropping or marking their packets to the \nadaptive sources so that congestion can be avoided. The RED mechanism is conceptually \nsimple. However, the interaction between Transmission Control Protocol (TCP) and RED \nat the router\u2019s gateway has at times induced strange behaviour. Such behaviour has been \ngenerally recognized as nonlinear phenomena. They lead to instability of the system and \n 2\ndegradation of the network performance. An accurate model of the nonlinear phenomena \nin TCP\/RED systems is essential to investigate the problem [La, 2004], seek out the \nstability margins of the system and provide guidelines for selecting network system \nparameters and RED controller\u2019s parameters [Wang et al., 2005], or establish possible \nsolutions to the problem [Ranjan et al., 2004a].  \n \nThis paper studies the problem of bifurcation and chaos phenomena in averaged queue \nlength in a TCP\/RED model. Bifurcation and chaos are nonlinear behaviour in network \nsystems. The TCP\/RED model used is a model validated previously by Liu et al. [Liu et \nal., 2005] and the instabilities in the model are studied numerically using the \nconventional nonlinear bifurcation analysis [Ranjan et al., 2004b]. We also derive a \nmodified RED algorithm to control the observed bifurcation and chaos.   \n \nThe dynamics of the averaged queue size is important to the network engineers. The \ninformation may help understand and predict the dynamical behaviour of the network. In \naddition, it may help analyze the stability margins of the system and provide design \nguidelines for selecting network parameters and improving network robustness [Zhang et \nal., 2005]. \n \nThis paper is organized as follows: In Section 2, we describe the TCP congestion control \nand the RED algorithm. In Section 3, we briefly describe the TCP\/RED model under \ninvestigation. Section 4 explains the origin of the nonlinear phenomena in TCP\/RED \nmodels. The simulation results of bifurcation and chaos phenomena are presented in \nSection 5. Section 6 discusses the modified RED algorithm and section 7 presents the \nsimulation results. Section 8 presents the limitations of our model and Section 9 \nconcludes the investigation. \n \n2. TCP And RED Algorithms \n \n2.1.   TCP Congestion Control Algorithm \n \nThe transmission rate of a TCP connection is controlled by its congestion window (cwnd) \nsize at the sender end. The cwnd determines the number of segments to be sent to the \nreceiver end. The cwnd size is constantly adjusted to maximize the link utilization and to \navoid congesting the network with large bursts of data at the same time. To adjust the \nwindow size, TCP congestion control algorithms employ four algorithms: slow start, \ncongestion avoidance, fast retransmit, and fast recovery [Zhang et al., 2005; Allman et al., \n1999; Jacobson, 1988, 1990]. The algorithms are shown in Figure 1.  \n \n 3\n \nFig 1: Evolution of window size in TCP congestion control algorithms. \n \nFigure 2 is a simple topology of a TCP network. When a new connection is first \nestablished, the cwnd at the sender end is initialized to one segment. Upon receipt of \nevery segment, an acknowledgement (ACK) packet is sent by the receiver to the sender. \nUpon receipt of every ACK, the TCP sender increases the cwnd by one segment. Two \nsegments of data can now be sent. When each of those two segments is acknowledged (2 \nACKs received by the sender), the cwnd is increased to four. This is the slow start (SS) \nphase. TCP sender opens up the window exponentially, 1\u21922\u21924\u21928\u2192\u2026., etc. \n \nWhen cwnd exceeds a threshold ssthresh, the sender enters the congestion avoidance (CA) \nphase. During CA phase, cwnd is incremented by one segment size per round trip time \n(RTT), regardless of the number of ACKs received. TCP sender opens up the window \nlinearly, i.e. 1\u21922\u21923\u21924\u2026until it reaches the receiver\u2019s advertised window size (rwnd). \nA retransmission timer is set every time the sender sends a packet. A packet loss is \ndetected by the timeout mechanism if the timer expires before the receipt of the packet \nhas been acknowledged. In this case, the TCP sender adjusts its ssthresh and switches \nback to slow start phase.   \n \nFig 2: A simple topology of a TCP network. \n \nIn CA phase, upon receiving an out-of-order segment, TCP receiver generates an ACK, \nand immediately followed by a duplicate ACK. For each subsequent out-of-order \nsegment, the receiver generates a duplicate ACK. When three duplicate ACKS have been \nreceived by the sender, it is assumed that a segment has been lost. TCP sender halves the \nTCP \nreceiver \nTCP \nSender \nSegmented \nData \nACK \nRouter \n1 \nRouter \n2 \nRED algorithm \n 4\ncwnd and re-transmitting the lost segment without waiting for a retransmission timer to \nexpire. The algorithm is called the fast retransmit algorithm. \n \nUntil the retransmitted segment is received, receiver will continue to receive out-of-order \nsegments and generate duplicate ACKs to the sender. After fast retransmit sends the \nmissing segment, TCP sender increases its cwnd for each duplicate ACK received. Each \nduplicate ACK is an indication that one packet has reached the destination and the \nnumber of outstanding packets has decreased by one, and therefore, the TCP sender is \nallowed to increment its cwnd. This is the fast recovery algorithm. TCP switches back to \nCA phase when the retransmitted segment is received and a non-duplicate ACK is sent to \nthe sender. Further details of TCP congestion control algorithm are illustrated by Allman \net al. [Allman et al., 1999].  \n \n2.2.  RED Algorithm \n \nRED algorithm is a gateway based active queue management algorithm [Floyd & \nJacobson, 1993; Firoiu & Borden, 2000]. It calculates an exponentially weighted moving \naverage of the queue size at the router, as depicted in Figure 2. Upon arrival of each \nsegment, the RED gateway updates the average queue size as: \n \n11 .).1( +\n\u2212\n+\n\u2212 +\u2212= kqkqk qwqwq      (1) \nwhere \nqw  = exponential averaging weight or weight factor \nkq   = actual queue size in round k  \nkq\n\u2212\n  = average queue size in round k. \nDrop probability in round k+1, pBk+1 B is determined by the average queue size in round k+1, \n1+\n\u2212\nkq , by comparing it to the minimum queue threshold, qBmin B and the maximum queue \nthreshold, qBmaxB. The drop probability will in turns determine the next actual queue size. \nThe function of the drop probability is:  \n \n\u23aa\u23aa\n\u23aa\n\u23a9\n\u23aa\u23aa\n\u23aa\n\u23a8\n\u23a7\n\u2212\n\u2212\n\u2265\n\u2264\n=\n+\n\u2212\n+\n\u2212\n+\n\u2212\n+\notherwise,    .\n if                                   1\n if                                   0\n1\n1\n1\n1\nmax\nminmax\nmink\nmaxk\nmink\nk\np\nqq\nqq\nqq\nqq\np\n   (2) \nwhere pBmaxB is maximum packet drop probability [Floyd & Jacobson, 1993]. The function \nis depicted in Figure 3. \n \n 5\n \nFig 3: Drop probability as a function of average queue size.  \n \n3. TCP\/RED Model \n \nLiu et al. [Liu et al., 2005] have considered a simple network depicted in Figure 4 and \ndeveloped a nonlinear first-order discrete-time TCP\/RED model.  \n \nFig 4: Topology of the modeled and simulated network. \n \nThe nonlinear first-order discrete-time dynamic model of TCP\/RED is [Liu et al., 2005]:  \n \n\u23aa\u23aa\u23a9\n\u23aa\u23aa\u23a8\n\u23a7\n=\u2212+\u2212\n\u2260\u2212+\u2212\n=\n\u2212\n\u2212\n+\n\u2212\n0. if  )0,..max(.).1(\n 0 if  )0,..max(.).1(\n1\nkkq\nk\nk\nkq\nk\np\nM\ndCNrwndwqqw\np\nM\ndC\np\nKNwqqw\nq    (3) \nThe variables are: \nsize.  windowadvertised sreceiver' :\nsizepacket  : \ndelayn propagatio trip-round  : \nrouters  twoebetween thlink   theofcapacity  :\n roundin y probabilit drop : \n23constant  :\nsconnection TCP ofnumber  :\n weightaveraging lexponentiaor factor  weight : \n1 roundin  size queue average:1\nrwnd \nM\nd\nC\nkp\nK\nN\nw\nkq\nk\nq\nk ++\n\u2212\n \n \nThe proposed model takes into account the slow start and timeout events, and the average \nqueue size captures the queue dynamics in the RED gateway and reflects the dynamics of \nDestination Source \nBottleneck \nRouter 1 Router 2\npBkB \nkq\n\u2212\n \n1\npBmax B \nqBmax B qBminB \n 6\nthe TCP congestion control mechanism. With several assumptions made, the model has \nbeen validated by varying RED parameters and comparing with ns-2 simulations [Zhang \net al., 2005]. It has been shown by Floyd and Jacobson [Floyd & Jacobson, 1993] that the \nmodel follows the ns-2 simulations results closer than other models.  \n \n4. Bifurcation Analysis \n \nWe try to investigate bifurcations and chaos in the TCP\/RED model using the nonlinear \nanalysis in [Ranjan et al., 2004b]. By referring to the drop probability function in (2) and \nsubstituting the drop probability with average queue size at previous RTT period, kq\n\u2212\n, (3) \ncan be rewritten as  \n),(1 \u03c1kk qgq\n\u2212\n+\n\u2212 =            (4) \nwhere \u03c1 summarizes all parameters except for kq\n\u2212\n. \n \nThe average queue size at period k is mapped to the average queue size at period k + 1. \nThe fixed point of the map is an average queue size q* such that q* = g(q*, \u03c1). If the \nRED parameters are properly configured, the fixed point should fall between qBmin B and \nqBmaxB. Therefore, the only area of interest is the equation where the average queue size is \ngreater than q Bmin B. Deriving from (4), the fixed point of the map is  \n \n..\n*\n.*\nM\ndC\np\nKNq \u2212=      (5) \n \nThe corresponding p* is given as the square of the positive real solution of the \npolynomial  \n \n0)(. 23 =\u2212++ NMKCydCCMqy\nv\nMC\ninm    (6) \nwhere v = pBmaxB\/(qBmax B-qBmin B). \n \nLocal stability in the neighborhood of the fixed point is determined by the associated \neigenvalue of the map \n \n).),(*(\n)*.(.2\n..\n1\n),(\n2\n3\nmin\n\u03c1\u03c1\u03bb\n\u03c1\nq\nqqv\nKNw\nw\nqg\nq\nq\nq\nq\nk\nk\n=\n\u2212\n\u2212\u2212=\n\u2202\n\u2202 \u2212\n\u2212\n    (7) \n \nThe linear stability condition is  \n 7\n \n.1\n)*.(.2\n..\n1)),(*(\n2\n3\nmin\n<\n\u2212\n\u2212\u2212=\nqqv\nKNw\nwq qq\u03c1\u03c1\u03bb   (8) \n \nWhen the eigenvalue becomes -1, it gives a period-doubling bifurcation (PDB) leading to \noscillatory behaviour in the system [Alligood et al., 1996]. The critical value of wBqB for \nwhich the eigenvalue becomes -1 is the bifurcation point of the system and is expressed \nas  \n \n.\n)*(2\n1\n2\nmax\nminmax\n2\n3\nmin\np\nqq\nqq\nNK\nwcrit \u2212\n\u2212\n+\n=    (9) \n \n5. Bifurcation Analysis Simulation Results \n \n5.1.  Queue weight factor, wBq B as a bifurcation parameter \n \nWe investigate the bifurcation in the TCP\/RED model using the following system \nparameters and RED parameters:  \n \nTable 1: System parameters. \nParameter Value \nNumber of TCP connection, N 1 \nLink capacity, C (bit\/s) 1.54e+6 \nPacket size, M (bits) 4,000 \nRound trip propagation, d (s) 0.0228 \nConstant, K 23  \nReceiver\u2019s advertised window size, rwnd 1,000 \n \nTable 2: RED parameters. \nParameter Value\nMaximum drop probability, PBmaxB 0.1 \nMinimum queue threshold, qBmin B 5 \nMaximum queue threshold, qBmaxB 15 \n \nNumerically, using (4) and parameters from Table 1 and Table 2, the fixed point of the \nsystem is approximately 5.712 packets. The bifurcation point is determined by using (9) \nand is found to be approximately 0.1794. Eigenvalues have been calculated using (8) to \nverify the PDB, they are shown in Table 3 and Figure 5.  \n \n \n \n 8\nTable 3: Eigenvalues computed for various values of wBq B. \nwBq B \u03bb Legend \n0.1792 -0.9973 Close to PDB\n0.1793 -0.9984 Close to PDB\n0.1794 -0.9996 Close to PDB\n0.1795 -1.0007 After PDB \n \n \n-1.5 -1 -0.5 0 0.5 1-1 \n-0.8 \n-0.6 \n-0.4 \n-0.2 \n0 \n0.2 \n0.4 \n0.6 \n0.8 \n1 Period Doubling Bifurcation \nReal \nIm\nag\nin\ner\ny \n \n-1.1 -1.05 -1 -0.95 -0.9 -0.85 -0.8 -0.75 -0.7 -0.65 -0.6 \n-0.4\n-0.2\n0\n0.2\n0.4\n0.6\nPeriod Doubling Bifurcation \nReal\nIm\nag\nin\ner\ny  \n \n(a)                                                                    (b) \nFig 5: (a) Graphical presentation of real eigenvalues for wBqB = 0.14 to wBq B = 0.19, with \nstep 0.001, crossing the boundary of stability at -1 of the unit circle from right to left. \n(b) Zoom-in of (a). \n \nThe calculations of the non-linear analysis are further verified by the simulation results. \nWe use wBq B as the bifurcation parameter and vary it from 0.01 to 0.27, with step 0.001. \nThe simulated results in Figure 6 show that the system transits from stable fixed point to \nchaos via a period doubling route. The inception point of the period doubling route is the \nbifurcation point at approximately 0.18. Oscillation between 2 points (period-2 orbit) is \nobserved up to wBq B = 0.221 approximately. It then exhibits period doubling bifurcations \nand chaos. A small period-3 periodic window is embedded in the chaos region, when wBq B \n\u2208  [0.244, 0.246]. \n \n   \n(a)      (b) \n 9\nFig 6: (a) Bifurcation diagram with queue weight, wBqB as a parameter. (b) Zoom-in of the \nbifurcation diagram. \n \n5.2.  Minimum average queue threshold, qBmin B as a bifurcation parameter \n \nMinimum average queue threshold qBmin B is varied from 0 to 20, with step 0.001, for \nvarious values of wBq B. As recommended by Floyd [Floyd, 1997], qBmaxB is set to three times \nof qBmin B.  \n \n  \n(a)       (b) \nFig 7: Bifurcation diagrams with qBmin B as a parameter, with various values of wBq B. (a) wBq B = \n0.15. (b) wBqB = 0.20. \n \nWhen wBq B is not fine tuned, Figure 7 (a) and (b) show that the system bifurcates and enters \nchaos via a period doubling route, when qBmin B is set to be too small or too large. For wBq B = \n0.15, Figure 7 (a) shows that a small period-3 periodic window is observed in the chaos \nregion when qBmin B \u2208[17, 17.3]. For Figure 7(b), a period-3 periodic window is observed at \nqBmin B = 11.3. A period-13 periodic window is observed when qBmin B \u2208  [15.3, 17.3]. When \nqBmin B \u2208  [19.0, 20.0], a period-20 periodic window is found in the midst of chaos. There are \nother various periodic windows in the chaos region that are too small to be observed.  \n \nThe bifurcation and chaos reveal the limitation in setting RED parameters at the router. \nThe average queue threshold is not allowed to be set above a certain value and that may \nresult in desired throughput of the system to be compromised.  \n \n5.3.  Maximum drop probability, pBmax B as a bifurcation parameter \n \nMaximum drop probability pBmaxB is varied from 0.1 to 0.9, with step 0.001, for various \nvalues of wBq B. For both cases, the instability is observed mainly in the region where values \nof pBmaxB are high. This is expected as it is indicated by (2) that pBmaxB is proportional to the \nactual drop rate, and high drop rate will cause the system to become unstable.  \n \nHowever, according to Floyd [Floyd, 1997], it is not necessary to set or to optimize pBmaxB \nto anything higher than 0.1. In actual network, if a router is operating with steady-state \n 10\npacket drop rates of 20-30%, it is assumed that something is wrong in the engineering of \nthe network and it is not a region that we would like to optimize.  \n \n  \n(a)        (b) \n \nFig 8: Bifurcation diagrams with pBmaxB as a parameter, with various values of wBq B. (a) wBq B = \n0.03. (b) wBqB = 0.04. \n \n6. Modified RED algorithm \n \nAs RED parameters vary, the average queue size drifts from the fixed point, bifurcation \nand subsequently chaos occur. Therefore, if an average queue size can be set at the fixed \npoint, i.e., 1+\n\u2212\nkq  = q*, regardless of how the RED parameters change, it is possible to \navoid bifurcation and chaos phenomena in the averaged queue length.  \n \nHere, we will illustrate how it is possible to achieve that. First and foremost, the prior \nknowledge fixed point, q*\u2019s corresponding p* is required. It can be calculated using (6) at \nthe routers of the system.  \n \nInitially, we assume the averaged queue size is in stable period-1 steady state. There are \ndifferent routes to chaos in TCP dynamics [Liu et al., 2005; Chen et al., 2004; Wang, \n2002; Gao et al., 2005], period-doubling route to chaos remains a very common one. In \nthis particular case, the period-2 state is the first indication of oscillation. Once we detect \nthis periodic-2 pattern for a sufficiently large time window, we will invoke the modified \nRED algorithm.  \n \nIn simulation environment, the system parameters and queue weight, wBq B of (3) are \nconstant. Therefore 1+\n\u2212\nkq  is only dependent on the drop probability, pBkB. It is apparent in (3) \nthat if kp = p*, 1+\n\u2212\nkq  = q*.  Therefore, our approach is to set p constant in the bifurcating \nand chaotic regions, and to keep the average queue size at the fixed point, to avoid \nbifurcation and chaos. \n \n \n 11\n0)(. 23 =\u2212++ NMKCydCCMqy\nv\nMC\ninm  (p* is the square of the positive real solution)  \n \nIf  kk qq >+1  \n,11 =+k\u03b8  \nelse \n.01 =+k\u03b8  \n \nIf ...1010or...0101... 11 =\u2212++ lkk \u03b8\u03b8 , \nthen \npBk+1 B= p*, \nelse \n\u23aa\u23aa\n\u23aa\n\u23a9\n\u23aa\u23aa\n\u23aa\n\u23a8\n\u23a7\n\u2212\n\u2212\n\u2265\n\u2264\n=\n+\n\u2212\n+\n\u2212\n+\n\u2212\n+\notherwise,    .\n if                                   1\n if                                   0\n1\n1\n1\n1\nmax\nminmax\nmink\nmaxk\nmink\nk\np\nqq\nqq\nqq\nqq\np\n \nwhere  2>l  is an even constant.  \nFig 9: The modified RED algorithm. \n \nThe algorithm keeps track of the trend in average queue size. If oscillation occurs, \nthe p is fixed to p*, else p is calculated using (2) at the router. The idea of detecting \noscillation is proposed by Wang [Wang, 2002; Chen et al., 2004]. \n \n7. Modified RED Algorithm Simulation results \n \n7.1. Queue weight factor, wBq B as a bifurcation parameter \n \n  \n(a)          (b) \n 12\nFig 10: Bifurcation diagram of average queue size with respect to queue weight. (a) \nOriginal RED algorithm. (b) Modified RED algorithm. \n \n7.2. Minimum average queue threshold, qBmin B as a bifurcation parameter \n \n   \n(a)     (b) \n   \n(c)     (d) \nFig 11: Bifurcation diagram of average queue size with respect to minimum average \nqueue threshold. (a) Original RED algorithm (wBq B = 0.03). (b) Modified RED \nalgorithm (wBq B = 0.03). (c) Original RED algorithm (wBq B = 0.04). (d) Modified RED \nalgorithm (wBq B = 0.04). \n \n7.3. Maximum drop probability, pBmax B as a bifurcation parameter \n \n   \n(a)     (b) \n 13\n   \n(c)      (d) \nFig 12: Bifurcation diagram of average queue size with respect to drop probability. \n(a) Original RED algorithm (wBq B = 0.15). (b) Modified RED algorithm (wBq B = 0.15). (c) \nOriginal RED algorithm (wBq B = 0.2).  (d) Modified RED algorithm (wBq B = 0.2). \n \n7.4.Variation in system and RED parameters \n \nSystem and RED parameters are selected according to parameters in [Ranjan et al., \n2004b]:  \nTable 4: System parameters. \nParameter Value \nNumber of TCP connection, N 250 \nLink capacity, C (bit\/s) 75e+6\nPacket size, M (bits) 4,000 \nRound trip propagation, d (s) 0.1 \nConstant, K 23\nReceiver\u2019s advertised window size, rwnd 1,000 \n \n \nTable 5: RED parameters. \nParameter Value\nMaximum drop probability, PBmaxB 0.1 \nMinimum queue threshold, qBmin B 250 \nMaximum queue threshold, qBmaxB 750 \n \n 14\n   \n(a) (b) \nFig 13: Bifurcation diagram of average queue size with respect to the averaging \nweight. (a) Original RED algorithm. (b) Modified RED algorithm. \n \nThe results from Figures 10-13 indicate that the modified algorithm successfully \nprevents bifurcation and chaos regardless of the system and RED parameters chosen. \nIt thus removes the limitation in setting the parameters and restriction on desired \nthroughput of the system. \n \nThe algorithm does not change the dynamic in the transient region (when a \nconnection is first detected). The drop probability is only fixed to p* when the router \ndetects oscillation in the average queue in the \u201csupposed\u201d steady state. It does not \ntherefore suppress the throughput of the system. The algorithm has no negative \nimpact on the average queuing delay either.  \n \n8. Limitations \n \nThere are some limitations of our model: \n \n\u2022 Even if the average queue length kq\n\u2212\n is non-chaotic, there are no guarantees that \nthe actual queue length is not chaotic. \n \n\u2022 TCP has many parameters such as congestion window size and average packet \ndelay. Even if the average queue length kq\n\u2212\n is non-chaotic. The other parameters \ncould be. For example, if RED employs a fixed p*, the congestion window cwnd \ncould be chaotic for certain values. As shown in [Rao et al., 2005], the fixed \nrandom drop rate of packets could result in chaotic cwnd trajectories. Even under \nthe condition that the proposed RED modification stabilizes the average queue \nlength kq\n\u2212\n, TCP dynamics can be chaotic in terms of other parameters.   \n \n\u2022 TCP measurements collected over Internet connections could be much more \ncomplicated than traces considered in this paper because typically there are \nmultiple routers on TCP paths and there is significant amount of non-TCP traffic. \n 15\nIn fact, the measurements typically have both chaotic and stochastic components \n[Gao et al., 2005] even without random drops of RED routers. \n \n9. Conclusion \n \nPerformance of current version of RED is restricted by the traffic and its parameter \nconfiguration. Bifurcation and chaos phenomena in the averaged queue length are \nobserved when parameters are not set appropriately. It thus poses limitations in \nselecting parameters, as well as compromises throughput for stability.  \n \nOur modified RED algorithm succeeds in preventing bifurcation and chaos in the \naveraged queue length, regardless of parameters chosen. It removes the limitation of \nconfiguring parameters. The algorithm does not suppress the throughput and has no \nimpact on average queue delay either.   \n \nIn the original map of the system, to update the average queue size, a router requires \nknowledge of the system parameters such as number of connections, capacitor link, \nround trip propagation delay and packet size. Therefore, it should not be a concern \nthat the router is not capable of computing the corresponding drop probability of the \nfixed point, p* and the fixed point, q*, which rely on both the system and RED \nparameters. \n \nFor the future work, the system parameters are not constant and this may affect the \neffectiveness of the algorithm in a real network. The algorithm should be further \ntested and clarified in various environments to investigate its feasibility to be \ndeployed in the real network. \n \nReferences \n \nAlligood, K.T., Sauer, T.D. & Yorke, J.A. [1996] Chaos: An Introduction to Dynamical \nSystems. New York: Spring-Verlag. \nAllman, M., Paxson, V. & Steven, W. [1999] \u201cTCP congestion control,\u201d Request for \nComment (RFC) 2581. \nBarden, B. et al. [1998] \u201cRecommendations on queue management and congestion \navoidance in the internet,\u201d Request for comments (RFC) 2309. \nChen, L., Wang, X.F. & Han, Z.Z. [2004] \u201cControlling bifurcation and chaos in internet \ncongestion control model, \u201d International Journal of Bifurcation and Chaos, vol. 14, \nno. 5, pp.1863-1876. \nFiroiu, V. & Borden, M. [2000] \u201cA study of active queue management for congestion \ncontrol,\u201d Proc. of IEEE INFOCOM\u201900, Tel Aviv, Israel, pp. 1435-1444. \nFloyd, S. [1997] \u201cRED: Discussion of setting parameters,\u201d \nhttp:\/\/www.icir.org\/floyd\/REDparameters.txt. \nFloyd, S. & Jacobson, V. [1993] \u201cRandom early detection gateways for congestion \navoidance,\u201d IEEE\/ACM Trans. Networking, vol. 1, no. 4, pp.397-413. \nGao, J. & Rao N.S.V. [2005] \u201cTCP AIMD dynamics over Internet connections,\u201d IEEE \nCommunications Letters, vol. 9, pp. 4-6. \n 16\nJacobson, V. [1988] \u201cCongestion avoidance and control,\u201d ACM Computer \nCommunication Review, vol. 18, no. 4, pp.314-329. \nJacobson, V. [1990] \u201cModified TCP congestion avoidance algorithm,\u201d \nftp:\/\/ftp.isi.edu\/end2end\/end2end-interest-1990.mail. \nLa, R.J. [2004] \u201cInstability of a tandem network and its propagation under RED,\u201d IEEE \nTrans. on Automatic Control, vol. 49, no. 6, pp1006-1011. \nLiu, M., Zhang, H. & Trajkovic, L. [2005] \u201cStroboscopic model and bifurcations in \nTCP\/RED,\u201d Proc. IEEE Int. Symp. Circuits and Systems, Kobe, Japan, pp. 2060-2063. \nRanjan, P., La, R.J. & Abed, E.H. [2004a] \"Washout filter-aided RED control,\" Proc. \nAmerican Control Conference, Boston, USA, pp. 2966-2971. \nRanjan, P., Abed, E.H. & La, R.J. [2004b] \u201cNonlinear instabilities in TCP-RED,\u201d \nIEEE\/ACM Trans. on Networking, vol. 12, no. 6, pp. 1079-1092. \nRao, N.S.V., Gao, J. & Chua, L.O. [2005] \u201cOn dynamics of transport protocols in wide-\narea Internet connections,\u201d in Complex Dynamics in Communication Networks, \nSpringer Verlag Series: Understanding Complex Systems, pp. 69-102. \nWang, L., Li, Z.Z. & Chen, Y.P. [2005] \u201cA control theoretic analysis of mixed TCP and \nUDP traffic under RED based on nonlinear dynamic model,\u201d Proc. Third International \nConference on Information Technology and Applications, Sydney, Australia, pp. 747-\n750.  \nWang, X.F. [2002] \u201cControlling bifurcation and chaos in Internet congestion control \nsystem,\u201d Proc. Forth World Congress on Intelligent Control and Automation, \nShanghai, P.R. China, pp. 573-576. \nWolfram Research [1999] \u201cBifurcation,\u201d \nhttp:\/\/www.mathworld.wolfram.com\/Bifurcation.html. \nZhang, H., Liu, M., Vukadinovic, V. & Trajkovic, L. [2005] \u201cModeling TCP\/RED: a \ndynamical approach,\u201d in Complex Dynamics in Communication Networks, Springer \nVerlag Series: Understanding Complex Systems, pp. 251-278. \n \n \n \n \n"}