{"doi":"10.4204\/EPTCS.2.3","coreId":"196872","oai":"oai:lra.le.ac.uk:2381\/9077","identifiers":["oai:lra.le.ac.uk:2381\/9077","10.4204\/EPTCS.2.3"],"title":"Towards Activity Context using Software Sensors","authors":["Pathan, Kamran Taj","Reiff-Marganiec, Stephan"],"enrichments":{"references":[{"id":43674400,"title":"A context modeling survey. In: Workshop on Advanced Context Modelling, Reasoning and Management as part of UbiComp.","authors":[],"date":"2004","doi":null,"raw":"T. Strang & C. Linnhoff-Popien (2004): A context modeling survey. In: Workshop on Advanced Context Modelling, Reasoning and Management as part of UbiComp.","cites":null},{"id":43674378,"title":"A survey on context-aware systems.","authors":[],"date":"2007","doi":"10.1504\/ijahuc.2007.014070","raw":"M. Baldauf, S. Dustdar & F. Rosenberg (2007): A survey on context-aware systems. International Journal of Ad Hoc and Ubiquitous Computing 2(4), pp. 263\u2013277.","cites":null},{"id":43674386,"title":"A translation approach to portable ontology specifications.","authors":[],"date":"1993","doi":"10.1006\/knac.1993.1008","raw":"T. R. Gruber (1993): A translation approach to portable ontology specifications. KNOWLEDGE ACQUISITION 5, pp. 199\u2013199.","cites":null},{"id":43674384,"title":"Abowd (2000): Towards a Better Understanding of Context and Context-Awareness. In:","authors":[],"date":null,"doi":"10.1007\/3-540-48157-5_29","raw":"A. K. Dey & G. D. Abowd (2000): Towards a Better Understanding of Context and Context-Awareness. In: CHI 2000 Workshop on the What, Who, Where, When, and How of Context-Awareness.","cites":null},{"id":43674398,"title":"Activities, context and ubiquitous computing.","authors":[],"date":"2003","doi":"10.1016\/s0140-3664(02)00251-7","raw":"P. Prekop & M. Burnett (2003): Activities, context and ubiquitous computing. Computer Communications 26(11), pp. 1168\u20131176.","cites":null},{"id":43674387,"title":"An Ontology-based Context Model in Intelligent Environments. In:","authors":[],"date":"2004","doi":"10.1109\/percomw.2004.1276898","raw":"T. Gu, X. H. Wang, H. K. Pung & D. Q. Zhang (2004): An Ontology-based Context Model in Intelligent Environments. In: Proceedings of Communication Networks and Distributed Systems Modeling and Simulation Conference, 2004.","cites":null},{"id":43674393,"title":"Bedford-Roberts & Hewlett-Packard Laboratories","authors":[],"date":"1997","doi":null,"raw":"R. Hull, P. Neaves, J. Bedford-Roberts & Hewlett-Packard Laboratories (1997): Towards Situated Computing. HP LABORATORIES TECHNICAL REPORT HPL . K.T. Pathan & S. Reiff-Marganiec 9","cites":null},{"id":43674399,"title":"Context-aware computing applications. In:","authors":[],"date":"1994","doi":"10.1109\/wmcsa.1994.16","raw":"B. Schilit, N. Adams & R. Want (1994): Context-aware computing applications. In: Mobile Computing Systems and Applications, 1994. Proceedings., Workshop on. pp. 85\u201390.","cites":null},{"id":43674394,"title":"Context-Aware Pervasive Systems: Architectures for a New Breed of Applications.","authors":[],"date":"2006","doi":"10.1201\/9781420013498","raw":"S. Loke (2006): Context-Aware Pervasive Systems: Architectures for a New Breed of Applications. Auerbach Pub.","cites":null},{"id":43674377,"title":"Cyberguide: A mobile context-aware tour guide.","authors":[],"date":"1997","doi":"10.1145\/236387.236412","raw":"G. D. Abowd, C. G. Atkeson, J. Hong, S. Long, R. Kooper & M. Pinkerton (1997): Cyberguide: A mobile context-aware tour guide. Wireless Networks 3(5), pp. 421\u2013433.","cites":null},{"id":43674390,"title":"Generating Context Management Infrastructure from Context Models. In:","authors":[],"date":"2003","doi":"10.1007\/3-540-36389-0_17","raw":"K. Henricksen, J. Indulska & A. Rakotonirainy (2003): Generating Context Management Infrastructure from Context Models. In: 4th International Conference on Mobile Data Management (MDM), Industrial Track Proceedings. pp. 1\u20136.","cites":null},{"id":43674388,"title":"Gustavsen (2002): Condoran application framework for mobility-based context-aware applications. In:","authors":[],"date":null,"doi":null,"raw":"R. M. Gustavsen (2002): Condoran application framework for mobility-based context-aware applications. In: Proceedings of the Workshop on Concepts and Models for Ubiquitous Computing.","cites":null},{"id":43674379,"title":"Identification and Modeling of Contexts for Different Information Scenarios in Air Traffic. Technische Universita\u00a8t","authors":[],"date":"2003","doi":null,"raw":"J. Bauer, R. D. Kutsche & R. Ehrmanntraut (2003): Identification and Modeling of Contexts for Different Information Scenarios in Air Traffic. Technische Universita\u00a8t Berlin, Ma\u00a8rz .","cites":null},{"id":43674401,"title":"Incontext: A pervasive and collaborative working environment for emerging team forms. In: Applications and the Internet,","authors":[],"date":"2008","doi":"10.1109\/saint.2008.70","raw":"H.L. Truong, S. Dustdar, D. Baggio, S. Corlosquet, C. Dorn, G. Giuliani, R. Gombotz, Y. Hong, P. Kendal, C. Melchiorre et al. (2008): Incontext: A pervasive and collaborative working environment for emerging team forms. In: Applications and the Internet, 2008. SAINT 2008. International Symposium on. pp. 118\u2013125.","cites":null},{"id":43674389,"title":"Modeling Context Information in Pervasive Computing Systems.","authors":[],"date":"2002","doi":"10.1007\/3-540-45866-2_14","raw":"K. Henricksen, J. Indulska & A. Rakotonirainy (2002): Modeling Context Information in Pervasive Computing Systems. LECTURE NOTES IN COMPUTER SCIENCE , pp. 167\u2013180.","cites":null},{"id":43674396,"title":"Notes on Formalizing Context. In:","authors":[],"date":"1993","doi":null,"raw":"J. McCarthy (1993): Notes on Formalizing Context. In: INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, 13. LAWRENCE ERLBAUM ASSOCIATES LTD, pp. 555\u2013555.","cites":null},{"id":43674385,"title":"Placing Search in Context: The Concept Revisited.","authors":[],"date":"2002","doi":"10.1145\/503104.503110","raw":"LEV FINKELSTEIN, E. GABRILOVICH, Y. MATIAS, E. RIVLIN, Z. SOLAN, G. WOLFMAN & E. RUPPIN (2002): Placing Search in Context: The Concept Revisited. ACM Transactions on Information Systems 20(1), pp. 116\u2013131.","cites":null},{"id":43674392,"title":"Retschitzegger (2003): Contextawareness on mobile devices-the hydrogen approach. In: System Sciences,","authors":[],"date":"2003","doi":"10.1109\/hicss.2003.1174831","raw":"T. Hofer, W. Schwinger, M. Pichler, G. Leonhartsberger, J. Altmann & W. Retschitzegger (2003): Contextawareness on mobile devices-the hydrogen approach. In: System Sciences, 2003. Proceedings of the 36th Annual Hawaii International Conference on. p. 10.","cites":null},{"id":43674402,"title":"The Active Badge Location System.","authors":[],"date":"1992","doi":"10.1145\/128756.128759","raw":"ROY WANT, A. HOPPER & V. F. J. GIBBONS (1992): The Active Badge Location System. ACM Transactions on Information Systems 10(1), pp. 91\u2013102.","cites":null},{"id":43674395,"title":"The Computer for the 21st Century.","authors":[],"date":"1991","doi":"10.1038\/scientificamerican0991-94","raw":"W. Mark (1991): The Computer for the 21st Century. Scientific American 265(3), pp. 94\u2013104.","cites":null},{"id":43674380,"title":"The Stick-e Document: A Framework for Creating Context-aware Applications.","authors":[],"date":"1995","doi":null,"raw":"P. J. Brown (1995): The Stick-e Document: A Framework for Creating Context-aware Applications. ELECTRONIC PUBLISHING-CHICHESTER- 8, pp. 259\u2013272.","cites":null},{"id":43674397,"title":"Towards a model of context for case-based diagnostic problem solving.","authors":[],"date":"1997","doi":null,"raw":"P. O\u00a8ztu\u00a8rk & A. Aamodt (1997): Towards a model of context for case-based diagnostic problem solving. Context-97; Proceedings of the , pp. 198\u2013208.","cites":null},{"id":43674381,"title":"User interactions with everyday applications as context for just-in-time information access. In:","authors":[],"date":"2000","doi":"10.1145\/325737.325776","raw":"J. Budzik & K. J. Hammond (2000): User interactions with everyday applications as context for just-in-time information access. In: Proceedings of the 5th international conference on Intelligent user interfaces. ACM New York, NY, USA, pp. 44\u201351.","cites":null},{"id":43674382,"title":"Using OWL in a Pervasive Computing Broker. Defense Technical Information Center.","authors":[],"date":"2005","doi":null,"raw":"H. Chen, T. Finin, A. Joshi, MARYLAND UNIV BALTIMORE DEPT OF COMPUTER SCIENCE & ELECTRICAL ENGINEERING (2005): Using OWL in a Pervasive Computing Broker. Defense Technical Information Center.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2009-06-26","abstract":"This is a draft of the paper presented at ETPCS 2009, Pisa, Italy, 17-19th June 2009 (http:\/\/published.eptcs.org\/). DOI: 10.4204\/EPTCS.2.3Service-Oriented Computing delivers the promise of configuring and reconfiguring software systems\\ud\nto address user\u2019s needs in a dynamic way. Context-aware computing promises to capture the user\u2019s\\ud\nneeds and hence the requirements they have on systems. The marriage of both can deliver ad-hoc\\ud\nsoftware solutions relevant to the user in the most current fashion. However, here it is a key to gather\\ud\ninformation on the users\u2019 activity (that is what they are doing). Traditionally any context sensing\\ud\nwas conducted with hardware sensors. However, software can also play the same role and in some\\ud\nsituations will be more useful to sense the activity of the user. Furthermore they can make use of the\\ud\nfact that Service-oriented systems exchange information through standard protocols. In this paper\\ud\nwe discuss our proposed approach to sense the activity of the user making use of software","downloadUrl":"http:\/\/creativecommons.org\/licenses\/by\/3.0\/),","fullTextIdentifier":"https:\/\/lra.le.ac.uk\/bitstream\/2381\/9077\/1\/YRSOC.pdf","pdfHashValue":"51f44878d4391ba991732f7a7210dbede4e39c62","publisher":"Electronic Proceedings in Theoretical Computer Science (ETPCS)","rawRecordXml":"<record><header><identifier>\n        \n            \n                oai:lra.le.ac.uk:2381\/9077<\/identifier><datestamp>\n                2016-03-10T14:09:27Z<\/datestamp><setSpec>\n                com_2381_316<\/setSpec><setSpec>\n                com_2381_9549<\/setSpec><setSpec>\n                col_2381_4072<\/setSpec>\n            <\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:doc=\"http:\/\/www.lyncode.com\/xoai\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n            \nTowards Activity Context using Software Sensors<\/dc:title><dc:creator>\nPathan, Kamran Taj<\/dc:creator><dc:creator>\nReiff-Marganiec, Stephan<\/dc:creator><dc:subject>\ncontext-awareness<\/dc:subject><dc:subject>\ncontext model<\/dc:subject><dc:subject>\ncontext ontology<\/dc:subject><dc:subject>\nactivity inference<\/dc:subject><dc:description>\nThis is a draft of the paper presented at ETPCS 2009, Pisa, Italy, 17-19th June 2009 (http:\/\/published.eptcs.org\/). DOI: 10.4204\/EPTCS.2.3<\/dc:description><dc:description>\nService-Oriented Computing delivers the promise of configuring and reconfiguring software systems\\ud\nto address user\u2019s needs in a dynamic way. Context-aware computing promises to capture the user\u2019s\\ud\nneeds and hence the requirements they have on systems. The marriage of both can deliver ad-hoc\\ud\nsoftware solutions relevant to the user in the most current fashion. However, here it is a key to gather\\ud\ninformation on the users\u2019 activity (that is what they are doing). Traditionally any context sensing\\ud\nwas conducted with hardware sensors. However, software can also play the same role and in some\\ud\nsituations will be more useful to sense the activity of the user. Furthermore they can make use of the\\ud\nfact that Service-oriented systems exchange information through standard protocols. In this paper\\ud\nwe discuss our proposed approach to sense the activity of the user making use of software.<\/dc:description><dc:date>\n2011-02-16T11:42:00Z<\/dc:date><dc:date>\n2011-02-16T11:42:00Z<\/dc:date><dc:date>\n2009-06-26<\/dc:date><dc:type>\nConference paper<\/dc:type><dc:identifier>\nEPTCS 2 - Proceedings Fourth European Young Researchers Workshop on Service Oriented Computing (YR-SOC 2009), pp.27-35.<\/dc:identifier><dc:identifier>\n2075-2180<\/dc:identifier><dc:identifier>\nhttp:\/\/hdl.handle.net\/2381\/9077<\/dc:identifier><dc:identifier>\nhttp:\/\/arxiv.org\/abs\/0906.3925v1<\/dc:identifier><dc:identifier>\n10.4204\/EPTCS.2.3<\/dc:identifier><dc:language>\nen<\/dc:language><dc:rights>\nThis is an open-access article distributed under the terms of the Creative Commons Attribution License (http:\/\/creativecommons.org\/licenses\/by\/3.0\/), which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.<\/dc:rights><dc:publisher>\nElectronic Proceedings in Theoretical Computer Science (ETPCS)<\/dc:publisher>\n<\/oai_dc:dc>\n<\/metadata>\n        <\/record>","journals":[{"title":null,"identifiers":["2075-2180","issn:2075-2180"]}],"language":{"code":"en","id":9,"name":"English"},"relations":[],"year":2009,"topics":["context-awareness","context model","context ontology","activity inference"],"subject":["Conference paper"],"fullText":"This is a preliminary version of a paper\nthat will appear in Electronic Proceedings\nin Theoretical Computer Science.\nc\u00a9 K.T. Pathan & S. Reiff-Marganiec\nThis work is licensed under the Creative Commons\nAttribution-Noncommercial-No Derivative Works License.\nTowards Activity Context using Software Sensors\nKamran Taj Pathan and Stephan Reiff-Marganiec\nDepartment of Computer Science\nUniversity of Leicester\nLeicester, UK\n{ktp2,srm13}@le.ac.uk\nService-Oriented Computing delivers the promise of configuring and reconfiguring software systems\nto address user\u2019s needs in a dynamic way. Context-aware computing promises to capture the user\u2019s\nneeds and hence the requirements they have on systems. The marriage of both can deliver ad-hoc\nsoftware solutions relevant to the user in the most current fashion. However, here it is a key to gather\ninformation on the users\u2019 activity (that is what they are doing). Traditionally any context sensing\nwas conducted with hardware sensors. However, software can also play the same role and in some\nsituations will be more useful to sense the activity of the user. Furthermore they can make use of the\nfact that Service-oriented systems exchange information through standard protocols. In this paper\nwe discuss our proposed approach to sense the activity of the user making use of software.\nKeywords:Context-awareness, context model, context ontology, activity inference\n1 Introduction\nThe term ubiquitous was first coined by its founder Weiser [19] in 1988 who refers it as the invisible\nintegration of devices into everyday life. One of the fields of the ubiquitous or pervasive computing is\ncontext aware systems. With the mobility of devices context aware systems are getting popular now a\ndays. Pervasive computing makes use of context of the physical world, which involves a number of im-\nportant concerns related to the connection of sensor information to context-aware pervasive computing,\nthat includes: what can be feasibly sensed, the best way to acquire information and how to reason with\nthat information to infer context [18].\nIt is highly needed that programs and services react specifically to their current location, time and sit-\nuation and adapt their behavior according to the changing environment as context data may change\ndynamically [3]\nThe information which we require can be captured through a number of ways for example by user in-\nformation, network (location, time, nearby objects), sensors (activity) and other sources. One of the first\ncontext-aware applications was the Active Badge Location System [26], the infrared technology based\nsystem was able to determine the current location of members of the staff who wear badges and was also\nused to forward phone calls to a telephone near to that member. In the late 1990s some location-aware\nsystems [2][7] were made and still the most frequently concerned type of context is the location. Though\ntrying to reach the actual context many researchers have tried to find their own definition for what context\nactually is?\nSchilit and Theimer [23] used the term context-aware for the first time in 1994 (according to research\npapers) and described as location, identities of nearby people and objects. Brown [5] in 1996 defined\ncontext to be the elements of the user\u2019s environment about which the computer knows. Hull et al. [17]\nin 1997 described context as the aspects of the current situation.\nSo far most widely used definition is given by Dey and Abowd [9] in 2000. They defined context as:\n2 Towards Activity Context using Software Sensors\nany information that can be used to characterize the situation of an entity. An entity is a\nperson, place, or object that is considered relevant to the interaction between a user and an\napplication, including the user and applications themselves.\nContext has been classified into two categories Prekop and Burnett [22] and Gustavsen [13] call these\nexternal and internal, and Hofer et al. [16] refer this as physical and logical. Physical context can be\nmeasured by hardware sensors and logical context is mostly specified by the user or captured by monitor-\ning the user\u2019s interactions, i.e. the user\u2019s goals, activities, work context etc. The most relevant research\narea in context-aware systems make use of physical context such as location, light, sound, movement,\ntouch, temperature etc captured by hardware sensors and for logical sensors the Watson Project [6] and\nthe IntelliZap Project [10] which provide relevant information due to information read out of opened web\npages, documents etc.[3]\nIt has been observed that much of hardware and software is already installed at the organizational level\nand billions of machines are connected to each other; despite of that much concern is given to hardware\nsensors [7] as far as the information about user\u2019s context is concerned. Hardware sensors may be more\nexpensive and take time to install. Software can be used in addition to the hardware or on their own to\nsense the context, when utilized properly. This is made even more productive if we consider communi-\ncating software as well as the put over of functionality now available as services.\nIn the light of above paragraphs, we can easily infer that the most researched type of context is loca-\ntion and less work is done in activity context. While sensing activity currently the preferred way is to\nuse physical sensors (e.g. standing, walking, sitting, typing etc.) and less is logical\/virtual sensors e.g.\nemailing, supervising, administering etc.) which can go some steps beyond to sense the activity and can\nrespond a user as per her own needs and criteria, which is the cornerstone to the field of context-aware\nsystems.\nApart from hardware sensors (physically) we can obtain the information virtually by user\u2019s own infor-\nmation and can infer the outcome by applying reasoning rules.\nIn this paper Section 2 discusses related work. In Section 3 we explain the proposed context model for\ncontext information. In Section 4 overview of the architecture in association with conceptually layered\nframework of existing systems and our proposed approach is given. And finally Section 5 concludes and\nprovides some future work.\n2 Related Work\nA well designed model is a key to exploiting context in any context-aware system. In this section we por-\ntray existing context models used for representing, storing and exchanging context information. Strang\nand Linhoff-Popien [24] provide a survey of models with respect to software sensors in which they also\nintroduce a classification of models based on the used data structures.\nSchilit et al. [23] used key-value pairs to model the context by providing the value of a context informa-\ntion on location to an application as an environment variable. Key-value pairs are easy to manage, but\nlack capabilities for sophisticated structuring for enabling efficient context retrieval algorithms.\nMarkup Scheme models are based on a hierarchical data structure which consists of markup tags with\nattributes and content. Specifically, the content of the markup tags is defined by other markup tags. Rep-\nresentatives of this kind of context modeling approach are profiles. They are usually based upon XML\ntype languages such as RDF\/S and have the advantage of easy tool access, but lack of formality and\nexpressiveness.\nThe Unified Modeling Language (UML) has a graphical component (UML diagrams). Due to its stan-\nK.T. Pathan & S. Reiff-Marganiec 3\ndard structure, UML has been used to model context. Bauer [4] and Henricksen et. al. [15][14] modeled\ncontextual aspects relevant to air traffic management using UML extensions.\nIn a logic based context model, the context is described as facts, expressions and rules. Usually con-\ntextual information is added to, updated in and deleted from a logic based system in terms of facts or\ninferred from the rules applied on the system. A first logic based context modeling approach has been\npublished by McCarthy et al. [20]. McCarthy and others introduced contexts as abstract mathematical\nentities with properties useful in artificial intelligence.\nAn ontology is a mechanism to specify concepts and their interrelations [11]. Context models based on\nontologies have been first proposed by Otzturk and Aamodt [21]. They derived the necessity of normal-\nizing and combining the knowledge from different domains. Ontologies enable contextual knowledge\nsharing and reuse in a ubiquitous computing system. This contextual knowledge is evaluated using an\nontology reasoner. Another context modeling approach based on ontologies is the CoBrA system [8].\nCoBra provides a set of ontological concepts to characterize entities such as persons, places or several\nother kinds of objects within their contexts and uses a broker-centric agent architecture.\nWhile early models mainly addressed the modeling of context with respect to one application or an ap-\nplication class, generic context models are of interest since many applications can take benefit from these\nand can share knowledge across different systems. Though the model-oriented approach supports for-\nmality, context reasoning is usually based on Semantic Web technologies. Gu et. al. [12] have modelled\ncontext based on an ontology-oriented approach but this lacks the upper ontology by not making it more\ngeneral, which affects context reasoning. In this paper we have extended their work and present our\nontology-based context model that addresses these shortcomings. We have emphasized more on activity\ncontext because to describe a rich source of information for advanced adaptation in collaboration like\ninContext [25], activity context plays a major role.\nWe have chosen Web Ontology Language (OWL) because it is very expressive compared to other ontol-\nogy languages, it has the capability to be distributed across different systems, scalability to web needs,\ncompatibility with web standards for accessibility and internationalization, openness and extensibility,\nand enabling automated reasoning to be used by automated processes and of all a W3C standard [1].\nAlso being a Web language it is an obvious choice to be used in connection with services.\n3 An Ontology-based Model\nIn this section we describe our design considerations and modeling concepts, together with an activity-\naware meeting scenario to be used to demonstrate our context model.\n3.1 An activity-aware meeting scenario\nJohn:A Faculty Jim and Kim:Research Students\nAn activity-aware meeting makes use of software sensors to sense the activity of the user. In this\nsection, we describe a typical scenario in order to demonstrate our modeling concept.\nJim, a research student, wants to meet with his supervisor, John. When he looks at John\u2019s current ac-\ntivity, it is showing that John is teaching because John\u2019s timetable service has updated his current activity.\n4 Towards Activity Context using Software Sensors\nJohn, a Researcher is sending an email to one of his research students, Kim, to fix a meeting on Tues-\nday 11:00 at his office, and the Email service has updated his context on that particular time as Meeting.\nJohn wants to book a trip to a conference and before booking, updated his current context as Out\nfor Conference, but when he goes through the weather service for the weather condition on that day, he\nrealizes that t rip is not possible due to weather condition, and the context is updated back as planning\nfor trip.\n3.2 Design Considerations\nA context-aware system requires information to be shared and used between different entities such as\nusers and services. The context model should support semantic interoperability which enables the com-\nmon schemas to be shared between different entities. In the above scenario the representation of John\u2019s\nlocation should be understood between his personal profile, calendar, timetable and email services.\nAccording to the definition given by Dey and Abowd [9] context has a great variety. Context information\nvaries in different domains, for example we are more concerned about activity context, which can also\naffect the other factors of context. Context information is interrelated as per the above definition for\nexample in our scenario if John has updated his calendar for a trip but because of weather condition he\nis unable to fly then we will have to consider this factor also.\nIn this discussion we have come to know that ontology based modeling is the approach which uses\nproper knowledge management, avoids inconsistency, and applies reasoning rules. The beauty of this\napproach is that in the future context sources become reusable and extendable. For software sensors to\nwork without any conflict these features play a vital role.\n3.3 Context Ontology\nThe basic concept of our context model is based on ontology inspired by Gu et. al. [12], which provides a\nvocabulary for representing knowledge about a domain and for describing specific situations in a domain.\nWe have chosen context ontology because it defines a common vocabulary to share context information,\nshare common understanding of the structure of context information among users devices and services\nto enable semantic operations, includes machine-processable definitions of basic concepts in the domain\nand relations among them and reasoning becomes possible by explicitly definition. Since we use software\nas sensors these characteristics help to achieve our target.\nThe context ontology should be able to capture all the characteristics of context information. To capture\nall contexts in a context-aware environment is a very difficult task. As the domain of context can be\ndivided into types and further into sub-domains, it would be easy to specify the context in one domain\nin which a specific range of context is of interest. The separation of proper domain can also reduce the\nburden of context processing and make it possible to interpret context information on a variety of devices\ne.g. PC and PDA etc. Our context ontologies are divided into upper ontology and domain-specific\nontologies. The upper ontology is a high-level ontology which captures general context knowledge\nabout the physical world in context-aware computing environments. The domain-specific ontologies are\na collection of low-level ontologies which define the details of general concepts and their properties in\neach sub-domain. The low-level ontology in each sub-domain can be dynamically plugged into and\nunplugged from the upper ontology when the environment is changed, for example, when a user is\nsending email then it switches to an email service. To make the upper ontology more generic, we have\nclassified the context into four main types, the Entity, Location, Time and Activity as shown in Figure 1.\nK.T. Pathan & S. Reiff-Marganiec 5\nFigure 1: Class hierarchy diagram for context ontologies inspired from Gu et. al.[12]\nThe class Context provides an entry point of reference for declaring the upper ontology, one instance of\ncontext exists for each user or service. Each instance of Context presents a set of descendant classes of\nEntity, Location, Time and Activity.\nThe details of these basic concepts are defined in the low level ontologies, which vary from one domain\nto another. We will define all the descendent classes of these basic classes in activity-aware meeting\nenvironment and a set of properties and relationships that are associated with these classes.\n3.4 Context Reasoning\nThe important feature is the ability to support automated context reasoning which is the process of rea-\nsoning about various types of context and its properties. We consider two types of Activity context. First\nis scheduled activity and the other is deduced activity. Reasoning in Context broadens context informa-\ntion implicitly by introducing deduced context derived from other types of context. It also provides a\nsolution to resolve context inconsistency and conflict that is caused by imperfect sensing.\nBy reasoning context, scheduled context can be inferred from defined context but deduced context can\n6 Towards Activity Context using Software Sensors\nbe inferred from sensed, defined or aggregated context based on our classification scheme. For example\nin our scenario, scheduled context John\u2019s current activity can be inferred from sensed context John\u2019s cal-\nendar and timetable but deduced context can be inferred from sensed context John\u2019s calendar, timetable,\nemail, weather as illustrated below:\nTimetable(John, Office) \u2227 Calendar (John, Personal) ` Teaching (John, Class)\nA more complicated example below shows deduced context where John has updated his context as\n\u2019Out for Conference\u2019 but because of poor weather conditions (snow in this case) his context has been\nchanged to \u2019Planning for Conference\u2019.\nSearch(John, Flight) \u2227 WeatherCond(Weather, Snowing) ` Activity (John, NO)\nBy reasoning context classification information based on our context model, we may be able to detect\nand resolve context conflict. For example if John is switching between activities like \u2019Meeting\u2019, \u2019Dis-\ncussing on Project\u2019 and \u2019Presenting\u2019 then we may resolve that John is \u2019Meeting for Project\u2019. Different\ntypes of context have different levels of confidence and reliability. For example scheduled activity is\nmore reliable than deduced activity thus varies in percentages.\n4 Architecture Overview\nIn this section, we describe the basic service-oriented middleware architecture design for the proposed\nsystem with an association of conceptually layered framework. Context-aware systems can be imple-\nmented in many ways. The approach depends on special requirements and conditions such as sensors\n(software or hardware), the user (one or many), the available resources of the used devices (PCs or\nmobile) or the facility of a further extension of the system. Furthermore, the method of context-data ac-\nquisition is very important when designing context-aware systems because it predefines the architectural\nstyle of the system at least to some extent [3]. This architecture consists of the following components as\nshown in Figure 2:\nContext Providers: Context Providers are the services which provide the user information such as pro-\nfile, calendar, timetable etc.\nSensors: Sensors here means software sensors which are used to extract context information from\ndifferent services to context acquisition module.\nContext Acquisition Module: The Context Acquisition Module acquires context from the different\nservices and present them to OWL representations so that context can be shared and reused by other\ncomponents.\nContext Reasoning Engine: The Context Reasoning Engine provides the context reasoning services\nincluding inferring deduced contexts, resolving context conflicts and maintaining the consistency of the\ncontext knowledge base.\nContext Knowledge Base: The Context Knowledge Base provides the service that other compo-\nnents can query, notify, add, delete or modify context knowledge with the help of Query Module and\nK.T. Pathan & S. Reiff-Marganiec 7\nFigure 2: This system acquires context information of the user from sensors in its environment and infer\nthe current context\nNotification Module stored in the context database.\nContext-aware Services: Context-aware services make use of different levels of context and adapt\nthe way they behave according to the current context.\nBased on this architecture, we will implement a prototype that aims to realize the activity-aware meeting\nscenario that is described in section 4.\n5 Conclusion and Future work\nIn this paper, we have described an approach to sense the activity of user with the help of software\nsensors by acquiring and applying reasoning rules to infer the context. The software sensors are used\nto manage exchanges occurring on service invocation. Frequently, used and tested sources for activity\nsensing are hardware sensors and we have tried to alter this to software sensors, which are also capable\nof sensing activity context. In this approach we have also emphasized that by using semantic web tech-\n8 Towards Activity Context using Software Sensors\nnologies proper knowledge management can be achieved and thus context sources become reusable and\nextendable. We have also proposed a more generic and extensible context model to provide a vocabulary\nfor representing knowledge about a domain and for describing specific situation.\nTo demonstrate the feasibility of the proposed research the future work in this area will be to build a\nprototype of activity-aware context monitoring, to infer the activity of a user.\nReferences\n[1] http:\/\/www.w3.org\/2004\/OWL\/.\n[2] G. D. Abowd, C. G. Atkeson, J. Hong, S. Long, R. Kooper & M. Pinkerton (1997): Cyberguide: A mobile\ncontext-aware tour guide. Wireless Networks 3(5), pp. 421\u2013433.\n[3] M. Baldauf, S. Dustdar & F. Rosenberg (2007): A survey on context-aware systems. International Journal of\nAd Hoc and Ubiquitous Computing 2(4), pp. 263\u2013277.\n[4] J. Bauer, R. D. Kutsche & R. Ehrmanntraut (2003): Identification and Modeling of Contexts for Different\nInformation Scenarios in Air Traffic. Technische Universita\u00a8t Berlin, Ma\u00a8rz .\n[5] P. J. Brown (1995): The Stick-e Document: A Framework for Creating Context-aware Applications. ELEC-\nTRONIC PUBLISHING-CHICHESTER- 8, pp. 259\u2013272.\n[6] J. Budzik & K. J. Hammond (2000): User interactions with everyday applications as context for just-in-time\ninformation access. In: Proceedings of the 5th international conference on Intelligent user interfaces. ACM\nNew York, NY, USA, pp. 44\u201351.\n[7] G. Chen & D. Kotz (2000): A Survey of Context-Aware Mobile Computing Research .\n[8] H. Chen, T. Finin, A. Joshi, MARYLAND UNIV BALTIMORE DEPT OF COMPUTER SCIENCE &\nELECTRICAL ENGINEERING (2005): Using OWL in a Pervasive Computing Broker. Defense Techni-\ncal Information Center.\n[9] A. K. Dey & G. D. Abowd (2000): Towards a Better Understanding of Context and Context-Awareness. In:\nCHI 2000 Workshop on the What, Who, Where, When, and How of Context-Awareness.\n[10] LEV FINKELSTEIN, E. GABRILOVICH, Y. MATIAS, E. RIVLIN, Z. SOLAN, G. WOLFMAN & E. RUP-\nPIN (2002): Placing Search in Context: The Concept Revisited. ACM Transactions on Information Systems\n20(1), pp. 116\u2013131.\n[11] T. R. Gruber (1993): A translation approach to portable ontology specifications. KNOWLEDGE ACQUISI-\nTION 5, pp. 199\u2013199.\n[12] T. Gu, X. H. Wang, H. K. Pung & D. Q. Zhang (2004): An Ontology-based Context Model in Intelligent En-\nvironments. In: Proceedings of Communication Networks and Distributed Systems Modeling and Simulation\nConference, 2004.\n[13] R. M. Gustavsen (2002): Condoran application framework for mobility-based context-aware applications.\nIn: Proceedings of the Workshop on Concepts and Models for Ubiquitous Computing.\n[14] K. Henricksen, J. Indulska & A. Rakotonirainy (2002): Modeling Context Information in Pervasive Comput-\ning Systems. LECTURE NOTES IN COMPUTER SCIENCE , pp. 167\u2013180.\n[15] K. Henricksen, J. Indulska & A. Rakotonirainy (2003): Generating Context Management Infrastructure from\nContext Models. In: 4th International Conference on Mobile Data Management (MDM), Industrial Track\nProceedings. pp. 1\u20136.\n[16] T. Hofer, W. Schwinger, M. Pichler, G. Leonhartsberger, J. Altmann & W. Retschitzegger (2003): Context-\nawareness on mobile devices-the hydrogen approach. In: System Sciences, 2003. Proceedings of the 36th\nAnnual Hawaii International Conference on. p. 10.\n[17] R. Hull, P. Neaves, J. Bedford-Roberts & Hewlett-Packard Laboratories (1997): Towards Situated Comput-\ning. HP LABORATORIES TECHNICAL REPORT HPL .\nK.T. Pathan & S. Reiff-Marganiec 9\n[18] S. Loke (2006): Context-Aware Pervasive Systems: Architectures for a New Breed of Applications. Auerbach\nPub.\n[19] W. Mark (1991): The Computer for the 21st Century. Scientific American 265(3), pp. 94\u2013104.\n[20] J. McCarthy (1993): Notes on Formalizing Context. In: INTERNATIONAL JOINT CONFERENCE ON\nARTIFICIAL INTELLIGENCE, 13. LAWRENCE ERLBAUM ASSOCIATES LTD, pp. 555\u2013555.\n[21] P. O\u00a8ztu\u00a8rk & A. Aamodt (1997): Towards a model of context for case-based diagnostic problem solving.\nContext-97; Proceedings of the , pp. 198\u2013208.\n[22] P. Prekop & M. Burnett (2003): Activities, context and ubiquitous computing. Computer Communications\n26(11), pp. 1168\u20131176.\n[23] B. Schilit, N. Adams & R. Want (1994): Context-aware computing applications. In: Mobile Computing\nSystems and Applications, 1994. Proceedings., Workshop on. pp. 85\u201390.\n[24] T. Strang & C. Linnhoff-Popien (2004): A context modeling survey. In: Workshop on Advanced Context\nModelling, Reasoning and Management as part of UbiComp.\n[25] H.L. Truong, S. Dustdar, D. Baggio, S. Corlosquet, C. Dorn, G. Giuliani, R. Gombotz, Y. Hong, P. Kendal,\nC. Melchiorre et al. (2008): Incontext: A pervasive and collaborative working environment for emerging team\nforms. In: Applications and the Internet, 2008. SAINT 2008. International Symposium on. pp. 118\u2013125.\n[26] ROY WANT, A. HOPPER & V. F. J. GIBBONS (1992): The Active Badge Location System. ACM Transac-\ntions on Information Systems 10(1), pp. 91\u2013102.\n"}