{"doi":"10.1145\/1279740.1279795","coreId":"70141","oai":"oai:eprints.lancs.ac.uk:13033","identifiers":["oai:eprints.lancs.ac.uk:13033","10.1145\/1279740.1279795"],"title":"The ColorDex DJ system: a new interface for live music mixing","authors":["Villar, Nicolas","Gellersen, Hans","Jervis, Matt","Lang, Alexander"],"enrichments":{"references":[{"id":16329605,"title":"D\u2019Groove: A Haptic Turntable for Digital Audio Control.","authors":[],"date":"2003","doi":"10.1109\/haptic.2003.1191221","raw":"Beamish, T., Maclean, K., van del Doel, K., and Fels, F. D\u2019Groove: A Haptic Turntable for Digital Audio Control. In Proceedings of the 2003 International Conference on Auditory Display, Boston.  2003.","cites":null},{"id":16329599,"title":"How to DJ (Properly): The Art and Science of Playing Records.","authors":[],"date":"2006","doi":null,"raw":"Brewster, B. and Broughton, F. How to DJ (Properly): The Art and Science of Playing Records. Bantam Press. 2006.","cites":null},{"id":16329608,"title":"Instructables: Step-by-step project instructions.","authors":[],"date":null,"doi":null,"raw":"Instructables: Step-by-step project instructions. http:\/\/www.instructables.com","cites":null},{"id":16329602,"title":"Manipulating Music: Multimodal Interaction for DJs.","authors":[],"date":"2004","doi":"10.1145\/985692.985734","raw":"Beamish, T., Maclean, K., and Fels, F. Manipulating Music: Multimodal Interaction for DJs. In Proceedings of CHI\u201904. 2004.","cites":null},{"id":16329615,"title":"Mapping strategies in DJ scratching.","authors":[],"date":"2006","doi":null,"raw":"Hansen, K.F., Bresin, R. Mapping strategies in DJ scratching. In Proceedings of NIME\u201906. 2006.","cites":null},{"id":16329597,"title":"Mixxx: Towards Novel DJ Interfaces.","authors":[],"date":"2003","doi":"10.1145\/1056808.1056850","raw":"Andersen, T.H., Mixxx: Towards Novel DJ Interfaces. In Proceedings of the NIME\u201903. Montreal, Canada. 2003.","cites":null},{"id":16329611,"title":"Realtime Sampling System for the Turntablist Version 2: 16padjoystickcontroller.","authors":[],"date":"2004","doi":null,"raw":"Lippit, T.M. Realtime Sampling System for the Turntablist Version 2: 16padjoystickcontroller. In Proceedings o NIME\u201904. Hamamatsu, Japan. 2004.","cites":null},{"id":16329600,"title":"There\u2019s More to Interaction than Meets the Eye: Some Issues in Manual Input. In","authors":[],"date":"1986","doi":null,"raw":"Buxton, W. There\u2019s More to Interaction than Meets the Eye: Some Issues in Manual Input. In Norman, D. A. Draper, S. W. (Eds.), User Center System Design: New Perspectives on Human Computer-Interaction . 1986.","cites":null},{"id":16329618,"title":"Using an Autonomous Cube for Basic Navigation and Input.","authors":[],"date":"2003","doi":"10.1145\/958432.958472","raw":"Van Laerhoven, K,.Villar, N., Schmidt, A., Kortuem, G. and Gellersen. H. Using an Autonomous Cube for Basic Navigation and Input. In Proceedings of ICMI\/PUI 2003.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2007","abstract":"This paper describes the design and implementation of a new interface prototype for live music mixing. The ColorDex system employs a completely new operational metaphor which allows the mix DJ to prepare up to six tracks at once, and perform mixes between up to three of those at a time. The basic premises of the design are: 1) Build a performance tool that multiplies the possible choices a DJ has in respect in how and when tracks are prepared and mixed; 2) Design the system in such a way that the tool does not overload the performer with unnecessary complexity, and 3) Make use of novel technology to make the performance of live music mixing more engaging for both the performer and the audience. The core components of the system are: A software program to load, visualize and playback digitally encoded tracks; the HDDJ device (built chiefly out of a repurposed hard disk drive), which provides tactile manipulation of the playback speed and position of tracks; and the Cubic Crossfader, a wireless sensor cube that controls of the volume of individual tracks, and allows the DJ to mix these in interesting ways","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/70141.pdf","fullTextIdentifier":"http:\/\/eprints.lancs.ac.uk\/13033\/1\/2007%2DColorDex.pdf","pdfHashValue":"58ce7d32ed723d870173fe6abee78fa92daedf8e","publisher":"ACM","rawRecordXml":"<record><header><identifier>\n  \n    \n    \n      oai:eprints.lancs.ac.uk:13033<\/identifier><datestamp>\n      2018-01-24T02:08:46Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      7375626A656374733D51:5141:51413735<\/setSpec><setSpec>\n      74797065733D626F6F6B5F73656374696F6E<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n    \n      \n        The ColorDex DJ system: a new interface for live music mixing<\/dc:title><dc:creator>\n        Villar, Nicolas<\/dc:creator><dc:creator>\n        Gellersen, Hans<\/dc:creator><dc:creator>\n        Jervis, Matt<\/dc:creator><dc:creator>\n        Lang, Alexander<\/dc:creator><dc:subject>\n        QA75 Electronic computers. Computer science<\/dc:subject><dc:description>\n        This paper describes the design and implementation of a new interface prototype for live music mixing. The ColorDex system employs a completely new operational metaphor which allows the mix DJ to prepare up to six tracks at once, and perform mixes between up to three of those at a time. The basic premises of the design are: 1) Build a performance tool that multiplies the possible choices a DJ has in respect in how and when tracks are prepared and mixed; 2) Design the system in such a way that the tool does not overload the performer with unnecessary complexity, and 3) Make use of novel technology to make the performance of live music mixing more engaging for both the performer and the audience. The core components of the system are: A software program to load, visualize and playback digitally encoded tracks; the HDDJ device (built chiefly out of a repurposed hard disk drive), which provides tactile manipulation of the playback speed and position of tracks; and the Cubic Crossfader, a wireless sensor cube that controls of the volume of individual tracks, and allows the DJ to mix these in interesting ways.<\/dc:description><dc:publisher>\n        ACM<\/dc:publisher><dc:date>\n        2007<\/dc:date><dc:type>\n        Contribution in Book\/Report\/Proceedings<\/dc:type><dc:type>\n        NonPeerReviewed<\/dc:type><dc:format>\n        application\/pdf<\/dc:format><dc:identifier>\n        http:\/\/eprints.lancs.ac.uk\/13033\/1\/2007%2DColorDex.pdf<\/dc:identifier><dc:relation>\n        http:\/\/dx.doi.org\/10.1145\/1279740.1279795<\/dc:relation><dc:identifier>\n        Villar, Nicolas and Gellersen, Hans and Jervis, Matt and Lang, Alexander (2007) The ColorDex DJ system: a new interface for live music mixing. In: NIME '07 Proceedings of the 7th international conference on New interfaces for musical expression. ACM, pp. 264-269.<\/dc:identifier><dc:relation>\n        http:\/\/eprints.lancs.ac.uk\/13033\/<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/dx.doi.org\/10.1145\/1279740.1279795","http:\/\/eprints.lancs.ac.uk\/13033\/"],"year":2007,"topics":["QA75 Electronic computers. Computer science"],"subject":["Contribution in Book\/Report\/Proceedings","NonPeerReviewed"],"fullText":"The ColorDex DJ System:  \nA New Interface for Live Music Mixing\nNicolas Villar, Hans Gellersen \nComputing Department \nLancaster University \nLancaster LA1 4WA UK \n{villar, hwg}@comp.lancs.ac.uk \n  \nMatt Jervis \nDepartment of Computer Science \nWaikato University \nHamilton, New Zealand \nmattj@ihug.co.nz\nAlexander Lang \nDigital Media Department \nUniversity of Applied Sciences \nHagenberg, Austria \nalexander.lang@laex.name\n  \nABSTRACT \nThis paper describes the design and implementation of a new \ninterface prototype for live music mixing. The ColorDex system \nemploys a completely new operational metaphor which allows the \nmix DJ to prepare up to six tracks at once, and perform mixes \nbetween up to three of those at a time. The basic premises of the \ndesign are: 1) Build a performance tool that multiplies the \npossible choices a DJ has in respect in how and when tracks are \nprepared and mixed; 2) Design the system in such a way that the \ntool does not overload the performer with unnecessary \ncomplexity, and 3) Make use of novel technology to make the \nperformance of live music mixing more engaging for both the \nperformer and the audience. The core components of the system \nare: A software program to load, visualize and playback digitally \nencoded tracks; the HDDJ device (built chiefly out of a \nrepurposed hard disk drive), which provides tactile manipulation \nof the playback speed and position of tracks; and the Cubic \nCrossfader, a wireless sensor cube that controls of the volume of \nindividual tracks, and allows the DJ to mix these in interesting \nways. \nKeywords \nNovel interfaces, live music-mixing, crossfading, repurposing \nHDDs, accelerometer-based cubic control \n1. INTRODUCTION \nDJ\u2019ing \u2013 the practice of live mixing and scratching of records \u2013 is \nan established form of musical expression that has received some \nattention from the NIME community (cf. [1],[8],[9]). DJ\u2019ing has \nits roots in the analog technology of turntables and mixers, and \nmuch of the efforts from both the commercial and research \ncommunities has focused on developing new interfaces that allow \nDJs to manipulate digital audio tracks in much the same way as \nthey would use vinyl records. New interfaces for DJ\u2019s are often \nsome form of augmented turntable, or pair of turntables, that seek \nto digitally enhance the practice of mixing and scratching without \nrequiring the DJ to acquire radically new skills from those \ndeveloped in their use of traditional turntable systems (e.g. [6]). \nBeamish et al. point out in [3] that many scratch DJ\u2019s are adverse \nto new technologies. This is not surprising, since the haptic \nfeedback and tight relationship between interface manipulation \nand audible output that an analog turntable provides (which is \nessential for accurately generating a scratch) is extremely hard to \nreplicate in an interface. In contrast, mix DJ\u2019s \u2013 whose practice \nfocuses on seamlessly blending one track into another to create a \nfluid musical experience that follows and encourages the mood of \nthe crowd \u2013 are often more accepting of new interfaces for this \npurpose. This might be due, at least in part, to the fact that a mix \nDJ\u2019s skills are less tied to the haptic feedback and manipulation of \nthe turntable than those of a scratch-DJ. Instead, the mix DJ\u2019s skill \nlies in being able to beatmatch different music tracks effectively: \nquickly identifying the beat pattern of a track and synchronizing it \nwith a second track, in order to provide a seamless transition when \nthe first track is crossfaded with the second. It is possible that this \nskill is more transferable between different technologies and \ninterfaces than it is with scratching, precisely because it is more \nabout listening and less about accurately manipulating a particular \ninterface device.  \n \nFigure 1. The ColorDex system components. \nThis paper presents the design and implementation of a new \ninterface for musical expression for DJ\u2019s in the practice of live \nmusic mixing. Rather than limiting the performer to working with \nonly two tracks as in the traditional dual-turntable setup (e.g. one \nmusic track being played and one being prepared, or both tracks \nbeing mixed together), the ColorDex system allows a DJ to work \nwith up to six tracks, where one track can be played while another \nfive tracks are prepared, and up to three tracks can be mixed at \nonce. The goal is to allow mix DJ\u2019s more freedom in their \n \nPermission to make digital or hard copies of all or part of this work for \npersonal or classroom use is granted without fee provided that copies are \nnot made or distributed for profit or commercial advantage and that \ncopies bear this notice and the full citation on the first page. To copy \notherwise, or republish, to post on servers or to redistribute to lists, \nrequires prior specific permission and\/or a fee. \nNime\u201907 , 2007, New York City, NY, USA \nCopyright remains with the author(s). \n \npractice, by providing them with the more open-ended workflow \nand mixing techniques that our system affords. The use of two \nnovel interface devices \u2013 the Cubic Crossfader and the HDDJ \nDevice \u2013 complement the software and graphical user interface in \nproviding a usable and unusual music mixing mechanism that \nshould prove engaging for both the DJ and their audience.   \n2. SUMMARY OF OPERATION \nBeatmatching is an essential skill for any music-mixing DJ; a \ngood overview of beatmatching techniques can be found in [3]. \nMost dance music employs a 4\/4 time signature, and in order to \nbeatmatch two tracks, a DJ must listen to both simultaneously and \nsynchronize their beat patterns. Before mixing tracks, a good DJ \nmust ensure that: 1) both tracks are playing at the same rhythm \n(by adjusting the pitch or playback speed of the tracks); 2) both \ntracks are in phase with the individual beats falling at the same \ntime (achieved by temporarily stop\/starting one of the tracks); \nand, ideally, 3) both tracks are aligned over time in their 4\/4 time \n\u2018phrases,\u2019 that is, both tracks begin and end their unit-sequence of \n16 beats at the same time. Once a beatmatch is achieved, the DJ \ncan perform a crossfade, where, for a period of time, the audience \nhears the two tracks simultaneously.  This can be done to \nsmoothly transition between tracks, while the first track finishes \nand the second begins, but also at any point during playback in \norder to introduce additional musical elements (for example, by \nblending the drum beat of one track with the lyrics of another).  \nDuring a live performance, a mix DJ must be able to preview a \ntrack (listen to it on the headphones before the audience hears it) \nin order to modify the playback parameters that allow the \nbeatmatching to take place. The basic parameters that can be \nadjusted consist of setting the cue point from where the track will \nstart playing from, and altering the playback speed or pitch of the \ntrack.  \nThe ColorDex system allows the DJ to work with up to six music \ntracks: that is, they are able to maintain up to six tracks in a \n\u2018ready\u2019 state \u2013 the equivalent of placing six records on six \nturntables \u2013 and create mixes by crossfading between up to three \nof those tracks. The DJ has control of individual track playback \n(start \/ stop \/ forward \/ rewind), can alter the playback speed, set \nthe cue point (where the track will be played from when playback \nis started) and can choose to \u2018preview\u2019 a track by listening to it \nexclusively through the headphones. Control and feedback on the \nstatus of the six tracks is distributed amongst the components \nillustrated in Figure 1.  \nThe Track Display is a graphical user interface that displays the \ncurrently active tracks and indicates their playback position and \nstatus. The GUI allows the DJ to load a digital music track into \nany of six \u2018slots,\u2019 which are colored coded, from top to bottom, in \nthe following sequence: white, yellow, green, red, black and blue.    \nThe HDDJ Device contains all the controls necessary to \nbeatmatch tracks and ready them for mixing: it gives the DJ a \ntactile handle from which to \u2018select\u2019 any of the six tracks by \npressing one of six buttons ordered and color-coded in the same \nsequence as the GUI \u2018slots.\u2019 A selected track is automatically \npreviewed through the headphones, and can be further \nmanipulated by using the other controls on the HDDJ: start\/stop \nplayback, set playback cue point, advance\/reverse playback \nposition and alter playback speed. \nThe Cubic Crossfader is the most novel interface component of \nthe ColorDex system, consisting of a cube object embedded with \nsensors and wireless communication. It is designed to be held in \nthe hand or placed on a surface, and is operated by rotating it \naround its axis. Each side of the cube is color coded with one of \nthe six \u2018track colors\u2019 and represents the individual track volume \nlevels.  As the cube is rotated, each track is mixed in and out of \nthe speaker output.  \nThe remaining sections of this paper describe in more detail the \nspecific operation of each of these three components, as well as \nthe implementation details of each that may be of interest to the \nNIME research community. The presented design is a working \nprototype that has taken shape through an iterative process on \nwhich a number of professional as well as \u2018bedroom\u2019 mix DJ\u2019s \nhave been informally consulted. Performance of the ColorDex \nsystem \u2018in the wild\u2019 has so far been limited to a single semi-public \nevent. We discuss our initial impressions, and based on this, as \nwell as the feedback we have received from those we consulted, \nwe conclude with our outlook for future work.  \n3. SOFTWARE AND GUI \nThe software element of the ColorDex system provides the core \nfunctionality of handling the playback of digital audio files, as \nwell as a graphical user interface that acts as the locus of system \nfeedback for the DJ (cf. Figure 2). The ColorDex GUI provides \naccess to the system settings and peripherals configuration. Apart \nfrom using the \u2018Load\u2019 buttons to browse and load music tracks \ninto each of the six color slots, the GUI requires little active \ninteraction from the part of the DJ, as most input is specified \nthrough the HDDJ Device on one hand, and the Cubic Crossfader \non the other.   \n \nFigure 2. The ColorDex GUI acts as the locus of system \nfeedback for the DJ. \nThe interface was designed with large widgets to be suitable for \ntouch-screen input, in order to minimize the need for a mouse as \nan additional device. Clicking on one of the six colored \u2018Load\u2019 \nbuttons brings up a load-file dialog, from which the DJ can \nbrowse to and select a music track. The track is assigned to the \nbutton\u2019s respective color slot; a waveform analysis of the file is \nperformed and the result is displayed in that track\u2019s associated \ncolor. The file name, current playback position (in mm:ss:ms \nformat) and estimated BMP of each track is shown underneath \neach waveform display. Overlaid on the waveforms are two \ncursors: one indicates the current playback position of each track, \nand the other the track\u2019s cue point (the point at which the track \nwill begin to play when started, set at 00:00:00 by default). \nThe right-hand column of boxes is used to display each track\u2019s \nvolume level and \u2018preview\u2019 status. The volume is displayed as a \nsingle horizontal bar graph \u2013 in Figure 2, the black track (5th from \nthe top) is playing at 100% volume, all the others at 0%. When a \ntrack is selected for \u2018preview\u2019 with the HDDJ device (so that the \nDJ may control it and listen to it through the headphones) a \nheadphones icon appears in the respective box, as is the case with \nthe green track (3rd from the top) in Figure 2. \n3.1 Software Implementation Details \nAn initial sketch of the software was developed using the \nProcessing platform to quickly work out some interaction \nconcepts, but the final software and GUI implementation was \ndeveloped in C# for the .NET platform. This development \nenvironment does not readily support multi-platform \ncompatibility, but it was chosen for its high performance and \nreliability, important when loading and rendering up to six audio \ntracks simultaneously, and essential when the system is intended \nfor live performances. Since the focus of this project was the \ndevelopment of the user interface and interface devices, rather \nthan the underlying sound processing code, a set of commercial \nlibraries were used for this purpose [1]. As well as minimizing \ndevelopment time, the libraries provide support for most audio file \nformats, as well as automatic BPM detection, fast waveform \nanalysis, playback speed alteration (with or without pitch \naffectation) and the multiple-soundcard support that is necessary \nto provide independent speaker and headphone outputs. \n4. THE HDDJ DEVICE \nThe HDDJ Device is the main control unit of the ColorDex \nsystem: it provides the DJ with all the controls required to \npreview, cue and modify the playback speed of a track (cf. Figure \n3).  The name of the device stems from the fact that a key \ncomponent of its interface is built from a repurposed hard-disk \ndrive (HDD). The HDDJ is a time-multiplexed control: it is used \nto select one of the six tracks at a time, and then modify its \nplayback parameters independently from the others. For this \npurpose, the device is equipped with a vertical row of buttons and \nLEDs on the right-hand side that follow the same color-code \nsequence as the GUI elements. Pressing a button will select its \ncorresponding color-track and set it in \u2018preview mode\u2019: the LED \nnext to the button will light up to indicate this; a \u2018preview\u2019 icon \nwill appear next to the track visualization on the GUI display; the \nDJ will be able to hear the track playing back through their \nheadphones, and the remaining controls in the HDDJ will affect \nonly the playback of the selected track. \nTwo additional buttons are provided to cue and start\/stop the \nselected track. At any point during playback (and even if the track \nis stopped), the DJ can tap the \u2018cue\u2019 button, thus setting the \nstarting position of the track to the current playback position. This \nis an important feature \u2013 often found in CD-turntable systems \u2013 to \nallow the DJ precise control over the point in which a track is \nintroduced into the mix. Pressing and holding the cue button for \nlonger than 2 seconds resets the cue to its default position at the \nbeginning of the track.  \n \nFigure 3. The HDDJ Device is the main input unit of the \nColorDex system. \nThe most salient control in the HDDJ is a rotary plate that allows \nthe DJ to \u2018spin\u2019 the playback position on the track forwards and in \nreverse. In searching for a suitable control that would allow this \nkind of input, we came across the idea of using an old hard drive \nplatter for the purpose \u2013 see \u00a74.1 for more details on how this is \ndone. Because of the high-quality bearings used in HDD \nmanufacturing, the plate can be set to spin freely and continuously \nin either direction, and can be stopped immediately by applying a \nlight pressure on its surface. Setting the plate in a clockwise or \ncounterclockwise spin will, respectively, forward and rewind the \nplayback position of the track a certain amount of time. The exact \nmapping of \u2018spinning time\/velocity\u2019 vs. \u2018track time\u2019 can be \nadjusted via the GUI. We found it useful to provide independent \nadjustments for each direction of travel, allowing, for example, \nusing the forward spin to quickly (and roughly) reach a point in \nthe track, and then backspin with high resolution (but slowly) to \nfind the exact desired point in the track. This feature was inspired \nby the design of certain old valve radios, where the tuning knob \nexhibits exactly this behavior to quickly reach the desired station \nby rotating one way, and then fine-tuning the reception by rotating \nin the opposite. \nIn the case of the \u2018spin\u2019 plate, it was both useful and desirable to \nprovide an input with infinite rotation in both directions and a \nrelative mapping to the track\u2019s position (forwarding past the end \nof the track wraps the playback position over to the beginning of \nthe track, and vice-versa). However, for a speed control we \ndecided on using a linear slider, the position of which could be \nmapped in an absolute way to a percentage increase\/decrease in \nplayback speed.  The problem with absolute controls, when used \nin a time-multiplexed input device as the HDDJ, is that they retain \nstate once manipulated. For example: both the red and blue tracks \nare playing at their regular speed; the slider is in its default \nposition, in the middle. The red track is selected, and the slider is \nmoved left, to slow down the red track to play at 90% of its \nnormal speed. Now the blue track is selected: we want to modify \nits speed but when we reach for the slider we find that there is a \nmismatch between its position (90%) and the slider\u2019s playback \nspeed (100%). This is what Buxton refers to as the nulling \nproblem of absolute transducers [4]. In order to overcome this \nsituation we used a motorized slider as the speed control. As well \nas sensing the position of the slider (as with any sliding \npotentiometer) the motorized slider can be mechanically set to any \ndesired position. In our design, this allows us to set the position of \nthe slider to a position that accurately represents the currently \nselected track\u2019s playback speed. Following the previous example, \nas soon as the blue track was selected, the slider would have \njumped from the left to its middle position \u2013 correctly displaying \nthe 100% playback speed of the newly selected track. As an added \nbenefit the slider provides haptic display to the DJ, allowing them \nto feel, by touching the control and without needing to look at it, \nat what speed the selected track is playing.  \n4.1 Using a HDD as a spin-input control \nIn searching for a suitable solution for continuous rotary input for \nour prototype, we realized the limited choices that exist: use cheap \nrotary encoders, and sacrifice the quality of tactility of use (it is \nnot easy to find a cheap encoder that spins well) or buy expensive \nhigh-end equipment that feels good to use. While looking for \ninspiration amongst assorted junk in the lab, we came upon a \nbroken hard disk drive with its case open. We admired the quality \nof the bearings in the motor that drives the disk plates, and \nwondered whether we could sample an output from it when it was \nspun by hand, in much the same way that an electric motor, when \nturned, acts as a dynamo and outputs a voltage. \nSome probing with an oscilloscope confirmed that weak analog \nwaveforms are produced at the motor contacts when the HDD \nplates spin above a certain speed, which is easily attained in \nspinning the disk by hand. In our design, we used an op-amp in a \ncomparator circuit in order to amplify and square the motor \noutputs, which can then be easily sampled by a PIC \nmicrocontroller (cf. Figure 4).  \n \n \nFigure 4. Using a HDD motor as a spin-sensor by sampling the \noutput of the motor contacts while the HDD disk is spun.  \nWhile suitable for our requirements, the HDD solution does have \nsome limitations: chiefly, it requires some amount of spin, above a \ncertain threshold, for the motor to output measurable signals. As a \nresult it is not possible to detect small \u2018scratch\u2019-like movements, \nand as such is not a replacement for a digital turntable. It is still \nwell suited as a rotary input device that spins effortlessly and has \na high tactility factor, and, as an upside, broken HDDs are free to \nuse and easy to find. We have experimented with a number of \ndifferent HDD models, and found that most are suitable for this \npurpose. The largest variation lies in how easy it is to open the \ncase of some compared to others (Seagate HDDs, which often use \nplain Phillips screws in the casing, are recommended). Detailed \ncircuit diagrams, microcontroller code and step-by-step on how to \nappropriate HDDs as input devices will be made available online \non the Instructables website [7]. \n4.2 HDDJ Implementation Details \nThe HDDJ is implemented as an embedded device, with a \nMicrochip PIC microcontroller with built-in support for serial-line \nemulation over USB. The microcontroller operates a continuous \nroutine in which it polls the state of all eight buttons on the \ndevice, calculates the spin velocity\/direction of the spin-plate \nbased on the HDD motor outputs (cf. Figure 4), and samples the \nposition of the slider potentiometer. Only when a change of state \nin any of the controls is detected, this information is \ncommunicated to the PC via proprietary ASCII-based serial \nprotocol. In every poll cycle, the microcontroller program checks \nthe status of the incoming serial-line buffer for control data from \nthe PC. The HDDJ responds to commands to turn on or off any of \nits built-in LEDs, or to set the position of the motorized slider. In \nthis way, the device, although self-contained, remains generic and \nindependent from any particular ColorDex program logic, with \nthe intention that it could be easily incorporated into a different \nsystem.  A planned revision to the firmware will add support for \nthe MIDI protocol over USB. \n5. THE CUBIC CROSSFADER \nThe Cubic Crossfader is the final piece of the ColorDex puzzle: a \nsmall handheld cube that allows the DJ to wirelessly control the \nvolume of individual tracks, seamlessly crossfade between them \nand create mixed music.  \n \nFigure 5. The Cubic Crossfader for wirelessly mixing tracks. \nEach of the cube\u2019s faces is painted with one of the six colors that \nhave been used to identify tracks in both the GUI and the HDDJ \n(cf. Figure 5).  Note how each edge indicates the adjoining face-\ncolors. This was a modification that was made after a very early \ntrial, when it was discovered that it was otherwise difficult to \nremember the colors of the hidden faces. The color-edges provide \nan effective cognitive aid that solves that problem. \nFigure 6 illustrates how the Cubic Crossfader is used by the DJ to \ncontrol volume levels and mix tracks. The volume level of any \ncolor-track is equivalent to the amount of the cube\u2019s color-side(s) \nthat face upwards. When the cube is placed flat on a table, only \none side is be facing completely upwards and a single track plays \nat full volume. When the cube is rotated by 45 degrees on a single \naxis, two faces will be displayed in equal amounts to the DJ, who \nis looking at the cube downwards, from above. In this case, both \nthose tracks would are at equal volume levels (50% each). When \nthe cube is stood perfectly vertically on a corner, three tracks are \nbe playing, at 33% volume each. These values are not stepped: a \nsmooth rotation of the cube results in a smooth and gradual \ncrossfade between adjacent tracks. \nFigure 6. Crossfading between tracks by revealing different \nproportions of the cube\u2019s colored faces, as seen by the DJ from \nabove. \nThe selection of a cube shape for a crossfader object, and the way \nin which its orientation is mapped to volume levels, are not \narbitrary choices. When the cube sits flat on a surface, it translates \nto having a single track play at full volume. In a DJ\u2019ing situation, \nit is desirable that this is the default state of the crossfader \u2013 in a \nmix DJ\u2019ing performance, most of the time only one track is \nplaying. It is only during song transitions or mixes that the \ncrossfader needs to be manipulated, and at those points it would \nbe \u2018in hand,\u2019 in any case. \nAnother advantage of using the whatever-is-on-top-is-the-volume-\nlevel mapping, is that, although awkward to explain on paper, in \npractice it is almost intuitive, and more importantly, it is \nunambiguous. \u2018Left,\u2019 \u2018right\u2019, \u2018behind\u2019 and \u2018forward\u2019 are all \nrelative to the observer, and as such can all too easily lead to \nconfusion. A \u2018down-side\u2019 is hard too look at, unless the cube is \nheld overhead, leaving the \u2018up-side\u2019 as the most useful for our \npurposes. Almost by coincidence, and due to the force of gravity, \nit is these changes in latitudinal orientation of an object that can \nbe most easily and robustly sensed (c.f \u00a75.1, below).  \nHowever, the choice of a cube does present some additional \nquestions that need to be addressed. There are two possible \nlimitations that stem from that fact that firstly, in a cube, all sides \ncannot be displayed to the DJ simultaneously, and secondly, not \nall sides are adjoining. With the current mapping, the first \nlimitation places a limit on how many tracks can be mixed at any \none time. This is not necessarily a problem for our system: mixing \neven two tracks properly is hard work, and we are satisfied that \nour system allows the DJ to experiment with mixing \u2018only\u2019 up to \nthree tracks. The second limitation can potentially be more of an \nissue: if the DJ cannot mix just any three tracks, they must then be \nable to know, or remember somehow, which tracks can be mixed \ntogether and which not. This could potentially result an \nundesirable cognitive overload at a time when quick thinking and \ndecision-making are essential. The cube provides strong cognitive \nclues as to which tracks can be mixed together \u2013 any colors that \nadjoin each other will work. The problem lies more in using the \nCubic Crossfader in conjunction with the GUI, which presents the \ntracks as a list. In this case, our solution was to carefully order the \ntracks in the GUI in such a way that any two tracks that follow \neach other in the list can be mixed together, with \u2018blue\u2019 wrapping \naround to \u2018white\u2019.  Even if looking only at the GUI when planning \na mix sequence, it is easy to tell that a mix between \u2018red\u2019 and \n\u2018black\u2019 is possible, but a crossfade between \u2018yellow\u2019 and \u2018red\u2019 \ncannot be achieved smoothly (these two colors will be found in \nopposite faces of the cube).  \n5.1 Using a 3D accelerometer to determine \ncube-orientation \nAcceleration sensors, or accelerometers, are small, cheap, robust, \nand consume relatively little power. As the name implies, \naccelerometers sense changes in velocity along an axis of \nmovement. Due to the force of the Earth\u2019s gravity, as well as any \nacceleration we may be subject to by moving around, we \nconstantly experience an acceleration of 9.8 m\/s2, or 1G, towards \nthe center of the planet. This allows accelerometers to be used as \naccurate tilt-sensors: a stationary accelerometer with its sensing-\naxis placed horizontally to the ground will read a value of 0G, \nwhile one with its sensing axis aligned vertically will read a value \nof +1G, or -1G, depending on which way up it is oriented. \n \n \nFigure 7. Sample training data to calibrate cube orientation. \n\u2018Face\u2019 refers to the currently top-facing side of the cube. \nNowadays it is easy to get hold of 3D accelerometers, which are \neffectively three single axis accelerometers arranged at orthogonal \nangles to each other within a single IC package. Figure 7 shows \nsome actual data from the 3D accelerometer used in the Cubic \nCrossfader and that was used in a calibration procedure (where the \nColorDex GUI asks the DJ to \u2018Place the Cubic Crossfader with \nthe RED side UP, then click OK\u2019). This procedure is repeated for \nall of the cube faces until the program has collected sensor \nreadings for each of the six orientations. Notice that, for each pair \nof opposing faces (they are numbered as they would be on a die) \none of the sensor readings shows an extreme change from +1G in \none case, to -1G in the other. To determine the orientation of each \nface, it is this \u2018extreme\u2019 sensor reading that is taken into account, \ni.e. sensor X for faces 1 and 6; sensor Y for faces 2 and 5, and \nsensor Z for faces 3 and 4. As face 1 is rotated latitudinally, away \nfrom the top towards a lateral position, the readings for sensor X \nwill gradually decrease, tending towards 0G. If the cube continues \nto be rotated in this way, the sensor reading will drop even further, \ntending towards -1G, meaning that face 6 is now surfacing to the \ntop position (and, conversely, face 1 is heading for the bottom). In \nthis way, having previous knowledge of how the faces are \narranged in respect to the sensor axis, it is simple to calculate the \ncurrent orientation of the cube. A more elegant and versatile \napproach has been introduced by Van Laerhoven et al. in [10], \nwhere, by applying a maximum likelihood estimation using \nmultivariate Gaussians on the sensor readings, it is possible to \ntrain the cube not only to recognize its orientation, but also \ngestures performed with it such as \u2018shaking,\u2019 \u2018twisting\u2019 and \n\u2018knocking\u2019.   \nSince the accelerometers are also susceptible to the forces \nresulting in \u2013 for example \u2013 shaking the Cubic Crossfader back \nand forth, subjecting the cube to tangential forces will have an \naudible repercussion on the track\u2019s volume levels. Small \nunintentional vibrations, caused by regular manipulation of the \nCrossfader when mixing tracks, can be filtered out (see \u00a75.2, \nbelow). However, we find it interesting to consider the avenues a \nDJ might explore in using the Crossfader when it is understood \nhow the sensing technology works, and how it may be \n(mis)appropriated to generate new and unexpected results:  \nshaking it, swinging it around on a string or even throwing it \naround the audience would all have a distinct effect, possibly \ninteresting, on the music mix that is being played.  \n5.2 Cubic Crossfader Implementation Details \nThe Cubic Crossfader prototype uses a 3-axis ADXL from Analog \nDevices, with a sensing range of \u00b12G, and PWM output. The \nsensor output is continuously sampled at 100Hz by a PIC \nmicrocontroller, and the data is smoothed using a using moving-\nwindow average algorithm that eliminates the small-scale \nvibrations experienced when holding the device with shaky hands, \nbut without generating a perceptible \u2018damping\u2019 or delay in \nresponse time. In order to reduce power consumption, data is \ntransmitted to the PC only when the variance on the sensor data \nstream exceeds a set threshold. A Linkmatik 2.0 \u201cSerial-over-\nBluetooth\u201d module is used for wirelessly transmitting data to the \nColorDex software on the PC. Calibration and calculation of the \ncube orientation based on the sensor data takes place within the \ncore ColorDex program. The PIC microcontroller is more than \npowerful enough to perform these calculations on board, but, as \nwith the HDDJ device, this was a design choice was made to \nmaintain the device implementation as application-independent as \npossible. \n6. DISCUSSION AND FUTURE WORK \nThe ColorDex system, from initial conception to the current \nprototype implementation, has undergone a number of changes \nbased on the feedback of a number of professional and bedroom \nmix-DJ\u2019s. The most important change made to the initial design \nwas the addition of the start\/stop and cue buttons to the HDDJ \ndevice. Previously these functions had been accessible only \nthrough the GUI, requiring the DJ to shift their focus between \ntouch-screen\/mouse and HDDJ. Apart from browsing for and \nselecting tracks (for which a point-and-click GUI is better suited \nthan any additional device we could introduce) the resulting \ndesign allows the DJ to distribute their attention and manual \ncontrol effectively between the DJ components: gaze directed \ntowards the GUI, dominant hand on the HDDJ preparing tracks \nfor mixing, and the non-dominant hand coping well with the \nactions of holding and rotating the cube to perform crossfades.  \nA number of DJ\u2019s have experimented with the device in an \ninformal situation, and have on the whole responded favorably to \nthe system, particularly to the engaging and entertaining factor \nthey consider it would add to the performance \u2013 both for the DJ \n(\u201cthis is really fun to use\u201d was mentioned more than once) as for \nthe audience (\u201cpeople would freak out if they saw this: it is so \nMinority Report\u201d was the comment from one DJ, referring to a \nsci-fi Hollywood movie famous for the futuristic interfaces it \nportrays).   \nAt the time of writing, only a single live trial has been conducted \nat a semi-public party where the first author, an amateur music-\nmixer, was asked to DJ. Due to admittedly mediocre beatmaching \nskills, creating successful 2-way mixes was a challenge in itself. \nHowever, once a 2-track mix was in place, the effort of \nintroducing a third element was surprisingly not any harder. Once \nthree tracks were beatmatched and playing in synchronicity, it was \nvery entertaining to be able to seamlessly bring elements of each \nin and out of the mix by simply rotating the cube in a conical \nmotion. The wireless feature of the Cubic Crossfader also added a \nnew participatory aspect to the performance: allowing the DJ to \nwander out from behind the desk and engage with the audience \nwhile retaining some control over the mix. Another notable \nbenefit was the ability to \u2018lay out\u2019 a mix sequence, a few tracks in \nadvance. The two difficulties that came out of the trial are, one: it \nis hard to see the colored cube under party-lighting conditions; \nand two: continuous Bluetooth transmission consumes a lot of \npower, draining the 500mAh batteries after 3 hours. A new design \niteration on the Cubic Crossfader will address these issues: the \nfirst by adding colored lights to the faces of the cube, and the \nsecond by revising the firmware to incorporate adaptive sensor \nsampling and wireless transmission rates to maximize battery life.  \n7. ACKNOWLEDGMENTS \nThis research was supported by the UK Engineering and Physical \nSciences Research Council as part of the Equator IRC  (grant \nGR\/N15986\/0), and by the Ministry of Economic Affairs of the \nNetherlands as part of the Smart Surroundings project (contract \n03060).  \n8. REFERENCES \n[1] Andersen, T.H., Mixxx: Towards Novel DJ Interfaces. In \nProceedings of the NIME\u201903. Montreal, Canada. 2003. \n[2] AudioDJStudio for .NET. MultiMediaSoft \nhttp:\/\/www.audiodjstudio.com \n[3] Brewster, B. and Broughton, F. How to DJ (Properly): The \nArt and Science of Playing Records. Bantam Press. 2006. \n[4] Buxton, W. There\u2019s More to Interaction than Meets the Eye: \nSome Issues in Manual Input. In Norman, D. A. Draper, S. \nW. (Eds.), User Center System Design: New Perspectives on \nHuman Computer-Interaction . 1986. \n[5] Beamish, T., Maclean, K., and Fels, F. Manipulating Music: \nMultimodal Interaction for DJs. In Proceedings of CHI\u201904. \n2004. \n[6] Beamish, T., Maclean, K., van del Doel, K., and Fels, F. \nD\u2019Groove: A Haptic Turntable for Digital Audio Control. In \nProceedings of the 2003 International Conference on \nAuditory Display, Boston.  2003.  \n[7] Instructables: Step-by-step project instructions.  \nhttp:\/\/www.instructables.com \n[8] Lippit, T.M. Realtime Sampling System for the Turntablist \nVersion 2: 16padjoystickcontroller. In Proceedings o \nNIME\u201904. Hamamatsu, Japan. 2004. \n[9] Hansen, K.F., Bresin, R. Mapping strategies in DJ \nscratching. In Proceedings of NIME\u201906. 2006. \n[10] Van Laerhoven, K,.Villar, N., Schmidt, A., Kortuem, G. and \nGellersen. H. Using an Autonomous Cube for Basic \nNavigation and Input. In Proceedings of ICMI\/PUI 2003.\n"}