{"doi":"10.1076\/csed.11.1.33.3843","coreId":"57271","oai":"oai:eprints.lincoln.ac.uk:13","identifiers":["oai:eprints.lincoln.ac.uk:13","10.1076\/csed.11.1.33.3843"],"title":"Evaluating groupware support for software engineering students","authors":["Drummond, Sarah","Boldyreff, Cornelia","Ramage, Magnus"],"enrichments":{"references":[{"id":18433877,"title":"An Investigation into Computer Support for Cooperative Work in Software Engineering Groups. Unpublished MSc,","authors":[],"date":"1999","doi":null,"raw":"Drummond, S. (1999). An Investigation into Computer Support for Cooperative Work in Software Engineering Groups. Unpublished MSc, University of Durham, Durham.","cites":null},{"id":18433880,"title":"Building a System in Virtual Reality with LearningWorks. Paper presented at the Integrating Technology into Computer Science Education,","authors":[],"date":"1998","doi":"10.1145\/282991.282996","raw":"Goldberg, A. (1998, 1998). Building a System in Virtual Reality with LearningWorks. Paper presented at the Integrating Technology into Computer Science Education, Dublin, Ireland.","cites":null},{"id":18433874,"title":"CSCW: Four Characters in Search of a Context: Elsevier Science.","authors":[],"date":"1991","doi":null,"raw":"Bannon, L., & Schmidt, K. (Eds.). (1991). CSCW: Four Characters in Search of a Context: Elsevier Science. Boldyreff, C. CSCW Module : http:\/\/www.dur.ac.uk\/~dcs0cb.","cites":null},{"id":18433887,"title":"Developing a Virtual Community for Student Groupwork: Final Report :","authors":[],"date":"1998","doi":"10.1016\/s0950-5849(98)00042-1","raw":"Layzell, P., Macaulay, L., Young, R., Boldyreff, C., Drummond, S., Brereton, P., Lees, S., & Gumbley, M. (1998). Developing a Virtual Community for Student Groupwork: Final Report : Department of Computation, UMIST.","cites":null},{"id":18433882,"title":"Doing Software Development: Occasions for Automation and Formalisation. Paper presented at the","authors":[],"date":"1997","doi":"10.1007\/978-94-015-7372-6_12","raw":"Grinter, R. E. (1997). Doing Software Development: Occasions for Automation and Formalisation. Paper presented at the Fifth European Conference on Computer Supported Cooperative Work, Lancaster, UK.","cites":null},{"id":18433886,"title":"Enhancing Software Development Project Courses Via Industry Participation.","authors":[],"date":"1997","doi":"10.1109\/sedc.1997.592454","raw":"Harrison, J. V. (1997). Enhancing Software Development Project Courses Via Industry Participation. Paper presented at the Tenth Conference on Software Engineering Education and Training, Virginia Beach, Virginia, USA. Huddersfield, U. o. CoMentor : http:\/\/comentor.hud.ac.uk\/.","cites":null},{"id":18433884,"title":"Groupware and Social Dynamics: Eight Challenges for Developers.","authors":[],"date":"1994","doi":"10.1145\/175222.175230","raw":"Grudin, J. (1994). Groupware and Social Dynamics: Eight Challenges for Developers. Communications of the ACM, 37(1), 93 - 105.","cites":null},{"id":18433891,"title":"Learning from Notes: organisational issues in groupware implementation.","authors":[],"date":"1992","doi":"10.1145\/143457.143549","raw":"Orlikowski, W. (1992). Learning from Notes: organisational issues in groupware implementation. Paper presented at the Proceedings of the .Conference on Computer-Supported Cooperative Work (CSCW 92).","cites":null},{"id":18433894,"title":"Measuring Team Activities in a Process-Oriented Software Engineering Course. Paper presented at","authors":[],"date":"1998","doi":"10.1109\/csee.1998.658304","raw":"Robillard, P. N. (1998). Measuring Team Activities in a Process-Oriented Software Engineering Course. Paper presented at the 11th Conference on Software Engineering Education and Training, Atlanta, Georgia.Criterion Email BSCW Functionality Determining the functionality of email in general is difficult. Some students listed functions like sending messages to groups or individuals, sorting messages, filtering, including text and replying. However, many responses seemed to take this for granted and dwelled on the fact that it \u201clacked a lot of functionality\u201d, though this was not specified. The basic view about email was expressed in one response that simply said: \u201cit works, because it has been around for long and everyone knows how to use it\u201d. Most students regarded the functionality of BSCW as very good. One commented that it \u201cworks very well for all aspects of groupwork\u201d. Capabilities for awareness of others\u2019 actions, for different type of documents (and other objects) and different levels of file permissions were noted by several students. One remarked that of the systems they had tried, it was the \u201cmost sophisticated for asynchronous work\u201d. Efficacy Again (as students noted), this depends on the client program used. Speed seemed to be more acceptable than with BSCW, though some had experienced delays using automated mailing lists. Few reported other problems with the effective working of their email tool, although again this may be due to long experience. In general, the tool seemed to do all that was promised effectively. However, the slow nature of the tool was remarked upon by most people. This made them more likely to make longer points, and in effect made their use of the tool entirely asynchronous (although it can also support synchronous working). Usability Most students, given their long experience with email (which some remarked on) found it very usable. Some functions, especially filtering and sorting by subject, were especially noted as increasing its usability; a lack of threading decreased it. Awareness of whether others are online was felt to be lacking, although as most check email very regularly, they were aware of new messages. Automated mailing lists (via majordomo) helped. Students were very impressed by BSCW\u2019s \u201cexcellent\u201d UI \u2013 it was felt to be \u201cvery easy to work with\u201d. Some said that it was at the limit of the functions that could be sensibly handled: more would have made it cluttered. One remarked that continually reloading the page of messages to find out if new ones had arrived was a nuisance, although it was useful to get emails to tell them this. Individual effect Students felt that email integrates into other working practices, which is efficient, as well as sometimes substituting for the telephone and face-to-face contact. It encourages informal communication, although this can both help and hinder effectiveness! Short messages were felt to be more common than longer ones (this is perhaps partly due to the short time between receipt and reply among the students, who would often use email almost synchronously, as for a conversation). By contrast with email, longer messages were commoner than short ones. The ease of use of the program was felt by some to encourage \u201ca feeling of professionalism\u201d. The awareness function helped to diminish feelings of isolation during discussions. For some, it made them feel \u201cmore part of a group at work\u201d. Group effect Respondents felt both that email \u201csegregates & individualises\u201d and that it \u201callows personal contact between individuals\u201d, the former referring to the potential for conversations to develop among individuals, ignoring the whole group. Again, the difficulty of threaded conversations was mentioned. BSCW was said to be effective in  \u201cmaintain[ing] the group, since all members can see all the work\u201d. The shared workspace concept was regarded as helpful, as was being able to \u201corganise and document discussions\u201d. Organisational  Email serves to \u201cfoster friendship and intimacy among group  BSCW was said to be effective at assisting organisational effect (mostly from speculation rather than experience) members\u201d. Full mailboxes, especially with (perceived) junk mail or many messages in a discussion, can be a distraction from work. learning \u2013 it \u201cmakes the work of the organisation more visible\u201d, and helps it to \u201ceasily identify group members & contributions\u201d. Table 1: Comparison of Email and BSCW","cites":null},{"id":18433881,"title":"Real-World Software Engineering: A Spiral Approach to a Project-Oriented Course. Paper presented at the","authors":[],"date":"1994","doi":"10.1007\/bfb0017610","raw":"Gotterbarn, D., & Riser, R. (1994). Real-World Software Engineering: A Spiral Approach to a Project-Oriented Course. Paper presented at the Proc. 7th Conference on Software Engineering, San Antonio, Texas, USA.","cites":null},{"id":18433889,"title":"Software development process models.","authors":[],"date":"1991","doi":"10.1016\/b978-0-7506-0813-8.50022-8","raw":"McDermid, J. A., & Rook, P. (1991). Software development process models. In J. A. McDermid (Ed.), Software Engineer's Reference Book (pp. 1 -35): Butterworth-Heinemann.","cites":null},{"id":18433879,"title":"Software Engineering Group Project work: Past, Present and Future,","authors":[],"date":"1997","doi":null,"raw":"Drummond, S., Boldyreff, C., & Munro, M. (1997). Software Engineering Group Project work: Past, Present and Future, Presented at Special Interest Group in the Teaching of Software Engineering (SIGToSE), London. : http:\/\/www.dur.ac.uk\/~dcs1sad\/papers. GMD-FIT. Basic Support for Cooperative Work (BSCW) : http:\/\/bscw.gmd.de\/.","cites":null},{"id":18433888,"title":"Supporting Groupware Conventions through Contextual Awareness. Paper presented at the","authors":[],"date":"1997","doi":"10.1007\/978-94-015-7372-6_17","raw":"Mark, G., Fuchs, L., & Sohlenkamp, M. (1997). Supporting Groupware Conventions through Contextual Awareness. Paper presented at the Proceedings of the Fifth European Conference on Computer Supported Co-operative Work, ECSCW 97, Lancaster, UK,.","cites":null},{"id":18433876,"title":"Systems Thinking, Systems Practice.","authors":[],"date":"1981","doi":"10.1007\/978-1-4757-9883-8_1","raw":"Checkland, P. (1981). Systems Thinking, Systems Practice. Chichester, UK: John Wiley.","cites":null},{"id":18433878,"title":"The Development and Trial of SEGWorld: A Virtual Environment for Software Engineering Student Group Work.","authors":[],"date":"2000","doi":"10.1109\/csee.2000.827026","raw":"Drummond, S., & Boldyreff, C. (2000). The Development and Trial of SEGWorld: A Virtual Environment for Software Engineering Student Group Work. Paper presented at the IEEE Thirteenth Conference on Software Engineering Education and Training, Austin, Texas.","cites":null},{"id":18433892,"title":"The Learning Way: Evaluating Co-operative Systems. Unpublished PhD,","authors":[],"date":"1999","doi":null,"raw":"Ramage, M. (1999). The Learning Way: Evaluating Co-operative Systems. Unpublished PhD, Lancaster, University of Lancaster, UK.","cites":null},{"id":18433890,"title":"Usability Engineering: A","authors":[],"date":"1993","doi":"10.1016\/b978-0-08-052029-2.50008-5","raw":"Nielsen, J. (1993). Usability Engineering: A P Professional.","cites":null},{"id":18433875,"title":"Web-Based Support for Software Engineering Group Projects : http:\/\/www.dur.ac.uk\/~dcs1sad\/papers Presented at ECSCW 97,","authors":[],"date":"1997","doi":null,"raw":"Boldyreff, C., Drummond, S., & Walker., R. (1997). Web-Based Support for Software Engineering Group Projects : http:\/\/www.dur.ac.uk\/~dcs1sad\/papers  Presented at ECSCW 97, Lancaster University.","cites":null},{"id":18433885,"title":"Why Groupware Succeeds: Discretion or Mandate? Paper presented at the","authors":[],"date":"1995","doi":"10.1007\/978-94-011-0349-7_17","raw":"Grudin, J., & Palen, L. (1995). Why Groupware Succeeds: Discretion or Mandate? Paper presented at the Proceedings of the Fourth European Conference on Computer-Supported Co-operative Work, ECSCW 95, Stockholm.","cites":null},{"id":18433883,"title":"Workflow Systems: Occasions for Success and Failure. Computer Supported Cooperative Work:","authors":[],"date":"1999","doi":"10.1023\/a:1008719814496","raw":"Grinter, R. E. (1999). Workflow Systems: Occasions for Success and Failure. Computer Supported Cooperative Work: TheJournal of Collaborative Computing, 9(2).","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2001-01","abstract":"Software engineering tasks, during both development and maintenance, typically involve teamwork using computers. Team members rarely work on isolated computers. An underlying assumption of our research is that software engineering teams will work more effectively if adequately supported by network-based groupware technology. Experience of working with groupware and evaluating groupware systems will also give software engineering students a direct appreciation of the requirements of engineering such systems.\\ud\n\\ud\nThis research is investigating the provision of such network-based support for software engineering students and the impact these tools have on their groupwork. We will first describe our experiences gained through the introduction of an asynchronous virtual environment \u00ad SEGWorld to support groupwork during the Software Engineering Group (SEG) project undertaken by all second year undergraduates within the Department of Computer Science. Secondly we will describe our Computer Supported Cooperative Work (CSCW) module which has been introduced into the students' final year of study as a direct\\ud\nresult of our experience with SEG, and in particular its role within Software Engineering. Within this CSCW module the students have had the opportunity to evaluate various\\ud\ngroupware tools. This has enabled them to take a retrospective view of their experience of SEGWorld and its underlying system, BSCW, one year on. We report our findings for SEG in the form of a discussion of the hypotheses we formulated on how the SEGs would use SEGWorld, and present an initial qualitative assessment of student feedback from the CSCW module","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/57271.pdf","fullTextIdentifier":"http:\/\/eprints.lincoln.ac.uk\/13\/1\/CSEJournal.pdf","pdfHashValue":"588ee97b49367af40dfff3d1636a61dca4088e28","publisher":null,"rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:eprints.lincoln.ac.uk:13<\/identifier><datestamp>\n      2013-03-13T08:21:32Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      7375626A656374733D6A6163735F47:6A6163735F47363030<\/setSpec><setSpec>\n      74797065733D61727469636C65<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/eprints.lincoln.ac.uk\/13\/<\/dc:relation><dc:title>\n        Evaluating groupware support for software engineering students<\/dc:title><dc:creator>\n        Drummond, Sarah<\/dc:creator><dc:creator>\n        Boldyreff, Cornelia<\/dc:creator><dc:creator>\n        Ramage, Magnus<\/dc:creator><dc:subject>\n        G600 Software Engineering<\/dc:subject><dc:description>\n        Software engineering tasks, during both development and maintenance, typically involve teamwork using computers. Team members rarely work on isolated computers. An underlying assumption of our research is that software engineering teams will work more effectively if adequately supported by network-based groupware technology. Experience of working with groupware and evaluating groupware systems will also give software engineering students a direct appreciation of the requirements of engineering such systems.\\ud\n\\ud\nThis research is investigating the provision of such network-based support for software engineering students and the impact these tools have on their groupwork. We will first describe our experiences gained through the introduction of an asynchronous virtual environment \u00ad SEGWorld to support groupwork during the Software Engineering Group (SEG) project undertaken by all second year undergraduates within the Department of Computer Science. Secondly we will describe our Computer Supported Cooperative Work (CSCW) module which has been introduced into the students' final year of study as a direct\\ud\nresult of our experience with SEG, and in particular its role within Software Engineering. Within this CSCW module the students have had the opportunity to evaluate various\\ud\ngroupware tools. This has enabled them to take a retrospective view of their experience of SEGWorld and its underlying system, BSCW, one year on. We report our findings for SEG in the form of a discussion of the hypotheses we formulated on how the SEGs would use SEGWorld, and present an initial qualitative assessment of student feedback from the CSCW module.<\/dc:description><dc:date>\n        2001-01<\/dc:date><dc:type>\n        Article<\/dc:type><dc:type>\n        NonPeerReviewed<\/dc:type><dc:format>\n        application\/pdf<\/dc:format><dc:language>\n        en<\/dc:language><dc:identifier>\n        http:\/\/eprints.lincoln.ac.uk\/13\/1\/CSEJournal.pdf<\/dc:identifier><dc:identifier>\n          Drummond, Sarah and Boldyreff, Cornelia and Ramage, Magnus  (2001) Evaluating groupware support for software engineering students.  Computer Science Education, 11  (1).   pp. 33-54.  ISSN 1744-5175  <\/dc:identifier><dc:relation>\n        http:\/\/dx.doi.org\/10.1076\/csed.11.1.33.3843<\/dc:relation><dc:relation>\n        10.1076\/csed.11.1.33.3843<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/eprints.lincoln.ac.uk\/13\/","http:\/\/dx.doi.org\/10.1076\/csed.11.1.33.3843","10.1076\/csed.11.1.33.3843"],"year":2001,"topics":["G600 Software Engineering"],"subject":["Article","NonPeerReviewed"],"fullText":"Evaluating Groupware Support for Software Engineering Students\nSarah Drummond \nDepartment of Computer\nScience\nUniversity of Durham,\nUK \nSarah.Drummond@durham.ac.uk\n          Cornelia Boldyreff\nDepartment of Computer\nScience\nUniversity of Durham,\nUK\nCornelia.Boldyreff@durham.ac.uk\n             Magnus Ramage\nDepartment of Computer\nScience\nUniversity of Durham, \nUK\nMagnus.Ramage@durham.ac.uk\nAbstract\nSoftware engineering tasks, during both development and maintenance, typically involve\nteamwork using computers. Team members rarely work on isolated computers. An underlying\nassumption of our research is that software engineering teams will work more effectively if\nadequately supported by network-based groupware technology. Experience of working with\ngroupware and evaluating groupware systems will also give software engineering students a\ndirect appreciation of the requirements of engineering such systems.\nThis research is investigating the provision of such network-based support for software\nengineering students and the impact these tools have on their groupwork.  We will first\ndescribe our experiences gained through the introduction of an asynchronous virtual\nenvironment \u2013 SEGWorld  to support  groupwork during the Software Engineering Group\n(SEG) project undertaken by all second year undergraduates within the Department of\nComputer Science.  Secondly we will describe our Computer Supported Cooperative Work\n(CSCW) module which has been introduced into the students\u2019 final year of study as a direct\nresult of our experience with SEG, and in particular its role within Software Engineering.\nWithin this CSCW module the students have had the opportunity to evaluate various\ngroupware tools. This has enabled them to take a retrospective view of their experience of\nSEGWorld and its underlying system, BSCW, one year on.  We report our findings for SEG in\nthe form of a discussion of the hypotheses we formulated on how the SEGs would use\nSEGWorld, and present an initial qualitative assessment of student feedback from the CSCW\nmodule. \n1. Introduction\nIn recent years there has been an appreciation of the benefits that can be obtained by software\nengineering students working in groups or teams (Bannon & Schmidt, 1991; Boldyreff,\nDrummond, & Walker., 1997; Brereton et al., 1998; Gotterbarn & Riser, 1994; Habra &\nDubois, 1994; Harrison, 1997; Robillard, 1998). As well as reinforcing theoretical concepts,\ngroup projects provide students with experience of the type of teamwork found in industry. It\nis important that students gain experience of this mode of working and that they are provided\nwith appropriate computer support.\nCSCW has been well reported in European and international conferences for the past fourteen\nyears, and has formed an important background to our research reported here. However, little\nresearch has been reported on the development of CSCW to support groupwork in higher\neducation and, in particular, software engineering education.  Nor has the topic of CSCW\napplied to software engineering been extensively addressed by current research; exceptions\nare the work reported by Grinter (Grinter, 1997; Grinter, 1999). In contrast there has been\nmore research undertaken in the evaluation of groupware but this has been from a more\nbusiness oriented rather than an educational perspective (Grudin & Palen, 1995; Mark, Fuchs,\n& Sohlenkamp, 1997; Orlikowski, 1992). The remainder of this paper addresses the\neducational context of our research in section 2.  The Software Engineering Group (SEG)\nproject is described in section 3, followed in section 4 by the network-based computer support\ndeveloped which is based on the groupware tool \u201cBasic Support for Cooperative Work\u201d\n(BSCW) (GMD-FIT).  The results obtained to date for SEG work are presented in section 5.\nSection 6 introduces the structure of the CSCW module and the criterion used for student\nevaluation of four groupware tools.  Section 7 addresses our initial findings from the CSCW\nmodule, which are based on student feedback from a questionnaire with emphasis placed on\nBSCW responses, enabling us to make a comparison between the usage in the SEG year and\nsubsequent CSCW year.  A final section presents our conclusions.\n2. Software Engineering education at Durham\nThe Software Engineering (SE) module is taught to all 2nd year undergraduate students\nstudying in the Computer Science department. An important part of the module is the\npractical component that consists of the Software Engineering Group (SEG) project that runs\nin parallel with the SE lectures throughout the academic year.  The lectures in SE cover all the\nmajor concepts relevant to the software lifecycle activities as well as topics relevant to the\nmanagement of software projects. \nIn the SEG project, students carry out all of the main activities of the software lifecycle\nsupplemented by intermediate tasks undertaken as supervised practical work.  The\nintermediate tasks include e.g. introduction to desktop video conferencing, introduction to the\nshared workspace, domain analysis, cost estimation, project planning, risk management,\ngroupwork, configuration management. \nThe students carry out the majority of the SEG work independently in small teams.  Each\nteam has a member of staff who acts as the group\u2019s tutor, consultant, and customer.  Typically\nstudents will meet with their tutor fortnightly to discuss their progress. \nMost students taking a degree within the department go onto study SE II in their final year.\nThese students undertake an individual final year project (which always involves a major\nimplementation) but the final year modules rarely involve any team work. Thus, the SEG\nproject described in more detail below, is the students\u2019 main experience of teamwork based\ndevelopment during their degree course\nIn addition to students choosing the SEII module many take the CSCW\/Requirements\nEngineering module.  The CSCW component exposes students to practical usage of\ngroupware and to the related social, organisational and design issues relevant to CSCW as\nwell as the role of CSCW within Software Engineering.  Within this module students are\nasked to evaluate four groupware systems.  Experience that these students have gained from\nundertaking SEG the previous year allows them to take a retrospective view of BSCW in\nparticular. The web pages developed as a resource to support students taking this module give\nfuller details of its content (Boldyreff, ).\n3. The Software Engineering Group (SEG) project\nSEG projects have run successfully since 1984 within the Department of Computer Science.\nTheir introduction and subsequent development has been largely motivated by a perceived\nneed to prepare students for typical working practice found in industry.  This type of project\npresents the first opportunity for the student to work as part of a group, to divide up work\namong several team members and make technical and managerial decisions as a group - a not\nuncommon real-life parallel.  \nThe project itself is well structured into phases (Drummond, Boldyreff, & Munro, 1997)\n(Figure 1), and follows the classical waterfall software lifecycle model, with some optional\nprototyping.  The waterfall model, generally implies that software development is undertaken\nin a series of definite steps, with no iteration, whereas in reality, software development can be\ncarried out in parallel and iteration is common. Within the SEG project work, iteration is\nprovided for, by allowing the students to specify changes at the beginning of each phase.\nMcDermid discusses this type of iterative interaction in (McDermid & Rook, 1991).  \nStudents have the opportunity to evaluate the work of other groups as well as their own; for\nexample, at the end of the requirements phase each group carries out an appraisal of another\ngroup\u2019s requirements document followed by acceptance testing for the product developed by\nthe same group.  At the end of the group work, the all students are asked to produce a project\nlegacy report where they take a critical look at how they have worked as a team during the\nproject, what went wrong, how they rectified it and finally would they do it differently next\ntime.  This is a valuable learning exercise for the students.  These legacy reports provide\nvaluable feedback to all the staff involved in the SEG project.\nOne of the major achievements of the SEG project is that it provides students with early\nexperiences with system building concepts and practices.  This meets the industrial need for\ngraduates with experience of building systems in a team rather than experience of simply\nworking as a collection of individual programmers as discussed by Goldberg (Goldberg,\n1998).  In recognition of this, there are various industrially sponsored SEG prizes awarded\neach year. \n*B.Meyer, \"On Formalism in Specification\" IEEE Software 1985 pp6-26\nPreparatory\nPhase: 1week\nPhase 5:\n1 week\nPhase 4:\n4 weeks\nPhase 3:\n4 weeks\nPhase 2:\n1 week\nPhase 1:\n5 weeks\nDomain Analysis\nAccept. Test\nImplementation &\nTesting\nDesign\nReq.Appraisal\nRequirements\nSoftware Engineering Group Project (SEG)\nProcess Model\nOverview\nDev. Op & Maint.\nEnvironments\nInterface, DFD\nPerformance\nException\nhandling\nVer.& Imple\nfeatures\nModification &\nenhancements\nAccept criteria\nAppraisal of\nanother groups'\nreq. spec.  Based\non \"7 Sins of\nRequirements\nDefinition\"*\nProject domain\nresearch\nRationale for test\nmethod chosen\nAssessment of\nsystem based on\nrequirements\nspec.\nDomain\nAnalysis report\nRequirements\nSpecification\ndocument\nRequirement\nAppraisal report\nDesign\ndocument\nTesting\nStrategy report\nand source\ncode\nAcceptance\nTesting report\nSEG Deliverables\nOverview  of\ndesign\nModule descr.\nSystem org.\nChanges to\nreqs.\nDesign Method\nand rationale\nImple. plan\nChanges to\ndesign\nCommand\nsummary\nImpl & Testing\nstrategy\nKnown\nproblems\nWorking\nsystem\nFigure 1: SEG project phases and process model\nHaving successfully established and run SEG projects, the department has considered how\nthese could be improved to more realistically mirror industrial practice in software\nengineering. In particular, these considerations have given rise to studies to identify\nappropriate groupware technology for supporting SEG projects and the development of a\nvirtual software engineering environment.  With university funding we have been able to\ndevelop and monitor the introduction of network-based asynchronous computer support for\nthe SEG project (Boldyreff et al., 1997). We now are able to report on our experiences of\ndeveloping and using the virtual software engineering environment since 1997.\n4. Creation of SEGWorld - a virtual environment for Software Engineering\nstudents\nOur initial studies (Layzell et al., 1998) identified a need for groupware tools to enable SEG\nstudents to easily share documents and applications; we therefore investigated how we could\neffectively introduce an asynchronous groupware system - BSCW into the SEG students\u2019\nworking environment.\nIn the initial phase of the development, a virtual environment, SEGWorld, based on BSCW\nhas been developed.  SEGWorld is Web-based and essentially provides a repository for all the\nrelevant teaching materials associated with SEG projects.  A public workspace is provided,\nwhich allows all SEG students and associated staff, access to software tools relevant to\nstudent project work, and to other facilities i.e. posting general notices or queries.  Private\ngroup workspaces, allow for the development and secure keeping of each group\u2019s practical\nreports and project deliverables.  \nTo further support students during the SEG project, the Department of Computer Science\nfunded a small multimedia PC laboratory dedicated for SEG student use. To better utilize the\nSEGLab, we have divided this space into three small offices and a common meeting area.  A\nWeb-based online booking form has been developed which permits groups to book an\n\u201coffice\u201d and allows staff to monitor SEGLab usage.  \nDuring the development of SEGWorld, we formulated a number of hypotheses about\nproviding groupware, i.e. how it would be used, how it would support the students, and its\nimportance to their work. In the following section two of these hypotheses will be discussed\ntogether with an overview of the supporting evidence obtained during a full year of trial usage\ni.e. 1998-19991 (Drummond & Boldyreff, 2000)\n5. Results obtained during the SEG trial year \nThroughout the academic year, of 1998-1999 the students\u2019 usage of SEGWorld has been\nmonitored and data collected. The data collection methods chosen for this research are, in the\nmain, observational, questionnaires and project monitoring.  \nThis project monitoring took the form of BSCW automatically generating and emailing a list\nof activities undertaken each day in the group workspaces.  This information includes the type\nof activity, student name and time.  In addition to this, students were asked to complete\nquestionnaires, and invited to take part in focus group discussions in order that their views\ncould be collected. \nIn total there were 72 students in groups of 6 or 7 (12 groups).  Questionnaire results are\nbased on responses from 58 students (the completion of questionnaires was not mandatory).\nThe following hypotheses have been selected for discussion:\n1. The introduction of an asynchronous shared workspace into software engineering\ngroupworking will aid group members to organize and coordinate their work.\n2. Greater use of shared workspace functionality will be made as the project\nprogresses\nThe following subsections present each of the hypotheses and the discussion of the associated\nresults.\nHypothesis 1\nThe introduction of an asynchronous shared workspace into software engineering\ngroupworking will aid group members to organize and coordinate their work.\nFrom a high level perspective, figure 2 represents the responses from individual SEG\nstudents, related to the workspace enabling better organization and coordination of their work.\n                                                \n1 A more detailed description of this work and results obtained can be found in Sarah Drummond\u2019s\nMSc thesis (Drummond, 1999).\n0%\n10%\n20%\n30%\n40%\n50%\n60%\n70%\nye\ns \n(i\nn\nd\niv\n. s\ntu\nd\nen\nt \nre\nsp\no\nn\nse\n)\nHelps organise\nw ork?\nWorkspace\nstructure\nuseful?\nBetter comms.\nw ith\ntutor\/group?\nQuestions \nFigure 2: Organization & Coordination activities\nIn general, the students felt that the hierarchical structure of the workspace was intuitive and\ngraphically illustrated how their work was being structured.  But, as the level of\ndecomposition of folders (directories) into sub-folders (sub-directories) increased, navigation\nbecame slow.  Students commented on the lack of shortcuts to the various documents.  In fact,\nstudents were simply unaware that shortcuts are possible. As SEGs have a group UNIX\naccount in addition to their private workspace, five of the groups used both, with UNIX\ngenerally being the preferred choice because of faster system response times.  The poor\nuptake of the communication functions within SEGWorld (i.e. email and automatic meeting\nfacility), was due to the fact that groups met with their tutor face-to-face on a regular basis,\nboth formally (arranged meetings) and informally (i.e. at the end of a lecture), to discuss\nprogress and\/or problems.\nFrom a lower level of granularity, figure 3 highlights a selection of functions provided by the\nsystem, and indicates their usage as reported by the students.  \nMeeting Versioning AttachedNote Catchup\n0%\n10%\n20%\n30%\n40%\n50%\n60%\nU\nse\nd\n f\nu\nn\nct\nio\nn\n (\nin\nd\niv\n. \nre\ns\np\no\nn\ns\ne\ns\n)\nWorkspace Functions\nFigure 3: Functions relating to organization and coordination\nThese functions have been chosen because they are associated with organisation and\ncoordination.  They are as follows:\n\u2022 Meeting - schedules a new meeting showing venue details and those invited to\nparticipate.  E-mail is automatically generated to inform members of these details.\n\u2022 Versioning - versions a document.  A new version is created which becomes the current\nversion, whilst old versions are still readily available.\n\u2022 Attached Note - attaches a note to a specified object that is displayed to other users\nwhen they attempt to access the object.  There is no formal locking mechanism for\nobjects provided, when removed for editing etc.\n\u2022 Catchup - A new document\/object has a \u201cNEW\u201d icon attached.  This \u201cNEW\u201d icon\nremains regardless of how old the document\/object is, unless the catchup facility is used\nto remove it. This distinguishes new documents from existing documents.\nWhilst the meeting facility was thought by group members to be useful, many did not use it\nbecause it was simpler to use existing e-mail systems.  To organize a meeting via SEGWorld\ninvolved loading a browser, entering SEGWorld and then the group private workspace.  To\nconfirm attendance at the meeting involved every attendee replying in this fashion.  Students\nwere asked if they had used this function and whilst figure 3 indicates that over 60% of group\nmembers had, this figure does not reflect the actual low usage over the phases of the project.\nMany of the students had experimented with the meeting function during the initial\nSEGWorld tutorial session, but did not use it to any great extent after this.\nThe versioning mechanism provided was easy to apply, but few of the groups used it. An\ninteresting point noted in the results obtained via the questionnaires were that within at least\ntwo groups, all members stated they had used this function.  When these results were checked\nagainst the automated daily activity logs, it was found that only two members from each of\nthese groups were shown to have actually used the function.  This anomaly may be due to\ninaccurate completion of questionnaires, or that the group members worked around one PC.\nWithin all groups, one member was appointed as secretary, and often this role involved\ncontrolling the versioning of documents. \nThe catchup function, which provides an up-to-date view of the activity i.e. new document,\nwhich has occurred within the workspace, was used very little.  On further questioning, most\nstudents admitted to not being aware of what this function actually did.\nSEGWorld provided a central repository for all group documentation, and as such provided a\ngraphical representation for configuration management (i.e. a historical trail for each\ndocument), and awareness of other group members activities, i.e. determining if a group\nmember had produced or read a section of a document.  This in itself helped the groups in\ncoordinating their work by being aware of the status of a document.  From an organisational\nviewpoint, the workspace provided each group member with some insight into the\ncontributions being made by other members, but much of the organisational strategy\ndeveloped (e.g. distribution of tasks) was in the main, undertaken through face-to-face\ncommunication.\nHypothesis 2\nGreater use of shared workspace functionality will be made as the project progresses.\nThe following graph (figure 4) shows the use made by SEGs, of the various functions\nprovided by SEGWorld, during the different phases of the software lifecycle.  These functions\nare a subset of those available, and were chosen as they represented the most common events\nthat would occur in the process of producing a typical SEG project deliverable.\nThe objective of logging the daily usage of these functions was to determine if the use of\nSEGWorld increased as the project progressed.  This anticipated increase could indicate that\nthe students were becoming more confident in using the workspace, and had overcome any\ninitial problems.  \nSEG: use of BSCW functions\n0\n20\n40\n60\n80\n100\n120\n140\n160\n180\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\ntime - weeks\nto\nta\nl \nu\nsa\ng\ne \n- \nh\nit\ns \n(a\nll\n g\nro\nu\np\ns\n)\ncreate\nread\nedit\ndelete\nversion\nRequirements Req Appr Design Implementation accpt\nFigure 4: Usage of SEGWorld functions during the phases of the software lifecycle\nIn figure 4, most activity is centered on creating and reading the requirements specification.\nThe negligible amount of activity by most SEGs for the editing and versioning functions\ncould indicate that they did not fully understand these functions. Rather than editing or\nversioning an existing document it would appear that they have deleted and then re-created\nthe document.  At this early stage in the use of the workspace this was not unexpected.\nThe requirements appraisal phase (figure 4) shows the use of the create and read activities\nbeing high.  In the case of the create function, approximately 50% of the usage was from three\ngroups only.  The edit function has begun to be used.  This phase is for one week only and the\ndeliverable is a relatively short document.\nThe design phase (figure 4) of SEG is a work intensive phase.  Within this phase it can be\nseen that there is a marked increase in the use of the functions towards the end of the phase.\nThe edit function usage has increased whilst there is a decrease in document creation; this\nmay indicate better student understanding of these functions.  Whilst versioning has been\nused by most groups its usage was still disappointingly low.\nThe implementation phase consists of developing the product software and a report which\ndetails the implementation and testing strategy and any known problems with the system. A\ndepartmental decision was made at the onset of the SEG project, that the use of the SEGWorld\nfor developing code, would be inefficient. BSCW is a generic tool and as such offered SEG\nno support for software code development.  \nWhat is evident from the above graph is that the use of the version function increased slightly\nas the project phase progressed, and more appropriate use was being made of the create,\ndelete and edit functions. \nOverall, utilization of some of the more useful functions, e.g. versioning, was poor and few\nstudents made use of additional functions provided.   This has been attributed to the following\nfactors:\n\u2022 students were aware of many functions but were insufficiently motivated to gain an\nunderstanding of how to use them,\n\u2022 at times, usage of the workspace was hampered by poor response times of the network,  \n\u2022 there was a mismatch between the work in the implementation phase and the support\nprovided by the workspace e.g the use of Modula-2 imposed too great an overhead on\nSEGs, as all modules would have to be continually downloaded.\nOf these factors the main problem that needs to be overcome is the students understanding of\nthe concept of the shared workspace.  Initially the students were introduced to SEGWorld via\nan online tutorial.  Whilst figure 5 shows that students thought the tutorial was useful, and\nthat SEGWorld was intuitive (hence the lack of time invested in learning the system), they in\nfact under-used the system because they did not fully understand the functions available to\nthem.  \nThis under-use has been attributed to certain factors some known i.e. hardware performance,\nand some that were revealed via student comments.  One problem that students encountered\nwas the slow response times of the system.  This was a major contributing factor to the slow\nuptake of the continued use of SEGWorld.  In addition to this, the introduction of SEGWorld\n(via a tutorial) was not at the onset supported by experienced postgraduate laboratory\ndemonstrators, therefore simple problems that arose at this stage were left unsolved and the\nstudents formed a poor image of the system.\nThis problem of introducing a new concept such as a shared workspace highlight that it is not\njust a question of giving students a new application with associated tutorial.  Grudin (Grudin,\n1994) points out that it is not just the technical issues which must be addressed for the\nsuccessful adoption of groupware.  The shared workspace is more than just an application, it\nalso provides awareness of other members activities, and requires the group members to\norganize and coordinate their work differently. \n0%\n10%\n20%\n30%\n40%\n50%\n60%\n70%\n80%\nA\ng\nre\ne \n(i\nn\nd\niv\n.s\ntu\nd\nen\nt \nre\nsp\no\nn\nse\n)\nInterface\nIntuitive\nInvested\ntime\nlearning\nFelt\nconfident\nusing\nBSCW\nWould use\nBSCW\nagain\nOverall\nusability\ngood\nQuestions\nFigure 5: Students General Responses\nThe use of SEGWorld, despite the problems described above, provides the groups with a more\nstable and flexible environment than previously available.  The students appreciate the\nbenefits of the shared workspace but performance problems and a more focused guidance on\nusage are major issues that need to be addressed in the longer term.\n6. Evaluation of SEG results \nWith respect to organization and coordination, the introduction of a shared workspace has\nprovided a formal setting for the practical side of the software engineering module, and the\nstudents have found this both helpful and useful.  Their use of the workspace functions related\nto these activities was reasonably comprehensive, but not consistent throughout the year. \nSEGWorld has allowed us the opportunity to monitor student activity for the purpose of data\ncollection for this study, thus providing the data with respect to functions used by the\nstudents.  The students did not generally make greater use of the workspace functions as the\nproject progressed, but did make more effective use of those they used.  Their use of\nfunctions was generally steady up until the implementation phase.  During this phase the\nsupport for code management was inadequate, and students simply used their accounts on the\nNovell network.\nIt is believed by the authors that the concept and use of SEGWorld was in principle, well\nreceived by both staff and students, but, in reality the system was under used.  The reasons for\nthis have been attributed to firstly, the poor system responses times which proved to be the\nlargest complaint received from students; secondly, the initial introduction to the system was\nvia an on-line tutorial which proved to be limited, and thirdly, the early SEGWorld sessions\nwere not supported by experienced demonstrators.  We have made some headway in\naddressing these problems in recent years as we have continued to use SEGWorld.\nWhile using SEGWorld, the students do gain insight into the need for developing protocols\nfor the way in which they worked i.e. how best to organize, structure and coordinate their\nwork.  A side effect of this is better group fusion. SEGWorld not only provides the students\nwith the opportunity to evaluate new technologies in a practical manner, but also allowes\nthem to gain an understanding of group interaction, and how these interactions must be\nsupported, which is a vital factor in the design of groupware. The students all feel that the\nexperience gained of groupware is important to them for their future employment prospects.\nSome unexpected benefits of introducing SEGWorld into the department\u2019s teaching have\nresulted.  The visibility of the work of the SEG students reflected in the SEGWorld private\nworkspaces, has provided the SEG tutors with some insights into the contributions of the\nindividual students within the group, and more generally gives a means of assessing group\u2019s\nprogress. This individual monitoring was not a primary requirement of the system but has\nproved a very useful feature.  Another benefit is that both students and staff have gained\npractical experience of groupware requirements in a software engineering context.   It has\nmade both students and staff aware of the need for groupware to be designed and developed\nwith specific support for software engineering tasks. \nWith the experience we gained within the CSCW field during our research on virtual\nenvironments in general and SEGWorld in particular, it was decided to develop and introduce\ninto our curriculum a final year optional module on CSCW in 1999-2000.  The SEG students\nmonitored in 1998-1999 now proceeded to their final year and a number of them chose the\nCSCW option.  We believe that it is an interesting exercise to follow these students from their\nuse of BSCW during the SEG exercise to a more formal evaluation of other similar\ngroupware tools including BSCW, as part of the CSCW module.  The structure of the CSCW\nmodule and the evaluation criterion are described in the next section.\n7. Introduction of a CSCW module\nIn the academic year 1999-2000, the success of SEGWorld as reported above was one of the\nreasons for the creation of a third-year (i.e. final year) module on Computer-Supported Co-\noperative Work (CSCW). This course was paired with one on Requirements Engineering\n(RE); the bulk of the RE part of the module was taught in the autumn term of 1999, and the\nCSCW part was taught in the spring term of 2000.\nThe CSCW module was designed with two distinctive features. First, it was intended to be\ninterdisciplinary, and in particular to stretch the awareness of Software Engineering students\non issues from the social sciences that they had not previously encountered. Thus two\nmembers of staff within the Computer Science department co-taught the module: a senior\nacademic from the Distributed Systems Engineering group with considerable knowledge and\nexperience in technical aspects of CSCW; and a junior colleague whose research area is in\nsocio-technical issues within CSCW. Each lectured on issues from their areas of expertise.\nFor such a broad subject as CSCW, which potentially covers so many areas, this seemed a\nuseful way to achieve a sufficiently broad perspective.\nThe other distinctive feature of the module, of more interest to this paper, was the explicit use\nof groupware tools as part of the learning experience of the students.  Students were divided\ninto groups of 5 or 6 (with a total of 46 students on the module, this gave 8 groups) and were\nasked to spend a period of two weeks with each of the four tools to be evaluated.  In each\ntwo-week period, the groups were set an essay-type question, relating to the current topics in\nthe lectures, and asked to discuss this using the system. They were told that a portion of the\npractical element of the module (which formed 15% of the marks for the whole module)\nwould be based on the quality of individuals' participation in the discussions.  They were\ntherefore required to submit a transcript of the discussion at the end of each two-week period,\nand to find a way of recording the discussion so that this was possible (this varied with each\ntool). They were also required to construct a 'social protocol' for the use of each tool at the\nstart of their experience with it.\nThe four tools used by the students were as follows:\n\u2022 Email \u2013 all students had pre-existing experience of using email for at least their first two\nyears at Durham. Thus email was able to act as a \u2018control\u2019 for experiences with the other\ntools. A standard Unix mail system is used at Durham, which students access either using\npine on the Unix machines, or using a POP client (Netscape, Eudora etc) on a PC.\n\u2022 BSCW \u2013 given the experience both of the students in using this tool, and of the\ndepartment in supporting it, this was a natural choice. Because of the heavy loading of the\nBSCW server at Durham by the present second-year using SEGWorld, it was decided that\nfor the CSCW discussions, students would use the publicly accessible server hosted by\nGMD in Germany.\n\u2022 TCBWorks \u2013 this is a Web-based discussion and voting system, loosely based on the\nIssue-Based Information System (IBIS) structure. It is hosted by the University of Georgia\n(US) (Business, ).\n\u2022 CoMentor \u2013 a system from the University of Huddersfield (UK) which supports\ndiscussion using a MUD (multi-user domain) environment. In the version we used, it is\nhosted at Huddersfield (Huddersfield )\nTowards the end of the course, students were asked to evaluate these four tools based on their\nexperiences. This evaluation used a framework that had been presented on a number of\noccasions during the lectures as a way of understanding the many perspectives for evaluating\nCSCW systems. The framework derives from Ramage\u2019s PhD thesis (Ramage, 1999), and is\ndescribed there as a first step towards a heuristic method for CSCW evaluation (Nielsen, 1993).\nIt is presented in two ways, as a set of questions and as a diagram which shows the inter-\ndependency of the issues involved, specifically that (after the style of the \u2018systems\nhierarchies\u2019 discussed by Checkland, (Checkland, 1981)) the \u2018higher\u2019 evaluation criteria are\ndependent for their effectiveness on the \u2018lower\u2019 ones. This is expressed in a series of\nconcentric circles, which gives the framework its informal name of the \u2018onion model\u2019 (figure\n6):\nFunctionality\nEfficacy\nUsability\nStandards\nIndividual Effect\nGroup Effects\nOrganisational Effects\nSocietal Effects \nFigure 6: The \u2018onion\u2019 model of evaluation\nThe eight layers here can be expressed as a set of questions (going from the inner layer out),\nwhich can be asked about a CSCW system. \n1. Does it work? (functionality)\n2. Does it work well enough? (efficacy)\n3. Is it workable with? (usability)\n4. Does it follow the standards laid down by various bodies?\n5. What does it do to those who work with it? (individual effect)\n6. What does it do to their work? (group effects)\n7. What does it do to those they work with and for? (organisational effects)\n8. What does it do to the world beyond work? (societal effects)\nFor this exercise, students were presented with a table which showed the four tools they had\nused as columns, and six of the eight questions above as rows \u2013 issues of Standards and\nSocietal Effects were omitted as not being useful on this occasion. Around thirty students\nwere present at the lecture when the exercise was conducted: they were asked to discuss the\nissues involved in the groups they had divided into for their practical work, and to fill in the\ntable either individually or as a group. Eighteen completed tables were returned. As this\nnumber is too small (and the results too varied) for meaningful statistical analysis, we present\ninstead a summary of the comments given for each system (table 1). We will focus here only\non the students\u2019 evaluations of email & BSCW: the latter can be readily compared with the\nresults from their earlier BSCW experiences, while the former can be regarded as a \u2018control\ngroup\u2019, a benchmark groupware system against which all their other groupware experiences\nwere measured.  The way the relationship between the two tools was viewed can be\nsummarised by the following comment from one student: \u201cemail [is a] great asynchronous\ntool - invaluable, but other collaboration tools are needed in an organisation - like a shared\nworkspace, for example BSCW\u201d.\n8. Conclusions\nOur Computer Science Department, as an organisation, has benefited from the introduction of\ngroupware into its teaching support systems. Our software engineering groups and their tutors\nare more effectively supported. There is greater visibility of everyone\u2019s work and this makes\nthe process of group working more transparent for both staff and students. As software\nengineers, we have all gained a first hand appreciation of the impact of introducing groupware\ninto our department. Observing how groups work within their workspaces has given us a\nbetter understanding of their work both as a group and as individuals. When students came to\nuse groupware tools in the CSCW module, they did appreciate the need to establish a protocol\nregarding how they would use a specific tool in order to carry out their discussions\neffectively. In the SEG work, many students were critical of SEGWorld and their criticisms\nfocused on the technical deficiencies of our BSCW server. The final year students with the\nbenefit of wider groupware experience and more knowledge of CSCW focused more on the\nouter layers i.e. the non-technical aspects when evaluating the effects of using groupware to\norganise and co-ordinate their discussions.  In some cases, they simply took the functionality\nfor granted. \nThe group effects were more noticeable within the CSCW student discussion groups. Perhaps\nthis is because the students in the final year of our degree course have more flexibility in their\nmodule selections and unlike the second year SEG students are not all taking the same\nmodules and so less likely to be meeting up in classes on a daily basis. Therefore carrying out\ndiscussions asynchronously suited the CSCW students who would have found meeting\nregularly face-to-face difficult. The CSCW students more widespread use of the groupware\nmay also have been influenced by the fact that they knew that they were being marked on the\nbasis of their contribution to discussions, while the SEG students receive no explicit marks\nfor their use of SEGWorld. \nThe CSCW students\u2019 use of BSCW functionality was not significantly greater than their\nusage during SEG although they clearly understood more of the usefulness of functions\nparticularly those to do with awareness. As a result of the requirements engineering and\nCSCW lectures on usability, they had a greater appreciation of the BSCW user interface.\nWhen working on developing deliverables for the SEG, the main challenges to students are\nthe technical and managerial issues that arise in software engineering projects. In the CSCW\nmodule, effective use of the groupware was essential in order to carry out the discussions set.\nRequiring the students to explicitly develop protocols forced them to consider the relevant\nfunctions and their effective use up-front whereas the SEG students only receive a tutorial\nintroduction to SEGWorld and are left to establish their own group\u2019s working practices\nindependently.\nBy its very nature, the SEG project is an exercise in collaboration among the students\nworking in a group.  Some of the newly introduced software engineering practical exercises\nspecifically focus on introducing the students to computer-support for collaboration based on\ntasks which previously were done without the benefit of such support.  The CSCW module\nhas offered these same students the opportunity to undertake controlled evaluations of other\ngroupware tools thus exposing them to a different usage, i.e. group discussions. The link\nbetween the Requirements Engineering and CSCW parts of the module proved to be\nfortuitous. Many students were able to bring forward into their CSCW discussions and\nevaluations principles from the earlier RE lectures.\nAny software engineering curriculum must effectively combine theory with practice and must\nanticipate the world, in which graduates will live and work. The SEG project with its\nSEGWorld environment and the CSCW module both attempt to provide students with group\nworking support, which is realistically close to that which they will find in industry. The\nCSCW students through their experiences have gained both a theoretical and practical\nappreciation of how to engineer both social and technical systems that effectively support\npeople in their work. \nThrough the continued use of these systems within our department  we are evolving and\nextending their application to other areas of our teaching and also to support the work of\nresearch groups within the department.\nReferences \nBannon, L., & Schmidt, K. (Eds.). (1991). CSCW: Four Characters in Search of a Context: Elsevier\nScience.\nBoldyreff, C. CSCW Module : http:\/\/www.dur.ac.uk\/~dcs0cb.\nBoldyreff, C., Drummond, S., & Walker., R. (1997). Web-Based Support for Software Engineering\nGroup Projects : http:\/\/www.dur.ac.uk\/~dcs1sad\/papers  Presented at ECSCW 97, Lancaster\nUniversity.\nBrereton, P., Lees, S., Gumbley, M., Boldyreff, C., Drummond, S., Layzell, P., Macaulay, L., &\nYoung, R. (1998). Distributed Group Working  in Software Engineering Education.\nInformation and Software Technology, 40, 221 -227.\nBusiness, T. C. o. TabWorks .\nCheckland, P. (1981). Systems Thinking, Systems Practice. Chichester, UK: John Wiley.\nDrummond, S. (1999). An Investigation into Computer Support for Cooperative Work in Software\nEngineering Groups. Unpublished MSc, University of Durham, Durham.\nDrummond, S., & Boldyreff, C. (2000). The Development and Trial of SEGWorld: A Virtual\nEnvironment for Software Engineering Student Group Work. Paper presented at the IEEE\nThirteenth Conference on Software Engineering Education and Training, Austin, Texas.\nDrummond, S., Boldyreff, C., & Munro, M. (1997). Software Engineering Group Project work: Past,\nPresent and Future, Presented at Special Interest Group in the Teaching of Software\nEngineering (SIGToSE), London. : http:\/\/www.dur.ac.uk\/~dcs1sad\/papers.\nGMD-FIT. Basic Support for Cooperative Work (BSCW) : http:\/\/bscw.gmd.de\/.\nGoldberg, A. (1998, 1998). Building a System in Virtual Reality with LearningWorks. Paper presented\nat the Integrating Technology into Computer Science Education, Dublin, Ireland.\nGotterbarn, D., & Riser, R. (1994). Real-World Software Engineering: A Spiral Approach to a\nProject-Oriented Course. Paper presented at the Proc. 7th Conference on Software\nEngineering, San Antonio, Texas, USA.\nGrinter, R. E. (1997). Doing Software Development: Occasions for Automation and Formalisation.\nPaper presented at the Fifth European Conference on Computer Supported Cooperative Work,\nLancaster, UK.\nGrinter, R. E. (1999). Workflow Systems: Occasions for Success and Failure. Computer Supported\nCooperative Work: TheJournal of Collaborative Computing, 9(2).\nGrudin, J. (1994). Groupware and Social Dynamics: Eight Challenges for Developers.\nCommunications of the ACM, 37(1), 93 - 105.\nGrudin, J., & Palen, L. (1995). Why Groupware Succeeds: Discretion or Mandate? Paper presented at\nthe Proceedings of the Fourth European Conference on Computer-Supported Co-operative\nWork, ECSCW 95, Stockholm.\nHabra, N., & Dubois, E. (1994). Putting into Practice Advanced Software Engineering Techniques\nthrough Students Project. Paper presented at the 7th SEI Conference on Software Engineering \nEducation, San Antonio, Texas, USA.\nHarrison, J. V. (1997). Enhancing Software Development Project Courses Via Industry Participation.\nPaper presented at the Tenth Conference on Software Engineering Education and Training,\nVirginia Beach, Virginia, USA.\nHuddersfield, U. o. CoMentor : http:\/\/comentor.hud.ac.uk\/.\nLayzell, P., Macaulay, L., Young, R., Boldyreff, C., Drummond, S., Brereton, P., Lees, S., &\nGumbley, M. (1998). Developing a Virtual Community for Student Groupwork: Final Report :\nDepartment of Computation, UMIST.\nMark, G., Fuchs, L., & Sohlenkamp, M. (1997). Supporting Groupware Conventions through\nContextual Awareness. Paper presented at the Proceedings of the Fifth European Conference\non Computer Supported Co-operative Work, ECSCW 97, Lancaster, UK,.\nMcDermid, J. A., & Rook, P. (1991). Software development process models. In J. A. McDermid (Ed.),\nSoftware Engineer's Reference Book (pp. 1 -35): Butterworth-Heinemann.\nNielsen, J. (1993). Usability Engineering: A P Professional.\nOrlikowski, W. (1992). Learning from Notes: organisational issues in groupware implementation.\nPaper presented at the Proceedings of the .Conference on Computer-Supported Cooperative\nWork (CSCW 92).\nRamage, M. (1999). The Learning Way: Evaluating Co-operative Systems. Unpublished PhD,\nLancaster, University of Lancaster, UK.\nRobillard, P. N. (1998). Measuring Team Activities in a Process-Oriented Software Engineering\nCourse. Paper presented at the 11th Conference on Software Engineering Education and Training,\nAtlanta, Georgia.\nCriterion Email BSCW \nFunctionality Determining the functionality of email in general is difficult. Some\nstudents listed functions like sending messages to groups or\nindividuals, sorting messages, filtering, including text and replying.\nHowever, many responses seemed to take this for granted and\ndwelled on the fact that it \u201clacked a lot of functionality\u201d, though this\nwas not specified. The basic view about email was expressed in one\nresponse that simply said: \u201cit works, because it has been around for\nlong and everyone knows how to use it\u201d.\nMost students regarded the functionality of BSCW as very\ngood. One commented that it \u201cworks very well for all aspects\nof groupwork\u201d. Capabilities for awareness of others\u2019 actions,\nfor different type of documents (and other objects) and\ndifferent levels of file permissions were noted by several\nstudents. One remarked that of the systems they had tried, it\nwas the \u201cmost sophisticated for asynchronous work\u201d.\nEfficacy Again (as students noted), this depends on the client program used.\nSpeed seemed to be more acceptable than with BSCW, though some\nhad experienced delays using automated mailing lists. Few reported\nother problems with the effective working of their email tool,\nalthough again this may be due to long experience.\nIn general, the tool seemed to do all that was promised\neffectively. However, the slow nature of the tool was remarked\nupon by most people. This made them more likely to make\nlonger points, and in effect made their use of the tool entirely\nasynchronous (although it can also support synchronous\nworking).\nUsability Most students, given their long experience with email (which some\nremarked on) found it very usable. Some functions, especially\nfiltering and sorting by subject, were especially noted as increasing\nits usability; a lack of threading decreased it. Awareness of whether\nothers are online was felt to be lacking, although as most check email\nvery regularly, they were aware of new messages. Automated mailing\nlists (via majordomo) helped.\nStudents were very impressed by BSCW\u2019s \u201cexcellent\u201d UI \u2013 it\nwas felt to be \u201cvery easy to work with\u201d. Some said that it was\nat the limit of the functions that could be sensibly handled:\nmore would have made it cluttered. One remarked that\ncontinually reloading the page of messages to find out if new\nones had arrived was a nuisance, although it was useful to get\nemails to tell them this.\nIndividual effect Students felt that email integrates into other working practices, which\nis efficient, as well as sometimes substituting for the telephone and\nface-to-face contact. It encourages informal communication, although\nthis can both help and hinder effectiveness! Short messages were felt\nto be more common than longer ones (this is perhaps partly due to the\nshort time between receipt and reply among the students, who would\noften use email almost synchronously, as for a conversation).\nBy contrast with email, longer messages were commoner than\nshort ones. The ease of use of the program was felt by some to\nencourage \u201ca feeling of professionalism\u201d. The awareness\nfunction helped to diminish feelings of isolation during\ndiscussions. For some, it made them feel \u201cmore part of a group\nat work\u201d.\nGroup effect Respondents felt both that email \u201csegregates & individualises\u201d and\nthat it \u201callows personal contact between individuals\u201d, the former\nreferring to the potential for conversations to develop among\nindividuals, ignoring the whole group. Again, the difficulty of\nthreaded conversations was mentioned.\nBSCW was said to be effective in  \u201cmaintain[ing] the group,\nsince all members can see all the work\u201d. The shared workspace\nconcept was regarded as helpful, as was being able to\n\u201corganise and document discussions\u201d.\nOrganisational Email serves to \u201cfoster friendship and intimacy among group BSCW was said to be effective at assisting organisational \neffect (mostly from\nspeculation rather\nthan experience)\nmembers\u201d. Full mailboxes, especially with (perceived) junk mail or\nmany messages in a discussion, can be a distraction from work. \nlearning \u2013 it \u201cmakes the work of the organisation more\nvisible\u201d, and helps it to \u201ceasily identify group members &\ncontributions\u201d.\nTable 1: Comparison of Email and BSCW\n\n"}