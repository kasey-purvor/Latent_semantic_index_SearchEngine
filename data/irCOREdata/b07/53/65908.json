{"doi":"10.1080\/00207540601039767","coreId":"65908","oai":"oai:dro.dur.ac.uk.OAI2:4171","identifiers":["oai:dro.dur.ac.uk.OAI2:4171","10.1080\/00207540601039767"],"title":"Advanced product development integration architecture : an out-of-box solution to support distributed production networks.","authors":["Cheung, W. M.","Matthews, P. C.","Gao,  J.","Maropoulos,  P. G."],"enrichments":{"references":[],"documentType":{"type":0.8888888889}},"contributors":[],"datePublished":"2008-04-15","abstract":"This paper presents novel collaboration methods implemented using a centralised client\/server product development integration architecture, and a decentralised peer-to-peer network for smaller and larger companies using open source solutions. The product development integration architecture has been developed for the integration of disparate technologies and software systems for the benefit of collaborative work teams in design and manufacturing. This will facilitate the communication of early deign and product development within a distributed and collaborative environment. The novelty of this work is the introduction of an `out-of-box' concept which provides a standard framework and deploys this utilising a proprietary state-of-the-art Product Lifecycle Management System (PLM). The term `out-of-box' means to modify the product development and business processes to suit the technologies rather than vice versa. The key business benefits of adopting such an approach are a rapidly reconfigurable network and minimal requirements for software customization to avoid systems instability","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/65908.pdf","fullTextIdentifier":"http:\/\/dro.dur.ac.uk\/4171\/1\/4171.pdf","pdfHashValue":"ea616414525730fa7d5745299277d978a7eddde0","publisher":"Taylor & Francis","rawRecordXml":"<record><header><identifier>\n  \n    \n      oai:dro.dur.ac.uk.OAI2:4171<\/identifier><datestamp>\n      2015-03-02T14:42:58Z<\/datestamp><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n    \n      \n        Advanced product development integration architecture : an out-of-box solution to support distributed production networks.<\/dc:title><dc:creator>\n        Cheung, W. M.<\/dc:creator><dc:creator>\n        Matthews, P. C.<\/dc:creator><dc:creator>\n        Gao,  J.<\/dc:creator><dc:creator>\n        Maropoulos,  P. G.<\/dc:creator><dc:description>\n        This paper presents novel collaboration methods implemented using a centralised client\/server product development integration architecture, and a decentralised peer-to-peer network for smaller and larger companies using open source solutions. The product development integration architecture has been developed for the integration of disparate technologies and software systems for the benefit of collaborative work teams in design and manufacturing. This will facilitate the communication of early deign and product development within a distributed and collaborative environment. The novelty of this work is the introduction of an `out-of-box' concept which provides a standard framework and deploys this utilising a proprietary state-of-the-art Product Lifecycle Management System (PLM). The term `out-of-box' means to modify the product development and business processes to suit the technologies rather than vice versa. The key business benefits of adopting such an approach are a rapidly reconfigurable network and minimal requirements for software customization to avoid systems instability.<\/dc:description><dc:subject>\n        Advanced manufacturing technology<\/dc:subject><dc:subject>\n         AI<\/dc:subject><dc:subject>\n         Artificial intelligence<\/dc:subject><dc:subject>\n         manufacturing sytems<\/dc:subject><dc:subject>\n         CIM architecture<\/dc:subject><dc:subject>\n         Product development<\/dc:subject><dc:subject>\n         Decision support systems<\/dc:subject><dc:subject>\n         Collaborative manufacturing.<\/dc:subject><dc:publisher>\n        Taylor & Francis<\/dc:publisher><dc:source>\n        International journal of production research, 2008, Vol.46(12), pp.3185-3206 [Peer Reviewed Journal]<\/dc:source><dc:date>\n        2008-04-15<\/dc:date><dc:type>\n        Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:identifier>\n        dro:4171<\/dc:identifier><dc:identifier>\n        issn:0020-7543<\/dc:identifier><dc:identifier>\n        issn: 1366-588X<\/dc:identifier><dc:identifier>\n        doi:10.1080\/00207540601039767<\/dc:identifier><dc:identifier>\n        http:\/\/dro.dur.ac.uk\/4171\/<\/dc:identifier><dc:identifier>\n        http:\/\/dx.doi.org\/10.1080\/00207540601039767<\/dc:identifier><dc:format>\n        application\/pdf<\/dc:format><dc:identifier>\n        http:\/\/dro.dur.ac.uk\/4171\/1\/4171.pdf<\/dc:identifier><dc:rights>\n        This is an Accepted Manuscript of an article published by Taylor & Francis Group in International journal of production research. on 15\/04\/2008, available online at: http:\/\/www.tandfonline.com\/10.1080\/00207540601039767.<\/dc:rights><dc:accessRights>\n        info:en-repo\/semantics\/openAccess<\/dc:accessRights><\/oai_dc:dc><\/metadata><\/record>","journals":[{"title":null,"identifiers":[" 1366-588x","issn:0020-7543","issn: 1366-588X","0020-7543"]}],"language":{"code":"en","id":9,"name":"English"},"relations":[],"year":2008,"topics":["Advanced manufacturing technology","AI","Artificial intelligence","manufacturing sytems","CIM architecture","Product development","Decision support systems","Collaborative manufacturing."],"subject":["Article","PeerReviewed"],"fullText":"Durham Research Online\nDeposited in DRO:\n11 February 2010\nVersion of attached file:\nAccepted Version\nPeer-review status of attached file:\nPeer-reviewed\nCitation for published item:\nCheung, W. M. and Matthews, P. C. and Gao, J. and Maropoulos, P. G. (2008) \u2019Advanced product\ndevelopment integration architecture : an out-of-box solution to support distributed production networks.\u2019,\nInternational journal of production research., 46 (12). pp. 3185-3206.\nFurther information on publisher\u2019s website:\nhttp:\/\/dx.doi.org\/10.1080\/00207540601039767\nPublisher\u2019s copyright statement:\nAdditional information:\nUse policy\nThe full-text may be used and\/or reproduced, and given to third parties in any format or medium, without prior permission or charge, for\npersonal research or study, educational, or not-for-profit purposes provided that:\n\u2022 a full bibliographic reference is made to the original source\n\u2022 a link is made to the metadata record in DRO\n\u2022 the full-text is not changed in any way\nThe full-text must not be sold in any format or medium without the formal permission of the copyright holders.\nPlease consult the full DRO policy for further details.\nDurham University Library, Stockton Road, Durham DH1 3LY, United Kingdom\nTel : +44 (0)191 334 3042 \u2014 Fax : +44 (0)191 334 2971\nhttp:\/\/dro.dur.ac.uk\n  \n \nDurham Research Online \n \nDeposited in DRO: \n11 February 2010 \n \nPeer-review status: \nPeer-reviewed \n \nPublication status: \nAccepted for publication version \n \nCitation for published item: \nCheung, W. M. and Matthews, P. C. and Gao, J. and Maropoulos, P. G. (2008) 'Advanced \nproduct development integration architecture : an out-of-box solution to support distributed \nproduction networks.', International journal of production research., 46 (12). pp. 3185-3206. \n \nFurther information on publishers website: \nhttp:\/\/dx.doi.org\/10.1080\/00207540601039767 \n \nPublisher\u2019s copyright statement: \nThis is an electronic version of an article published in Cheung, W. M. and Matthews, P. C. \nand Gao, J. and Maropoulos, P. G. (2008) 'Advanced product development integration \narchitecture : an out-of-box solution to support distributed production networks.', \nInternational journal of production research., 46 (12). pp. 3185-3206. International journal of \nproduction research is available online at: \nhttp:\/\/www.informaworld.com\/smpp\/content~db=all?content=10.1080\/00207540601039767 \n \n \n \n \n \n \nUse policy \n \nThe full-text may be used and\/or reproduced, and given to third parties in any format or medium, without prior \npermission or charge, for personal research or study, educational, or not-for-profit purposes provided that : \n \n\uf0a7 a full bibliographic reference is made to the original source \n\uf0a7 a link is made to the metadata record in DRO \n\uf0a7 the full-text is not changed in any way \n \nThe full-text must not be sold in any format or medium without the formal permission of the copyright holders. \n \nPlease consult the full DRO policy for further details. \n \nDurham University Library, Stockton Road, Durham DH1 3LY, United Kingdom \nTel : +44 (0)191 334 2975 | Fax : +44 (0)191 334 2971 \nhttp:\/\/dro.dur.ac.uk \nADVANCED PRODUCT DEVELOPMENT INTEGRATION ARCHITECTURE: \nAN OUT-OF-BOX SOLUTION TO SUPPORT DISTRIBUTED PRODUCTION \nNETWORKS \n \nWai M Cheung, Peter C Matthews \nDesign and Manufacturing Research Group \nSchool of Engineering \nUniversity of Durham \nSouth Road,  \nDurham DH1 3LE \nU.K.  \nTelephone: +44 (0) 191 3342538 \nFax: +44 (0) 191 3342396 \ne-mail: {w.m.cheung |  p.c.matthews } @durham.ac.uk \n \n \nJames X Gao \nCentre for Decision Engineering (Building 53) \nDepartment of Manufacturing, \nCranfield University \nBedford MK43 0AL. U.K  \nPhone: +44 (0) 1234 754271 \nFax: +44 (0) 1234 750852 \ne-mail: {x.gao@cranfield.ac.uk}  \n \n \nPaul G Maropoulos \nInnovative Manufacturing Research Centre  \nDepartment of Mechanical Engineering \nUniversity of Bath \nBath BA2 7AY. \nUK \nPhone: +44 (0)1225 385376 \nFax: +44 (0)1225 386928 \ne-mail: {p.g.maropoulos@bath.ac.uk}  \n \n \n \nCorresponding author \u2013 P.G.Maropoulos \nWord Count: 6448 \n \n \n \n \n  \n \nABSTRACT \nThis paper presents novel collaboration methods implemented using a centralised \nclient\/server product development integration architecture, and a decentralised peer-to-\npeer network for smaller and larger companies using open source solutions. The product \ndevelopment integration architecture has been developed for the integration of disparate \ntechnologies and software systems for the benefit of collaborative work teams in design \nand manufacturing. This will facilitate the communication of early deign and product \ndevelopment within a distributed and collaborative environment. The novelty of this \nwork is the introduction of an \u2018out-of-box\u2019 concept which provides a standard \nframework and deploys this utilising a proprietary state-of-the-art Product Lifecycle \nManagement System (PLM). The term \u2018out-of-box\u2019 means to modify the product \ndevelopment and business processes to suit the technologies rather than vice versa. The \nkey business benefits of adopting such an approach are a rapidly reconfigurable network \nand minimal requirements for software customization to avoid systems instability.  \n \nKEYWORDS \nProduct Development Integration Architecture, Collaborative Networks, Product \nLifecycle Management, Peer-to-Peer \n \n1. INTRODUCTION  \nA major problem facing industry nowadays is the lack of use of current technologies \ninto early design and manufacturing phases in collaboration and information distribution \nto support product development activities. Examples of these activities include \nmanufacturing process planning, workflow analysis, knowledge management, product \ndesign, and process modelling. Furthermore, manufacturing processes display ever \ngrowing complexity and dynamic behaviour due to both increasing product complexity \n  \n \nand distributive and collaborative engineering demands. In order to facilitate these \ncriteria, advanced strategic corporate alliances must share knowledge, expertise and \nresources in an increasingly competitive global market. Furthermore, effective \ninformation and data sharing are directly linked to the competitiveness of an enterprise. \nWhether it is a single enterprise or a network of organisations, effective collaboration \nand data distribution is an important aspect. Collaboration systems represent a key tool \nfulfilling this need.  This is particularly critical for smaller companies who find it \ndifficult to meet the cost of these software systems. One example is the Product \nLifecycle Management (PLM) system (CIMdata, 2002). PLM is an expensive system \nand mostly operated by large companies. Apart from the cost of the software system, \nthere is an additional disadvantage for small and medium enterprises (SMEs) to \ncollaborate with the Original Equipment Manufacturers (OEMs): SMEs have to store all \nrelevant product development data within the PLM system deployed by the OEMs. The \nSMEs typically do not have the autonomy in such a restricted environment.  \n \nDue to rapid advances in Information and Communication Technologies (ICTs) new \nparadigms have been proposed to support distributed network environments. Among \nthese are: Virtual Enterprise (Ettighoffer, 1992) Distributed and Re-configurable \nEnterprise (Gunasekaran, 1998) and, most recently, Cloutier et al (2001) introduced \nNetworked Manufacturing Co-ordination and Vernadat, (2002) in Enterprise Integration \narchitecture. All these paradigms have one thing in common; they all require highly \ntrained and sophisticated skills to customize and integrate. Customization is often \nrequired to modify the software to suit the environmental needs.  This may cause the \nsystem to be more unstable and difficult to maintain when it finally comes online.  The \nmaturity of web-based technologies and the availability of \u2018off the shelf\u2019 enterprise \n  \n \nsystems, this research has proposed a different approach: to deploy an \u2018out-of-box\u2019 \nsolution for the integration of disparate software systems.  The term \u2018out-of-box\u2019 means \nto modify the product development and business processes to suit the technologies \nrather than vice versa. The advantages of this approach are rapidly reconfigurable \ncollaboration network and minimal requirements for system customization, thus \navoiding instability that might result. As a consequence, this paper presents: (1) an \nadvanced conceptual product development integration architecture which has been \nspecifically developed for the integration of these disparate technologies for the benefit \nof collaborative work teams; and (2) to enable designers to use a seamlessly integrated \ninterface to review, analyse and reuse engineering and manufacturing knowledge within \nthe network of collaborating enterprises.   \n \nTo verify and demonstrate the applications of \u2018out-of-box\u2019 solutions, this paper will \nfocus on the principal hypothesis of bridging the discontinuity in the early stages of \ndesign where communicating concepts and potential manufacturing scenarios are \ncritical.  The collaborating designers are to be linked using internet-based PLM systems \nthat incorporate techniques for design conceptualisation, aggregate factory modelling \nand manufacturing knowledge management (Maropoulos and Gao, 2001). In the \nremainder of the paper, the fundamental infrastructure of the product development \nintegration architecture and its implementation issues are discussed. Two case studies \nare presented to verify and demonstrate \u2018out-of-box\u2019 solutions of a centralised and de-\ncentralised networks configuration as proposed.  \n  \n \n2. THE PRODUCT DEVELOPMENT INTEGRATION ARCHITECTURE \nFigure 1 illustrates the integration environment which is distinguished into three layers. \nThe first layer is the enterprise systems which consist of PLM, Enterprise Resource \nPlanning (ERP) technologies and the Peer-to-Peer (P2P) framework (Bond, 2001).  The \nsecond layer is the communication and data exchange mechanisms, i.e. JXTA \n(Juxtapose) (Gong, 2002), client\/server and XML Parser (eXtensible Markup Language) \n(Holzner, 2001). The third layer consists of the Manufacturing and Design domains to \nsupport product development processes. The architecture uses a PLM system to address \ndesign collaboration. This out-of-box solution provides the functionality for different \ndesigners at different locations to access the same design concurrently. The architecture \nalso supports STEP-based standards for geometric models. This standards-based \ncollaboration can work dynamically in a global, distributed, and heterogeneous design \nenvironment. In addition, PLM offers lifecycle management and version control for the \ndesign and the ability to see the history or \u2018evolution\u2019 of a design through all its \niterations.  \n \n \n \n \n \n \n \n \n \n \n  \n \n \n \n \n \n \n \n \n \n \n \n \nFigure 1:  Overall System Integration Architecture in Product Development \n \nAn XML Parser is deployed as the interfacing medium between PLM and the \nManufacturing and Design Domains for data interchange. This enables interchanging \nportions of XML documents while retaining the ability to parse them correctly and, as \nfar as practicality is concerned, formatting, editing, and processing in useful ways \n(Holzner, 2001). JXTA is an open source communication protocol for P2P network \nconnectivity (Cheung et al, 2004; Aziz et al, 2005). The manufacturing domain consists \nof a manufacturing knowledge-based system. LOCAM is a commercial process \nplanning system for the detailed stages of product development which was not used due \nto the fact that this research has been focused on early design and development stages. \nFinally, the design domain consists of a STEP Modeller and Design Knowledge Based-\nSystem (Aziz et al, 2004).  \n \nOracle Database\nServer\nPLM System\nWindchill\nCabinet \/\nWorkflow\nLoad and store process plan \nProt\u00e9g\u00e9 Design \nKnowledge \nBased System\nLOCAM\nCAPABLE Aggregate \nProcess Planning\nClient Local Disk\nProt\u00e9g\u00e9\nManufacturing\nKnow-how, \nKBS\nManufacturing Domain\nSTEP\nModeller\nSAP-DB\nJXTA\nDesign Domain\nXML Parser\nERP\nCapacity \nPlanning\nPeer-to-Peer \nFramework for \nEnterprise\nCollaboration\nInternet\nDesign and Manufacturing Knowledge Systems\n  \n \nP2P, a decentralised communication network, is used to enable such a hybrid integration \napproach.  This is to enhance the integrity of knowledge and data sharing and the \nefficiency of network communication for collaboration of smaller companies within the \nsupply network. The advantages offered by P2P applications are (i) no single point of \nfailure, the network is alive as long as one peer is on-line, (ii) distributed sharing of \nnode resources for storage and processing power, so the system becomes more powerful \nas more users attach, (iii) lower running cost due to the lack of high performance \nservers, as well as (iv) maintaining individual control of the shared knowledge. The \nobjective of this research is to extend and further develop the product development \nintegration architecture, which includes a new framework to explore alternative \ncomputing resources and network architectures in order to reduce cost as well as \nproviding the autonomy for smaller companies to share information with larger \ncollaborators.  \n \nFigure 2 illustrates a subset of the product development integration architecture. The \nmain technologies used in the framework are the P2P decentralized network (Penserin et \nal, 2003) and open source workflows implemented with RosettaNet and JXTA (Gong, \n2002) for network connectivity. One further aspect of P2P systems is to distribute the \nmain costs of sharing data, computing power, network bandwidth and storage capacity \n(Bond, 2001). This is particularly suitable for SMEs without the need of powerful, \nexpensive servers as well as providing autonomy in terms of data sharing with the PLM \nsystem used by the OEMs.  \n \n \n \n  \n \n \nFigure 2: Overall Peer-to-Peer Framework for Enterprise Collaboration \n \nOne of the main applications of PLM systems is to control product development data \nmore effectively by maintaining the data within a centralized network throughout its \nproduct lifecycle using the PLM\u2019s native workflow functions. Most mainstream PLM \nsystems are operated in an inherent client\/server paradigm which is complex to set up \nand requires a long period of time for customisation.  However, it has been identified \nthat workflows and any customisation carried out within a PLM system cannot be reused \non another PLM system (Aziz et al, 2005). On the other hand, the RosettaNet standard \n(Yendluri, 2000), implemented in PLM systems, can decrease the amount of \ncustomisation needed, but not eliminate it, as RosettaNet only provides a subset of the \nmessaging and data models of the inter-enterprise link.  \nPDM\nSuper\nPeer\nOEM\nF3\nF1\nF2\nS1\nP2P\nS3\nP2P\nS2\nP2P\nP2P\nP2P\nP2P\nS4\nP2P\nP2P\nP2P\nKBSCAPP\nDesign and Manufacturing Knowledge Systems\nSTEP product\ndata Requirement\nmanagement\nWorkflow \nprocesses\nWorkflow for the initiation of collaborative projects\nUniquePeerID, PeerAdvertisement, AccessControl, Encryption\nPeerPeer Peer\nWeb Ontology Language (OWL) \n(Terminology: STEP, XML, RosettaNet, \nEDI)\nTCP\/IP transport peer to peer protocol\nInternet\nJDBCJXTA\nInitiate Virtual \nEnterprise by \nestablishing \nP2P \nconnectivity\nand peer \ngroup\nVia P2P \nconnectivity\nestablish \nthe ontology \nfor the \ncollaborative \nproject\nFill the\nknowledge \nBase with \ncustomer \nrequire                 \ndata. Based \non this data, \nquery for useful\nlegacy \nconcepts\nCollaboratively \nbuild initial \nconcept design\nand validate the \nconcept against \nthe RFQ and \nconstraints\ntest the \nconcept\nfor \nmanufacturability\nand capacity \nplanning in \nmanufacturing \nsystem\nModify concept for improved manufacturability \nusing results data from ERP\/MFG and RFQ\n  \n \n \n3.  IMPLEMENTATION ISSUES \n3.1 Coordination of the Integration Architecture for Time-Dependent \nComponents \n \nThe integration of distributed time dependent components requires a time \nsynchronisation model. The time based element requires the recognition of the time-\ndependencies of activities within a distributed team that use the stored data and \nknowledge. In general, a PDM module of a PLM system comprises a \u201cDocument \nManager\u201d that contains a list of user defined cabinets to store data files, a \u201cLifecycle\u201d \nfunction that defines the timing of the development stages and a \u201cWorkflow\u201d function \nthat determines what processes and interactions take place at each stage. Clearly, PLM \ncan be used as a foundation for defining a time based integration wrapper as a time \nsynchronisation model.  \n \nFigure 3 illustrates the coordination requirements for the design of a workflow, which \ncan be classified into internal and external integration requirements (Becker et al, 2002). \nLifecycle management is responsible to define the development stages from conception \nthrough design, engineering, manufacturing, use and maintenance to disposal. \nNetworking allows all users to interact through Web services to enable the collaboration \nthrough the use of external and internal applications.   \n \n \n \n \n \n  \n \n \n \n \n \n \n \n \n \n \nFigure 3:  Coordination of Time dependent Components \nInternal integration requirements concern those systems and functions which workflow \napplications need to connect to. For example, the internal functionality of a PLM system \nis life-cycle management, data storage and security. External integration requirements \nexist with regard to systems that either invoke the workflow system from the outside \n(embedded usage) or systems that are invoked by the workflow applications, for \ninstance, the software systems such as the Knowledge-based system (Cheung et al, \n2006) and the CAPABLE System (Maropoulos et al, 1998; Bramall et al, 2003). Since \nwork coordination involves external networks and external applications, another issue \nthat must be addressed is security on the public Internet (WWW). One major advantage \nof using PLM systems for Workflows is that they automate information flows between \nindividuals carrying out business processes.  It has two major implications for security: \ni. The description of a workflow process explicitly states when each function is to \nbe performed and by whom, therefore security specifications may be derived \nfrom such descriptions and translated into static role-based specifications, and \nData storage\nProduct Lifecycle Management (PLM) Systems\nExternal Integration Requirements\nWorkable\nDecisionCustomer \nRequest\nAdding Customer \nHistori c Information\nRead Request and \nAssign Tasks\nNoti fy \nMembers\nReject Request\nSend to \nCustomer\nReview Design\nEnter Conceptual \nDesign Data\nReview Conceptual \nModel\nManufacturing\nCAPABLE Agg regate \nProcess Planning\nWai ti ng  for  Customer \nResponse\nPDM\nGenerate \nProcess Plan\nAnalysis with \nLOCAM??\nMarketing\nyes\nno\nend\nelse end\nProduct  Requirement Update\nProduct Def inition\nNew Produ ct Def init ion\nreject for  further  analysis\naccept\n???\nreject\naccept\nConceptua l Desi gn\nAdding New Know ledge Product Defini tion + Resources\nWorkflow\nLifeCycle\nManagement\nInternal Integration Requirements\nSecurity\nSt r\nInternet \/ Networking\nCAPABLE System (Aggregate Process Planning)\n  \n \nii. The Workflow functions are to be operated via Web-browsers, thus individual \nsecurity rules must be enforced.  \nA novel \u201cWorkflow Activity Task Controller\u201d (WATC) methodology has been defined \nto implement the time based integration wrapper concept in the interactions between \ngeneric types of PDM, ERP, Knowledge Based and Process Planning systems and has \nbeen formalised in Unified Modelling Language (UML) as shown in figure 4. The \nimplementation of WATC is centred on the lifecycle and workflow functionalities of the \nPDM system using web-based technologies such as XML and a Java-based XML \nparser. The core technologies behind WATC are methods to control the interactions of a \nPLM system, a Knowledge Based System and a Process Planning System. WATC \nsequences early design activities including concept definition, design development, \nmanufacturing knowledge sharing and automated aggregate plan generation. WATC \ncurrently supports the following five early design stages. \n(i)  Receive\/understand customer product request and formalise design specification, \n(ii)  Generation of conceptual design by the Product Development Team,  \n(iii)  Distributed review of conceptual model and addition of manufacturing \nknowledge and constraints,  \n(iv)  Deployment of capability analysis (Baker and Maropoulos 1998) for the \nprioritisation of product development tasks, and  \n(v) Generation of aggregate process plans (routings) and integrated capacity \nplanning.  \n \n \n \n \n  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nFigure 4: Time Dependency Scenario using WATC Concept \n \nThe workflow starts with the customer\u2019s request for a new product or a change to an \nexisting product. The initial stage is adding customer historical information such as \nprevious product specifications, customer buying experience and relationships. This can \nbe done by invoking a knowledge-based system. The knowledge-based system consists \nof two separate modules: one for the design knowledge management system that \ncaptures information related to product design and design standards, and the other for \nmanufacturing knowledge management to capture process and resource related \nknowledge. The primary action of the workflow is to activate processes, for example \n \n \nGenerate \nProcess Plan \n \n Detailed Analysis \nLOCAM  \n \n \nERP - Rough Cut \nand Capacity \nPlanning \n \nCAPABLE \nAggregate \nProcess Planning \n \n \nReview  \nDesign \n \nReject \nRequest \n \nSend to \nCustomer\nNotify \nMembers  \nWaiting for \nCustomer \nResponse \nPDM \n Customer \nRequest \n \n Adding Customer \nHistoric \nInformation \n Read Request and \nAssign Tasks \n \n Enter Conceptual \nDesign Data \n \n Review Conceptual \nModel \n \nMarketing \nProduct Requirements \nUpdate \nConceptual  \nDesign \nProduction \nDefinition \nAdding New \nKnowledge \nNew Product \nDefinition \nProduct \nDefinition + \nResources \nDecisions \nEnd \nElse \nEnd \nYes \nNo \nWorkable Reject \nAccept \nAccept \nReject for further analysis \nKnowledge Based System\nPDM Cabinet\nProcess Planning\n\u2026\nWATC  \nWorkflow \u2013 Activity Task Controller\nX\nM\nL\n P\na\nrser\nOne Stage Two Three Four Five \n  \n \nassigning a design task to connect with the KBS. All the information or relevant \nknowledge is stored and retrieved via a PLM data repository.  The PLM data repository \nis used to store product centric information and provides a method of locating \ninformation within the PDM system. The second stage of the workflow is to assign a \nconcurrent task which involves notifying the development team and issue requests to the \nappropriate personnel to enter conceptual design data. The third stage of the workflow is \nto review the conceptual design.  \n \nThe fourth stage is an XML parser mechanism which supports the interaction of data \nreused by the CAPABLE and PLM systems. The purpose of the CAPABLE system is to \nallow alternative process plans (or routings) for custom parts to be generated, evaluated \nand improved based upon estimated manufacturability before committing to a fully \nspecified product model and supplier. The XML parser is responsible for extracting \nmanufacturing knowledge from the XML formatted knowledge file to be reused by the \nprocess planning engine in the CAPABLE system. With the attachment of updated \nhistoric information and manufacturing knowledge, a new product definition will be \ngenerated. The product definition will be delivered to the CAPABLE system to obtain \npreliminary process plans. The new process plans (routings) are then delivered to the \nPLM system for Plan\/Review. The final stage involves capacity planning and \nimplementation.    \n \n3.2 Infrastructure of the Peer-to-Peer Framework \n \nFigure 5(a) illustrates the infrastructure of the configuration and characterisation of the \nproduct development collaboration processes between SMEs and OEMs or other larger \norganisations. S1, S2 and S3 represent SMEs in the framework. In the OEM \n  \n \nrepresentation schema, F1, F2 and F3 are the internal functions or divisions of the \norganisation, for example, product design, process planning to marketing. A process \nplanning system and a KBS are used examples of different type of software deployed \nwithin the OEM via the PLM system. The PLM system used by the OEM is located \nwithin its own sub-network. \n \nThe framework is established using the basic infrastructure of the links using hybrid \nP2P networking (Fiorano Software, 2003), JXTA communication protocol and \nRosenettaNet. In a hybrid P2P system, the information is exchanged through a local \ncentral server (SuperPeer nodes). The SuperPeer node acts as a monitoring agent for all \nthe other peers within its sub-network and ensures information coherence. The basic \ninfrastructure builds on already available open source P2P solutions. A workflow \ntechnique is deployed to have better control of data and file sharing in order to distribute \ninformation to the right people, at the right time. Information requirements are set out \nduring task delegation throughout the product development processes.  \n \n \n  \n \n \nFigure 5: Configurations of P2P Infrastructure in Inter-enterprise Collaboration   \n \nThe P2P nodes, illustrated in the diagram, act as gateways controlling information \naccess.  Connectivity is achieved using an open source implementation of JXTA. \n(a) Inter-enterprise collaboration using P2P \n(b) Alternative Configuration of Inter-enterprise collaboration using P2P \nSuper\nPeer\nOEM\nF3\nF1\nF2\nS3\nP2P\nP2P\nP2P\nP2P\nP2P\nP2PP2P\nKBSProcess\nPlanning\nS2\nP2P\nJXTA Protocols \/ \nRosettaNet\nJXTA \nProtocols \/ \nRosettaNet\nSMEs\nS1\nP2P\nPLM\nS4\nPrivate\nProcess\nWorkflow\nPublic \nProcess\nPrivate\nProcess\nWorkflow\nPublic \nProcess\nPrivate\nProcess\nWorkflow\nPublic \nProcess\nJXTA Protocols \/ \nRosettaNet\nSMEs\nSuper\nPeer\nOEM\nF3\nF1\nF2\nP2P\nP2P\nP2PP2PP2P\nKBSProcess\nPlanning JXTA Protocol \/\nRosettaNet\nPLM\nSuper\nPeer\nS1\nP2P\nS1a\nS1b P2P\nP2P\nS2a\nS2b\nS2\nSuper\nPeer\nP2P\nP2PP2P\nS3a\nS3b\nSuper\nPeer\nP2P\nP2P\nS3\nP2P\nPrivate\nProcess\nWorkflow\nPublic \nProcess\nPrivate\nProcess\nWorkflow\nPublic \nProcess\nPrivate\nProcess\nWorkflow\nPublic \nProcess\n  \n \nImplementation of JXTA is in standard Java 2.  The user functions of JXTA include the \nfollowing: \n\u2022 user interface queries, \n\u2022 project management of collaborative groups, and \n\u2022 group chat and instant messaging.  \nThe choice was made partly for the security aspect, but also because JXTA implements \na unique but anonymous identification mechanism for peers and rendezvous peers. \nRendezvous peers can act as managers for peer groups and store the peer advertisement \nfor the group for distribution to other P2P networks.  Additionally, the system does not \nrequire a static network, but supports dynamic network architectures including the \nability for individual users\u2019 to work offline which cannot be done with web-based \nsystems. Figure 5(b) shows such an alternative configuration of the framework using \nSuperPeer nodes for communication connectivity. S1 consists of two subdivisions \nrepresented by S1a and S1b which form their own peergroups. Similarly, S2 and S3 are \nboth have the same configurations.    \n \n3.3 Distributed Workflow in P2P Framework \n \nFrequently process workflows are distributed collections of activities that involve \ngroups of individuals at disparate locations. To coordinate these tasks, a process support \nsystem must provide for distributed process execution and integration with tools across \nnetworks. Traditional workflow adopts a centralised client\/server approach to enact \nprocesses such as the native workflow function provided by the PLM system for the \nOEMs. For a decentralised network this research uses RosettaNet Partner Interface \nProcesses (PIPs) to implement workflows (Yendluri, 2000).  Figure 6 depicts the \nsolution for distributed workflow for SMEs and OEMs collaboration. The use of \n  \n \nWebLogic Integration (Yendluri, 2000) implements standard RosettaNet PIPs through \npublic (or collaborative) workflows. A public workflow provides the interface to other \ncollaborative partners, while private workflows are used to interface to back-end \nsystems in order to generate and respond to messages. Figure 6 also shows the process \nby which PIP workflows pass messages between collaborative partners. In figure 6, for \nexample, the RosettaNet-oriented workflows process messages as follows: \n1. SME1\u2019s private workflow initiates a RosettaNet message. Data is retrieved and \nformatted into a RosettaNet message structure, the appropriate PIP is determined, \nand the message is forwarded to the public workflow that implements the SME1\u2019s in \nthe PIP.  \n2. The public workflow process creates the appropriate RosettaNet message. The \nmessage is sent to the public workflow of the OEM.  \n3. The OEM\u2019s public workflow receives the message, processes the header \ninformation, and then passes validated customer information and message content to \nthe appropriate private workflow process.  \n4. The OEM\u2019s private process resolves message content and generates a reply. The \nreply is processed into a RosettaNet message structure and passed back to the \nOEM\u2019s public process.  \n5. The OEM\u2019s public process creates a RosettaNet reply message and sends it to \nSME1\u2019s public process.   \n6. The SME1\u2019s customer public process receives the reply message, processes header \ninformation, and then passes validated OEM\u2019s information and message content to \nthe appropriate private process.  \n7. The private process resolves content of the reply message. \n \n  \n \nPrivate\nProcess\nWorkflow\nPublic \nProcess\nSME1\nPrivate\nProcess\nWorkflow\nPublic \nProcess\nSME2\nRequest\nResponse\nRosettaNet\nPrivate\nProcess\nWorkflow\nPublic \nProcess\nOEMs\nR\neq\nu\nes\nt\nR\nes\np\no\nn\nse\nR\no\nse\ntt\naN\net\nR\neq\nuest\nR\nesp\non\nse\nR\no\nsettaN\net\n \nFigure 6: Distributed Workflow Diagram for SMEs and OEMs Collaboration \n3.4 The 2-tier Communication Architecture in P2P Networking \n \nThere are several different P2P communications protocols available, the most common \nones are JXTA (Gong, 2002), Napster, Gnutella and AIM (Leuf, 2003). The \napplications of these protocols for peer-to-peer systems are usually designed for \ndelivering a single type of network service, for example, Napster for music file sharing, \nGnutella for generic file sharing and AIM for instant messaging. For implementation \npurposes, JXTA was adopted as the protocol for the framework because it is XML-\nbased and open source. It was initiated and developed by Sun Microsystems, Inc, with \nthe intention to standardise this technology for peer-to-peer networking. JXTA is a set \nof networking protocols similar to HyperText Transfer Protocol (HTTP) \n(http:\/\/www.w3.org) and TCP\/IP (http:\/\/www.protocols.com). The JXTA layer sits \nbetween the networking stack and the application stack, handling peer-to-peer \ncommunication. The JXTA platform standardizes the manner in which peers: \n  \n \n\u2022 Discover each other, \n\u2022 Advertise network resources,  \n\u2022 Communicate with each other, and \n\u2022 Cooperate with each other to form secure peer groups. \nThe framework described in this paper uses the two-tier solution shown in figure 7, \nwhich enables enterprises to establish connections between them in real-time. The first \nlayer uses the JXTA communication protocol for XML-based messaging as well as the \n\u201cP2P\u201d nodes connectivity. The second layer uses RosettaNet for distributed workflow \nand XML-based Electronic Data Interchange (EDI).  \nUniquePeerID \/ PeerAdvertisement \/ Security\nWorkflow Layer\nInternet\nSecond Layer RosettaNet\nFirst Layer JXTA\n \nFigure 7: The 2-tier Communication \n3.5 Security Issues in P2P Networking \n \nSecurity is one of the main challenges in implementing P2P due to the lack of a \ncentralized control server. Current P2P applications are designed mainly for home users \nto file share music and movies. These applications are not implemented with \ninformation security and offer no encryption for sensitive information. To address the \nsecurity issues, Sun Microsystems created an infrastructure called Project JXTA, which \nallows programmers to use a common library when creating new P2P applications, by \nproviding a robust, secure, interoperable applications programming interface (API).  \nOne of the security features in JXTA is the implementation of AuthenticationCredential \nwhich allows users or peers to join a peergroup after a set of credentials have been \nverified. AuthenicationCredentials are used by JXTA Membership Services as the basis \n  \n \nfor applications for peergroup membership. The AuthenticationCredential provides two \nimportant pieces of information:  \n\u2022 the authentication method being requested  \n\u2022 Identity information which will be provided to that authentication method. \nFurthermore, JXTA also provides developers to implement PasswdMembershipService \nwhich allows a Membership Service based on a password scheme.  \n \n4. RESULT OF CASE STUDIES \nThe case studies were carried out in single user access environment, however, the \narchitecture also supports multi-user access using PLM and P2P technologies. As \ndiscussed in Section 3, PLM allows simultaneous reading and writing of the same data \nin the repository, thus, supporting concurrent engineering practices. This is done by \nlocking parts or the entire database while the data are being updated. Furthermore PLM \nsupports access authorizations and hence data inconsistencies can be avoided and \nrelationships such as the structure between data are maintained. As in the P2P \napplication, connectivity is supported by individual super-peer node and hence the \nmulti-user functionality is one of the main strengths of the architecture.  \n \n4.1 Case Study 1 \u2013 a Centralised Collaboration in Product Development \n \nMabey & Johnson (UK) Ltd manufactures steel panel bridges for rapid assembly on-\nsite. The bridge system relies on the use of standardised components (\u2018Bailey\u2019 bridge \npanels), which are joined together in the desired configurations. The problems faced by \nthe personnel at the company include: \n  \n \n\u2022 The links between the design and manufacturing offices are very weak. Designers \nare primarily structural engineers who do not have access to manufacturing \nknowledge in order to improve the ease of manufacture of their designs. \n\u2022 Engineering changes are processed manually and involve interlinked stages between \ndifferent company sites. Once changes are made to a design and manufacturing \nplans, it is difficult to ensure that the knowledge stored in a digital format which is \naccessible to the personnel making future design and manufacturing decisions.  \nThe company has created some applications to link the design and manufacturing \nprocesses within the ERP system. However, many shortfalls remain with the methods \napplied, and these include: \n\u2022 A lack of workflows to automate the process of managing documents, project \nsequences and engineering change \/ revision control.  \n\u2022 A lack of interaction between different departments, namely between the marketing, \nengineering and manufacturing sectors of the business.  \n\u2022 There is no framework or technology to store and reuse the natural-language \nknowledge associated with the company\u2019s products, activities and user experiences. \nTo alleviate this situation, this research has proposed the application of the centralised \n\u2018out-of-box\u2019 solution. The centralised testing environment is illustrated in figure 8 \nwhich depicts an example of web-based data interoperability between the knowledge-\nbased system, the aggregate process planning system, the PLM and ERP systems. The \nmethods and tools have been used to generate a preliminary process plan for a single \nBailey bridge panel. The example shows that the captured knowledge will be saved in a \nXML file into a PLM data repository. The illustration also shows the main \nimplementation of the software components which depicts the links of a knowledge-\nbased system to be re-used by the CAPABLE system. The links were established by the \n  \n \nXML-parser. Thus, this allows the extracted data to be transferred to the data models in \nthe CAPABLE system. \n \nINSTANCE\nCAPABLE Aggregate \nPlanning System\nCAPABLE Aggregate\nData Models\nProduct\nResource\nProcess\nXML\n1. Create XML-based \nKnowledge\n4. Invoke CAPABLE \nand extract XML-\nformatted Knowledge\nProt\u00e9g\u00e9 2000\nOntology\nHow  \n?\nWhat  \n?\nWhy \n?\nXML Parser\n5. Save the Process \nPlan\nWindchill PDM\nCheck-in\nCheck-out\nUser\nLocal \nServer\n2. Save XML \ndocument\nEnterprise \nResource \nPlanning \u2013\nfor Capacity \nPlanning\nWindchill PDM\nCheck-in\nCheck  \nOut\n3. Other Users \nto use the XML \ndocument for a \nthird party \nsoftware  \nFigure 8: Centralised Testing Environment \nFigure 9 (a), (b), illustrates the knowledge statements related to a specific object termed \nRobot_Cell_0 which belongs to a station of a factory. As it highlighted in the diagram, \nwhen the XML Parser is invoked within the factory resource model of the CAPABLE \nSystem, the knowledge statements will then attach to a particular group of machines \nwhich can be used for further analysis to enhance the planning process of a product. The \nexample shown in figure 9 (c) indicates the resulting knowledge statements extracted to \nthe CAPABLE System which relate to a factory (resource) model object \u2018Galvanising \nTrailer\u2019 which belongs to a cell of \u201cM&J (UK) Ltd\u201d factory. The design engineers are \nthen required to select the relevant knowledge to refine the design and subsequently to \nrun the CAPABLE system to obtain a preliminary process plan based upon these \nknowledge factors. If the plan requires review, the prioritised knowledge factors, \nobtained from capability analysis, highlights the most appropriate areas of the process \n  \n \nplan for improvement based upon the specific instances of knowledge factors used. If \nthe process plan is acceptable, it is then delivered to the PLM system for Plan\/Review, \nand subsequently is readied for implementation in an ERP System for capacity \nrequirements planning.  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nFigure 9: Example knowledge statements related to a specific object \n4.1.1 Closing Remarks of Case Study 1 \n \nIn the current way of doing business within M&J (UK) Ltd., a significant amount of the \ntechnical knowledge is tacit and possessed by experts. However, the methodology \n (a) Invoke XML Parser  \n     from a Factory \n     Model \n(b) Select the  \n     XML file \n(c) Example of extracted  \n    Knowledge statements  \n    into Factory Model \n  \n \ndemonstrated in this research was used to store and re-use this knowledge within the \nprocess of collaborative product development. According to the industrial collaborator: \n\u0001 Early collaboration in product design using this methodology can maximise \nthe opportunity for optimising designs \n\u0001 With the increasing level of captured knowledge in product design and \nmanufacturing capabilities, it can prevent poor decision making and enable \nthe design to be right-at-first-time.  \n\u0001 Accelerate the feedback and amount of relevant available information when \ndesigning customised products is enhanced  \n\u0001 The amount of lead time that can be reduced for new product introduction is \ndifficult to measure at this stage as the methodology only tested the early \nstages of the product development process. \nThese observations support the initial hypotheses that the centralised collaboration \nstreamlines the product development process and reduces design rework due to poor \ninitial decision making. \n \n4.2 Case Study 2 - Utilisations of a De-centralised Network in Product \nDevelopment \nArvinMeritor Automotive is a large Tier-1 automotive supplier. This company is a \nglobal enterprise with different subsidiaries based primarily in the US, UK, mainland \nEurope and China. The applications of P2P address the needs of de-centralised \norganisations to collaborate and share knowledge regardless of geographical location.  \nOne of the main reasons to use this case study is that majority of the industrial \ncollaborator\u2019s design is outsourced to local suppliers.  Apart from the interest of \nutilizing PLM technology to enhance design knowledge, the industrial collaborator is \n  \n \nalso interested in adopting a decentralised network to do business with smaller \ncompanies.  \n \nFigure 10 illustrates the topology of the system. In this instance the architecture was set \nup with a super-peer network in order to create a number of virtual servers at each of the \nproject\u2019s participants sites. These super peers are visible as peers to both the other \nsuper-peers and the internal peer-net which they serve. They also act as the default \nrendezvous peer, and peer information is shared between the super-peers in order to \nimprove the redundancy and query speed of the system. The grey area contains the \ninternal peer-net of the enterprise with the interconnected PLM and knowledge-based \nsystem servers and workstations. Outside the peer-net is the external peer-to-peer \nenvironment which interlinks all the super-peers from every collaborator together. This \nenables peers to connect to each other enabling queries for and manipulation of \nknowledge on different peers on the internal and wider peer-net transparently.  \n \n \n \n \n  \n \nPLM\nSuper\nPeer\nF3\nF1\nF2\nP2P\nP2P\nP2P\nP2P\nP2P\nKBS\nProcess\nPlanning\nJXTA Protocols\nJXTA \nProtocols\nP2P\nSupplier_1\nArvinMeritor\nP2P\nSupplier_3\nP2P\nSupplier_2\n \nFigure 10: Super peer architecture showing the interacting within internal and external \npeer nets of a collaborative project. \n \nFigure 11 illustrates the JXTA user interface. The right-hand window shows the user \ninterface from where queries, project management of collaborative groups and widely \nused items such as group chat and instant messaging are readily implemented by the \nJXTA protocol. The systems\u2019 settings enable enterprises and users without static \naddresses (or static network architectures) to collaborate using dynamic addressing, and \nthis flexibility, as well as the users\u2019 ability to work offline, empowers users in all \npossible circumstances. \n \n \n \n \n \n  \n \n \nFigure 11: JXTA configuration window and user interface \nThe main objective of this case study was to demonstrate the application of a centralised \nPLM, decentralised P2P and SuperPeer production networks scenarios through the \ncomparisons of the following features: \n\u2022 Time of deployment. The time to customise and deploy the entire project including \nthe project management framework and communications setup. \n\u2022 Virtual Enterprise setup. How rapidly could VE be set up and start to operate on all \nthe remote sites. \n\u2022 Deployment of ontology-based KBS. How easy was it to enter, query, and reuse both \nthe ontology and domain knowledge within the collaborative group. \n\u2022 Lifecycle Management. The ability to control the state of a document, manage \nversioning and history of the data. \n  \n \n\u2022 Total cost of ownership. The costs of licences, implementation, system integration, \ntraining and maintenance. \nThe case study was empirically based using a small inter-enterprise setup. The server \nwas located in the academic research laboratory, and users concurrently created the new \nproject, generated new concepts and optimised the design gradually from two remote \nlocations to simulate the collaborative scenario as shown in figure 10. All KBS \ndeployed SAP-DB, a commonly shared back end. The applications were tested on \nidentical hardware with identical configurations and internet connections. The apparatus \nwere Dell Xeon workstations with 1GB RAM, 15K rpm disks and 1MB internet \nconnection, the operating system was Windows 2000 on all machines. A 1 MB internet \nconnection was used to minimize the cost of bandwidth, thus, demonstrating one of the \nadvantages of decentralised network application. The test simulated a small scale virtual \nenterprise (VE) setup through from initiating the VE to running the system within the \ncollaborative network. This setup has a typical VE with a large number of small servers \ndistributed within a common network, with a small number of transactions are \nprocessed at each node.  Table 1 show the results based on the comparison of key \nfeatures requisite for a collaborative project environment.  \n \n \n \n \n \n \n \n  \n \n \nTable 1: Comparison of key features of tested system (Aziz et al, 2005) \n \n \n4.2.1 Closing Remarks of Case Study 2 \n \nPLM systems are inherently centralised, complex to set up and require a long period of \ntime for customisation. Conversely, the RosettaNet standard, implemented in the PLM \nsystem, can decrease the amount of customisation needed, but not eliminate it as \nRosettaNet only provides a subset of the messaging and data models of the inter-\nenterprise link. Unlike the 2-tier communication system as shown in figure 7, a PLM\u2019s \ndata model and workflows are neither portable nor standardised. The data model can be \nmodified by an expert who has to model, program, compile, update the database and \nintegrate the code into the PLM system before it can be used. The costs of \nimplementation, licences and maintenance are overly expensive and only practical when \nthe enterprises involved can share the cost between each other over a long period of \ncollaboration.  \n                                                 \n*\n Business to Business- www.b2btoday.com \n\u2020\n Resource Description Framework - www.w3.org\/RDF\/ \nApplication \nTime of \nDeployment  \nVirtual \nEnterprise \nsetup \nDeployment of \nOntology-\nbased KBS \nLifecycle \nmanagement \nTotal cost of \nownership \nCommercial \nPLM \n1 month for \nsmall \nproject.  \nB2B\n *\n one-to-\nmany \nintegration, \nmanual \nRDFs\n \u2020\n \nontology in \ndocument \ncontainer, \naccess via PLM  \nGraphical \nworkflow \nServer & \nclient licence, \nimplementatio\nn and \nmaintenance \nPure P2P 1 day \nPeer to peer, \nautomatic \ndiscovery \nRDFs ontology \nin java \napplication \nVersion \ncontrol and \nrule based \nsystem \nTraining on \nP2P and \nknowledge app \nSuperPeer \nnet \n1 day \nSuperPeer \nautomatic \ndiscovery \nRDFs ontology \nin java \napplication \nVersion \ncontrol and \nrule based \nsystem \nTraining on \nP2P and \nknowledge app \n  \n \nThe application of P2P and open standards to support a VE can fullfield the following \nrequirements: \n\u2022 Elimination the interoperability issues for product and project knowledge, enabling \nsmall enterprises to implement application standards such as STEP-PDM, and easier \nset up for inter-enterprise collaboration,  \n\u2022 Elimination of centralised bottlenecks in bandwidth and resources, empowerment of \ncollaborators within networks to control the knowledge they create, solving the \nmanagement of intellectual property rights within virtual enterprise, and \n\u2022 Elimination of centralised administration that results in reduction in cost and \ncomplexity and enables domain professionals to tailor the system.  \n \nIn addition, open source can significant reduce software licence costs, provide a \nsolution to the problem of vendor lock-in in the long term, elimination of unnecessary \ncomplexity and freedom to modify the application. Open Source also provides platform \nand application independence. This enables the enterprise to concentrate on its work and \nnot be tied in to any vendor, the rapid and complete migration from the proposed system \nto future applications, and empower the enterprise to leverage its existing investments. \n \n5. CONCLUSIONS \nDifferent paradigms have been proposed to support distributed network environments \nduring the mid 1990s through to the early 2000s. Since then, Web-based technologies \nand data exchange formats have matured. With the availability of enterprise integration \nsystems and open source technology, this research has proposed and developed a \ndifferent approach. Hence, the deployments of an \u2018out-of-box\u2019 solution which provides \na standardised framework with centralized and de-centralized concepts to support \n  \n \nproduction networks in design and manufacturing. In this research work, the discussions \nhave been focused on the proposal of the integration architecture to support a \ncollaborative product development and knowledge distribution method in the early \nstages of the product development process. However, the infrastructure of the \nintegration architecture is also relevant to the later stages of product development, \nproviding that suitable software systems are used which can exploit XML based \ninformation. \n \nCase study 1 described the testing of a centralised product development integration \narchitecture which demonstrated the advantages of the applications of web-based \ntechnologies for enterprise integration systems into the industrial collaborator\u2019s product \ndevelopment process.  Case study 2 described the testing of the combination of \ndecentralised and centralised production networks using P2P technologies. The study \nfocused on creating a virtual enterprise collaboration to compare the applications of a \ncentralised PLM, pure P2P and SuperPeer.  \n \n6. FUTHER WORK \nIn terms of future work, one specific issue is the upgrading of a new data exchange \nmechanism in the integration architecture. An RDF parser, which is an advanced \nversion of the XML-parser, is under development in the Web-based technologies \ncommunity. The RDF parser is designed to run in a Web-browser which can be used to \nextract information from both XML and RDF based documents on the client side. As \nthe XML parser only deals with the syntax, the RDF parser will deal both the syntax \nand semantics used in the design and manufacturing knowledge. However, as far as the \nauthors are aware, during this period of the research the support for RDF parsers in the \n  \n \nW3C (World-Wide-Web Consortium) has not been fully completed yet. As for future \nwork, the research will investigate and upgrade the application of RDF parser into the \nproduct development integration architecture.  \n \nA new project is under development in open source PLM (Salustri, F., 2006). The \nOpensource PLM (OPLM) project aims to provide SMEs with the ability to perform the \nneeds of current proprietary PLM functions, but, freely available without the prohibitive \nresource requirements of the larger systems. In the future version of the proposed \narchitecture, further investigation will be carried out to integrate with this new open \nsource PLM when it is available.  \n \nACKNOWLEDGEMENTS \nThe authors would like to acknowledge the financial support of the UK\u2019s Engineering \nand Physical Sciences Research Council (EPSRC), for the project Distributed and \nCollaborative Product Development and Manufacturing Knowledge Management \n(Grants GR\/R26757\/01 and GR\/R35148\/01). We are also grateful for the support of the \nindustrial collaborators ArvinMeritor, LSC Group, Mabey & Johnson and PTC.  \n \n \nREFERENCES \n \nAziz, H., Gao, J.X., Maropoulos, P.G. and Cheung, W.M., Open Standard, Open Source \nand Peer to Peer Tools and Methods for Collaborative Product Development, Journal of \nComputers in Industry, 2005, 56, 260-271.  \n \nAziz, H., Gao, J.X., Maropoulos, P.G. and Cheung, W.M., A Design Environment for \nProduct Knowledge Management and Data exchange, Methods and Tools for Co-\n  \n \noperative and Integrated Design, (ed.) S. Tichkiewith and D. Brissaud, Kluwer \nAcademic Publishers, 2004 (ISBN 1-4020-1889-4, 257-267). \n \nBaker, R.P. and Maropoulos, P.G., Manufacturing Capability Measurement for Cellular \nManufacturing Systems, International Journal of Production Research, 1998, 36 (9), \n2511-2527. \n \nBecker, J., zur Muehlen, M and Marc, G., Workflow Application Architectures: \nClassification and Characteristics of Workflow-based Information Systems, Workflow \nHandbook, pp.39-50, 2002 (Future Strategies, Lighthouse Point, FL).  \n \nBond, J., Business uses of Peer to Peer (P2P) technologies, A Netmarkets Europe White \nPaper, Netmarkets Europe, 2001. \n \nBramall, D.G., McKay, K.R., Rogers, B.C., Chapman, P., Cheung, W.M. and \nMaropoulos P.G., Manufacturability Analysis of Early Product Designs, International \nJournal of Computer Integrated Manufacturing, 2003, 16(7-8), 501-508. \n \nCheung, W.M., Maropoulos, P.G., Gao, J.X. and Aziz, H., A Framework for Distributed \nWorkflows, Peer-to-Peer and PLM\/PDM Collaborations to support OEMs and SMEs, \n2nd International CIRP Seminar on Digital Enterprise Technology (DET04),  Seattle, \nWashington USA, 2004. \n \nCheung, W.M., Bramall, D.G., Maropoulos, P.G., Gao, J.X. and Aziz, H., \nOrganizational Knowledge Encapsulation and Re-use in Collaborative Product \n  \n \nDevelopment, Accepted to be published in International Journal of Computer \nIntegrated Manufacturing, 2006 (Taylor and Francis Group). \n \nCIMdata, Product Lifecycle Management \u2013 Empowering the Future of Business, A \nReport by CIMdata, Inc 2002. Available on line at: http:\/\/www.javelin-\ntech.com\/plm\/events\/pdf\/CIMdata_PLM_White_Paper.pdf (accessed 07 February 2006) \n \nCloutier, L., Frayret, JM., D'Amours, S., Espinasse, B. and Montreuil, B., A \nCommitment-Oriented Framework for Networked Manufacturing Co-ordination, \nInternational Journal of Computer Integrated Manufacturing, 2001, 4(6), 522 \u2013 534. \n \nEttighoffer, D., L\u2019Entreprise Virtuelle ou Les Nouveaux Modes de Travail (The Virtual \nEnterprise on the New Working Methods), 1992 (Paris: Odiles Jacob).  \nFiorano Software, A Whitepaper in Super-Peer Architectures for Distributed \nComputing, 2003 (Fiorano Software, Inc).  \n \nGong, L., Project JXTA: A Technology Overview, 2002 (Sun Microsystems, Inc). \n \nGunasekaran, A., Agile Manufacturing: Enablers and an Implementation Framework. \nInternational Journal of Production Research, 1998, 36(5), 1223 \u2013 1247. \n \nHolzner., S, Inside XML, New Riders Publishing, 2001, (ISBN: 0735710201). \n \nLeuf, B., Peer to Peer: Collaboration and Sharing over the Internet, Addison Wesley \nProfessional, 2003, (ISBN: 0201767325, Pages: 464; Edition: 1st.) \n  \n \nMaropoulos, P. G., Yao, Z. and Bradley, H. D., CAPABLE: an Aggregate Process \nPlanning System for Integrated Product Development, Journal of Materials Processing \nTechnology, 1998, 76 (1-3), 6-22. \n \nMaropoulos, P.G. and Gao, J.X., Case for Support: Distributed and Collaborative \nProduct Development and Manufacturing Knowledge Management (EPSRC \nGR\/R26757\/01), 2000. \n \nPenserini, L., Liu, L., Mylopoulos, J., Panti, M. and Spalazzi, L., Cooperation Strategies \nfor Agent-Based P2P Systems, International Journal of Web Intelligence and Agent \nSystem, 2003, 1(1), 3 \u2013 21, ISSN: 1568-4539.  \n \nSalustri, F., \u2018Opensource Product Lifecycle Management Navigator Project\u2019, Available \non line at: http:\/\/deseng.ryerson.ca\/xiki\/View\/Oplm\/RugPlotPaper (accessed 05 May \n2006) \n \nVernadat F.B., (2002), \u201cEnterprise Modelling and Integration (EMI): Current status and \nResearch Perspectives\u201d, Annual Reviews in Control, Publisher: Elsevier Science, 26 (1), \n15-25. \n \nYendluri, P., (2000), \u201cRosettaNet Implementation Framework (RNIF) 2.0\u201d, \u00a9 \nwebMethods, Inc. \n \n"}