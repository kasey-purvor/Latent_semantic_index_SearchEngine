{"doi":"10.1049\/iet-rsn:20060159","coreId":"140965","oai":"oai:dspace.lib.cranfield.ac.uk:1826\/3113","identifiers":["oai:dspace.lib.cranfield.ac.uk:1826\/3113","10.1049\/iet-rsn:20060159"],"title":"Distributed data fusion algorithms for inertial network systems","authors":["Allerton, David J","Jia, Huamin"],"enrichments":{"references":[{"id":37922843,"title":"Integrated inertial network\u2019.","authors":[],"date":"1994","doi":"10.1109\/plans.1994.303347","raw":"Kelley, R.T., Carlson, N.A., and Berning, S.: \u2018Integrated inertial network\u2019. Proc. IEEE PLANS, 1994, pp. 439\u2013446","cites":null},{"id":37922856,"title":"Theater-wide reference information management\u2019.","authors":[],"date":"1996","doi":"10.1109\/naecon.1996.517626","raw":"Berning, S., Howe, P., and Jenkins, T.: \u2018Theater-wide reference information management\u2019. Proc. IEEE NAECON, 1996, pp. 122\u2013128","cites":null},{"id":37922858,"title":"Vital advanced inertial network\u2019.","authors":[],"date":"1998","doi":"10.1109\/plans.1998.669871","raw":"Kaiser, J., Beck, G., and Berning, S.: \u2018Vital advanced inertial network\u2019. Proc. IEEE PLANS, 1998, pp. 61\u201368","cites":null},{"id":37922860,"title":"Modular avionics: its impacts on communication, navigation, and identi\ufb01cation (CNI)\u2019.","authors":[],"date":"1988","doi":"10.1109\/naecon.1988.195153","raw":"Harris, R.L.: \u2018Modular avionics: its impacts on communication, navigation, and identi\ufb01cation (CNI)\u2019. Proc. IEEE NAECON, 1988, pp. 1164\u20131169","cites":null},{"id":37922861,"title":"Evolving avionics systems from federated to distributed architectures\u2019.","authors":[],"date":"1998","doi":"10.1109\/dasc.1998.741519","raw":"Swanson, D.L.: \u2018Evolving avionics systems from federated to distributed architectures\u2019. Proc. IEEE\/AIAA\/NASA 17th Digital Avionics Systems Conf., 1998, pp. D26\/1\u2013D26\/8","cites":null},{"id":37922862,"title":"GPS\/INS technology trends for military systems\u2019.","authors":[],"date":"1998","doi":"10.2514\/6.1997-3826","raw":"Schmidt, G.T.: \u2018GPS\/INS technology trends for military systems\u2019. Draper Technology Digest, 1998, pp. 2\u201313 available at: http:\/\/ www.draper.com\/pubns\/digest98\/digest98.htm","cites":null},{"id":37922863,"title":"G.T.: \u2018Inertial Sensor Technology Trends\u2019,","authors":[],"date":"2001","doi":"10.1109\/7361.983473","raw":"Barbour, N. Schmidt, G.T.: \u2018Inertial Sensor Technology Trends\u2019, IEEE Sensors J., 1, (4)Dec 2001, pp. 332\u2013339","cites":null},{"id":37922864,"title":"A redundant strapdown inertial reference unit","authors":[],"date":"1972","doi":"10.2514\/3.61628","raw":"Gilmore, J.P., and Mckern, R.A.: \u2018A redundant strapdown inertial reference unit (SIRU)\u2019, J. Spacecraft Rockets, 1972, 9, (1), pp. 39\u201347","cites":null},{"id":37922865,"title":"An error compensation method for skewed redundant inertial con\ufb01gurations\u2019.","authors":[],"date":"2002","doi":null,"raw":"Allerton, D.J., and Jia, H.: \u2018An error compensation method for skewed redundant inertial con\ufb01gurations\u2019. Proc. ION 58th Annual Meeting\/ GIGTF 21st Guidance Test Symp., Albuquerque, USA, 2002, pp. 142\u2013147","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2008-01-01T00:00:00Z","abstract":"New approaches to the development of data fusion algorithms for inertial network\nsystems are described. The aim of this development is to increase the accuracy\nof estimates of inertial state vectors in all the network nodes, including the\nnavigation states, and also to improve the fault tolerance of inertial network\nsystems. An analysis of distributed inertial sensing models is presented and new\ndistributed data fusion algorithms are developed for inertial network systems.\nThe distributed data fusion algorithm comprises two steps: inertial measurement\nfusion and state fusion. The inertial measurement fusion allows each node to\nassimilate all the inertial measurements from an inertial network system, which\ncan improve the performance of inertial sensor failure detection and isolation\nalgorithms by providing more information. The state fusion further increases the\naccuracy and enhances the integrity of the local inertial states and navigation\nstate estimates. The simulation results show that the two-step fusion procedure\novercomes the disadvantages of traditional inertial sensor alignment procedures.\nThe slave inertial nodes can be accurately aligned to the master node","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/140965.pdf","fullTextIdentifier":"https:\/\/dspace.lib.cranfield.ac.uk\/bitstream\/1826\/3113\/1\/Distributed%20data%20fusion%20algorithms%20-%202008.pdf","pdfHashValue":"666babb3bb9111492424a7a61331c5e2a2d398e8","publisher":"Institution of Engineering and Technology","rawRecordXml":"<record><header><identifier>\noai:dspace.lib.cranfield.ac.uk:1826\/3113<\/identifier><datestamp>2011-11-13T23:19:10Z<\/datestamp><setSpec>hdl_1826_19<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>Distributed data fusion algorithms for inertial network systems<\/dc:title><dc:creator>Allerton, David J<\/dc:creator><dc:creator>Jia, Huamin<\/dc:creator><dc:description>New approaches to the development of data fusion algorithms for inertial network\nsystems are described. The aim of this development is to increase the accuracy\nof estimates of inertial state vectors in all the network nodes, including the\nnavigation states, and also to improve the fault tolerance of inertial network\nsystems. An analysis of distributed inertial sensing models is presented and new\ndistributed data fusion algorithms are developed for inertial network systems.\nThe distributed data fusion algorithm comprises two steps: inertial measurement\nfusion and state fusion. The inertial measurement fusion allows each node to\nassimilate all the inertial measurements from an inertial network system, which\ncan improve the performance of inertial sensor failure detection and isolation\nalgorithms by providing more information. The state fusion further increases the\naccuracy and enhances the integrity of the local inertial states and navigation\nstate estimates. The simulation results show that the two-step fusion procedure\novercomes the disadvantages of traditional inertial sensor alignment procedures.\nThe slave inertial nodes can be accurately aligned to the master node.<\/dc:description><dc:publisher>Institution of Engineering and Technology<\/dc:publisher><dc:date>2011-11-13T23:19:10Z<\/dc:date><dc:date>2011-11-13T23:19:10Z<\/dc:date><dc:date>2008-01-01T00:00:00Z<\/dc:date><dc:type>Article<\/dc:type><dc:identifier>Allerton, David J. and Jia Huamin. Distributed data fusion algorithms for\ninertial network systems. IET Radar, Sonar & Navigation, 2008, Vol. 2, No1, pp.\n51-62.<\/dc:identifier><dc:identifier>1751-8784<\/dc:identifier><dc:identifier>http:\/\/dx.doi.org\/10.1049\/iet-rsn:20060159<\/dc:identifier><dc:identifier>http:\/\/dspace.lib.cranfield.ac.uk\/handle\/1826\/3113<\/dc:identifier><dc:language>en_UK<\/dc:language><\/oai_dc:dc><\/metadata><\/record>","journals":[{"title":null,"identifiers":["1751-8784","issn:1751-8784"]}],"language":{"code":"en","id":9,"name":"English"},"relations":[],"year":2008,"topics":[],"subject":["Article"],"fullText":"Distributed data fusion algorithms for inertial\nnetwork systems\nD.J. Allerton and H. Jia\nAbstract: New approaches to the development of data fusion algorithms for inertial network\nsystems are described. The aim of this development is to increase the accuracy of estimates of iner-\ntial state vectors in all the network nodes, including the navigation states, and also to improve the\nfault tolerance of inertial network systems. An analysis of distributed inertial sensing models is pre-\nsented and new distributed data fusion algorithms are developed for inertial network systems. The\ndistributed data fusion algorithm comprises two steps: inertial measurement fusion and state fusion.\nThe inertial measurement fusion allows each node to assimilate all the inertial measurements from\nan inertial network system, which can improve the performance of inertial sensor failure detection\nand isolation algorithms by providing more information. The state fusion further increases the\naccuracy and enhances the integrity of the local inertial states and navigation state estimates.\nThe simulation results show that the two-step fusion procedure overcomes the disadvantages of tra-\nditional inertial sensor alignment procedures. The slave inertial nodes can be accurately aligned to\nthe master node.1 Introduction\nThe concept of an inertial network system in aircraft avionics\nwas initially proposed by Kelley et al. [1] and subsequently\ndeveloped by Berning et al. [2] and Kaiser et al. [3]. In this\narchitecture, inertial sensor systems are located at several\nplaces in an aircraft in order to meet the fault tolerance\nrequirements of aircraft navigation and to provide accurate\nlocal inertial state vectors for several airborne avionics\nsystems. For example, fire\/weapon control systems and\nradar search\/tracking systems require accurate local and\ncentre of gravity (cg)-referenced inertial state information\nto stabilise these systems and to compensate for localmotion.\nThe development of inertial network systems arise from\nreliability requirements and increased reliance on inertial\ninformation, particularly in advanced military aircraft\nwhere airframe flexibility must be taken into account in\nthe installation and alignment of airborne avionics\nsystems. Inertial sensor systems provide flight-critical infor-\nmation for all safety or mission-critical avionic systems,\nsuch as flight control and navigation systems, as well as\nother airborne systems. Redundant inertial systems are\nused to provide the level of fault tolerance necessary in air-\ncraft navigation systems, in order to meet safety and\nreliability requirements for civil or military aircraft.\nTypically, a combat platform may have 12 inertial measure-\nment units (IMUs) of various quality providing the inertial\nstate vector information needed in mission-critical avionics\nsystems and weapon systems [2]. These IMUs are installed\nat different locations in a flexible airframe and both\n# The Institution of Engineering and Technology 2008\ndoi:10.1049\/iet-rsn:20060159\nPaper first received 23rd November 2006 and in revised form 7th August 2007\nD.J. Allerton is with the Department of Automatic Control and Systems\nEngineering, The University of Sheffield, Mappin Street, Sheffield S1 3JD, UK\nH. Jia is with the Department of Aerospace Engineering, Cranfield University,\nCranfield, Bedfordshire MK43 0AL, UK\nE-mail: d.j.allerton@sheffield.ac.ukIET Radar Sonar Navig., 2008, 2, (1), pp. 51\u201362\nAuthorized licensed use limited to: IEEE Xplore. Downloaded on January 19, 2009 structural and in-flight misalignments between these\nsensors\/weapon locations need to be estimated in order to\nalign the dynamic sensors and weapon systems. For\nexample, the performance of sensors\/systems such as\nSAR and terrain following radar, pointing systems,\nforward-looking infrared receivers, laser spot trackers and\nmissile pylons all depend on the precise alignment of the\nsystem sensitive axes in inertial networks. Fusion of\nmeasurements from distributed IMUs can provide highly\nreliable inertial vector information and can also be used to\ndetect sensor failures and to reconfigure inertial measure-\nments in inertial networks.\nDuring the last few years, distributed and integrated\nmodular avionics architectures have been introduced into\nmodern aircraft systems [4, 5] as a result of advances in\nhigh-speed airborne data communication networks and\nembedded computer systems. These enabling technologies\nprovide airborne avionics systems with powerful data pro-\ncessing and communication capability. Furthermore, the\nreducing cost, size and mass of sensors, including fibre\noptic gyros and microelectromechanical systems (MEMS)\ninertial sensor systems [6, 7], have enabled redundant iner-\ntial sensors to be integrated into a single IMU box. In these\nsystems, non-orthogonal configurations can be used to\nimprove system reliability and to reduce the cost, size and\nmass of aircraft navigation systems. In a non-orthogonal\nconfigured IMU, redundant inertial sensors are skewed\nwith respect to the orthogonal frame; this configuration is\nknown as a skewed redundant IMU (SRIMU).\nFew researchers to date have focused on a systematic\napproach to the design of inertial network algorithms.\nThis paper proposes innovative data fusion methods for\ninertial network systems to provide dynamic alignment\nand calibration of distributed inertial systems.\n2 Inertial network system architectures\nAn inertial network architecture is illustrated in Fig. 1 in\nwhich each node represents an individual sensing location51\nat 11:31 from IEEE Xplore.  Restrictions apply.\nFig. 1 Relationships between IMU nodesconsisting of an IMU and an embedded microprocessor.\nEach node is assumed to be able to communicate with\nother nodes, so that information from one node can be\nshared by other nodes. The IMU at each node can be inte-\ngrated with other navigation-aiding systems, including\nglobal navigation satellite systems (GNSS), Doppler radar\nand other radio navigation systems. Avionics data buses\nare used to interconnect the IMU nodes to implement an\ninertial network system. The node located at the aircraft\ncg is usually a master node, also referred to as the cg\nnode; the other nodes are the local nodes, known as slave\nnodes. The data fusion filter located at the cg node provides\nthe navigation states and the cg-referenced inertial state\nvector; the data fusion filters located at the slave nodes\nprovide the local states and the local inertial vector\ninformation.\nThis form of distributed inertial network system [1] is\nextended in this paper and affords the following advantages.\n1. Fault tolerance and robustness to sensor\/system failures.\nData fusion algorithms are designed so that the failure of\nany node or element of the node will not lead to degradation\nof the performance of the aircraft navigation system.\nMoreover, degradation of the performance of local\nsystems at a failed node will be gradual.\n2. Flexibility. It is straightforward to add or remove one or\nmore sensor systems in a distributed system network.\n3. Highly reliable cg state estimation. The cg data fusion\nfilter combines all local estimates with its own estimate to\nobtain the aircraft cg motion states, which are used to\nsupport aircraft navigation, flight control and guidance\nand other functions that require cg-referenced data.\n4. Accurate local state estimation. The slave data fusion\nfilter located at each node fuses all measurements from\nhealthy inertial sensor systems to derive globally optimal\nestimates of the local states; these are used to support the\nstabilisation of various avionics system platforms and to\nprovide local motion compensation.\n5. Automatic alignment of low-quality sensors. Because\ninformation is shared by all nodes, distributed data fusion\nfilters can use the local estimates obtained at a node with\na high-quality IMU, to dynamically correct and align low-\nquality IMUs situated at other nodes. Consequently, tra-\nditional inertial system alignment algorithms, which may\nnecessitate specific manoeuvers to be flown, are no longer\nnecessary in distributed inertial network systems.52\nAuthorized licensed use limited to: IEEE Xplore. Downloaded on January 19, 2009 3 Distributed inertial sensing models\n3.1 Distributed node frames\nAlthough IMUs in an inertial network independently\nmeasure individual local qualities, the measured or esti-\nmated states are not completely independent; they are dyna-\nmically related to each other owing to the rigid structure of\nthe aircraft. The development of this dynamic relationship\nbetween the local measured states enables the inertial infor-\nmation provided by an inertial network to be used to detect\nand isolate sensor\/system failures and to implement the\ndynamic alignments between different inertial systems.\nFig. 1 illustrates three local IMU frames and the corre-\nsponding local reference frames. Let I be an inertial refer-\nence frame, let cg be the local body frame of the IMU\nnode located at the aircraft centre of gravity i and j represent\nthe slave IMU nodes and their individual local body frames.\nIn this paper, the IMU frames are assumed to be aligned with\nthe local body frames when the IMUs are installed at local\nlocations in the aircraft. ? represents a translational trans-\nformation, for example, the translation vector from nodes i\nto j is denoted by ?ji. T represents a rotational transform-\nation, for example, the transformation matrix from nodes i\nto j is denoted by T\nj\ni. Exchanging the superscript and the\nsubscript of a transformation matrix represents an inverse\nof this transformation, for example, (T\nj\ni)\n\u00011 \u00bc T ij. Let the\nlocal reference frames at the nodes i, j and cg be denoted\nby Li, Lj and Lcg, respectively, then the corresponding trans-\nformations from the local reference frames to the local body\nframes are given by T iLi , T\nj\nLj\nand T\ncg\nLcg . If the local level\nframes, such as the north-east-down, are used as the local\nreference frames, these rotation matrices represent the orien-\ntations of the local body axes relative to the local level\nframes. Because the origins of the local level frames are\ndefined with respect to the geodetic coordinates of the\nIMU nodes and the magnitudes of the translation vectors\nbetween these IMU nodes are very small, the misalignments\nbetween the local level frames, caused by the translation\nvectors, can be ignored. In order to simplify the develop-\nment of an inertial network sensing model, it is assumed\nthat the local-level frames located at all the inertial\nnetwork nodes are identical, that is Li = Lj = Lcg.\nLet the relative rotation of the IMU frame i with respect\nto the frame j be vj=i and its inverse rotation be\nvi=j \u00bc \u0001vj=i. From multi-body rotation mechanics, theIET Radar Sonar Navig., Vol. 2, No. 1, February 2008\nat 11:31 from IEEE Xplore.  Restrictions apply.\nabsolute angular velocity of an IMU frame in an inertial\nnetwork system is the sum of the absolute angular velocity\nof another IMU frame and the relative angular velocity\nbetween these two frames. Therefore, the absolute angular\nrate vectors measured by the local IMUs can be represented\nas follows\nvI=i \u00bc vI=cg \u00fevcg=i (1)\nvI=j \u00bc vI=cg \u00fevcg=j (2)\nvI=cg \u00bc vI=j \u00fevj=cg (3)\nThe rotational transformations between the local IMU\nframes depend on the relative angular velocities between\nthese frames. In the stationary (rigid airframe) case, there\nis no relative angular motion between the IMU nodes; in\nthe dynamic case, the relative angular rates between differ-\nent IMU frames can be treated as a random variable.\n3.2 Stationary inertial sensing model\nIn this model, the aircraft structure is assumed to be rigid.\nThe dynamic relationships between different IMU frames\ncan be described by fixed rotational and translational trans-\nformations, which can be precisely determined from the\ngeometry of IMU locations at the time of installation or sub-\nsequently estimated using a distributed alignment Kalman\nfilter.\nIf the local state x is a rate vector (such as acceleration,\nvelocity or angular velocity), a rotation matrix is used to\ncomplete the rotation transformation between node\nframes, for example, from nodes j to i, as follows\nxi \u00bc T ijxj (4)\nIf the local state x is a displacement vector, a rotation matrix\nis combined with a translation vector to represent the trans-\nformation between frames as follows\nxi \u00bc T ijxj \u00fe?ij (5)\nwhere the states xi and xj are expressed in their individual\nlocal frames, T ij a known rotation matrix and ?ij a known\ntranslation vector expressed relative to node i.\nFor the case where the local states are the Euler angles,\nthe attitude matrix transformation from one node to the\nother has the following form\nT\ni\nLi \u00bc T ijT jLj (6)\nIt should be noted that the new Euler angles in (6) are\ncomputed from the matrix T iLi .\nIf a node IMU is an SRIMU, the measured inertial states,\naccelerations and angular rates, are expressed in terms of\nthe local body frame but the IMU outputs are represented\nin the inertial instrument frame, which defines the sensing\ndirections of inertial sensors and differs from the IMU\nframe. The transformation between the inertial instrument\nframe and the local IMU frame, for example, at the cg\nnode, is given by H\ncg\nimucg\nwhere the subscript imucg rep-\nresents the inertial instrument frame. H\ncg\nimucg\n(referred to as\nthe design matrix) depends on the SRIMU configuration\nand can be dynamically reconfigured [8, 9]. The SRIMU\nmeasurement vector at the cg node, mimucg , can be rewritten\nas follows\nmimucg \u00bc H imu\ncg\ncg xcg (7)IET Radar Sonar Navig., Vol. 2, No. 1, February 2008\nAuthorized licensed use limited to: IEEE Xplore. Downloaded on January 19, 2009 By applying rotation transformations, the measurement\nvectors of SRIMUs located at nodes i and j, mimui and\nmimuj , can be represented in terms of the local body frame\nat the cg node as follows\nmimui \u00bc H imu\ni\ni xi \u00bc H imu\ni\ni T\ni\ncgxcg (8)\nmimuj \u00bc H imu\nj\nj xj \u00bc H imu\nj\nj T\nj\ncgxcg (9)\nwhere H imu\ni\ni and H\nimuj\nj are the SRIMU design matrices at\nnodes i and j, respectively.\nFrom (8) and (9), the cg node assimilates the inertial\nmeasurement information from the slave nodes i and j.\nTherefore the total inertial measurement at the cg node is\nrepresented as\nmcg ;\nmimucg\nmimui\nmimuj\n2\n4\n3\n5 \u00bc\nH imu\ncg\ncg\nH imu\ni\ni T\ni\ncg\nH\nimuj\nj T\nj\ncg\n2\n664\n3\n775xcg \u00bc Hcgxcg (10)\nSimilarly, the inertial measurement vectors at nodes i and j\nare as follows\nmi ;\nmimucg\nmimui\nmimuj\n2\n64\n3\n75 \u00bc\nH imu\ncg\ncg T\ncg\ni\nH\nimui\ni\nH imu\nj\nj T\nj\ni\n2\n664\n3\n775xi \u00bc H ixi (11)\nmj ;\nmimucg\nmimui\nmimuj\n2\n64\n3\n75 \u00bc\nH imu\ncg\ncg T\ncg\nj\nH\nimui\ni T\ni\nj\nH imu\nj\nj\n2\n664\n3\n775xj \u00bc H jxj (12)\nEquations (10)\u2013(12) indicate that each node shares the\nsame redundant inertial measurements even though all the\nIMUs are traditional orthogonal systems. Various weighted\nleast-squares estimators can be applied to the redundant\nmeasurement equations to estimate the local inertial\nstates. This data assimilation and weighted least-squares\nestimation is referred to as inertial measurement (data)\nfusion in this paper. Furthermore, many failure detection\nand isolation algorithms, such as the parity space-based\nmethods and generalised likelihood ratio test algorithms\ndescribed in [8, 10, 11], can be applied to these equations\nto detect and isolate inertial sensor failures in the inertial\nnetwork system. As a result, the use of inertial measurement\nfusion procedures increases the accuracy of the local inertial\nstate estimates at each IMU node and improves the perform-\nance of the navigation system.\nFrom (6), one IMU node can also assimilate attitude\ninformation from other IMU nodes using the following\ntransformations. At node j, the local attitude matrix is\nT iLi (13)\nThe assimilated attitude matrices are\nT iLj \u00bc T ijT jLj (14)\nT iLcg \u00bc T icgTcgLcg (15)\nAs a result, the redundant attitude information at node i con-\nsists of (13)\u2013(15). At node j, the local attitude matrix is\nT\nj\nLj\n(16)53\nat 11:31 from IEEE Xplore.  Restrictions apply.\nThe assimilated attitude matrices are\nT\nj\nLi\n\u00bc T jiT iLi (17)\nT\nj\nLcg \u00bc T jcgTcgLcg (18)\nSimilarly, the redundant attitude information at node j con-\nsists of (16)\u2013(18).\nAt node cg, the local attitude matrix is\nT\ncg\nLcg (19)\nThe assimilated attitude matrices are\nT\ncg\nLi\n\u00bc Tcgi T iLi (20)\nT\ncg\nLj\n\u00bc Tcgj T jLj (21)\nwhere the redundant attitude information at node cg consists\nof (19)\u2013(21).\nThe redundant attitude matrix information at each node\ncan be fused by a weighted least-squares estimator to\nincrease the accuracy of the local attitude estimates and to\nimprove the fault tolerance of the navigation states.\n3.3 Dynamic inertial sensing model\nAlthough the assumption of a rigid body aircraft applies to a\nwide range of applications in aircraft navigation and control\nsystems, this assumption may be invalid in many military\napplications where precise local inertial states are needed\nincluding targeting systems, pointing systems and other\nweapon systems. During high-speed flight and high-\ndynamic manoeuvres, the airframe should be considered\nas a flexible structure. The rotational matrices given in the\nprevious section are no longer stationary but are time-\nvarying dynamic rotation matrices. If the flexible structure\nof an aircraft is ignored, these matrices introduce errors in\nthe rotation transformation, leading to large errors in the\nestimates of the local states. Accordingly, it is necessary\nto develop the dynamic relationships between the network\nnodes and to estimate these dynamic transformation\nmatrices in flight. Carison et al. [12] suggest a differential\ninertial filter (DIF) to estimate the angular flexing of the\nslave IMU frames with respect to a reference IMU frame,\nusually the cg IMU node frame. The DIF method processes\na differential or delta inertial state vector, which is the\ndifference between the cg and slave IMU measurements.\nHowever, this method depends on two vital conditions.\nFirst, compensation is needed for the lever-arm accelera-\ntions and flexing angular rates before initiating the DIF.\nFor significant flexing motion of an airframe, this compen-\nsation is difficult to compute, particularly during\nmanoeuvres because the flexing of the slave IMU node\nframes (with respect to the cg frame) changes with flight\nconditions. Secondly, the DIF dynamic model is particu-\nlarly sensitive to aircraft manoeuvres and the resultant\nflexing motion. Two methods are presented in this paper\nto determine these dynamic rotational transformations,\nwhich avoid compensation for lever-arm accelerations and\nflexing angular rates between the cg and the slave IMU\nnodes. The first approach is an iterative estimation method\nand the second method establishes analytical models of\nthe rotation matrices. In both methods, it is assumed that\nthe initial transformation matrices are known. In practice,\nthese matrices can be determined from the stationary trans-\nformation matrices described in the previous section, when\nthe aircraft is on the ground or in level non-accelerating\nflight.54\nAuthorized licensed use limited to: IEEE Xplore. Downloaded on January 19, 2009 3.3.1 Iterative estimating method: The iterative esti-\nmation method is based on (6) where the local attitude\nmatrices are computed at all the IMU nodes by invoking\nthe inertial attitude determination algorithm. The dynamic\ntransformation matrices are then estimated from the com-\nputed local attitude matrices.\nBecause the dynamic change of the rotation matrix rela-\ntive to its initial matrix is generally within a small dynamic\nrange, the current estimate of the rotation transformation\nT i\nj\nk can be approximated by the combination of the previous\nestimate and a small angle displacement vector ci\nj\nk . The\nestimated rotation matrix at the current time can be rewrit-\nten as\nT^ i\nj\nk \u0002 T^ i\nj\nk\u00011(I \u00fe c jik \u0003) \u00bc T^\nj\nLj T^ i\nLi\nwhere the subscript k represents the iteration step.\nTherefore the iterative computation equation can be\ngiven as follows\n(I \u00fe cijk \u0003) \u00bc [T^ i\nj\nk\u00011]\n\u00011\nT^\nj\nL j T^ i\nLi\n(22)\nThe method is outlined in Fig. 2. When the norm of ci\nj\nk is\nless than a specified threshold value, the iterative process\nterminates and the current transformation matrix can be\ndetermined.\nAlthough an iterative technique can be a time-consuming\nprocedure, because the inertial attitude determination algor-\nithms may be repeated for several times at all the IMU\nFig. 2 Iterative computation of rotation matricesIET Radar Sonar Navig., Vol. 2, No. 1, February 2008\nat 11:31 from IEEE Xplore.  Restrictions apply.\nnodes at each iteration, the advantage of this method is that\nthe errors of the estimates of the rotation matrices\nare independent of the dynamic models of the rotation\nmatrices. Uncertainties in the local attitude matrix estimates\ncan contribute to errors in the estimation of the rotation\nmatrix. However, the inertial attitude determination algor-\nithms provide an effective filter, which can reduce the\neffect of IMU measurement noise on the rotation matrix\nestimates.\n3.3.2 Analytical method: This method is based on the\ndevelopment of analytical dynamic models of the trans-\nformation matrices. If the cg body frame is used as a refer-\nence frame to represent the relative rotation motion of the\nother frames and the measured angular velocities, (1)\u2013(3)\ncan be rewritten in terms of angular rates as follows\nVcgI=i \u00bc VcgI=cg \u00feVcgcg=i (23)\nVcgI=j \u00bc VcgI=cg \u00feVcgcg=j (24)\nVcgI=i \u00bc VcgI=j \u00feVcgj=i (25)\nwhere V is a skew-symmetric matrix of the corresponding\nangular rate vector v. The superscript cg denotes that the\nangular rate vectors are expressed in terms of the cg body\ncoordinates.\nIn terms of attitude matrix differential equations, (23) can\nbe written as\nVcgI=i \u00bc VcgI=cg \u0001 T^\ni\ncgT\ncg\ni (26)\nTherefore\nT^\ni\ncg \u00bc (VcgI=cg \u0001VcgI=i)T icg (27)\nVcgI=i \u00bc Tcgi ViI=iT icg (28)\nSimilarly, the differential equation of the rotation matrix\nT jcg is given by\nT^\nj\ncg \u00bc (VcgI=cg \u0001VcgI=j)T jcg (29)\nVcgI=j \u00bc Tcgj VjI=jT jcg (30)\nwhere VcgI=cg, V\ni\nI=i and V\nj\nI=j consist of the local absolute\nangular rate vectors, estimated from the local IMUmeasure-\nments at nodes cg, i and j.\nThe rotational transformation matrix between j and i is\nthen computed from the following equation\nT ij \u00bc T icgTcgj (31)\nClearly, the dynamic models of the rotation matrices are\nnon-linear matrix differential equations, where the initial\nmatrices can be derived from the stationary transformations\nand these differential equations are solved at each measure-\nment time.\nIn comparison with the iterative method, the analytical\nmethod avoids the iterative computation of the inertial atti-\ntude determination algorithms at all the IMU nodes.\nHowever, the IMU measurement noise may affect the accu-\nracy of the solutions of the rotation matrices because the\nIMU outputs are directly used in the rotation matrix differ-\nential equations. Consequently, pre-processing filters may\nbe required to reduce the measurement noise. If the node\nIMUs have a good quality (say better than 0.058\/h), the\niterative method is especially effective in determination ofIET Radar Sonar Navig., Vol. 2, No. 1, February 2008\nAuthorized licensed use limited to: IEEE Xplore. Downloaded on January 19, 2009 athe rotation matrices between nodes. The analytical\nmethod is more applicable to dynamic IMU alignment in\nan inertial network system.\n4 Distributed data fusion algorithms\n4.1 Kalman filter algorithm\nThe distributed inertial network fusion algorithms devel-\noped in this paper are based on Kalman filtering techniques.\nConsider the discrete-time stochastic process where the\nsystem and measurement models are given by\nx(tk) \u00bc F (tk , tk\u00011)x(tk\u00011)\u00fe G(tk\u00011)w(tk\u00011) (32)\nz(tk) \u00bc D(tk)x(tk)\u00fe y(tk) (33)\nwhere F is an n\u0003 n state transition matrix, D an m\u0003 n\nmeasurement matrix, x(tk) an n-system state, w(tk) a\nq-additive process noise, which takes into account the per-\nturbations to the system, G(tk) an n\u0003 q matrix, z(tk) an\nm-measurement vector and y(t) is an m-additive measure-\nment noise vector. It is assumed that the noise vectors\nw(tk) and y(t) are independent, zero-mean, white\nGaussian sequences of covariance Q(tk) and R(tk), respect-\nively. The initial system state x(t0) is a Gaussian distributed\nrandom variable and is independent of the noise, with an\ninitial value x0 and covariance P0.\nThe Kalman filter algorithm is as follows [13].\nStep 1: Initialization\nP(t0) \u00bc P0; x^(t0) \u00bc x0\nStep 2: Time update (effect of dynamics, predictor)\nx^(t\u0001k ) \u00bc F (tk , tk\u00011)x\u02c6 (t\u00fek\u00011)\nP(t\u0001k ) \u00bc F (tk , tk\u00011)P(t\u00fek\u00011)FT(tk , tk\u00011)\n\u00fe G(tk\u00011)Q(tk\u00011)GT(tk\u00011)\nr(tk) \u00bc z(tk)\u0001 D(tk)x^(t\u0001k )\nS(tk) \u00bc D(tk)P(t\u0001k )DT(tk)\u00fe R(tk)\nStep 3: Measurement update (effect of measurement,\nestimator)\nK(tk) \u00bc P(t\u0001k )DT(tk)S\u00011(tk)\nx^(t\u00fek ) \u00bc x\u02c6(t\u0001k )\u00fe K(tk)r(tk)\nP(t\u00fek ) \u00bc P(t\u0001k )\u0001 K(tk)D(tk)P(t\u0001k )\nFrom the predictor and the estimator equations given\nabove, the Kalman filter outputs valuable statistical infor-\nmation that can be used to monitor both the convergence\nand the consistency of the filter estimation procedure. The\noutputs of the predictor include the filter innovation r(tk)\nand its covariance S(tk), whereas the estimator outputs the\nfilter residual r(t\u00fek ) and the residual covariance S(t\n\u00fe\nk ),\ndefined as follows\nr(t\u00fek ) \u00bc z(tk)\u0001 D(tk)x(t\u00fek )\nS(t\u00fek ) \u00bc H(tk)P(t\u00fek )DT(tk)\u00fe R(tk)\nIt has been shown that the filter innovation and residual\nprocesses are a zero-mean white Gaussian random sequence55\nt 11:31 from IEEE Xplore.  Restrictions apply.\nin normal operation if the Kalman filter model matches the\ntrue system model [13, 14]. This feature can be exploited in\nthe analysis of the Kalman filter integrity to check the con-\nsistency of measurement data for sensor failure detection\nand to monitor the filter divergence.\n4.2 Distributed inertial data fusion algorithm\nAssume that all the local IMUs are independent of each\nother and their measurements have a Gaussian probability\ndistribution. Then, the errors of the local inertial state esti-\nmates are also a Gaussian distributed random vector and the\nprobability density function of the local inertial state is\ngiven by\np(x) \u00bc 1ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\n(2p)3 detPx\nq exp \u0001 1\n2\n(x\u0001 x^)TP\u00011x (x\u0001 x^)\n\u0002 \u0003\n(34)\nwhere x is a three-dimensional local inertial state vector, for\nexample, an acceleration or angular rate vector, and Px is\nthe covariance matrix of the error of the local inertial\nstate estimate. From least-squares estimation\nPx \u00bc (HTH)\u00011HTRH(HTH)\u00011 \u00bc H\u0004R[H\u0004]T (35)\nwhere H\u0004 \u00bc (HTH)\u00011HT is the pseudo-inverse matrix of\nthe IMU design matrix H (the superscripts and subscripts\nof the design matrix H have been omitted to simplify the\nexpression).\nThe objective of inertial measurement fusion is to gener-\nate optimal estimates of all the local inertial states. If the\noptimisation criterion is defined as the maximum of the con-\nditional probability\nP(xjx^i, x^j, x^cg)\nthen, because all the IMU measurements are independent,\nthe conditional probability density function of the true\nlocal inertial state at each IMU node can be represented\nas follows\np(xjx^i, x^j, x^cg) \u00bc p(x) \u00bc p(xjx^i)p(xjx^j)p(xjx^cg) (36)\nApplying the maximum likelihood estimator to (36) and\nincorporating (10)\u2013(12), the inertial data fusion algorithms\nat each IMU node can be derived as follows\nxJ \u00bc\nX\nl\u00bci,j,cg\nT l\nJP\u00011x,l T\nl\nJ\n\" #\u00011 X\nl\u00bci,j,cg\nT l\nJP\u00011x,l H\n\u0004\nl ml,\nJ \u00bc i, j, cg (37)\nor\nxJ \u00bc\nX\nl\u00bci,j,cg\nT l\nJP\u00011x,l T\nl\nJ\n\" #\u00011 X\nl\u00bci,j,cg\nT l\nJHTl R\n\u00011\nl ml (38)\nP\u00011x, J \u00bc\nX\nl\u00bci,j,cg\nT l\nJP\u00011x,l T\nl\nJ , J \u00bc i, j, cg (39)\nEquations (37)\u2013(39) comprise the inertial measurement\nfusion algorithm at each IMU node. Although inertial\nmeasurement fusion is mainly used to provide reliable and\naccurate local inertial state estimates, one additional\nbenefit of this approach is that the outputs can be used to56\nAuthorized licensed use limited to: IEEE Xplore. Downloaded on January 19, 2009 detect and isolate inertial sensor failures if deviations of\nthe estimator residuals are used as a test statistic. In\neffect, the inertial measurement fusion is a pre-processing\nprocedure for the second-stage fusion.\n4.3 State fusion filtering algorithm\nFrom (32) and (33), the local dynamic models embedded in\neach node of the inertial network system can be described as\nfollows\nxJ (tk) \u00bc FJ (tk , tk\u00011)xJ (tk\u00011)\u00fe GJ (tk\u00011)wJ (tk\u00011) (40)\nzJ (tk) \u00bc DJ (tk)xJ (tk)\u00fe yJ (tk) (41)\nwhere J \u00bc i, j, cg denotes the IMU nodes.\nThe normalised measurement models of navigation\naiding systems, the normalised SRIMU error dynamic\nmodels and the normalised error dynamic models of inertial\nsystems are given in [15\u201317]. These models can be applied\nto all the IMU nodes if the corresponding coordinate frames\nare specified. As different frames are used in the individual\nnodes, each local dynamic model describes its local states,\nwhich will be different from the local states represented\nby the other dynamic models. The local state vector xJ\ncan be partitioned into the local system state x1J and the\nlocal sensor error state x2J , that is\nxJ \u00bc [ xT1J xT2J ]T (42)\nThe local system states at the nodes are referred to as similar\nstates and the transformations between these similar states\nare given by the dynamic transformation matrices.\nThe measurement vector zJ can be decomposed into three\nsub-vectors as follows\nzJ \u00bc [ zTJL zTJS zTJA ]T (43)\nwhere zJL is the measurement vector provided by the local\nsensor systems, zJS is the measurement vector provided by\nthe navigation-aiding systems and zJA is the combination\nof the inertial measurements assimilated from other IMU\nnodes. Because these three measurement vectors are inde-\npendent of each other, the following decompositions can\nbe obtained\nDJ \u00bc [DTJL DTJS DTJA ]T (44)\nyJ \u00bc [yTJL yTJS yTJA ]T (45)\nRJ \u00bc blockdiag[RJL RJS RJA ] (46)\nThe architecture of the state fusion filter algorithm at\neach node is illustrated in Fig. 3 where the local Kalman\nFig. 3 State fusion algorithm architectureIET Radar Sonar Navig., Vol. 2, No. 1, February 2008\nat 11:31 from IEEE Xplore.  Restrictions apply.\nfilter uses the assimilated sensor measurements to estimate\nthe local state. The local state fusion filter combines the\nlocal estimate and the assimilated estimates from the other\nnodes to update the local estimate.\nAll the local Kalman filters process the three forms of the\nmeasurements to obtain the local estimates. Applying the\nKalman filtering algorithm to (40) and (41), and considering\n(43), (44) and (46) yields\nx^J (t\n\u0001\nk ) \u00bc FJ (tk , tk\u00011)\u0001xJ (tk\u00011) (47)\nPJ (t\n\u0001\nk ) \u00bc FJ (tk , tk\u00011) \u0001PJ (t\u00fek\u00011)FTJ (tk , tk\u00011)\n\u00fe GJ (tk\u00011)QJ (tk\u00011)GTJ (tk\u00011) (48)\nP\u00011J (t\n\u00fe\nk ) \u00bc P\u00011J (t\u0001k )\u00fe DTJ (tk)R\u00011J (tk)DJ (tk)\n\u00bc P\u00011J (t\u0001k )\u00fe\nX\nk\u00bcJL,JS,JA\nDTl (tk)R\n\u00011\nl (tk)Dl(tk)\n(49)\nP\u00011J (t\n\u00fe\nk )x^J (t\n\u00fe\nk ) \u00bc P\u00011J (t\u0001k )x^J (t\u0001k )\u00fe DTJ (tk)R\u00011J (tk)zJ (tk)\n\u00bc P\u00011J (t\u0001k )x^J (t\u0001k )\u00fe\nX\nl\u00bcJL,JS,JA\nD\nT\nl (tk)R\n\u00011\nl (tk)zl(tk) (50)\nwhere x^ is the state estimated by the local Kalman filter and\n\u0001x is the state updated by the local state fusion filter.\nTo update the locally estimated similar states at each\nnode using the similar state estimates assimilated from the\nother nodes, a state fusion filter is needed in each node.\nDefining a quadratic cost function at node i as follows\nFi \u00bc\nX\nJ\u00bci,j,cg\n(T iJxJ \u0001 xi)TT iJP\u00011J TJi (T iJxJ \u0001 xi) (51)\nwhere xi is the true local similar state at i and Fi is a cost\nfunction used to measure the displacement of the local\nstate estimate from its true value.\nThe state fusion filter is designed to minimise Fi and is\nreferred to as the minimum weighted mean square errorIET Radar Sonar Navig., Vol. 2, No. 1, February 2008\nAuthorized licensed use limited to: IEEE Xplore. Downloaded on January 19, 2009 acriterion. Differentiating Fi and setting the result to zero\nyields\n\u0001xi \u00bc \u0001P\u00011i (P\u00011i x^i \u00fe T ijP\u00011j x^j \u00fe T icgP\u00011cg x^cg) (52)\nP\u00af\n\u00011\ni \u00bc (P\u00011i \u00fe T ijP\u00011j T ji \u00fe T icgP\u00011cg Tcgi )\u00011 (53)\nSimilarly, the update equations of the similar states at the\nnodes j and cg are given as follows\n\u0001xj \u00bc \u0001P\u00011j (P\u00011j x^j \u00fe T jiP\u00011i x^i \u00fe T jcgP\u00011cg x^cg) (54)\n\u0001P\n\u00011\nj \u00bc (P\u00011j \u00fe T jiP\u00011i T ij \u00fe T jcgP\u00011cg Tcgj )\u00011 (55)\n\u0001xcg \u00bc \u0001P\n\u00011\ncg (P\n\u00011\ncg x^cg \u00fe Tcgj P\u00011j x^j \u00fe Tcgi P\u00011i x^i) (56)\n\u0001P\n\u00011\ncg \u00bc (P\u00011cg \u00fe Tcgj P\u00011j T jcg \u00fe Tcgi P\u00011i T icg)\u00011 (57)\nEquations (47)\u2013(50) and (52)\u2013(57) constitute the distrib-\nuted state fusion filter algorithms for the inertial network\nsystem. The state fusion exploits the redundancies of the\nsimilar system states and consequently, this fusion method\ncan greatly improve the fault tolerance of an inertial\nnetwork system.\nFrom (47) and (48), the outputs of each state fusion filter\nare fed back to the corresponding local Kalman filter. This\nfeedback operation allows the local Kalman filter to accu-\nrately estimate and calibrate its sensor errors. This pro-\ncedure is known as the dynamic transfer alignment of the\ninertial network system. Both the inertial data fusion and\nstate fusion procedures improve the estimation accuracy\nof the inertial states and similar states. The local Kalman\nfilters allow all slave node IMUs to be aligned in-flight to\nthe master inertial navigation system.\nCompared with the federated filter and other distributed\nfilter architectures [18, 19], the distributed data fusion algor-\nithms presented in this paper afford the following\nadvantages\n1. The filter architecture is relatively simple.\n2. Each local Kalman filter estimates its own inertial sensor\nerrors rather than pseudo-sensor errors. Therefore theTable 1: Simulation parameters of inertial sensors\nSensor\nParameters 1 2 3 4 5\ngyro drift time const, s 110 115 120 100 100\ngyro drift err, deg\/h 0.1j0.34 0.1j0.3 0.1j0.38 0.1j0.3 0.1j0.45\ngyro bias err, deg\/h 0.05j10.1 0.05j10.2 0.05j10.1 0.05j10.1 0.05j10.2\ngyro SF err time const, s 100j250 100j260 120j270 100j260 104j254\ngyro SF error, ppm 50j100 50j100 50j100 50j100 50j100\ngyro Az misalign err, arcsec 23 23 23 21 23\ngyro El misalign err, arcsec 24 20 21 22 21\ngyro noise, deg\/sqrt(h) 0.01j0.1 0.01j0.1 0.02j0.08 0.02j0.1 0.01j0.1\naccel drift time const, s 60 65 65 60.5 66\naccel drift err, mg 50 50 54 50 55\naccel bias err, mg 100j310 110j300 100j300 110j300 100j312\naccel SF err time const, s 250 260 250 260 245\naccel SF err, ppm 100j300 100j300 100j300 100j310 100j300\naccel Az misalign err, arcsec 23 23 21 21 23\naccel El misalign err, arcsec 22 21 20 22 21\naccel noise, mg\/sqrt(hz) 30j50 30j50 30j55 30j52 30j5057\nt 11:31 from IEEE Xplore.  Restrictions apply.\nestimates of the local filters can be used to correct the local\nIMU errors and the similar states.\n3. By assimilating the similar local states, each local\nstate fusion filter provides an inherent fault tolerance\ncapability.\n4. The inner feedback from the state fusion filter to the\nlocal Kalman filter at each node allows all IMUs in an iner-\ntial network system to be automatically aligned to the cg\nnode IMU frame without additional alignment algorithms\nor procedures. As a result, many traditional inertial align-\nment procedures, such as transfer alignment, are eliminated.\n5 Simulation results\nA multi-sensor simulation environment, consisting of a\nGNSS simulator, an SRIMU simulator and a true trajectory\ngenerator, was developed in Matlab to test and evaluate the\nfusion algorithms described in this paper. The GNSS simu-\nlator provides raw GNSS measurements, including pseu-\ndoranges and pseudo-range rates at the rate of 1 Hz. The\nSRIMU simulator can simulate several SRIMU configur-\nations, including cube, cone and dodecahedron configur-\nations. The SRIMU simulator, working with a true\ntrajectory generator, generates realistic SRIMU measure-\nments at an update rate of 50 Hz. The true trajectory is\nused as a reference to examine the accuracy of the esti-\nmated aircraft motion states. The simulated gyro sensors\nhave gyro drift rates of 108\/h (a typical tactical-grade\nFig. 4 True position trajectory\nFig. 5 Aircraft horizontal manoeuvres58\nAuthorized licensed use limited to: IEEE Xplore. Downloaded on January 19, 2009 IMU) at the slave nodes and 0.058\/h (a typical navigation-\ngrade IMU) at the cg node. All simulated accelerometers at\nthe slave nodes have a typical bias of 300 mg, whereas the\naccelerometers at the cg node have a bias of 100 mg. The\nSRIMU simulator also models other error sources, includ-\ning time-dependent sensor drifts (random drifts), zero\noffset (biases), misalignments, scale factor errors, as well\nas sensor noise. The parameters used in the simulation\nare summarised in Table 1. The simulation results show\nthat the change of accelerometer bias has no significant\neffects on the performance of the master and slave node\ndata fusion filters.\nBecause the main purpose of this simulation is to\nevaluate the estimation accuracy of the distributed data\nfusion algorithms, only two nodes (one master and one\nslave) were used in the simulation. Additional nodes do\nnot change the architecture of the distributed data\nfusion filter but significantly increase the complexity of\nthe computation. The dynamic relationship between the\nmaster and the slave nodes was simulated by a sinusoidal\nfunction.\nIn the dynamic models of the two-node inertial network\nsystem, the similar system states at both the cg node and\nthe slave nodes contain the nine basic navigation state\nerrors (three linear position errors, three velocity errors\nand three attitude angle errors), which are represented in\nthe different local frames. The local sensor error state\nvector at the cg node contains accelerometer-related error\nFig. 6 Aircraft vertical pitch manoeuvres\na Vertical velocity manoeuvres\nb Pitch manoeuvresIET Radar Sonar Navig., Vol. 2, No. 1, February 2008\nat 11:31 from IEEE Xplore.  Restrictions apply.\nterms (bias, time-related drift error, misalignments and\nscale factor error), gyro-related error terms (random con-\nstant bias, time-related drift error, misalignments and\nscale factor error), GNSS receiver clock errors (phase and\nfrequency errors), magnetic heading error and air data\nsystem error (air pressure altitude and air speed errors), as\nspecified in [16] and redefined in the following equations.\nFig. 7 Similar state errors at the master node with a gyro drift\nrate of 0.058\/h\na Attitude errors at cg node\nb Horizontal velocity errors at cg node\nc Horizontal position errors at cg nodeIET Radar Sonar Navig., Vol. 2, No. 1, February 2008\nAuthorized licensed use limited to: IEEE Xplore. Downloaded on January 19, 2009 aAll navigation aiding sensors are related to the cg node.\nThe error state and measurement vectors at the cg node\nare as follows\nx \u00bc xbasic state errors\nxsensor errors\n\u0002 \u0003\nz \u00bc\nGPS pseudorange vector\nGPS pseudorange rate vector\nmagnetic heading output\nair pressure altitude and air speed\nSRIMU residual vector\n2\n6666664\n3\n7777775\nFig. 8 Error standard deviations at the master node with a gyro\ndrift rate of 0.058\/h\na Attitude error standard deviations at cg node\nb Velocity error standard deviations at cg node\nc Position error standard deviations at cg node59\nt 11:31 from IEEE Xplore.  Restrictions apply.\nxbasic state errors \u00bc\nx1\nx2\nx3\nx4\nx5\nx6\nx7\nx8\nx9\n2\n66666666666666664\n3\n77777777777777775\n\u00bc\ndwR\ndlR\ndh\ndv1x\ndv1y\ndv1z\n@fx\n@fy\n@fz\n2\n66666666666666664\n3\n77777777777777775\nxsensor errors \u00bc\nRx Clk error states\nSRIMU accel error states\nSRIMU gyro error states\nMagnetic heading error state\nBarometer bias state\nTrue air speed bias state\n2\n6666664\n3\n7777775\n\u00bc\nxclk\u0001pha\nxclk\u0001rate\nxaccel\u00011\n..\n.\nxaccel\u0001n\nxgyro\u00011\n..\n.\nxgyro\u0001n\nxMag\nxBar\nxADS\n2\n66666666666666666664\n3\n77777777777777777775\nThe local sensor error state vector at the slave node con-\ntains only local inertial sensor errors; the measurement\nvector at the slave node is defined as follows\nz \u00bc\nposition residual vector\nvelocity residaul vector\nattitude residal vector\nSRIMU residual vector\n2\n664\n3\n775\nThe simulated aircraft can perform arbitrary manoeuvres\nup to a maximum acceleration of 3.0 g. A typical flight\ntrajectory used in this study is shown in Fig. 4 in which\nthe aircraft flies from the start point to the north-east, then\ncompletes three sets of 908 right turns, returning to the\nstart point. Figs. 5 and 6 show the trajectories of the hori-\nzontal and vertical manoeuvres, respectively.\nThe simulation study focused on the assessment of the\nperformance of the distributed data fusion algorithms in\nterms of estimation accuracy and convergence. Time\ndelay problems in an inertial network system were not con-\nsidered although they may cause problems in inertial\nnetwork alignment procedures. In the following case\nstudy, both the master and slave nodes use SRIMUs. The\nsimulated IMU at the master node is a 5-sensor cone\nSRIMU with a gyro drift rate of 0.058\/h. The simulated\nIMU at the slave node is also a 5-sensor cone SRIMU but\nwith a gyro drift rate of 108\/h.\nThe simulation results of the similar system states derived\nby the master node fusion filter are shown in Figs. 7 and 8\nwhere the gyros have a drift rate of 0.058\/h and GPS pro-\nvides continuous pseudorange and pseudo-range rate obser-\nvables at the rate of 1 Hz. Fig. 7 shows the absolute errors\nof the similar system states in comparison with the true tra-\njectory parameters and Fig. 8 shows the error standard60\nAuthorized licensed use limited to: IEEE Xplore. Downloaded on January 19, 2009 deviations of the similar system states estimated by the\nmaster node fusion filter. After the initial alignment\n(5 min), the absolute attitude errors (the difference between\nthe true and estimated values) mostly remained within 0.18\nduring a simulated 2 h flight in Fig. 7a. The lateral velocity\nerrors were ,0.5 m\/s with a probability of 98% in Fig. 7b\nand the accuracy of the lateral velocity estimates is better\nthan 0.2 m\/s (s) in Fig. 8b. As expected, the vertical velocity\nhas a larger error compared with the lateral velocity error\nowing to the vertical dilution of precision of GPS. The cg\nnode data fusion filter quickly converges to the steady state\nand achieves steady-state attitude estimates ,0.18 (1s) in\nFig. 8a. The accuracy of the yaw estimate is slightly less\nthan other attitude angles because of a larger initial yaw\nangle. The positioning accuracy of the master node fusion\nfilter depends on the GPS positioning accuracy. The \u2018jump\u2019\nchanges of the standard deviation of the position and velocity\nerror states in Figs. 8b and c were caused by the changes of\nthe GPS satellite geometries.\nFor the slave node with a gyro drift rate of 108\/h, Fig. 9\nshows the absolute errors of the local similar states and\nFig. 10 shows the corresponding standard deviations of\nthe local similar states. After the initial alignment\n(10 min), the accuracy of the attitude estimates at the\nslave node shows no significant degradation although the\nconvergent rate of the slave node data fusion filter is\nslower than the master node fusion filter in Fig. 9a. The\naccuracy of the attitude estimate derived by the slave\nFig. 9 Similar state errors at the slave node with a gyro drift rate\nof 108\/h\na Attitude errors at slave node\nb Horizontal velocity errors at slave nodeIET Radar Sonar Navig., Vol. 2, No. 1, February 2008\nat 11:31 from IEEE Xplore.  Restrictions apply.\nfusion filter is better than 0.28 (s) in Fig. 10a and the accu-\nracy of the lateral velocity derived by the slave fusion filter\nis better than 0.28 m\/s (s) in Fig. 10b. From Figs. 9a and\n10b, the estimates of the local similar states change slightly\nduring highly dynamic manoeuvres.\nThe measured rotation rate of the local pitch axis at the\nslave node and the corresponding estimate given by the\nslave fusion filter are shown in Fig. 11. After the initial\nFig. 10 Error standard deviations at the slave node with a gyro\ndrift rate of 108\/h\na Attitude errors standard deviations at slave node\nb Velocity errors standard deviations at slave node\nFig. 11 Rotation rates of local pitch axis at slave node with gyro\ndrift rate of 108\/hIET Radar Sonar Navig., Vol. 2, No. 1, February 2008\nAuthorized licensed use limited to: IEEE Xplore. Downloaded on January 19, 2009 aalignment of the slave IMU (10 min), the accuracy of the\nestimated pitch rate at the slave node is significantly\nbetter than the direct measurements at the slave IMU.\nThese simulations show that the distributed inertial\nnetwork algorithms presented in this paper can be used to\nachieve accurate navigation states where the local inertial\nstate vector is derived for low-cost IMUs. It can be seen\nthat the local Kalman filter and the state fusion filter\ncombine to reduce significantly the high-frequency pitch\nrate noise.\n6 Conclusions\nThe paper reviews recent developments in aircraft inertial\nnetwork systems, with particular emphasis on skew redun-\ndant IMUs. The overall system architecture and navigation\nreference frames are developed for distributed inertial\nnetwork nodes. Two methods are presented to compute\nthe rotation matrices for the dynamic inertial sensing\nmodel for both rigid body aircraft and flexible airframe\nconfigurations.\nDistributed data fusion algorithms have been developed\nfor inertial network systems, including the development of\ndistributed state fusion filters and inertial measurement\nfusion algorithms. These algorithms are applicable to mul-\ntiple IMU network systems in aircraft with a flexible struc-\nture. Extensive simulation studies were undertaken\ncombining an SRIMU simulator with a GNSS simulator.\nSpecific manoeuvres were flown so that the sensor derived\nmeasurements and aircraft motion states could be compared\ndirectly with the actual aircraft trajectory.\nSimulation studies have demonstrated the feasibility of\ndistributed data fusion algorithms for local inertial state\nestimate and dynamic inertial network alignment. A wide\nrange of low-cost inertial sensors were evaluated, covering\nthe performance of the majority of currently available iner-\ntial sensors. The simulation results presented in the paper\nshow that low-quality IMUs (gyro drift rate up to 308\/h)\ncan be precisely aligned to a high-quality IMU (gyro drift\nrate of 0.058\/h) with an alignment accuracy better than\n0.28\/h by using the distributed data fusion filters and that\nthe local fusion filter can accurately estimate the local iner-\ntial states. The algorithms presented in this paper provide\nredundant inertial information in a form that is applicable\nto current failure detection and isolation methods used to\ndetect sensor failures.\n7 References\n1 Kelley, R.T., Carlson, N.A., and Berning, S.: \u2018Integrated inertial\nnetwork\u2019. Proc. IEEE PLANS, 1994, pp. 439\u2013446\n2 Berning, S., Howe, P., and Jenkins, T.: \u2018Theater-wide reference\ninformation management\u2019. Proc. IEEE NAECON, 1996, pp. 122\u2013128\n3 Kaiser, J., Beck, G., and Berning, S.: \u2018Vital advanced inertial\nnetwork\u2019. Proc. IEEE PLANS, 1998, pp. 61\u201368\n4 Harris, R.L.: \u2018Modular avionics: its impacts on communication,\nnavigation, and identification (CNI)\u2019. Proc. IEEE NAECON, 1988,\npp. 1164\u20131169\n5 Swanson, D.L.: \u2018Evolving avionics systems from federated to\ndistributed architectures\u2019. Proc. IEEE\/AIAA\/NASA 17th Digital\nAvionics Systems Conf., 1998, pp. D26\/1\u2013D26\/8\n6 Schmidt, G.T.: \u2018GPS\/INS technology trends for military systems\u2019.\nDraper Technology Digest, 1998, pp. 2\u201313 available at: http:\/\/\nwww.draper.com\/pubns\/digest98\/digest98.htm\n7 Barbour, N. Schmidt, G.T.: \u2018Inertial Sensor Technology Trends\u2019,\nIEEE Sensors J., 1, (4)Dec 2001, pp. 332\u2013339\n8 Gilmore, J.P., and Mckern, R.A.: \u2018A redundant strapdown inertial\nreference unit (SIRU)\u2019, J. Spacecraft Rockets, 1972, 9, (1), pp. 39\u201347\n9 Allerton, D.J., and Jia, H.: \u2018An error compensation method for skewed\nredundant inertial configurations\u2019. Proc. ION 58th Annual Meeting\/\nGIGTF 21st Guidance Test Symp., Albuquerque, USA, 2002,\npp. 142\u201314761\nt 11:31 from IEEE Xplore.  Restrictions apply.\n10 Daly, K.C., Gai, E., and Harrison, J.V.: \u2018Generalized likelihood ratio\ntest for FDI in redundant sensor configurations\u2019, J. Guid. Control,\n1979, 2, (1), pp. 9\u201317\n11 Brown, A., and Sturza, M.A.: \u2018The effect of geometry on integrity\nmonitoring performance\u2019. Proc. ION 46th Annual Meeting, 26\u201328\nJune 1990\n12 Carison, N., Kelley, R., and Berning, S.: \u2018Differential inertial filter for\ndynamic sensor alignment\u2019. Proc. ION National Technical Meeting,\n1994, pp. 341\u2013351\n13 Maybeck, P.S.: \u2018Stochastic models, estimation, and control\u2019\n(Academic Press, 1979), vol. 1\n14 Hanlon, P.D., and Maybeck, P.S.: \u2018Multiple-model adaptive\nestimation using a residual correlation kalman filter bank\u2019, IEEE\nTrans. Aerosp. Electron. Syst., 2000, 36, (2), pp. 393\u201340662\nAuthorized licensed use limited to: IEEE Xplore. Downloaded on January 19, 2009 a15 Roger, R.M.: \u2018Applied mathematics in integrated navigation systems\u2019\n(AIAA, Inc., 2000)\n16 Allerton, D.J., and Jia, H.: \u2018Redundant multi-mode filter for a navigation\nsystem\u2019, IEEE Trans. Aerosp. Electron. Syst., 2007, 43, (1), pp. 371\u2013391\n17 Jia, H.: \u2018Data fusion methodologies for multisensor aircraft\nnavigation systems\u2019, PhD thesis, Cranfield University, Bedfordshire,\nUK, 2004\n18 Carlson, N.A.: \u2018Federated filter for distributed navigation and\ntracking applications\u2019. Proc. ION 58th Annual Meeting\/GIGTF\n21st Guidance Test Symp., Albuquerque, USA, 2002,\npp. 142\u2013147\n19 Allerton, D.J., and Jia, H.: \u2018A Review of multisensor fusion\nmethodologies for aircraft navigation systems\u2019, J. Navig., 2005, 58,\n(3), pp. 405\u2013417IET Radar Sonar Navig., Vol. 2, No. 1, February 2008\nt 11:31 from IEEE Xplore.  Restrictions apply.\n"}