{"doi":"10.1109\/ICMB.2006.10","coreId":"69737","oai":"oai:eprints.lancs.ac.uk:22917","identifiers":["oai:eprints.lancs.ac.uk:22917","10.1109\/ICMB.2006.10"],"title":"Card-based Macro-payment for Mobile Phones.","authors":["Garner, Philip","Edwards, Reuben","Coulton, Paul"],"enrichments":{"references":[{"id":1025776,"title":"A Battle\u2019s Breaking Out Over Phishing Prevention\u201d, Bank Technology News,","authors":[],"date":"2004","doi":null,"raw":null,"cites":null},{"id":1025993,"title":"BusinessWeekOnline \u201cPaypal Spreads Its Wings\u201d,","authors":[],"date":"2005","doi":null,"raw":null,"cites":null},{"id":1024849,"title":"Developing RFID-Enabled Phones\u201d,","authors":[],"date":"2004","doi":null,"raw":null,"cites":null},{"id":1024292,"title":"Electronic Payments International, \u201cMobile Payments: Is there anybody out there?\u201d,","authors":[],"date":"2001","doi":null,"raw":null,"cites":null},{"id":1026284,"title":"Fraud Overview\u201d,","authors":[],"date":"2005","doi":null,"raw":null,"cites":null},{"id":1024568,"title":"Motorola turns mobile phone into wallet\u201d,","authors":[],"date":"2004","doi":null,"raw":null,"cites":null},{"id":1026872,"title":"Operators making money on Opera Mini: Two million users surf 4 million Web pages every day\u201d http:\/\/www.opera.com\/pressreleases\/en\/2006\/04\/06\/,","authors":[],"date":"2006","doi":null,"raw":null,"cites":null},{"id":1026611,"title":"Quarterly Retail E-Commerce Sales 2nd Quarter","authors":[],"date":"2005","doi":null,"raw":null,"cites":null},{"id":1025492,"title":"R.Edwards, \u201cPerson to Person Mobile Commerce\u201d, presented at Mobile Multimedia Communications Conference,","authors":[],"date":"2003","doi":null,"raw":null,"cites":null},{"id":1027175,"title":"The Face of the Web\u201d,","authors":[],"date":"2006","doi":null,"raw":null,"cites":null},{"id":1025442,"title":"The Shosteck Group, \u201cPremium SMS becomes a significant contributor to AMPU\u201d,","authors":[],"date":"2003","doi":null,"raw":null,"cites":null},{"id":1025158,"title":"The WAP Gap: Wireless Security and the Wireless Application Protocol\u201d,","authors":[],"date":"2005","doi":null,"raw":null,"cites":null},{"id":1026374,"title":"The Way We Pay\u201d","authors":[],"date":"2005","doi":null,"raw":null,"cites":null}],"documentType":{"type":null}},"contributors":[],"datePublished":"2006-06","abstract":"Most new entrants into the mobile commerce marketplace are faced with a paradox; how can we attract users without merchants, and how can we attract merchants without customers? Without a huge investment in marketing to build consumer recognition, starting a new m-commerce service is risky. In this paper we analyse how successful companies on the Web have managed to create successful payment services by utilising the brand recognition and ubiquity of the popular card networks. Attempts to marry credit cards and mobile phones are not new - encrypted phone wallet systems have been bundled with devices for a number of years. However, use of these wallet systems remains limited as the public failed to embrace shopping via WAP, frustrated by slow speeds and poor user interfaces. With mobile terminals more suited for browsing, and higher speeds from mobile data becoming the norm, we present a system to enable remote macropurchases using existing credit card technology","downloadUrl":"","fullTextIdentifier":null,"pdfHashValue":null,"publisher":"IEEE","rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:eprints.lancs.ac.uk:22917<\/identifier><datestamp>\n      2018-01-24T02:08:39Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      7375626A656374733D51:5141:51413736<\/setSpec><setSpec>\n      74797065733D626F6F6B5F73656374696F6E<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n    \n      \n        Card-based Macro-payment for Mobile Phones.<\/dc:title><dc:creator>\n        Garner, Philip<\/dc:creator><dc:creator>\n        Edwards, Reuben<\/dc:creator><dc:creator>\n        Coulton, Paul<\/dc:creator><dc:subject>\n        QA76 Computer software<\/dc:subject><dc:description>\n        Most new entrants into the mobile commerce marketplace are faced with a paradox; how can we attract users without merchants, and how can we attract merchants without customers? Without a huge investment in marketing to build consumer recognition, starting a new m-commerce service is risky. In this paper we analyse how successful companies on the Web have managed to create successful payment services by utilising the brand recognition and ubiquity of the popular card networks. Attempts to marry credit cards and mobile phones are not new - encrypted phone wallet systems have been bundled with devices for a number of years. However, use of these wallet systems remains limited as the public failed to embrace shopping via WAP, frustrated by slow speeds and poor user interfaces. With mobile terminals more suited for browsing, and higher speeds from mobile data becoming the norm, we present a system to enable remote macropurchases using existing credit card technology.<\/dc:description><dc:publisher>\n        IEEE<\/dc:publisher><dc:date>\n        2006-06<\/dc:date><dc:type>\n        Contribution in Book\/Report\/Proceedings<\/dc:type><dc:type>\n        NonPeerReviewed<\/dc:type><dc:relation>\n        http:\/\/dx.doi.org\/10.1109\/ICMB.2006.10<\/dc:relation><dc:identifier>\n        Garner, Philip and Edwards, Reuben and Coulton, Paul (2006) Card-based Macro-payment for Mobile Phones. In: Mobile Business, 2006. ICMB '06. International Conference on. IEEE. ISBN 978-0-7695-2595-2<\/dc:identifier><dc:relation>\n        http:\/\/eprints.lancs.ac.uk\/22917\/<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/dx.doi.org\/10.1109\/ICMB.2006.10","http:\/\/eprints.lancs.ac.uk\/22917\/"],"year":2006,"topics":["QA76 Computer software"],"subject":["Contribution in Book\/Report\/Proceedings","NonPeerReviewed"],"fullText":"Card-based Macropayment for Mobile Phones \nPhilip Garner, Reuben Edwards, Paul Coulton \nLancaster University \np.garner, r.edwards, p.coulton @lancaster.ac.uk \nAbstract \nMost new entrants into the mobile commerce \nmarketplace are faced with a paradox; how can we \nattract users without merchants, and how can we \nattract merchants without customers? Without a huge \ninvestment in marketing to build consumer recognition, \nstarting a new m-commerce service is risky.  In this \npaper we analyse how successful companies on the \nweb have managed to create successful payment \nservices by utilising the brand recognition and ubiquity \nof the popular card networks.  Attempts to marry credit \ncards and mobile phones are not new \u2013 encrypted \nphone wallet systems have been bundled with devices \nfor a number of years. However, use of these wallet \nsystems remains limited as the public failed to embrace \nshopping via WAP, frustrated by slow speeds and poor \nuser interfaces. With mobile terminals more suited for \nbrowsing, and higher speeds from mobile data \nbecoming the norm, we present a system to enable \nremote macropurchases using existing credit card \ntechnology. \n1. Introduction \nMobile commerce continues to attract academic \nstudy and interest from the business and banking \ncommunities but mobile terminals remain underused as \na means of paying for goods and services. \nAs is so often the case with mobile technologies, the \nsuccessful business models for transactions on mobile \nterminals have confounded analysts\u2019 predictions, with \nproximity payments stalling and the market for mobile \ncontent delivery booming. The UK market for content \ndelivered over mobile networks, such as ringtones, \ngames and wallpapers is estimated to be worth a huge \n\u00a3740m per year [1]. Contrast this with turn-of-the-21st \nCentury predictions that over half of all mobile \npayments would be either in retail stores or via vending \n[2], and the need to re-evaluate our expectations of \nmobile commerce is clear. The space where mobile \nterminals were expected to dominate, proximity \npayments, is now being filled with RF-enabled \nsmartcards, such as the Octopus card popular in Hong \nKong, and the Oyster card used in London for public \ntransport. Both of these systems are known as stored \nvalue cards, and they can be topped up at compatible \nkiosks. These systems both require user to physically \ntouch (or at least come to within a few centimetres of \neach other) a receiver, but with contactless cards, using \nNear Field Communications, (NFC) even this is not \nalways necessary. Ideal for mass-transit applications, \nusers can potentially pay for their travel without even \nremoving the card from their wallet. Of course, with \nthe modern push towards convergence devices, it \nseems likely that such technology will become \nembedded into a mobile terminal, as seen with the \nMastercard PayPass project [3]. This is expected to \nbecome a pervasive technology, with 50% of mobile \nterminals expected to be RFID\/NFC enabled by 2009 \n[4]. \nWhilst the future for proximity payments for mobile\nappears bright, the models originally touted for m-\ncommerce flounder. With the popular introduction of \nthe Wireless Application Protocol (WAP) in 2000, an \nimplementation of SSL\/TLS was provided to allow \n\u2018secure\u2019 remote purchases. One of a number of public \nrelations blows to befall the WAP concept was the \n\u2018WAP Gap\u2019 \u2013 the necessary bridge between Wireless \nTransport Layer Security (WTLS) on the wireless \ninternet and Secure Sockets Layer (SSL) that was \npresent in the early implementation where an encrypted \nsession from WTLS had to be decrypted to plaintext \nbefore being encrypted for an SSL session [5]. Of \ncourse, this meant that end-to-end security was \ncompromised, although the actual risk of a successful \nattack remains small, as the plaintext would usually \nonly be present in a mobile network operator\u2019s (MNO) \nnetwork.  \nIn contrast the to the experience with WAP, the \nproliferation of SMS driven services continues to \ninvigorate mobile commerce throughout Europe, with \npremium SMS services expected to deliver 12% of \nnon-voice operator revenue by 2007 [6]. Users have \nadopted the technology with a vigour that surprised \nmost in the mobile community. Its success as a \nplatform for m-commerce completely belies its \nfundamental lack of suitability for transactions. \nMessages do not have guaranteed delivery and can be \nProceedings of the International Conference on Mobile Business (ICMB\u201906) \n0-7695-2595-4\/06 $20.00 \u00a9 2006 IEEE \nAuthorized licensed use limited to: Lancaster University Library. Downloaded on January 7, 2009 at 04:35 from IEEE Xplore.  Restrictions apply.\ndelayed for days, are repudiatable and offer little \nassurance that the person who initiated the transaction \nis the one paying. Despite all this, not only are \npremium SMS services being used to pay for ringtones \nand games, but for other, more interesting models such \nas information service subscription and ticketing. \nWhile SMS is dominant for remote micropurchases \n(typically less than \u20ac10), it is unsuitable for higher \npriced goods and services, requiring a number of \nmessages to complete a transaction and being \nprohibitively expensive to merchants, with SMS-\noperators retaining up to 50% of the transaction.  \nA number of factors can be identified when \nattempting to explain the success of SMS as a payment \nplatform: \nInstalled user base \nSMS services are available to most GSM handsets \nfrom the mid 1990s onwards; with handsets from 2000-\non supporting downloads via WAP, used for the \ndelivery of ringtones, games and wallpapers. This \nmeans that virtually all of the handsets in use in the \nGSM ecosystem can be used make premium SMS \ntransactions. \nEase of use \nSMS use has accelerated strongly in the UK since \ntrue cross-operator messaging appeared in 1998. \nNearly all users will be comfortable using SMS, so \napplying the same protocol to payments ensures a high \ndegree of users willing to use premium SMS to \npurchase goods and services. \nMerchant Opportunity \nUnlike other m-commerce solutions, integrating \nSMS payments into merchants\u2019 business models is \nrelatively inexpensive. Also, premium SMS does not \nsuffer from the crucial \u2018chicken-and-egg\u2019 problem of \nmost new m-commerce systems, where the success of \nthe system is dependant on the client uptake, and of \ncourse, merchants are reluctant to commit to any new \npayment system without a critical mass of users. With \npremium SMS m-commerce, the users are already in \nplace and in huge numbers.  \nHow to beat the odds and create a successful \npayment system, attracting clients and users, has been \nthe subject of considerable research. A number of high \nprofile enterprises have invested heavily in personal \npayment systems only to later withdraw them citing low \nuser uptake. In this article we will consider the need for \nmobile payments to follow the model established on the \nweb, were entrenched card payment schemes have \nfought off challenges from web-centric payment \nsystems. The success of payments driven by premium \nSMS should illuminate the critical factors for remote \nmobile macropurchasing (typically non-impulse \npurchases greater than \u20ac10). Despite all the technical \nadvantage of these ultimately unsuccessful payment \nsolutions, they failed to provide an operating model \nmost users felt comfortable with. With this in mind we \npropose a system facilitating card-based payments on \ntoday\u2019s mobile terminals, and discuss some of the most \nsuitable applications for such a system. \n2. Card Payments on the Web \nDespite numerous attempts to create a successful \nmicropayment solution on the web, card payments are \nso entrenched in the offline space that online payment \nsystems that did not successfully integrate cards into \ntheir business model have failed. The two most often \ndiscussed are Flooz and Beenz, both of which \ncollapsed in August 2001 [7]. Bridging the gap \nbetween voucher payment and traditional payment \nsystems, users were free to spend Beenz at participating \nweb merchants, or transfer them to another Beenz \naccount holder. However, users were not able to \nconvert any unused Beenz into a traditional currency, \nand when the service was dramatically suspended many \nusers lost a significant amount as retailers refused to \naccept Beenz as a means of payment. Four years on, no \nother payment mechanism has managed to challenge \nthe dominance of card payments online, despite the \nclear need for a workable micropayment solution. \nPayPal is the most successful of a number of online \npayment systems, but for many transactions simply acts \nas a way of enabling person-to-person transactions with \ntheir credit or debit card [8]. It also enables merchants \nto economically add web storefronts, as set-up costs are \nsignificantly lower than performing card-processing \nwith a traditional business bank account. By leveraging \nentrenched card technology that has a high level of \nconsumer trust into the non-traditional payments arena, \nPayPal has been a tremendous success with $19Bn. \ntotal payment volume in 2004 and over 70 million user \naccounts [10]. \nSome banks have partnered with card networks to \nimprove the security of card transactions by offering \none-time use credit card numbers for use when buying \nonline. In the US, Citibank, Discover and MBNA have \nimplemented a system known as \u201ccontrolled payment \nnumbers\u201d which allows cardholders to shop online \nProceedings of the International Conference on Mobile Business (ICMB\u201906) \n0-7695-2595-4\/06 $20.00 \u00a9 2006 IEEE \nAuthorized licensed use limited to: Lancaster University Library. Downloaded on January 7, 2009 at 04:35 from IEEE Xplore.  Restrictions apply.\nwithout using their real card number. Despite warnings \nfrom banks and card network operators, many \nmerchants retain card numbers on their servers. This \nmeans that when a merchant database that holds live \ncredit card numbers and is compromised by a hack \nattempt, losses due to fraud can be substantial.  By \nusing a one-time card number, any numbers gained \nfrom a compromised database will not be able to be \nused in any further transactions. This kind of \nimplementation requires the end-user to download \nsome software to the desktop in order to generate \nunique card numbers associated with their real card. In \nsome ways this improves the way the user makes the \ntransaction, in that they are never forced to leave their \ncomputer in order to find their wallet and retrieve their \ncard, interrupting the transactions and reducing the \nlikelihood it will complete successfully. Such schemes \nhave not been widely adopted however, and are \ndisliked by merchants as they prevent the questionable \npractice of storing credit cards in order to easily \nfacilitate repeat transactions. American Express \nremoved their implementation of a similar system \ncalled \u201cPrivate Payments\u201d in April 2004, citing a lack \nof sufficient adoption [9]. \nCard fraud on the web continues to be a problem for \ncard networks, with \u00a3505m lost to fraud in the UK \nduring 2004 [11]. Some technical features have been \nadded to modern credit cards in order to further secure \n\u2018Cardholder Not Present\u2019 transactions, such as the \naddition of Card Verification Value (CVV) digits. Not \nstored on the magnetic strip, CVV is intended to ensure \nthat whoever is initiating the transaction actually holds \nthe card in their possession. Unfortunately as most \nmodern card harvesting techniques involve tricking \nusers into submitting their card details to what they \nbelieve to be a trustworthy source (known as phishing) \nand thus any attacker is likely to be able to attain the \nCVV digits, rendering the system ineffective. Card \npayments on the web are by far the most popular way \nof paying for goods and services online, with 22m \nconsumers using cards to buy online in the UK in 2004 \n[12]. The heavy investment in smartcard technology \nrolled-out throughout Europe during 2005 has been \nrelatively successful in reducing card fraud in the \noffline world, but the additional security gained from \nsmartcard implementation does nothing to prevent \nphising attacks or mitigate other card security threats \nonline. \n3. Mobile Wallets \nBusiness models mooted with the launch of WAP \nservices suggested users may use a mobile wallet \nsolution which would allow WAP sites access to card \ndetails stored on the terminal authenticated with a user \nPIN. A good example is the Nokia Wallet, first \nimplemented in the Nokia 6310 phone from 2002, and \npresent in most models since. \nMerchantMobile TerminalClient\nInitialises wallet with PIN \nat least 4 digits in length\nAdd credit card details\nClose wallet\nPoints WAP browser to commerce site\nProcess request and \nreturn checkout page\nPrompt user to enter card \ndetails to complete transaction\nChooses Wallet \noption from menu\nUser prompted to enter PIN\nDecrypts selected card with PIN\nAuto-fills form with card details\nPost details to merchant server\nFig. 1. UML diagram showing usual mobile \nwallet functionality. \n3.1 Client-side Wallets \nClient wallets store payment information on a user\u2019s \nmobile terminal. They may integrate with the user\u2019s \nSIM in order to authenticate the user. Client side \nwallets are conceptually appealing to users, as they are \nanalogous to credit cards in the responsibility for \nkeeping them safe relies on the user. Wallets operating \nin hardware have a number of disadvantages, namely \nthat such systems are very hard to update once \ndeployed, and are usually associated with a single bank \nor network operator.  \n3.2 MNO Server-side wallets \nHosted wallets mean that users\u2019 payment details are \nnot held on their device, but rather on a server operated \nby the Mobile Network Operator. This server may store \ncard details or other methods of payment for use with \nmobile commerce transactions. For the user, such a \nsystem has a number of benefits. If their device is lost \nor stolen, they can still easily use their account on \nanother device, unlike with a SIM-based system. Also, \nMNOs are able to easily update the services offered by \nthe wallet solution, perhaps adding new payment \nProceedings of the International Conference on Mobile Business (ICMB\u201906) \n0-7695-2595-4\/06 $20.00 \u00a9 2006 IEEE \nAuthorized licensed use limited to: Lancaster University Library. Downloaded on January 7, 2009 at 04:35 from IEEE Xplore.  Restrictions apply.\nmethods. MNOs are in a strong position to provide \nsuch services, with great experience in pre-pay and \npost-pay consumer billing. Also the consumer already \nhas a trust relationship with the MNO, a factor many \nnew m-commerce startups have found insurmountable. \n3.3 Third-party server side wallets \nAlthough most wallet-based solutions developed to \ndate have been provided by MNOs, third party wallets \nadd a critical feature; interoperability. The Vodafone \nm-pay system is limited to customers of Vodafone and \nworks only on pre-approved m-commerce sites. This \nkind of restriction clearly limits the potential of an \nMNO-run server, whereas a third-party run system is \nfree to recruit as many users and partners as possible. \n4. Macro-Purchasing for Mobile \nConsumers are now buying goods and services \nonline more than ever, and growth in e-commerce \ntransaction value continues to accelerate. In the second \nquarter of 2005, US retail e-commerce spending grew a \nstaggering 26% over the same period in 2004, with \nonline sales accounting for 2.1% of total sales [13]. In \nthe UK, debit cards dominate offline purchases, with \ntwo thirds of card sales made with debit cards. This \ntrend is reversed online, with 72% of all online sales \nmade with a credit card [12]. These figures underline \nthe dominance of card payments for online \ntransactions. Consumer protection schemes with credit \ncards are significantly more robust than with debit \ncards; if card users dispute a card transaction, card \ncompanies usually refund the customer quickly and \nleave retailers to pursue the lost income. An interesting \ntrend is some high-volume e-tailers, such as low-cost \nairlines, have introduced a surcharge on users paying \nwith a credit card rather than a debit card. This reflects \nthe charging scheme imposed on e-tailers, where often \ncredit card processing fees are between 1% and 5% and \ndebit cards are charged at a fixed fee.  \nPresently very few e-commerce websites are \ndesigned to allow mobile users to make purchases via a \nmobile browser. This is mainly due to the unfavourable \ntrading conditions on consumer platforms, with \ndifficulty ensuring a consistent user experience across \nmobile browsers, coupled with the high cost of mobile \ndata, a particular problem in Europe. However, both of \nthese problems may soon be resolved. QVGA \n(320x240) resolution is emerging as the de-facto \nstandard screen size for mobile, catalysed by the \nadoption of the standard for the video-enabled iPod, \nand the associated video delivery platform. Unlimited \nmobile data has been available in the US for some \ntime, and have started to appear in Europe at a \nconsumer-oriented price point. Also the success of the \nOpera mini, the mobile browser from Norwegian \ndeveloper Opera Software, has gone some way \nproviding a consistent platform for mobile browsing. \nAs of April 2006, the Java-based browser had 2m \ndownloads and 4m page impressions per day [16]. We \ncan see from the browser wars of the mid-1990s on the \ndesktop how important having a standardised platform \nis for growth; with Internet Explorer 4 gaining a \nmajority market share, enterprises were able to invest \nin websites reasonably ensured of a consistent user \nexperience. We expect the same to be true for the \nmobile internet when screen sizes, browsing technology \nand mobile data costs converge. \nIn anticipation of this convergence we have \ndeveloped a solution that allows developers to easily \nintegrate an m-commerce component into their mobile \napplications.  \n5. XEPS: SSL-Enabled Payments for \nMobile \nA number of banks use payment processing software \nfrom ClearCommerce Corp. to allow their customers \nwho want to take credit card payments online to \nintegrate payments into their e-commerce solution. \nClearCommerce provides an XML payment API for e-\ncommerce website builders to send complete \ninformation about a transaction to a capturing server at \nthe associated financial institution. Typically an e-\ncommerce webserver will generate an XML document \nassociated with a transaction, including details about \nthe products in the order, the delivery address, total \nprice etc. This document is then sent to the bank\u2019s \nprocessing servers, often via a HTTPS (Secure Sockets \nLayer-enabled) POST form. Merchants are able to \ndefine specific security rules that control a transaction, \nspecifically using the Address Verification Service \n(AVS) to determine whether the delivery address \nmatches the address registered with the card account. \nFurther, advanced fraud detection rules can prevent \ntransactions continuing given suspicious buying \npatterns such as a card being used to repeatedly buy \nhigh-value items. After processing, the status of a \ntransaction is then returned to the merchant via an \nXML document, which must then be parsed.  \nThe XEPS (XML-Enabled Payment System) project \nleverages this system onto a client-side mobile device, \nproviding a framework for developers to integrate \ncredit card payments into their mobile applications and \ncomplete transaction entirely from the device.  \nProceedings of the International Conference on Mobile Business (ICMB\u201906) \n0-7695-2595-4\/06 $20.00 \u00a9 2006 IEEE \nAuthorized licensed use limited to: Lancaster University Library. Downloaded on January 7, 2009 at 04:35 from IEEE Xplore.  Restrictions apply.\nThis project uses Python for Series 60 [14] Nokia \nmobile phones in order to rapidly develop the concept \non a mobile device. Python allows for much quicker \ndevelopment for applications that need greater \ninteractivity with the device hardware than with either \nJava (J2ME) or Symbian environments. With the 1.2 \nrelease, finalised in October 2005, a number of new \nAPIs were available to developers, including: GPRS \nnetworking with HTTPS support, graphics and sound \nrecording. However, Python for Series 60 (PyS60) \ndoes not offer the complete XML package associated \nwith standard Python releases. Fortunately, researchers \nat the Helsinki Institute for Information Technology \nhave ported the pyexpat Python XML module from the \nfull Python release for use with Python Series 60 [15]. \nUsing this module, well formed XML documents can \nbe created on the device, and using the appropriate \nfunction calls elements and attributes can be placed as \nrequired.  \nThe system provides real-time card processing, with \ntransactions being compared to pre-configured fraud \nrules with a user being informed of the transaction \nstatus within seconds, whether it succeeds or fails. \nThe ClearCommerce XML specification used in this \nproject specifies as huge array of inputs that can be \nused to describe a transaction, such as a number of \nelements for describing repeat transactions that will \nrarely be used. Conceivably a complex transaction \ncould be described with hundreds of lines of XML, but \nmost m-commerce applications will only require basic \ninformation such as card details, totals, and a product \ndescription. However, the application was tested using \nthe most verbose output XML that may be used to \ndescribe a transaction. This is quite a sizeable \ndocument for a device with only limited power to \ngenerate, approximately 200 lines of XML. From the \nresults shown in table 3, the current prototype \nimplementation takes a rather slow 65 seconds to \nsimulate a complete transaction on a modern Nokia \nsmartphone. However, this figure includes a number of \ncomplex steps: \n1) Generating a typical XML file \nAs demonstrated in table 1, this achieved relatively \nquickly and only contributes 5 seconds to the total \ntransaction time. \n2) Initiating GRPS session \nThis establishing a connection on the 2.5G packet \nnetworks used in GSM is often time consuming. On \nsome devices the connection remains permanently \nactive. This is expected to drastically reduce the \ntransaction time. \n3) HTTPS handshake \nOnly recently have smartphones (not more advanced \nPDA-style devices) shipped with certificate authority \n(CA) root certificates to facilitate an HTTP connection \nusing SSL or TLS encryption. This is illustrated in \nTable 3, where the Nokia 3650, an early Symbian \nsmartphone, is unable to complete the tests due to \nmissing HTTPS support. \n5.1 Program Flow \nBrowsing \ncatalogue on \nmobile device\nAdd items to \ncart Checkout\nForm to enter \nshipping\/card \ndetails\nConfirm\nYes\/No\nxmPay \nperforms basic \nvalidation\nGenerate output \nXML\nPOST document over HTTPS\/SSL \nsecured GPRS conenction Returns output XML\nParse returned \nXML\nReturn status \nmessages to \napplication\nSuccess \u2013 generate receipt\nFig 2. Typical XEPS use case scenario \nFigure 2 describes the flow of information \nthroughout a successful transaction. The actual \nimplementation is dependant on usage, although it is \nenvisaged that most applications will function in a \nsimilar way, with application developers providing a \nshopping cart and checkout front end, employing XEPS \nto power the payments back-end. \nUpon completion of the successful transaction, the \nacquiring server returns a transaction ID to the device, \nwhich can be used by the user as a reference when \nquerying the transaction. Although not yet \nimplemented, using the returned information from the \nprocessing server to retain a receipt for users would be \nhighly beneficial; users could easily see a log of their \nspending on the device, in contrast to awkward and \neasy-to-lose paper receipts. \n5.2 Use Case Scenarios \nThe XEPS software is available as a Python module, \ndeveloped as a proof of concept. It is envisaged that a \nrelease version would be suitable for inclusion by \napplication developers in commercial software.  \nProceedings of the International Conference on Mobile Business (ICMB\u201906) \n0-7695-2595-4\/06 $20.00 \u00a9 2006 IEEE \nAuthorized licensed use limited to: Lancaster University Library. Downloaded on January 7, 2009 at 04:35 from IEEE Xplore.  Restrictions apply.\nWith more consumers using their mobile device to \nbrowse the web as conditions improve with better \nbrowsers, interfaces and connectivity, it is expected \nthat more people will eventually use the mobile web to \nperform card-based transactions much as they do on the \ndesktop, despite the drawbacks. In fact, reports suggest \nthat as many as 28% of mobile phone owners will use \ntheir device to access the web, an increase of 24% over \n2004 [17]. \nHowever, there are a number of scenarios where \ncard payments through a browser would not be the \nideal solution. Standalone applications, such as mobile \ngames, would be able to integrate card payments to add \nvalue; a user could choose to unlock more levels on a \ngame and pay for them directly from the application \nwith a credit card. Integrating XEPS could provide \nsuch functionality, allowing developers to completely \ncustomise the interface and security levels to integrate \nwith their application.  \nIn another possible scenario, an enterprise could \ndeploy a version of its catalogue to customers offline to \ntheir devices, and with XEPS, easily integrate online \nsales directly from the device, allowing users to browse \na product catalogue without having the cost and \ninconvenience of using mobile data networks. Whilst \nthe situation is improving, browsing a large product \ncatalogue using mobile data would be slow and \nexpensive when compared to a catalogue stored on the \ndevice. Additionally, mobile browsers do not allow for \nsophisticated user interface controls that would make a \nproduct catalogue much easier to use on a constrained \ndevice, such as softkey-accessible popup menus. For a \nproduct catalogue that is regularly updated, when the \ndevice has access to a suitable broadband connection, \nupdates could be downloaded and the product \ncatalogue updated on the device. \n5.3 System Limitations \nIn order to operate XEPS, a merchant requires a \ncard processing facility with a financial service \nprovider that supports the ClearCommerce payment \ngateway. XEPS sends authentication information to the \npayment processing server when initiating a \ntransaction, in order to identify the merchant account. \nThis is comprised of a username, password and account \nnumber. In the current prototype software, there is no \nway of protecting this information, and can be read \nfrom the source Python files with any text-viewer. \nClearly this represents an unacceptable security risk, as \nan attacker with these authentication details would be \neasily able to create fraudulent transactions. However, \nvalid credit card details would still be required so the \nimpact of the attack is diminished. A production \nversion of the software would most likely be in a \ncompiled language so the attack would not be as trivial. \nHowever, this still represents an unacceptable security \nrisk, so some other measures have been considered to \nalleviate the problem. \nA solution would be TrustZone technology \nchampioned by ARM, in order to provide a separate, \nsecure domain at a chip level. TrustZone is \nimplemented in within the processor core, with system \nsecurity elements designed into core hardware. A \ntrusted application would be able to secure and encrypt \nthe necessary login details to prevent the attack \ndescribed above. \n6. Conclusions \nIt is clear from the sources presented herein that card \npayments are going to remain the de facto standard for \npersonal electronic payments in some form or another \nfor the near future. Many entrants more suited to use on \neither the web or mobile devices have tried and failed \nto gain enough market share to present a viable \npayment solution; the mobile industry must look to \nfamiliar payment methods to encourage user adoption \nof new payment schemes. Although only a proof of \nconcept, the XEPS payment system described here \nPlatform Time (seconds) \nNokia 3650, Python 2.2.2, Symbian 6, S60 v1.0 8 \nNokia 6600 Python 2.2.2, Symbian 7, S60 v2.0 8 \nNokia 6630, Python 2.2.2, Symbian 8, S60 v2.0 5 \nTable 1: Time taken to generate the minimal \nXML required for a successful transaction. \nPlatform Time (seconds) \nNokia 3650, Python 2.2.2, Symbian 6, S60 v1.0 No https \nsupport \nNokia 6600 Python 2.2.2, Symbian 7, S60 v2.0 75 \nNokia 6630, Python 2.2.2, Symbian 8, S60 v2.0 65 \nTable 3: Time to generate minimal XML file, \ninitiate GPRS connection, establish HTTPS \nconnection with remote webserver, POST \ngenerated document and write returned XML \nto local file. \nPlatform Time (seconds) \nNokia 3650, Python 2.2.2, Symbian 6, S60 v1.0 16 \nNokia 6600 Python 2.2.2, Symbian 7, S60 v2.0 13 \nNokia 6630, Python 2.2.2, Symbian 8, S60 v2.0 7 \nTable 2: Time to generate complete XML \ndocument. \nProceedings of the International Conference on Mobile Business (ICMB\u201906) \n0-7695-2595-4\/06 $20.00 \u00a9 2006 IEEE \nAuthorized licensed use limited to: Lancaster University Library. Downloaded on January 7, 2009 at 04:35 from IEEE Xplore.  Restrictions apply.\nallows developers to utilise the consumer awareness \nenjoyed by card networks to easily deploy retail \napplications in a mobile environment, and provides a \nway of purchasing higher value goods and services in a \nway familiar to most end-users. \n10. References \n[1] Mintel, Mobile Downloads, August 2005.\n[2] Electronic Payments International, \u201cMobile Payments: \nIs there anybody out there?\u201d, vol. 167, May 2001. \n[3] IT Week, \u201cMotorola turns mobile phone into wallet\u201d, \nOct. 2004, http:\/\/www.itweek.co.uk\/2126002\n[4] C. Swedberg, \u201cDeveloping RFID-Enabled Phones\u201d, \nRFID Journal, July 2004, \nhttp:\/\/www.rfidjournal.com\/article\/articleview\/1020\/1\/1\/\n[5] K. Zafar, \u201cThe WAP Gap: Wireless Security and the \nWireless Application Protocol\u201d, viewed Oct. 2005, \nhttp:\/\/www.barnesandnoble.com\/offers\/wapgap.asp  \n[6] The Shosteck Group, \u201cPremium SMS becomes a \nsignificant contributor to AMPU\u201d,  \nhttp:\/\/www.shosteck.com\/news\/jul03.htm, July 2003\n[7] H. Godschalk, \u201cFailure of Beenz and Flooz Indicates the End \nof Digital Web-Currencies?\u201d, Electronic Payment Systems \nObservatory Newsletter, Nov. 2001.\n[8] P. Garner, R.Edwards, \u201cPerson to Person Mobile \nCommerce\u201d, presented at Mobile Multimedia \nCommunications Conference, Munich, Germany, Oct. \n6-8th, 2003.\n[9] J. Quittner, \u201cA Battle\u2019s Breaking Out Over Phishing \nPrevention\u201d, Bank Technology News, July 2004, \navailable http:\/\/tinyurl.com\/4zqwu\n[10] BusinessWeekOnline \u201cPaypal Spreads Its Wings\u201d, May \n2005, available http:\/\/tinyurl.com\/bruk9 \n[11] CardWatch, \u201cCard Fraud Overview\u201d, viewed Oct. 2005 \navailable http:\/\/tinyurl.com\/bg8ka\n[12] APACS, \u201cThe Way We Pay\u201d Sept. 2005, \nwww.apacs.org.uk\n[13] US Census Bureau , \u201cQuarterly Retail E-Commerce \nSales 2nd Quarter 2005, available \nhttp:\/\/www.census.gov\/mrts\/www\/data\/html\/05Q2.html   \nviewed Nov. 2005. \n[14] Nokia, Python for Series 60, \nhttp:\/\/www.forum.nokia.com\/main\/0,,034-821,00.html \n[15] Pyexpat for Series 60, \u201cHelsinki Institute for \nInformation Research\u201d, \nhttp:\/\/pdis.hiit.fi\/pdis\/download\/pyexpat\/\n[16] Opera Software, \u201cOperators making money on Opera \nMini: Two million users surf 4 million Web pages every \nday\u201d \nhttp:\/\/www.opera.com\/pressreleases\/en\/2006\/04\/06\/, \nApril 2006.\n[17] IPSOS Insight, \u201cThe Face of the Web\u201d, April 2006. \nProceedings of the International Conference on Mobile Business (ICMB\u201906) \n0-7695-2595-4\/06 $20.00 \u00a9 2006 IEEE \nAuthorized licensed use limited to: Lancaster University Library. Downloaded on January 7, 2009 at 04:35 from IEEE Xplore.  Restrictions apply.\n"}