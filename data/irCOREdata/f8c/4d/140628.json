{"doi":"10.1109\/ACC.2008.4586662","coreId":"140628","oai":"oai:dspace.lib.cranfield.ac.uk:1826\/6268","identifiers":["oai:dspace.lib.cranfield.ac.uk:1826\/6268","10.1109\/ACC.2008.4586662"],"title":"Airborne mapping of complex obstacles using 2D Splinegon","authors":["Lazarus, Samuel B.","Shanmugavel, Madhavan","Tsourdos, Antonios","Zbikowski, Rafal","White, Brian A."],"enrichments":{"references":[{"id":37944114,"title":"Determining environmental boundaries: asynchronous communication and physical scales.","authors":[],"date":null,"doi":null,"raw":"A. L. Bertozzi, M. Kemp, and D. Marthaler. Determining environmental boundaries: asynchronous communication and physical scales. In V. Kumar, N. E. Leonard, and A. S. Morse, editors, Proceedings of the 2003 Block Island Workshop on Cooperative Control, volume 309 of Lecture","cites":null},{"id":37944113,"title":"Tracking environmental level sets with autonomous vehicles.","authors":[],"date":"2002","doi":"10.1007\/978-1-4613-0219-3_17","raw":"D. Marthaler and A. L. Bertozzi. Tracking environmental level sets with autonomous vehicles. In Proceedings of the Conference on Cooperative Control and Optimization, Gainesville, FL, Dec, December 2002.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2008-06-04T00:00:00Z","abstract":"This paper describes a recently proposed algorithm in mapping the unknown\nobstacle in a stationary environment where the obstacles are represented as\ncurved in nature. The focus is to achieve a guaranteed performance of sensor\nbased navigation and mapping. The guaranteed performance is quantified by\nexplicit bounds of the position estimate of an autonomous aerial vehicle using\nan extended Kalman filter and to track the obstacle so as to extract the map of\nthe obstacle. This Dubins path planning algorithm is used to provide a flyable\nand safe path to the vehicle to fly from one location to another. This\ndescription takes into account the fact that the vehicle is made to fly around\nthe obstacle and hence will map the shape of the obstacle using the 2D-Splinegon\ntechnique. This splinegon technique, the most efficient and a robust way to\nestimate the boundary of a curved nature obstacles, can provide mathematically\nprovable performance guarantees that are achievable in practice","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/140628.pdf","fullTextIdentifier":"http:\/\/dx.doi.org\/10.1109\/ACC.2008.4586662","pdfHashValue":"01f4cc60acffa020c6adfd1f6abc4802c2b0415a","publisher":null,"rawRecordXml":"<record><header><identifier>\noai:dspace.lib.cranfield.ac.uk:1826\/6268<\/identifier><datestamp>2012-06-13T09:14:55Z<\/datestamp><setSpec>hdl_1826_19<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>Airborne mapping of complex obstacles using 2D Splinegon<\/dc:title><dc:creator>Lazarus, Samuel B.<\/dc:creator><dc:creator>Shanmugavel, Madhavan<\/dc:creator><dc:creator>Tsourdos, Antonios<\/dc:creator><dc:creator>Zbikowski, Rafal<\/dc:creator><dc:creator>White, Brian A.<\/dc:creator><dc:description>This paper describes a recently proposed algorithm in mapping the unknown\nobstacle in a stationary environment where the obstacles are represented as\ncurved in nature. The focus is to achieve a guaranteed performance of sensor\nbased navigation and mapping. The guaranteed performance is quantified by\nexplicit bounds of the position estimate of an autonomous aerial vehicle using\nan extended Kalman filter and to track the obstacle so as to extract the map of\nthe obstacle. This Dubins path planning algorithm is used to provide a flyable\nand safe path to the vehicle to fly from one location to another. This\ndescription takes into account the fact that the vehicle is made to fly around\nthe obstacle and hence will map the shape of the obstacle using the 2D-Splinegon\ntechnique. This splinegon technique, the most efficient and a robust way to\nestimate the boundary of a curved nature obstacles, can provide mathematically\nprovable performance guarantees that are achievable in practice.<\/dc:description><dc:date>2011-09-29T17:56:15Z<\/dc:date><dc:date>2011-09-29T17:56:15Z<\/dc:date><dc:date>2008-06-04T00:00:00Z<\/dc:date><dc:type>Conference paper<\/dc:type><dc:identifier>Lazarus, S.B., Shanmugavel, M., Tsourdos, A.,   Zbikowski, R., White, B.A., Airborne mapping of complex obstacles using 2D Splinegon, American Control Conference, 11-13 June 2008, Seattle, WA, pp1238-1243.<\/dc:identifier><dc:identifier>978-142442079-7<\/dc:identifier><dc:identifier>0743-1619<\/dc:identifier><dc:identifier>http:\/\/dx.doi.org\/10.1109\/ACC.2008.4586662<\/dc:identifier><dc:identifier>http:\/\/dspace.lib.cranfield.ac.uk\/handle\/1826\/6268<\/dc:identifier><dc:rights>\u00a9 2008 IEEE. Personal use of this material is permitted. Permission from IEEE must be obtained for all other users, including reprinting\/ republishing this material for advertising or promotional purposes, creating new collective works for resale or redistribution to servers or lists, or reuse of any copyrighted components of this work in other works<\/dc:rights><\/oai_dc:dc><\/metadata><\/record>","journals":[{"title":null,"identifiers":["issn:0743-1619","0743-1619"]}],"language":{"code":"en","id":9,"name":"English"},"relations":[],"year":2008,"topics":[],"subject":["Conference paper"],"fullText":"Airborne Mapping of Complex Obstacles using 2D Splinegon\nSamuel B. Lazarus, Madhavan Shanmugavel, Antonios Tsourdos, Rafa\u0142 Z\u02d9bikowski, and Brian A. White\nAbstract\u2014This paper describes a recently proposed algorithm in\nmapping the unknown obstacle in a stationary environment where the\nobstacles are represented as curved in nature. The focus is to achieve a\nguaranteed performance of sensor based navigation and mapping. The\nguaranteed performance is quantified by explicit bounds of the position\nestimate of an autonomous aerial vehicle using an extended Kalman filter\nand to track the obstacle so as to extract the map of the obstacle. This\nDubins path planning algorithm is used to provide a flyable and safe\npath to the vehicle to fly from one location to another. This description\ntakes into account the fact that the vehicle is made to fly around the\nobstacle and hence will map the shape of the obstacle using the 2D-\nSplinegon technique. This splinegon technique, the most efficient and\na robust way to estimate the boundary of a curved nature obstacles,\ncan provide mathematically provable performance guarantees that are\nachievable in practice.\nIndex Terms\u2014Multiple sensor fusion, integrated GPS\/INS navigation,\nDubins path planning, obstacle avoidance, Splinegon, Boundary estima-\ntion, robust estimation.\nI. INTRODUCTION\nThe autonomous aerial vehicle has significant advantages over the\nground vehicles, where it can achieve a high degree of maneuverabi-\nlity, high speed response time and the ability of large area coverage.\nGenerally the autonomous aerial vehicles carry the required sensors\nsuch as inertial sensors (INS), accelerometers and gyroscopes, to\nmeasure the acceleration and the angular rate, while the obstacle\ndetection and the map-making is carried out with time of flight\nsensors such as ultrasonic or laser sensors. The objective of the\nwork described in this paper is to navigate the UAV to desired\nlocations with required orientation so to be able to build the map of\nits environment. The problems associated with this study are firstly\nthe mapping of complex environments with minimum information,\nthe schedule of the UAV to finite locations (waypoints) and finally\nthe guidance algorithm that can allow the UAV to fly safely from one\nwaypoint to another and control of approach angle to each waypoint.\nA nonlinear (Extended) Kalman filter (EKF) is used for the\nnavigation by aiding the measurements from the GPS and INS\nsensors. The vehicle path is guided by the Dubins path planning\nalgorithm using the circular arcs and straight line segments with the\nobstacle avoidance system. In order to overcome the problem of data\nassociation for the complex environments, an advanced technique\nis employed in this paper to estimate the boundary of the curved\nnature obstacles. To illustrate this algorithm of modeling the boundary\nof a curved nature, the laser sensor measurements are represented\nas vertices to form a polygon with line segments. The mapping\ntask is achieved by generalisation of a polygon to produce a set of\nvertices that are connected by line segments of constant curvature.\nThis represents a subset of a class of objects named as splinegons.\nFirstly the use of a multiple sensors architecture addressed for\nrobust localisation of the unmanned aerial vehicles, that are flies in\nan unknown environment with a constant altitude. The localisation\nis based on the integrated GPS\/INS; This robust localisation system\nincreases the stability of the aerial vehicles which in turn provides\nthe sufficient richness in mapping task.\nSamuel B. Lazarus, Madhavan Shanmugavel, Antonios Tsourdos, Rafa\u0142\nZ\u02d9bikowski, and Brian A. White are with the Department of Aerospace, Power\n& Sensors, Cranfield University, Shrivenham, Swindon SN6 8LA, United\nKingdom.\nSecondly the paper addresses a flyable and a safe path of the UAVs\nusing the Dubins path planing algorithm. The Dubins path is the\nshortest path connecting two poses in a plane with a constraint of\nmaximum curvature. The path planning provides a flyable trajectories\nto the vehicles to fly from one location to another. Generally, the\nlocations are predefined by the way-points. So, that the vehicle paths\nare generated by the path planner using the Dubins path planning\nalgorithm. The simple obstacle avoidance system is also a novelty of\nthis paper in which it automatically replans the motion of the vehicle\nwhen it approaches close to the obstacle. This in turn provides a\nstability and a safe path which can protect the vehicles from any\ncollision or leading the vehicles into a catastrophic failure. This\nproposed guidance algorithm provides terminal angle control which is\nan important requirement so that the on-board sensor to successfully\nperform the mapping task.\nFinally, the main contribution of this paper is development of an\nefficient technique called splinegon to build the map of the curvilinear\nobjects. This is a fairly new approach that can handle the data\nassociation problem in a simple structure in building the curved nature\nof the obstacle. The fused EKF estimated positions are used with\nthe limited number of measurements(i.e., the interpolation points)\nfrom the laser sensors to build the map. As the vehicle flies around\nthe obstacle in a constant altitude the time of flight sensor such as\nlaser sensor is used to measure the distance with the objects. Out of\nall these measurements, only a limited number of measurements are\nchosen that represent the vertices to construct a polygon. The data\nassociation algorithm is implemented to select a limited number of\nvertices and to uniformly distribute these vertices around the obstacle\nin a reasonable way. This in turn reduces the computational power and\nthe memory usage of the system. This selection of maximum number\nof vertices that can form the polygon is limited from sixteen to twenty\nvertices. This selection of vertices are accomplished by calculating\nthe length and the curvatures between each of the vertices and to\neliminate the vertex that has a minimum curvature. The selection\nprocess is based on the size and the curved nature of the obstacle.\nFinally, the constructed polygon is generalised to produce a set of\nvertices that are connected by line segments of constant curvature\ncalled splinegon. This splinegon is a set of vertices that have constant\ncurvature line segments defined with C2 contact at the vertex points.\nThis splinegon technique gives a solution that has a highly richness\nin building the curved nature of the unknown obstacle. This proposed\napproach is a computationally attractive one resulting in guaranteed\nbounded errors for the fused estimated position in the localisation\nand mapping of an autonomous aerial vehicle. The development of\nthis algorithm is shown in the functional block diagram in figure\n1. As is can be observed in the block diagram, the vehicle path is\ngenerated by the path planner which can easily protect the vehicle\nby applying the obstacle avoidance system. As the vehicle flies the\nmeasurement from the GPS sensor is fused with the inertial sensor\nto estimate the position of the aerial vehicle using an EKF. This is\nexploited to bound the errors in the inertial sensors which, in turn,\ngives a better estimated position of the autonomous aerial vehicle, so\nthat, the accuracy and richness in the mapping problem is relatively\nincreased. Hence, a limitation of one sensor is compensated by the\nother. Finally the splinegon technique is implemented to build the\nFig. 1. Functional block diagram of the autonomous aerial vehicle navigation\nand mapping of a curvilinear objects using 2D splinegon\nmap of the unknown object.\nII. PRIOR WORK IN THE FIELD\nIn recent years there has been a lot of interest in the problem\nof boundary estimation and boundary tracking by means of robotic\nnetworks in particular the problem to design an algorithm that could\nallow a limited number of sensor swarms to detect the boundary\nof a static region of interest and estimate it. There are numerous\napplications such as the detection of harmful algae bloom [1], [2],\noil spill [3], and fire boundary estimation [4], [5]. Bertozzi et al.[1]\nadopts the so called snake algorithm from the computer vision\nliterature to detect and track the boundary of harmful algae bloom.\nThe agents are equipped with a chemical sensor that is able to\nmeasure concentration gradient and with a communication system\nthat is able to exchange information with a data fusion centre.\nIn the paper by Susca and Bullo [6] a group of UAVs optimally\nplace some interpolation points on the boundary of a region of\ninterest. The boundary is then reconstructed by linear interpolation of\nthe interpolation points. The algorithm in [6] is said to be provably\nconvergent as well as in the case of slowly-moving boundaries,\nbecause of certain input to state stability properties. The criterion\nis used to optimally place robots and interpolation points is such\nthat they are uniformly distributed according to a curvature-weighted\ndistance function defined along the boundary. The curvature-weighted\ndistance function is based on the literature on optimal approximation\nof convex bodies by polygons.\nIn the field of Localisation and Mapping, Kim and Sukkarieh[7]\npresent an approach for the airborne SLAM using the actual flight\nand the observation data. The observations are provided by a vision\nsensor. However, the key limitations of the robustness of these\napproaches rely only on the underlying mechanism of the image\nprocessing where the acquired image is being extracted to get the\ndata; and this processed image is used to determine the current\nlocation of the vehicle.\nNing Yang et.al.,[8] proposed a novel particle filter (PF) for sensor\nfusion, and the sampling importance of resampling particle filter\n(SIR-PF) is applied to address the nonlinear measurement model.\nThe model showed the better performance with higher accuracy of\nnavigation when compared with the EKF. The simulation results\nshowed that the SIR-PF performed superior over the EKF in the same\nsituations. In addition to that, it is proposed that the PF can be a good\nsubstitute for the EKF in on-line land vehicle navigation. Finally the\nauthors have suggested that a new versions of PF with high efficiency\nand hybrid algorithms based on Kalman filter algorithm should be\ndeveloped in future.\nFrank Dellaert et.al.,[9] investigated the smoothing approaches as a\nviable alternative to extended Kalman filter (EKF)- based solutions.\nAn interpretation of factorization in terms of the graphical model\nassociated with the SLAM problem is presented. Both simulation\nresults and actual SLAM experiments in large-scale environments\nare presented that underscore the potential of these methods as an\nalternative to EKF-based approaches. Results indicated that the square\nroot information smoothing methods are much better equipped to deal\nwith non-linear process and measurement models than the EKF and\nyielded the entire smoothed robot trajectory. It recovered the entire\ntrajectory and is exact, and even the sub-optimal incremental scheme\nwe evaluated behaves much better than the EKF as the size of the\nenvironment grows.\nGiven such a large background, this shows that a very few efficient\nresults have been produced in building the map of curvilinear objects.\nA. Trajectory generation - Dubins trajectory\nDubins path is the shortest path connecting two poses for a vehicle\nflying at a constant altitude with a constraint of maximum curvature\n[10]. This Dubins path is a composite path of type CLC or CCC\nor a subset of these two, where \u2019C\u2019 stands for Circular maneuver\nand \u2019L\u2019 stands for straight Line maneuver. In this paper the CLC\ntype trajectories are used. The CLC trajectory comprises two circular\nmaneuvers connected by a tangential straight line maneuver while\nthe CCC trajectory comprises three consecutive tangential circular\nmaneuvers. The subset of these two trajectories falls in the category\neither CL or LC or CC. The straight line maneuver is the shortest\npath for a rectilinear motion and the circular maneuver is the shortest\ntrajectory for turning and combined effect of these two maneuvers\nprovides the shortest trajectory for a general motion in 2D. Though\nextensive studies on Dubins trajectory have been carried out by\nresearch community, some of the relevant works can be found in [11],\n[12] and [13] on path planning and [14] on missile applications.\nIn general, the trajectory generation involves designing a flyable\npath between two poses or way-points. For a given initial pose\nPs(xs; ys; \u0012s) and a final pose Pf (xf ; yf ; \u0012f ) with constraint on\nmaximum curvature of the vehicle, the trajectory generation involves\nproducing a trajectory r(t) which satisfies the following equation:\nPs(xs; ys; \u0012s)\nr(t)\u0000! Pf (xf ; yf ; \u0012f ); \u0014(t) < \u0014max (1)\nwhere (x; y) is the position variable, \u0012 is the direction\/orientation\nvariable and \u0014max is the maximum curvature or minimum turning\nradius of the vehicle.\nUsing the principles of Euclidean geometry, the Dubins trajectory\nis formed by drawing common tangents (internal & external) between\nthe circular arcs. Here the design using external tangent is considered.\nThe case of internal tangent is analogous and is omitted for brevity.\nRefer figure (II-A). The initial and final circular maneuvers are\ncentered respectively at Os(xcs; ycs) and Of (xcf ; ycf ) form two\nprimary circles Cs and Cf . A secondary circle of radius j\u001af \u0000 \u001asj\ndrawn at Of for \u001as \u0014 \u001af . The centers Os and Of are connected by\na line c. The centers of the primary circles ignoring the direction are:\n(xcs; ycs) = (xs \u0000 \u001as cos(\u0012s \u0006 \u0019=2); ys \u0000 \u001as sin(\u0012s \u0006 \u0019=2))\n(2a)\n(xcf ; ycf ) = (xf \u0000 \u001af cos(\u0012f \u0006 \u0019=2); yf \u0000 \u001af sin(\u0012f \u0006 \u0019=2))\n(2b)\nA perpendicular OfTEN cuts the secondary circle at T 0. Now the\n4OsOfT 0 forms a right angled triangle with hypotenuse jOsOf j\nand other two sides OfT 0(= j\u001as \u0000 \u001af j) and OsT 0. The included\nFig. 2. Dubins - Design of CLC path\nangle between jOsOf j and OsT 0 is \u001ee and the slope of the line c is\n .\n = arctan\n \nycf \u0000 ycs\nxcf \u0000 xcs\n!\n(3)\n\u001ee = arcsin\n \n\u001af \u0000 \u001as\nc\n!\nc =\np\n(xcs \u0000 xcf )2 + (ycs \u0000 ycf )2\nThe line TEXTEN forms the external tangent connecting the two\nprimary circles and is also parallel to OsT 0. The values of the angles\n\u001eex(= \\(XOsTEX)) and \u001een(= \\(XOfTEN )) are given in table\nI. TEX is tangent exit point on starting arc, TEN is the tangent entry\nStart-Turn Finish-Turn \u03c6e \u03c6ex \u03c6en\nRight Right arcsin\n(\n\u03c1f\u2212\u03c1s\nc\n)\n\u03c6e +\npi\n2\n+ \u03c8 \u03c6e +\npi\n2\n+ \u03c8\nLeft Left arcsin\n(\n\u03c1f\u2212\u03c1s\nc\n)\n\u03c6e \u2212\n3pi\n2\n+ \u03c8 \u03c6e \u2212\n3pi\n2\n+ \u03c8\nTABLE I\nCALCULATION OF TANGENT EXIT AND ENTRY POINTS\npoint on ending arc. Taking the slope of the connecting line c as  \nthe tangent exit and entry points are calculated as below:\nTEX =\n\u0000\nxcs + \u001as cos(\u001eex); ycs + \u001as sin(\u001eex)\n\u0001\n(4a)\nTEN =\n\u0000\nxcf + \u001af cos(\u001een); ycf + \u001af sin(\u001een)\n\u0001\n(4b)\nAll the angles are assumed positive in anticlockwise direction. By\nconnecting the points Ps to TEX and TEN to Pf respectively by the\narc of radii \u001as and \u001af , the path from Ps through the points TEX ,\nTEN and Pf forms a CLC Dubins trajectory.\nFrom the figure II-A, for a given pose, there are two circles tangent\nto it. The pose P have a right turn r on the arc C1 and a left\nturn on the arc C2. The centers of the maneuvers are chosen for\na given pose either Ps or Ps by using the equation 1, the direction\nof the maneuvers are chosen as per the table I, and the radii of the\nmaneuvers is greater then or equal to the minimum turning radius of\nthe UAVs.\nThus, if either \u0012s or \u0012f is a free variable, a set of eight paths can be\nproduced. If both the orientations are free variables, a set of sixteen\npaths can be produced. The shortest path can be selected from the\nset of available paths.\nThis path planning algorithm is applied at each iteration which\ngenerates the shortest path between the two poses. When the vehicle\nstarts the initial and the final poses are given to generate the first\nP\nL\nR\nC\n1\nC\n2\nFig. 3. Tangent Circles\ndubins path. As the vehicle moves the next poses or the next way-\npoints are predicted based on the each of the local updates. So, at each\nof the iteration a set of new poses is produced to generate the path\nof the vehicle. In any case, if this generated path leads the vehicle\nclose to any of the obstacles then the obstacle avoidance algorithm\nis applied to protect the vehicle from a major collision.\nB. Obstacle Avoidance\nAn obstacle avoidance system is implemented in this project that\ncan protect the flying vehicle from any collision with the surrounded\nobstacles. This obstacle avoidance algorithm is applied in online\nwhile the vehicle is in motion. As the vehicle moves in the path\nprovided by the Dubins the obstacle detection and map making sensor\nsuch as laser sensor provides the distance between the vehicle and the\nsurrounded obstacles. If the vehicle is found to be close to any of the\nobstacles or if the generated Dubins path leads the vehicle towards\nany obstacles, then the obstacle avoidance algorithm is applied that\nwill automatically re-plan the path of the vehicle in online so as to\nprotect the vehicle from any major collision. In this case the Dubins\npath planning algorithm requires the current vehicle position with its\norientation and the next way-point\/poses to re-plan the path of the\nvehicle. This task is accomplished by choosing a new way-point or\ngenerating an intermediate way point which will by pass the obstacle\nto prevent the collision. This simple algorithm is applied based on\nthe speed and the turning radius of the vehicle. The implementation\nresult while applying this algorithm is shown in figure 4.\n\u221220 \u221215 \u221210 \u22125 0 5 10 15 20\n\u221220\n\u221215\n\u221210\n\u22125\n0\n5\n10\n15\n20\nx\u2212coordinate\ny\u2212\nco\nor\ndi\nna\nte\nX and Y coordinate in the map\nObstacle\nActual way\u2212points\/ poses\nLaser sensor\nMeasurement\nThe obstacle avoidance system\nreplan the vehicle path in order to \navoid the collisison with obstacle\nDubins path\nFig. 4. Obstacle avoidance algorithm\nIII. EKF BASED NAVIGATION USING GPS AIDED INS\nIn sensor based navigation for an autonomous aerial vehicle, the\ninertial sensors are often affected by bias, drift and noise. Moreover,\nby using the inertial sensors (INS) alone the vehicle cannot reduce\nthe errors occurring often in the measurements of the motion with\nINS system. It needs an external information about its absolute\nposition. This can be provided either by GPS or from the known\nmap of the surrounding environment. In this paper a robust estimation\nalgorithm for sensor based navigation is proposed by aiding the GPS\nmeasurements with the INS to estimate the vehicle position. In order\nto accomplish this task the INS sensor measurements are aided with\nthe absolute position provided by the GPS using an extended Kalman\nfilter. So, the use of multiple sensors also has other advantages\nsuch as, measurement errors or failure from one of the sensors\nwill not have a catastrophic effect on the system, since the same\ninformation will be available from the other sensors. This algorithm\nis complementary in the sense that they compensate for each other\u2019s\nlimitations, so that the resulting performance of the sensor system\nis better than of its individual components, which in turn, provides\nmore accuracy in the mapping task. A detailed explanation about this\nGPS aided INS navigation system using Kalman filter is shown in\nfigure 5.\nFig. 5. The block diagram of Kalman filter based autonomous flying vehicle\nnaviagtion using GPS aided INS\nIV. MAPPING THE UNKNOWN CURVED NATURE OBSTACLE USING\n2D SPLINEGON\nMapping the curved nature of the unknown obstacle is modelling\nthe boundary of an obstacle within an urban environment. The\nobstacle is to be tracked using an aerial vehicle equipped with sensors\ncapable of detecting the boundary of the obstacle. This will enable the\nmeasurement points that cloud to be determined to extract the exact\nshape of the unknown obstacle. As the vehicle moves the time of light\nsensor such as ultrasonic sensor periodically gives the measurement\npoints. The description will take into account the fact that the vehicle\nwill fly around the obstacle and hence will detect the boundary which\nis known as the interpolation points. This suggests that the most\nefficient modelling approach should be to define these measurement\npoints as vertices and these vertices are used to construct a polygon\nwith line segments. Then the constructed polygon is generalised to\nproduce a set of vertices that are connected by line segments of\nconstant curvature. This is a subset of a class of objects named as\nSplinegons [15],[16] and [17]. To illustrate their use in modelling\nthe boundary of a curved nature a set of vertices that have constant\ncurvature line segments defined with C2 contact at the vertex points\nare considered. The implementation result while applying this method\nis shown in figure 6 as an example.\nThe example shown in figure 6 is a splinegon with sixteen vertices\nwith the tangent vectors, together with the arc radii. As required, the\nradii share a common direction at the vertices, but have different\nmagnitudes. The magnitude is the inverse of the curvature for that\nsegment. Hence two arcs of differing curvature will connect these\nvertices via the intermediate vertex.\n\u221220 \u221215 \u221210 \u22125 0 5 10 15 20\n\u221220\n\u221215\n\u221210\n\u22125\n0\n5\n10\n15\n20\n(a) The set of vertices that\nforms a polygon with line\nsegments\n\u221220 \u221215 \u221210 \u22125 0 5 10 15 20\n\u221220\n\u221215\n\u221210\n\u22125\n0\n5\n10\n15\n20\nx\u2212coordinate\ny\u2212\nco\nor\ndi\nna\nte\nX and Y coordinate in the map\n(b) The constructed Spline-\ngon\nFig. 6. splinegon with sixteen vertices- The vertices are shown by the symbol\n\u201d*\u201d and the intermediate vertex is shown by the symbol \u201do\u201d.\nA. 2D Splinegon Construction\nA splinegon with constant curvature line segments can be defined\nwith C2 contact at the vertices. This implies that the line segments\nshare both a common vertex and that the tangents at the vertices are\nidentical. In order to ensure C2 contact between vertices, the line\nsegments must meet both position and tangent end point constraints.\nA single arc segment between vertices has only one degree of\nfreedom: the arc curvature. This is not enough to be able to match\nthe tangent constraint at both end vertices, as at least two degrees of\nfreedom are necessary. Extra degrees of freedom are thus required\nto ensure the C2 constraints as both line segment, end vertices can\nbe met. One solution that increases the degrees of freedom is to\nintroduce an intermediate vertex such that the line segment is replaced\nby two arc segments of different curvature, as shown in figure 7. The\nt\ns\nt\nI\nt\nf\nn\ns\nn\nI\nn\nf\nv\nI\nv\ns\nv\nf\nFig. 7. Arc segment with C2 contact intermediate vertex\nvertices identified by the vehicle measurement points from the laser\nsensor are shown by the symbol \u201d*\u201d and the intermediate vertex is\nshown by the symbol \u201do\u201d. Hence two arcs of differing curvature\nwill connect these vertices via the intermediate vertex. In order to\ndevelop the defining equations for such a solution, the intersection of\ntwo constant curvature arcs at a point with C2 contact is considered.\nTwo orientations for the intermediate arcs are possible. These are\nshown in figure 8. Constructing the arc chords and identifying the\nchord-to-arc angles \u001es and \u001ef , as shown in figure 8(a), for one\norientation of tangent vectors ts and tf , and in figure 8(b) for the\nother orientation, enable the conditions required for C2 contact to be\ndefined. The position of the intermediate vertex and the arc curvatures\nare required to define the composite arc between these vertices. As\nthe conditions for a solution are identical for both orientations, only\none will be studied in detail. Hence for orientation 1 shown in figure\n8(a), summing the angles inside the quadrilateral defined by points\nts\ntI\ntf\nns\nnI\nnf\nvI\nvs\nvf\nff\nf\ns\ny\nq\npt\nps\npf\nc\ncf\ncs\ng\ns\ngf\n(a) C2 contact for Orienta-\ntion 1\nts\ntI\ntf\nns\nnI\nnf\nvI\nvs\nvf\nff\nf\ns\ny\nq\npf\nps\npt\n(b) C2 contact for Orienta-\ntion 2\nFig. 8. Chord segments with C2 contact\nvs, pt, vf and vI , the result is:\n\u0012 = 2\u0019 \u0000 \u001es \u0000 \u001ef \u0000  (5)\nFigure 8(a), using the angle defined by points vs, vI and vf , shows\nthe relationship:\n\u0012 = \u0019 \u0000 (\u0019\n2\n\u0000 \u001es)\u0000 (\u0019\n2\n\u0000 \u001ef )\n= \u001es + \u001ef (6)\nHence:\n2(\u001es + \u001ef ) = 2\u0019 \u0000  \n\u001ef = \u0019 \u0000  \n2\n\u0000 \u001es (7)\nBoth \u001es \u0015 0 and \u001ef \u0015 0 are required to maintain consistent\narc direction by orienting the directed tangent vector tI at the\nintermediate vertex vI . This is because each arc is directed, in that\nthere is a required transition direction defined by the tangent vectors\nat these vertices. If \u001es < 0 and \u001ef < 0 then the arc directions\noppose at the intermediate vertex, implying that the arc directions\nwill reverse. This implies that the intermediate tangent vectors for\neach segment are parallel but have opposite directions. Hence for a\nconsistent solution, the result will be:\n\u001ef \u0015 0\n\u0019 \u0000  \n2\n\u0015 \u001es \u0015 0 (8)\nHence a range of solutions is possible for \u001es and \u001ef which will\nsatisfy the bounds in equation (8). Given the vertex chord length c\nbetween these vertices vs and vf , the arc chord lengths cs and cf can\nbe obtained by using the sine rule on the triangle defined by vertices\nvs vI and vf , as:\ncs = c\nsin(\u001ef \u0000 \rf )\nsin(\u0012)\ncf = c\nsin(\u001es \u0000 \rs)\nsin(\u0012)\n(9)\nwhere \rs and \rf are the angles between the vertex tangent vectors\nts and tf respectively, and the vertex chord. Using simple geometry,\nthe curvature of each segment can then be determined as:\n\u0014s =\n2 cos(\u001es=2)\ncs\n\u0014f =\n2 cos(\u001ef=2)\ncf\n(10)\nB. Vertex Selection and Data Association\nThe splinegon representation assumes some reasonably uniform\ndistribution of vertices around the obstacle. Each vertex will have a\ncurvature and length and these can be used to determine metrics\nfor each segment. The data association association algorithm is\nimplemented here to uniformly distribute the vertices around the\nobstacle in a reasonable way. Though it seems to be a hard task, it is\none of the promising algorithms that fulfils the requirements based\non the curvatures of the each vertex. In order to accomplish this\ntask a threshold value for the minimum curvature between any two\nvertices is chosen. Then the length and the curvatures between each\nof the vertices are calculated so as to eliminate any vertex that has a\nminimum length and a curvature lesser than the threshold value. i.e., if\nthe length or the curvature between any of the two vertices is less than\nor equal to a threshold value then the vertex is eliminated from the\nlist of vertices. This process assures that the given set of vertices can\nprovide a reasonable way to uniformly distribute the vertices around\nthe obstacle to form a polygon. This in turn reduces the computational\npower of the system and reduces the use of memory by maintaining\na selected number or a constant number of vertices throughout the\nmission. So, this selection process of maximum number of vertices\nthat can form the polygon is limited from sixteen to twenty. The\nchoosing of the threshold valus is an online tunable parameter it can\nbe chosen depending upon the total number of measurements that\nare obtained at each of the iterations. Geometrically, the number of\nvertices chosen depends upon the size and the curved nature of the\nobstacle. This algorithm shows an efficient outcome in limiting the\nnumber of vertices to form a polygon.\nV. DISCUSSION AND RESULTS\nIn this paper a novel integrated sensor fusion architecture is\nproposed to achieve a robust airborne navigation and map building\nthat can overcome the uncertainty in the system model and sensor\nnoise statistics. The proposed airborne navigation is based on the\nintegration of GPS and INS which can be implemented for small\nand micro aerial vehicles in an urban surveillance missions. The\ncomplementary position estimates are fused, thereby resulting in a\nmuch improved position estimate from the EKF which will increase\nthe accuracy and richness in the mapping task.\nAn advanced technique that can provide a sufficient richness in\nmapping the curved nature of an obstacle is proposed. This proposed\nalgorithm along with the Dubins path to generate the path of the\nautonomous vehicle is robust enough to handle the collision avoi-\ndance that can provide the safe and stable path so as to accomplish\nthe mission. The data association algorithm is used to extract the\nshape of the curved nature of the obstacle in a simple structure\nwhich uses a limited or a constant number of vertices to construct\nthe polygon. Finally this constructed polygon, generalised with line\nsegments with a constant curvatures, is called 2D splinegon. This\nproposed algorithm is implemented for a different static environment\nwhich contains both the concave and convex shaped obstacles. The\nimplementation results while applying this algorithm are shown in\nfigures 9 and 10. As can be observed from these figures, At each\nof these iteration the measurement points that are obtained from the\nlaser sensor are processed with the data association algorithm where\nit will select the required number of vertices to form a polygon. At the\nend of the mission this selection of vertices are chosen based on the\nshape of the obstacle produced in the previous iteration. Finally the\nlist of selected vertices with the line segments are generalised to get\nthe shape of the curved nature of the obstacle using the 2D splinegon\ntechnique while the EKF base navigation is applied periodically to\n\u221220 \u221215 \u221210 \u22125 0 5 10 15 20\n\u221220\n\u221215\n\u221210\n\u22125\n0\n5\n10\n15\n20\n(a) The set of vertices that\nforms a polygon with line\nsegments\n\u221220 \u221215 \u221210 \u22125 0 5 10 15 20\n\u221220\n\u221215\n\u221210\n\u22125\n0\n5\n10\n15\n20\nx\u2212coordinate\ny\u2212\nco\nor\ndi\nna\nte\nX and Y coordinate in the map\n(b) The constructed Spline-\ngon\nFig. 9. The local updated polygon and the map using Splinegon at each\ncycles\n\u221220 \u221215 \u221210 \u22125 0 5 10 15 20\n\u221220\n\u221215\n\u221210\n\u22125\n0\n5\n10\n15\n20\n(a) The set of vertices that\nforms a polygon with line\nsegments\n\u221220 \u221215 \u221210 \u22125 0 5 10 15 20\n\u221220\n\u221215\n\u221210\n\u22125\n0\n5\n10\n15\n20\nx\u2212coordinate\ny\u2212\nco\nor\ndi\nna\nte\nX and Y coordinate in the map\n(b) The constructed Spline-\ngon\nFig. 10. The local updated polygon and the map using Splinegon at each\ncycles\n\u221220 \u221215 \u221210 \u22125 0 5 10 15 20\n\u221220\n\u221215\n\u221210\n\u22125\n0\n5\n10\n15\n20\nx\u2212coordinate\ny\u2212\nco\nor\ndi\nna\nte\nX and Y coordinate in the map\nObstacle\nVehicle EKF Estimated positions\nMapping using 2D Splinegon\nActual positions\nFig. 11. Airborne Mapping using 2D Splinegon\n\u221220 \u221215 \u221210 \u22125 0 5 10 15 20\n\u221220\n\u221215\n\u221210\n\u22125\n0\n5\n10\n15\n20\nx\u2212coordinate\ny\u2212\nco\nor\ndi\nna\nte\nX and Y coordinate in the map\nFig. 12. Airborne Mapping using 2D Splinegon\nnavigate the vehicle. The global updated implementation results are\nshown in figures 11 & 12.\nIt is proposed to extend this work for a multiple platform with\na multiple airborne vehicle that would make the better resulting\nperformance in mapping task. This proposed method, the most recent\napproach, will result in the sufficient richness in the mapping task\nwhich will increase the confidence in boundary estimation thereby\ndecreasing the instability of the (i.e. decreasing the uncertainty)\nautonomous aerial vehicle.\nREFERENCES\n[1] D. Marthaler and A. L. Bertozzi. Tracking environmental level sets with\nautonomous vehicles. In Proceedings of the Conference on Cooperative\nControl and Optimization, Gainesville, FL, Dec, December 2002.\n[2] A. L. Bertozzi, M. Kemp, and D. Marthaler. Determining environmental\nboundaries: asynchronous communication and physical scales. In V. Ku-\nmar, N. E. Leonard, and A. S. Morse, editors, Proceedings of the 2003\nBlock Island Workshop on Cooperative Control, volume 309 of Lecture\nNotes in Control and Information Sciences, pages 25\u201342, New York,\n2004. Springer Verlag.\n[3] J. Clark and R. Fierro. Cooperative hybrid control of robotic sensors\nfor perimeter detection and tracking. In American Control Conference,\npages 3500\u20133505, Portland, OR, June 2005.\n[4] D. W. Casbeer, S.-M. Li, R. W. Beard, R. K. Mehra, and T. W. McLain.\nForest fire monitoring with multiple small uavs. In American Control\nConference, pages 3530\u20133535, Portland, OR, June 2005.\n[5] D. W. Casbeer, D. B. Kingston, R. W. Beard, T. W. Mclain, and S.-M.\nLi. Cooperative forest fire surveillance using a team of small unmanned\nair vehicles. International Journal of Systems Sciences, 2005.\n[6] S. Susca, S. Martnez, and F. Bullo. Monitoring environmental boundaries\nwith a robotic sensor network. Technical report, Center for Control,\nDynamical Systems and Computation, University of California at Santa\nBarbara, Santa Barbara, CA, 93106-5070, USA, March 2006.\n[7] Jong-Hyuk Kim and Salah Sukkarieh. Airborne simultaneous locali-\nsation and map building. Proceedings of the 1003 IEEE lnternational\nConference on Robotics & Automation, September 2006.\n[8] Ning Yang, Wei Feng Tian, Zhi Hua Jin, and Chuan Bin Zhang. Particle\nfilter for sensor fusion in a land vehicle navigation system. Measurement\nScience and Techonology, 16:677681, 2005.\n[9] Frank Dellaert and Michael Kaess. Square root sam: Simultaneous\nlocalization and mapping via square root information smoothing. The In-\nternational Journal of Robotics Research, 25(12):1181\u20131203, December\n2006.\n[10] L.E.Dubins. On curves of minimal length with a constraint on average\ncurvature and with perscribed initial and terminal positions and tangent.\nAmerican Journal of Mathematics, 79:497\u2013516, 1957.\n[11] J. J. Enright and E. Frazzoli. On multiple uav routing with stochastic\ntargets: Performance bounds and algorithms. In AIAA Guidance, Navi-\ngation, and Control Conference and Exhibit, San Francisco, California,\n15 - 18 August 2005.\n[12] M. Shanmugavel. Path Planning of Multiple Autonomous Vehicles. PhD\nthesis, Cranfield University, 2007.\n[13] Ketan Savla, Emilio Frazzoli, and Francesco Bullo. On the dubins\ntraveling salesperson problems: novel approximation algorithms. In\nRobotics: Science and Systems II. MIT Press, Cambridge, MA, August\n2006.\n[14] M. Robb, B. White, and A. Tsourdos. Earliest intercept line guidance:\nA novel concept for improving mid-course guidance in area air defence.\nAIAA Guidance, Navigation and Control Conference and Exhibit, San\nFrancisco, California, Aug. 15-18 2005.\n[15] D. P. Dobkin, D. L. Souvaine, and C. J. Van Wyk. Decomposition and\nintersection of simple splinegons. Algorithmica, 3:473\u2013485, 1988.\n[16] D. P. Dobkin and D. L. Souvaine. Computational geometry in a curved\nworld. Algorithmica, 5(3):421\u2013457, 1990.\n[17] J. F. Garten, C. E. Schemm, and A. R. Croucher. Modeling the transport\nand dispersion of airborne contaminants: A review of techniques and\napproaches. Johns Hopkins APL technical digest, 24(4):368\u2013375, 2003.\n"}