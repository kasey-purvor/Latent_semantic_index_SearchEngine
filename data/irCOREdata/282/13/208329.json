{"doi":"10.1017\/S0963548301004886","coreId":"208329","oai":"oai:eprints.lse.ac.uk:18470","identifiers":["oai:eprints.lse.ac.uk:18470","10.1017\/S0963548301004886"],"title":"Algorithmic aspects of a chip-firing game","authors":["van den Heuvel, Jan"],"enrichments":{"references":[{"id":17234147,"title":"Algebraic aspects of abelian sandpile models.","authors":[],"date":"1995","doi":"10.1088\/0305-4470\/28\/4\/009","raw":"Dhar, D., Ruelle, P., Sen, S. and Verma, D. (1995) Algebraic aspects of abelian sandpile models. J. Phys. A 28 805{831.","cites":null},{"id":17234134,"title":"Algebraic Graph Theory, 2nd edn,","authors":[],"date":"1993","doi":"10.1017\/cbo9780511608704","raw":"Biggs, N. (1993) Algebraic Graph Theory, 2nd edn, Cambridge University Press.","cites":null},{"id":17234136,"title":"Algebraic potential theory on graphs.","authors":[],"date":"1997","doi":"10.1112\/s0024609397003305","raw":"Biggs, N. (1997) Algebraic potential theory on graphs. Bull. London Math. Soc. 29 641{682.","cites":null},{"id":17234135,"title":"Chip  and the critical group of a graph.","authors":[],"date":"1999","doi":null,"raw":"Biggs, N. L. (1999) Chip ring and the critical group of a graph. J. Alg. Combin. 9 25{45.","cites":null},{"id":17234138,"title":"Chip- and the chromatic polynomial.","authors":[],"date":"1997","doi":null,"raw":"Biggs, N. and Winkler, P. (1997) Chip-ring and the chromatic polynomial. Preprint, London School of Economics.","cites":null},{"id":17234153,"title":"Chip- and the Tutte polynomial.","authors":[],"date":"1997","doi":"10.1007\/bf02558479","raw":"Merino Lopez, C. (1997) Chip-ring and the Tutte polynomial. Ann. Combin. 1 253{259.","cites":null},{"id":17234139,"title":"Chip- games on directed graphs.","authors":[],"date":"1992","doi":null,"raw":"Bj\u00a8 orner, A. and Lov asz, L. (1992) Chip-ring games on directed graphs. J. Alg. Combin. 1 305{328.","cites":null},{"id":17234141,"title":"Chip- games on graphs.","authors":[],"date":"1991","doi":null,"raw":"Bj\u00a8 orner, A., Lov asz, L. and Schor, P. W. (1991) Chip-ring games on graphs. Europ. J. Combin. 12 283{291.","cites":null},{"id":17234150,"title":"Geometric Algorithms and Combinatorial Optimization, 2nd corr.","authors":[],"date":"1993","doi":null,"raw":"Gr\u00a8 otschel, M., Lov asz, L. and Schrijver, A. (1993) Geometric Algorithms and Combinatorial Optimization, 2nd corr. edn, Springer.","cites":null},{"id":17234144,"title":"Graph Theory with Applications,","authors":[],"date":"1976","doi":"10.2307\/3008805","raw":"Bondy, J. A. and Murty, U. S. R. (1976) Graph Theory with Applications, Macmillan and Elsevier.","cites":null},{"id":17234132,"title":"How Nature Works: The Science of Self-Organised Criticality,","authors":[],"date":"1996","doi":"10.1007\/978-1-4757-5426-1_2","raw":"Bak, P. (1996) How Nature Works: The Science of Self-Organised Criticality, Springer.","cites":null},{"id":17234152,"title":"Mixing of random walks and other diusions on a graph.","authors":[],"date":"1995","doi":null,"raw":"Lov asz, L. and Winkler, P. (1995) Mixing of random walks and other diusions on a graph. In Surveys in Combinatorics, 1995 (P. Rowlinson, ed.), Cambridge University Press, pp. 119{154.","cites":null},{"id":17234142,"title":"Modern Graph Theory,","authors":[],"date":"1998","doi":"10.1002\/jgt.10023","raw":"Bollob as, B. (1998) Modern Graph Theory, Springer.","cites":null},{"id":17234148,"title":"No polynomial bound for the chip  game on directed graphs.","authors":[],"date":"1991","doi":"10.1090\/s0002-9939-1991-1065944-3","raw":"Eriksson, K. (1991) No polynomial bound for the chip ring game on directed graphs. Proc. Amer. Math. Soc. 112 1203{1205.Algorithmic Aspects of a Chip-Firing Game 529","cites":null},{"id":17234155,"title":"On the complexity of addition in the sandpile group of a graph.","authors":[],"date":"1999","doi":null,"raw":"Rossin, D. (1999) On the complexity of addition in the sandpile group of a graph. Preprint.","cites":null},{"id":17234157,"title":"Polynomial bound for a chip  game on graphs.","authors":[],"date":"1988","doi":"10.1137\/0401039","raw":"Tardos, G. (1988) Polynomial bound for a chip ring game on graphs. SIAM J. Discrete Math. 1 397{398.","cites":null},{"id":17234151,"title":"Random generation of spanning trees involving chip- In preparation.","authors":[],"date":null,"doi":null,"raw":"van den Heuvel, J. Random generation of spanning trees involving chip-ring. In preparation.","cites":null},{"id":17234145,"title":"Random walks on regular and irregular graphs.","authors":[],"date":"1996","doi":"10.1137\/s0895480193260595","raw":"Coppersmith, D., Feige, U. and Shearer, J. (1996) Random walks on regular and irregular graphs. SIAM J. Discrete Math. 9 301{308.","cites":null},{"id":17234146,"title":"Self-organised critical state of sandpile automation models.","authors":[],"date":"1990","doi":"10.1103\/physrevlett.64.2837.2","raw":"Dhar, D. (1990) Self-organised critical state of sandpile automation models. Phys. Rev. Lett. 64 1613{1616.","cites":null},{"id":17234133,"title":"Self-organised criticality.","authors":[],"date":"1988","doi":"10.1103\/physreva.38.364","raw":"Bak, P., Tang, C. and Weisenfeld, K. (1988) Self-organised criticality. Phys. Rev. A 38 364{374.","cites":null},{"id":17234154,"title":"The computational complexity of sandpiles.","authors":[],"date":"1999","doi":null,"raw":"Moore, C. and Nilsson, M. (1999) The computational complexity of sandpiles. J. Statist. Phys. 96 205{224.","cites":null},{"id":17234137,"title":"The Tutte polynomial as a growth function.","authors":[],"date":"1999","doi":"10.1017\/cbo9780511608704.014","raw":"Biggs, N. (1999) The Tutte polynomial as a growth function. J. Alg. Combin. 10 115{133.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2001-11","abstract":"Algorithmic aspects of a chip-firing game on a graph introduced by Biggs are studied. This variant of the chip-firing game, called the dollar game, has the properties that every starting configuration leads to a so-called critical configuration. The set of critical configurations has many interesting properties. In this paper it is proved that the number of steps needed to reach a critical configuration is polynomial in the number of edges of the graph and the number of chips in the starting configuration, but not necessarily in the size of the input. An alternative algorithm is also described and analysed","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/208329.pdf","fullTextIdentifier":"http:\/\/eprints.lse.ac.uk\/18470\/1\/Algorithmic%20aspects%20of%20a%20chip-firing%20game%28lsero%29.pdf","pdfHashValue":"179603597de924115dda20269ad5a4f54fbfce6e","publisher":"Cambridge University Press","rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:eprints.lse.ac.uk:18470<\/identifier><datestamp>\n      2012-08-24T08:25:02Z<\/datestamp><setSpec>\n      74797065733D4445505453:4C53452D4D41<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/eprints.lse.ac.uk\/18470\/<\/dc:relation><dc:title>\n        Algorithmic aspects of a chip-firing game<\/dc:title><dc:creator>\n        van den Heuvel, Jan<\/dc:creator><dc:subject>\n        QA Mathematics<\/dc:subject><dc:description>\n        Algorithmic aspects of a chip-firing game on a graph introduced by Biggs are studied. This variant of the chip-firing game, called the dollar game, has the properties that every starting configuration leads to a so-called critical configuration. The set of critical configurations has many interesting properties. In this paper it is proved that the number of steps needed to reach a critical configuration is polynomial in the number of edges of the graph and the number of chips in the starting configuration, but not necessarily in the size of the input. An alternative algorithm is also described and analysed.<\/dc:description><dc:publisher>\n        Cambridge University Press<\/dc:publisher><dc:date>\n        2001-11<\/dc:date><dc:type>\n        Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:format>\n        application\/pdf<\/dc:format><dc:language>\n        en<\/dc:language><dc:identifier>\n        http:\/\/eprints.lse.ac.uk\/18470\/1\/Algorithmic%20aspects%20of%20a%20chip-firing%20game%28lsero%29.pdf<\/dc:identifier><dc:identifier>\n          van den Heuvel, Jan  (2001) Algorithmic aspects of a chip-firing game.  Combinatorics, Probability and Computing, 10 (6).  pp. 505-529.  ISSN 0963-5483     <\/dc:identifier><dc:relation>\n        http:\/\/journals.cambridge.org\/action\/displayJournal?jid=CPC<\/dc:relation><dc:relation>\n        10.1017\/S0963548301004886<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/eprints.lse.ac.uk\/18470\/","http:\/\/journals.cambridge.org\/action\/displayJournal?jid=CPC","10.1017\/S0963548301004886"],"year":2001,"topics":["QA Mathematics"],"subject":["Article","PeerReviewed"],"fullText":"  \n Jan van den Heuvel  \nAlgorithmic aspects of a chip-firing game \n \nArticle (Published version) \n(Refereed) \n \nOriginal citation: \nvan den Heuvel, Jan (2001) Algorithmic aspects of a chip-firing game. Combinatorics, probability \n& computing, 10 (6). pp. 505-529. ISSN 0963-5483  \nDOI:10.1017\/S0963548301004886 \n \n\u00a9 2001 Cambridge University Press \n \nThis version available at: http:\/\/eprints.lse.ac.uk\/18470\/ \nAvailable in LSE Research Online: August 2012 \n \nLSE has developed LSE Research Online so that users may access research output of the \nSchool. Copyright \u00a9 and Moral Rights for the papers on this site are retained by the individual \nauthors and\/or other copyright owners. Users may download and\/or print one copy of any \narticle(s) in LSE Research Online to facilitate their private study or for non-commercial research. \nYou may not engage in further distribution of the material or use it for any profit-making activities \nor any commercial gain. You may freely distribute the URL (http:\/\/eprints.lse.ac.uk) of the LSE \nResearch Online website.  \nCombinatorics, Probability and Computing (2001) 10, 505{529. c\u00a9 2001 Cambridge University Press\nDOI: 10.1017\/S0963548301004886 Printed in the United Kingdom\nAlgorithmic Aspects\nof a Chip-Firing Game\nJ A N V A N D E N H E U V E L\nCentre for Discrete and Applicable Mathematics, Department of Mathematics,\nLondon School of Economics, Houghton Street, London WC2A 2AE, UK\n(e-mail: jan@maths.lse.ac.uk)\nReceived 19 August 1999; revised 9 May 2001\nAlgorithmic aspects of a chip-\fring game on a graph introduced by Biggs are studied. This\nvariant of the chip-\fring game, called the dollar game, has the properties that every starting\ncon\fguration leads to a so-called critical con\fguration. The set of critical con\fgurations\nhas many interesting properties. In this paper it is proved that the number of steps needed\nto reach a critical con\fguration is polynomial in the number of edges of the graph and the\nnumber of chips in the starting con\fguration, but not necessarily in the size of the input.\nAn alternative algorithm is also described and analysed.\n1. Introduction\nIn the classical chip-\fring game on a \fnite undirected graph G (see [9] and references\ntherein) it is assumed that, at the beginning of the game, a pile of chips is placed on each\nvertex of G. A step in the game consists of choosing a vertex v which has at least as many\nchips as its degree, and moving one chip from v to each of its neighbours. Such a step is\ncalled \fring vertex v. The game terminates if each vertex has fewer chips than its degree.\nIn this paper we study a variant of the classical chip-\fring game above. In this variant\nthere is one special vertex, say q, which is always able to \fre, independently of its number\nof chips. Biggs [4, 5] calls this variant the dollar game, and refers to q as the government.\nIn fact, the game we consider is a variant of this game, but because the di\u000berences are\nsmall we will call our variant the dollar game as well.\nBefore we continue, we need some de\fnitions and will then give a formal de\fnition of\nour version of the dollar game. A good source for the basic terminology and notation\nin graph theory is [11]. Throughout this paper we will assume as given a graph G =\n(V (G); E(G)), which is \fnite, undirected and connected. We also assume that there is one\nspecial vertex in G, called q. We shall denote the number of vertices of G by n and the\nnumber of edges by m. The edge-connectivity of G will be denoted by \u0015.\nWe will allow G to have multiple edges, but no loops. (Note that this means that\n506 J. van den Heuvel\nformally E(G) is a multiset. We will still talk about an edge e 2 E(G).) For two vertices\nu; v, e(u; v) denotes the number of edges joining u and v; this number is also called the\nmultiplicity of an edge between u and v. The degree dG(v) of a vertex v is the number of\nedges incident with v, where multiple edges are counted with their multiplicities. The set\nof neighbours of a vertex v is denoted by NG(v).\nAn instance of the dollar game on the graph G starts with a number of chips on each\nvertex v 6= q, where we allow the number of chips to be negative. One move in the game\nconsists of one of the following two steps.\n(C1) Choose a vertex v 6= q which has more than dG(v) chips, remove dG(v) chips from\nthat vertex, and add e(u; v) chips to each vertex u 2 NG(v)nfqg. Such a step is called\n\fring vertex v.\n(C2) If there is no vertex v 6= q that has more than dG(v) chips, then add e(u; q) chips to\neach vertex u 2 NG(q). This step is called \fring q or \fring the government.\nThe number of chips on a vertex v 6= q at a certain moment will be denoted by s(v). A\ncon\fguration s of the dollar game is the (n\u2212 1)-vector of all numbers of chips at a certain\nmoment in the game. If s(v) > dG(v) for some v 6= q, then we say that v is ready in s;\nif s(v) < dG(v) for all v 6= q, then q is ready. Given a con\fguration s, a \fnite sequence\nv1; v2; : : : ; vk of vertices is legal for s if v1 is ready in s, v2 is ready in the con\fguration\nobtained from s after \fring v1, etc. If v1; : : : ; vk is a legal sequence for s, then by applying\nthe sequence we will mean the process of \fring the vertices of the sequence in consecutive\norder, starting with the con\fguration s.\nA con\fguration s is said to be stable if s(v) < dG(v) for all v 6= q; it is called recurrent if\nthere is a non-empty legal sequence for s which leads to the same con\fguration. Further,\na con\fguration is critical if it is both stable and recurrent.\nAlthough our version of the dollar game di\u000bers from that in [4] in that we allow a\nnegative number of chips, most of the theory developed in [4] holds without any changes.\nIn particular, the following results, which are the main inspiration for the results in this\npaper, are still valid.\nTheorem 1.1 (Biggs [4]). Let s be a con\fguration of the dollar game on a connected\ngraph G. Then there exists a unique critical con\fguration c which can be reached by a legal\nsequence of \frings starting from s.\nDenote the set of critical con\fgurations of G by K , the set of spanning trees of G byT,\nand the number of spanning trees by \u0014.\nTheorem 1.2 (Biggs [4]). Let G be a connected graph. Then the number of elements in K\nis equal to \u0014, the number of spanning trees of G.\nFor each con\fguration s, let \u03b3(s) 2 K be the unique critical con\fguration determined by\nthe previous theorem. For two critical con\fgurations c1; c2 2 K , de\fne the operation \u2018\u000f\u2019\nby c1 \u000f c2 = \u03b3(c1 + c2) (where \u2018+\u2019 is the normal vector addition).\nAlgorithmic Aspects of a Chip-Firing Game 507\nTheorem 1.3 (Biggs [4]). Let G be a connected graph. Then the set K with the operation \u000f\nis an abelian group.\nIt is possible to say much more about the relations between the set of critical con\fgur-\nations and other properties of the graph G: see, for instance, [4, 5, 6, 19]. In that sense it\nseems a natural question to ask about algorithmic aspects of these results. In particular\nthe following questions seem to be of interest.\n(Q1) Given a con\fguration s, how long does it take to compute \u03b3(s)?\n(Q2) Given two critical con\fgurations c1; c2, how long does it take to compute c1 \u000f c2?\n(Q3) Does there exist a bijection from K and T that is e\u000eciently computable?\nQuestion (Q3) is essentially answered in the a\u000ermative in [7]. An alternative description\nwill be given in the sequel paper [17], the description in which makes it easier to determine\nthe following result. As units of complexity we will use a chip movement, which is the\noperation of moving one chip from one vertex to a neighbour, and a \fring, which is the\noperation of \fring one vertex. Notice that \fring a vertex v involves dG(v) chip movements.\nTheorem 1.4 (Biggs and Winkler [7]). For a connected graph G, there exist a bijection\nf : K ! T, such that, for any critical con\fguration c 2 K , determining f(c) involves O(n)\n\frings, or O(m) chip movements.\nAnswers to questions (Q1) and (Q2) will follow from results in Section 7, where the\nfollowing results are obtained. De\fne the norm k \u0001 k of a con\fguration s by\nksk = \u2211\nv2V (G)nfqg\njs(v)j:\nTheorem 1.5. For a connected graph G and a con\fguration s on G, the critical con\fgur-\nation \u03b3(s) can be determined in O(n2 (ksk + m) \u0015\u22121) \frings, involving O(nm (ksk + m) \u0015\u22121)\nchip movements.\nTheorem 1.6. For a connected graph G and two critical con\fgurations c1; c2 on G, the sum\nc1 \u000f c2 can be determined in O(n2 m\u0015\u22121) \frings, involving O(nm2 \u0015\u22121) chip movements.\nNote that the bounds on the number of chip movements in Theorems 1.5 and 1.6 are\npolynomial in n and m, but not necessarily in the size of the input (see below). In particular,\nif ksk is large, then the number of movements in Theorem 1.5 will be large as well. This is\nwhy a di\u000berent kind of procedure is described and analysed in Section 8. This procedure\nwill not only involve chip movements, but also certain elementary arithmetic calculations\n(addition, multiplication) of rational numbers with numerator and denominator of the\norder maxf\u0014; maxv2V (G)nfqg js(v)jg.\nTheorem 1.7. For a connected graph G and a con\fguration s on G, the critical con\fgur-\nation \u03b3(s) can be determined in a procedure involving O(n2) arithmetic operations and\nO(n2 m\u0015\u22121) \frings, involving O(nm2 \u0015\u22121) chip movements.\n508 J. van den Heuvel\nIn order to decide if the previous results give algorithms that are polynomial in the size\nof the input, we have to tell what we mean by the size of the input. We follow the more or\nless standard convention (see, e.g., [16]) and de\fne it as the length of a binary encoding\nof an instance of the problem. Encoding a nonnegative integer x takes dlog2(x+ 1)e bits,\nwhereas encoding an integer z takes dlog2(jzj + 1)e + 1 bits (one extra bit for the sign).\nSince an instance of the chip-\fring problem involves a graph G with possible multiple\nedges and an initial con\fguration s, we need the following number of bits:\ns(G; s) =\n\u2211\nu;v2V (G); u 6=v\ndlog2(e(u; v) + 1)e+\n\u2211\nv2V (G)nfqg\ndlog2(js(v)j+ 1)e+ n\u2212 1:\nNotice that both m and ksk can be non-polynomial in s(G; s). Hence Theorems 1.4 to 1.7\ndo not give polynomially bounded procedures. In the case of Theorem 1.7 we can make\nsome more precise conclusions. The number of spanning trees of a graph G is certainly at\nmost \u0014 6\n\u220f\nu;v2V (G) e(u; v), so log2 \u0014 6\n\u2211\nu;v2V (G) log2 e(u; v). Hence the size of the rationals\nused in the arithmetic operations from Theorem 1.7 are of the same order as the size\nof the input. Since performing an elementary arithmetic operation involves a number of\nsteps polynomial in the size of the input, we obtain that the total number of operations\nfor the arithmetic operations in Theorem 1.7 is bounded by a polynomial in the size of\nthe input. This means that the number of operations according to Theorem 1.7 is not\npolynomial in the size of the input if and only if m is not polynomially bounded by the\ninput.\nIn particular, we obtain that, if G is a simple graph (hence m 6 1\n2\nn2), then Theorems 1.4,\n1.6 and 1.7 give a polynomial bound on the number of operations. We do not know how\nto bound the number of \frings or the number of chip movements by an upper bound\nthat does not involve the number of edges m of the graph. So we cannot guarantee that\nan algorithm to \fnd critical con\fgurations will stop after a number of steps polynomial\nin the input if the graph has edges of very high multiplicity.\nSimilar results to those above have been found by others. Complexity results for the\nclassical chip-\fring game can be found in [9, 18, 22]. These results can be used to\nestimate the complexity of obtaining a stable con\fguration, and compare favourably with\nCorollary 7.4(a). Results on the complexity of chip-\fring games on directed graphs appear\nin [8, 15]. It appears that on directed graphs, and even in mixed graphs in which all edges\nexcept one are undirected, it can take an exponential number of \frings before a stable\ncon\fguration is obtained.\nThe dollar game is equivalent to what is known in theoretical physics as sandpile\nmodels: see, e.g., [13, 14]. A more general set-up is studied in so-called avalanche models,\nleading to the concept of self-organized criticality [1, 2].\nThere have been some results obtained from a physical point of view that are related\nto the work in this paper. A result in [21] means that the sum c1 \u000f c2 of two critical\ncon\fgurations on a connected simple graph can be found using O(n4) \frings. Note that\nfor a simple graph on n vertices and m edges we have m = O(n2), so Theorem 1.6 is better\nfor large edge-connectivity \u0015.\nIn [20] sandpile models on d-dimensional lattices are discussed. These models are equiv-\nalent to dollar games on graphs consisting of \fnite box-shaped parts of a d-dimensional\nAlgorithmic Aspects of a Chip-Firing Game 509\nsquare cubic lattice, with one extra vertex (which plays the role of the government q)\nconnected to all boundary vertices of the lattice part. It is shown in [20] that, in the case\nd = 1 and n vertices (which is the same as the dollar game on a cycle Cn+1), the stable\ncon\fguration resulting from a given starting con\fguration can be found in O(n log(n))\nsteps, more rapidly than by just performing the chip-\fring procedure. The same paper\nalso contains results indicating that it is unlikely that a faster algorithm exists for d > 3,\nbut the case d = 2 remains an interesting open problem.\nThe remainder of this paper is organized as follows. In Section 2 we describe the basic\ntheory of our chip-\fring game, mostly repeating results from the literature. In Section 3\nwe look at some of the basic properties of critical con\fgurations, in order to have a\ngood start for the analysis of the procedure to \fnd critical con\fgurations. This analysis\nis continued in Section 4, where certain aspects about the dynamics of the dollar game\nare studied.\nIn order to be able to obtain quantitative results on the dynamics of the dollar game,\nwe will compare the dollar game with some kind of \u2018continuous\u2019 version of the game.\nThis continuous game seems easier to analyse: the analysis can be found in Sections 5\nand 6. In Section 7 we will show that the dynamical behaviour of the dollar game and\nthe continuous version are related, so that we can give quantitative results for the dollar\ngame. These results will make it possible to obtain proofs for Theorems 1.5 and 1.6.\nIn the \fnal section we take a di\u000berent look at the problem to \fnd a corresponding\nstable con\fguration for a given starting con\fguration. Our point of view in Section 8 will\nbe quite di\u000berent from that in the previous section. We look at the problem in a more\nalgebraic sense, and discuss what that means in terms of algorithms.\nIn particular, our extension of the dollar game to allow negative values of chips in a\ncon\fguration is only essential in the \fnal section. Everything up to Section 8 applies if\nwe limit ourselves to nonnegative chip numbers only.\n2. Basic theory of chip-\fring\nWe use the notation and de\fnitions from the previous section. We will show the develop-\nment of the basic theory of the dollar game, similar to the theory in [4]. We include some\nproofs for completeness, and because many of the arguments are used in later sections.\nThe following three lemmas are straightforward, and their proofs are omitted.\nLemma 2.1. Let \u001b = v1; : : : ; vk be a legal sequence for the con\fguration s. Suppose also\nthat the vertex u is ready in s and that u does not appear in the sequence \u001b. Then the\nsequence u; v1; : : : ; vk is also legal for s.\nLemma 2.2. Let v1; : : : ; vk\u22121; vk; vk+1; : : : ; v\u2018 be a legal sequence for the con\fguration s.\nSuppose also that the vertex vk is ready in s and that vk does not appear in the sequence\nv1; : : : ; vk\u22121. Then the sequence vk; v1; : : : ; vk\u22121; vk+1; : : : ; v\u2018 is also legal for s.\nLemma 2.3. Let \u001b = v1; : : : ; vk be a legal sequence for the con\fguration s and suppose\n510 J. van den Heuvel\nthat q does not appear in the sequence \u001b. Let s0 be a con\fguration such that s0(v) > s(v) for\nall v 2 V (G) n fqg. Then \u001b is also a legal sequence for s0.\nLet s be a con\fguration and suppose \u001b = v1; : : : ; vk is a \fnite sequence of vertices which\nis legal for s. Then for v 2 V (G) we denote the number of occurrences of the vertex v in \u001b\nby x\u001b(v). Combining all values of x\u001b gives the n-vector x\u001b , the representative vector of \u001b.\nThe representative vector of a legal sequence \u001b gives a convenient way to describe the\nrelation between the starting con\fguration s and the con\fguration s0 obtained after \u001b has\nbeen applied. More precisely, for all v 2 V (G) n fqg, we have\ns0(v) = s(v)\u2212 x\u001b(v) dG(v) +\n\u2211\nu2NG(v)\nx\u001b(u) e(u; v): (2.1)\nThe formula above is obvious since, whenever v itself is \fred, it loses dG(v) chips, and\nwhenever another vertex u is \fred, v gains e(u; v) chips.\nThe following result is proved in [4] using more involved counting arguments.\nLemma 2.4 (Biggs [4]). Let \u001b = v1; : : : ; vk and \u001b\n0 = v01; : : : ; v0\u2018 both be legal sequences for\nthe con\fguration s. Then there exists a sequence \u001c = u1; : : : ; uj which is also legal for s and\nsuch that its representative vector x\u001c satis\fes, for all v 2 V (G),\nx\u001c(v) = max f x\u001b(v); x\u001b0(v) g:\nMoreover, \u001c can be chosen such that its initial part is identical to \u001b.\nProof. We use induction on k + \u2018. If k = 0 or \u2018 = 0, we are done by setting \u001c = \u001b0 or\n\u001c = \u001b, respectively.\nIf v1 = v\n0\n1, then we are done by applying the induction hypothesis on the con\fguration\nobtained after applying v1 on s, and the sequences \u001b = v2; : : : ; vk and \u001b\n0 = v02; : : : ; v0\u2018.\nSo we can assume v1 6= v01. In particular, we know that v1 is ready in s. If v1 does not\noccur in \u001b0, then by Lemma 2.1 the sequence v1; v01; : : : ; v0\u2018 is also legal for s. Now apply\nthe induction hypothesis on the con\fguration obtained after applying v1 on s, and the\nsequences \u001b = v2; : : : ; vk and \u001b\n0 = v01; : : : ; v0\u2018.\nSo we are left with the case that v1 6= v01 and v1 occurs somewhere in \u001b0. Let i be the\nminimal index such that v0i = v1. Because v1 is ready in s, it follows from Lemma 2.1 that\nthe sequence v0i ; v01; : : : ; v0i\u22121; v0i+1; : : : ; v0\u2018 is legal for s. So now we can apply the induction\nhypothesis on the con\fguration obtained after applying v1 on s, and the sequences\n\u001b = v2; : : : ; vk and \u001b\n0 = v01; : : : ; v0i\u22121; v0i+1; : : : ; v0\u2018.\nUsing Lemma 2.4, we can immediately prove the so-called \u2018confluency property\u2019 of the\ndollar game, which is part (a) of the following theorem. The other parts describe some\nspecial cases that are important in Section 4.\nTheorem 2.5 (Biggs [4]). Let G be a connected graph and let \u001b = v1; : : : ; vk and \u001b\n0 =\nv01; : : : ; v0\u2018 both be legal sequences for the con\fguration s0 on G. Suppose that applying these\nsequences leads to con\fgurations s1 and s\n0\n1, respectively.\nAlgorithmic Aspects of a Chip-Firing Game 511\n(a) There exists a con\fguration s2 which can be obtained from both s1 and s\n0\n1 by applying\nlegal sequences.\n(b) If no vertex appears more than once in both \u001b and \u001b0, then the con\fguration s2 in (a)\ncan be obtained without \fring a vertex more than once.\n(c) If both \u001b and \u001b0 do not contain q, and no vertex in V (G)nfqg appears more than once\nin both \u001b and \u001b0, then the con\fguration s2 in (a) can be obtained without \fring q and\nsuch that no vertex in V (G) n fqg is \fred more than once.\nProof. From Lemma 2.4 it follows that we can \fnd a legal sequence \u001c for s0, such that\nx\u001c(v) = maxfx\u001b(v); x\u001b0 (v)g for all v 2 V (G), and such that the initial part of \u001c is identical\nto \u001b. Let \u001c be the subsequence of \u001c that appears after the part that is identical to \u001b. Then \u001c\nis a legal sequence for s1. Of course, we can also \fnd a legal sequence \u001c\n0 for s0, such that\nx\u001c0(v) = maxfx\u001b(v); x\u001b0 (v)g for all v 2 V (G), and such that the initial part of \u001c0 is identical\nto \u001b0. Let \u001c0 be the subsequence of \u001c0 that appears after the part that is identical to \u001b0.\nThen \u001c0 is a legal sequence for s01. So we obtain (a) if we can prove that the con\fgurations\nobtained from applying \u001c to s1 and from applying \u001c\n0 to s01 are the same. But this follows\nfrom applying equation (2.1) to x\u001c and x\u001c0 and observing that, for all v 2 V (G), we have\nx\u001c(v) = maxfx\u001b(v); x\u001b0 (v)g = x\u001c0(v).\nPart (b) follows by observing that, if x\u001b(v) 6 1 and x\u001b0 (v) 6 1, then x\u001c(v) 6 1. And for\npart (c) we only need the extra observation that, if x\u001b(q) = x\u001b0(q) = 0, then x\u001c(q) = 0.\n3. Algorithmic properties of critical con\fgurations\nRecall that a critical con\fguration of a connected graph G is a con\fguration s on G\nthat is both stable (i.e., s(v) < dG(v) for all v 2 V (G) n fqg) and recurrent (i.e., there\nexists a non-empty legal sequence for s which leads back to s after applying it). Most of\nthe following results occur in [4], sometimes only implicitly and sometimes with a more\nalgebraic proof than the ones given here.\nLemma 3.1 (Biggs [4]). Let s be a stable con\fguration and suppose \u001b = v1; : : : ; vk is a\nlegal sequence for s in which q appears only once. Then every vertex of G appears at most\nonce in \u001b.\nProof. Note that, since s is stable, q must appear as the \frst vertex in \u001b. Suppose some\nvertices appear more than once in \u001b and let v be the \frst vertex that appears for the second\ntime. Let vi be this second appearance of v in \u001b. Then vi must be ready after v1; : : : ; vi\u22121\nhas been applied to s. Since vi appears once in v1; : : : ; vi\u22121 and every other vertex appears\nat most once, we \fnd that the number of chips on vi after applying v1; : : : ; vi\u22121 is at most\ns(vi)\u2212 dG(vi) +\n\u2211\nu2NG(vi)\ne(u; vi) 6 s(vi)\u2212 dG(vi) + dG(vi) = s(vi):\nBut since s(vi) < dG(vi), this contradicts that vi is ready after v1; : : : ; vi\u22121 has been applied.\n512 J. van den Heuvel\nCorollary 3.2. Let s be a stable con\fguration and suppose \u001b = v1; : : : ; vk is a legal sequence\nfor s. Then every vertex appears in \u001b at most as often as q does.\nProof. Partition \u001b into parts that start with q and where q does not appear later in the\npart. By applying Lemma 3.1 to each part, we are done.\nCorollary 3.3 (Biggs [4]). Let s be a stable con\fguration and suppose \u001b = v1; : : : ; vk is a\nlegal sequence for s such that after applying \u001b we return to the con\fguration s. Then every\nvertex of G (including q) appears the same number of times in \u001b.\nProof. This can be proved using equation (2.1) and some linear algebra, as is done in [4].\nThe following proof is more intuitive and in line with our general approach. Suppose the\nresult is false. Let v be a vertex that appears a minimal number of times in \u001b and that is\nadjacent to a vertex v0 that appears more often in \u001b than v itself. (Since G is connected,\nsuch a vertex must exist if not all vertices appear equally often in \u001b.) By Corollary 3.2 it\nfollows that v 6= q. Suppose v appears p times in \u001b. Then, when applying \u001b, v loses p dG(v)\nchips. On the other hand, v gains at least p e(u; v) chips from each vertex u 2 NG(v) and in\nfact at least (p+ 1) e(v; v0) chips from v0. This means that, after applying \u001b, v has at least\ns(v)\u2212 p dG(v) +\n\u2211\nu2NG(v)\np e(u; v) + e(v; v0) = s(v) + e(v; v0) > s(v)\nchips, contradicting the fact that the con\fguration s reappears after \u001b has been applied.\nTheorem 3.4 (Biggs [4]). Let G be a connected graph, s a critical con\fguration on G, and\n\u001b = v1; : : : ; vk a legal sequence for s such that \u001b contains the vertex q exactly once, and\nsuch that, after applying \u001b to s, a stable con\fguration is obtained. Then k = n, every vertex\nappears exactly once in \u001b, and the resulting stable con\fguration is equal to s.\nProof. Let \u001b be any legal sequence for s, which contains q exactly once (since s is\nstable, q must appear as the \frst vertex in \u001b), and such that a stable con\fguration s0 is\nreturned after applying \u001b. Since s is a critical con\fguration, there exists a legal sequence\n\u001b0 = v01; : : : ; v0\u2018 for s, and such that, after applying \u001b0, the con\fguration s is returned. Note\nthat every vertex appears the same number of times in \u001b0, and hence every vertex appears\nat least once in \u001b0; but every vertex appears at most once in \u001b. This means that, for all\nv 2 V (G),\nmax f x\u001b(v); x\u001b0 (v) g = x\u001b0 (v):\nSo, if we form the sequence \u001c according to Lemma 2.4, then every vertex appears in \u001c the\nsame number of times as the vertex does in \u001b0. Hence every vertex appears equally often\nin \u001c, and applying \u001c will result in the con\fguration s again. Also, we can choose \u001c such\nthat its initial segment is equal to \u001b. Let \u001c0 be the part of \u001c after the initial part \u001b. Then \u001c0\nis a legal sequence for s0, the stable con\fguration resulting from applying \u001b on s. So now\nwe have a sequence \u001c in which each vertex appears equally often: the initial part of \u001c is\nAlgorithmic Aspects of a Chip-Firing Game 513\nequal to \u001b, and each vertex appears at most once; for the remaining part \u001c0, each vertex\nappears at most as often as q does, because of Corollary 3.2. This is only possible if each\nvertex appears exactly once in \u001b. But this also means that k = n and s0 = s, thus proving\nthe theorem.\nCorollary 3.5. Let c be a critical con\fguration. Then 0 6 c(v) 6 dG(v) \u2212 1 for all v 2\nV (G) n fqg.\nProof. The fact that c(v) 6 dG(v) \u2212 1 follows directly from the de\fnition of a critical\ncon\fguration as a special stable con\fguration. For the lower bound on c(v), de\fne the\nlegal sequence \u001b as in Theorem 3.4. Since every vertex u 2 V (G) n fvg appears once in \u001b,\nv receives \u2211\nu2V (G)nfvg\ne(u; v) = dG(v)\nchips when applying \u001b. On the other hand, since v is \fred as well, there must be a moment\nwhen v holds at least dG(v) chips. This is only possible if at the start v held at least 0\nchips.\nNotice that Theorem 3.4 means that it is fairly easy to recognize a critical con\fguration:\nonce a stable con\fguration s is obtained, store it in memory. Then start a sequence of\nlegal chip \frings, starting with \fring q, until another stable con\fguration s0 is obtained.\nBecause of Lemma 3.1 this happens after all vertices are \fred at most once, hence after\nat most n \frings, so after at most\n\u2211\nv2V (G)dG(v) = 2m chip movements. If s0 = s, then we\nhave found a critical con\fguration; otherwise forget s and repeat the procedure with s0.\nOf course, crucial to the practical success of the approach above is some knowledge about\nthe number of times the procedure above needs to be repeated. An upper bound for this\nnumber will be determined in the following sections.\nWe \fnish this section by showing that there exists an even more e\u000ecient way to\nrecognize a critical con\fguration: we do not have to remember a candidate con\fguration,\nbut only have to remember whether or not every vertex has yet been \fred.\nTheorem 3.6. Let G be a connected graph and s a con\fguration on G. Let \u001b = v1; : : : ; vk\nbe a legal sequence for s chosen such that:\n(i) applying \u001b to s results in a stable con\fguration s0;\n(ii) every vertex appears at least once in \u001b.\nThen s0 is a critical con\fguration.\nIf, moreover, \u001b has been chosen such that, additionally,\n(iii) no subsequence v1; : : : ; v\u2018 with \u2018 < k has properties (i) and (ii),\nthen, if q appears in \u001b, the stable con\fguration, that appears just before the last time q is\n\fred when applying \u001b, is equal to s0. This is in fact the \frst time a critical con\fguration is\nobtained.\n514 J. van den Heuvel\nProof. We use induction on k. Suppose \frst that v1 appears more than once in \u001b. Then\nwe can apply the induction hypothesis on the con\fguration obtained after v1 has been\n\fred and the sequence \u001b0 = v2; : : : ; vk .\nSo we can assume that v1 appears only once in \u001b. If every vertex appears only once\nin \u001b, then the con\fguration s0 is the same as the original con\fguration s. Since s0 is a\nstable con\fguration, so is s. This means that s is a critical con\fguration, which proves the\nresult.\nSo assume that some vertex appears more than once in \u001b. Choose vi such that there\nexists an j > i with vj = vi and such that j is minimal with that property. First suppose\nthat vi = q. Let s be the con\fguration obtained from s by adding e(v; q) to s(v) for every\nv 2 NG(q). (This is the con\fguration obtained from s by \fring q if that had been legal.)\nThen the sequence \u001b = v1; : : : ; vi\u22121; vi+1; : : : ; vk , in which each vertex appears at least once,\nis legal for s. Applying the induction hypothesis to s and \u001b proves the result.\nHence we can assume vi 6= q. By the choice of vi, every vertex appears at most once in\nthe sequence \u001c = v1; : : : ; vi\u22121; vi; vi+1; : : : ; vj\u22121, and when \u001c has been applied to s, vi is ready\nagain. But since vi loses dG(vi) chips and gains at most\u2211\nu2NG(vi)\ne(u; vi) = dG(vi)\nchips, vi must have been ready when we started applying \u001c. Let s\n0 be the con\fguration\nobtained from s by \fring vertex vi. Then the sequence \u001b = v1; : : : ; vi\u22121; vi+1; : : : ; vk , in which\neach vertex appears at least once, is legal for s0. Now apply the induction hypothesis to s0\nand \u001b to obtain the result.\nThe following result, which follows directly by combining Theorems 3.4 and 3.6, is a\ncrucial observation for later sections.\nCorollary 3.7. Let s be a con\fguration. Suppose that, after applying a legal sequence for s\nin which each vertex, except possibly q, appears at least once, a stable con\fguration s0 is\nobtained. Then s0 is a critical con\fguration.\nCorollary 3.8. Let c be a critical con\fguration. Let s be a con\fguration with s(v) > c(v)\nfor all v 2 V (G) n fqg. Then the \frst stable con\fguration that appears after applying a\n(possibly empty) legal sequence to s is a critical con\fguration.\nProof. Let c and s be the con\fgurations obtained from c and s, respectively, by\nadding e(v; q) to c(v) and s(v) for every v 2 NG(q). (These are the con\fgurations obtained\nby \fring q if that had been legal.) Then there exists a legal sequence \u001b = v1; : : : ; vn\u22121 for c\ncontaining every vertex in V (G) n fqg. Since s(v) > c(v) for all v 2 V (G) n fqg, \u001b is also\nlegal for s by Lemma 2.3. Now construct a legal sequence \u001b for s starting with \u001b, not\ncontaining q, and resulting in a stable con\fguration s0. Since \u001b contains each vertex in\nV (G) n fqg at least once, s0 is a critical con\fguration. But after having applied \u001b on s, we\nhave the original con\fguration s. Applying the part of \u001b after \u001b to s hence leads to the\n\frst stable con\fguration s0, being a critical con\fguration.\nAlgorithmic Aspects of a Chip-Firing Game 515\nCorollary 3.9. Let c1; c2 be two critical con\fgurations and set s = c1 + c2 (vector addi-\ntion). Then the \frst stable con\fguration that appears after applying a (possibly empty) legal\nsequence to s is a critical con\fguration, and hence is equal to c1 \u000f c2.\nProof. This follows directly from Corollary 3.8 upon noting that c2(v) > 0 by Corol-\nlary 3.5, and hence s(v) > c1(v), for all v 2 V (G) n fqg.\n4. Dynamics of the dollar game\nIn order to obtain an answer to the question, \u2018How long does it take before a stable or\ncritical con\fguration is reached?\u2019, we are going to look at the dollar game as some kind\nof dynamic process. In order to do this, we need to de\fne a unit of time.\nLet s be a con\fguration in the dollar game. A cycle for s is a sequence \u001b such that:\n(S1) if s is not a stable con\fguration, then \u001b = v1; : : : ; vk is a legal sequence for s such\nthat \u001b does not contain q, every other vertex appears at most once in \u001b, and k is as\nlarge as possible under these conditions;\n(S2) if s is a stable con\fguration, then \u001b = q; v1; : : : ; vk is a legal sequence for s such that\nevery vertex (including q) appears at most once in \u001b, and k is as large as possible\nunder these conditions.\nNote that a cycle is not uniquely determined by s. But the following lemma, which is a\ndirect consequence of Theorem 2.5, shows that some properties of a cycle are completely\ndetermined.\nLemma 4.1. Let s be a con\fguration and let \u001b1; \u001b2 be two cycles of s. Then a vertex\nappears the same number of times in \u001b1 as in \u001b2.\nIn particular, it follows that the con\fguration s0 obtained after applying a cycle to s is\nindependent of the exact choice of the cycle, but is completely determined by s.\nLet s be a starting con\fguration in the dollar game. We call s the con\fguration at\ntime 0 of the game, denoting s = s0. If the con\fguration st at time t is de\fned, then\nthe con\fguration at time (t + 1) is de\fned as the con\fguration obtained by applying\none cycle to st. Because of Lemma 4.1 this means that, for every t 2 f0; 1; 2; 3; : : : g, the\ncon\fguration st at time t is uniquely de\fned.\nWe complete this short section by giving some properties of the con\fgurations st.\nLemma 4.2. Let st be the con\fguration of the dollar game at time t, de\fned on a graph G\nwith n vertices and m edges.\n(a) The con\fguration st+1 can be obtained from st by \fring every vertex at most once.\n(b) Con\fguration st+1 can be obtained from st in at most n \frings.\n(c) Con\fguration st+1 can be obtained from st in at most 2m chip movements.\nProof. Statements (a) and (b) follow directly from the de\fnition of a cycle for st in (S1)\nor (S2). For (c), observe that \fring a vertex v 2 V (G) involves dG(v) chip movements. Hence\n\fring every vertex at most once involves at most\n\u2211\nv2V (G)dG(v) = 2m chip movements.\n516 J. van den Heuvel\nLemma 4.3. Let s0 be the starting con\fguration of a dollar game on a graph G. Then, for\nany v 2 V (G) n fqg and t 2 f0; 1; 2; : : : g, we have:\n(a) if st(v) < 0, then st(v) 6 st0 (v) 6 dG(v)\u2212 1 for all t0 > t;\n(b) if 0 6 st(v) 6 dG(v)\u2212 1, then 0 6 st0 (v) 6 dG(v)\u2212 1 for all t0 > t;\n(c) if st(v) > dG(v), then 0 6 st0 (v) 6 st(v) for all t0 > t.\nProof. Let v 2 V (G) n fqg and t 2 f0; 1; 2; : : : g, and let \u001b be a cycle for st. Since every\nvertex u 2 V (G) n fvg appears at most once in \u001b, v receives at most\u2211\nu2V (G)nfvg\ne(u; v) = dG(v)\nchips when applying the cycle to st. On the other hand, v itself is only \fred if s(v) > dG(v)\nfor a certain con\fguration, and then v loses dG(v) chips during the cycle.\nIf st(v) < 0, then v is not \fred in the cycle \u001b, and hence st(v) 6 st+1(v) 6 st(v) + dG(v) <\ndG(v). If st(v) > dG(v), then v is certainly \fred in the cycle, which gives 0 6 st(v)\u2212 dG(v) 6\nst+1(v) 6 st(v). And if 0 6 st(v) 6 dG(v) \u2212 1, and v is not \fred in the cycle \u001b, then\n0 6 st(v) 6 st+1(v) < dG(v). Finally, if 0 6 st(v) 6 dG(v)\u2212 1, and while applying the cycle \u001b\nwe obtain a con\fguration s with s(v) > dG(v), then v will be \fred in the cycle and hence\n0 6 st+1(v) 6 st(v) + dG(v)\u2212 dG(v) = st(v) 6 dG(v)\u2212 1.\nThe result follows by setting t0 = t+ i and applying induction on i.\n5. Basic theory of the oil game\nOur main tool in analysing the discrete dollar game will be a continuous version of the\ngame. In order to develop intuition for what is happening in this game, one can consider\nit as an oil game, in which quantities of oil instead of chips are transported from one\nvertex of the graph to another.\nAs in the dollar game we will assume that we are given a \fnite, undirected, connected\ngraph G and one special vertex q 2 V (G). At a certain time we assume that each\nvertex v 2 V (G) n fqg contains a quantity r(v) of oil, which can be negative. An (n \u2212 1)-\nvertex r of all oil quantities is called a con\fguration of the oil game. The flow of oil out\nof a vertex v is indicated by \u2019(v), where \u2019(v) is always nonnegative. We interpret \u2019(v)\nas the amount of oil per unit of time that is pumped away from v through each of the\nedges incident with v. The value of \u2019(v), given a con\fguration r, will be determined by\nthe following set of rules.\n(O1a) If v 2 V (G) n fqg with r(v) < 0, then no oil will be pumped away from v; hence\n\u2019(v) = 0.\n(O1b) If v 2 V (G) n fqg with r(v) > 0, then a flow of one unit of oil per unit of time per\nedge will be pumped away from v; hence \u2019(v) = 1.\n(O1c) If v 2 V (G) n fqg with r(v) = 0, then all input of oil that v receives from its\nneighbours will be pumped away from v as well, evenly distributed over all edges\nincident with v.\n(O2a) If v = q and there exists a vertex u 2 V (G) n fqg with r(u) > 0, then q will output\nno oil; hence \u2019(q) = 0.\nAlgorithmic Aspects of a Chip-Firing Game 517\n(O2b) If v = q and r(u) 6 0 for all u 2 V (G) n fqg, then one unit of oil per unit of time\nper edge will be pumped away from q; hence \u2019(q) = 1.\nAnother way to describe the oil game is by saying that the oil flow in a game with\ncon\fguration r is determined by the solutions \u2019(v), v 2 V (G), of the following collection\nof equations:\n\u2019(v) =\n\uf8f1\uf8f4\uf8f4\uf8f4\uf8f2\uf8f4\uf8f4\uf8f4\uf8f3\n0; if r(v) < 0;\n1\ndG(v)\n\u2211\nu2NG(v)\ne(u; v)\u2019(u); if r(v) = 0;\n1; if r(v) > 0;\nfor all v 2 V (G) n fqg; (5.1)\n\u2019(q) =\n{\n0; if there exists a u 2 V (G) n fqg with r(u) > 0;\n1; if for all u 2 V (G) n fqg we have r(u) 6 0: (5.2)\nWe say that a vertex v 2 V (G) n fqg is passive if r(v) < 0, saturated if r(v) = 0, and\nactive if r(v) > 0. The vertex q is active if no other vertex is active, and passive otherwise.\nFor a certain con\fguration r, let Var be the set of active vertices and V\np\nr the set of passive\nvertices.\nLooking at the equations for \u2019 in (5.1) and (5.2), it appears that we can interpret \u2019\nas an electrical flow in a certain electrical network, as described below. See, e.g., [10,\nChapters II and IX] for de\fnitions and the theory of electrical networks needed.\nProposition 5.1. The oil flow \u2019(v), v 2 V (G), in a connected graph G with con\fguration r\nis equal to the potential solution of the electrical network on the vertices of G in which\nthe conductance between two vertices u; v is e(u; v), the vertices in Vpr have potential 0, the\nvertices in Var have potential 1, and the vertices in V (G) n (Var [ Vpr ) satisfy Kirchho\u000b \u2019s\ncurrency law, that is,\ndG(v)\u2019(v) =\n\u2211\nu2NG(v)\ne(u; v)\u2019(u); for v 2 V (G) n (Var [ Vpr ):\nNote in particular that the theory of electrical networks guarantees a unique solution\nto the potential problem on a connected graph. So we get that the oil flow \u2019 is uniquely\ndetermined by equations (5.1) and (5.2).\nLemma 5.2. For a con\fguration r, we have that 0 6 \u2019(v) 6 1 for all v 2 V (G).\nProof. Suppose that there exists a con\fguration r for which \u2019(v) > 1 for some v 2 V (G).\nChoose v such that \u2019(v) is maximum. Because of equation (5.2), this means that v 6= q.\nAccording to (5.1) we \fnd that r(v) = 0 and\n\u2019(v) =\n1\ndG(v)\n\u2211\nu2NG(v)\ne(u; v)\u2019(u):\nSince \u2019(u) 6 \u2019(v) for all u 2 V (G), this gives\ndG(v)\u2019(v) =\n\u2211\nu2NG(v)\ne(u; v)\u2019(u) 6\n\u2211\nu2NG(v)\ne(u; v)\u2019(v) = dG(v)\u2019(v):\n518 J. van den Heuvel\nSo we must have equality; in particular it must hold that \u2019(u) = \u2019(v) for all u 2 NG(v).\nContinuing the same reasoning for the neighbours of v, and using that G is connected, we\nobtain that \u2019(u) = \u2019(v) > 1 for all u 2 V (G). This contradicts the fact that \u2019(q) 2 f0; 1g.\nA similar argument gives a contradiction if \u2019(v) < 0 for some v 2 V (G).\n6. Dynamics of the oil game\nThe picture of the oil game sketched in the previous section is that of a static game. We\nwill now add a dynamical element, interpreting the oil flows \u2019 as quantities of oil that\nare added or removed from the amounts of oil r(v) at a vertex v. In order to emphasize\nthis dynamical behaviour we index the variables with the time t: rt and \u2019t. The values\nof \u2019t, given rt, are determined by equations (5.1) and (5.2). The dynamics of rt will be\ndetermined by the equation\nd\ndt\nrt(v) = \u2212dG(v)\u2019t(v) +\n\u2211\nu2NG(v)\ne(u; v)\u2019t(u); for all v 2 V (G) n fqg: (6.1)\nWe usually assume that the game starts at time t = 0 with a con\fguration r0.\nLemma 6.1. For any v 2 V (G) n fqg and t > 0 we have:\n(a) if rt(v) < 0, then rt(v) 6 rt0 (v) 6 0 for all t0 > t;\n(b) if rt(v) = 0, then rt(v) = rt0 (v) = 0 for all t\n0 > t;\n(c) if rt(v) > 0, then 0 6 rt0 (v) 6 rt(v) for all t0 > t.\nProof. If rt(v) = 0, then equations (5.1) and (6.1) give that\nd\ndt\nrt(v) = 0; hence rt0 (v) =\nrt(v) = 0 for all t\n0 > t.\nIf rt(v) < 0, then \u2019t(v) = 0 by equation (5.1). From Lemma 5.2 we learn that \u2019t(u) > 0\nfor all u 2 V (G) Using equation (6.1) this means that\nd\ndt\nrt(v) = \u2212dG(v) \u0001 0 +\n\u2211\nu2NG(v)\ne(u; v)\u2019t(u) > 0;\nand hence rt0 (v) > rt(v) for t0 > t as long as rt0 (v) < 0. But once rt0 (v) = 0, we get that\nrt00 (v) = rt0 (v) = 0 for t\n00 > t0.\nIf rt(v) > 0, then we can do a similar reasoning using that \u2019t(v) = 1 and \u2019t(u) 6 1 for\nall u 2 V (G), hence\nd\ndt\nrt(v) = \u2212dG(v) \u0001 1 +\n\u2211\nu2NG(v)\ne(u; v)\u2019t(u) 6 0:\nAn active con\fguration of the oil game is a con\fguration r in which r(v) > 0 for some\nv 2 V (G) n fqg; otherwise the con\fguration is called inactive. Note that the vertex q is\npassive in an active con\fguration and active in an inactive con\fguration. A recurrent\ncon\fguration of the oil game is a con\fguration such that the total inflow and outflow is\nthe same for each vertex. In particular, if rt is a recurrent con\fguration, then\nd\ndt\nrt = 0\nby equation (6.1) and hence rt0 = rt for all t\n0 > t. So a recurrent con\fguration of the oil\ngame can be considered as some kind of \u2018critical con\fguration\u2019 of the oil game.\nAlgorithmic Aspects of a Chip-Firing Game 519\nThe following are the two crucial results concerning recurrent con\fgurations of the oil\ngame. Recall that krk = \u2211v2V (G)nfqgjr(v)j. De\fne\nkrk+ = \u2211\nv2V (G)nfqg; r(v)>0\nr(v) =\n\u2211\nv2Var nfqg\nr(v);\nkrk\u2212 = \u2211\nv2V (G)nfqg; r(v)<0\njr(v)j = \u2211\nv2Vpr nfqg\n\u2212r(v):\nTheorem 6.2. For a connected graph G, the only recurrent con\fguration of the oil game is\nthe con\fguration r0 = 0. For the oil game in the recurrent con\fguration r0, we have that\n\u2019(v) = 1.\nTheorem 6.3. Let G be a connected graph on n vertices and with edge-connectivity \u0015, and\nlet r0 be a starting con\fguration of the oil game on G.\n(a) If r0 is active, then, for any t > 3 n kr0k+=(\u0015+ 1), rt is a passive con\fguration.\n(b) If r0 is passive, then, for any t > 3 n kr0k\u2212=(\u0015+ 1), rt = r0.\n(c) For any t > 3 n kr0k=(\u0015+ 1) we have that rt = r0.\nTheorem 6.3 will follow from results later in this section.\nProof of Theorem 6.2. It is obvious that r0 is a recurrent con\fguration with \u2019(v) = 1 for\nall v 2 V (G).\nLet rt be a con\fguration in which some vertices in V (G) n fqg are active; hence\n\u2019t(v) = 1 for some v 2 V (G) n fqg. Since G is connected and \u2019t(q) = 0, there must be\nvertices v 2 V (G)n fqg and u 2 NG(v), such that \u2019t(v) = 1 and \u2019t(u) < 1. Then ddt rt(v) < 0,\nand hence r cannot be a recurrent con\fguration.\nIf rt is a con\fguration in which q is active, hence \u2019t(q) = 1, but not all vertices are\nsaturated, then we can \fnd vertices v 2 V (G) n fqg and u 2 NG(v), such that \u2019t(v) = 0\nand \u2019t(u) > 0. Then\nd\ndt\nrt(v) > 0, and again we must conclude that r is not a recurrent\ncon\fguration.\nAnother way to phrase Theorem 6.2 is to say that a con\fguration is not recurrent as\nlong as there are passive vertices. It also follows from the proof of the theorem that, in a\nnon-recurrent con\fguration, there is a net oil flow from the active to the passive vertices.\nIt is the amount of this net flow which will be the crucial parameter that determines how\nlong it takes before we reach the recurrent con\fguration r0.\nGiven a con\fguration r 6= r0 on G, the graph G\u0003 is obtained from G by contracting\nall vertices of Var into one vertex a\n\u0003 and similarly all vertices of Vpr into one vertex p\u0003,\nremoving loops but not multiple edges. If r is inactive (hence q 2 Var ), then we set q\u0003 = a\u0003\nand r\u0003(p\u0003) =\n\u2211\nv2Vpr r(v); similarly, if r is active (hence q 2 Vpr ), then we set q\u0003 = p\u0003 and\nr\u0003(a\u0003) =\n\u2211\nv2Var r(v). For vertices v 2 V (G) n (Var [ Vpr ) we set r\u0003(v) = r(v).\nThe following lemma can be proved using the theory of electrical networks, using\nProposition 5.1. For completeness we give a more intuitive proof.\n520 J. van den Heuvel\nLemma 6.4. For a non-recurrent con\fguration r, the net flow in G from the active to the\npassive vertices is the same as the net flow in G\u0003, with con\fguration r\u0003, from the unique\nactive vertex in G\u0003 to the unique passive vertex in G\u0003.\nProof. If there exists an edge in G between two passive vertices, then no flow occurs\nalong this edge. Similarly, for an edge between two active vertices, we have that a flow of\nsize 1 goes in both directions; hence no net flow goes through such an edge. So we can\nremove any of this type of edge without changing the flow pattern in the remainder of\nthe graph. Thus we can assume that there are no edges in G between vertices in Var and\nbetween vertices in Vpr . Next suppose that r is active. If we identify two vertices from V\na\nr\nforming one new vertex, adapting r in the appropriate way, then again we see that this\ndoes not change the flow pattern, since the flow out of the new vertex is the same as the\ntotal flow out of the two original vertices. A similar observation applies when di\u000berent\nvertices from Vpr are identi\fed. Continuing with this identi\fcation process, we eventually\nobtain the graph G\u0003 with con\fguration r\u0003 in which the same flow pattern appears as\nit did in G with con\fguration r. In particular, the total net flow from the active to the\npassive vertices is the same before and after the contraction.\nGiven a graph G with non-recurrent con\fguration r, let \u2019\u0003 be the flow in the graph G\u0003\nwith con\fguration r\u0003. The following is a translation of Lemma 6.4, using equation (6.1).\nCorollary 6.5. For a non-recurrent con\fguration rt on G at time t, we have the following\nproperties.\n(a) It holds that \u2019\u0003t (a\u0003) = 1. Moreover, if rt is active (hence q =2 Var and a\u0003 6= q\u0003), then\nd\ndt\nr\u0003t (a\u0003) = \u2212dG\u0003(a\u0003) +\n\u2211\nu2NG\u0003 (a\u0003)\ne(u; a\u0003)\u2019\u0003t (u)\n=\n\u2211\nv2Vart\n[\n\u2212 dG(v) + \u2211\nu2NG(v)\ne(u; v)\u2019(v)\n]\n=\n\u2211\nv2Vart\nd\ndt\nrt(v):\n(b) It holds that \u2019\u0003t (p\u0003) = 0. Moreover, if rt is inactive (hence q =2 Vpr and p\u0003 6= q\u0003), then\nd\ndt\nr\u0003t (p\u0003) =\n\u2211\nu2NG\u0003 (p\u0003)\ne(u; p\u0003)\u2019\u0003t (u) =\n\u2211\nv2Vprt\n[ \u2211\nu2NG(v)\ne(u; v)\u2019(v)\n]\n=\n\u2211\nv2Vprt\nd\ndt\nrt(v):\nThe main advantage of Lemma 6.4 and Corollary 6.5 is that an instance of the oil\nproblem, with possibly many active and\/or passive vertices, is translated into an instance\nwith only one active and one passive vertex. This will prove a major advantage once we\nreturn to the relationship between oil flows and electrical networks.\nFor the graph G\u0003 de\fne Re\u000b(a\u0003; p\u0003) as the e\u000bective resistance between a\u0003 and p\u0003, i.e.,\nthe resistance between a\u0003 and p\u0003 in the electrical network given by the graph G\u0003 if all\nedges are assumed to be resistors with resistance one. Here we assume that multiple edges\nappear as multiple resistors. Another way to obtain the same is by replacing an edge\nAlgorithmic Aspects of a Chip-Firing Game 521\nwith multiplicity e by one resistor with resistance 1=e. De\fne the e\u000bective conductance\nCe\u000b(a\n\u0003; p\u0003) as 1=Re\u000b(a\u0003; p\u0003).\nTheorem 6.6. Let rt be a non-recurrent con\fguration on a connected graph G at time t.\n(a) If rt is active, then\n\u2211\nv2Vart\nd\ndt\nrt(v) = \u2212Ce\u000b(a\u0003; p\u0003).\n(b) If rt is inactive, then\n\u2211\nv2Vprt\nd\ndt\nrt(v) = Ce\u000b(a\n\u0003; p\u0003).\nProof. We only prove the case that rt is active, the other case being similar. The flow \u2019\n\u0003\nt\nis the solution of the potential problem on the network represented by the graph G\u0003 in\nwhich every edge has unit resistance, where we set \u2019\u0003t (a\u0003) = 1, \u2019\u0003t (p\u0003) = 0, and where we\nrequire that Kirchho\u000b\u2019s currency law holds for all other vertices. This means that the\nelectrical flow from a\u0003 to a neighbouring vertex u 2 NG\u0003(a\u0003) through the e(u; a\u0003) edges\nconnecting u and a\u0003 is equal to e(u; a\u0003) \u0001 (\u2019\u0003t (a\u0003) \u2212 \u2019\u0003t (u)). (Recall that every edge has\nresistance one.) So the total electrical flow away from a\u0003 is equal to\u2211\nu2NG\u0003 (a\u0003)\ne(u; a\u0003) \u0001 (\u2019\u0003t (a\u0003)\u2212 \u2019\u0003t (u)) =\n\u2211\nu2NG\u0003 (a\u0003)\ne(u; a\u0003) \u0001 1\u2212 \u2211\nu2NG\u0003 (a\u0003)\ne(u; a\u0003)\u2019\u0003t (u)\n= dG\u0003(a\n\u0003)\u2212 \u2211\nu2NG\u0003 (a\u0003)\ne(u; a\u0003)\u2019\u0003t (u):\nThis flow is equal to the flow from a\u0003 to p\u0003, hence equal to Ce\u000b(a\u0003; p\u0003), and the result\nfollows from Corollary 6.5(a).\nIn order to use Theorem 6.6 we want to have a lower bound for Ce\u000b(a\n\u0003; p\u0003). Several of\nthese lower bounds exist in the literature. However, many of them involve the degrees of\nthe graph under consideration. Since we are working with the graph G\u0003, which can have\ndegrees that are quite di\u000berent from G, we need to do a little translation to get a lower\nbound depending on G only. The following is implicit in the proof of [12, Theorem 6].\nLemma 6.7 (Coppersmith, Feige and Shearer [12]). For any pair of vertices s and t in a\nconnected graph H , the e\u000bective conductance between s and t satis\fes\nCe\u000b(s; t) >\n[\n3\n\u2211\nv2V (H)\n1\ndH (v) + 1\n]\u22121\n:\nCorollary 6.8. Let rt be a non-recurrent con\fguration on the graph G with n vertices\nand edge-connectivity \u0015, and let G\u0003 be as de\fned above Lemma 6.4. Then the e\u000bective\nconductance between a\u0003 and p\u0003 in G\u0003 satis\fes Ce\u000b(a\u0003; p\u0003) > \u0015+13 n .\nProof. Let G\u0003 have n\u0003 vertices and edge-connectivity \u0015\u0003. Since dG\u0003(v) > \u0015\u0003 for all\nv 2 V (G\u0003), we \fnd from Lemma 6.7 that Ce\u000b(a\u0003; p\u0003) > \u0015\u0003+13 n\u0003 . Since contraction does not\nreduce the edge-connectivity, we have \u0015\u0003 > \u0015. Since trivially n\u0003 6 n, the result follows.\n522 J. van den Heuvel\nWe now can give the proof of Theorem 6.3.\nProof of Theorem 6.3. Let rt be an active con\fguration on G. From Theorem 6.6 and\nCorollary 6.8 it follows that \u2211\nv2Vart\nd\ndt\nrt(v) < \u2212\u0015+ 1\n3 n\n:\nNote that this bound is independent of the set of vertices Var , although this set will change\nover time. In particular we \fnd that\u2211\nv2Vart\nrt(v) <\n\u2211\nv2Var0\nr0(v)\u2212 t \u0001 \u0015+ 1\n3 n\n= kr0k+ \u2212 t \u0001 \u0015+ 1\n3 n\n:\nSince for an active con\fguration r we must have\n\u2211\nv2Var r(v) > 0, it is impossible that the\ncon\fguration is still active for t > 3 n kr0k+=(\u0015+ 1), thus proving part (a).\nThe proof of (b) is similar.\nSo let r0 be any con\fguration. Let t\np be the moment in time in which the con\fguration\nturns passive, where it is possible that tp = 0. From (b) we see that, for any t >\ntp + 3 n krtpk\u2212=(\u0015+ 1), rt is the recurrent con\fguration. Hence, if t > 3 n kr0k+=(\u0015+ 1) +\n3 n krtpk\u2212=(\u0015+ 1), then rt = r0. From Lemma 6.1 we obtain krtpk\u2212 6 kr0k\u2212, which gives\nkr0k = kr0k+ + kr0k\u2212 > kr0k+ + krtpk\u2212. So, if t > 3 n kr0k=(\u0015+ 1), then rt = r0, which\ncompletes the proof of Theorem 6.3.\n7. From a con\fguration in the dollar game to a critical con\fguration\nTheorem 6.3 gives upper bounds on the time it takes before an initial con\fguration in\nthe oil game reaches the recurrent state. In this section we obtain similar results for the\ndollar game. The main tools will be results that show connections between instances of\nthe dollar game on a graph and certain instances of the oil game on the same graph.\nApplying Theorem 6.3 then makes it possible to give upper bounds on the time it takes\nbefore an initial con\fguration in the dollar game reaches its critical state. (Here \u2018time\u2019\nis used in the sense of Section 4.) Once we have these results, we can \fnally obtain the\nresults announced in the Introduction.\nWe begin with some additional notation. For a starting con\fguration r0 of the oil game\non a graph G, a vertex v 2 V (G), and any real number t > 0, de\fne \u2019t(v) and rt as in\nSection 6. Also de\fne \bt(v) =\n\u222b t\n0\n\u2019x(v) dx. Because of Lemma 5.2, 0 6 \bt(v) 6 t.\nFor a starting con\fguration s0 of the dollar game on G, a vertex v 2 V (G), and any\ninteger t > 0, de\fne st as in Section 4. For t > 1 de\fne  t(v) as the number of times that\nvertex v has been \fred when going from con\fguration st\u22121 to st (hence  t(v) 2 f0; 1g),\nand de\fne \u03a8t(v) =\n\u2211t\nz=1 z(v). Set  0(v) = \u03a80(v) = 0. We again obtain 0 6 \u03a8t(v) 6 t for\nall t > 0.\nWe can interpret \bt(v) as the total amount of oil that has flowed away from vertex v\nthrough any edge incident with v during the time from 0 to t. Similarly, \u03a8t(v) is the total\nnumber of chips that have moved away from v along each edge incident with v between\nAlgorithmic Aspects of a Chip-Firing Game 523\ntime 0 and time t. From the rules for the dollar game and the oil game, for all integers\nt > 0, we get\nst(v) = s0(v)\u2212 dG(v) \u03a8t(v) +\n\u2211\nu2NG(v)\ne(u; v) \u03a8t(u);\nrt(v) = r0(v)\u2212 dG(v) \bt(v) +\n\u2211\nu2NG(v)\ne(u; v) \bt(u);\nwhich gives\nst(v)\u2212rt(v)\n= s0(v)\u2212 r0(v)\u2212 dG(v) (\u03a8t(v)\u2212 \bt(v)) +\n\u2211\nu2NG(v)\ne(u; v) (\u03a8t(u)\u2212 \bt(u)): (7.1)\nThe next two lemmas form the key results connecting the dollar game and the oil game.\nLemma 7.1. Let s0 be a starting con\fguration for the dollar game on the graph G, and\nsuppose that s0 is stable. De\fne the starting con\fguration r0 for the oil game on G by\nr0(v) = s0(v)\u2212 dG(v) + 1 for v 2 V (G) n fqg. Then, for all v 2 V (G) and integers t > 0, we\nhave \bt(v) 6 \u03a8t(v).\nProof. Suppose the result is false, so that \bt(v) > \u03a8t(v) for some v 2 V (G) and t > 0.\nChoose v 2 V (G) such that \u03a8t(v) \u2212 \bt(v) < 0 is minimal. It follows from Lemma 4.3(a),\n(b), that for every integer z > 0 the con\fguration sz is stable, and hence  z(q) = 1. This\ngives \u03a8t(q) = t. By Lemma 5.2 we have that \bt(q) 6 t. This means that v cannot be equal\nto q.\nSince s0 is a stable con\fguration, we have s0(v) 6 dG(v) \u2212 1; hence r0(v) 6 0 and in\nfact rx(v) 6 0 for all x > 0 by Lemma 6.1(a), (b). If rt(v) < 0, then by Lemma 6.1(a) also\nrx(v) < 0 for all real numbers x with 0 6 x 6 t. But then \u2019x(v) = 0 for all 0 6 x 6 t and\nhence \bt(v) = 0, contradicting that \bt(v) > \u03a8t(v) > 0. We conclude that rt(v) = 0.\nSince v was chosen such that \u03a8t(u) \u2212 \bt(u) > \u03a8t(v) \u2212 \bt(v) for all u 2 V (G), we get\nfrom equation (7.1) that\nst(v)\u2212 rt(v) > s0(v)\u2212 r0(v) +\n( \u2211\nu2NG(v)\ne(u; v)\u2212 dG(v)\n)\n(\u03a8t(v)\u2212 \bt(v))\n= s0(v)\u2212 r0(v):\nBecause rt(v) = 0 and s0(v)\u2212 r0(v) = dG(v)\u2212 1, this means st(v) > dG(v)\u2212 1. On the other\nhand, by Lemma 4.3(a), (b) we have that st(v) 6 dG(v)\u2212 1. Hence we must have equality\nin every inequality used so far. In particular we \fnd that \u03a8t(u)\u2212\bt(u) = \u03a8t(v)\u2212\bt(v) < 0\nfor all u 2 NG(v). Using that G is connected, we can continue the reasoning to conclude\nthat \u03a8t(u) \u2212 \bt(u) < 0 for all u 2 V (G). But this contradicts the observation in the \frst\nparagraph of this proof that \u03a8t(q)\u2212 \bt(q) > 0.\nLemma 7.2. Let s0 be a starting con\fguration for the dollar game on the graph G, and\nsuppose that s0 is not stable. De\fne the starting con\fguration r0 for the oil game on G by\nr0(v) = s0(v) for v 2 V (G) n fqg.\n524 J. van den Heuvel\n(a) For all integers t > 0 such that st is not stable, we have that \u03a8t(v) 6 \bt(v) for all\nv 2 V (G).\n(b) For all integers t > 0 such that st is not stable, if st(v) > dG(v) for a v 2 V (G) n fqg,\nthen st(v) 6 rt(v).\nProof. Suppose that (a) is false, so that \u03a8t(v) > \bt(v) for some t > 0 and v 2 V (G)\nwhile st is still not stable. Choose v 2 V (G) such that \u03a8t(v) \u2212 \bt(v) > 0 is maximal. It\nfollows from Lemma 4.3(c) that sz is not stable, and so  z(q) = 0, for every z 2 f0; 1; : : : ; tg.\nThis gives that \u03a8t(q) = 0 6 \bt(q), and hence v 6= q.\nSince \u03a8t(v) > \bt(v) > 0, we must have that  z(v) = 1 for some z 2 f1; 2; : : : ; tg and\nhence sz\u22121(v) > 0. By Lemma 4.3(b), (c) this means that st(v) > 0 as well. Also, because of\n\bt(v) < \u03a8t(v) 6 t, we must have that \u2019x(v) = 0 for some real number x, with 0 6 x 6 t\nand hence rx(v) 6 0. By Lemma 6.1(a), (b) this means rt(v) 6 0 as well.\nNow recall that v was chosen such that \u03a8t(u)\u2212 \bt(u) 6 \u03a8t(v)\u2212 \bt(v) for all u 2 V (G).\nUsing this in equation (7.1) gives st(v)\u2212 rt(v) 6 s0(v)\u2212 r0(v) = 0, and so st(v) 6 rt(v) 6 0.\nBut since st(v) > 0, we must have equality in every inequality used so far. In particular we\n\fnd that \u03a8t(u) \u2212 \bt(u) = \u03a8t(v) \u2212 \bt(v) > 0 for all u 2 NG(v). Using that G is connected,\nwe can continue the reasoning to conclude that \u03a8t(u) \u2212 \bt(u) > 0 for all u 2 V (G). But\nthis contradicts the observation in the \frst paragraph of this proof that \u03a8t(q)\u2212\bt(q) 6 0.\nThis completes the proof of part (a).\nFor part (b), let t > 0 be an integer such that st is not stable and suppose v 2 V (G)nfqg\nwith st(v) > dG(v). Because of Lemma 4.3(a), (b) this gives that sz(v) > dG(v) for all\nz 2 f0; 1; : : : ; tg. Hence  z(v) = 1 for all z 2 f1; 2; : : : ; tg and so \u03a8t(v) = t > \bt(v).\nUsing part (a), this means \u03a8t(v) = \bt(v). Combining this with the knowledge from (a)\nthat \u03a8t(u) \u2212 \bt(u) 6 0 for all u 2 V (G), we get from equation (7.1) that st(v) \u2212 rt(v) 6\ns0(v)\u2212 r0(v) = 0, which proves part (b).\nWe are now ready to prove the most important theorem in this paper.\nTheorem 7.3. Let s0 be a starting con\fguration of the dollar game on the graph G with n\nvertices, m edges, and edge-connectivity \u0015.\n(a) Then, for any integer t > 3 n ks0k+=(\u0015+ 1), st is a stable con\fguration.\n(b) And, for any integer t > 3 n (ks0k+ 2m)=(\u0015+ 1) + 1, st is a critical con\fguration.\nProof. De\fne the starting con\fguration r0 of the oil game on G as in Lemma 7.2 and let\nt > 3 n ks0k+=(\u0015+ 1) be an integer. Since ks0k+ = kr0k+, Theorem 6.3(a) gives that rt is a\npassive con\fguration of the oil game. Hence rt(v) 6 0 for all v 2 V (G) n fqg. Following\nLemma 7.2(b), this means that st is stable, or st(v) 6 dG(v) \u2212 1 or st(v) 6 rt(v) 6 0 for\nall v 2 V (G) n fqg. All possibilities lead to the conclusion that st is stable, thus proving\npart (a).\nLet ts > 0 be the smallest integer such that sts is stable. De\fne the con\fguration r0 for\nthe oil game by setting r0(v) = sts (v)\u2212dG(v)+1 for all v 2 V (G)nfqg. From Theorem 6.3(b)\nit follows that if t0 > 3 n kr0k\u2212=(\u0015+ 1), then rt0 = r0. The second statement in Theorem 6.2\nstates that, once we reach the recurrent con\fguration of the oil game, we have a constant\nAlgorithmic Aspects of a Chip-Firing Game 525\noil flow \u2019(v) = 1 through each edge. In particular, for all t0 > 3 n kr0k\u2212=(\u0015+ 1), we have\nthat \bt0 (v) > 0 for all v 2 V (G). Because of Lemma 7.1, this means that \u03a8t00 (v) > 0 for all\nv 2 V (G) and all integers t00 > ts + 3 n kr0k\u2212=(\u0015+ 1). But if \u03a8t00 (v) > 0 for every v 2 V (G),\nthen every vertex must have \fred at least once. Because of Corollary 3.7, we can conclude\nthat st00 is a critical con\fguration. From part (a) we know\nts 6\n\u2308\n3 n ks0k+\n\u0015+ 1\n\u2309\n<\n3 n ks0k+\n\u0015+ 1\n+ 1:\nWe also know that, if s0(v) < 0, then s0(v) 6 sts (v) 6 dG(v)\u2212 1, hence s0(v)\u2212 dG(v) + 1 6\nr0(v) 6 0; and if s0(v) > 0, then sts (v) > 0, hence \u2212dG(v) + 1 6 r0(v). We \fnd\nkr0k\u2212 6 ks0k\u2212 +\n\u2211\nv2V (G)nfqg\ndG(v) < ks0k\u2212 + 2m:\nCombining everything, this gives that, for all integers t with\nt >\n3 n ks0k+\n\u0015+ 1\n+ 1 +\n3 n (ks0k\u2212 + 2m)\n\u0015+ 1\n=\n3 n (ks0k+ 2m)\n\u0015+ 1\n+ 1;\nst is a critical con\fguration.\nCorollary 7.4. Let s0 be a starting con\fguration of the dollar game on the graph G with n\nvertices and edge-connectivity \u0015.\n(a) If s0 is not stable, then, after at most 3 n\n2 ks0k+=(\u0015+ 1) \frings, involving at most\n6 nm ks0k+=(\u0015+ 1) chip movements, a stable con\fguration is obtained.\n(b) And, after at most 3 n2 (ks0k+ 2m)=(\u0015+ 1) + n \frings, involving at most 6 nm (ks0k+\n2m)=(\u0015+ 1) + 2m chip movements, a critical con\fguration is obtained.\nProof. This follows directly by combining Theorem 7.3 with Lemma 4.2(b) and (c).\nWe can now prove most of the theorems in Section 1. Theorem 1.5 follows directly\nfrom Corollary 7.4(b).\nProof of Theorem 1.6. Using Corollary 3.5, the vector sum c1 + c2 of two critical\ncon\fgurations c1; c2 satis\fes 0 6 (c1 + c2)(v) 6 2 dG(v)\u22122 for all v 2 V (G)n fqg. This gives\nkc1 + c2k < 2\n\u2211\nv2V (G)nfqg\ndG(v) 6 4m:\nFrom Corollary 7.4(a) we see that this means that, after at most O(n2 m\u0015\u22121) \frings,\ninvolving at most O(nm2 \u0015\u22121) chip movements, a stable con\fguration is obtained. By\nCorollary 3.9 this stable con\fguration is in fact equal to c1 \u000f c2.\n8. Another way to obtain a critical con\fguration\nIn this section we show how, starting with any con\fguration s0 of the dollar game on\na graph G, we can \fnd a stable con\fguration s such that \u03b3(s) = \u03b3(s0) and ksk 6 2m.\n526 J. van den Heuvel\nFollowing Corollary 7.4(b), we see that we need at most 12 n2 m=(\u0015+ 1)+n \frings, involving\nat most 24 nm2=(\u0015+ 1) + 2m chip movements, to \fnd \u03b3(s) for such an s. The crucial fact\nis that this con\fguration s can be found very rapidly, provided we allow ourselves to\nperform arithmetic operations involving rationals with numerator and denominator of\nthe order maxfmaxv2V (G)nfqg js(v)j; \u0014g.\nThe approach in this section is based on a more algebraic way to look at con\fgurations\nof the dollar game. Let the Laplacian matrix Q of G be the n\u0002 n matrix with\nQ(u; v) =\n{\u2212e(u; v); if u 6= v;\ndG(u); if u = v;\nfor all u; v 2 V (G):\nLet Qq denote the matrix obtained from Q by deleting the row and column corresponding\nto the vertex q, and let Q+q denote the matrix obtained from Q by only deleting the row\ncorresponding to q. It is well known (see, e.g., [3]) that the determinant of Qq is equal to\nthe tree number \u0014. For a vertex v 2 V (G), let cq(v) be the column of Q+q corresponding\nto v, which is the same column in Qq for v 6= q. It is easy to show that\ncq(q) = \u2212\n\u2211\nv2V (G)nfqg\ncq(v): (8.1)\nThe following lemma follows directly by comparing the de\fnition of \fring a vertex\nwith the de\fnition of Q. Also recall the de\fnition of a legal sequence and a representative\nvector from the \frst two sections.\nLemma 8.1.\n(a) For any vertex v 2 V (G), \fring vertex v when we are in a con\fguration s results in\nthe con\fguration s\u2212 cq(v).\n(b) Let s be a con\fguration, \u001b = v1; : : : ; vk a \fnite sequence of vertices which is legal for s,\nand x\u001b the representative vector of \u001b. Suppose that after applying \u001b to s we obtain the\ncon\fguration s0. Then\ns0 = s\u2212 Q+q x\u001b = s+\n\u2211\nv2V (G)nfqg\n(x\u001b(q)\u2212 x\u001b(v)) cq(v): (8.2)\nLet Zn\u22121 be the (n \u2212 1)-dimensional vector-space over the integers, with coe\u000ecients\nindexed by elements of V (G) n fqg. And let Cz be the subspace of Zn\u22121 spanned by all\ninteger linear combinations of the columns of Qq . It can be shown that if G is a connected\ngraph, then the matrix Qq is nonsingular and hence Cz has dimension n \u2212 1. Since Zn\u22121\nwith normal vector addition has the structure of an abelian group, and Cz is a subgroup\nof this group, we also have that the quotient Zn\u22121=Cz is an abelian group. Since Cz is of\nfull dimension, this quotient group is \fnite. It is called the Picard group in [4, 5].\nAs normal, for an a 2 Zn\u22121 the coset of a in Zn\u22121=Cz will be denoted by [a]. It follows\nfrom Lemma 8.1(b) that, if s is a con\fguration with legal sequence \u001b, and s0 is the\ncon\fguration obtained after \u001b has been applied, then [s0] = [s]. This gives that, for any\ns 2 Zn\u22121, [s] = [\u03b3(s)].\nAlgorithmic Aspects of a Chip-Firing Game 527\nThe following result, which immediately gives Theorem 1.2, is proved in [4, 5]. Note\nthat the observation in the previous paragraph establishes the surjectivity of \u0018.\nTheorem 8.2 (Biggs [4, 5]). The function \u0018 : K \u2212! Zn\u22121=Cz de\fned by \u0018(c) = [c] is a\nbijection.\nIt follows from Theorem 8.2 and the de\fnition of Cz as the subspace formed by integer\nlinear combinations of the columns of Qq that, for any con\fguration s and z 2 Zn\u22121, if\nwe set s0 = s+ Qq z, then \u03b3(s0) = \u03b3(s).\nFor a real number a, let bac be the floor of a, that is, the largest integer smaller than or\nequal to a; and for a vector a, let bac be the integral vector obtained by taking the floor\nof every coe\u000ecient of a. For a con\fguration of the dollar game s on a graph G de\fne\ns = s\u2212 Qq bQ\u22121q sc:\nSince bQ\u22121q sc 2 Zn\u22121, we have that \u03b3(s) = \u03b3(s).\nLemma 8.3. For any con\fguration s we have that \u2212dG(v) + 1 6 s(v) 6 dG(v) \u2212 1 for all\nv 2 V (G) n fqg.\nProof. First set t = Q\u22121q s \u2212 bQ\u22121q sc, hence 0 6 t(v) < 1 for all v 2 V (G) n fqg. We \fnd\nthat\ns = s\u2212 Qq bQ\u22121q sc = Qq(Q\u22121q s\u2212 bQ\u22121q sc) = Qq t:\nIt follows that, for all v 2 V (G) n fqg,\ns(v) = (Qq t)(v) = t(v) dG(v)\u2212\n\u2211\nu2NG(v)nfqg\nt(u) e(u; v):\nSince 0 6 t(u) < 1 for all u 2 V (G) n fqg, we also have that\n0 6 t(v) dG(v) < dG(v) and 0 6\n\u2211\nu2NG(v)nfqg\nt(u) e(u; v) < dG(v):\nThis gives that \u2212dG(v) < s(v) < dG(v) for all v 2 V (G) n fqg. The result follows from the\nfact that s is an integral vector.\nWe are now ready to give the proof of Theorem 1.7.\nProof of Theorem 1.6. Let s be any con\fguration of the dollar game on the graph G. Set\nt = Q\u22121q s\u2212 bQ\u22121q sc, hence s = Qq t. We also have \u03b3(s) = \u03b3(s).\nIn order to determine t, we \frst calculate Q\u22121q s. This is the product of an (n\u22121)\u0002 (n\u22121)\nmatrix with an (n \u2212 1)-vector, which involves O(n2) operations. The entries of Q\u22121q\nare rational numbers with numerator and denominator of the order det(Qq). Since, as\nmentioned before, det(Qq) = \u0014, the number of spanning trees of G, we \fnd that to\ndetermine Q\u22121q s we need to do O(n2) arithmetic operations involving rational numbers\nwith numerator and denominator of the order maxf\u0014; maxv2V (G)nfqg js(v)jg.\n528 J. van den Heuvel\nOnce Q\u22121q s is calculated, t = Q\u22121q s\u2212bQ\u22121q sc can be found in O(n) arithmetic operations.\nAnd then to determine s = Qq t takes O(n\n2) operations, although this time, because of\nLemma 8.3, we are working with integers of order maxv2V (G)nfqg dG(v). So in total we see\nthat s can be found using O(n2) arithmetic operations.\nOnce s has been found, we start the normal chip-\fring operations to \fnd \u03b3(s). By\nLemma 8.3 we have that\nksk = \u2211\nv2V (G)nfqg\njs(v)j < \u2211\nv2V (G)\ndG(v) = 2m:\nBecause of Corollary 7.4(b) we \fnd that \u03b3(s) will be reached after O(n2 m\u0015\u22121) \frings,\ninvolving at most O(nm2 \u0015\u22121) chip movements. This completes the proof of the theorem.\nRemark. The procedure described in the proof above assumes that the inverse matrix Q\u22121q\nhas been determined before we start the calculations. The reason for this assumption is\nthat the same matrix Q\u22121q is used every time \u03b3(s) must be found for a con\fguration s;\nhence it seems reasonable to determine and store Q\u22121q when \u03b3(s) is needed for many initial\ncon\fgurations s.\nIf we cannot assume that the inverse matrix Q\u22121q is known beforehand, then we can \fnd\nQ\u22121q s by solving the system of linear equations Qq x = s. Using straightforward Gaussian\nelimination, this will involve O(n3) arithmetic operations (in fact it is possible to do it\nmore rapidly), instead of the O(n2) mentioned in Theorem 1.7.\nReferences\n[1] Bak, P. (1996) How Nature Works: The Science of Self-Organised Criticality, Springer.\n[2] Bak, P., Tang, C. and Weisenfeld, K. (1988) Self-organised criticality. Phys. Rev. A 38 364{374.\n[3] Biggs, N. (1993) Algebraic Graph Theory, 2nd edn, Cambridge University Press.\n[4] Biggs, N. L. (1999) Chip \fring and the critical group of a graph. J. Alg. Combin. 9 25{45.\n[5] Biggs, N. (1997) Algebraic potential theory on graphs. Bull. London Math. Soc. 29 641{682.\n[6] Biggs, N. (1999) The Tutte polynomial as a growth function. J. Alg. Combin. 10 115{133.\n[7] Biggs, N. and Winkler, P. (1997) Chip-\fring and the chromatic polynomial. Preprint, London\nSchool of Economics.\n[8] Bjo\u00a8rner, A. and Lov\u0013asz, L. (1992) Chip-\fring games on directed graphs. J. Alg. Combin. 1\n305{328.\n[9] Bjo\u00a8rner, A., Lov\u0013asz, L. and Schor, P. W. (1991) Chip-\fring games on graphs. Europ. J. Combin.\n12 283{291.\n[10] Bollob\u0013as, B. (1998) Modern Graph Theory, Springer.\n[11] Bondy, J. A. and Murty, U. S. R. (1976) Graph Theory with Applications, Macmillan and\nElsevier.\n[12] Coppersmith, D., Feige, U. and Shearer, J. (1996) Random walks on regular and irregular\ngraphs. SIAM J. Discrete Math. 9 301{308.\n[13] Dhar, D. (1990) Self-organised critical state of sandpile automation models. Phys. Rev. Lett.\n64 1613{1616.\n[14] Dhar, D., Ruelle, P., Sen, S. and Verma, D. (1995) Algebraic aspects of abelian sandpile models.\nJ. Phys. A 28 805{831.\n[15] Eriksson, K. (1991) No polynomial bound for the chip \fring game on directed graphs. Proc.\nAmer. Math. Soc. 112 1203{1205.\nAlgorithmic Aspects of a Chip-Firing Game 529\n[16] Gro\u00a8tschel, M., Lov\u0013asz, L. and Schrijver, A. (1993) Geometric Algorithms and Combinatorial\nOptimization, 2nd corr. edn, Springer.\n[17] van den Heuvel, J. Random generation of spanning trees involving chip-\fring. In preparation.\n[18] Lov\u0013asz, L. and Winkler, P. (1995) Mixing of random walks and other di\u000busions on a graph. In\nSurveys in Combinatorics, 1995 (P. Rowlinson, ed.), Cambridge University Press, pp. 119{154.\n[19] Merino Lopez, C. (1997) Chip-\fring and the Tutte polynomial. Ann. Combin. 1 253{259.\n[20] Moore, C. and Nilsson, M. (1999) The computational complexity of sandpiles. J. Statist. Phys.\n96 205{224.\n[21] Rossin, D. (1999) On the complexity of addition in the sandpile group of a graph. Preprint.\n[22] Tardos, G. (1988) Polynomial bound for a chip \fring game on graphs. SIAM J. Discrete Math.\n1 397{398.\n"}