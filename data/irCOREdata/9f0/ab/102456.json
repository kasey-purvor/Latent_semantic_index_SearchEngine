{"doi":"10.1109\/SIPS.2005.1579947","coreId":"102456","oai":"oai:epubs.surrey.ac.uk:1917","identifiers":["oai:epubs.surrey.ac.uk:1917","10.1109\/SIPS.2005.1579947"],"title":"Robust digital image-in-video watermarking for the emerging H.264\/AVC standard","authors":["Zhang, Jing","Ho, Anthony T. S."],"enrichments":{"references":[],"documentType":{"type":1}},"contributors":[],"datePublished":"2005-11-02","abstract":"<p>A novel grayscale watermark pre-processing and a robust video watermarking algorithm for the emerging video coding standard H.264\/AVC are proposed in this paper for the copyright protection application. This algorithm can insert grayscale watermark patterns such as detailed trademarks or logos into the low bit-rate H.264\/AVC videos in the compressed domain with good robustness and high capacity. The marked video sequences maintain good visual quality and the same overall consuming bit-rate. The proposed algorithm can robustly survive transcoding process and common signal processing, such as bit-rate reduction, Gaussian filtering and contrast enhancement. <\/p","downloadUrl":"","fullTextIdentifier":null,"pdfHashValue":null,"publisher":null,"rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:epubs.surrey.ac.uk:1917<\/identifier><datestamp>\n      2017-10-31T14:03:38Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      74797065733D636F6E666572656E63655F6974656D<\/setSpec><setSpec>\n      6469766973696F6E733D656E67616E64706879736963616C736369656E636573:436F6D707574696E67<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/epubs.surrey.ac.uk\/1917\/<\/dc:relation><dc:title>\n        Robust digital image-in-video watermarking for the emerging H.264\/AVC standard<\/dc:title><dc:creator>\n        Zhang, Jing<\/dc:creator><dc:creator>\n        Ho, Anthony T. S.<\/dc:creator><dc:description>\n        <p>A novel grayscale watermark pre-processing and a robust video watermarking algorithm for the emerging video coding standard H.264\/AVC are proposed in this paper for the copyright protection application. This algorithm can insert grayscale watermark patterns such as detailed trademarks or logos into the low bit-rate H.264\/AVC videos in the compressed domain with good robustness and high capacity. The marked video sequences maintain good visual quality and the same overall consuming bit-rate. The proposed algorithm can robustly survive transcoding process and common signal processing, such as bit-rate reduction, Gaussian filtering and contrast enhancement. <\/p><\/dc:description><dc:date>\n        2005-11-02<\/dc:date><dc:type>\n        Conference or Workshop Item<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:format>\n        text<\/dc:format><dc:language>\n        en<\/dc:language><dc:identifier>\n        http:\/\/epubs.surrey.ac.uk\/1917\/1\/fulltext.pdf<\/dc:identifier><dc:identifier>\n          Zhang, Jing and Ho, Anthony T. S.  (2005) Robust digital image-in-video watermarking for the emerging H.264\/AVC standard  In: IEEE Workshop on Signal Processing Systems Design and Implementation, 2005..     <\/dc:identifier><dc:relation>\n        10.1109\/SIPS.2005.1579947<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/epubs.surrey.ac.uk\/1917\/","10.1109\/SIPS.2005.1579947"],"year":2005,"topics":[],"subject":["Conference or Workshop Item","PeerReviewed"],"fullText":"Robust Digital Image-in-video Watermarking for the\nEmerging H.264\/AVC Standard\nJing Zhang and Anthony T. S. Ho\nCenter for Information Security\nSchool of Electrical and Electronic Engineering\nNanyang Technological University\nSingapore 639798\nEmail: Jingzhang@pmail.ntu.edu.sg; etsho@ntu.edu.sg\nAbstract\u2014 A novel grayscale watermark pre-processing and a\nrobust video watermarking algorithm for the emerging video\ncoding standard H.264\/AVC are proposed in this paper for\nthe copyright protection application. This algorithm can insert\ngrayscale watermark patterns such as detailed trademarks or\nlogos into the low bit-rate H.264\/AVC videos in the compressed\ndomain with good robustness and high capacity. The marked\nvideo sequences maintain good visual quality and the same overall\nconsuming bit-rate. The proposed algorithm can robustly survive\ntranscoding process and common signal processing, such as bit-\nrate reduction, Gaussian filtering and contrast enhancement.\nI. INTRODUCTION\nThe progress in multimedia storage and transmission tech-\nnology has allowed an ever increasing amount of information\nin digital format for archiving and transmission. However,\nthe ease of copying and reproducing digital data is more\nlikely to encourage the work of pirates and hackers, since\nit enables perfect copies with no loss in data quality. Digital\nwatermarking represents a valid solution to the above problem,\nsince it is possible to identify the source, author, creator,\nowner, distributor or authorized consumer of digitized images,\nvideo recordings or audio recordings. A digital watermark is\nan identification code, permanently embedded into digital data,\ncarrying information pertaining to copyright protection.\nDigital video watermarking algorithms can be sorted ac-\ncording to the embedding domain, such as the spatial domain,\ncompressed domain, and bitstream domain. Compressed-\ndomain watermarking methods arouse great interests among\nresearchers. Hartung et al. [1] embedded spread-spectrum wa-\ntermark into the MPEG-2 bitstream with drift compensation,\nbut the capacity is reduced. Arena et al. [2] watermarked\nthe MPEG-2 video using interleaved coding. The differential\nenergy watermark method has been extended to video from\nstill images by watermarking the I-frames of an MPEG stream\nas in [3]. However, most of the previous works were focusing\non MPEG standards for high bit-rate applications rather than\nlow bit-rate videos (\u2264 1 Mbit\/s).\nThe H.264\/AVC standard is specially designed for low bit-\nrate applications. It significantly improves the coding effi-\nciency with the help of many enhanced functional features,\nsuch as tree-structured motion compensation, Lagrangian Op-\ntimization and 4 \u00d7 4 Integer DCT [4]. However, higher\ncompression ratio leads to the difficulty in balancing among\ntradeoff requirements for watermarking video data [5], [6].\nThis paper describes a digital watermarking scheme of\nH.264\/AVC video format, working directly in the compressed\ndomain. Although the idea of compressed-domain watermark-\ning of videos is not new, our work addresses the highly\ncompressed format of the H.264\/AVC standard. The scheme\nmakes an accurate usage of the video encoder for watermark\nembedding, and experimental results exhibit robust results for\nthis low bit-rate format under transcoding and common signal\nprocessing. In the digital rights management system, company\ntrademarks and logos are always considered as excellent\nwatermark for copyright protection [5]. Hence, this paper\nalso proposes a novel pre-processing for grayscale watermark\npatterns which can efficiently compress the 2-D grayscale\npatterns for embedding. This can also help to solve the low\ncapacity problem for watermarking the H.264\/AVC video due\nto the high compression performance of this state-of-that-art\nvideo standard.\nThe grayscale watermark pre-processing method is intro-\nduced in the next section. The proposed watermarking method\nbased on the emerging H.264\/AVC standard will also be\ndescribed. The simulation results and conclusions will be given\nin Section III and Section IV, respectively.\nII. PROPOSED WATERMARKING ALGORITHM\nIn this paper, 2-D texture grayscale trademarks and logos\nare first pre-processed and then embedded as the robust wa-\ntermarks for copyright protection for H.264\/AVC video data.\nFigure 1 shows the watermarking embedding scheme consist-\ning of grayscale watermark pre-processing and H.264\/AVC\nencoder with watermark embedding.\nA. Grayscale Watermark Pre-processing\nThe advancement in video coding technology has led to a\nsignificant decrease in redundancy for watermark embedding.\nFor example, in bi-predicted frames of a video clip with\nlow motion at a low coding bit-rate, most coefficients after\nprediction are zero [6]. Accordingly, the watermark should\nbe pre-processed to decrease the data size for embedding,\nif complex watermarks in such as 2-D grayscale company\ntrademarks are used. A grayscale watermark pre-processing\n0-7803-9333-3\/05\/$20.00 \u00a92005 IEEE SIPS 2005657\n4x4 Integer\r\nDCT\r\nQ\r\nWatermark\r\nGain\r\nD(u,v)\r D\r*\r(u,v)\rd(x,y)\r\nWatermark\r\n-\r\nInverse\r\nQ &\r\nDCT\r\nFrame\r\nBuffer\r\nIntra\/Inter\r\nPrediction &\r\nMode Decision\r\nGrayscale\r\npatterns\r\n(N by N )\r\nGrayscale Watermark\r\nPre-processing\r\nRaw Video\r H.264 Encoder\r\nMarked\r\nCompressed\r\nVideo\r\nKey\r\nGrayscale\r\npatterns\r\n(N by N )\r\n1-D seuquence\r\nInteger\r\nDCT\r\nTransformation\r\nFrequency\r\nMasking\r\nZigzag\r\nScanning\r\nLevel Reduction\r\n(a) Video Watermarking scheme\r\n(b) Grayscale Watermark Pre-processing\r\n(c) H.264 Encoder with Watermark embedding\r\nE\r\nFig. 1. Watermark embedding scheme.\nis proposed to deal with this problem in 4 primary steps as\nfollows.\n1) 4\u00d74 Integer DCT: The grayscale pattern is first decom-\nposed into non-overlapping 4\u00d7 4 blocks, denoted by m(x, y)\n(0 \u2264 x, y \u2264 3). Each block m(x, y) is transformed by\nM(u, v) = DCT{m(x, y)} 0 \u2264 u, v \u2264 3 (1)\nwhere DCT{\u00b7} represents the less complex but more accurate\ninteger DCT with the fixed block-size 4\u00d74 which is uniquely\nused in H.264\/AVC [4]. This transform has many fundamental\ndifferences from the traditional DCT, which contribute to a bet-\nter performance for video coding [4] and digital watermarking\n[5].\n2) Zigzag Scanning and Frequency Masking: After zigzag\nscanning, from the 4 \u00d7 4 transformed block we obtain 16\ncoefficients M(j), where j \u2208 [0, 15] indicates the position in\nzigzag scanning. There are several lowest frequencies which\npossess the significant energy with sufficient information for\nthe pattern reconstruction. To achieve higher efficiency, a mask\nis applied to select the top 6 coefficients and discard the other\ncomponents.\n3) Transformation: After masking, there is a significant\ndifference between the dynamic range of every two adjacent\ncoefficients. We need to narrow the dynamic ranges of these\ncoefficients. Otherwise this can introduce undesirable distor-\ntion during watermarking. Thus, the remaining coefficients\nM(j) are transformed to reduce the dynamic range as follows:\nM \u2032(j) =\nM(j) +A(j)\nB(j)\n0 \u2264 j < 15 (2)\nwhere A(j) and B(j) represent the corresponding transforma-\ntion parameters to j, where j \u2208 [0, 15] indicates the position\nin zigzag scanning.\n4) Level Reduction: The coefficients M \u2032(j) after transfor-\nmation have multiple values, M \u2032(j) \u2208 [1, 7]. They can be\n658\nfurther simplified to be binary, denoted by w(j) as\nw(j) \u2261 [M \u2032(j)]mod2 (3)\nK(j) = M \u2032(j)\/2 (4)\nWatermark patterns can then be reconstructed from the 1-D\noutput sequence w obtained from the pre-processing and the\nkey file K .\nAfter the grayscale watermark pre-processing, a 2-D\ngrayscale watermark pattern with the size N\u00d7N (with N\u00d7N\nspacial pixels) can be compressed into a binary sequence w\nwith the shortest length 3N2\/8. This significantly decreases\nthe watermarking payload for every frame by approximately\n63%.\nB. H.264\/AVC Watermarking Method\n1) Watermark Embedding: In the next stage, the binary\nsequence w is first mapped into a bipolar sequence as follows:\nw\u2032(i) = (\u22121)w(i) i \u2208 N (5)\nwhere i and N indicate the position index and the length of\nthe binary sequence w.\nThe bipolar sequence w\u2032 is secondly modulated by the\nSpread-Spectrum method in [7] to obtain the watermark se-\nquence for embedding, denoted by ws.\nDue to the significant compression efficiency of the\nH.264\/AVC standard, the remaining DCT coefficients of the\nresidual data are perceptually essential. Thus, during the\nH.264\/AVC encoding process, only one middle frequency\nD(u, v) in the diagonal position in a 4 \u00d7 4 DCT block is\nsubstituted by\nD\u2217(u, v) = \u03b1 \u00b7 \u03b2i \u00b7 w\ns\ni (6)\nwhere u and v indicate the position of the coefficient, wsi is\nthe spread-spectrum watermark component, both \u03b1 and \u03b2i are\npositive gain factors to maintain a good visual quality of the\nmarked video, and i denotes the position of the block, i \u2208 R.\nThe embedded watermark wsi is a bipolar component. Thus,\nfrom Equ. 6, the watermark information is embedded into\nthe polarity the frequency component by replacing operation,\ninstead of modulating the amplitude in traditional addition\nembedding methods:\nsign\n(\nD\u2217(u, v)\n)\n= wsi (7)\nDuring video processing and transcoding process, the ampli-\ntude of the H.264\/AVC compressed video data can be altered\nin a very wide dynamic range. The algorithm will be highly\nfragile if watermark is inserted by amplitude modification.\nTherefore, embedding watermark components into the data\npolarity can help increase the robustness of the watermarking\nscheme.\nThe gain factor \u03b1 is derived empirically. However, it can\nbe adaptively altered according to the best prediction mode of\nthe current block. The local gain factor \u03b2i is obtained from\nthe DC coefficient D(0, 0) and the AC coefficients D(u, v):\n\u03b2i = \u00b5\n\u2211\n1\u2264u\u22643\n1\u2264v\u22643\n\u2223\u2223D(u, v)\u2223\u2223\u2212D(0, 0) (8)\nwhere \u00b5 is the the weighting factor which balances the DC\nand AC coefficients.\nFrom this formula, the local watermark gain is determined\nby the local motion activity from the integer DCT coefficients\nof the residual error. The DC coefficient represents the lumi-\nnance of the block, and the sum of the AC coefficient D(u, v)\nrepresents the spatial activity of the block. The performance\ntradeoff between the DC and AC coefficients can be adjusted\nby the weighting factor \u00b5. If the current block is in an area\nwith a significant amount of motion activity, the residual\nerror should also contain motion information. Otherwise, the\nresidual will be zeros or negligible if the block is located in\nthe motionless background. The local gain factor can alter\nadaptively according to the local motion activity. The human\nvisual system is more sensitive to the distortion in smooth\nareas than textured areas, motionless areas than areas with\nmotion activity. The local watermark gain can be linked with\nperceptual masking adaptively with the visual content.\nTo increase compression efficiency, the H.264\/AVC standard\nsupports a tree-structured motion compensation [4] with 7\nInter-prediction modes for each macroblock S as well as two\nIntra-prediction modes: 16\u00d7 16, 16\u00d7 8, 8\u00d7 16, 8\u00d7 8, 8\u00d7 4,\n4 \u00d7 8 and 4 \u00d7 4 for Inter-prediction, I16 \u00d7 16 and I4 \u00d7 4\nfor Intra-prediction. A larger partition size is suitable for still\nareas and a smaller partition size is suitable for areas with\ndetailed motion.\nAfter embedding wsi into all the available Inter\/Intra modes\n(denoted by I), the best mode o\u2217 for the marked macroblock\nMB\u2217 is selected by minimizing the expression in Eq. (9)\nwithin the constrained R and minimized D, using Lagrangian\nOptimization technique [4] of H.264\/AVC:\no\u2217 = argmin\no\u2208I\n(\nD(MB\u2217, o) + \u03bbR(MB\u2217, o)\n)\n(9)\nwhere \u03bb denotes the predetermined Lagrangian multiplier\nfor mode choice, and D and R represent the distortion and\nconsumed bits for encoding the current mode o, respectively.\n2) Watermark Retrieval: For extraction, the original em-\nbedded watermark components are not needed. At the\nH.264\/AVC Decoder, one watermark coefficient w\u02c6si can be\nestimated by the sign of the corresponding marked quantized\ncoefficient D\u02c6q(u, v) in each 4\u00d7 4 block:\nw\u02c6si = sign\n(\nD\u02c6q(u, v)\n)\n0 \u2264 u, v \u2264 3, i \u2208 R (10)\nThe Hamming distance H between the extracted watermark\nw\u02c6s and the original spread-spectrum chip sequence is com-\nputed. The extracted bit w\u02c6i can be derived from the Hamming\ndistance with an appropriate threshold \u03c4 . w\u02c6i = 1 if H > \u03c4 ;\nw\u02c6i = 0 if H < \u2212\u03c4 .\nC. Grayscale Watermark Post-precessing\nAfter extracting the sequence w\u02c6i from the compressed\nH.264 video, the grayscale watermark is reconstructed by per-\nforming an inverse operation of the watermark pre-processing.\n659\n(     =0.9327)\r(     =0.9482)\r\n(a) Original\r (b) Reconstructed\r (c) Extracted\r\nFig. 2. Samples of The Original, Reconstructed and Extracted Watermarks\nfrom the 30th Frame of Stefan (768 kbit\/s, CIF-size) and Normalized Corre-\nlation.\nIII. RESULTS AND ANALYSIS\nIn our experiments, the proposed H.264\/AVC watermarking\nalgorithm has been integrated into the H.264 JM-7.6 reference\nsoftware [8]. The standard test video clips include Foreman,\nStefan, Coastguard, Flower Garden, Container Ship, and\nSilent. All the first 100 frames are coded at 15 frames\/s at\n768 kbits\/s, 512 kbits\/s and 396 kbist\/s, respectively. B-frames\nare not used in our experiments because there are very few\nnonzero DCT coefficients due to the efficient compression\nperformance.\nA small 16 \u00d7 16 grayscale watermark is used as the\nwatermark pattern for our experiments. Figure 2 shows the re-\nconstructed watermark without watermarking and the retrieved\nsamples from the marked Stefan (768 kbit\/s, CIF-size). These\nreconstructed watermark samples are highly correlated to the\noriginal pattern. This demonstrates and supports the feasibility\nof the proposed grayscale watermark pre-processing technique.\nFigure 3 shows the frame samples from the unmarked\nand marked video clips with PSNR(dB). The unmarked and\nmarked video clips are reconstructed from the compressed data\nwithout and with watermarks, respectively. The average PSNR\nvalues are computed by comparing the reconstructed video\nframes to the original raw video frames.\nOn average, the watermark insertion leads to a decrease of\napproximately 0.97 dB for all video clips coded at 768 kbits\/s,\n0.96 dB at 512 kbits\/s and 0.64 dB at kbits\/s, which are all\nless than 1 dB. In the experiments, no visible artifacts can be\nobserved in all of the test video sequences.\nTwo categories of video attacks have been applied to the\nmarked video to test the robustness of the watermarking algo-\nrithm: transcoding and common signal processing processes.\nIn the first group, we utilized the bit-rate reduction. Dur-\ning watermarking in the H.264\/AVC encoding process, the\nLagrangian Optimization technique targets the overall con-\nsuming bit-rate at 768 kbits\/s, 512 kbits\/s and 396 kbits\/s.\nWhen transcoding is applied after watermarking, the bit-rates\nhave been reduced to approximately 1\/2 and even 1\/3 of\nthe original bit-rates. During re-encoding with the bit-rate\nreduction, most high frequency components which represent\ndetailed texture will be discarded, especially when the bit-rates\nhave been decreased to the 1\/3. Our robust method can still\nrobustly survive under such strong attacks.\nAfter decoding the marked bitstream, common signal pro-\ncessing attacks are applied to the raw video frame by frame,\nincluding 5 \u00d7 5 Gaussian low-pass filtering, circular averag-\ning filtering, unsharpened contrast enhancement, and additive\nGaussian noise (mean=0, variance= 0.001).\nFigure 4 shows the examples of attacked Stefan (768 kbit\/s,\nCIF-size). The visual quality decreases significantly. For ex-\nample, the PSNR values decrease approximately 6.7dB and\n6.3dB when under contrast enhancement and Gaussian noise,\nrespectively.\nThe robustness is measured by the normalized correlation\nbetween the original grayscale watermark and the extracted\nand results are presented in Table I and Table II.\nTable I and Table II show that the proposed watermarking\nalgorithm together with the watermark pre-processing can\nsurvive strong attacks, such as bit-rate reduction, contrast\nenhancement and Gaussian noise. The watermark patterns can\ntolerate the distortion introduced by some incorrect extracted\nwatermark components, and perform better than binary wa-\ntermark sequences. Moreover, the fact that the watermark\ncomponents are embedding into the polarities of the DCT\ncoefficients of the residual data, instead of modifying the\namplitude also play an important role in increasing the robust-\nness of the algorithm. Further more, by applying the spread-\nspectrum to the pre-processed watermark components before\nembedding repeatedly spreads the watermark components into\nevery macroblock of each frame. This also increases the\nrobustness of our algorithm.\nIV. CONCLUSIONS\nThe proposed grayscale watermark pre-processing with the\npresented video watermarking algorithm for copyright protec-\ntion technique performed well in terms of robustness and data\ncapacity. The watermarked H.264\/AVC video clips maintained\nthe good visual quality and almost the same Bit-rate. Other\nmore detailed copyright information, such as textured com-\npany trademarks or logos can also be used as watermark to\nfurther protect ownership and defend against illegal attacks.\nREFERENCES\n[1] F. Hartung and B. Girod, \u201cWatermarking of uncompressed and com-\npressed video,\u201d Signal Processing, vol. 66, no. 3, pp. 283-301, May 1998.\n[2] S. Arena, M. Caramma and R. Lancini, \u201cDigital watermarking applied\nto MPEG-2 coded video sequences exploiting space and frequency\nmasking,\u201d The IEEE International Conf. on Image Processing, pp. 1987-\n1990, Sep. 2000.\n[3] G. Langelaar and R. Lagendijk, \u201cOptimal differential energy watermark-\ning of DCT encoded images and video,\u201d IEEE Trans. Signal Processing:\nImage Commun., vol. 10, pp. 148-158, 2001.\n[4] T. Wiegang, G.J. Sullivan, G. Bj\u00f8ntegaard, and A. Luthra, \u201cOverview of\nthe H.264\/AVC video coding standard,\u201d IEEE Trans. Circuits Syst. Video\nTechnol., vol. 13, no. 7, pp. 560 -576, Jul. 2003.\n[5] J. Zhang and A.T.S. Ho, \u201cAn efficient digital image-in-image watermark-\ning algorithm using the integer discrete cosine transform (IntDCT),\u201d in\nIEEE Joint Conf. of 4th Int. Conf. Info., Commun. and Signal Processing\nand 4th Pacific-Rim Conf. Multimedia, Dec. 2003.\n[6] G. Qiu, P. Marziliano, A.T.S. Ho, D.J. He, and Q.B. Sun, \u201cA hybrid wa-\ntermarking scheme for H.264\/AVC video,\u201d in Proc. the 17th International\nConference on Pattern Recognition, Cambridge, UK, Aug. 2004.\n[7] A.T.S. Ho, and F. Shu, \u201cA Robust Spread-Spectrum Watermarking\nMethod Using Two-Level Quantization,\u201d in IEEE International Confer-\nence on Image Processing (ICIP 2004), Singapore, Oct. 2004.\n[8] H.264\/AVC Joint Model 7.6 (JM-7.6) Reference Software. [Online].\nAvailable: http:\/\/iphome.hhi.de\/suehring\/tml\/download\/old jm\/.\n660\n(a) Unmarked ( 34.14dB )\r (b) Marked ( 33.58dB )\r\n(c) Unmarked ( 36.58dB )\r (d) Marked ( 36.00dB )\r\nFig. 3. The 20th frames of unmarked and markedFlower((a) and (b)) and Stefan((c) and (d)) (768 kbit\/s, CIF-size).\n(a) To 1\/3 Bit-rate ( 31.04dB )\r (b) Contrast Enhancment (29.32dB)\r\n(d) 5x5 Gaussian filter (30.13dB)\r(c) Gaussian Noise ( 29.66dB )\r\nFig. 4. The 20th frames of Stefan (768 kbit\/s, CIF-size) after attacks\n661\nTABLE I\nTHE ROBUSTNESS AGAINST TRANSCODING ATTACKS, MEASURED BY\nNORMALIZED CORRELATION.(768, 512 AND 396 KBIT\/S, CIF-SIZE)\nVideo Original No To 1\/2 To 1\/3\nBit-rate Attack Bit-rate Bit-rate\nFore- 768 0.93 0.70 0.50\n-man 512 0.79 0.67 0.53\n396 0.72 0.62 0.51\nStefan\n768 0.77 0.69 0.57\n512 0.59 0.58 0.58\n396 0.60 0.59 0.58\ncoast- 768 0.89 0.70 0.57\n-guard 512 0.63 0.60 0.59\n396 0.55 0.56 0.54\nFlower 768 0.92 0.78 0.51\nGarden 512 0.77 0.67 0.50\n396 0.60 0.56 0.54\nSilent\n768 0.95 0.82 0.70\n512 0.89 0.73 0.55\n396 0.87 0.73 0.63\nCon- 768 0.95 0.79 0.63\n-tainer 512 0.93 0.80 0.60\n396 0.80 0.69 0.59\nAve-\n-rage 528 0.84 0.68 0.57\nTABLE II\nTHE ROBUSTNESS AGAINST COMMON SIGNAL PROCESSING (5\u00d7 5\nGAUSSIAN FILTER, CIRCULAR AVERAGING FILTER, UNSHARPENED\nCONTRAST ENHANCEMENT AND GAUSSIAN NOISE), MEASURED BY\nNORMALIZED CORRELATION.(768, 512 AND 396 KBIT\/S, CIF-SIZE)\nVideo Bit- Gau- Cir- Con- Noise\n-rate -ssian cular trast\nFore- 768 0.72 0.87 0.84 0.75\n-man 512 0.62 0.69 0.67 0.62\n396 0.60 0.59 0.76 0.56\nStefan\n768 0.69 0.67 0.70 0.66\n512 0.48 0.52 0.70 0.70\n396 0.51 0.61 0.66 0.61\ncoast- 768 0.76 0.83 0.74 0.77\n-guard 512 0.62 0.62 0.58 0.62\n396 0.56 0.59 0.55 0.54\nFlower 768 0.85 0.89 0.75 0.75\nGarden 512 0.67 0.70 0.67 0.67\n396 0.52 0.59 0.69 0.62\nSilent\n768 0.84 0.81 0.86 0.77\n512 0.68 0.67 0.76 0.63\n396 0.71 0.76 0.72 0.72\nCon- 768 0.77 0.86 0.87 0.70\n-tainer 512 0.59 0.68 0.76 0.73\n396 0.72 0.70 0.83 0.69\nAve-\n-rage 529 0.66 0.70 0.73 0.67\n662\n"}