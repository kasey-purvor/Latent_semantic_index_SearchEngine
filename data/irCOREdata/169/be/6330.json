{"doi":"10.1080\/0968776020100307","coreId":"6330","oai":"oai:generic.eprints.org:391\/core5","identifiers":["oai:generic.eprints.org:391\/core5","10.1080\/0968776020100307"],"title":"Technology\u2010supported environments for learning through cognitive conflict","authors":["McDougall, Anne"],"enrichments":{"references":[{"id":191738,"title":"Changing Minds: Computers, Learning, and Literacy,","authors":[],"date":"2000","doi":"10.5860\/choice.38-2855","raw":"DiSessa, A. (2000), Changing Minds: Computers, Learning, and Literacy, Cambridge, MA: MIT Press.","cites":null},{"id":191741,"title":"Children Designers,","authors":[],"date":"1991","doi":null,"raw":"Harel, I. (1991), Children Designers, Norwood, NJ: Ablex Publishing Corporation.","cites":null},{"id":191744,"title":"Computer-based microworlds - a definition to aid design',","authors":[],"date":"1986","doi":"10.1016\/0360-1315(86)90008-4","raw":"Squires, D. and McDougall, A. (1986), 'Computer-based microworlds - a definition to aid design', Computers and Education, 10 (3), 375-8.","cites":null},{"id":191740,"title":"Inconsistent or discrepant events in science instruction',","authors":[],"date":"1988","doi":"10.1080\/03057268808559946","raw":"Fensham, P. and Kass, H. (1988), 'Inconsistent or discrepant events in science instruction', Studies in Science Education, 15, 1-16.","cites":null},{"id":191737,"title":"Logo for the Apple II,","authors":[],"date":"1982","doi":"10.1007\/978-3-322-89718-3","raw":"Abelson, H. (1982), Logo for the Apple II, Peterborough, NH: Byte\/McGraw-Hill. DiSessa, A. (1982), 'Unlearning Aristotelian physics: a study of knowledge-based learning', Cognitive Science, 6, 1-36.","cites":null},{"id":191742,"title":"Mindstorms: Children, Computers and Powerful Ideas,","authors":[],"date":"1980","doi":"10.1145\/1045071.1045074","raw":"Papert, S. (1980), Mindstorms: Children, Computers and Powerful Ideas, Brighton: Harvester.","cites":null},{"id":191743,"title":"The Development of Thought: Equilibration of Cognitive Structures,","authors":[],"date":"1977","doi":"10.2307\/1175382","raw":"Piaget, J. (1977), The Development of Thought: Equilibration of Cognitive Structures, New York: Viking.","cites":null},{"id":191739,"title":"The Pupil as Scientist?, Milton Keynes:","authors":[],"date":"1983","doi":null,"raw":"Driver, R. (1983), The Pupil as Scientist?, Milton Keynes: Open University Press.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2002","abstract":"This paper examines ways in which the idea of cognitive conflict is used to facilitate learning, looking at the design and use of learning environments for this purpose. Drawing on previous work in science education and educational computing, three approaches to the design of learning environments utilizing cognitive conflict are introduced. These approaches are described as confrontational, guiding and explanatory, based on the level of the designer's concern with learners\u2019 pre\u2010existing understanding, the extent of modification to the learner's conceptual structures intended by the designer, and the directness of steering the learner to the desired understanding. The examples used to illustrate the three approaches are taken from science education, specifically software for learning about Newtonian physics; it is contended however that the argument of the paper applies more broadly, to learning environments for many curriculum areas for school levels and in higher education","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/6330.pdf","fullTextIdentifier":"http:\/\/repository.alt.ac.uk\/391\/1\/ALT_J_Vol10_No3_2002_Technology_supported_environme.pdf","pdfHashValue":"c4eef99482aca9a6ce9a451e5cdd79a498b2ba6e","publisher":"University of Wales Press","rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:generic.eprints.org:391<\/identifier><datestamp>\n      2011-04-04T09:11:04Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      7375626A656374733D4C:4C42<\/setSpec><setSpec>\n      7375626A656374733D4C:4C43:4C4331303232<\/setSpec><setSpec>\n      74797065733D61727469636C65<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/repository.alt.ac.uk\/391\/<\/dc:relation><dc:title>\n        Technology\u2010supported environments for learning through cognitive conflict<\/dc:title><dc:creator>\n        McDougall, Anne<\/dc:creator><dc:subject>\n        LB Theory and practice of education<\/dc:subject><dc:subject>\n        LC1022 - 1022.25 Computer-assisted Education<\/dc:subject><dc:description>\n        This paper examines ways in which the idea of cognitive conflict is used to facilitate learning, looking at the design and use of learning environments for this purpose. Drawing on previous work in science education and educational computing, three approaches to the design of learning environments utilizing cognitive conflict are introduced. These approaches are described as confrontational, guiding and explanatory, based on the level of the designer's concern with learners\u2019 pre\u2010existing understanding, the extent of modification to the learner's conceptual structures intended by the designer, and the directness of steering the learner to the desired understanding. The examples used to illustrate the three approaches are taken from science education, specifically software for learning about Newtonian physics; it is contended however that the argument of the paper applies more broadly, to learning environments for many curriculum areas for school levels and in higher education.<\/dc:description><dc:publisher>\n        University of Wales Press<\/dc:publisher><dc:date>\n        2002<\/dc:date><dc:type>\n        Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:format>\n        application\/pdf<\/dc:format><dc:language>\n        en<\/dc:language><dc:rights>\n        cc_by_nc_nd<\/dc:rights><dc:identifier>\n        http:\/\/repository.alt.ac.uk\/391\/1\/ALT_J_Vol10_No3_2002_Technology_supported_environme.pdf<\/dc:identifier><dc:identifier>\n          McDougall, Anne  (2002) Technology\u2010supported environments for learning through cognitive conflict.  Association for Learning Technology Journal, 10 (3).  pp. 83-91.  ISSN 0968-7769     <\/dc:identifier><dc:relation>\n        10.1080\/0968776020100307<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/repository.alt.ac.uk\/391\/","10.1080\/0968776020100307"],"year":2002,"topics":["LB Theory and practice of education","LC1022 - 1022.25 Computer-assisted Education"],"subject":["Article","PeerReviewed"],"fullText":"Technology-supported environments for\nlearning through cognitive conflict\nAnne McDougall\nThe University of Melbourne\nemail: a.mcdougall@unimelb.edu.au\nThis paper examines ways in which the idea of cognitive conflict is used to facilitate\nlearning, looking at the design and use of learning environments for this purpose.\nDrawing on previous work in science education and educational computing, three\napproaches to the design of learning environments utilizing cognitive conflict are\nintroduced. These approaches are described as confrontational, guiding and explanatory,\nbased on the level of the designer's concern with learners' pre-existing understanding, the\nextent of modification to the learner's conceptual structures intended by the designer,\nand the directness of steering the learner to the desired understanding. The examples\nused to illustrate the three approaches are taken from science education, specifically\nsoftware for learning about Newtonian physics; it is contended however that the\nargument of the paper applies more broadly, to learning environments for many\ncurriculum areas for school levels and in higher education.\nForeword\nI was fortunate to enjoy a friendship of twenty years and a writing collaboration of some\nfifteen years with David Squires. I very much miss our productive and enjoyable\ndiscussions and arguments, his well informed and original contributions to our work, and,\nsince our collaboration was from countries on opposite sides of the world, his frequent\nemail messages. He was a most valued colleague.\nJust before he went into hospital in November 2000, David sent me a draft outline for a\nchapter on software environments for learning through cognitive conflict, for a new book\non which we were working at that time. I have developed this paper from a part of David's\nmaterial.\n83\nAnne McDougall Technology-supported environments for learning through cognitive conflict\nIntroduction\nPiaget used the term disequilibration to describe the process of an individual's\nencountering a new experience that generates a contradiction with the individual's existing\ncognitive structures (see for example Piaget, 1977), and argued that cognitive development\nor learning occurs as the individual attempts to resolve this cognitive conflict, a process he\nreferred to as accommodation. He proposed three possible types of accommodation: the\nindividual might ignore the contradiction; the individual might hold two theories\nsimultaneously, dealing with the contradiction by applying one theory in some specific\ncases, and the other in others; or the individual might construct a new, more encompassing\nnotion that explains and resolves the prior contradiction. Achieving this last type of\naccommodation, that is learning, is the purpose of teaching and of educational software\ndesign in the present context.\nCognitive conflict and learning\nCognitive conflict in science education literature\nThe idea of cognitive conflict has been central in much recent work on learning and\nteaching, particularly in the area of science education. Terms such as cognitive dissonance,\nlearner inconsistencies and divergent events are also used to describe this idea (see, for\nexample, Driver, 1983; Fensham and Kass, 1988).\nThere is well established evidence in the science education literature that significant\nnumbers of students have concepts and understandings of natural phenomena inconsistent\nwith those of contemporary science. This has been found to be the case at all school levels,\nand for all of the phenomena and concepts studied (Fensham and Kass, 1988). These\nstudent views are referred to in the literature as misconceptions, alternative frameworks, or\nchildren's science. As a result of these findings there is currently great interest among\nscience educators in the issue of conceptual change through the use of cognitive conflict.\nIf teaching is to facilitate conceptual change for students, it is important to appreciate and\nunderstand learners' existing views and understandings. Driver states that assimilation\ndepends not only on the environment, but on the learner's existing cognitive structure\n(Driver, 1983: 53). Consistent with Piaget's argument outlined earlier, she argues that if\nthere is no dissonance between an experience and a learner's cognitive structure then the\ninformation is assimilated without any change in the structure, and if the dissonance is too\ngreat then assimilation will not take place at all.\nThe challenge for teachers, and for educational software designers, is thus to present to\nlearners a situation provoking an optimal amount of cognitive conflict, while appreciating\nthat the optimal amount may vary widely among individual learners. Acknowledging the\ndifficulty of this, Fensham and Kass note a significant gap between experimental studies\non the use of cognitive conflict as a facilitator of student learning and classroom\nimplementation of the research findings (Fensham and Kass, 1988).\nCognitive conflict and theory building\nSome other writers, a leader among whom is Seymour Papert, regard the issue of cognitive\nconflict with a somewhat different emphasis from that in the body of work just described.\nPapert considers cognitive conflict to be part of the vital process of theory building in\n84\nALT-J Volume 10 Number 3\nlearning. He assigns rather less importance to the efficient achievement of 'correct' concepts,\nvaluing the unorthodox theories and explanations developed by learners. He emphasizes the\nimportance for learning of this process of building and modification of theories.\nPapert argues that the unorthodox theories of young children are not deficiencies or\ncognitive gaps, but that they serve as a way of flexing cognitive muscles, or developing and\nworking through the necessary skills needed for more orthodox theorizing. He asserts that\neducators distort Piaget's message by seeing his contribution as revealing that children hold\nfalse beliefs, which they, the educators, must overcome (Papert, 1980).\nThis leads to the development of learning environments that use cognitive conflict\nsomewhat less directly than implied by the science education work outlined earlier. It\nsuggests the creation of open-ended learning environments in which students might\nexplore concepts and ideas, developing (possibly 'wrong' or transitional) theories and\ntesting these. Papert uses the word microworlds to describe such learning environments.\nMicroworlds (Papert, 1980; Squires and McDougall, 1986) are self-contained\nenvironments, simple restricted worlds 'in which certain questions are relevant and others\nare not' (Papert, 1980: 117). Learners explore the properties of a chosen microworld in a\ncompletely open-ended fashion, developing and testing theories about the environment as\nthey do so. Papert advocates the construction of many such microworlds, each with its own\nset of assumptions and constraints; a microworld designer can lead a learner to new\nunderstandings by careful control of these assumptions and constraints. In later work (see\nfor example Harel and Papert, 1991; Harel, 1991) Papert and his colleagues advocate the\nconstruction by learners of microworlds of their own; however, this paper is concerned\nonly with the development for teaching purposes of environments designed specifically to\npromote cognitive conflict in learners.\nCognitive conflict and intuitive knowledge\nAndrea diSessa, who worked for some years with Papert, assigns even greater importance\nto learners' pre-existing cognitive structures. He discusses these in terms of intuitive\nknowledge, referring to the many fragmentary small structures that a learner gleans from\nexperience in the world as phenomenologicalprimitives or p-prims (diSessa, 2000).\nDiSessa describes cognitive conflict in the following way. People have hundreds if not\nthousands of p-prims, and when they make a judgement of reasonableness or unreason-\nableness they are frequently summoning all the relevant p-prims and deciding which one, or\nwhich collection of a few, best matches the situation. Then what happens in the situation is\nreasonable if it matches the chosen p-prim or p-prims and surprising if it does not.\nLike Papert, diSessa is critical of what he sees as educators' under-valuing of learners'\nintuitive knowledge, arguing that learners are adjusting their p-prims to new experiences all\nthe time and that it is not difficult to make small changes of this kind.\nApproaches to the design of learning environments utilizing\ncognitive conflict\nIn the light of these views, it is appropriate to consider implications for the design of\nlearning experiences using cognitive conflict. For purposes of design, the three approaches\njust outlined might be classified in the following way. The first, from the science education\n85\nAnne McDougall Technology-supported environments for learning through cognitive conflict\nliterature, might be called a confrontational approach; in such environments learners are\nconfronted by the scientifically 'correct' concepts and laws in order that the puzzlement or\ncognitive dissonance thus generated will lead to modification of the learners' cognitive\nstructures to match conventional scientific understanding. The designer may or may not\nhave a detailed understanding of the range of views brought to the situation by learners.\nThe design of the environment aims, through clear presentation of the concept or idea to\nbe understood, to change as directly as possible any misconceptions or alternative\nframeworks previously held by learners.\nThe second approach, based on the ideas of Papert outlined above, might be thought of as\na strategy in which the designer guides the learner to build theories and to modify these in\nways more nearly approaching scientifically accepted ones. The learning process here will\nprobably be more gradual, involving the development and modification of a series of\nincreasingly 'correct' theories and understandings.\nThe third approach, based on diSessa's work, might be called explanatory. This strategy\nrequires that the designer have some considerable appreciation of learners' prior\nunderstandings. It involves less actual change in concepts as such, but rather a deepening\nof the learner's understanding of the ideas under consideration. It is most appropriately\nused when the learner's conceptual structures are not far from the accepted 'correct' ones.\nNo one of these approaches is intrinsically superior to the others; each will be valuable in\nsome situations. They are delineated and examined in some detail here in order to\nemphasize the importance of thinking about exactly what is required when learning\nenvironments are designed to utilize cognitive conflict for learning. The three approaches\nwill be illustrated with examples in the next section.\nExamples of learning environments utilizing cognitive conflict\nThis section describes three learning environments to illustrate the three approaches\noutlined above. These examples are designed to utilize cognitive conflict to assist learners'\nunderstanding of concepts in Newtonian physics. The first, Dynaturtle, is chosen to\nillustrate the confrontational approach; the second, a sequence of Newtonian microworlds,\nillustrates the guiding approach; the third, a ball-toss microworld, provides an example of\nthe explanatory approach.\nThe confrontational approach: Dynaturtle\nAlthough the work of diSessa has been identified with the explanatory approach to the\nutilization of cognitive conflict, an environment designed early in his work will serve well\nhere to illustrate the confrontational approach. This software environment, called the\nDynaturtle (Papert, 1980; diSessa, 1982), is a microworld developed to enable exploration\nof a formal law of physics, Newton's first law of motion. The original version was written\nin Logo, though it is not difficult to construct the environment in any of several\ncontemporary programming languages; the code provided in Logo by Abelson (Abelson,\n1982:121-5) is most easily rewritten in Logo's contemporary descendant, Micro Worlds.\nNewton's first law states that a body in motion will, if left alone, continue to move forever\nat a constant speed and in a straight line. This contradicts common experience, in which\nmotion appears to result from the exerting of a force and removal of the force is associated\nwith cessation of the motion. The theory conflicts sharply with everyday observation.\n86\nALT-J Volume 10 Number 3\nThe dynaturtle is a modified version of the standard Logo turtle; in addition to the two\ngeometric components, position and heading, associated with the standard turtle, the state\nof a dynaturtle is further specified by two velocity components. A set of dynaturtle\nprocedures, and suggested activities for working with these are given in a then-current\nversion of Logo by Abelson (1982:121-5). Abelson introduces the microworld as follows:\nA dynamic turtle or dynaturtle behaves as though it were a rocket ship in outer space. To\nmake it move you have to give it a kick by 'firing a rocket'. It then keeps moving in the\nsame direction until you give it another kick. When you change its direction, it does not\nmove in the new direction until you give it a new kick. Its new motion is a combination\nof the old motion and the motion caused by the new kick. (Abelson, 1982:121)\nInitially the turtle will stay at the centre of the screen, facing upwards. Three dynamic\ncommands can be given:\n\u2022 typing R causes the turtle to turn right 30 degrees;\n\u2022 typing L causes the turtle to turn left 30 degrees;\n\u2022 typing K gives the turtle a 'kick' in the direction it is heading.\nAbelson suggests some activities for exploring the dynaturtle's behaviour: changing the\ndirection of its motion, attempting to make it move horizontally across the screen or to\nmake it go faster or slower without changing its direction, to make it stop, and to make it\nstop at a pre-marked position.\nThe guiding approach: sequential Newtonian microworlds\nPapert suggests the development of a series of sequential microworlds, to lead a learner\ntoward understanding of Newtonian physics (Papert, 1980). These microworlds would\ncontain turtles whose behaviours are characterized and constrained in different ways, and\nPapert argues that such microworlds might be used to assist a learner familiar with the\nstandard Logo (or more recently Micro Worlds) geometry turtle to develop understanding\nof Newtonian physics.\nThe geometry turtle has its state specified by its position and its heading. Essentially it\nresponds to two state change operators, the FORWARD (number) command which\nchanges its position and the RIGHT (number) command which changes its heading. In\nNewtonian physics there is only one state change operator - force, which changes\nmomentum. So a Newtonian turtle should accept only one kind of command - one that\nchanges its momentum. Papert proposes the development of microworlds that lie between\nthat of the geometry turtle and that of a Newtonian turtle. Thus a velocity turtle would\nhave its state specified by its position and its velocity, with a single state change operator\nSETVELOCITY (number). An acceleration turtle would similarly have its state specified\nby its position and its velocity, with a state change operator that changes the velocity by a\nspecified amount, such as SETACCELERATION (number).\nPapert argues that experience with the sequence of turtles - geometry turtle, velocity turtle,\nacceleration turtle, Newtonian turtle - would constitute a path into Newtonian physics that\nbuilds gradually and systematically, in a clear and transparent way, on what a learner\nalready knows at each stage of the process.\n\u2014 \u2014\nAnne McDougall Technology-supported environments for learning through cognitive conflict\nThe explanatory approach: vector representation of tossing a ball\nIn more recent work (diSessa, 2000), diSessa presents a microworld for uniform motion,\nsimilar in some ways to the dynaturtle procedures described earlier. The dynaturtle was\ndeveloped in Logo; the newer 'tick model' version (so called because it shows what happens\nat each 'tick of the clock') is developed in the Boxer programming environment.\nDiSessa shows the effect of running the acceleration tick model program with a large value\nfor the initial velocity and a (constant) negative acceleration - as would represent tossing a\nball into the air. The object moves upward while slowing down, comes to a peak where it\nappears to stop for an instant, and then falls downward. The actual motion is familiar from\neveryday experience. However, as the program runs, the constant negative acceleration and\nthe changing values of the velocity are shown dynamically by vectors of lengths that change\n(or not) appropriately as the motion progresses. Thus an explanation for the motion, which is\nnot easily arrived at intuitively, is drawn to the user's attention and clearly illustrated.\nMost people, and almost all students, find this uniformity amazing. Few are prepared to\nbelieve that going up works in exactly the same way as falling. Even more, essentially\neveryone believes the peak of the toss is very special, expressed in some sort of balancing\n(say, balancing of the upward toss force with downward gravity). In contrast, the top of\na toss is really an innocuous happenstance, that adding [negative] a to v will drive v\nthrough its zero length position. (diSessa, 2000: 37)\nHere the motion matches experience; what needs changing is many learners'\nunderstandings of the explanation for the motion. The program describes a process that is\nthe same at every instant; the only thing that changes is the value of the velocity. This is\ndesigned to facilitate learners' modifying their previous intuitive ideas to understand that\nthe force acting is constant throughout.\nIssues in the design of technology-supported learning environments\nutilizing cognitive conflict\nThe design and use of learning environments utilizing cognitive conflict to promote\nlearning necessarily involve consideration of three processes: concept representation,\nconflict recognition and conflict resolution. Of these, the process most critical for design is,\nconcept representation. The effectiveness of the learning environment in facilitating the\nlearner's recognition and resolution of cognitive conflict depends largely on effective\nconcept representation in the environment.\nThis section will consider these processes, focusing particularly on concept representation.\nA framework provided by the ideas of the confrontational, guiding and explanatory\napproaches to design will be used to structure the analysis, and features of the software\nenvironments described in the previous section will be used to exemplify issues discussed.\nAlthough educational software examples have been presented, the discussion so far has not\notherwise been particularly related to technology-supported learning environments. I shall\nlook briefly now at some matters relating specifically to the use of technology-supported\nenvironments in the present context.\nConcept representation\nIn the confrontational approach the 'correct' or target structure must be represented in the\nenvironment. For example, in the Dynaturtle software the Logo procedures governing the\n88\nALT-J Volume 10 Number 3\nbehaviour of the dynaturtle provided a formalism for representing the 'target' concept of\nNewtonian motion. Typically in this approach the designer will make assumptions about\nthe cognitive structures likely to be brought to the situation by learners but will not attempt\nto represent these directly in the environment. In the Dynaturtle case the designer's\nconjectures about likely learner expectations for the motion of the object, based on\neveryday non-Newtonian experience, are evident in the suggested activities for learners.\nHowever there is no attempt to represent directly in the software any prior understandings\nor expectations that learners might bring to the experience.\nThe guiding approach requires that the designer have a good appreciation of the\nconceptual structures likely to be brought to the situation by learners, as this approach\nrequires the planning of experiences that will help learners to build on their existing\nconceptual structures to develop more 'appropriate' ones. Explicit representation of these\nstructures in the environment may not be necessary. However if the developmental\nsequence is to be effective, the designer must apprehend not only learners' initial con-\nceptual structures but also changes to these that are likely to result from experiences within\nthe environment. In Papert's sequential Newtonian microworlds, the concepts overtly\nrepresented are some relatively abstract ideas, appreciation of which should facilitate\nlearners' understanding of Newtonian physics. These ideas include the significance of an\nobject's attributes, use of these attributes to specify the object's state, and the idea of state\nchange operators. Concepts such as these may already be at least partially grasped by\nlearners. The characteristics of the geometry, velocity, acceleration and Newtonian turtles\nrepresent these concepts directly, in a sequence of increasing sophistication.\nFrom the point of view of design, the explanatory approach is perhaps the most subtle of\nthe three described. In comparison with the previous approaches, this one requires the\ndesigner to have a clear understanding of the conceptual structures of the learner and,\nfurther, a reasonable idea of the learner's underlying rationale for these structures. In the\nball toss example, the designer is confident that learners can make correct predictions\nabout the motion based on their current conceptual structures, but he anticipates that these\nstructures contain weaknesses that are revealed only when reasons or explanations for the\npredictions are investigated. Compare this with the Dynaturtle example, where the designer\ncould be confident simply that the learner would predict the motion incorrectly. In the ball\ntoss example the designer, expecting learners to make correct predictions for the nature of\nthe motion, represents in the software the underlying physical explanation for the predicted\nmotion - an explanation that he knows from study of learners' 'intuitive knowledge' of\nphysics is widely unexpected. As well as illustrating the actual motion through animation,\nhe uses the Boxer vectors to represent and illustrate the constant negative acceleration and\nthe ball's changing velocity, the essential explanatory concepts to be understood in\nassociation with the motion in this situation.\nThrough increasing the options for concept representation, the use of technology has\nenhanced considerably the potential for design and development of learning environments\nutilizing cognitive conflict. An exhaustive discussion of the possibilities here is beyond the\nscope of the present paper. However it is appropriate to mention the ability of these\nenvironments to provide multiple formalisms for representation of concepts for students,\nincluding linguistic, graphical, animated, mathematical, programming code and many\nother representational modes. Papert argues, for example, that before the advent of the\n89\nAnne McDouga\/l Technology-supported environments for learning through cognitive conflict\ncomputer, there were only very poor materials available for the construction and\nrepresentation of a Newtonian 'world' (Papert, 1980). Further, diSessa emphasizes the\nimportance of direct experience in learning, arguing that the use of computers can 'move\nus dramatically away from the near-zero involvement of direct experience that is the\nhallmark of learning science only by reading books or even by talking with teachers and\npeers' (diSessa, 2000: 99).\nConflict recognition and resolution\nFor effective utilization of cognitive conflict in a learning environment, the designer must\nensure that the consequences of the differences between 'target' and learner conceptual\nstructures are evident and understandable by the learner. For learners, apprehension and\narticulation of a puzzling or unexpected situation is a major step towards resolving it. In\nenvironments designed with the confrontational approach the conflict is generally\nimmediate and very obvious. In the guided approach where the designer expects gradual,\nprobably small changes in .the learners' cognitive structures, the recognition of conflict may\nnot be as striking.\nUsing the explanatory approach the designer must take great care to ensure that the\nrecognition of conflict with previously held understandings in fact actually happens. This\nmight mean directing the learner's attention quite deliberately to the aspects of the\nenvironment designed for this, perhaps through suggested activities to be undertaken in the\nenvironment or by some other suitable design strategy. To illustrate this, consider again the\nball toss environment. Since the motion of the ball is not surprising to most learners,\nattention must be directed to the explanatory part of the software, the Boxer vectors\nrepresenting the acceleration and the velocity of the ball, to facilitate recognition of any\nconflict with learners' previous understanding of the ball toss situation.\nSome aspects of technology-supported learning environments can be used to enhance the\nprocesses of conflict recognition and resolution. For example, interactivity in well designed\ntechnology-based learning environments can provide feedback to learners about the\nappropriateness of their assumptions and predictions as they work in the environment, and\ntechnology might be used to sponsor collaboration to help conflict resolution.\nConclusion\nBased on work in science education and educational computing, this paper argues against\nconsidering the strategy of cognitive conflict for learning simplistically, describing three\napproaches to the design of learning environments utilizing cognitive conflict. These\napproaches are referred to as confrontational, guiding and explanatory, and differences\namong them are discussed in terms of the relative importance of learners' pre-existing\nconcepts and the directness of, and the designer's control, of learners' pathways to\nimproved understanding.\nThe processes of concept representation, conflict recognition and conflict resolution are\ndiscussed, and the most important of these from a design perspective, concept\nrepresentation, is examined in some detail in the context of the three approaches. Finally\nthe paper considers the power of technology-supported learning environments to enable,\nparticularly through increased options for concept representation, the design and\ndevelopment of learning environments that utilize cognitive conflict in the more complex\nand subtle ways described in the three approaches delineated in the paper.\n90\nALT-] Volume 10 Number 3\nAlthough much of the recent work on cognitive conflict has been undertaken in science\neducation, the argument presented in the paper should not be confined to learning in\nscience. Papert points out that 'Piaget has shown that children hold false theories as a\nnecessary part of the process of learning to think' (Papert, 1980: 132-3). It is contended\nthat the argument made here has application well beyond science education, in learning in\na wide variety of subject areas and contexts.\nReferences\nAbelson, H. (1982), Logo for the Apple II, Peterborough, NH: Byte\/McGraw-Hill.\nDiSessa, A. (1982), 'Unlearning Aristotelian physics: a study of knowledge-based\nlearning', Cognitive Science, 6, 1-36.\nDiSessa, A. (2000), Changing Minds: Computers, Learning, and Literacy, Cambridge, MA:\nMIT Press.\nDriver, R. (1983), The Pupil as Scientist?, Milton Keynes: Open University Press.\nFensham, P. and Kass, H. (1988), 'Inconsistent or discrepant events in science instruction',\nStudies in Science Education, 15, 1-16.\nHarel, I. (1991), Children Designers, Norwood, NJ: Ablex Publishing Corporation.\nHarel, I. and Papert, S. (eds.) (1991), Constructionism, Norwood, NJ: Ablex Publishing\nCorporation.\nPapert, S. (1980), Mindstorms: Children, Computers and Powerful Ideas, Brighton:\nHarvester.\nPiaget, J. (1977), The Development of Thought: Equilibration of Cognitive Structures, New\nYork: Viking.\nSquires, D. and McDougall, A. (1986), 'Computer-based microworlds - a definition to aid\ndesign', Computers and Education, 10 (3), 375-8.\n91\n"}