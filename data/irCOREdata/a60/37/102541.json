{"doi":"10.1109\/ROBOT.2008.4543501","coreId":"102541","oai":"oai:epubs.surrey.ac.uk:2004","identifiers":["oai:epubs.surrey.ac.uk:2004","10.1109\/ROBOT.2008.4543501"],"title":"Inverse kinematics without matrix inversion","authors":["Pechev, AN"],"enrichments":{"references":[],"documentType":{"type":1}},"contributors":[],"datePublished":"2008","abstract":"This paper presents a new singularity robust and computationally efficient method for solving the inverse kinematics (IK) problem. In this method, the transformation from Cartesian space to joint space is performed in a feedback loop and as a result the new feedback inverse kinematics (FIK) law operates as a filter and does not require matrix manipulations (inversion, singular value decomposition or a computation of a damping factor). While the computational demand is greatly reduced, the performance is comparable to the one delivered by the damped least squares (DLS) law. The new algorithm is capable of escaping and avoiding kinematic singularities and in this respect it outperforms pseudo-inverse based formulations","downloadUrl":"","fullTextIdentifier":null,"pdfHashValue":null,"publisher":null,"rawRecordXml":"<record><header><identifier>\n  \n    \n    \n      oai:epubs.surrey.ac.uk:2004<\/identifier><datestamp>\n      2017-10-31T14:03:59Z<\/datestamp><setSpec>\n      74797065733D636F6E666572656E63655F6974656D<\/setSpec><setSpec>\n      6469766973696F6E733D656E67616E64706879736963616C736369656E636573:656C656374726F6E6963656E67696E656572696E67:535343<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/epubs.surrey.ac.uk\/2004\/<\/dc:relation><dc:title>\n        Inverse kinematics without matrix inversion<\/dc:title><dc:creator>\n        Pechev, AN<\/dc:creator><dc:description>\n        This paper presents a new singularity robust and computationally efficient method for solving the inverse kinematics (IK) problem. In this method, the transformation from Cartesian space to joint space is performed in a feedback loop and as a result the new feedback inverse kinematics (FIK) law operates as a filter and does not require matrix manipulations (inversion, singular value decomposition or a computation of a damping factor). While the computational demand is greatly reduced, the performance is comparable to the one delivered by the damped least squares (DLS) law. The new algorithm is capable of escaping and avoiding kinematic singularities and in this respect it outperforms pseudo-inverse based formulations.<\/dc:description><dc:date>\n        2008<\/dc:date><dc:type>\n        Conference or Workshop Item<\/dc:type><dc:type>\n        NonPeerReviewed<\/dc:type><dc:format>\n        text<\/dc:format><dc:language>\n        en<\/dc:language><dc:identifier>\n        http:\/\/epubs.surrey.ac.uk\/2004\/1\/fulltext.pdf<\/dc:identifier><dc:identifier>\n          Pechev, AN  (2008) Inverse kinematics without matrix inversion  In: ICRA 2008, 2008-05-19 - 2008-05-23, Pasadena, USA.     <\/dc:identifier><dc:relation>\n        10.1109\/ROBOT.2008.4543501<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/epubs.surrey.ac.uk\/2004\/","10.1109\/ROBOT.2008.4543501"],"year":2008,"topics":[],"subject":["Conference or Workshop Item","NonPeerReviewed"],"fullText":"Inverse Kinematics without matrix inversion\nby Alexandre N. Pechev\u2217\nAbstract \u2013 This paper presents a new singularity\nrobust and computationally efficient method for\nsolving the inverse kinematics (IK) problem. In\nthis method, the transformation from Cartesian\nspace to joint space is performed in a feedback loop\nand as a result the new feedback inverse kinematics\n(FIK) law operates as a filter and does not require\nmatrix manipulations (inversion, singular value\ndecomposition or a computation of a damping\nfactor). While the computational demand is greatly\nreduced, the performance is comparable to the one\ndelivered by the damped least squares (DLS) law.\nThe new algorithm is capable of escaping and\navoiding kinematic singularities and in this respect\nit outperforms pseudo-inverse based formulations.\n1 Introduction\nInverse kinematics is an essential element in any\nrobotic control system and a considerable research has\ngone in the last decades in identifying a robust and\ngeneric solution to this problem. Inverse kinematics\ncan be also linked to other areas, for example space-\ncraft control with control moment gyros (CMG), ani-\nmation, protein folding. In attitude control loops of\nspacecrafts with CMGs, the Jacobian maps gimbal\nrates to components of torque [1]. In robotics, the\nJacobian connects the velocity of the end-effector\ndefined in Cartesian space with the joint velocities.\nClosed-form solutions to IK is limited to only a certain\ntypes of manipulators [2], and most of the proposed\ntechniques resort to numerical methods. The damped\nleast squares (DLS) inverse law, developed by Naka-\nmura and Hanafusa in [3] and by Wampler in [4], has\nbeen proposed as an efficient and singularity robust\nsolution to the IK problem. This is a pseudo-inverse\nbased method which in the vicinity of the singularity\napproximates the solution for the expense of some\nerror in the trajectory of the end-effector. The algo-\nrithm depends on a damping variable that defines the\ntrade off between solvability and exactness. This vari-\nable is computed at every sample and tends to zero\nwhen away from singularities to transform the DLS\nmethod (or also known as the singularity robust\nmethod) to a Moore-Penrose pseudo inverse. It has\nbeen presented independently by Wolovich at. al. in\n[5] and Balestrino and co-workers in [6] that the IK\nproblem can be solved by computing the transpose of\nthe Jacobian instead of its inverse. This method,\nalthough numerically efficient, fails to deliver solutions\nfor rank deficient Jacobians. Other methods for\nsolving the inverse kinematics problem resort to dif-\nferent forms of optimisation, for example [7] and [8].\nRecent research on singularity avoidance for CMGs\nhas led to the development of a new method for\nsolving the inverse kinematics (IK) problem [9, 10].\nThe feedback inverse kinematics method (or FIK) pre-\nsented in this paper uses feedback control in the min-\nimisation of the difference between demanded and\nactual Cartesian velocities. Within the feedback loop,\nthe required joint parameters are derived through the\ncontrol sensitivity function. The algorithm operates as\na filter and does not require matrix manipulations\n(inversion or singular value decomposition). Singulari-\nties are handled without the necessity of a damping\nfactor and this makes it computationally more efficient\nthan pseudo-inverse based methods. Despite the differ-\nences, the FIK law compares closely in structure to\nthe DLS IK law and this is demonstrated later in the\npaper. The dynamic constraints in the manipulator\nand the trajectory are also systematically linked into\nthe design of the inverse kinematics law and its\nparameters. It has been also demonstrated that for a\nspecial class of singularities, the FIK law outperforms\nthe performance delivered by the DLS method.\n2 Problem statement\nFor a robot manipulator, the end-effector position x \u2208\nR\nm is related to the vector of joint variables q \u2208 Rn\nthrough a nonlinear vector-valued function\nx= f(q) (1)\nThe control of the manipulator requires tracking a\ntarget trajectory (x\u02c6) defined in Cartesian space by\nmanipulating the joint variables q. This requires\nsolving the inverse of Eq.1 to get q for a given set x\u02c6.\nFrom a practical point of view, a more convenient\napproach is to use the joint velocities q\u02d9 and the end-\neffector Cartesian velocities x\u02d9. This requires lin-\nearising Eq.1 and computing the Jacobian J(q) \u2208\nRm\u00d7n, J(q) =\n\u2202f(q)\n\u2202q\n. The resultant kinematic repre-\nsentation becomes\nx\u02d9 =J(q)q\u02d9 (2)\n\u2217. A. Pechev is with The Surrey Space Centre, University of Surrey, Guildford, GU2 7XH, UK, a.pechev@surrey.ac.uk;\n2008 IEEE International Conference on\nRobotics and Automation\nPasadena, CA, USA, May 19-23, 2008\n978-1-4244-1647-9\/08\/$25.00 \u00a92008 IEEE. 2005\nAuthorized licensed use limited to: University of Surrey. Downloaded on February 5, 2010 at 05:40 from IEEE Xplore.  Restrictions apply. \nEq.2 can be used for both position control and velocity\ncontrol. In the general case, n \u2265 m and the manipu-\nlator is kinetically redundant when n > m. Solving\nEq.2 for a given set of Cartesian desired variables (x\u02d9\u02c6 )\nrequires solving\nq\u02d9 =J \u2020(q)x\u02d9\u02c6 (3)\nwhere J \u2020(q) represents the inverse of the Jacobian.\nFor the cases when m>n, pseudo-inverse methods can\nbe used to derive J \u2020(q) [for better readability, q is\ndropped from J(q)]\nJ \u2020(q) =JT (JJT )\u22121 (4)\nSince the Jacobean depends nonlinearly on the joint\nangles, there exists combinations in q at which the\nJacobian becomes ill-conditioned with rank r =\nrank(J(q)), r < m. At these singular combination, the\npseudo-inverse algorithm in Eq.4 fails to deliver a solu-\ntion and leads to excessively large joint velocities near\nthe singularities. The damped least squares inverse law\napproximates the solution around the singularities by\nallowing some error in the end-effector position\nJ \u2020(q) =JT (JJT +\u03bbI)\u22121 (5)\nThe solution depends on a damping factor \u03bb which\nexpresses the trade off between exactness of the solu-\ntion (\u03bb \u2248 0) and feasibility of the solution (\u03bb \u226b 0).\nSince the solvability and the stability of Eq.5 depends\non \u03bb, there has been a considerable research effort\nundertaken in identifying different methods for the\nadaptation of \u03bb [3, 8, 11]. In the subsequent part of\nthe paper, a new method for solving Eq.3 is proposed.\n3 Feedback Inverse Kinematics\nFor the kinematic representation in Eq.2 and a given\ndesired Cartesian velocity x\u02c6\u02d9 \u2208 Rm, the following\nvector of error variables e\u2208Rm is constructed\ne= x\u02c6\u02d9 \u2212J(q)q\u02d9 (6)\nto represents the discrepancy between the current and\nthe desired Cartesian velocities. Let JT (q) represent\nthe transpose of the Jacobian, then the main result of\nthis paper can be formally established.\nK(s)\nJ(q)\nqx +\n-\ne\nx\nFigure 1. Feedback-based inverse kinematics\nTheorem 1. With the view to minimise the error in\nEq.6, a negative feedback loop is constructed as in\nFig.1. If K(s) \u2208 Rn\u00d7m represent a full transfer-func-\ntion matrix that acts as a control law, then there exist\nan adaptive form of K(s) that minimises this error to\nan arbitrary small value, leading to the following solu-\ntion to the inverse kinematics problem\nq\u02d9 =K(s)(JK(s) + I)\u22121x\u02d9\u02c6 (7)\nFurthermore the optimal K(s) has the following adap-\ntive form\nK(s)=JT (q)P(sI\u2212AK)\n\u22121\nBK (8)\nwhere P \u2208 Rm\u00d7m, P > 0 is a symmetric gain matrix,\nAK \u2208 R\nm\u00d7m, AK < 0 is a diagonal matrix and BK \u2208\nR\nm\u00d7m, BK > 0 is a diagonal matrix. The specific\nnumerical values of P , A and BK are linked to the con-\nstraints in the manipulator and the desired trajectory.\nProof.\nThe construction of Eq.7 follows directly from the\ndefinition of the feedback loop in Fig.1; The joint rates\nare related to the desired Cartesian velocity through the\ncontrol-sensitivity function in Eq.7. To derive the con-\ntrol law in Eq.8, a two step approach is proposed.\nA) In the firsdt stage of design, the Jacobian is\nassumed constant, time invariant, transfer matrix that\nmaps joint velocities to Cartesian velocities, i.e.\nJ(q) = Jo = constant. An optimal H\u221e control law is\nthen designed that solves the following sensitivity-min-\nimisation problem\nmin\nK(s)\n\u2225\u2225\u2225\u2225\u2225\n(\nw1(s)(JoK(s)+ I)\n\u22121\nw2(JoK(s) + I)\n\u22121\n)\u2225\u2225\u2225\u2225\u2225\n\u221e\n(9)\nw1(s) \u2208 R\nm\u00d7m determines the bandwidth of the\ninverse kinematics law in Eq.7 and is derived from the\ndynamic constraints of the manipulator and the refer-\nence trajectory x\u02c6. w2 \u2208 R\nn\u00d7n determines the con-\nstraints in the actuators in terms of the upper bound\non the velocities q\u02d9. Solving Eq.9 for K(s) then is a\ntrivial task and requires using a standard H\u221e optimi-\nsation algorithm, for example [ 12].\nB) For the adaptation of K(s), the controller\nderived above is first represented in its state-space\nform\nK(s):\nz\u02d9 =AKz+BKe\nq\u02d9 = CKz\n(10)\nwhere z \u2208 Rm\u00d71 represents the state of the controller,\nAK \u2208 Rm\u00d7m, AK < 0 is a diagonal matrix, BK \u2208\nR\nm\u00d7m, BK is a diagonal matrix and e is the error in\nEq.6. From the the solution the the H\u221e problem in\nEq.9, it can be shown that the optimal, in \u221e-norm\nsense, state-feedback gain is\nCK=Jo\nTP =Jo\nTw2bP (11)\n2006\nAuthorized licensed use limited to: University of Surrey. Downloaded on February 5, 2010 at 05:40 from IEEE Xplore.  Restrictions apply. \nwhere P > 0, P = P T is the solution to the Riccati\nequation associated with the state-feedback design of\nK(s) [ 12], b is the bandwidth of the loop in Fig.1,\nand w is the upper bound on the joint velocities q\u02d9.\nEq.11 suggests that K(s) can be adapted by taking\ncurrent values for q, computing JT (q) and adapting\nCK accordingly, i.e.\nCK=J(q)\nTP (12)\nCombining Eq.12 with Eq.10 provides the adaptive\ncontrol law K(s) in Eq.8 that solves the inverse kine-\nmatics problem. In transfer-function form, K(s) is\ngiven in Eq.8. This completes the proof.\n3.1 Remarks\nComparison with pseudo-inverse methods: Setting\nQ=P(sI\u2212AK)\n\u22121BK (13)\nallows rewriting the FIK law in Eq.7 to its more com-\npact form [below q is dropped from J(q)]\nq\u02d9 =JTQ(JJTQ+ I)\u22121x\u02c6\u02d9 (14)\nIt is of interest to note that the solution in Eq.14 has\na similar structure to the DLS law in Eq.5. It can be\nalso compared to the Jacobian transpose method from\n[5] and [6] with the assumption that Q(JJTQ + I)\u22121\nis simplified by a constant and diagonal matrix.\nDespite the similarities, important differences need to\nbe acknowledged. Due to the use of the feedback loop\nin Fig.1, the joint velocities are related to the\ndemanded Cartesian velocities through the control sen-\nsitivity function JTQ(JJTQ+ I)\u22121 and since the com-\nputation is done in a feedback loop, no matrix inver-\nsion is required. For the FIK law \u03bb=1 and essentially\na damping factor is not used while the new dynamic\nmapping Q \u2208Rm\u00d7m (Eq.13) is introduced. In compar-\nison to the Jacobian transpose methods, the new FIK\nmethod provide singularity robustness due to the non-\ndiagonal and dynamic form of Q(s).\nStability of the IK: From a control point of view,\nthe internal stability for the loop in Fig.1 is guaran-\nteed as long as\ndet(JJTQ+ I)= 0 (15)\nor alternatively\n\u03c3(JJTQ)\u2265 0 (16)\nfor all combinations in q. Since Q=QT \u2265 0 by design,\nthis requirement is always satisfied and does not\ndepend on the parameters of the Jacobian q. At sin-\ngularity, \u03c3(JJTQ)= 0.\nSingularity robustness: It is important to establish\nthat for singularity robustness, K(s) is designed to\npossess a full structure. When J(q) becomes rank\ndeficient, the error in Eq.6 grows at a particular sin-\ngular direction. The escaping joint velocities are gen-\nerated through the off-diagonal elements in K(s).\nThis is done in an infinity-norm, error-minimisation,\nsense as per the design of K(s). This is quite opposite\nto what has been chosen in the minimisation for the\nDLS law in Eq.5 and hence the necessity for \u03bb.\nDesign for manipulator constraints: If all m-direc-\ntions in the end-effector are to be weighted equally,\nw1(s) is chosen as a diagonal transfer-function matrix.\nIn almost all type of applications, it would be suffi-\ncient to set\nw1(s)=\nb\ns+\u03b1\nIm\u00d7m (17)\nwhere b determines the bandwidth in Fig.1 and \u03b1\nspecifies the gain of the sensitivity function at steady-\nstate. With this form of w1(s), AK transforms to\nAK=\u2212\u03b1I\nm\u00d7m (18)\nw1(s) allows specifying the tracking accuracy and is\nlinked to the dynamics of the desired trajectory. Con-\ntrary to classical pseudo-inverse based IK solutions,\nthis can be specified for each m-direction indepen-\ndently by setting b and \u03b1 differently for each direction.\nThis can be exploited for prioritisation of operations.\nFor the form in Eq.17, BK can be taken to be the iden-\ntity matrix transforming CK= bIm\u00d7m. The constraints\nin the manipulator in terms of the upper bound in the\njoint velocities (\u2016q\u02d9 \u2016\u221e) can be specified in w2. This is\ndone for each degree of freedom (n). For manipulators\nwith similar characteristics in the actuators it would\nbe sufficient to set\nw2=\n1\nw\nIn\u00d7n (19)\nwhere w determines the maximum rate (in m\/s or\nrad\/s). Oppositely to the DLS-based methods, the\nFIK method allows weighting each degree of freedom\n(n) independently in w2.\nPerformance of the FIK solution: For the feedback\nloop in Fig.1, the error can be computed from the sen-\nsitivity function\ne=(JJTQ+ I)\u22121x\u02d9\u02c6 (20)\nThe relationship in Eq.20 suggests that the error is\nproportional to the size of Q (Eq.13). Furthermore,\nconsidering only steady-state, it follows from Eq.11\nthat the error is proportional to the square of the\nmaximum rate w of the joint actuator.\nImplementation: As identified earlier, the FIK\nmethod operates as a filter and requires only multiply\nand accumulate instructions. For the implementation,\n2007\nAuthorized licensed use limited to: University of Surrey. Downloaded on February 5, 2010 at 05:40 from IEEE Xplore.  Restrictions apply. \nEq.10 is transformed to its discrete equivalent for a\ngiven sampling interval \u03c4\nz(k+1) =\u03b1\u03c4 z(k) +BKe\nq\u02d9 =J(q)TPz(k)\n(21)\nwhere \u03b1\u03c4 = exp( \u2212 \u03b1\u03c4 ). The first equation determines\nthe state of the FIK law and assumes the form of AK\nin Eq.18. The error e is computed from Eq.6. The\nsecond equation uses the Jacobian and the state to\ncompute the joint velocities. If BK is different from the\nidentity matrix, P can be multiplied by BK a priori to\nimprove on the computational efficiency. Assuming a\nfull form for the Jacobian matrix, the total number of\noperations is summarised in Table 1. For a 6DOF\nmanipulator it takes only 210 multiplications\/addi-\ntions to compute the IK; Divisions are not required\nand the singularity robustness is embedded into the\nalgorithm. The number of flops can be further reduced\nif a care is taken for avoiding multiplications by ones\nand zeros. In comparisons to the implementation of\nthe DLS algorithm together with the adaptation of its\ndamping factor, results presented in [3, 13, 14] for\nexample, show that the FIK algorithm reduces signifi-\ncantly the computational demand (by a factor of at\nleast five). For applications with multiple end effectors\nor for augmented Jacobians using joint limits and\ntask-space models, several orders of reduction in the\ncomputational demand can be achieved. The FIK\nfilter can also run in parallel with zero overhead for\nmultiprocessing architectures.\nK(s)\nJ(q)\nqx\n+\n-\ne\nx\nK(s)\nJ(q)\n+\n-\nJ(q)qo\n+\n-\n+\n+\nFigure 2. FIK law augmented with a homogeneous term.\nNull-motion: For redundant manipulators it is pos-\nsible to use the (n\u2212m)-dimensional null space of J to\ngenerate joint velocity vectors q\u02d9 that produce null\nend-effector velocities x\u02d9. This is traditionally done by\nadding a homogeneous term to the pseudo-inverse, i.e.\nq\u02d9 =J \u2020x\u02c6\u02d9 +(I \u2212J \u2020J)q\u02d9o (22)\nwhere q\u02d9o is an n-dimensional arbitrary joint velocity\nvector. Similarly, the feedback-based inverse kine-\nmatics solution in Fig.1 can be augmented by the pro-\njection operator (I \u2212 J \u2020J) using the filter form in\nFig.2.\n(m\u00d7n)\n(6\u00d7n)\nadditions\n2mn+m2\n12n+36\nmultiplications\n2mn\u2212n+m2\n11n+36\ntotal\n4mn\u2212n+2m2\n23n+72\nTable 1. Computational demand for the FIK law.\n4 Numerical examples\nWithout loosing generality, the presented in this paper\nnew inverse kinematics method is applied to a simple\n3-dof manipulator (Fig.3) as the one presented by\nNakamura and Hanafusa in [3]. For the analysis the\nperformance is compared with the DLS method from\nthe same paper. We demonstrate in the results section\nthat the new FIK law is not only computationally\nmore efficient but it also outperforms the DLS algo-\nrithm in terms of handling singularities. The new\ninverse kinematic solution has been also applied to\nmanipulators and articulated figures with multiple dof,\nbut for the sake of space these results have not been\nrepresented.\n2\n1\n1\n(x1,x2)\n(x1,x2)\nq1\nq2\nq3\nFigure 3. 3-degrees of freedom planar manipu-\nlator. q1\u2212 q3 are the joint variables.\n4.1 FIK algorithm design\nFor the manipulator in Fig.3, m = 2, n = 3 and the\nJacobian is given below\nJ(q) =(\n\u2212 2 sin q\u00af1\u2212 sin q\u00af2\u2212 sin q\u00af3,\n2 cos q\u00af1+ cos q\u00af2+ cos q\u00af3,\n\u2212 sin q\u00af2\u2212 sin q\u00af3,\ncos q\u00af2+ cos q\u00af3,\n\u2212 sin q\u00af3\ncos q\u00af3\n)\n(23)\nThe joint variables are q = [ q\u00af1, q\u00af1, q\u00af3]\nT = [q1, q1 + q2,\nq1 + q2 + q3]\nT . For the design, we weight all m-direc-\ntions and all n-actuators equally. This results in the\nfollowing performance weights\nw1(s) =\n400\ns+1\n(\n1\n0\n0\n1\n)\n, w2=\n1\n5\n\uf8eb\n\uf8ed 10\n0\n0\n1\n0\n0\n0\n1\n\uf8f6\n\uf8f8 (24)\nw1 specifies a tracking bandwidth for the end-effector\nof approximately 400 rad\/s with an attenuation rate of\n-52dB at DC. w2 describes the constraint in the\nmanipulator by limiting the joint velocities to 5 rad\/s.\nSetting (q1, q2, q3) = (1, 2, 1) rad, allows constructing\n2008\nAuthorized licensed use limited to: University of Surrey. Downloaded on February 5, 2010 at 05:40 from IEEE Xplore.  Restrictions apply. \nJo from Eq.23\nJo=\n(\n-1.0673,\n-0.5630,\n0.6157,\n-1.6436,\n0.7568\n-0.6536\n)\n(25)\nSolving the optimisation problem in Eq.9 with the\nabove design inputs gives\nP =\n(\n295.28\n46.96\n46.96\n225.03\n)\n(26)\nP above and AK=\u2212 \u03b1I\n2\u00d72 =\u2212 I 2\u00d72, are used for the\nconstruction of K(s) in Eq.8\nK(s)= JT (q)\n(\n295.28\n46.96\n46.96\n225.03\n)\uf8eb\uf8ed 1.66s+1\n0\n0\n1.66\ns+1\n\uf8f6\n\uf8f8 (27)\nK(s) can be used in the feedback loop in Fig.1 to\nderive the joint velocities for a given set of required\nCartesian velocities. In a filter form, the inverse kine-\nmatics transforms to the following set of equations\n(\u03c4=1 ms, \u03b1\u03c4 = exp(\u2212 \u03c4 )\u2248 1)\nz(k+1) = z(k)+ x\u02d9\u02c6 \u2212J(q)q\u02d9(k)\nq\u02d9(k+1) = 1.66 J(q)TPz(k)\n(28)\n4.2 Simulation results\nTwo sets of simulation studies are considered:\nA) a singularity free trajectory with an initial set\nof joint angles (q1, q2, q3) = (\npi\n4\n,\npi\n9\n, 0) and a corre-\nsponding initial end-effector position x0 = (x10, x20) =\n(2.26, 3.23); the desired trajectory is set to x\u02c6 = (x\u02c61,\nx\u02c62) = (x10\u2212\n1\n11\nt, x20\u2212\n1\n8\nt).\nB) a trajectory that starts at a singularity and\npasses through a singularity with an initial set of joint\nangles (q1, q2, q3) = (\npi\n2\n, 0, 0), corresponding end-effector\nposition x0 = (x10, x20) = (0, 4.0) and a desired trajec-\ntory x\u02c6 =(x\u02c61, x\u02c62)= (0, x20\u2212\n1\n8\nt).\nFor the simulation work, the model of the manipu-\nlator, the control gains and simulation parameters are\ntaken from the work of Nakamura and Hanafusa in [3].\nThe dynamics of the joints is represented as a second\norder system with a natural frequency of 10 rad\/s and\na damping factor of 0.5. A position feedback is used\nfor the control of the robot. The adaptation law for\nthe damping factor in the DLS algorithm is taken from\nthe same paper\n\u03bb=\n{\n\u03bb0(1\u2212w\/w0)\n2 forw<w0\n0 forw \u2265w0\n(29)\nw = det[J(q)JT (q)]\n\u221a\nis computed at every sample\nusing current q, w0 = 1.0 and \u03bb0 = 0.3. We stress here\nthat the particular choice for the design parameters\nhave been optimised for both case studies (A) and (B).\nOther forms for adapting \u03bb in the DLS law based on\nsingular value decomposition have been also imple-\nmented but since no a greater improvement on the\nperformance has been achieved, only results based on\nEq.29 are included. For case-study (A), the Cartesian\nposition of the end effector is shown in Fig.4(a); the\nindividual trajectories (x1, x2) are given in Fig.4(c) for\nthe DLS algorithm and in Fig.4(d) for the FIK algo-\nrithm. As evident from the condition number c =\n\u03c3min(JJ\nT )\/\u03c3max(JJ\nT ) in Fig.4(b), at t = 26 sec, the\ntrajectory passes close to the origin and both algo-\nrithms manage to avoid the singularity. The FIK law\nmanages to track better the desired trajectory with\nlower values values for the error in the end-effector.\nFor the DLS law, the performance is determined by\nthe particular choice for \u03bb0. Both algorithms keep q\u02d9\nbelow 0.2 rad\/s; Without modifications in the FIK\nand the DLS algorithms, a case study (B) is now con-\nsidered to assess the singularity avoidance properties\nof the algorithms. It is evident from the condition\nnumber plot in Fig.6(b) that the DLS algorithm is not\ncapable to escape the initial singular configuration for\nmore than 10 seconds. Thus although the desired tra-\njectory is changing along the required law, the end-\neffector is locked in its initial configuration. This is\nevident from the plots in Fig.6(c) and from the error\nplot in Fig.7(c). We stress here that there was not\npossible to select a suitable value for \u03bb0 to improve on\nthis response. Furthermore, the same results were\nreproduced by other algorithms for adapting \u03bb based\non SVD. Contrary to this, the FIK law developed in\nthis paper manages successfully to escape from the sin-\ngularity (Fig.6(b) dotted line) and to track closely the\ndesired trajectory (Fig.6(a)). The errors are also kept\nto small values throughout the whole trajectory\n(Fig.7). The joint rates (Fig.8) are also within the\ndesign requirements of 5 rad\/s.\n5 Conclusions\nA novel method for solving the inverse kinematics\nproblem is presented. The solution is approached from\na control prospective and the resultant feedback-based\ninverse kinematics (FIK) law works as a filter, does\nnot require matrix manipulations and a computation\nof a damping factor. While the performance is closely\ncomparable with well established pseudo-inverse based\nalgorithms such as the damped least squares (DLS),\nthe proposed algorithm outperforms the DLS algo-\nrithm in terms of handling singularities. Furthermore,\nsince the computation does not resort to matrix\nmanipulations, the FIK law is a computationally more\nefficient than any pseudo-inverse based laws. In this\npaper, simulation results are included from a planar\nmanipulator but the new algorithm has been success-\nfully applied to redundant and non-redundant configu-\nrations with a high number of degrees of freedom and\nmultiple end-effectors.\n2009\nAuthorized licensed use limited to: University of Surrey. Downloaded on February 5, 2010 at 05:40 from IEEE Xplore.  Restrictions apply. \n0 10 20 30 40\n\u22122\n\u22121\n0\n1\n2\n3\n4\nD\nLS\n a\nlg\nor\nith\nm\n: (x\n1,\nx 2\n)\ntime, sec\n     (c)\n0 10 20 30 40\n\u22122\n\u22121\n0\n1\n2\n3\n4\nFI\nK \nal\ngo\nrit\nhm\n: (x\n1,\nx 2\n)\ntime, sec\n     (d)\n\u22123 \u22122 \u22121 0 1 2 3\n\u22122\n\u22121\n0\n1\n2\n3\n4\nx1(a)\nx 2\nend\u2212effector trajectory\n0 10 20 30 40\n0\n0.2\n0.4\n0.6\n0.8\ncondition number \u03c3\nmin\/\u03c3max\ntime, sec\n     (b)\nFigure 4. Responses for study (A): (a) (x1, x2) path; (b) condition number for DLS and FIK algorithms; (c) time responses\nof x1 and x2 using DLS; (d) time responses of x1 and x2 using FIK; dashed lines correspond to the DLS algorithm.\n0 10 20 30 40\n\u22120.2\n0\n0.2\ndq\n1\/d\nt\n(a)\nDLS algorithm\n0 10 20 30 40\n\u22120.2\n0\n0.2\ndq\n2\/d\nt\n(c)\n0 10 20 30 40\n\u22120.2\n0\n0.2\ntime, sec\n     (e)\ndq\n3\/d\nt\n0 10 20 30 40\n\u22120.2\n0\n0.2\nFIK algorithm\n(b)\n0 10 20 30 40\n\u22120.2\n0\n0.2\n(d)\n0 10 20 30 40\n\u22120.2\n0\n0.2\ntime, sec\n     (f)\nFigure 5. Responses for study (A): (a), (c) and (e) q\u02d9 for DLS algorithm; (b), (d) and (f) q\u02d9 for FIK algorithm.\n2010\nAuthorized licensed use limited to: University of Surrey. Downloaded on February 5, 2010 at 05:40 from IEEE Xplore.  Restrictions apply. \n0 10 20 30 40\n\u22121\n0\n1\n2\n3\n4\nD\nLS\n a\nlg\nor\nith\nm\n: (x\n1,\nx 2\n)\ntime, sec\n     (c)\n0 10 20 30 40\n\u22121\n0\n1\n2\n3\n4\nFI\nK \nal\ngo\nrit\nhm\n: (x\n1,\nx 2\n)\ntime, sec\n     (d)\n\u22123 \u22122 \u22121 0 1 2 3\n\u22122\n\u22121\n0\n1\n2\n3\n4\nx1(a)\nx 2\nend\u2212effector trajectory\n0 10 20 30 40\n0\n0.2\n0.4\n0.6\n0.8\n1\ncondition number \u03c3\nmin\/\u03c3max\ntime, sec\n     (b)\nFigure 6. Responses for study (B): (a) (x1, x2) path; (b) condition number for DLS and FIK algorithms; (c) time responses\nof x1 and x2 using DLS; (d) time responses of x1 and x2 using FIK; dashed lines correspond to the DLS algorithm.\n0 10 20 30 40\n\u22120.3\n\u22120.2\n\u22120.1\n0\n0.1\n0.2\n0.3\nx 1\n \ne\nrr\no\nr\n(a)\nDLS algorithm\n0 10 20 30 40\n\u22120.3\n\u22120.2\n\u22120.1\n0\n0.1\n0.2\n0.3\nFIK algorithm\n(b)\n0 10 20 30 40\n\u22120.3\n\u22120.2\n\u22120.1\n0\n0.1\n0.2\n0.3\ntime, sec\n     (c)\nx 2\n \ne\nrr\no\nr\n0 10 20 30 40\n\u22120.3\n\u22120.2\n\u22120.1\n0\n0.1\n0.2\n0.3\ntime, sec\n     (d)\nFigure 7. Responses for study (B): (a) and (c) position error for DLS algorithm; (b) and (d) position error for FIK algo-\nrithm.\n2011\nAuthorized licensed use limited to: University of Surrey. Downloaded on February 5, 2010 at 05:40 from IEEE Xplore.  Restrictions apply. \n0 10 20 30 40\n\u22122\n\u22121\n0\n1\n2\ndq\n1\/d\nt\n(a)\nDLS algorithm\n0 10 20 30 40\n\u22122\n\u22121\n0\n1\n2\ndq\n2\/d\nt\n(c)\n0 10 20 30 40\n\u22122\n\u22121\n0\n1\n2\ntime, sec\n     (e)\ndq\n3\/d\nt\n0 10 20 30 40\n\u22122\n\u22121\n0\n1\n2\nFIK algorithm\n(b)\n0 10 20 30 40\n\u22122\n\u22121\n0\n1\n2\n(d)\n0 10 20 30 40\n\u22122\n\u22121\n0\n1\n2\ntime, sec\n     (f)\nFigure 8. Responses for study (B): (a), (c) and (e) q\u02d9 for DLS algorithm; (b), (d) and (f) q\u02d9 for FIK algorithm.\nBibliography\n[1] N. S. Bedrossian, J. Paradiso, E. V. Bergmann, and\nD. Rowell. Steering law design for redundant single-\ngimbal control moment gyroscopes. Journal of Guidance\nControl Dynamics , 13:1083\u20131089, 1990.\n[2] D. L. Pieper. The kinematics of manipulators under\ncomputer control. PhD Thesis, Stanford University , 1968.\n[3] Y. Nakamura and H. Hanafusa. Inverse kinematics solu-\ntions with singularity robustness for robot manipulator\ncontrol. Trans. ASME J. of Dynamic System, Measures\nand Control , 108:163\u2013171, 1986.\n[4] C. W. Wampler. Manipulator inverse kinematic solution\nbased on vector formulations and damped least squares\nmethods. IEEE Trans. on System Man and Cybernetics ,\n16(1):93\u2013101, 1986.\n[5] W. A. Wolovich and H. Elliott. A computational tech-\nnique for inverse kinematics. The 23rd IEEE Conference\non Decision and Control , 23:1359\u20131363, 1984.\n[6] A. Balestrino, G. De Maria, and L. Sciavicco. Robust\ncontrol of robotic manipulators. 9th IFAC World Con-\ngress, Budapest , 1984.\n[7] L-C. T. Wang and C. C. Chen. A combined optimiza-\ntion method for solving the inverse kinematics problem of\nmechanical manipulators. IEEE Transaction on Robotics\nand Automation , 7(4):489\u2013499, 1991.\n[8] A. S. Deo and I. D. Walker. Adaptive non-linear least\nsquares for inverse kinematics. IEEE International Con-\nference on Robotics and Automation , pages 186\u2013193,\n1993.\n[9] A. N. Pechev. Feedback-based steering law for control\nmoment gyros. Journal of Guidance Control Dynamics ,\n30(3):848\u2013855, 2007.\n[10] A. N. Pechev. Computationally efficient and singuy-\nlarity robust method for solving the inverse kinematics\nproblem. Patent pending , 2007.\n[11] J. R. Sagli I. Spangelo and O. Egeland. Bounds on the\nlargest singular value of the manipulator jacobian. IEEE\nTransaction on Robotics and Automation , 9(1):93\u201396,\n1993.\n[12] J.C. Doyle, K. Glover, P. Khargonekar, and B. Francis.\nState-space solutions to standard H2 and H\u221e control\nproblems. IEEE Transactions on Automatic Control ,\n34:831\u2013847, 1989.\n[13] S. Chiaverini, B. Siciliano, and O. Egeland. Review of\nthe damped least-squares inverse kinematics with experi-\nments on an industrial robot manipulator. IEEE Transac-\ntions on control systems technology , 2(2):123\u2013134, August\n1994.\n[14] A. A. Maciejewski and J. M. Reagin. A parallel algo-\nrithm and architecture for the control of kinematically\nredundant manipulators. IEEE Transaction on Robotics\nand Automation , 10(4):405\u2013414, August 1994.\n2012\nAuthorized licensed use limited to: University of Surrey. Downloaded on February 5, 2010 at 05:40 from IEEE Xplore.  Restrictions apply. \n"}