{"doi":"10.1080\/0968776000080205","coreId":"14259","oai":"oai:generic.eprints.org:330\/core5","identifiers":["oai:generic.eprints.org:330\/core5","10.1080\/0968776000080205"],"title":"A software tool for simulating practical chemistry","authors":["Povey, David","Bennett, James"],"enrichments":{"references":[{"id":198794,"title":"Chemical education research: facts, findings and consequences',","authors":[],"date":"1980","doi":"10.1039\/cs9800900365","raw":"Johnstone, A. H. (1980), 'Chemical education research: facts, findings and consequences', Chemical Society Reviews, 9, 365-90.","cites":null},{"id":198792,"title":"Pre-laboratory support using dedicated software',","authors":[],"date":"1999","doi":null,"raw":"Nicholls, B. S. (1999), 'Pre-laboratory support using dedicated software', University Chemistry Education, 3, 22-7.","cites":null},{"id":198795,"title":"The open-ended experiment - more than a practical',","authors":[],"date":"1993","doi":null,"raw":"Osborne, A. G. (1993), 'The open-ended experiment - more than a practical', Proceedings of Variety in Chemistry Teaching Conference, University of York, UK, 78.","cites":null},{"id":1043088,"title":"The role of educational research in the quest for quality in the teaching and learning of chemistry',","authors":[],"date":"1993","doi":null,"raw":"Verdonk, A. (1993) 'The role of educational research in the quest for quality in the teaching and learning of chemistry', Proceedings of Variety in Chemistry Teaching, University of York, UK, 49-54.","cites":null},{"id":198791,"title":"The use of VRML in chemical education',","authors":[],"date":"1998","doi":null,"raw":"Dolata, D. P. and Wathen, S. P. (1998), 'The use of VRML in chemical education', Journal of Molecular Graphics and Modelling, 16, 37-45.","cites":null},{"id":198793,"title":"Virtual investigations: ways to accelerate experience',","authors":[],"date":"1997","doi":null,"raw":"Garratt, J. (1997), 'Virtual investigations: ways to accelerate experience', University Chemistry Education, 1, 19-27.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2000","abstract":"A software package has been written to allow a user to build and manipulate a simple chemistry experiment. Using a toolbox of equipment the apparatus can be interactively designed and the necessary chemicals added from a database. Selection of the appropriate physical and reaction conditions allows the experiment to be run both in real and virtual time, snapshots of the experiment being stored for subsequent modification and replay. The structure of the reaction data file allows any reaction to be designed with yields and both forward and backward reaction rates. Thus, the user has the opportunity to experiment with the best apparatus layout, reactant composition and physical conditions in order to achieve an optimal result. Some extensions of the current software are discussed","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/14259.pdf","fullTextIdentifier":"http:\/\/repository.alt.ac.uk\/330\/1\/ALT_J_Vol8_No2_2000_A%20software%20tool%20for%20simulating.pdf","pdfHashValue":"c7e8895c13587f26fcf6a10dd7d5cd023435855f","publisher":"University of Wales Press","rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:generic.eprints.org:330<\/identifier><datestamp>\n      2011-04-04T09:15:00Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      7375626A656374733D4C:4C42<\/setSpec><setSpec>\n      7375626A656374733D4C:4C43:4C4331303232<\/setSpec><setSpec>\n      74797065733D61727469636C65<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/repository.alt.ac.uk\/330\/<\/dc:relation><dc:title>\n        A software tool for simulating practical chemistry<\/dc:title><dc:creator>\n        Povey, David<\/dc:creator><dc:creator>\n        Bennett, James<\/dc:creator><dc:subject>\n        LB Theory and practice of education<\/dc:subject><dc:subject>\n        LC1022 - 1022.25 Computer-assisted Education<\/dc:subject><dc:description>\n        A software package has been written to allow a user to build and manipulate a simple chemistry experiment. Using a toolbox of equipment the apparatus can be interactively designed and the necessary chemicals added from a database. Selection of the appropriate physical and reaction conditions allows the experiment to be run both in real and virtual time, snapshots of the experiment being stored for subsequent modification and replay. The structure of the reaction data file allows any reaction to be designed with yields and both forward and backward reaction rates. Thus, the user has the opportunity to experiment with the best apparatus layout, reactant composition and physical conditions in order to achieve an optimal result. Some extensions of the current software are discussed.<\/dc:description><dc:publisher>\n        University of Wales Press<\/dc:publisher><dc:date>\n        2000<\/dc:date><dc:type>\n        Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:format>\n        application\/pdf<\/dc:format><dc:language>\n        en<\/dc:language><dc:rights>\n        cc_by_nc_nd<\/dc:rights><dc:identifier>\n        http:\/\/repository.alt.ac.uk\/330\/1\/ALT_J_Vol8_No2_2000_A%20software%20tool%20for%20simulating.pdf<\/dc:identifier><dc:identifier>\n          Povey, David and Bennett, James  (2000) A software tool for simulating practical chemistry.  Association for Learning Technology Journal, 8 (2).  pp. 40-50.  ISSN 0968-7769     <\/dc:identifier><dc:relation>\n        10.1080\/0968776000080205<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/repository.alt.ac.uk\/330\/","10.1080\/0968776000080205"],"year":2000,"topics":["LB Theory and practice of education","LC1022 - 1022.25 Computer-assisted Education"],"subject":["Article","PeerReviewed"],"fullText":"A software tool for simulating practical chemistry\nDavid Povey and James Bennett\nDepartment of Chemistry, University of Surrey\nemail: d.povey@surrey.ac.uk\nA software package has been written to allow a user to build and manipulate a simple\nchemistry experiment. Using a toolbox of equipment the apparatus can be interactively\ndesigned and the necessary chemicals added from a database. Selection of the\nappropriate physical and reaction conditions allows the experiment to be run both in real\nand virtual time, snapshots of the experiment being stored for subsequent modification\nand replay. The structure of the reaction data file allows any reaction to be designed with\nyields and both forward and backward reaction rates. Thus, the user has the opportunity\nto experiment with the best apparatus layout, reactant composition and physical\nconditions in order to achieve an optimal result. Some extensions of the current software\nare discussed\nIntroduction\nThe field of 'active learning' is growing rapidly in many areas and high-quality software\nthat allows the student to interact with a particular environment is now becoming\ncommonplace. Chemistry is no exception and one area that has seen extensive development\nis the use of computer simulations of laboratory procedures used either as a preparation\nfor laboratory work or to carry out a virtual investigation. In the former case, Nicholls\n(1999) describes a range of software providing pre-laboratory support for a range of first-\nyear undergraduate inorganic chemistry experiments. Using these computer programs,\nstudents work at their own rate on material presented through graphics, animations, simple\ncalculations, tests and questions prior to carrying out the actual laboratory exercise. It is\nclaimed that this approach'encourages students to evaluate critically procedures and results\nby ensuring that they think beforehand about the tasks they will be performing\nsubsequently in the actual laboratory class. Garratt (1997) describes a different approach,\npredominantly in the areas of physical chemistry and biochemistry, giving students the\nopportunity to design 'virtual investigations' and to process and interpret the resulting\n40\nALT-J Volume 8 Number 2\ndata. For example, students are asked to choose a set of experimental parameters to allow\nthe kinetics of a particular enzyme (randomly generated from 150,000 hypothetical\nexamples) to be investigated.\nThe decision to develop the software described in this paper was in part a response to the\nresults of a brief survey of our second-year undergraduates on the merits of practical\ncourses they undertook. In the second year of our chemistry degree programmes, the\nlaboratory practical course occupies one day per week for the whole academic year with\nequal time allocated to physical, inorganic and organic chemistry. In the physical chemistry\ncomponent, the experiments involve using a range of techniques to make particular\nmeasurements on a system followed by a subsequent analysis of data. The inorganic and\norganic chemistry sessions are primarily preparative in nature, studying various practical\ntechniques, although the materials synthesized might be analysed subsequently.\nAdditionally, all students undertake a twelve-week course, 'Determination of Structure'. In\nthis course, students working in pairs, are given a sample which they are required to\nidentify based upon chemical and spectroscopic evidence. The evidence is provided in a\nfolder of spectra and supplementary data, but students' may make some limited\nexperimental measurements.\nOur survey elicited an interesting range of responses. The Determination of Structure\ncourse was reckoned to be 'stimulating and interesting' often representing in their eyes 'a\nthought-provoking exercise and the opportunity to develop problem-solving strategies'.\nComments on our traditional practical courses were more negative. Those classes that\ninvolved synthesis were ranked generally between 'interesting the first time' to 'repetitive\nand boring'. When questioned further, having explained that learning about synthetic\nprocedures was important training for practical chemistry the responses change to 'well,\nwe're only following recipes; if we do this we know we'll get the correct answer, where's the\nchallenge in that'. The physical chemistry did fare better. In this case, students saw the\ninterpretation of the data as the challenge but the collection of data as 'following a recipe,\nno opportunity to experiment'.\nThe need to develop skills in the design and setting up of an experiment is crucial to the\npractical training of professional chemists. However, many practical courses are formulaic\nin approach requiring students to follow pre-planned recipes. While students gain some\nfamiliarity with chemical glassware, and instrumental techniques reinforce theoretical\naspects of a course, opportunities for self-learning and experimentation in this type of\nenvironment can be difficult to implement when students follow the script like a cookbook\n(Johnstone, 1980). Safety considerations often play a part here, individual experiments\nneeding to be risk-assessed before allowing them to be carried out. Of course, useful pre-\nlab work can still be carried out by allowing the student to view a video-based explanation\nof practical techniques (Rest, 1995). However, the rather sterile nature of the practical side\nof the experiment can still remain.\nThis in no way decries the importance of the practical. It is possible to design particular\nsynthesis experiments which allow a certain freedom, a scenario which has been\nsuccessfully implemented (Osborne, 1993). Here, the student might be asked to carry out\nthe process using a range of different conditions and decide upon the best procedure. The\ninstructions are clear, the recipe needs to be followed, but not now in a totally linear way. If\n41\nDavid Povey and James Bennett A software tool for simulating practical chemistry\nall the various combinations have been risk-assessed, the safety aspects have been covered.\nThe only problem here may be one of time constraints where extended investigations may\nnot fit into the available time slot.\nIt has been suggested (Verdonk, 1993) that the laboratory experience can be improved by\nturning the process into something that more closely resembles a true investigation. In this\nrespect, an alternative approach can be to provide more of an open-ended investigation\nrequiring the planning and carrying out of a synthesis. The planning aspects can be carried\nout 'dry' by reference to textbooks and journals. However, this is often no more than a\nliterature search: it is the actual practical aspects and decision-making processes that are\nmore difficult to deal with because of the inherent problems associated with risk-\nassessment of an individual experiment.\nWe have set out to investigate ways in which practical work might be supported by\ndesigning and developing a software tool to simulate basic bench chemistry. The use of the\nsoftware is intended to augment laboratory sessions, not to replace them. As with a real\npractical experiment, the application should respond to what the user does and produce\nproducts and yields dependent upon the apparatus layout, reactant composition and\nspecific physical conditions.\nThe development of the software consisted of four components:\n\u2022 a mechanism for the user to design chemical apparatus and assemble it in a fashion\nsimilar to the well known and commonly used Quick Fit glassware;\n\u2022 a means of selecting and adding specific chemicals to the assembled apparatus from a\ndatabase;\n\u2022 a simple mathematical model to simulate the performing of reactions on the reagents\nunder a range of conditions;\n\u2022 a visual interface to allow the reactions to be followed and replayed under different\nconditions so that various experimental scenarios may be investigated.\nDesign rationale\nThe program has been designed around a series of tasks, all controlled by a container\napplication. Each component that requires information about the experiment shares a data\nclass containing that information that can be passed easily between components. The\ncomponents that need the experiment data are all implemented in the container application\nas a series of objects. Any components that do not require the experiment data are\nimplemented as COM objects, using Microsoft's Component Object Model. This approach\nhas been adopted to optimize data transfer speed. Borland Delphi 3.0 was chosen as the\nmajor development language. It is fully object orientated with extensive file streaming and\ndatabase capabilities.\nApplication structure\nThe application itself consists of different components as shown in Figure 1. The container\napplication is made up of a number of internal objects as shown in Figure 2 and is the\nmain front-end to the application'\n42\nALT-J Volume 8 Number 2\n1\n1\n1\nHelp Server |\n|\nMicrosoft Agent\ni\nAccord ActiveX Control |\n| Databe\nContainer Application\nI\n1\nDB Server\n1\nise |J\ni\n| Graphics D a\ni\n| | Structure Server\n1\n| Accord ActiveX Control\n1\n1\nfigure \/: Object model of the software.\n| Application Container |\nEquipment Design\nComponent\nChemical Selection\nComponent\nReaction Design\nComponent\nExperiment Run\nComponent\nFigure 2: Components in the Container Application.\nThe main function of the Container Application is to display a diagram of the experiment\nand allow the user to run the other components in the system. It loads and saves\nexperiments and any stored runs to and from files by writing the components to a file\nstream and runs the other components by passing the experiment to them. When the user\nselects to run the experiment, it checks if apparatus, chemicals and reactions have been set.\nIf not, it flags this and informs the user, giving them the option to continue. It also\nprovides printing functionality, and can either output a picture of the apparatus or an\nexperimental report that has two sections, an experimental section and the results. The\nexperimental section provides a picture of the experiment, a list of the apparatus including\nany relevant settings (e.g. heater temperature), a list of the chemicals, their temperature,\nstate, quantity and the equipment they are in, and a list of the reactions flagged to take\nplace in the experiment. The results section gives the final reaction time and the final\nproducts. It is thus possible for a student, as part of an assignment, to produce a complete\nprinted record of the progress of the experiment. Also implemented is a Wizard that guides\nthe user through the various stages for building and running an experiment. As described\nlater, access to a spoken interface is possible.\nData class structure\nThe data class structure defined for use in the software is shown in Figure 3.The top level\nTExperiment contains a collection of equipment classes, a collection of reaction classes\nand an image of the experiment. Each equipment class contains a list of the connection\npoints around and a list of the chemicals contained in it. Each chemical class has a\nstructure stored as a MDL\/MolFile, as well as physical properties such as specific heat\ncapacity, melting point and boiling point. The reaction classes are a collection of different\nreactions, each with a list of starting materials, a list of products, the temperature of\nreaction and a description. Each starting material and product has a stoichiometry, which\n43\nDavid Povey and James Bennett A software tool for simulating practical chemistry\n1\nTExperiment\n11\n1\nTEquiptmentCollection\n1\nn\nTReactions\n1\nn\nTEquiptmentltem\n111\n1 11\nTConnections TChemicals\n1\nn\nTChemicals\nTReaction\n1\n1\nTChem istryCollection\n1\nn\nTGenericChemical\nFigure 3: Class diagram of the data structure.\ngives the ratio of the amount of starting materials that react and products that are\nproduced. This class structure mirrors the hierarchy of a real experiment and provides a\nlogical way to store all necessary data. These classes also contain methods to perform all\nmanipulation, from adding and deleting chemicals to deciding where to place equipment\nduring the experiment design process.\nEquipment design component\nThis component allows the user to design and assemble the apparatus used in the\nexperiment. A simple 'drag and drop' approach has been utilized to allow glassware to be\nselected. Figure 4 shows the pilot version of the equipment design interface.\nFigure 4: The equipment\ndesign interface.\n44\nALT-} Volume 8 Number 2\nTwo strategies for assembling the equipment were considered. The first restricts the user's\nchoice. In this case, the program would not allow an experiment to proceed unless the user\nhad assembled the correct pieces of glassware in the correct positions with the correct\nchemical proportions and conditions set up. Then the application is run in a pre-set fashion\nallowing minimal or no interaction from the user. The second approach is a 'totally free\nform' where the user can place any piece of glassware anywhere on the screen adding\nchemicals where appropriate and setting reaction conditions accordingly. This allows the\ngreatest flexibility and offers more learning potential as there may be several ways of\nachieving the desired product. However, this approach can lead to ridiculous and unrealistic\nscenarios; In this pilot version we have chosen to restrict the manner in which the apparatus\ncan be assembled, but to allow free choice as to amounts and type of reagents. This avoids\nthe specification of impossible scenarios while allowing some freedom of input.\nThe apparatus is stored in the experiment as a collection of pieces of equipment where\neach piece is a class with a number of properties; generally, a list of connections, a picture\nand a size. At present, for this pilot version, we have a limited range of glassware available\nbut since an external file and its associated DLL are used to store this information, the\nequipment list is relatively easy to update. One can start at any point in building up the\napparatus by selecting from the toolbox. However, once a piece of equipment has been\nselected, only those pieces that can logically connect to it remain enabled in the glassware\ntoolbox. The equipment can also be saved at any time during the building process and\nreloaded as required.\nChemical selector component\nThis component is shown in Figure 5. It is used to design what reactions will take place in a\nparticular experiment, or design new ones. The user can select what chemicals to add to the\napparatus and in what quantity.\ni\nFigure 5: The reaction design interface.\n45\nDavid Povey and James Bennett A software tool for simulating practical chemistry\nA reaction is assumed to be composed of a number of reactants, a minimum temperature\nfor reaction and forward and backward reaction rates. At present, there is no maximum\ntemperature or any temperature dependence for the rates although future versions will have\nthis implemented. Whilst this does represent a high level of approximation, reactions can\nreach equilibrium because both a forward and backward pseudo-rate is applied during the\ncourse of the reaction\nBy default, the chemicals are added at 20\u00b0C. Each reagent comes from a chemicals database,\nimplemented as a Paradox 5 table containing chemical structure and a range of physical\nproperties such as molecular formula, molecular weight, specific heat, latent heat, melting\nand boiling points, density and name. Chemicals can also be added by providing the structure\nas a MDL\/MolFile together with the other physical properties. The Accord ActiveX control\n(see later) with which we have experimented then calculates the molecular formula and\nmolecular weight. There is no limit to the number of chemical entries in the database pro-\nvided that the necessary physical properties can be allocated. Whenever a chemical is added to\nthe apparatus, the amount required is requested and any units may be used as the conversion\nto moles takes place internally. The Chemical Selector displays the chemicals to be used in the\nexperiment as a tree diagram with each chemical a child of the equipment it resides in.\nThe reactions are stored in a file that is loaded each time this component is accessed and\ncan be edited as required to add or delete possible reactions. Any number of different\nreactions can be set, allowing the experiment to produce one product which can\nsubsequently react again to produce another. A built-in utility is used to decide what\nreactions, both forward and backward, may take place using the chemicals already added\nto the experiment. This is done by matching the list of chemicals added to the apparatus\nwith all of the reactions that have been set up and flagging those that are possible. In the\nfinal version of the software, it is expected that this component will be hidden from the\nuser and it will be up to the instructor to decide the types of reactions that can take place\nand those that will be investigated.\nExperiment run component\nThis component allows the user to run the experiment at half, normal (one update per\nsecond), double and quadruple speeds. The component is shown in Figure 6.\nWhen the simulation runs, it updates the progress once every time slice in a sequential\nfashion. This update first moves any reagents, then heats up the heater and any reagents in\nflasks on the heater. Next it reacts any chemicals based on the physico-chemical data\nextracted from the reaction database and finally it removes any chemicals that have zero\nmoles in the experiment and equilibrates the temperatures.\nThe software stores the current experimental data for each time slice and provides an\nanimated display of the running experiment with the reagents in their correct physical\nstates. The experimental data can be retrieved from any point during the experiment by\nmoving a slider, related to the progress of the reaction, and the experiment can be run\nagain from that point, after any changes to particular properties have been made. It also\ndisplays the experimental details as a tree diagram showing the equipment and any\nchemicals in specific parts of the apparatus, along with their temperature and physical state\nand the reactions that could take place.\n46\nALT-} Volume 8 Number 2\nfigure 6: The\nexperiment\nrun\ncomponent\n- M H\u00ab\u00abo-Scef\u00ab.10.T\u00abfp\u00ab\u00abire.aa\ne'g.DMManConeienMi\nBecause of the complexities of even a very simple system, a number of rules and\nsimplifications have been implemented in this version. All chemicals are moved using\ngravity with the assumption that all gases are less dense than air. The experiment runner\nloops through the equipment looking for liquids and solids. If it finds any, it checks the\nequipment for any downward connections and if any are present, the reagents are moved\ndownwards into whatever is below, either a piece of glassware or out into the surroundings\nif no glassware is present. This is repeated until no more movements can take place. Gases\nare then moved upwards by checking for upward connections and finding a logical path via\nthose connections either to an adjacent vessel or into the open air. This is also repeated\nuntil no more gas moves. This logical up or down movement makes the movement of\nchemicals simple but does not at present allow for dense gases.\nProviding energy to the system proved to be more problematical. The heaters used have a\ntemperature setting from 1 to 10 indicating how much energy they put into the system in\nunit time and a heat setting, which is the maximum temperature that the system can reach.\nThus, a low temperature setting and a high heat setting may mean the system will never\nreach equilibrium. This only applies to liquids and solids below their boiling point. If the\ntemperature exceeds the melting point, the chemicals melt completely and immediately. If\nthe temperature reaches boiling point, they are boiled slowly (the display changing to show\nthis effect visually). This is achieved by utilizing another property, the latent heat of\nevaporation. This works in an identical way to the specific heat capacity, except every time\nthe value is exceeded, one gram (a reasonable but arbitrary quantity) of the chemical is\nconverted to a gas. These methods of heating the chemicals and converting the state\nprovide a good method of qualitatively showing the reaction as it happens. Reactions\nhappen fast enough to occur in a few minutes, but not so fast that the user cannot witness\nthem happening.\n47\nDavid Povey and James Bennett A software tool for simulating practical chemistry\nOnce the chemicals have been heated in that cycle, a check is made for any possible\nreactions. This is done by looping through the equipment, and assembling a list of\nchemicals in each component of the apparatus. This list is then compared with the list of\npossible reactions that can take place and provided that the temperature is above the\nminimum set in the reaction designer, the components are allowed to react. Using the\nstoichiometry of the reaction equation coupled with the quantities of the reagents used,\nthe number of moles reacting at that particular temperature in that time slice is calculated\nfor the smallest component of the reactants using the forward reaction rate. This rate is\ndefined as the number of moles that will react in 1,000 seconds (again an arbitrary but\nacceptable value). The number of moles of all the reacting species is then reduced by this\namount followed by a proportionate increase in the products from that particular reaction.\nThis process is repeated for the backward reaction, thus allowing the system to come to\nequilibrium.\nFinally, the temperatures are equalized. Because of the different specific heat capacities,\nmaterials will heat up at different rates, which is not realistic. Therefore, we use a simple\nformula based on the molar quantities of each of the reactants to define an average\ntemperature that is then applied to all reagents in each specific piece of equipment. While\nnot providing completely accurate temperatures, it has the advantage of speed and\nsimplicity.\nInterface components\nIn this section we discuss the help facilities provided by the software and the techniques\nadopted for displaying and manipulating chemical formulae.\nHelp server\nThe Microsoft Agent (available free from http:llwww.microsoft.comlMSAgeni) is a set of\ncomponents that will be an integrated part of Windows 2000. It is a tool designed to\nimprove user interaction by providing an animated character that communicates with the\nuser at three levels, depending upon what additional components are installed. These levels\nof communication are speech bubbles containing text, spoken output using a text to speech\nengine, and vocal control, using a speech recognition engine. For the pilot version, we\nexperimented with speech bubbles and spoken output.. We implemented a conventional\ntext-based 'wizard' for aiding the user in the design, building and running of experiments\nand then refined the user interaction with the Microsoft Agent. There was no doubt that it\nimproved substantially the impact of the interface despite a slow response.\nDisplaying and manipulating chemical formulae\nDuring the design stage, it was decided that the program should be 'chemically aware' so\nthat all chemical structures were stored in a standard format that could be analysed or\nmodified by any additional chemistry software. Thus, we have experimented with a\ncollection of development tools, the Accord Suite, which provides functions for creating,\nmanipulating and performing database functions on chemical data, and an ActiveX\ncontrol for displaying and manipulating chemical data in an application or on a Web page.\nThe early release\/beta test version of the ActiveX control was used (available free from\nhttp:llwww.synopsys.co.ukl). This ActiveX control allows chemical information to be\nimported from a file, either locally or from an internet site, and many standard file types\n48\nALT-J Volume 8 Number 2\nare supported including Daylight SMILES, MDL\/MolFiles, ISIS\/Draw sketches and\nChemWindows sketches. The control also has functions for obtaining information about\nthe molecule stored in it, including its molecular weight and empirical formula.\nThe current implementation of the Accord ActiveX control allows structure to be\nvisualized and some molecular properties to be calculated. The Accord suite also includes\na chemistry Application Programmer Interface (API) that could be implemented. This API\nprovides functions for comparing structures against generic structures, and producing\nproducts from generic structures and starting materials.\nConclusions\nDuring the development of the program, it became clear a large number of possible\nenhancements could be made. These include:\n\u2022 While two-dimensional flat representation for the glassware was adequate, the ability to\nmanipulate apparatus showing a true three-dimensional perspective may be\nadvantageous. Dolata and Wathen (1998) have reviewed the use of Virtual Reality\nModelling Language in chemical education and have shown examples of chemical\napparatus containing such a perspective although no interactive design capability was\nincluded.\n\u2022 There are other operations that could be carried out such as allowing the user to\nchange more than just the heater and funnel properties during a reaction run, e.g.\nrefilling a funnel or allowing water to flow through a condenser. In fact all the manual\noperations might be required.\n\u2022 The current prototype does not implement a true kinetic model where rates of reactions\nare dependent upon temperature. Whilst it is not always possible to acquire correct\nkinetic data for reactions, Povey and Baldwin (1997) as part of the eLABorate project\nhave developed a method which allows the kinetics of any reaction to be simulated\ngiven the order, activation energy and Arrhenius factor. This means that the kinetics\n(which need not necessarily reflect the true scenario) can be built into the software\nincreasing the range of opportunities for investigation.\n\u2022 Currently all reactions\/reagents are set to a starting temperature of 20\u00b0C and return to\nthis temperature upon cooling. This is very restrictive as many reactions require the\npresence of an ice-bath so a facility to allow a greater range of operating temperatures\ncould be implemented.\n\u2022 At present any products from one reaction cannot be stored and used as starting\nmaterials for another. Many syntheses require a multi-stage pathway and it is clear that\na varied and complex range of scenarios could be developed if this was allowed.\n\u2022 Currently, solutions are not modelled as this would require the database to hold\ninformation on solubility data in a range of solvents. However, if implemented, this\nwould increase the realism of the scenario allowing a user to select the best solvents for\na reaction and simulate precipitation and recrystallization events.\n.The software is certainly not meant to replace traditional practical chemistry. Rather it\nshould be seen as an adjunct in which students can experiment, in their own time, with a\n49\nDavid Povey and James Bennett A software tool for simulating practical chemistry\nrange of scenarios and attempt to design a strategy to optimize a particular synthesis.\nThere are no time constraints, so poor yields can be discarded, the experiment replayed\nand conditions or reagents modified. The range of scenarios is unlimited, provided that the\nnecessary reactions can be coded into the database and with some prior thought, the\nlecturer can place specific restrictions on any task in terms of yield, number of steps, types\nof reagent used and so on.\nReferences\nDolata, D. P. and Wathen, S. P. (1998), 'The use of VRML in chemical education', Journal\nof Molecular Graphics and Modelling, 16, 37-45.\nNicholls, B. S. (1999), 'Pre-laboratory support using dedicated software', University\nChemistry Education, 3, 22-7.\nGarratt, J. (1997), 'Virtual investigations: ways to accelerate experience', University\nChemistry Education, 1, 19-27.\nJohnstone, A. H. (1980), 'Chemical education research: facts, findings and consequences',\nChemical Society Reviews, 9, 365-90.\nOsborne, A. G. (1993), 'The open-ended experiment - more than a practical', Proceedings\nof Variety in Chemistry Teaching Conference, University of York, UK, 78.\nPovey, D. C and Baldwin, C. R. (1997), 'Program kLAB',\nhttp:\/\/www.york.ac.uk\/depts\/chem\/stqff\/elaborate\/.\nRest, A. J (ed). (1995), Basic Laboratory Chemistry, Harrow, Middlesex: Educational\nMedia Film and Video Ltd.\nVerdonk, A. (1993) 'The role of educational research in the quest for quality in the\nteaching and learning of chemistry', Proceedings of Variety in Chemistry Teaching,\nUniversity of York, UK, 49-54.\n50\n"}