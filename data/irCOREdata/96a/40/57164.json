{"doi":"10.1109\/WETICE.2005.67","coreId":"57164","oai":"oai:eprints.lincoln.ac.uk:55","identifiers":["oai:eprints.lincoln.ac.uk:55","10.1109\/WETICE.2005.67"],"title":"Evaluation of an awareness distribution mechanism: a simulation approach","authors":["Nutter, David","Boldyreff, Cornelia"],"enrichments":{"references":[{"id":18432346,"title":"A robust protocol for building superpeer topologies.","authors":[],"date":null,"doi":"10.1109\/ptp.2004.1334948","raw":"A. Montresor. A robust protocol for building superpeer topologies. In Proceedings of the Fourth IEEE International Conference on Peer To Peer Computing [10]. http:\/\/femto.org\/p2p2004\/.","cites":null},{"id":18432348,"title":"An evaluation framework to drive future evolution of a research prototype.","authors":[],"date":"2004","doi":"10.1109\/enabl.2004.13","raw":"D. Nutter, C. Boldyreff, and S. Rank. An evaluation framework to drive future evolution of a research prototype. In Proceedings of the 5th workshop on Evaluating Collaborative Enterprises ( ECE), Modena, Italy, June 2004. IEEE Computer Society. http:\/\/hemswell.lincoln.ac.uk\/wetice04\/.","cites":null},{"id":18432349,"title":"Architectural requirements for an Open Source Component and Artefact Repository System within GENESIS.","authors":[],"date":"2002","doi":null,"raw":"D. Nutter, S. Rank, and C. Boldyreff. Architectural requirements for an Open Source Component and Artefact Repository System within GENESIS. In Proc. of the Open Source Software Development Workshop, pages 176\u2013196. University Of Newcastle, February 2002.","cites":null},{"id":18432342,"title":"Awareness and coordination in shared workspaces.","authors":[],"date":"1992","doi":"10.1145\/143457.143468","raw":"P. Dourish and V. Belotti. Awareness and coordination in shared workspaces. In ACM Conference on Computer Supported Cooperative Work (CSCW\u201992), pages 107\u2013114, Toronto, Ontario, November 1992. ACM Press, New York City.","cites":null},{"id":18432340,"title":"Awareness services for digital libraries.","authors":[],"date":"1997","doi":"10.1007\/bfb0026727","raw":"A. Crespo and H. Garcia-Molina. Awareness services for digital libraries. In Proceedings of the First European Conference on Research and Advanced Technology for Digital Libraries, Pisa, September 1997.","cites":null},{"id":18432338,"title":"Communication and con\ufb02ict issues in collaborative software research projects.","authors":[],"date":"2004","doi":"10.1049\/ic:20040258","raw":"C. Boldyreff, D. Nutter, and S. Rank. Communication and con\ufb02ict issues in collaborative software research projects. In Proceedings of the 4rd Open Source Software Workshop, ICSE 2004, March 2004.","cites":null},{"id":18432351,"title":"Constructing a balanced (log(n)\/loglog(n))-diameter super peer topology for scalable p2p systems.","authors":[],"date":null,"doi":"10.1109\/ptp.2004.1334949","raw":"Y. J. Pyun and D. S. Reeves. Constructing a balanced (log(n)\/loglog(n))-diameter super peer topology for scalable p2p systems. In Proceedings of the Fourth IEEE International Conference on Peer To Peer Computing [10]. http:\/\/femto.org\/p2p2004\/.","cites":null},{"id":18432345,"title":"Engineering realities of building a working peer-to-peer system.","authors":[],"date":"2004","doi":null,"raw":"M. B. Jones and J. Dunagan. Engineering realities of building a working peer-to-peer system. Technical Report MSRTR-2004-54, Microsoft Research, June 2004.","cites":null},{"id":18432337,"title":"Free riding on gnutella.","authors":[],"date":"2000","doi":"10.5210\/fm.v5i10.792","raw":"E. Adar and B. A. Huberman. Free riding on gnutella. First Monday, August 2000. Technical Report, Xerox PARC.","cites":null},{"id":18432339,"title":"Herald: Achieving a global event noti\ufb01cation service.","authors":[],"date":"2001","doi":"10.1109\/hotos.2001.990066","raw":"L. F. Cabrera, M. B. Jones, and M. Theimer. Herald: Achieving a global event noti\ufb01cation service. In Proceedings of the 8th Workshop on Hot Topics in Operating Systems. IEEE, May 2001.","cites":null},{"id":18432347,"title":"Historical awareness support and its evaluation in collaborative so ftware engineering.","authors":[],"date":"2003","doi":"10.1109\/enabl.2003.1231403","raw":"D. Nutter and C. Boldyreff. Historical awareness support and its evaluation in collaborative so ftware engineering. In Proceedings of WETICE 2003, pages 171\u2013176. IEEE Computer Society, June 2003.","cites":null},{"id":18432343,"title":"Overlay networks: A scalabale alternative for P2P.","authors":[],"date":"2003","doi":"10.1109\/mic.2003.1215663","raw":"D. Doval and D. O\u2019Mahony. Overlay networks: A scalabale alternative for P2P. IEEE Internet Computing, August 2003.","cites":null},{"id":18432336,"title":"P-grid: A selforganizing structured p2p system.","authors":[],"date":"2003","doi":"10.1145\/945721.945729","raw":"K. Aberer, P. Cudr\u00b4 e-Maroux, A. Datta, Z. Despotovic, M. Hauswitrth, M. Punceva, and R. Schmidt. P-grid: A selforganizing structured p2p system. SIGMOD Record, 32(3), September 2003. P2P Special Issue.","cites":null},{"id":18432350,"title":"PROST: A programmable structured peer-to-peer overlay network.","authors":[],"date":null,"doi":"10.1109\/ptp.2004.1334965","raw":"M. Portmann, S. Ardon, P. Senae, and A. Seneviratne. PROST: A programmable structured peer-to-peer overlay network. In Proceedings of the Fourth IEEE International Conference on Peer To Peer Computing [10]. http:\/\/femto.org\/p2p2004\/.","cites":null},{"id":18432341,"title":"Semantic overlay networks for p2p systems.","authors":[],"date":"2002","doi":"10.1007\/11574781_1","raw":"A. Crespo and H. G. Molina. Semantic overlay networks for p2p systems. Technical report, Google Technologies Inc. Stanford University, 2002.","cites":null},{"id":18432344,"title":"Workspace awareness support with radar views.","authors":[],"date":"1996","doi":"10.1145\/257089.257286","raw":"C. Gutwin, S. Greenberg, and M. Roseman. Workspace awareness support with radar views. In CHI Conference Companion, pages 210\u2013211, 1996.","cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2005-06-13","abstract":"In distributed software engineering, the role of informal communication is frequently overlooked. Participants simply employ their own ad-hoc methods of informal communication. Consequently such communication is haphazard, irregular, and rarely recorded as part of the project documentation. Thus, a need for tool support to facilitate more systematic informal communication via awareness has been identified. The tool proposed is based on the provision of awareness support that recognises the complete context of the evolution of software artefacts rather than single events.\\ud\n Peer-to-Peer (P2P) networking has been successfully\\ud\nemployed to develop various distributed software engineering support tools. However, there are scalability problems inherent in naive P2P networks. To this end a semantic overlay network organisation algorithm has been developed and tested in simulation prior to deployment as part of a forthcoming awareness extension to the Eclipse environment.\\ud\n The simulation verified that the self-organisation algorithm was suitable for arranging a P2P network, but several unexpected behaviours were observed. These included\\ud\nwandering nodes, starved nodes, and local maxima. Each\\ud\nof these problems required modification of the original algorithm design to solve or ameliorate them","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/57164.pdf","fullTextIdentifier":"http:\/\/eprints.lincoln.ac.uk\/55\/1\/ECE-nutter-simulation.pdf","pdfHashValue":"cc1bec73df553189b7144a42c5e056ba5fc6e42d","publisher":null,"rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:eprints.lincoln.ac.uk:55<\/identifier><datestamp>\n      2013-03-13T08:21:51Z<\/datestamp><setSpec>\n      7374617475733D707562<\/setSpec><setSpec>\n      7375626A656374733D6A6163735F47:6A6163735F47363130<\/setSpec><setSpec>\n      7375626A656374733D6A6163735F47:6A6163735F47363030<\/setSpec><setSpec>\n      74797065733D636F6E666572656E63655F6974656D<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/eprints.lincoln.ac.uk\/55\/<\/dc:relation><dc:title>\n        Evaluation of an awareness distribution mechanism: a simulation approach<\/dc:title><dc:creator>\n        Nutter, David<\/dc:creator><dc:creator>\n        Boldyreff, Cornelia<\/dc:creator><dc:subject>\n        G610 Software Design<\/dc:subject><dc:subject>\n        G600 Software Engineering<\/dc:subject><dc:description>\n        In distributed software engineering, the role of informal communication is frequently overlooked. Participants simply employ their own ad-hoc methods of informal communication. Consequently such communication is haphazard, irregular, and rarely recorded as part of the project documentation. Thus, a need for tool support to facilitate more systematic informal communication via awareness has been identified. The tool proposed is based on the provision of awareness support that recognises the complete context of the evolution of software artefacts rather than single events.\\ud\n Peer-to-Peer (P2P) networking has been successfully\\ud\nemployed to develop various distributed software engineering support tools. However, there are scalability problems inherent in naive P2P networks. To this end a semantic overlay network organisation algorithm has been developed and tested in simulation prior to deployment as part of a forthcoming awareness extension to the Eclipse environment.\\ud\n The simulation verified that the self-organisation algorithm was suitable for arranging a P2P network, but several unexpected behaviours were observed. These included\\ud\nwandering nodes, starved nodes, and local maxima. Each\\ud\nof these problems required modification of the original algorithm design to solve or ameliorate them.<\/dc:description><dc:date>\n        2005-06-13<\/dc:date><dc:type>\n        Conference or Workshop contribution<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:format>\n        application\/pdf<\/dc:format><dc:language>\n        en<\/dc:language><dc:identifier>\n        http:\/\/eprints.lincoln.ac.uk\/55\/1\/ECE-nutter-simulation.pdf<\/dc:identifier><dc:identifier>\n          Nutter, David and Boldyreff, Cornelia  (2005) Evaluation of an awareness distribution mechanism: a simulation approach.  In: WETICE 2005 - Evaluating Collaborative Information Systems and Support For Virtual Enterprises, 13-15 Jun 2005, Linkoping, Sweden.  <\/dc:identifier><dc:relation>\n        http:\/\/dx.doi.org\/10.1109\/WETICE.2005.67<\/dc:relation><dc:relation>\n        10.1109\/WETICE.2005.67<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/eprints.lincoln.ac.uk\/55\/","http:\/\/dx.doi.org\/10.1109\/WETICE.2005.67","10.1109\/WETICE.2005.67"],"year":2005,"topics":["G610 Software Design","G600 Software Engineering"],"subject":["Conference or Workshop contribution","PeerReviewed"],"fullText":"Evaluation of an awareness distribution mechanism: A simulation approach\nDavid Nutter and Cornelia Boldyreff\nUniversity of Lincoln\n{dnutter,cboldyreff}@hemswell.lincoln.ac.uk\nAbstract\nIn distributed software engineering, the role of informal\ncommunication is frequently overlooked. Participants sim-\nply employ their own ad-hoc methods of informal commu-\nnication. Consequently such communication is haphazard,\nirregular, and rarely recorded as part of the project docu-\nmentation. Thus, a need for tool support to facilitate more\nsystematic informal communication via awareness has been\nidentified. The tool proposed is based on the provision of\nawareness support that recognises the complete context of\nthe evolution of software artefacts rather than single events.\nPeer-to-Peer (P2P) networking has been successfully\nemployed to develop various distributed software engineer-\ning support tools. However, there are scalability problems\ninherent in naive P2P networks. To this end a semantic\noverlay network organisation algorithm has been developed\nand tested in simulation prior to deployment as part of a\nforthcoming awareness extension to the Eclipse environ-\nment.\nThe simulation verified that the self-organisation algo-\nrithm was suitable for arranging a P2P network, but sev-\neral unexpected behaviours were observed. These included\nwandering nodes, starved nodes, and local maxima. Each\nof these problems required modification of the original al-\ngorithm design to solve or ameliorate them.\n1 Background\nTool support to facilitate informal communication un-\ngoverned by any documented process may improve the suc-\ncess of Distributed Software Engineering efforts. One such\nform of communication is that which results in awareness[7,\n9, 5] of the activities of others in the team, whether in the\nform of synchronous, presence-type awareness, or asyn-\nchronous awareness such as change histories. Earlier work\ndiscusses a new type of asynchronous awareness: histori-\ncal awareness[13], suggests a framework for implementing\nthis awareness support within a software engineering devel-\nopment environment and describes its evaluation implica-\ntions.\nThe framework in question proposed that all aware-\nness producers and consumers belong to a peer-to-peer\n(P2P) network and exchange awareness information be-\ntween nodes in the network. This avoids the problems as-\nsociated with centralised CSCW systems discussed in [13].\nTo address the scalability problems inherent in naive peer-\nto-peer network designs, a semantic overlay network[8, 6]\napproach has been chosen, wherein a node\u2019s \u201cnearest\u201d\nneighbours would contain the information of greatest in-\nterest to that node, albeit one slightly different from com-\nmonly deployed semantic overlay systems like Herald[4]\nand PROST[16]. Theoretically in P2P networks all peers\nare equal, yet in deployment \u201csome are more equal than\nothers\u201d. For example, studies[2] have shown that in most\nfile sharing networks a minority of the peers provide the\nmajority of the files; the rest of the peers are \u201cfree rid-\ners\u201d. This finding has implications for the stability of the\nnetwork. Many semantic overlay networks rely on this ex-\nisting behaviour and introduce super peers[12, 17, 1] which\ntake care of integrating new peers with the established peers\n(rendezvous) and making complex routing decisions.\nWhile this functionality is desirable for file sharing net-\nworks, a P2P network designed for distributing awareness\ninformation has differing properties: information is pushed\nfrom each node, and nodes usually have similar levels of\nconnectivity. Table 1 compares the properties of these two\nnetwork types. Consequently, it has been decided to omit\nsuper peers from the overlay network requirements for rea-\nsons of simplicity.\nWithout super peers, a new method of organising the net-\nwork is required. A local iterative connection optimisation\nalgorithm has been loosely specified in earlier work and has\nsubsequently been implemented albeit only in a form suit-\nable for testing.\nInitially, the algorithm design was as follows:\nPeer A\nconnect\u2212\u2212\u2212\u2212\u2212\u2192 Peer B\nPeer A\nsend details of A\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2192 Peer B\nPeer B\nsend details of A\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2192 Peer C\nPeer B\nsend details of A\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2192 Peer D\n1\nProperty Awareness Net File-sharing Network\nInformation retrieval Pushed from each node Pull (search results)\nNode resources Largely equal Many consumer peers with few resources, a\nfew super-peers with more\nNode connectivity Largely equal Many weakly connected edge nodes, some\nsuper-peers\nState management Local Partially global (discovery services, super\npeers etc)\nTable 1. Comparative properties of Awareness and File sharing-type P2P networks\nPeer B\nreconnect D\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2192 Peer A\nPeer A\ndisconnect\u2190\u2212\u2212\u2212\u2212\u2212\u2212\u2212 Peer B\nPeer A\nconnect\u2212\u2212\u2212\u2212\u2212\u2192 Peer D\nPeer A connects to Peer B and receives various details of\nthe nodes known about by Peer B. In return it would send its\nown details to B for further distribution. From the results re-\nceived from B, A knows that Peer D is more interesting, so\nit breaks its connection to B and reconnects to D. This pro-\ncess repeats until the network enters a stable configuration.\nAside from organisational traffic like this, each node will\nalso transmit awareness messages to its immediate peers.\nSince all interested peers should in theory be close to the\noriginating node by virtue of the self-organisation process,\nafter the message has been retransmitted a number of hops\n(the Time To Live (TTL)) it may be discarded, reducing\noverall network load and retaining system scalability with-\nout requiring super-peers for routing.\nFurthermore, a requirement was identified for a more\nlightweight form of evaluation[14] to be performed during\nthe prototyping phase of research projects which attempts to\nprovide some of the benefits of full, user-centric evaluation\nwithout the attendant costs in time, resources and user pa-\ntience. This process was devised to support the evolution of\nan existing research prototype, OSCAR[15, 3] but is equally\napplicable to any project without sufficient resources or the\ndesire to perform a \u201cfull strength\u201d evaluation.\nThis paper discusses a simulation approach adopted to\ndrive the subsequent evolution and evaluation of the self-\norganisation algorithm and to address some of the issues\nwith using more conventional network organisation tech-\nniques.\n2 Evaluation of this tool\nThe use of a P2P network and the design of this tool\nin particular raises several issues pertinent to evaluation.\nFirstly, a P2P network has no central node which may be in-\nstrumented to assist in data collection for evaluation. At any\none time it is impossible to definitively know either the size\nof the network or even the full state of known peers, since\nthey may well be interacting with additional peers beyond\nthe network\u2019s boundaries. As knowledge of global state is\nlacking, the evaluator can never know these things except in\nthe most contrived deployment circumstances. Obviously\nindividual peers may be instrumented, but then the issue\narises of establishing the true order of all events without\nglobal accurate time.\nSecondly, debugging any semantic overlay system in a\ndeployment environment is extremely difficult. The lack\nof global state knowledge described previously makes it\ndifficult for the evaluator to determine the different ef-\nfects of various factors (e.g. network reliability, user be-\nhaviour\/experience etc) on the performance of the algo-\nrithm.\nThirdly any controlled experiments to validate the as-\nsumptions made during the design process of any semantic\noverlay are extremely difficult and would almost certainly\nrequire a specialised testing cluster to be built, wherein all\nrelevant factors could be tightly monitored and adjusted.\nThough such a test system is desirable, insufficient re-\nsources are available to build it. Consequently a different\napproach must be taken to solving these problems.\nWork conducted by Microsoft Research indicates in\npassing that simulation is useful throughout the develop-\nment life-cycle of a P2P project. \u201cDon\u2019t throw away your\nsimulation environment\u201d is the precise quote[11].\nIn the context of the awareness project, simulation will\nperform two main tasks. Firstly the controlled nature of the\nsimulation environment will allow assumptions inherent in\nthe design to be checked without lengthy setup of a com-\nplex physical test environment. Where such assumptions\nare found to be inaccurate, the simulation may be modi-\nfied easily whereas changing a deployed test environment\nis likely to be much more difficult. While the simulation\nmay not be perfect at identifying such issues, it still pro-\nvides an ideal environment for debugging, even if the ex-\nperience in the subsequent deployed environment does not\ninitially match the expected results from simulation. Sec-\nondly, in the context of evaluation the simulation may be\nused as a sort of \u201chypothesis generator\u201d to predict behaviour\nbefore users become involved. In this way problems with\nthe design and performance of the algorithm may be identi-\n2\nfied and the structure of any future user involvement in the\nevaluation process developed before limited resources are\ncommitted.\n2.1 Desired Results\nThe role of simulation in the awareness project is to an-\nswer several questions, detailed below:\n1. What is the relevance of all the messages received by\nparticular nodes?\n2. What are the optimum settings for any simulation pa-\nrameters, such as the message Time To Live? Are such\napparently optimum settings desirable or likely in a de-\nployed environment? Ideally, optimum settings should\nmatch the most common situations and if they do not,\nattempts should be made to improve the algorithm to\nmake this possible.\n3. What is the tolerance of the algorithm to unusual situa-\ntions such as random link failure or delays in message\ntransmission? A rather subjective interpretation may\nbe required here.\n4. How does network self-organisation compare to the\nstandard naive P2P model? Later on, a comparison to\na Super Peer architecture may also be interesting.\nAn initial set of requirements for the simulation tool was\nderived from this list of questions and the personal require-\nments of the tool\u2019s designer.\n2.2 Simulation Tool Design\nFirstly, some sort of visualisation was required. Since\nphysical networks may be represented as an undirected\ngraph which permits cycles, the JGraph1 toolkit was cho-\nsen both to represent the network under simulation, display\nthe intermediate and final results as a diagram and provide\ndrag-and-drop editing capabilities for the operator to allow\nthem to add and remove nodes at will.\nSecondly a facility should be provided to start, stop, step-\nthrough and replay the simulation so interesting situations\nmay be examined and if necessary adjusted to probe the\nproperties of the self-organisation system. Additionally, a\nself timer should be provided so the simulation stops run-\nning after a preset number of steps.\nIn order to help generate such interesting situations, an\noptional events generator should be provided. The genera-\ntor should be able to create and inject random events into\nthe running simulation, including new peers joining the net-\nwork, links failing, awareness information being transmit-\nted from a particular node etc.\n1http:\/\/www.jgraph.org\nFigure 1. Simulation Tool Screen-shot\nThirdly, a facility to record all occurrences within the\nsimulation, whether originated by the self-organisation ac-\ntions or the event generator, is necessary to answer the ques-\ntion about message pertinence.\nFourthly, to ensure the design of the tool remains simple,\neach node in the simulation will be permitted to use a ran-\ndom discovery service to obtain an initial connection to the\nnetwork. Thereafter, self-organisation or operator interven-\ntion must take place to make or break connections.\nFifthly, several interesting or particular taxing simula-\ntions should be saved and provided as \u201ctest cases\u201d. When\nevolving the algorithm, the comparative performance of\nthese known cases may serve as a guide to see if any given\nmodification is an improvement or a retrograde step.\nFinally, the self-organisation algorithm should be plug-\ngable to permit the interesting possibility of pitting several\nversions of the same algorithm against each other to see\nwhich one performs the best. Additionally control cases\nsuch as a Super Peer overlay architecture may be imple-\nmented as pluggable algorithms later in the research.\n3 Results from Simulation\nA tool (screen-shot in figure 1) was written conforming\nto the above design2 and several interesting cases were ex-\namined to see how the initial design for a self-organisation\nalgorithm behaved. During this testing, various unexpected\nalgorithm behaviours were observed and documented; some\nof which were deemed inconvenient and consequently elim-\ninated by modifications made to the algorithm.\nThe evaluation does not employ statistical techniques,\nfor though the simulation could easily be used to gather the\nrequisite information, statistical evaluation instruments can-\n2At time of writing some advanced functionality such as replay is not\navailable but the tool is usable despite this.\n3\nFigure 2. Live Graphing of Simulation Results\nnot be used to evaluate the awareness tool. The issues iden-\ntified earlier of missing global state knowledge and the dif-\nficulty of establishing total event order are to blame. Con-\nsequently a case study approach aimed at answering some\nof the questions posed earlier was used, and any other ob-\nservations noted. At first, no reporting functionality was\navailable in the tool but this made studying the simulation\ndifficult. Consequently, some simple live graphing of re-\nsults was implemented, shown in figure 2.\n3.1 Control Case: No Self-Organisation\nInitially, as an artefact of developing the simulation sys-\ntem the control case where no self-organisation at all was\nperformed was examined. In this case nodes were allowed\nto randomly connect to each other, albeit within the bounds\nof the simulation parameters such as Maximum and Mini-\nmum connections-per-node. Each node contains some fake\n\u201cdata\u201d, that in the deployed version of the system will cor-\nrespond to the output of metrics (e.g. fuzzy MD5) run on\nthe resources the node possesses. By comparing this data\nwith that of other nodes, a measure of similarity between\nnodes may be obtained.\nWhen awareness messages are received by a node, they\nare deemed relevant if they relate to at least one resource\nthe node owns. Predictably enough, the self-organisation\nmethod was shown to result in greater numbers of relevant\nmessages being received by each node. With larger net-\nworks of nodes under the naive model, many did not receive\nany relevant information during the lifetime of the simula-\ntion. However, it does not follow from this result that the\nexisting self-organisation algorithm is adequate simply be-\ncause it is better than the obviously inadequate naive unaug-\nmented P2P architecture, especially since the characteristics\nPEER 1\n[4,7,9,8]\nPEER 2\n[3,12,9,8]\nPEER 4\n[1,12,8,7]\nPEER 3\n[2,9,12,4]\nPEER 5\n[4,3,2,1]\nPEER 1\n[4,7,9,8]\nPEER 2\n[3,12,9,8]\nPEER 4\n[1,12,8,7]\nPEER 3\n[2,9,12,4]\nPEER 5\n[4,3,2,1]\nIt Recconnects to PEER 4\nPEER 5  is  forcibly disconnected from PEER 1\nACTIVE\nCONNECTIONS\nBROKEN CONNECTIONS\nMAXIMUM CONNECTIONS\/NODE       3 \nPEER 1\n[4,7,9,8]\nPEER 2\n[3,12,9,8]\nPEER 4\n[1,12,8,7]\nPEER 3\n[2,9,12,4]\nPEER 5\n[4,3,2,1]\nPEER 5 is orginally connected to PEER 1\nIt shares one similar value with that node.\nFinally, PEER 5 is unable to do anything as all nodes have\nthe maximum permitted number of connections.\nFigure 3. Wandering Nodes\nof the networks resulting from the no-organisation strategy\nand the organisation strategy were quite different. In partic-\nular, the latter strategy resulted in many more connections\nper node.\n3.2 Link Failure\nTo determine what happened when links between nodes\nrandomly failed, various simulations were set up and al-\nlowed to enter a reasonably stable state. Once stabilised,\nconnections were broken at random at first by the opera-\ntor and (once written) the event generator. In many cases\nthe connection immediately reformed and network became\nstable once more. However, in certain cases a node that\nwas completely disconnected from the network for what-\never reason (see \u201cStarved Nodes\u201d below) would reconnect\nat this point and result in a large change in the network\u2019s\norganisation.\nIn the real world, the failure of underlying network in-\nfrastructure is likely to be the main cause of a dropped link.\nSuch a failure may not allow a lost connection to reform\nimmediately as observed in the simulation. At present the\neffects of this type of failure cannot be simulated by the\ntool.\n3.3 Observation: \u201cWandering\u201d Nodes\nWhilst testing the effect of randomly breaking links in\nthe network, it became apparent that certain simulation con-\nfigurations resulted in one node \u201cwandering\u201d around the\nnetwork and never entering a stable configuration. Figure\n3 shows a sequence where this can occur for a time. Since\nthe overhead of making a new connection is likely to be high\nin a production environment, eliminating this behaviour is\n4\nquite important. One possible solution is to maintain some\nstate in each of the nodes to influence the outcome of the\nself organisation algorithm. At present each node is fairly\ndumb and maintains a record only of its currently connected\npeers. By maintaining a history of past peers, the algo-\nrithm will be able to make a more informed decision about\nwhether to (re)make a particular connection, reducing this\ntype of behaviour. In any case, maintenance of such a his-\ntory is required in a production environment where no \u201cran-\ndom discovery service\u201d exists to provide nodes with their\ninitial connections3.\n3.4 Observation: \u201cStarved\u201d Nodes\nIn certain instances of the simulation, one or more nodes\nwould be so dissimilar from the rest of the nodes in the net-\nwork that their initial connection provided by the random\ndiscovery service would be immediately broken before the\nnode had sufficient opportunity to migrate to a more suit-\nable position, resulting in nodes that were completely dis-\nconnected from the network. A combination of two mod-\nifications to the simulation resolved this problem. Firstly,\nnodes without any connections were permitted to use the\ndiscovery service at any time, rather than just once. Sec-\nondly, nodes could decide whether to accept or reject an\nincoming connection and even disconnect an existing peer\nif a more suitable connection attempt arrives.\nA further improvement to this process would require\npeers who break a connection to provide a list of nodes\nfor the just-disconnected peer to try and connect to. Ob-\nviously this functionality relies on some degree of trust be-\ntween peers.\n3.5 Observation: Network Fragmentation\nIf two or more nodes become starved or a particularly\nvital connection between nodes is broken, the network may\nfragment into two distinct subgraphs. In this situation, the\ntwo subgraphs cannot at present reconnect themselves into\none graph since no node in either graph can \u201cknow\u201d of\nnodes in the other graph and none may use the random dis-\ncovery service since they all have connections. Obviously\nthis is not ideal. A partial solution is the history of con-\nnections mentioned above; as a consequence of this each\nof the nodes in each subgraph has a reasonable chance of\nobtaining a connection to a node within one of the other\nsubgraphs.\nHowever, two disconnected networks that are unaware of\none another\u2019s existence is possible in a production environ-\n3Other possibilities for initial discovery in production environments in-\nclude implementing a discovery service or using local broadcast to find\npeers already running locally. In any case this is a digression as the goal of\nthis research is the development and evaluation of effective awareness sup-\nport, not the creation of a novel method for \u201cbootstrapping\u201d P2P networks.\nPEER A\n[1,2,5,7]\nPEER B\n[3,4,5,7]\nPEER 4\n[11,12,13,1]\nPEER 2\n[10,12,13]\nPEER 3\n[11,12,13]\nPEER 7\n[10,11,12]\nPEER 5\n[7,10,11,12]\nPEER 6\n[11,12,13]\nPEER 8\n[10,12,13]\nPEER 1\n[10,11,12]\nFigure 4. Local Maxima\nment since they could evolve independently. In this case,\nlittle is lost by having separate networks, though obviously\nconnecting them together may be beneficial. Since this tool\nis likely to be deployed as part of structured projects rather\nthan ad-hoc like many P2P applications, network fragmen-\ntation and initial peer discovery do not present the same\nchallenges.\n3.6 Observation: Local Maxima\nDue to the lack of a global state, it is possible for local\nmaxima to evolve such as those shown in Figure 4. As far as\nthe nodes are concerned, they are in the \u201ccorrect\u201d places, but\nobviously a better network structure is possible and would\narise if Peer 5 and Peer 4 could communicate directly. This\nproblem is somewhat similar to the network fragmentation\nproblem described earlier and at present no solution exists.\nIf more interesting nodes are close enough for awareness\nmessages originating from them to bridge the gap, then po-\ntentially such information (\u201cthere is a more interesting node\nsomewhere nearby\u201d) could be used by the algorithm when\ndeciding which connections to make. However, if the max-\nima are too far apart, they may be considered to be discon-\nnected subgraphs.\nIt is not anticipated that such maxima will be a problem\nin deployment for the same reasons that fragmentation and\ninitial discovery present less of a challenge than they would\nin P2P applications such as file-sharing. Indeed, the situa-\ntion in Figure 4 would only arise with a TTL of 2 or less; a\nvery unlikely parameter.\n4 Conclusion\nA simulation approach has been used to evaluate the\nbehaviour a local optimisation algorithm used for prepar-\ning a P2P semantic overlay network suitable for distribut-\ning awareness information between nodes prior to deploy-\ning the algorithm in a historical awareness tool for dis-\ntributed software engineering. Several problems were iden-\ntified with the algorithm including a tendency to starve cer-\ntain nodes of resources and the algorithm evolved from the\noriginal design to a new, more complex but more capable\n5\nvariant. Further evolution is expected as the evaluation con-\ntinues.\nA number of outstanding issues have been identified as\na result of the evaluation to date via simulation and these\nremain to be addressed by further research. Firstly, con-\ntrol of the simulation must be improved. While the existing\nevent generator is useful, a more controlled method such as\nscripting must be provided for event injection; otherwise,\nduplicating interesting circumstances is difficult. Earlier in\nthe research the issue of results reporting was identified; in-\ntroduction of the live results graphing shown in figure 2 re-\nsolved this to the researcher\u2019s satisfaction.\nSecondly, the \u201csmall world\u201d properties of the network\nstructures created by the algorithms should be examined\nand compared to the properties of existing collaboration\nnetworks that are not necessarily technologically mediated.\nIntuition suggests that in order to be successful the proper-\nties of the awareness P2P network should closely mirror the\nproperties of the existing collaboration networks, but this is\na large assumption to make without further confirming ev-\nidence. Modelling existing collaborations presents a chal-\nlenge; however, there is sufficient literature available for a\npreliminary review at least.\nFor user-facing evaluation a P2P awareness module and\nassociated visualisation will be added to the Eclipse plat-\nform as a plug-in. Use of an IDE like Eclipse makes gather-\ning information about what a user is doing considerably eas-\nier than a mere stand-alone tool monitoring the file-system.\nInformation can be gathered from what resources a user has\nopen and the sorts of operations they perform on them. The\nalgorithm implementation used will not actually differ from\nthat of the simulation, since at present the algorithm runs\nin a type of container within the simulation and a similar\ncontainer could be provided within the Eclipse plug-in.\nFurther development and evaluation of this tool will form\nthe next major step in this research. The aim of this phase\nis to address further questions such as:\n1. What is the effect that awareness has on the develop-\nment process?\n2. How does this new tool affect the way collaboration is\nperformed in a distributed software engineering envi-\nronment in comparison to normal face-to-face collab-\noration?\nReferences\n[1] K. Aberer, P. Cudre\u00b4-Maroux, A. Datta, Z. Despotovic,\nM. Hauswitrth, M. Punceva, and R. Schmidt. P-grid: A self-\norganizing structured p2p system. SIGMOD Record, 32(3),\nSeptember 2003. P2P Special Issue.\n[2] E. Adar and B. A. Huberman. Free riding on gnutella. First\nMonday, August 2000. Technical Report, Xerox PARC.\n[3] C. Boldyreff, D. Nutter, and S. Rank. Communication and\nconflict issues in collaborative software research projects.\nIn Proceedings of the 4rd Open Source Software Workshop,\nICSE 2004, March 2004.\n[4] L. F. Cabrera, M. B. Jones, and M. Theimer. Herald:\nAchieving a global event notification service. In Proceed-\nings of the 8th Workshop on Hot Topics in Operating Sys-\ntems. IEEE, May 2001.\n[5] A. Crespo and H. Garcia-Molina. Awareness services for\ndigital libraries. In Proceedings of the First European Con-\nference on Research and Advanced Technology for Digital\nLibraries, Pisa, September 1997.\n[6] A. Crespo and H. G. Molina. Semantic overlay networks for\np2p systems. Technical report, Google Technologies Inc.\nStanford University, 2002.\n[7] P. Dourish and V. Belotti. Awareness and coordination\nin shared workspaces. In ACM Conference on Computer\nSupported Cooperative Work (CSCW\u201992), pages 107\u2013114,\nToronto, Ontario, November 1992. ACM Press, New York\nCity.\n[8] D. Doval and D. O\u2019Mahony. Overlay networks: A scalabale\nalternative for P2P. IEEE Internet Computing, August 2003.\n[9] C. Gutwin, S. Greenberg, and M. Roseman. Workspace\nawareness support with radar views. In CHI Conference\nCompanion, pages 210\u2013211, 1996.\n[10] IEEE Computer Society. The Fourth IEEE International\nConference on Peer To Peer Computing, Zurich, Switzer-\nland, August 2004. IEEE. http:\/\/femto.org\/p2p2004\/.\n[11] M. B. Jones and J. Dunagan. Engineering realities of build-\ning a working peer-to-peer system. Technical Report MSR-\nTR-2004-54, Microsoft Research, June 2004.\n[12] A. Montresor. A robust protocol for building super-\npeer topologies. In Proceedings of the Fourth IEEE In-\nternational Conference on Peer To Peer Computing [10].\nhttp:\/\/femto.org\/p2p2004\/.\n[13] D. Nutter and C. Boldyreff. Historical awareness support\nand its evaluation in collaborative so ftware engineering. In\nProceedings of WETICE 2003, pages 171\u2013176. IEEE Com-\nputer Society, June 2003.\n[14] D. Nutter, C. Boldyreff, and S. Rank. An evaluation frame-\nwork to drive future evolution of a research prototype. In\nProceedings of the 5th workshop on Evaluating Collabo-\nrative Enterprises ( ECE), Modena, Italy, June 2004. IEEE\nComputer Society. http:\/\/hemswell.lincoln.ac.uk\/wetice04\/.\n[15] D. Nutter, S. Rank, and C. Boldyreff. Architectural require-\nments for an Open Source Component and Artefact Reposi-\ntory System within GENESIS. In Proc. of the Open Source\nSoftware Development Workshop, pages 176\u2013196. Univer-\nsity Of Newcastle, February 2002.\n[16] M. Portmann, S. Ardon, P. Senae, and A. Seneviratne.\nPROST: A programmable structured peer-to-peer over-\nlay network. In Proceedings of the Fourth IEEE In-\nternational Conference on Peer To Peer Computing [10].\nhttp:\/\/femto.org\/p2p2004\/.\n[17] Y. J. Pyun and D. S. Reeves. Constructing a balanced\n(log(n)\/loglog(n))-diameter super peer topology for scal-\nable p2p systems. In Proceedings of the Fourth IEEE In-\nternational Conference on Peer To Peer Computing [10].\nhttp:\/\/femto.org\/p2p2004\/.\n6\n"}