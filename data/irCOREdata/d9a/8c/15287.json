{"doi":"10.3970\/cmes.2006.015.147","coreId":"15287","oai":"oai:dro.dur.ac.uk.OAI2:7908","identifiers":["oai:dro.dur.ac.uk.OAI2:7908","10.3970\/cmes.2006.015.147"],"title":"Remeshing and refining with moving finite elements : application to nonlinear wave problems.","authors":["Wacher,  Abigail","Givoli,  Dan"],"enrichments":{"references":[{"id":748504,"title":"A geometrical-mechanical interpretation of gradient-weighted moving finite elements.","authors":[],"date":"1997","doi":null,"raw":null,"cites":null},{"id":744560,"title":"A New Meshless Local Petrov-Galerkin (MLPG)","authors":[],"date":"1998","doi":"10.1007\/s004660050346","raw":null,"cites":null},{"id":748502,"title":"An adaptive finite element scheme for transient problems in CFD.","authors":[],"date":"1987","doi":null,"raw":null,"cites":null},{"id":748499,"title":"Arbitrary placement of secondary nodes, and error control,","authors":[],"date":"2000","doi":null,"raw":null,"cites":null},{"id":744559,"title":"Computational Solid Mechanics (Finite Elements and Boundary Elements): -Present Status and Future Directions.","authors":[],"date":"1984","doi":null,"raw":null,"cites":null},{"id":748500,"title":"Creation And Annihilation Of Nodes For The Moving Finite Element Method, PhD thesis.","authors":[],"date":"1992","doi":null,"raw":null,"cites":null},{"id":744564,"title":"Design and application of a gradient-weighted moving finite element code II: in two dimensions.","authors":[],"date":"1998","doi":"10.1137\/S1064827594269561","raw":null,"cites":null},{"id":744563,"title":"Design and application of a gradient-weightedmoving finite element code I: in one dimension.","authors":[],"date":"1998","doi":"10.1137\/S106482759426955X","raw":null,"cites":null},{"id":746759,"title":"Geophysical Fluid Dynamics.","authors":[],"date":"1987","doi":"10.1121\/1.396028","raw":null,"cites":null},{"id":744565,"title":"High-order non-reflecting boundary conditions for dispersivewaves.","authors":[],"date":"2003","doi":"10.1016\/S0165-2125(02)00074-4","raw":null,"cites":null},{"id":744568,"title":"Maturity of operational numerical weather prediction: Medium range.","authors":[],"date":"2006","doi":"10.1175\/1520-0477(1998)079<2753:MOONWP>2.0.CO;2","raw":null,"cites":null},{"id":748505,"title":"Moving Finite Elements I.","authors":[],"date":"1981","doi":null,"raw":null,"cites":null},{"id":748503,"title":"Moving Finite Elements II.","authors":[],"date":"1981","doi":null,"raw":null,"cites":null},{"id":744561,"title":"Moving Finite Elements.","authors":[],"date":"1994","doi":"10.1137\/1038092","raw":null,"cites":null},{"id":748501,"title":"Moving mesh method with error-estimator-based monitor and its applications to static obstacle problem.","authors":[],"date":"2004","doi":null,"raw":null,"cites":null},{"id":746762,"title":"Moving mesh methods with locally varying time steps.","authors":[],"date":"2004","doi":"10.1016\/j.jcp.2004.04.007","raw":null,"cites":null},{"id":748507,"title":"Numerical Modeling of Dynamic Crack Propagation in Finite Bodies, by Moving Singular Elements, Part 1: Formulation.","authors":[],"date":"1980","doi":null,"raw":null,"cites":null},{"id":748508,"title":"Numerical Modeling of Dynamic Crack Propagation in Finite Bodies, by Moving Singular Elements, Part 2: Results.","authors":[],"date":"1980","doi":null,"raw":null,"cites":null},{"id":744567,"title":"Numerical Prediction and Dynamic Meteorology.","authors":[],"date":"1980","doi":"10.1002\/qj.49711046321","raw":null,"cites":null},{"id":744562,"title":"Precise computations of chemotactic collapse usingmovingmesh methods.","authors":[],"date":"2005","doi":"10.1016\/j.jcp.2004.07.010","raw":null,"cites":null},{"id":748506,"title":"Recent Advances in Numerical Simulation Technologies for Various Dynamic Fracture Phenomena.","authors":[],"date":"2005","doi":null,"raw":null,"cites":null},{"id":746760,"title":"Review of numerical methods for nonhydrostatic weather prediction models.","authors":[],"date":"2003","doi":"10.1007\/s00703-001-0593-8","raw":null,"cites":null},{"id":744566,"title":"Time Dependent Problems and Difference Methods.","authors":[],"date":"1995","doi":null,"raw":null,"cites":null},{"id":746761,"title":"Water Waves: The Mathematical Theory with Applications.","authors":[],"date":"1992","doi":null,"raw":null,"cites":null}],"documentType":{"type":1}},"contributors":[],"datePublished":"2006-01-01","abstract":"The recently proposed String Gradient Weighted Moving Finite Element (SGWMFE) method is extended to include remeshing and refining. The method simultaneously determines, at each time step, the solution of the governing partial differential equations and an optimal location of the finite element nodes. It has previously been applied to the nonlinear time-dependent two-dimensional shallow water equations, under the demanding conditions of large Coriolis forces, inducing large mesh and field rotation. Such effects are of major importance in geophysical fluid dynamics applications. Two deficiencies of the original SGWMFE method are (1) possible tangling of the mesh which causes the method's failure, and (2) no mechanism for global refinement when necessary due to the constant number of degrees of freedom. Here the method is extended in order to continue computing solutions when the meshes become too distorted, which happens quickly when the flow is rotationally dominant. Optimal rates of convergence are obtained when remeshing is applied. The method is also extended to include refinement to enable handling of new physical phenomena of a smaller scale which may appear during the solution process. It is shown that the errors in time are kept under control when refinement is necessary. Results of the extended method for some example problems of water hump release are presented","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/15287.pdf","fullTextIdentifier":"http:\/\/dro.dur.ac.uk\/7908\/1\/7908.pdf","pdfHashValue":"f1925aeaaba172cf308d8d7ad17ad0b0a54f1789","publisher":"Tech Science Press","rawRecordXml":"<record><header><identifier>\n  \n    \n      oai:dro.dur.ac.uk.OAI2:7908<\/identifier><datestamp>\n      2011-02-11T13:27:58Z<\/datestamp><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n    \n      \n        Remeshing and refining with moving finite elements : application to nonlinear wave problems.<\/dc:title><dc:creator>\n        Wacher,  Abigail<\/dc:creator><dc:creator>\n        Givoli,  Dan<\/dc:creator><dc:description>\n        The recently proposed String Gradient Weighted Moving Finite Element (SGWMFE) method is extended to include remeshing and refining. The method simultaneously determines, at each time step, the solution of the governing partial differential equations and an optimal location of the finite element nodes. It has previously been applied to the nonlinear time-dependent two-dimensional shallow water equations, under the demanding conditions of large Coriolis forces, inducing large mesh and field rotation. Such effects are of major importance in geophysical fluid dynamics applications. Two deficiencies of the original SGWMFE method are (1) possible tangling of the mesh which causes the method's failure, and (2) no mechanism for global refinement when necessary due to the constant number of degrees of freedom. Here the method is extended in order to continue computing solutions when the meshes become too distorted, which happens quickly when the flow is rotationally dominant. Optimal rates of convergence are obtained when remeshing is applied. The method is also extended to include refinement to enable handling of new physical phenomena of a smaller scale which may appear during the solution process. It is shown that the errors in time are kept under control when refinement is necessary. Results of the extended method for some example problems of water hump release are presented.<\/dc:description><dc:subject>\n        Moving finite elements<\/dc:subject><dc:subject>\n         Remeshing<\/dc:subject><dc:subject>\n         global mesh refinement<\/dc:subject><dc:subject>\n         Shallow water equations<\/dc:subject><dc:subject>\n         Coriolis<\/dc:subject><dc:subject>\n         Wave dispersion<\/dc:subject><dc:subject>\n         Nonlinear waves.<\/dc:subject><dc:publisher>\n        Tech Science Press<\/dc:publisher><dc:source>\n        Computer modeling in engineering & sciences, 2006, Vol.15(3), pp.147-164 [Peer Reviewed Journal]<\/dc:source><dc:date>\n        2006-01-01<\/dc:date><dc:type>\n        Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:identifier>\n        dro:7908<\/dc:identifier><dc:identifier>\n        issn:1526-1492<\/dc:identifier><dc:identifier>\n        issn: 1526-1506<\/dc:identifier><dc:identifier>\n        doi:10.3970\/cmes.2006.015.147<\/dc:identifier><dc:identifier>\n        http:\/\/dro.dur.ac.uk\/7908\/<\/dc:identifier><dc:identifier>\n        http:\/\/dx.doi.org\/10.3970\/cmes.2006.015.147<\/dc:identifier><dc:format>\n        application\/pdf<\/dc:format><dc:identifier>\n        http:\/\/dro.dur.ac.uk\/7908\/1\/7908.pdf<\/dc:identifier><dc:accessRights>\n        info:en-repo\/semantics\/openAccess<\/dc:accessRights><\/oai_dc:dc><\/metadata><\/record>","journals":[{"title":null,"identifiers":["issn: 1526-1506","issn:1526-1492","1526-1492"," 1526-1506"]}],"language":{"code":"en","id":9,"name":"English"},"relations":[],"year":2006,"topics":["Moving finite elements","Remeshing","global mesh refinement","Shallow water equations","Coriolis","Wave dispersion","Nonlinear waves."],"subject":["Article","PeerReviewed"],"fullText":"Durham Research Online\nDeposited in DRO:\n11 February 2011\nVersion of attached file:\nPublished Version\nPeer-review status of attached file:\nPeer-reviewed\nCitation for published item:\nWacher, Abigail and Givoli, Dan (2006) \u2019Remeshing and refining with moving finite elements : application to\nnonlinear wave problems.\u2019, Computer modeling in engineering sciences., 15 (3). pp. 147-164.\nFurther information on publisher\u2019s website:\nhttp:\/\/dx.doi.org\/10.3970\/cmes.2006.015.147\nPublisher\u2019s copyright statement:\nAdditional information:\nUse policy\nThe full-text may be used and\/or reproduced, and given to third parties in any format or medium, without prior permission or charge, for\npersonal research or study, educational, or not-for-profit purposes provided that:\n\u2022 a full bibliographic reference is made to the original source\n\u2022 a link is made to the metadata record in DRO\n\u2022 the full-text is not changed in any way\nThe full-text must not be sold in any format or medium without the formal permission of the copyright holders.\nPlease consult the full DRO policy for further details.\nDurham University Library, Stockton Road, Durham DH1 3LY, United Kingdom\nTel : +44 (0)191 334 3042 \u2014 Fax : +44 (0)191 334 2971\nhttp:\/\/dro.dur.ac.uk\nCopyright c\u00a9 2006 Tech Science Press CMES, vol.15, no.3, pp.147-164, 2006\nRemeshing and Refining with Moving Finite Elements. Application to Nonlinear\nWave Problems\nA. Wacher1 and D. Givoli2\nAbstract: The recently proposed String Gradient\nWeighted Moving Finite Element (SGWMFE) method is\nextended to include remeshing and refining. The method\nsimultaneously determines, at each time step, the solu-\ntion of the governing partial differential equations and\nan optimal location of the finite element nodes. It has\npreviously been applied to the nonlinear time-dependent\ntwo-dimensional shallow water equations, under the de-\nmanding conditions of large Coriolis forces, inducing\nlarge mesh and field rotation. Such effects are of ma-\njor importance in geophysical fluid dynamics applica-\ntions. Two deficiencies of the original SGWMFE method\nare (1) possible tangling of the mesh which causes the\nmethod\u2019s failure, and (2) no mechanism for global refine-\nment when necessary due to the constant number of de-\ngrees of freedom. Here the method is extended in order to\ncontinue computing solutions when the meshes become\ntoo distorted, which happens quickly when the flow is\nrotationally dominant. Optimal rates of convergence are\nobtained when remeshing is applied. The method is also\nextended to include refinement to enable handling of new\nphysical phenomena of a smaller scale which may appear\nduring the solution process. It is shown that the errors in\ntime are kept under control when refinement is necessary.\nResults of the extended method for some example prob-\nlems of water hump release are presented.\nkeyword: moving finite elements, remeshing, global\nmesh refinement, shallow water equations, Coriolis,\nwave dispersion, nonlinear waves.\n1 Introduction\nThe class of computational schemes called Moving Fi-\nnite Element (MFE) methods was introduced for time-\ndependent problems in [Miller (1981);Miller and Miller\n1 Faculty of Aerospace Engineering, Technion, Haifa 32000, Israel,\nEmail: abigail@aerodyne.technion.ac.il.\n2 Correspondence to: Faculty of Aerospace Engineering, Tech-\nnion, Haifa 32000, Israel, Email: givolid@aerodyne.technion.ac.il.\nPhone: +972(4)829-3814 and Fax: +972(4)829-2030.\n(1981)]. There is a wide literature dealing with mov-\ning mesh methods, both for finite elements and for finite\ndifferences. The text [Baines (1994)] gives an extensive\nview of MFE methods, and [Budd, Carretero-Gonzalez,\nand Russell (2005);Li, Liu, and Ma (2004);Tan, Zhang,\nHuang, and Tang (2004);Tang (2005)] describe recent\napplications of moving mesh methods. See [Nishioka\n(2005);Nishioka and Atluri (1980a);Nishioka and Atluri\n(1980b);Tchouikov, Nishioka, and Fujimoto (2004)]\nfor additional literature on moving finite elements and\n[Atluri and Zhu (1998);Kim and Atluri (2000)] for mov-\ning node meshless methods. The main idea underly-\ning MFE type methods is the optimal distribution of the\nmesh nodes during the solution process. The determi-\nnation of the solution u of the governing partial differ-\nential equations and of the optimal node locations are\ndone simultaneously in each time step by using a least-\nsquares variational formulation. This process thus dif-\nfers from that of more familiar adaptive mesh schemes\nbased on a posteriori error estimates or error indicators,\nwhere the updated mesh is determined based on u rather\nthan simultaneously with it. See, e.g., [Atluri (1992)]\nfor theory and implementation of the more familiar adap-\ntive schemes with applications to aerospace engineering.\nFor a review paper see [Atluri (1984)], which contains a\ndiscussion of adaptive mesh methods for linear elastic-\nity and finite-strain problems of inelastic materials. Gen-\nerally the error-indicator based adaptive mesh schemes\ninvolve refinement and sometimes coarsening of the cur-\nrent mesh as the main operations, whereas the original\nMFE methods involve a geometrical motion of the mesh,\nwith its topology remaining fixed. That is, with given and\nfixed computational resources (i.e., number of degrees of\nfreedom), MFE methods attempt to find the best distribu-\ntion of these resources.\nThe particular MFE method that we concentrate on is the\nString Gradient Weighted Moving Finite Element (SG-\nWMFE) method, which we will describe below. This\nmethod was first developed in 1D in [Wacher, Sobey,\nand Miller (2003)] and later in detail in [Wacher (2004)]\n148 Copyright c\u00a9 2006 Tech Science Press CMES, vol.15, no.3, pp.147-164, 2006\nfor 1D and 2D. The SGWMFE formulation was origi-\nnally proposed in [Miller (1997)] as an alternative for-\nmulation to the Gradient Weighted Moving Finite Ele-\nment (GWMFE) method, which was developed in detail\nin [Carlson and Miller (1998a)] and [Carlson and Miller\n(1998b)] for 1D and 2D systems of partial differential\nequations. In [Carlson and Miller (1998a)] the authors\nintroduce supporting results that show that GWMFE in\n1D efficiently produces accurate results for problems\nwhich form steep moving fronts. In [Carlson and Miller\n(1998b)] the same is extended to 2D, with additional ap-\nplication problems. The results therein show that the\nmethod is ideal for problems with sharp moving fronts\nwhere one needs to resolve the fine-scale structure of the\nfront to compute the correct answer, greatly improving\non the original MFE method found in [Miller and Miller\n(1981);Miller (1981)]. Recently in [Wacher and Givoli\n(To appear)] the SGWMFE method is applied to the 2D\nnonlinear Shallow Water Equations (SWE) including dis-\npersive effects due to Coriolis forces. For other back-\nground on moving mesh methods see [Wacher (2004)]\nwhere there is an extended reference list on moving mesh\nmethods including MFE, GWMFE and moving finite dif-\nference type methods.\nThe original SGWMFE method has been shown in the\nreferences mentioned above to be quite powerful; how-\never it suffers from two main deficiencies. The first one is\nthat during the process in which the finite element nodes\nare moving, the mesh may eventually get tangled. When\nthis happens the method fails and the simulation must\nbe stopped. This typically happens in vortex dominated\nflow, or when strongly rotational waves are present, as\nin the case of geophysical waves under Coriolis force.\nThe second deficiency has to do with the fact that MFE\nmethods take care of local adaptivity but neglect global\nadaptivity. Namely, the moving mesh has a fixed number\nof nodes and elements and a fixed topology. The MFE\nprocess aims at distributing the given \u201cresources\u201d in an\noptimal manner; however, no mechanism for global re-\nfinement is incorporated in it. Such global refinement\nmay be necessary to resolve physical phenomena of a\nsmaller scale which are not present initially (hence the\ninitial mesh may ignore them) but appear at a certain time\nlater during the simulation. This may typically happen\nin geophysical fluid dynamics problems and numerical\nweather prediction, when \u201cfeatures\u201d such as clouds enter\nthe computational domain.\nIn this paper we are interested in eliminating these two\ndeficiencies, by combining the MFE approach with re-\nfinement and remeshing to handle solutions even when\nthe mesh becomes distorted or the physics becomes more\ncomplicated in time. In particular, we show how to ex-\ntend the SGWMFE method to incorporate these two new\ncapabilities.\nThe solution of nonlinear time-dependent dispersive\nwave problems poses a special challenge to the SG-\nWMFE method. They appear, for example, in numerical\nweather prediction, see [Haltiner (1980);Kalnay, Lord,\nand McPherson (1998);Steppeler, Hess, Schattler, and\nBonaventura (2003)]. Physical wave dispersion gives rise\nto waves with much richer contents compared to the non-\ndispersive case. The Coriolis forces tend to both rotate\nthe mesh and extend it radially. In order to continue\ncomputations once the mesh becomes too distorted, we\nconsider remeshing. In addition, when new physics is in-\ntroduced to the equations, for example when new sources\nappear at a certain time, more nodes may be necessary in\norder to maintain the same level of accuracy, that is to\nhandle the solutions while the original mesh is not fine\nenough in view of the new complexity.\nIn the next section we briefly describe the SGWMFE\nmethod for general systems, and discuss the relevant\nimplementation issues. More details can be found in\n[Wacher (2004);Wacher, Sobey, and Miller (2003)]. In\nSection 3 we introduce the remeshing algorithm and in\nSection 4 the refining algorithm. In Section 5 we look\nat some numerical examples employing the algorithms\ndiscussed in this paper, for the solution of the nonlinear\ndispersive SWE. We also discuss the convergence of the\nnumerical solutions when the remeshing and refining al-\ngorithms are applied with SGWMFE. We end the paper\nwith concluding remarks.\n2 String Gradient Weighted Moving Finite Ele-\nments (SGWMFE)\n2.1 Continuous formulation\nConsider the system of partial differential equations writ-\nten in the form:\nut = L1(u,v,\u03b7),\nvt = L2(u,v,\u03b7),\n\u03b7t = L3(u,v,\u03b7), (1)\nRemeshing and Refining with MFE 149\nfor the three unknown functions \u03b7(x,y, t), u(x,y, t) and\nv(x,y, t). Here L1, L2 and L3 are given nonlinear spatial\ndifferential operators. Specifically we shall consider in\nthis paper the nonlinear dispersive SWE (see (38)). How-\never, the ideas described below are quite general, and no\nparticular reference to the SWE will be made in this sec-\ntion, except in assuming that the problem comprises the\nthree equations (1) with the three unknown functions \u03b7,\nu and v.\nThe solution graphs for the system (1) may be viewed\ngeometrically and treated as a single evolving two di-\nmensional manifold immersed in five dimensions, that is\nas (x,y,u(x,y, t),v(x,y, t),\u03b7(x,y,t)). Under reparameteri-\nzation with moving variables x(\u03c4, t),y(\u03c4, t) the manifold\nbecomes an evolving parameterized manifold\nu(\u03c4, t) = (x(\u03c4, t),y(\u03c4, t),u(\u03c4, t),v(\u03c4, t),\u03b7(\u03c4, t))T , (2)\nwhere \u03c4 = (\u03c41,\u03c42) has the meaning of a \u2018reference loca-\ntion\u2019 and geometrically represents the two dimensional\nsurface parametrization of the manifold [x,y,u,v,\u03b7]. The\nrates of change of the parameterized points in the mani-\nfold are then expressed as\nu\u02d9 =\n\u239b\n\u239c\u239c\u239c\u239c\u239d\nx\u02d9\ny\u02d9\nu\u02d9\nv\u02d9\n\u03b7\u02d9\n\u239e\n\u239f\u239f\u239f\u239f\u23a0 . (3)\nHere u\u02d9 and ut should not be interpreted to be the same\nvector, namely ut = (0,0,ut,vt ,\u03b7t)T , whereas by the\nchain rule x\u02d9 = \u2202\u2202t x(\u03c41,\u03c42, t), y\u02d9 =\n\u2202\n\u2202t y(\u03c41,\u03c42, t), u\u02d9 = ut +\n\u2202u\n\u2202x x\u02d9 +\n\u2202u\n\u2202y y\u02d9, v\u02d9 = vt +\n\u2202v\n\u2202x x\u02d9 +\n\u2202v\n\u2202y y\u02d9 and \u03b7\u02d9 = \u03b7t +\n\u2202\u03b7\n\u2202x x\u02d9 +\n\u2202\u03b7\n\u2202y y\u02d9.\nThus, ut can be expressed as a product of a rotation ma-\ntrix and u\u02d9:\nut =\n\u239b\n\u239c\u239c\u239c\u239c\u239d\n0 0 0 0 0\n0 0 0 0 0\n\u2212ux \u2212uy 1 0 0\n\u2212vx \u2212vy 0 1 0\n\u2212\u03b7x \u2212\u03b7y 0 0 1\n\u239e\n\u239f\u239f\u239f\u239f\u23a0\n\u239b\n\u239c\u239c\u239c\u239c\u239d\nx\u02d9\ny\u02d9\nu\u02d9\nv\u02d9\n\u03b7\u02d9\n\u239e\n\u239f\u239f\u239f\u239f\u23a0\u2261Ru\u02d9. (4)\nBy writing L(u)= (0,0,L1(u,v,\u03b7),L2(u,v,\u03b7),L3(u,v,\u03b7))T ,\nwe can then define the residual vector r as\nr = Ru\u02d9\u2212L(u). (5)\nNote that from (1) and (4) r\u2261 0 on the continuous level.\nOn the discrete level, r will be nonzero but hopefully\nsmall. We are now interested in the normal projection\nof r. We take two linearly independent tangent vectors to\nthe manifold [x,y,u,v,\u03b7]:\nX = (1,0,ux,vx,\u03b7x)T and Y = (0,1,uy,vy,\u03b7y)T .\n(6)\nThese two vectors define a plane tangent to the solution\nmanifold in 5D. For any 5D vector, say r, it is possible\nto construct the normal component rN perpendicular to\nthis tangent plane. Simple algebra leads to the result (see\n[Wacher (2004)]):\nrN = r\u2212D\u22121[\u2016Y \u20162 (r \u00b7X)\u2212 (Y \u00b7X)(r \u00b7Y)]X\n\u2212D\u22121[\u2016X \u20162 (r \u00b7Y)\u2212 (X \u00b7Y)(r \u00b7X)]Y. (7)\nHere D is the determinant associated with the tangent\nplane metric, i.e.,\nD =\n\u2223\u2223\u2223\u2223 X \u00b7X Y \u00b7XX \u00b7Y Y \u00b7Y\n\u2223\u2223\u2223\u2223 . (8)\nRearranging equation (7), by factoring out r, we can\nwrite equation (7) as rN = Pr, where the 5\u00d7 5 projec-\ntion matrix P is given by:\nP = I\u2212D\u22121[\u2016Y \u20162 (XXT )\u2212 (X \u00b7Y)(XYT )\n+ \u2016 X \u20162 (YYT )\u2212 (X \u00b7Y)(YXT )]. (9)\nHere I is the 5\u00d75 identity matrix. Now, noting that R =\nI\u2212 [X|Y|0|0|0], it can easily be shown that PX = 0 and\nPY= 0, which implies that PR =P. Thus we can rewrite\nthe equation rN = Pr using equation (5) as\nrN = Pr = P(u\u02d9\u2212L(u)). (10)\nThe variational formulation of the SGWMFE method\nconsists in finding u\u02d9 so as to minimize the least-squares\nfunctional\n\u03c8[u\u02d9] =\nZ\nS\n\u2016 rN \u20162 dS\n=\nZ\nS\n\u2016 P(u\u02d9\u2212L(u)) \u20162 dS\n=\nZ\nS\n(P(u\u02d9\u2212L(u))) \u00b7 (P(u\u02d9\u2212L(u)))dS. (11)\nThe differential surface area dS can be derived by taking\nthe two infinitesimal vectors Xdx and Ydy that span the\n\u201cparallelogram\u201d of unit area to obtain:\ndS =\n\u221a\nDd\u03a9 =\n\u221a\nDdxdy, (12)\nwhere D is the metric determinant defined in (8).\n150 Copyright c\u00a9 2006 Tech Science Press CMES, vol.15, no.3, pp.147-164, 2006\n2.2 Discretization\nWe consider the finite element approximation of u(\u03c4, t)\nin space. Thus, in each element,\nu(\u03c4, t) =\nNen\n\u2211\nj=1\nNj(\u03c4)u j(t), (13)\nwhere Nen is the number of element nodes, Nj is the ele-\nment shape function associated with element node j, and\nthe u j(t) are the time-varying nodal values of u. We use\na mesh of linear triangular finite elements; thus Nen = 3,\nand the finite element approximation is piecewise lin-\near for all of the variables x,y,u,v and \u03b7. For simplic-\nity of notation we continue to use the symbols x,y,u,v,\u03b7\nfor the finite element approximation of these variables.\nWe note that after the piecewise linear discretization, the\nderivatives ux,vx,\u03b7x,uy,vy,\u03b7y, and hence the projection\nmatrix P, are constant in each element. The functional\n\u03c8[u\u02d9] in (11) to be minimized becomes, after discretiza-\ntion, a function of all the nodal rates, u\u02d9 j. To minimize\nthis function, consider its partial derivatives with respect\nto the five variable rates, and set each to zero to obtain\nfive ordinary differential equations in time at each node.\nFor example we consider the derivative of \u03c8 with respect\nto the nodal velocities in the x direction, x\u02d9I (where I is\nthe global node number):\n1\n2\n\u2202\u03c8\n\u2202x\u02d9I\n=\nZ\nS\n(P(u\u02d9\u2212L(u))) \u00b7 \u2202\u2202x\u02d9I (P(u\u02d9\u2212L(u)))dS\n=\nZ\nS\n(P(u\u02d9\u2212L(u))) \u00b7 (PE1NI)dS\n=\nZ\nS\n(P(u\u02d9\u2212L(u))) \u00b7 (E1NI)dS, (14)\nwhere E1 is the unit vector E1 = (1,0,0,0,0)T. The last\nequality in (14) follows from the fact that P is an orthog-\nonal projection matrix, i.e. P2 = P. In an analogous way\nwe take the partial derivatives with respect to y\u02d9I ,u\u02d9I ,v\u02d9I and\n\u03b7\u02d9I . These are set to zero in order to minimize \u03c8 at each\nnode:\n1\n2\n( \u2202\u03c8\n\u2202x\u02d9I\n,\n\u2202\u03c8\n\u2202y\u02d9I\n,\n\u2202\u03c8\n\u2202u\u02d9I\n,\n\u2202\u03c8\n\u2202v\u02d9I\n,\n\u2202\u03c8\n\u2202\u03b7\u02d9I\n)T\n=\nZ\nS\n(P(u\u02d9\u2212L(u)))NIdS\n= 0. (15)\nThis finally yields:\nZ\nS\nPu\u02d9NIdS =\nZ\nS\nPL(u)NIdS. (16)\nThis is a system of nonlinear ordinary differential equa-\ntions in time. It can be solved using a robust time in-\ntegrator, such as the Backward Differentiation Formula\n2, which is used in this paper, and is outlined in [Carl-\nson and Miller (1998a)]. The integration method used\nwas the one developed and made available by Neil Carl-\nson and Keith Miller described in [Carlson and Miller\n(1998a);Carlson and Miller (1998b)]. For implementa-\ntion details and more explicit expressions for the integrals\nin equation (16) the reader is referred to [Wacher (2004)].\nAlso note that equation (16) can become very stiff and it\nis almost always necessary to add small regularization\nterms to prevent the time integration from failing; see\n[Carlson and Miller (1998a)] for a discussion on this for\nGWMFE and [Wacher (2004);Wacher, Sobey, and Miller\n(2003)] for SGWMFE. For an example of a case where\nthese terms are not necessary see [Wacher (2004)]. For\nall the experiments in this paper we use a residual error\ntolerance = 10\u22123 and a corresponding viscous regular-\nization term = 5(10)\u22126.\n2.3 Implementation\n2.3.1 Notation and average values\nFigure 1 : Triangular element e, its nodes and edges.\nThe implementation of SGWMFE requires some nota-\ntion for the average value of a scalar or vector valued\nfunction f on an element or an edge. An infinitesimal\narea on the manifold, dS, is related to the projected x\u2212y\narea by (12) and since D is constant on each element, the\nprojected area A of an arbitrary element e with area S is\nrelated by S =\n\u221a\nDA. Hence the average of a function f\nover a triangular element e is given by\n[ f ]\u03a9e = 1A\nZ\n\u03a9e\nf dxdy = 1S\nZ\n\u03a9e\nf dS. (17)\nHere \u03a9e is the element domain. We will also assume that\nthe three nodes of the triangular element e are labeled\n1,2,3, as in Fig. 1.\nRemeshing and Refining with MFE 151\nThe edge opposite node j is labeled E j, and its length is\ndenoted \u0002 j. The average of f over an edge E of length \u0002\nis given by\n[ f ]E = 1\n\u0002\nZ\nE\nf ds. (18)\nwhere the integrand is with respect to the infinitesimal\nlength along the edge: ds =\n\u221a\ndx2 +dy2.\n2.3.2 Calculation of time derivative terms\nAs P is constant on an element, the component of the\nsystem for time derivatives on a triangular element e, is\ngiven by:\nZ\n\u03a9e\nPu\u02d9NjdS = P\nZ\n\u03a9e\nu\u02d9NjdS, (19)\nfor j = 1, . . . ,Nen.\nSince the u\u02d9 and Nj are linear functions of the two-\ndimensional parameter \u03c4, the integrand in equation (19)\nis quadratic in the components of \u03c4, and hence can be\nevaluated by the \u201cedge-midpoint rule\u201d which is exact for\nquadratic functions.\n2.3.3 Calculation of flux terms\nConsider the case where L1 =\u2207 \u00b7 f. For the given triangu-\nlar element e, the contributions from this flux term from\nthe element onto its j node:\nZ\n\u03a9e\nP\n\u239b\n\u239c\u239c\u239c\u239c\u239d\n0\n0\n\u2212\u2207 \u00b7 f\n0\n0\n\u239e\n\u239f\u239f\u239f\u239f\u23a0NjdS\n=\n\u221a\nDP\n\u239b\n\u239c\u239c\u239c\u239c\u239d\n0\n0\n1\n0\n0\n\u239e\n\u239f\u239f\u239f\u239f\u23a0\nZ\n\u03a9e\n(\u2212\u2207 \u00b7 f)Njdxdy, (20)\nfor j = 1, . . .,Nen. The constancy of P and D on each\nelement enables these to be taken out of the integral. The\nscalar integral expression may be integrated by parts as\nin [Carlson and Miller (1998b)]; e.g., for j = 1,\nZ\n\u03a9e\n\u2212\u2207 \u00b7 fN1dxdy =\nZ\n\u03a9e\nf \u00b7\u2207N1dxdy\n\u2212\nZ\nE2\nN1f \u00b7 \u03bd\u03022ds\u2212\nZ\nE3\nN1f \u00b7 \u03bd\u03023ds. (21)\nHere E2 and E3 are edges adjacent to node j = 1 and \u03bd\u03022,\n\u03bd\u03023 are outward normals to those edges (N1 is zero on the\nthird edge). This component can be simplified by using\naverage values. Equation (21) is rewritten in terms of\naverage values as:\nZ\n\u03a9e\n\u2212\u2207 \u00b7 fN1dxdy = A\u2207N1 \u00b7 [f]\u03a9e\n\u2212\u00022\u03bd\u03022 \u00b7 [N1f]E2 \u2212\u00023\u03bd\u03023 \u00b7 [N1f]E3 . (22)\n2.3.4 Calculation of constant coefficient diffusion terms\nNow consider the integration of diffusion (Laplacian)\nterms. Such terms will appear, for example, when one\nuses artificial diffusion of the Laplacian type. In this\ncase, a special procedure called mollification is used to\nincorporate these terms in the C0 least-squares finite ele-\nment formulation. For piecewise linear approximations,\nthe Laplacian is singular at an edge. In order to overcome\nthis, consider the integrals in neighborhoods of each edge\nand assume that the piecewise linear approximation is\nthe limit of an approximation which can be differenti-\nated twice; that is the piecewise linear representations of\nthe solution variables need to be mollified so that the first\nderivatives vary smoothly from element to element in a\nneighborhood whose thickness will be allowed to vanish.\nThe principle here is the same as in [Carlson and Miller\n(1998b)], and we follow the notation there.\nFigure 2 : Mollification of the common edge of two tri-\nangles.\nWithout loss of generality, assume that the 1 to 2 edge\nE is aligned in the y direction as shown in Fig. 2. This\nis done so that the unit outward normal vector to E is\n\u03bd\u0302 = x\u0302, and the unit tangent vector to E is \u03c4\u0302 = y\u0302. Then\non crossing the edge, the values of uy, vy and \u03b7y have\nthe same constants on both sides of the edge. However,\nux, vx and \u03b7x have different constant values on the two\nsides of the edge and experience a jump discontinuity of\n152 Copyright c\u00a9 2006 Tech Science Press CMES, vol.15, no.3, pp.147-164, 2006\ndifference 2a, 2b and 2c respectively, with mean values\nmu, mv and m\u03b7.\nNow assume all three are mollified equally, that is the\n\u201cX\u201d tangent vector to the two-dimensional manifold in\nfive dimensions is\nX(x) = M+\u03c3(x)A =\n\u239b\n\u239c\u239c\u239c\u239c\u239d\n1\n0\nux\nvx\n\u03b7x\n\u239e\n\u239f\u239f\u239f\u239f\u23a0\n=\n\u239b\n\u239c\u239c\u239c\u239c\u239d\n1\n0\nmu\nmv\nm\u03b7\n\u239e\n\u239f\u239f\u239f\u239f\u23a0+\n\u239b\n\u239c\u239c\u239c\u239c\u239d\n0\n0\na\nb\nc\n\u239e\n\u239f\u239f\u239f\u239f\u23a0\u03c3(x) . (23)\nx\n\u03c3=\u22121\n\u03c3=1\nFigure 3 : Mollification function \u03c3(x) in the neighbor-\nhood of an edge shared by two triangular elements. (The\nedge shown is perpendicular to the plane of the figure,\nnamely it lies in the x-y plane).\nHere \u03c3(x) is a function which varies from \u22121 to 1 in the\nneighborhood of the edge as shown in Fig. 3. Thus the\nLaplacian contribution is\nL\u2261\n\u239b\n\u239c\u239c\u239c\u239c\u239d\n0\n0\nuxx +uyy\nvxx +vyy\n\u03b7xx +\u03b7yy\n\u239e\n\u239f\u239f\u239f\u239f\u23a0=\n\u239b\n\u239c\u239c\u239c\u239c\u239d\n0\n0\na\nb\nc\n\u239e\n\u239f\u239f\u239f\u239f\u23a0\u03c3\u2032(x). (24)\nThe \u201cY\u201d tangent vector to the two-dimensional manifold\nis the constant vector\nY =\n\u239b\n\u239c\u239c\u239c\u239c\u239d\n0\n1\nuy\nvy\n\u03b7y\n\u239e\n\u239f\u239f\u239f\u239f\u23a0 . (25)\nNote that the integrals are only considered in a small\nneighborhood \u03b4 of the edge. That is, the neighborhood\nof the x\u2212y projection of edge E. This is because uxx, vxx\nand \u03b7xx are identically zero away from the edge neigh-\nborhood where the rapid variation occurs. First assume\nthe edge E is aligned with the y axis and then rotating\nthe results accordingly. Now take the integral\nR\nPLN1dS\nover the neighborhood \u03b4 to get\nZ\n\u03b4\nP\n\u239b\n\u239c\u239c\u239c\u239c\u239d\n0\n0\nuxx\nvxx\n\u03b7xx\n\u239e\n\u239f\u239f\u239f\u239f\u23a0N1(y)dS\n=\nZ\n\u03b4\n\u221a\nDP\n\u239b\n\u239c\u239c\u239c\u239c\u239d\n0\n0\na\nb\nc\n\u239e\n\u239f\u239f\u239f\u239f\u23a0\u03c3\u2032(x)N1(y)dxdy\n=\nZ y=\u000212\ny=0\n\u239b\n\u239c\u239c\u239c\u239c\u239d\nZ\nx\u03b4\n\u221a\nDP\n\u239b\n\u239c\u239c\u239c\u239c\u239d\n0\n0\na\nb\nc\n\u239e\n\u239f\u239f\u239f\u239f\u23a0\u03c3\u2032(x)dx\n\u239e\n\u239f\u239f\u239f\u239f\u23a0N1(y)dy\n=\n\u000212\n2\nZ \u03c3=1\n\u03c3=\u22121\n\u221a\nD(\u03c3)P(\u03c3)Ad\u03c3, (26)\nwhere \u000212 is the length of the edge joining node 1 and\nnode 2, as in Fig. 2. We note that N1 is equivalent to\na function of y alone in an infinitesimal neighborhood\nof the edge E and is treated as such in equation (26).\nFurther, once the matrix P(\u03c3) has been post-multiplied\nthrough by the vector A (defined in equation (23)) and\nby\n\u221a\nD(\u03c3), then\n\u221a\nD(\u03c3)P(\u03c3)A\n=\n1\u221a\nD(\u03c3)\n[D(\u03c3)A\u2212D1(\u03c3)X(\u03c3)\u2212D2(\u03c3)Y]. (27)\nHere the vector X(\u03c3), and variables D(\u03c3),D1(\u03c3) and\nD2(\u03c3) are functions of \u03c3:\nX(\u03c3) = M+A\u03c3,\nD(\u03c3) = |X(\u03c3)|2|Y|2\u2212 (X(\u03c3) \u00b7Y)2,\nD1(\u03c3) = (X(\u03c3) \u00b7A)|Y|2\u2212 (Y \u00b7A)(Y \u00b7X(\u03c3)),\nD2(\u03c3) = (Y \u00b7A)|X(\u03c3)|2\u2212 (X \u00b7A)(X(\u03c3) \u00b7Y). (28)\nRemeshing and Refining with MFE 153\nSimplifying, the expression D(\u03c3)A \u2212 D1(\u03c3)X(\u03c3) \u2212\nD2(\u03c3)Y is linear in \u03c3 as quadratic terms cancel, and may\nbe written as G+H\u03c3. Here G and H are constant vec-\ntors in \u03c3. Also notice that D(\u03c3) is quadratic in \u03c3 and\nmay be written as c1+c2\u03c3+c3\u03c32 where c1,c2 and c3 are\nconstants in \u03c3. Using this information we have:\nZ 1\n\u22121\n\u221a\nD(\u03c3)P(\u03c3)Ad\u03c3 = G\nZ 1\n\u22121\n1\u221a\nc1 +c2\u03c3+c3\u03c32\nd\u03c3\n+H\nZ 1\n\u22121\n\u03c3\u221a\nc1 +c2\u03c3+c3\u03c32\nd\u03c3. (29)\nIn the one-dimensional theory of SGWMFE [Wacher,\nSobey, and Miller (2003);Wacher (2004)] both the inte-\ngrals multiplied by G and H were expressed analytically,\nsince they were also necessary for the calculation of the\ncontributions from the Laplacian terms in one dimension.\nDue to the sensitivity of these analytic formulas to round-\noff errors, sixteen point Gauss quadrature is used for the\nintegrals for the studies carried out in the present paper.\nOnce the entries of the vector have been calculated, it is\nnecessary to rotate the x and y components to the correct\norientation, since the calculations were made based on\nthe assumption that the x\u2212y projection of the edge E was\naligned with the y axis. This rotation is done by replacing\nthe first two components of the vector (corresponding to\nits x and y components) and multiplying by the rotation\nmatrix\nRx,y =\n\u239b\n\u239c\u239c\u239d\ndy\n\u000212\ndx\n\u000212\n\u2212dx\n\u000212\ndy\n\u000212\n\u239e\n\u239f\u239f\u23a0 . (30)\n2.3.5 Calculation of source terms\nThe contributions over an element from a source term,\nsay S1(u,v,\u03b7) in L1 onto its jth node are obtained as fol-\nlows:\nZ\n\u03a9e\nP\n\u239b\n\u239c\u239c\u239c\u239c\u239d\n0\n0\nS1(u,v,\u03b7)\n0\n0\n\u239e\n\u239f\u239f\u239f\u239f\u23a0NjdS\n=\n\u221a\nDP\n\u239b\n\u239c\u239c\u239c\u239c\u239d\n0\n0\n1\n0\n0\n\u239e\n\u239f\u239f\u239f\u239f\u23a0\nZ\n\u03a9e\nS1(u,v,\u03b7)Njdxdy, (31)\nresulting in the equivalent compact form:\nZ\n\u03a9e\nS1(u,v,\u03b7)Njdxdy = A[NjS1(u,v,\u03b7)]\u03a9e. (32)\n3 Remeshing\n3.1 The need for remeshing\nIt has been shown [Wacher (2004);Wacher and Givoli\n(To appear);Wacher, Sobey, and Miller (2003)] that the\nmain strength of the GWMFE methods is solving prob-\nlems which contain steep moving fronts. However the\nmain weakness of these methods has been the possibil-\nity of mesh tangling. This typically happens for vortex\ndominated problems, or for strongly rotating wave fields.\nMesh tangling causes the method to collapse. One cure\nto this problem was suggested by A. Kuprat in his PhD\nthesis, [Kuprat (1992)]. There, he added to the GWMFE\nmethod the capability to add and remove nodes as needed\nwhen certain mesh geometrical criteria are not met, in\norder to avoid node tangling. In the two-dimensional\ncase, these criteria are based on tolerances for certain tri-\nangle properties, such as the length of an edge and the\ninscribing radius of a triangle. In [Kuprat (1992)], this\nmethod was applied in one and two dimensions to the\nnon-dispersive SWE as well as to a rotating scalar 2D\nmodel equation.\nIn this paper we look at an alternative approach, which is\nmore global in nature. It relies on an observation made\nin a previous study on the insensitivity of the SGWMFE\nresults on the initial mesh used. In [Wacher (2004)], a\nstudy was done on solving the non-dispersive SWE with\ndifferent initial starting meshes. It is shown there that\nalthough at very early times the numerical results may\nsignificantly depend on the initial mesh, after a few time\nsteps they \u201cstabilize\u201d and exhibit little sensitivity to it.\nMoreover, the numerical results, after a short initial time\nperiod, converge to solutions with the same level of ac-\ncuracy regardless of the initial mesh.\nIn this light, we propose to resolve the problem of node\ntangling with a scheme which simply remeshes the cur-\nrent solution information onto a new uniform mesh. This\nis done in the special way described by the algorithm\nto be outlined in the next subsection. The original SG-\nWMFE method incorporates a check of mesh tangling\nduring the solution process, and if such tangling occurs,\nthe simulation stops. In particular, the method includes\na scheme to identify those triangular elements which be-\n154 Copyright c\u00a9 2006 Tech Science Press CMES, vol.15, no.3, pp.147-164, 2006\ncome too distorted. For each element, a measure of dis-\ntortion is calculated and compared to a fixed tolerance.\nFor the experiments in this paper this tolerance was taken\nas 10\u221212. This tolerance can be set to much larger val-\nues to maintain a higher regularity of the mesh; however\nthis would be done at the expense of needing remeshing\n(or other measures) more frequently. Note that there is a\nseparate check to make sure that the triangular elements\nalways maintain a positive area, as it is necessary to keep\nthe system of equations well defined.\n3.2 The remeshing algorithm\nThe remeshing algorithm may be summarized as follows.\nHere T denotes a certain discrete time level.\n1. T \u2190\u2212 0, n\u2190\u2212 1. Fix \bt and nback.\n2. While (T \u2264 Tfinal)\n(a) For time T \u2190\u2212 T to T + n\bt: step in time\nusing SGWMFE.\n(b) If mesh tangling tolerance is crossed:\ni. n\u2190\u2212 n\u2212nback.\nii. T \u2190\u2212 T \u2212nback\bt.\niii. Interpolate solution at time T onto uni-\nform mesh.\niv. Go to step 2 (with all solution data corre-\nsponding to uniform mesh).\n(c) else: n\u2190\u2212 n+1, go to step 2 (with all solution\ndata unchanged).\nWhen the ordinary SGWMFE solution process stops due\nto mesh tangling, the motivation for going nback steps\nback in time to remesh is to allow the solution and new\nmesh to evolve for a sufficiently long time before reach-\ning the point in time where the older mesh failed. Based\non the insensitivity of the numerical results to the initial\nmesh, as noted above, this procedure is aimed at achiev-\ning a smooth transition between the solutions obtained\nin the old and new meshes. We note that the number of\nnodes in the new mesh may remain the same as in the old\nmesh, unless additional global refinement is performed,\nas discussed in the next section.\n3.3 Transfer of information to the new mesh\nTo transfer information from the old mesh to the new\nmesh, we use the algorithm proposed in [Zhao, Hobbs,\nMu\u00a8hlhaus, and Ord (1999)] for identifying the element\nin a given mesh containing a given point p. In that paper\nthe algorithm was proposed for quadrilateral elements,\nand here we have adapted it to triangles. Given a certain\ntriangular element e, we let a j be the vector pointing from\nnode j of the element along the edge, counterclockwise,\nto the subsequent node. Also, we let b j be the vector\npointing from node j of the element to the given point p.\nThen the element contains the point p if and only if the\nfollowing three conditions hold:\n< a1,b1 > \u2265 0,\n< a2,b2 > \u2265 0,\n< a3,b3 > \u2265 0. (33)\nHere < a,b >:= a1b2\u2212b1a2.\nUsing this algorithm, we transfer the data from the old\nmesh to the new one. For every node p in the new mesh,\nwe first find the element e in the old mesh which contains\nit. Then we calculate the value of the solution at this\npoint according to the old mesh by using shape function\ninterpolation of the nodal values of element e. By going\nover the entire set of nodal points of the new mesh in this\nmanner, the entire information is transferred to this mesh.\nNumerical experiments that we have performed (not pre-\nsented here) show that this transfer of information does\nnot hamper the accuracy of the time-varying solution.\nThis is also supported by the rates of convergence ob-\ntained (see Section 5). When global refinement is nec-\nessary, we also refine the new mesh according to the\nscheme discussed in the next section.\n4 Refining\n4.1 The need for refining\nThe original SGWMFE method incorporates, by defini-\ntion, local refinement of regions in the mesh which re-\nquire such refinement. However, the method neglects\nglobal refinement. The moving mesh has a fixed num-\nber of nodes and elements and a fixed topology; hence no\nmechanism for global refinement is incorporated in it. As\na result, the density of the initial mesh, which is assum-\nably sufficient for the desired accuracy in the initial phase\nof the simulation, may not necessarily be fine enough as\ntime proceeds. In particular, it may not be able to resolve\nphysical phenomena of a smaller scale which appear at\na certain time later during the simulation. Thus, it is de-\nsired to equip SGWMFE with a mechanism for global\nRemeshing and Refining with MFE 155\nrefinement, which will ensure that the level of accuracy\nremains approximately constant throughout the simula-\ntion.\nStandard Finite Element and Finite Difference methods\ngenerally incorporate several kinds of refinement tech-\nniques that are used for the handling of new physics.\nSee the Introduction for some pertinent references. The\nnotions of \u201cerror estimators\u201d and \u201cerror indicators\u201d are\ndefined in this context; these define a measure which is\nused as a refinement\/coarsening criterion. We propose\nto apply global refinement using a measure of curvature\nthat we call \u03b3. That is, when the measure of curvature \u03b3\nhas grown too much beyond a reference measure, then a\nnew mesh parameter is calculated and the old mesh is re-\nplaced with the new finer uniform mesh. The check is not\nmade at every integration time step as this would defeat\nthe purpose of a moving mesh method, but rather after\nevery few \u201ctime stations\u201d where a time station typically\ncomprises a few hundreds of time steps.\n4.2 The refinement procedure\nFor each element edge we calculate on each of its two ad-\njacent triangles the gradient of each variable of interest.\nFor simplicity we assign one triangle the label (1) and\nthe second one the label (2). We introduce the following\nmeasure \u03b3 for the variable \u03c6:\n\u03b3\u03c6 =\n1\nNiedg\nNiedg\n\u2211\ni=1\n\u2207\u03c6i|(1)\u2212\u2207\u03c6i|(2)\u221a\n\u03b4x2i +\u03b4y2i\n, (34)\nwhere Niedg is the total number of interior edges in the\ncurrent mesh, and \u03b4xi and \u03b4yi are the x\u2212 and y\u2212 distances\nbetween the centroids of triangles (1) and (2). This cur-\nvature measure is reminiscent of the error indicator pro-\nposed in [Lohner (1987)] for CFD.\nIt is also possible, as we do in the examples we consider\nin this paper, to define \u03b3 such that it is determined by the\ncurvature of two variables, say \u03c6 and \u03c8. A reasonable\n(non-dimensional) definition is\n\u03b3 =\n\u221a\n\u03b32\u03c6+ \u03b32\u03c8. (35)\nAt t = 0 or at a certain point in time, as the case may be,\na reference \u03b30 is defined associated with the chosen refer-\nence mesh with N0 nodes. After every few time stations\n\u03b3 is measured and checked against the reference \u03b30. If the\nnew \u03b3 is larger than a given percentage of the reference\n\u03b30 then the new number of nodes N is calculated using\nthe simple formula\nN = N0\n\u03b3\n\u03b30\n. (36)\nThus the new mesh parameter is\nh =\n\u221a\nA(\u03a9)\/N . (37)\nA uniform mesh with this h as a mesh parameter is then\nconstructed. After refinement has taken place the refer-\nence \u03b30 and N0 are replaced by the new \u03b3 and N.\nThe transfer of information from the old mesh to the\nnew mesh is performed by the same procedure as in the\nremeshing scheme; see Section 3.3.\n4.3 Combined remeshing and refining\nThe remeshing and refining procedures should be used\njointly in the SGWMFE method. To this end, at each\ntime step the mesh quality is checked, and at each \u201ctime\nstation\u201d (see previous subsection) the physics complexity\n\u03b3 is evaluated. The mesh is remeshed and\/or refined if\neither of the corresponding criteria is satisfied.\nWe note that when the need for remeshing arises, it is\nreasonable to check the value of \u03b3 at this instance even\nif a time station has not been reached yet. Then if the\nrefinement criterion is met, the new mesh is generated\nwith a mesh parameter calculated by (37). This practice\nhas been adopted in the present work.\n5 Numerical Examples\n5.1 Model problem\n5.1.1 Governing equations\nThe 2D nonlinear SWE including Coriolis force terms\nare considered. These equations constitute an important\nbasic model in Geophysical Fluid Dynamics, where the\nCoriolis forces that give rise to dispersive waves orig-\ninate from the earth\u2019s rotation. See, e.g., [Pedlosky\n(1987);Stoker (1992)].\nThe SWE in rectilinear coordinates x,y are\nut +\u00b5uux +\u00b5vuy\u2212 f v =\u2212g\u03b7x,\nvt +\u00b5uvx +\u00b5vvy + f u = \u2212g\u03b7y,\n\u03b7t +\u00b5u\u03b7x +\u00b5v\u03b7y +(h0 +\u00b5\u03b7)(ux +vy) = 0. (38)\n156 Copyright c\u00a9 2006 Tech Science Press CMES, vol.15, no.3, pp.147-164, 2006\nHere h0 is the given fluid thickness normal to the x\u2212 y\nplane in the absence of motion, \u03b7(x,y, t) is the unknown\nelevation of the fluid above h0, u(x,y, t) and v(x,y, t)\nare the fluid velocities in the x and y directions respec-\ntively, g is the gravitational acceleration parameter, and\nf is the dispersion parameter. The binary parameter \u00b5\nhas the value 1 for the nonlinear SWE and 0 for the lin-\nearized SWE with zero mean flow; see [Givoli and Neta\n(2003)]. The first two equations in (38) are the x\u2212 and\ny\u2212momentum equations, whereas the third equation is\nthe continuity equation. For a systematic derivation of\nthe SWE see [Pedlosky (1987)] or [Stoker (1992)].\n5.1.2 Geometry\nWe consider the geometrical configuration: 0 \u2264 x \u2264 10,\n0\u2264 y \u2264 10.\nWe denote the computational domain \u03a9.\n5.1.3 Initial conditions\nWe consider a \u2018hump\u2019 of stationary water released at time\nt = 0. In all cases the initial velocities are u= 0 and v= 0.\nFor the square domain the initial water elevation is\n\u03b7(x,y,0) = 0.1[1+2e\u2212((x\u22125)2+(y\u22125)2)]. (39)\n5.1.4 Boundary conditions\nAccording to the well-posedness theory [Gustafsson,\nKreiss, and Oliger (1995)] a single boundary condition is\nrequired for (38) at each boundary point. For the square\ndomain we think of the four boundaries as rigid walls,\nand assign boundary conditions as follows: v = 0 on the\nsouth and north sides, and u = 0 on the west and east\nsides. These are non-penetrating boundary conditions.\n5.1.5 Extra source term\nIn order to test the refinement algorithm we consider the\nnonlinear SWE with the introduction of a source term\ninto the x-momentum equation of the form\nS1(u,v,\u03b7)\n= e\u2212500(t\u22120.4)\n2\n[e\u221210((x\u22125)\n2+(y\u22125)2)\n+e\u221210((x\u22122.5)\n2+(y\u22122.5)2) +e\u221210((x\u22127.5)\n2+(y\u22127.5)2)\n+e\u221210((x\u22122.5)\n2+(y\u22127.5)2) +e\u221210((x\u22127.5)\n2+(y\u22122.5)2)]. (40)\nThis source term is designed so that it is not felt ini-\ntially, and as the simulations are approaching a chosen\ntime (T = 0.4) the source term becomes strongly active.\nThis is done smoothly in time using a compact Gaussian\nfunction of time. In space the source function is defined\nso that it is a superposition of 5 sources. It should be\nnoted that although the extra source is introduced into\nthe x-momentum equation, it significantly affects all the\nsolution variables due to the coupling among the three\nequations.\n5.1.6 Artificial diffusion\nArtificial diffusion is used to maintain continuity of the\nnumerical solution thus avoiding the occurrence of in-\nfinite gradients and multivalued foldover. This is done\nby adding to each of the equations in the system (38) a\nsmall artificial diffusion term: \u03b5\u22072\u03b7, \u03b5\u22072u, and \u03b5\u22072v re-\nspectively, with a small coefficient \u03b5 = 10\u22122. Of course,\nother shock stabilization methods are possible as well;\nhowever, the nature of the stabilization employed is not\nin the focus of the present paper.\nFor the added artificial diffusion terms we need extra\nboundary conditions that do not contradict the specified\nphysical boundary conditions. We use zero Neumann on\n\u03b7 (\u2202\u03b7\u2202n = 0) on all four sides, \u2202u\u2202n = 0 on the south and north\nsides, and \u2202v\u2202n = 0 on the west and east sides.\n5.2 Remeshing\nWe consider the \u2018water hump release\u2019 problem described\nabove. The hump collapses under gravity (for f > 0 also\nthe Coriolis forces) for t > 0, forming wave fronts which\npropagate away from the hump\u2019s original center and ro-\ntate at the same time.\nFirst we examine the convergence of the method with\nthe remeshing algorithm applied at a specified time. We\nsolve the nonlinear SWE (\u00b5 = 1 in (38)) in a square do-\nmain with h0 = 5 and initial conditions as in equation\n(39). g = 9.8 in (38) for all of the examples presented in\nthis paper. Since an analytic solution is not available, we\nconstruct a reference solution (to be regarded as the \u2018ex-\nact solution\u2019) by using an extremely fine discretization,\nmuch finer than those used for the actual computation.\nWe then define the error measure in the water elevation,\nE = \u2016 \u03b7re f \u2212\u03b7 \u2016 \/ \u2016 \u03b7re f \u2016, (41)\nwhere \u03b7 is the actual finite element solution, \u03b7re f is the\nreference solution, and \u2016 \u00b7 \u2016 is the discrete L2 norm. Note\nRemeshing and Refining with MFE 157\n\u22127.5 \u22127 \u22126.5 \u22126 \u22125.5 \u22125\n\u22129\n\u22128\n\u22127\n\u22126\n\u22125\nlog(1\/N)\nT = 0\n\u22127.5 \u22127 \u22126.5 \u22126 \u22125.5 \u22125\n\u22128\n\u22127\n\u22126\n\u22125\n\u22124\nlog(1\/N)\nT = 0.2\n\u22127.5 \u22127 \u22126.5 \u22126 \u22125.5 \u22125\n\u22128\n\u22126\n\u22124\n\u22122\nlog(1\/N)\nT = 0.4\n\u22127.5 \u22127 \u22126.5 \u22126 \u22125.5 \u22125\n\u22128\n\u22126\n\u22124\n\u22122\nlog(1\/N)\nT = 0.6\n\u22127.5 \u22127 \u22126.5 \u22126 \u22125.5 \u22125\n\u22128\n\u22126\n\u22124\n\u22122\nlog(1\/N)\nT = 0.8\n\u22127.5 \u22127 \u22126.5 \u22126 \u22125.5 \u22125\n\u22128\n\u22126\n\u22124\n\u22122\nlog(1\/N)\nT = 1.0\nlog(||\u03b7\nref \u2212 \u03b7||\/||\u03b7ref||)\nline of slope = 1\nFigure 4 : Convergence in \u03b7 for the nonlinear SWE, with h0 = 5 and f = 0. Remeshing for all values of N took\nplace at T = 0.4, except for the reference mesh with N = 2025 which was not remeshed.\n\u22127.5 \u22127 \u22126.5 \u22126 \u22125.5 \u22125\n\u22129\n\u22128\n\u22127\n\u22126\n\u22125\nlog(1\/N)\nT = 0\n\u22127.5 \u22127 \u22126.5 \u22126 \u22125.5 \u22125\n\u22128\n\u22127\n\u22126\n\u22125\n\u22124\nlog(1\/N)\nT = 0.2\n\u22127.5 \u22127 \u22126.5 \u22126 \u22125.5 \u22125\n\u22128\n\u22126\n\u22124\n\u22122\nlog(1\/N)\nT = 0.4\n\u22127.5 \u22127 \u22126.5 \u22126 \u22125.5 \u22125\n\u22128\n\u22126\n\u22124\n\u22122\nlog(1\/N)\nT = 0.6\n\u22127.5 \u22127 \u22126.5 \u22126 \u22125.5 \u22125\n\u22128\n\u22126\n\u22124\n\u22122\nlog(1\/N)\nT = 0.8 log(||\u03b7\nref \u2212 \u03b7||\/||\u03b7ref||)\nline of slope = 1\nFigure 5 : Convergence in \u03b7 for the nonlinear SWE, with h0 = 5 and f = 3. Remeshing for all values of N took\nplace at T = 0.4, except for the reference mesh with N = 2025 which was not remeshed.\nthat the values used for calculating the norms in (41) are\ninterpolated onto a fixed uniform fine mesh in order to\nenable objective comparison of the various meshes.\nThe remeshing algorithm has been applied to the non-\nlinear SWE, the non-dispersive case with f = 0 as well\nas two dispersive cases with f = 3 and f = 6. For the\nconvergence plots the remeshing took place in all cases\nat the same time station T = 0.4 in order for comparison\nwith solutions that were free of remeshing, the compar-\nisons are made with a fine mesh with N = 2025 nodes.\nFig. 4, Fig. 5 and Fig. 6 show the convergence curves of\n158 Copyright c\u00a9 2006 Tech Science Press CMES, vol.15, no.3, pp.147-164, 2006\n\u22127.5 \u22127 \u22126.5 \u22126 \u22125.5 \u22125\n\u22129\n\u22128\n\u22127\n\u22126\n\u22125\nlog(1\/N)\nT = 0\n\u22127.5 \u22127 \u22126.5 \u22126 \u22125.5 \u22125\n\u22128\n\u22127\n\u22126\n\u22125\n\u22124\nlog(1\/N)\nT = 0.2\n\u22127.5 \u22127 \u22126.5 \u22126 \u22125.5 \u22125\n\u22128\n\u22126\n\u22124\n\u22122\nlog(1\/N)\nT = 0.4\n\u22127.5 \u22127 \u22126.5 \u22126 \u22125.5 \u22125\n\u22128\n\u22126\n\u22124\n\u22122\nlog(1\/N)\nT = 0.6\nlog(||\u03b7\nref \u2212 \u03b7||\/||\u03b7ref||)\nline of slope = 1\nFigure 6 : Convergence in \u03b7 for the nonlinear SWE, with h0 = 5 and f = 6. Remeshing for all values of N took\nplace at T = 0.4, except for the reference mesh with N = 2025 which was not remeshed.\nFigure 7 : Mesh for the nonlinear SWE, with h0 = 5, f = 0 and N = 81.\nE(\u03b7) on a log-log scale, where N is the total number of\nnodal points. The slopes of the convergence lines for all\nvalues of f and t shown, are close to 1. Since the re-\nlation between N and the average mesh parameter h is\nh =\n\u221a\narea(\u03a9)\/N, or N \u223c h\u22122 this result corresponds to\nh2 rate of convergence, which is optimal for linear finite\nelements. We have performed many more convergence\ntests, and they all indicated an optimal rate of conver-\nRemeshing and Refining with MFE 159\nFigure 8 : Solution for the x-velocity u for the nonlinear SWE, with h0 = 5, f = 0 and N = 81.\ngence.\nAs a second example we consider adding the source\nterm S1(u,v,\u03b7) in (40) to the first equation (x-momentum\nequation) of the SWE. We show results obtained using\nthe remeshing algorithm. Remeshing is applied when\nthe mesh becomes too distorted, see Fig. 7 and 8, for the\nmesh and solutions of the variable u. For a comparison\nof the remeshing algorithm when applied to a finer mesh\nsee Fig. 9 and 10.\n5.3 Refinement\nAll of the results in this section are for the nonlinear SWE\nwith f = 0, h0 = 5 and include the addition of the source\nterm (40) to the x-momentum equation. In the examples\nwe consider in this paper we consider the \u03b3 in equation\n(35) to have contributions from the two velocity variables\nin the SWE, we do this by setting \u03c6 = u and \u03c8 = v in\nequation (35).\nFig. 11 shows the error in the variable \u03b7 when the refine-\nment and remeshing procedures are both applied, start-\ning with a uniform mesh of N0 = 81. The solutions are\ncompared to the solutions on a fine mesh of N = 2025\nnodes. The errors of the solutions with the number of\nnodes of the starting mesh N = 81, as well as the refined\nmesh with N = 625 are shown for comparison. Note that\nthe error graph of the coarse mesh (the case N = 81) is\nonly shown up until time station T = 0.9. This is due\nto the fact that the method was not able to continue with\nthe computations without refinement beyond this point,\nunless we perform remeshing.\nA plot of the \u03b3 for the refinement\/remeshing procedure\nis shown in Fig. 12. The values at the times where the\nalgorithm automatically checks the \u03b3 are shown. The\nvalues are normalized in order to show the relative val-\nues. The percentage of \u03b30 used for choosing when to re-\nfine the mesh is 30%. See Fig. 13 for mesh plots for the\nnon-dispersive SWE when the refinement and remeshing\nprocedures are applied starting with a uniform mesh of\nN0 = 81.\nSince the source term is added to the x-momentum equa-\ntion, the solutions of the corresponding variable u are\nshown for comparison on the initial mesh with 81 nodes,\nthe mesh which has been refined, and the mesh with 625\nnodes which is the refined mesh after applying the refine-\nment procedure, see Fig. 8, Fig 14. and Fig. 10 for the\ncorresponding figures.\n160 Copyright c\u00a9 2006 Tech Science Press CMES, vol.15, no.3, pp.147-164, 2006\nFigure 9 : Mesh for the nonlinear SWE, with h0 = 5, f = 0 and N = 625.\n6 Conclusion\nIn this paper we proposed two new procedures to\nbe incorporated within the SGWMFE method, namely\nremeshing and global refinement. These two procedures\nare introduced in order to overcome the two deficien-\ncies associated with the original SGWMFE, namely (1)\nthe possible tangling of the mesh which may cause the\nmethod\u2019s failure if not attended, and (2) the lack of a\nmechanism for global refinement when necessary.\nA convergence study of the SGWMFE method with\nremeshing was performed for the nonlinear SWE in two\ndimensions for the non-dispersive case as well as two dis-\npersive cases. The results show accurate solutions that\ncorrespond to an h2 rate of convergence, which is optimal\nfor linear finite elements. Further results were presented\nfor the non-dispersive SWE with a source term added to\none of the equations thus introducing new physics com-\nplexity at some point in time. The refinement algorithm\nwas applied to this problem and the results compared\nto the solutions with only remeshing using the starting\ncoarse mesh as well as a mesh with the same number of\nnodes chosen by the refinement algorithm. The results\nare promising, indicating that the errors in the solutions\nafter refinement are maintained at the same level of ac-\ncuracy as obtained at the point when refinement became\nnecessary.\nIn the studies made for this paper, including results not\nshown here, the remeshing algorithm has been seen to\nbe useful for problems for which the mesh becomes too\ndistorted, allowing one to calculate solutions beyond the\npoint where they otherwise could not. The refining algo-\nrithm has shown to be useful when new physics is intro-\nduced to a problem and one needs more nodes in order to\nresolve the new physics.\nThe implementation of the remeshing and refining algo-\nrithms added to the SGWMFE method is straightforward\nand easily generalized for arbitrary systems of PDEs in\nmultiple dimensions. Together, these two new features\neliminate the two main faults of the original SGWMFE\nmethod.\nAcknowledgement: This work was done while the\nRemeshing and Refining with MFE 161\nFigure 10 : Solution for the x-velocity u for the nonlinear SWE, with h0 = 5, f = 0 and N = 625.\n0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6\n0\n0.02\n0.04\n0.06\n0.08\n0.1\n0.12\n0.14\n0.16\nT\nR\nel\nat\niv\ne \nL 2\n \ne\nrr\no\nrs\n o\nf \u03b7\ncoarse mesh\ncoarse refined\nfine mesh\nFigure 11 : Error in \u03b7 for the nonlinear SWE, with h0 = 5, f = 0. The coarse mesh uses N = 81 nodes, the coarse\nrefined mesh starts with N0 = 81 nodes and refines to N = 625 at time station T = 0.5, the fine mesh has N = 625\nnodes. The reference mesh used to compute the error in the solutions has N = 2025 nodes.\n162 Copyright c\u00a9 2006 Tech Science Press CMES, vol.15, no.3, pp.147-164, 2006\n0.2 0.4 0.6 0.8 1 1.2 1.4 1.6\n10\u22123\n10\u22122\n10\u22121\n100\n101\nT\n\u03b3\/\u03b3\n0\nFigure 12 : \u03b3\/\u03b30 for the nonlinear SWE, with h0 = 5, f = 0. The mesh is initially coarse with N0 = 81 nodes and\nrefines to N = 625 at time station T = 0.5.\nFigure 13 : Mesh for the nonlinear SWE, with h0 = 5, f = 0. The mesh is initially coarse with N0 = 81 nodes and\nrefines to N = 625 nodes at time station T = 0.5.\nRemeshing and Refining with MFE 163\nFigure 14 : Solution of x-velocity u for the nonlinear SWE, with h0 = 5, f = 0. The mesh is initially coarse with\nN0 = 81 nodes and refines to N = 625 nodes at time station T = 0.5.\nfirst author has been supported by the Samuel Neaman\nPost-doctoral Fellowship. This fellowship is gratefully\nacknowledged. The second author also acknowledges\nsupport from the Fund for the Promotion of Research at\nthe Technion, by the fund provided through the Lawrence\nand Marie Feldman Chair in Engineering, and by the Se-\nniel Ostrow Research Fund. The authors are grateful to\nProf. Josef Stricker for his helpful comments.\nReferences\nAtluri, S. N. (1984): Computational Solid Mechan-\nics (Finite Elements and Boundary Elements): -Present\nStatus and Future Directions. Proceedings of the 4th In-\nternational Conference on Applied Numerical Modeling,\npp. 29\u201337.\nAtluri, S. N. (1992): Computational Nonlinear Me-\nchanics in Aerospace Engineering. Progress in Astro-\nnautics and Aeronautics Series, AIAA.\nAtluri, S. N.; Zhu, T. (1998): A New Meshless\nLocal Petrov-Galerkin (MLPG) Approach in Computa-\ntional Mechanics. Computational Mechanics, vol. 22,\npp. 117\u2013127.\nBaines, M. J. (1994): Moving Finite Elements. Oxford\nUniversity Press Inc, New York.\nBudd, C. J.; Carretero-Gonzalez, R.; Russell, R. D.\n(2005): Precise computations of chemotactic collapse\nusing moving mesh methods. J. Comput. Phys., vol. 202,\npp. 463\u2013487.\nCarlson, N. N.; Miller, K. (1998): Design and applica-\ntion of a gradient-weighted moving finite element code I:\nin one dimension. SIAM Journal on Scientific Comput-\ning, vol. 19, pp. 728\u2013765.\nCarlson, N. N.; Miller, K. (1998): Design and applica-\ntion of a gradient-weighted moving finite element code\nII: in two dimensions. SIAM Journal on Scientific Com-\nputing, vol. 19, pp. 766\u2013798.\nGivoli, D.; Neta, B. (2003): High-order non-reflecting\nboundary conditions for dispersive waves. Wave Motion,\nvol. 37, pp. 257\u2013271.\nGustafsson, B.; Kreiss, H. O.; Oliger, J. (1995): Time\nDependent Problems and Difference Methods. Wiley,\nNew York.\nHaltiner, G. J. (1980): Numerical Prediction and\nDynamic Meteorology. Wiley, New York.\n164 Copyright c\u00a9 2006 Tech Science Press CMES, vol.15, no.3, pp.147-164, 2006\nKalnay, E.; Lord, S. J.; McPherson, R. D. (1998):\nMaturity of operational numerical weather prediction:\nMedium range. Bulletin of the American Meteorolog-\nical Society, vol. 79, pp. 2753\u20132769.\nKim, H. G.; Atluri, S. N. (2000): Arbitrary placement\nof secondary nodes, and error control, in the meshless lo-\ncal Petrov-Galerkin (MLPG) method. CMES: Computer\nModeling in Engineering & Sciences, vol. 1, no. 3, pp.\n11\u201332.\nKuprat, A. (1992): Creation And Annihilation Of\nNodes For The Moving Finite Element Method, PhD the-\nsis. University of California, Berkeley.\nLi, R.; Liu, W. B.; Ma, H. P. (2004): Moving mesh\nmethod with error-estimator-based monitor and its appli-\ncations to static obstacle problem. J. Sci. Comput., vol.\n21, pp. 31\u201355.\nLohner, R. (1987): An adaptive finite element scheme\nfor transient problems in CFD. Computer Methods in\nApplied Mechanics and Engineering, vol. 61, pp. 323\u2013\n338.\nMiller, K. (1981): Moving Finite Elements II. SIAM\nJournal on Numerical Analysis, vol. 18, pp. 1033\u20131057.\nMiller, K. (1997): A geometrical-mechanical inter-\npretation of gradient-weighted moving finite elements.\nSIAM Journal on Numerical Analysis, vol. 34, pp. 67\u2013\n90.\nMiller, K.; Miller, R. N. (1981): Moving Finite Ele-\nments I. SIAM Journal on Numerical Analysis, vol. 18,\npp. 1019\u20131032.\nNishioka, T. (2005): Recent Advances in Numerical\nSimulation Technologies for Various Dynamic Fracture\nPhenomena. CMES: Computer Modeling in Engineering\n& Sciences, vol. 10, no. 3, pp. 209\u2013216.\nNishioka, T.; Atluri, S. N. (1980): Numerical Model-\ning of Dynamic Crack Propagation in Finite Bodies, by\nMoving Singular Elements, Part 1: Formulation. Jour-\nnal of Applied Mechanics.\nNishioka, T.; Atluri, S. N. (1980): Numerical Model-\ning of Dynamic Crack Propagation in Finite Bodies, by\nMoving Singular Elements, Part 2: Results. Journal of\nApplied Mechanics, vol. 47, pp. 577\u2013582.\nPedlosky, J. (1987): Geophysical Fluid Dynamics.\nSpringer, New York.\nSteppeler, J.; Hess, R.; Schattler, U.; Bonaventura, L.\n(2003): Review of numerical methods for nonhydro-\nstatic weather prediction models. Meteorology and At-\nmospheric Physics, vol. 82, pp. 287\u2013301.\nStoker, J. J. (1992): Water Waves: The Mathematical\nTheory with Applications. Wiley, New York.\nTan, Z.; Zhang, Z.; Huang, Y.; Tang, T. (2004): Mov-\ning mesh methods with locally varying time steps. J.\nComput. Phys., vol. 200, pp. 347\u2013367.\nTang, T. (2005): Moving mesh methods for computa-\ntional fluid dynamics. Technical Report CSCAMM-05-\n04, University of Maryland, Centre for Scientific Com-\nputation and Mathematical Modeling Report, 2005.\nTchouikov, S.; Nishioka, T.; Fujimoto, T. (2004):\nNumerical Prediction of Dynamically Propagating\nand Branching Cracks Using Moving Finite Element\nMethod. CMC: Computers, Materials, and Continua,\nvol. 1, no. 2, pp. 191\u2013204.\nWacher, A. (2004): String Gradient Weighted Moving\nFinite Elements for Systems of Partial Differential Equa-\ntions, DPhil thesis. Computing Laboratory, Oxford Uni-\nversity.\nWacher, A.; Givoli, D. (To appear): Solution of non-\nlinear dispersive wave problems using a moving finite el-\nement method. Communications in Numerical Methods\nin Engineering.\nWacher, A.; Sobey, I.; Miller, K. (2003): String gradi-\nent weighted moving finite elements for systems of par-\ntial differential euqations. Technical Report 03\/15, Com-\nputing Laboratory, Oxford University, Numerical Analy-\nsis Group, 2003.\nZhao, C.; Hobbs, B. E.; Mu\u00a8hlhaus, H. B.; Ord, A.\n(1999): A Consistent Point-Searching Algorithm for\nSolution Interpolation in Unstructured Meshes Consist-\ning of 4-Node Bilinear Quadrilateral Elements. Int. J.\nNumer. Meth. Engrng., vol. 45, pp. 1509\u20131526.\n"}