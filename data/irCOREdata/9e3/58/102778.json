{"doi":"10.1109\/IWSSC.2008.4656754","coreId":"102778","oai":"oai:epubs.surrey.ac.uk:2315","identifiers":["oai:epubs.surrey.ac.uk:2315","10.1109\/IWSSC.2008.4656754"],"title":"Channel-Aware Scheduling Algorithms with Channel Prediction for Reliable Multicast Data Transmission over Geostationary Satellite Networks","authors":["Sali, A","Acar, G","Evans, B","Giambene, G"],"enrichments":{"references":[],"documentType":{"type":1}},"contributors":[],"datePublished":"2008-01-01","abstract":null,"downloadUrl":"","fullTextIdentifier":null,"pdfHashValue":null,"publisher":null,"rawRecordXml":"<record><header><identifier>\n    \n    \n      oai:epubs.surrey.ac.uk:2315<\/identifier><datestamp>\n      2017-10-31T14:05:02Z<\/datestamp><setSpec>\n      74797065733D61727469636C65<\/setSpec><setSpec>\n      6469766973696F6E733D656E67616E64706879736963616C736369656E636573:656C656374726F6E6963656E67696E656572696E67:63637372<\/setSpec><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:relation>\n    \n      \n        http:\/\/epubs.surrey.ac.uk\/2315\/<\/dc:relation><dc:title>\n        Channel-Aware Scheduling Algorithms with Channel Prediction for Reliable Multicast Data Transmission over Geostationary Satellite Networks<\/dc:title><dc:creator>\n        Sali, A<\/dc:creator><dc:creator>\n        Acar, G<\/dc:creator><dc:creator>\n        Evans, B<\/dc:creator><dc:creator>\n        Giambene, G<\/dc:creator><dc:date>\n        2008-01-01<\/dc:date><dc:type>\n        Article<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:format>\n        text<\/dc:format><dc:language>\n        en<\/dc:language><dc:identifier>\n        http:\/\/epubs.surrey.ac.uk\/2315\/1\/SRF002272.pdf<\/dc:identifier><dc:identifier>\n          Sali, A, Acar, G, Evans, B and Giambene, G  (2008) Channel-Aware Scheduling Algorithms with Channel Prediction for Reliable Multicast Data Transmission over Geostationary Satellite Networks   2008 INTERNATIONAL WORKSHOP ON SATELLITE AND SPACE COMMUNICATIONS, CONFERENCE PROCEEDINGS.  pp. 85-89.      <\/dc:identifier><dc:relation>\n        http:\/\/ieeexplore.ieee.org\/xpls\/abs_all.jsp?arnumber=4656754&tag=1<\/dc:relation><dc:relation>\n        10.1109\/IWSSC.2008.4656754<\/dc:relation><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":["http:\/\/epubs.surrey.ac.uk\/2315\/","http:\/\/ieeexplore.ieee.org\/xpls\/abs_all.jsp?arnumber=4656754&tag=1","10.1109\/IWSSC.2008.4656754"],"year":2008,"topics":[],"subject":["Article","PeerReviewed"],"fullText":"978-1-4244-1948-7\/08\/$25.00 \u00a92008 IEEE                              IWSSC 2008 \nChannel-Aware Scheduling Algorithms with Channel \nPrediction for Reliable Multicast Data Transmission \nover Geostationary Satellite Networks \n \n*A.Sali, *G.Acar, *B.Evans \n*Center for Communication Systems Research (CCSR), \nUniversity of Surrey, \nGU2 7XH Guildford, UK \n{A.Sali, G.Acar, B.Evans}@surrey.ac.uk \nG. Giambene \nCNIT-Universit\u00e0 degli Studi di Siena, \nVia Roma, 56, \n53100 Siena, Italy \ngiambene@unisi.it\n \n \nAbstract\u2014\u2013 In this paper, Real-Time Channel Prediction \n(RTChP) technique is implemented with channel-aware \nscheduling algorithms to increase decision accuracy at the \nscheduler. The channel-aware scheduler receives feedback \nmessages in the form of Channel State Information (CSI) from \nthe terminals via reservation slots in the return link. In the face \nof reliable multicast transmission, the channel-aware scheduler \naims to reduce the number of packets received in error at the \nterminals. As a consequence, additional retransmission passes \ncan be decreased, resulting in higher resource utilization in the \nforward link and reduced session delay. Simulation results are \npresented with considerations of a Channel-Aware Scheduling \n(CAS) algorithm. From simulation results, RTChP increases \nperformance gain when a lower number of terminals are \nconsidered. However, when the scenario involves more terminals, \nthe prediction technique is ineffective and its performance \ndeteriorates. Essentially, the RTChP implemented at the \nscheduler is useful only for small multicast group.  \n \nKeywords\u2014 real-time channel prediction technique, channel-\naware scheduling algorithms, reliable multicast transmission, \ngeostationary satellite networks  \n  \nI.  INTRODUCTION  \nMulticast services are well supported by geostationary \nsatellites as a result of their inherent broadcasting capabilities \nover large coverage areas. However, in the context of reliable \ntransmission, its configuration and management must be \naccurately analysed, since satellite resources are expensive and \nlink quality degrades significantly during fading. Also, in \ntransmission of multicast data from a satellite direct to N \nreceivers, repeated retransmissions due to bad channel \nconditions may exhaust the forward link capacity, as reported \nin [1]. This problem is more pronounced in case of large \nmulticast groups since the performance of the communication \ndepends on the performance of a group of users that are \npossibly located across the spotbeam, hence experiencing \ndifferent channel conditions. \nThere are possibilities of tackling user heterogeneity in \nmulticast transmission. One of them, which are getting more \nattention, is cross-layer design. Cross-layer design suggests \n(possibly joint) adaptation of communication protocols and \nmechanisms at various layers according to the information \ncollected at other layers of the communication system. Recent \ngrowth in heterogeneous networks entails adaptive \nmechanisms. In this framework, a cross layer approach would \nbe more effective and flexible. In wireless systems where both \nradio resources and power are strictly constrained, resource \noptimisation is needed when such opportunity is not \nguaranteed by the strictly layered protocol stack. 1 \nIn this paper, we implement cross-layer approach at a \nchannel-aware scheduler in Radio Access Network (RAN). \nSpecifically, Channel State Information (CSI) from physical \nlayer (PHY) of the terminals is reported via return link for the \nscheduler\u2019s utilization which resides in Medium Access \nControl (MAC) of (RAN). To increase the accuracy of \nscheduling decisions, the integration of a channel prediction \ntechnique with the channel-aware scheduling (CAS) algorithm \nis proposed and investigated in this paper. In return, resource \nutilisation will be increased and session delay reduced. The \nchallenge with respect to the scheduling design arises from the \nfact that a multicast scenario is considered, where scheduling \ndecision concerns all users in the multicast group. In other \nwords, the fluctuating channel condition from a large number \nof users has to be considered, whilst optimizing scheduling \ndecision to benefit all users as well as network operator The \nscheduling algorithm allows an efficient transmission of \nmulticast data by means of reacting to users\u2019 channel condition \nvia updating scheduling parameters to control the transmission \nof packets in the forward link.  \nThe reference system is based on an L-Band geostationary \nsatellite network representing Inmarsat BGAN (Broadband \nGlobal Area Network) system shown in Figure 1. The \nscheduling is executed at the Radio Access Network (RAN) \n                                                           \n* Corresponding author. Address: Centre for Communication Systems Research, \nUniversity of Surrey, Guildford, GU2 7XH, United Kingdom, tel. no. ++44 1483 683036, \nfax. no. ++44 1483 686001. \nEmail addresses: A.Sali@surrey.ac.uk (A. Sali), G.Acaar@surrey.ac.uk (G. Acar), \nB.Evan@surey.ac.uk (B. Evans), giambine@unisi.it (G. Giambene). This paper has been \ncarried out within the framework of the European SatNEx II (contract No. IST-027393, \nnetwork of excellence, www.satnex.org, joint activity JA2330.  \n \nAuthorized licensed use limited to: University of Surrey. Downloaded on May 12,2010 at 15:58:09 UTC from IEEE Xplore.  Restrictions apply. \n         \nand a geostationary satellite relays multicast data products \nfrom Multicast File Transport Protocol (MFTP) server to all \nmulticast receivers via N number of Mobile Terminals (MT) \nand MFTP Client termed as users or receivers. The reliable \ntransmission under consideration outlines that all terminals \nreceive the exact copy of the transmitted file. The multicast \nreliability is achieved via a multicast transport protocol with a \nretransmission strategy that is based on StarBurst MFTP \n(Multicast File Transfer Protocol) [3]. The relation between \nfile, MFTP block and Data Transmission Unit (DTU) is shown \nin Figure 2. According to MFTP, a multicast file is first \ntransmitted to all group members in its entirety in the initial \npass. In response, after the end of the original transmission \npass, receivers send negative acknowledgments (NACK) \nindicating lost DTUs. If any DTU retransmissions are \nrequired, then the MFTP server makes another pass (i.e. pass \nnumber 2) through the file, but sends only those DTUs that \nwere reported as missed by at least one client. Additional \npasses may be required to successfully deliver all DTUs to all \nMFTP clients. In essence, the retransmission passes increases \nwith the number of terminals and slot error rate.  \n \n \nFigure 1. Reference system architecture. The satellite provides broadband \naccess for transmission of multicast data product to receiver \n \nIf a terminal received a Data Transmission Unit (DTU) \nunsuccessfully, then the DTU will be retransmitted. This \nscenario not only reduces resource utilization in the forward \nlink, but also increases session delay because of the \nretransmission process. Note that for each retransmission pass, \none round trip time is added to the session delay. Hence, the \naim of utilizing CSI updates from terminals by the scheduler \nin RAN is to increase forward link resource utilization and \nreduce session delay. To increase the accuracy of scheduler \ndecision, it is expected that the performance of the scheduler is \nfurther improved with real-time channel prediction technique \n(RTChP).  \nThe propagation environment is in the range of L-band \nchannel model based on parameters from [2]. The propagation \nparameters are recommended values to match the extracted \ntime-series parameters from measurements. Basically, the \nchannel model makes use of a two-state semi-Markov model \nrepresenting Line-Of-Sight (LOS) and fading states. The \npropagation parameters boil down to bit energy per noise \ndensity, ob NE . From the value of ob NE , the appropriate \nbit error rate,\u03c6 , can be found according to the specified \ncoding and modulation parameters. The terminal then \ncalculates its respective forward bearer slot error rate, p, as a \nfunction of BER and payload size, L: \n \nLp )1(1 \u03c6\u2212\u2212=  \n \nThe forward bearer slot error rate, p, is the Channel State \nInformation (CSI) parameter of interest in our work. Herewith \nthe forward bearer slot error rate will simply be referred as slot \nerror rate.  \n. \n \n \nFile \nBlock1 Block2 BlockB \u2026\nDTU1,1 \u2026DTU21 DTUD,1\n\u2026Blockb \nDTU1,b DTUd,b DTUD,B\u2026 \u2026\n \nFigure 2. Relationship between file, block and DTU \n \n \nII. CHANNEL-AWARE SCHEDULING ALGORITHMS WITH \nCHANNEL PREDICTION \n \nA.  Channel-Aware Scheduling (CAS) Algorithm \nAccording to CAS algorithm as defined and optimized in \n[4], a transmission of a packet in the forward link is resumed \nwhen the terminals are in good channel condition. Otherwise, \nthe transmission is delayed by one slot. This operation can be \ndescribed by inequality (1). In other words, if inequality (1) is \nfulfilled, then the packet is transmitted in the current forward \nbearer slot. Otherwise, the packet is delayed. \n \nprtxthreshprtx \u2264     (1) \n \nwhere the probability of retransmission, prtx , is calculated as  \n \n\u220f\n=\n\u2212\u2212=\nN\nj\njpprtx\n1\n)1(1     (2) \n \nwhere jp is CSI value defined as the slot error rate from \nterminal j and N is the total number of terminals. The \nthreshold, prtxthresh, is defined as  \n \nN\njpprtxthresh )1(1 \u2212\u2212=    (3) \n \nwhere jp is average slot error rate. As shown in equations (2) \nand (3), both scheduling parameters prtx and prtxthresh are \nRAN \nInternet\nGateway GPRS \nSupport Node \nGGSN \nMCS\nMulticast Control Server \nMFTP \nServer \nC-band \nfeeder link \nL-band  \nuser link \nMT \nMFTP \nClient \nMT \nMFTP \nClient \nMT \nMFTP \nClient \nAuthorized licensed use limited to: University of Surrey. Downloaded on May 12,2010 at 15:58:09 UTC from IEEE Xplore.  Restrictions apply. \n         \ncalculated from updated CSI value, jp , by the terminals. The \nparameter prtx represents instantaneous probability of \nretransmission of the packet, whereas prtxthresh corresponds \nto the long-term average of the probability of retransmission. \nIn general, a lower prtx compared to prtxthresh signifies a \nbetter channel condition, resulting in higher probability of the \npacket to be received correctly by the terminals.   \n \nB. CSI Collection and Suppression Policy \nAt the terminal, CSI collection and suppression policy \naccording to [5] is run. The operation starts with CSI \nmeasurement and comparison, which is executed every 10ms. \nThe comparison employs change detection concept; if a \nsignificant change in CSI is observed, then the terminal will \ntry to access the uplink slots for CSI updates. Otherwise, the \nterminals do not observe large variation of channel conditions \nworth accessing the slots for. In this case, the terminal is \nsuppressed. This mechanism is implemented to avoid \nfeedback implosion problem which is well known in multicast \ntransmission.  \n This policy involves two slot error rate values from the \nterminals; the first is slot error rate averaged over a sliding \nobservation window of length V seconds, and the other one \nfrom an increasing reference window of length t-V seconds. \nThe two slot error rate values are compared at every CSI \nmeasurement; i.e., every 10ms. Upon detecting discrepancy \nbetween the two by a threshold value\u03c8 , then the terminal is \nready to transmit its CSI values. If not, the terminal is \nsuppressed from accessing the uplink slots. In the simulations, \nthe size of an observation window, V, is 80ms, and change \ndetection threshold,\u03c8 , is 0.05. \n \nC. Uplink Access Scheme \nUpon CSI measurement and collection according to Section \nB, a terminal that satisfies the policy is now ready to transmit \nits CSI values. The terminal randomly access contention slots \n(i.e., slots reserved for random access) to send a capacity \nrequest by sending a STATUS SDU (Signalling Data Unit) to \nthe RNC to request scheduled slots. The STATUS SDU \nexpresses the amount of data waiting in the terminal output \nbuffers to be transmitted. If more than one terminal selects the \nsame contention slot, a collision takes place on the uplink. \nBecause of the collision, the transmitted STATUS SDU in this \nslot will be lost.  \nIn order to reduce the probability of collision, terminals \nrandomly select a contention slot. If the STATUS SDU is \ncorrectly received by the RAN, then, in response, the RAN \nallocates a reservation slot for the terminal. The terminal then \nutilizes the allocated reservation slot for its CSI update. Apart \nfrom CSI updates, the reservation slots is also used for higher-\nlayer traffic, such as NACKs and DONE messages. The \nreception of STATUS SDUs must be confirmed by the \nSTATUS-ACK SDU from the RNC. If the terminal does not \nreceive a STATUS-ACK before the STATUS-ACK-TIMER \nexpires, the terminal repeats the random contention slot \nselection procedure to send a new STATUS SDU.  \nThe uplink capacity for CSI updates from the terminals is \norganized in 80ms MF-TDMA frames that are composed of a \nnumber of 5ms and 20ms time slots. In the simulation, three \nuplink carriers are used, 2 carriers consists of four 20ms \nreservation slot each, and one carrier consists of 16 5ms \ncontention slots.  \n \nD. Real-time Channel Prediction Technique (RTChP) \n At the scheduler in RAN, successful CSI updates arrive \naccording to CSI collection and suppression policy described \nin Section II-B. Based on the updated CSI, real-time channel \nprediction (RTChP) is considered to improve the performance \nof CAS by tracking the behavior of scheduling parameter \nprtx in time. The operation of RTChP (or lack of it) is \ndescribed as follows: \ni) First, the scheduler calculates the scheduling \nparameter prtx according to equation (2).  \nii) Next, with RTChP in place, prtx is predicted \n2\nRTTt ahead.  Based on the predicted value, the scheduler \ndecides to use or not the current slot according to \ninequality (1). In contrast, without RTChP in place, \nprtx is calculated merely based on )(tp j updated from \nthe terminals.  \nThe channel estimation technique that is used in this context \nis derived from [6], which is claimed to be more accurate and \nreliable estimation technique pertaining to satellite channels. \nIn our simulation, the scheduling parameters prtx  is sampled \nevery \n20\nRTTtn = s. At sample index trnn = , we want to predict \nthe value of prtx in the future, i.e., at arrival correspond \nto 0nnn tr += . Thus, the general prediction is  \n \n]1[][][\u02c6 210 \u2212+=+ trtrtr nprtxcnprtxcnnrtxp   (6) \n \nwhere 00 \u2265n represents how far ahead we want the predictor \nto tell the behavior of prtx  in the future, in our case \n20\nRTTtn = ; i.e. one sample away. AutoRegressive (AR) model \nwith two poles are assumed, hence the number of past data \nused in prediction to that poles are restricted, i.e. one or two. \nThe value of prediction coefficients 1c and 2c  can be resolved \nin a matrix form. In the case of 2-pole Yule-Walker, prediction \ncoefficient c can be presented in matrix form as \n \n\u23a5\u23a6\n\u23a4\u23a2\u23a3\n\u23a1\n+\n+\n=\u23a5\u23a6\n\u23a4\u23a2\u23a3\n\u23a1\u23a5\u23a6\n\u23a4\u23a2\u23a3\n\u23a1\n]2[\n]1[\n]0[]1[\n]1[]0[\n0\n0\n2\n1\nnK\nnK\nc\nc\nKK\nKK\npp\npp\npppp\npppp   (7) \n \nAuthorized licensed use limited to: University of Surrey. Downloaded on May 12,2010 at 15:58:09 UTC from IEEE Xplore.  Restrictions apply. \n         \nwhere ][mK pp is correlation function of past data. To solve \nthe inverse of matrix (7), ][mK pp must be estimated itself. In \nreference [6] it is suggested that estimate of ][mK pp , ][\u02c6 mK pp , \ncan be calculated using sample correlation function from past \ndata. Basically, the predictor uses the last X data points to \nobtain estimated value of prtx , ppK\u02c6 : \n \n\u23aa\u23aa\u23a9\n\u23aa\u23aa\u23a8\n\u23a7\n\u2212\u2264+\n\u2212\n=\n\u2211\u2212\n+\u2212=\notherwise\nmXaifmaprtxaprtx\nmXqmK\nmq\nXqapp\n0\n][][1\n],[\u02c6\n1\n      (8) \n \nIn our consideration, the last X = 10 last data points of \nprtx is used. From the estimation of of Kpp[m] in equation (8), \nthe prediction coefficients 1c and 2c at each trn  can be \nobtained, which are then used to predict ][\u02c6 0nnrtxp tr +  \naccording to equation (6).  \nLikewise, a scenario is compared where RTChP is not \nimplemented. In such scenario, the scheduling parameter \nprtx considers only the CSI values updated from the \nterminals, i.e. without using prediction technique. \nSubsequently, the value of prtx  becomes: \n \n][][\u02c6 0 trtr nprtxnnrtxp =+     (8) \n \nTABLE I SIMULATION PARAMETERS \nParameter Value \nNumber of terminals, N {5, 10, 15, 20} \nPayload size, L 5120 bits \nPayload duration, Slott  10 ms \nFile size, F 10 MB \nRound-trip-time, RTTt  800 ms \nDTU payload size, DTUL  11392 bits \nTotal number of DTUs in the \nfile, M \n7364 DTUs \nUplink slots 8 reservation slots, 16 \ncontention slots \nChange detection parameter, V 80 ms \nChange detection threshold, \u03c8  0.05 \nAverage ob NE  6.98 dB \n(Std. deviation = 1.69dB) \nAverage slot error rate, p  425.2 \u2212e  \nLog-normal fading duration  Mean = 0.98 s  \n(Std. deviation = 1.45 s) \nPower law LOS duration Mean = 1.37 s  \n(Std. deviation = 2.22 s) \n \nII. PERFORMANCE ANALYSIS \nTo observe the scheduling performance with respect to \nimplementation of RTChP, simulations of reliable \ntransmission of a file with size F MB to N number of terminals \nare run. In the simulation analysis, the parameters listed in \nTable I are observed.  \nThe performance of RTChP is tested against number of \nterminals. In Figures 3 and 4, the average session duration and \nnumber of DTUs retransmitted are plotted against number of \nterminals, N, respectively. As shown in the figures, it is found \nthat both session duration and number of DTUs retransmitted \nobserve better performance with RTChP in place when few \nterminals are considered. As number of terminals is increased, \nRTChP becomes ineffective in predicting the future value of \nscheduling parameter rtxp\u02c6 , resulting in worse performance. \nThis is because RTChP is implemented at the scheduler in \nRAN, rather than at each terminal. It is expected that if RTChP \nis run at the terminal to predict its CSI value (i.e. p) one round-\ntrip time away, then the performance will be greatly improved. \nThe only constraint for such implementation is that complexity \nincreases, since we are considering multicast scenario. \nFurthermore, the limited number of contention and reservation \nslots resulting in higher number of collisions when more \nterminals are trying to access the uplink slots for CSI updates. \nThis is illustrated in Figure 5, where the number of collision \nincreases when number of terminals increases.  \nCertainly, the RTChP scheme is not perfect, but knowledge \nof future channel condition might greatly help with the \nscheduling decision which results in higher accuracy and \nreliability of the decision, particularly when small number of \nterminals is considered. As more terminals are expected \nespecially in geostationary satellite networks, the RTChP \nmight not be effective in coping with terminal heterogeneity. \n \nFigure 3. CAS algorithm, session duration vs. N, with and without real-time \nchannel prediction technique (RTChP)   \nAuthorized licensed use limited to: University of Surrey. Downloaded on May 12,2010 at 15:58:09 UTC from IEEE Xplore.  Restrictions apply. \n         \n \nFigure 4.  CAS algorithm, number of DTUs retransmitted vs. N, with and \nwithout real-time channel prediction technique (RTChP) \n \nFigure 5.  Number of collision vs. number of terminals, N \n \nV. CONCLUSION \nIn this paper we show the possible implementation of \nchannel-aware scheduling algorithms with channel prediction \ntechnique in the spirit of cross-layer design to improve the \nperformance of reliable multicast transmissions over \ngeostationary satellite channels. In particular, interactions \nbetween CSI values from PHY layer and channel-aware \nscheduler in MAC layer are investigated in the presence of L-\nband satellite channel.  \nA scheduling algorithm is studied, called Channel-Aware \nScheduler (CAS). Based on CAS algorithm, RTChP is run \nupon, with the objective to increase the accuracy of scheduling \ndecision. It is found that session delay and number of packets \nretransmitted are greatly reduced with RTChP in place for low \nand medium number of terminals.  \nCurrently, channel-aware scheduling algorithm is tested on \nsingle multicast data product. It will be interesting to \ninvestigate the scheduling mechanism when there is more than \none multicast group is considered, each terminal in the group \nexperiencing different channel condition. Such scenario might \ncall for optimized solution, which is our future study of \ninterest.  \n \n \n \nACKNOWLEDGMENT \nThis paper has been carried out within the framework of \nEuropean SatNEx II (contract no. IST-027393) network of \nexcellence, www.satnex.org, joint activity JA2330 \u201cResource \nAllocation and Adaptation\u201d.  \nREFERENCES \n[1] G. Giambene, S. L. Kota, \"Cross-Layer Protocol Optimization for Satellite \nCommunications Networks: A Survey\", International Journal of Satellite \nCommunications and Networking, Vol. 24, pp. 323-341, 2006. \n [2] L. E. Braten, T. Tjelta, \"Semi-Markov Multistate Modeling of Land \nMobile Propagation Channel for Geostationary Satellites\", IEEE \nTransactions on Antennas and Propagation, Vol. 50, No. 12, December \n2002. \n [3] K. Miller, K. Robertson, \"StarBurst Multicast File Transfer protocol \n(MFTP) Specification\", IETF Draft <draft-miller-mftp-spec-03.txt>, July \n1998. \n [4] A. Sali , G. Acar, B. Evans, \"A Cross-Layer Approach for Scheduling in \nreliable Multicast Data Transmission over Geostationary Satellite \nNetworks\",  IEEE 65th Vehicular Technology Conference VTC2007,  \nDublin, 23rd-25th April 2007. \n[5] A. Sali, G. Acar, B. Evans, G. Giambene, \u2018Change Detection Mechanism \nin Feedback Implosion Suppression Algorithm for Reliable Transmission of \nMulticast Data over Geostationary Satellite Network\u2019, 26th AIAA \nInternational Communications Satellite Systems Conference (ICSSC-2008), \nSan Diego, 10th -12th June 2008 \n[6] J. P. Choi, V. W. S. Chan, \"Predicting and Adapting Satellite Channels \nwith Weather-Induced Impairments\", IEEE Transactions on Aerospace and \nElectronics Systems, Vol. 38, No. 3, July 2002. \n \n \n \n \n \n \n \n \n \nAuthorized licensed use limited to: University of Surrey. Downloaded on May 12,2010 at 15:58:09 UTC from IEEE Xplore.  Restrictions apply. \n"}