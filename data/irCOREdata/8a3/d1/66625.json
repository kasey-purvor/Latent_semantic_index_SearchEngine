{"doi":"10.1109\/COMPSAC.2005.161","coreId":"66625","oai":"oai:dro.dur.ac.uk.OAI2:672","identifiers":["oai:dro.dur.ac.uk.OAI2:672","10.1109\/COMPSAC.2005.161"],"title":"Tree-map visualization for web accessibility.","authors":["Bailey, J.","Burd, E.L."],"enrichments":{"references":[],"documentType":{"type":1}},"contributors":[],"datePublished":"2005-07","abstract":"Ensuring a Website is accessible for diverse sets of users is a crucial and in some circumstances a legal requirement. It can also be a time consuming and frustrating fire fighting exercise. This research paper describes a visual evaluation of the accessibility of a Website using Tree-Maps. Its goal is to highlight areas of a site that need attention. This is achieved by generating accessibility metrics and then plotting these onto a visualisation. The research identified that tree-maps can efficiently represent the accessibility of a Website. Further work on the visualisation of changes in accessibility is suggested and discussed","downloadUrl":"https:\/\/core.ac.uk\/download\/pdf\/66625.pdf","fullTextIdentifier":"http:\/\/dro.dur.ac.uk\/672\/1\/672.pdf","pdfHashValue":"30e58b2edcc95393c15df6a9b1b6479e6c1ebd41","publisher":"IEEE","rawRecordXml":"<record><header><identifier>\n  \n    \n      oai:dro.dur.ac.uk.OAI2:672<\/identifier><datestamp>\n      2010-11-01T15:19:02Z<\/datestamp><\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n    \n      \n        Tree-map visualization for web accessibility.<\/dc:title><dc:creator>\n        Bailey, J.<\/dc:creator><dc:creator>\n        Burd, E.L.<\/dc:creator><dc:description>\n        Ensuring a Website is accessible for diverse sets of users is a crucial and in some circumstances a legal requirement. It can also be a time consuming and frustrating fire fighting exercise. This research paper describes a visual evaluation of the accessibility of a Website using Tree-Maps. Its goal is to highlight areas of a site that need attention. This is achieved by generating accessibility metrics and then plotting these onto a visualisation. The research identified that tree-maps can efficiently represent the accessibility of a Website. Further work on the visualisation of changes in accessibility is suggested and discussed. <\/dc:description><dc:publisher>\n        IEEE<\/dc:publisher><dc:source>\n         29th Annual International Computer Software and Applications Conference, COMPSAC 2005, 26-28 July 2005, Edinburgh, Scotland ; proceedings. . : IEEE, pp. 275-280<\/dc:source><dc:date>\n        2005-07<\/dc:date><dc:type>\n        Book chapter<\/dc:type><dc:type>\n        PeerReviewed<\/dc:type><dc:identifier>\n        dro:672<\/dc:identifier><dc:identifier>\n        doi:10.1109\/COMPSAC.2005.161<\/dc:identifier><dc:identifier>\n        http:\/\/dro.dur.ac.uk\/672\/<\/dc:identifier><dc:identifier>\n        http:\/\/dx.doi.org\/10.1109\/COMPSAC.2005.161<\/dc:identifier><dc:format>\n        application\/pdf<\/dc:format><dc:identifier>\n        http:\/\/dro.dur.ac.uk\/672\/1\/672.pdf<\/dc:identifier><dc:rights>\n        \u00a9 2005 IEEE. Personal use of this material is permitted. However, permission to reprint\/republish this material for advertising or promotional purposes or for creating new collective works for resale or redistribution to servers or lists, or to reuse any copyrighted component of this work in other works must be obtained from the IEEE.\\ud\n<\/dc:rights><dc:accessRights>\n        info:en-repo\/semantics\/openAccess<\/dc:accessRights><\/oai_dc:dc><\/metadata><\/record>","journals":null,"language":{"code":"en","id":9,"name":"English"},"relations":[],"year":2005,"topics":[],"subject":["Book chapter","PeerReviewed"],"fullText":"Durham Research Online\nDeposited in DRO:\n01 November 2010\nVersion of attached file:\nPublished Version\nPeer-review status of attached file:\nPeer-reviewed\nCitation for published item:\nBailey, J. and Burd, E.L. (2005) \u2019Tree-map visualization for web accessibility.\u2019, in 29th Annual International\nComputer Software and Applications Conference, COMPSAC 2005, 26-28 July 2005, Edinburgh, Scotland ;\nproceedings. , pp. 275-280.\nFurther information on publisher\u2019s website:\nhttp:\/\/dx.doi.org\/10.1109\/COMPSAC.2005.161\nPublisher\u2019s copyright statement:\n2005 IEEE. Personal use of this material is permitted. However, permission to reprint\/republish this material for\nadvertising or promotional purposes or for creating new collective works for resale or redistribution to servers or lists,\nor to reuse any copyrighted component of this work in other works must be obtained from the IEEE.\nAdditional information:\nUse policy\nThe full-text may be used and\/or reproduced, and given to third parties in any format or medium, without prior permission or charge, for\npersonal research or study, educational, or not-for-profit purposes provided that:\n\u2022 a full bibliographic reference is made to the original source\n\u2022 a link is made to the metadata record in DRO\n\u2022 the full-text is not changed in any way\nThe full-text must not be sold in any format or medium without the formal permission of the copyright holders.\nPlease consult the full DRO policy for further details.\nDurham University Library, Stockton Road, Durham DH1 3LY, United Kingdom\nTel : +44 (0)191 334 3042 \u2014 Fax : +44 (0)191 334 2971\nhttp:\/\/dro.dur.ac.uk\nTree-Map Visualisation for Web Accessibility \nJohn Bailey, Elizabeth Burd\nDepartment of Computer Science \nUniversity Of Durham \nDurham DH1 3LE \n{j.o.bailey, liz.burd}@durham.ac.uk \nAbstract \nEnsuring a website is accessible for diverse sets of \nusers is a crucial and in some circumstances a legal \nrequirement. It can also be a time consuming and \nfrustrating fire fighting exercise. This research paper \ndescribes a visual evaluation of the accessibility of a \nwebsite using Tree-Maps. Its goal is to highlight areas of \na site that need attention. This is achieved by generating \naccessibility metrics and then plotting these onto a \nvisualisation. The research identified that Tree-Maps can \nefficiently represent the accessibility of a website. \nFurther work on the visualisation of changes in \naccessibility is suggested and discussed. \n1. Introduction \nThe web is changing the way society interacts with \ninformation[13]. Today many companies use the web as \na means of interacting with their clients and customers. \nFor these clients to be able to access the information, \nparticularly those with disabilities, the interface to this \ninformation is crucial. This paper describes a tool for the \nassessment of web accessibility and investigates how it \nmay be used to aid the management of websites. The tool \nis used to produce a visual representation of a website \nwhich can then indicate the accessibility of the site\u2019s \npages. This paper now describes web accessibility and \nhow it can be evaluated. It then goes on to review Tree-\nMaps and how they can be applied to a website\u2019s \naccessibility through the use of maintenance scenarios. \nThe effectiveness of this visualisation is then evaluated \nand finally ideas for future work presented.  \n2. Web Accessibility \nAccessibility is defined by Webster\u2019s dictionary as \nbeing \u201ccapable of being used or seen\u201d. In terms of the \nWorld Wide Web this means that an accessible website is \none which can be seen and used by as many different \nuser groups as possible. Boldyreff underlines the growing \nimportance of the Web but warns that, \"access to the web \nand its many applications cannot be taken for \ngranted\"[3]. The World Wide Web Consortium (W3C) \nhas produced a set of web accessibility guidelines[6]. \nEach guideline contains a prioritised list of checkpoints \nthat web authors can use to ensure their web content is \naccessible to the widest possible audience. Recently \npassed legislation[8] ensuring the accessibility of on-line \nlearning material within education has raised the profile \nof web accessibility within British academia. A similar \nlaw (SECTION 08) passed in the USA enforces \naccessibility for all software and information systems \nwithin federal organization[ ]. Ensuring full compliance \nwith accessibility standards for a large website is \nextremely time consuming and expensive.  \n3. Web Maintenance \nMaintaining a website involves not only updating \ncontent but also the presentation and structure. To \nfacilitate this maintenance tools have been developed that \nsemi-automate the accessibility evaluation process. \nEvaluation tools examine web pages for machine \nreadable accessibility barriers and report back to the \nmaintainer. Results from these tools can be used as an \nindicator for overall accessibility. For example, if a web \npage contains basic accessibility barriers it is inaccessible \nto users affected by those barriers. \nAlthough there are now tools which evaluate \nindividual pages, little work has been carried out in \nassessing accessibility for an entire website. This paper \nproposes that such an overview allows an organisation to \nmonitor and react to potential accessibility problems. To \nprovide this overview the paper will present a novel \napplication of Tree-Maps to visualize a website\u2019s \naccessibility. This is described in the following section. \n4. Tree-Map Visualisation \nTree-Maps are a visualisation developed to present \nhierarchical data in a space efficient manner[12]. They \nProceedings of the 29th Annual International Computer Software and Applications Conference (COMPSAC\u201905) \n0730-3157\/05 $20.00 \u00a9 2005 IEEE \nare two dimensional visualisations which display nested, \ncoloured, rectangular nodes inside a fixed space. The \ndimensions and colour of the nodes convey details about \nthe data they represent. This means they make maximum \nuse of their available display space. A Tree-Map can \nrepresent website as a hierarchy by presenting each page \nas a node nested within either a physical (file system) or \nlogical hierarchy (information structure). As links \nbetween pages are not the focus of this paper it was \npossible to represent a website using its file system \nhierarchy. Navigational issues are already considered \nwithin the W3C guidelines and by ensuring that valid \nHTML is used. There are a significant number of \nadvantages of the use of Tree-Maps for visualising web \npages, which are described in the following. \nEffective Space Utilization\nBy presenting the data densely and in a fixed space \nthere are no problems with either navigating through a \nlarge area or the disorientation often associated with \ngraph based visualisations[4]. Users cannot get \u201clost\u201d \nwithin the Tree-Map as they view the entire visualization \non a single screen.\nInteractivity \nTo assist the maintenance of a website the user must \nbe able to interact with what they see on screen. For \nexample, users should be able to zoom in and out of \ndifferent sections and by doing so reveal an appropriate \nlevel of accessibility detail.  \nComprehension \nUsers must be able to make sense of the visualisation \nquickly and easily. Johnson states that Tree-Maps \u201cmust \nfacilitate the rapid extraction of information with low \nperceptual and cognitive loads\u201d[4]. Tree-Maps encode \ninformation by changing the colour and dimensions of \neach node. Dimensions and colour are both preattentive \ngraphical features[ ]. Preattentive features are those that \npicked up immediately by users without the need to \nanalyse the visualisation. By providing an overview of a \nwebsite it is possible to view changes on a larger scale, \nand hence intervene before problems become critical. \nA visualisation is only as useful if the underlying data \nis accurate. Section  describes how accessibility metrics \nwere generated from a website and then presented as a \nTree-Map. \n5. Tree-Map Generation  \nIn order to accurately represent the level of \naccessibility of a web page a software tool called Access \nValet [1 ] was used to evaluate each web page against \nthe W3C guidelines [6]. Access Valet generates an XML \nbased report containing all instances of breeches of W3C \nguidelines. Along with each instance it gives a \nconfidence rating which reflects how confident the tool is \nthat a guideline has been breeched. For instance, if an \nimage has no alternative text then the tool is certain that \nguideline 1.0 has been broken. An example where the \ntool cannot be certain would be whether clear and \nappropriate language had been used. . \n5.1. Metrics chosen \nMetrics were derived from the reports generated by \nAccess Valet. Each instance of a W3C guideline being \nbroken was recorded and used to produce an overall \naccessibility score. The number of invalid \/ deprecated \nHTML tags within the document was used to represent \nthe validity of the HTML. This is a useful indicator of \npoor accessibility as accessibility relies on correct use of \nHTML. \n5.2. Tool development  \nA combination of PHP and Java was used in the \ncreation of the tool. There were four main stages:  \n1. Visiting each page following (spidering) links within \nthe page for the entire website and then building an \nXML document containing the hierarchical structure. \n2. Running evaluation tool on each page and \nprocessing the report \n3. Generating an accessibility metric and adding them \nto the XML document from Stage 1 \n4. Converting the XML document in Stage 1 to the \nformat required by the Tree-Map software \nFurther details of this process will now be given. \nStage 1 \nPages were spidered by parsing and following all \navailable hyperlinks this process started with the \nhomepage and continued ignored external website links. \nOnly HTML based pages were included. This included \ndynamic pages providing they produced their output as \nHTML. \nStage 2 \nFor each individual webpage an accessibility report \nwas produced by Access Valet. This report is produced in \nthe W3C Evaluation and Report Language (EaRL)[7]. It \nreports all valid and invalid HTML used within the page. \nFollowing this it includes all failed accessibility guideline \ntests and where exactly within a page\u2019s source the barrier \noccurs. Access Valet also concludes whether the page \ncomplies with the specified guidelines.   \n    \nStage 3 \nTwo accessibility metrics were generated from the \nreport based on the problems detected by Access Valet. \nThere are two simple equations. Equation I takes the \nProceedings of the 29th Annual International Computer Software and Applications Conference (COMPSAC\u201905) \n0730-3157\/05 $20.00 \u00a9 2005 IEEE \npotential accessibility problems detected by Access Valet \nand computes an overall accessibility metric. Equation II\ncollects all the invalid or deprecated HTML errors found \nby Access Valet and produces a metric for the validity of \nthe HTML used.  The details of these equations follow. \nEquation I \nAt each confidence level (contained in the Conf set) the \nnumber of accessibility problems (Bc) found is multiplied \nby the simple weight (Wc) for that confidence. The \nhigher the confidence rating the greater the weight. \nWeights were chosen after a series of preliminary tuning \nexperiments. This is then divided by the total number of \nHTML attributes (Attribs) and elements (Elements) \ncontained within the webpage. This ensures that pages of \nvarious sizes can be fairly compared. The sum of each \nconfidence score is the Overall Accessibility metric \n(OAM).   \nEquation II \nThere are four elements to Equation II. Invalid and \ndeprecated HTML tags (IEM and DEM) and along with \ninvalid and deprecated attributes (IAM and DAM) within \nHTML tags. These give an Overall HTML Element and \nAttributes Metric (OEAM). As with equation I, \nweightings add more significance to elements than \nattributes and reflect that invalid tags or attributes are \nmore serious than deprecated tags or attributes. \nDeprecated markup was considered less problematic than \ninvalid markup. This is because at the time of creation \nthe markup might have been valid and so it is reasonable \nto expect modern browsers will be able to cope \ngracefully. \nStage 4 \nTo create the Tree-Map an open source application \ncalled JTreeMap was used. The XML document \nproduced in Stage 1 combined with the added \naccessibility information was converted into the XML \nformat required by JTreeMap. JTreeMap then parsed the \nXML file and created the visualisations that are presented \nin the Tree-Maps and Discussion section. \n5.3. Interpreting the Tree-Maps \nEach node in the Tree-Map represents a web page. \nEach node\u2019s colour saturation was determined by \nequation I and its dimensions by equation II. Equation I \nidentifies how accessible a page is according to the W3C \nstandards. An increase in the accessibility metric relates \nto an increase in the number of accessibility barriers. The \nordinal nature of the metric makes it well suited to a \ncolour saturation mapping. Equation II denotes the \nquality of the HTML. Nodes are grouped together in \n\u201cbranches\u201d which correspond to the directories their page \nis located in. Borders and labels of each branch are \nshown on the top level of the tree. \nThe more saturated (or brighter) a node is, the less \naccessible its corresponding web page. The larger the \nnode, in relation to others in its branch, the more \ninaccessible mark-up contained within its corresponding \nweb page. So then if follows that a large bright node is \nprobably more critical than a small dark node. \n6. Web Maintenance Scenarios \nTo investigate whether Tree-Maps provide an \neffective overview of changes in a website\u2019s accessibility \nfour scenarios were created based on typical website \nmaintenance activities. The website of the Department of \nComputer Science at the University of Durham was \nchosen because source code and maintainers of this \nwebsite were readily available. Also the site\u2019s size \n(approx 200 pages) was also ideal for the experimental \nnature of the software tool used. \n6.1. Scenario One: Script Maintenance \nWebsites rarely remain unchanged during their life \ncycle and regularly undergo acts of maintenance[14]. \nTypically such maintenance will be small corrective \nchanges and could be carried out to either dynamic web \napplications or static web pages[2]. This scenario \nsimulated an act of bad maintenance on a dynamic web \npage. Specifically the staff details page (get_info2.php) \nwill be modified. The script was changed so it no longer \nproduced ALT attributes inside image tags in the HTML. \n6.2. Scenario Two: Addition of a new module \nWebsites constantly evolve and grow[10]. To cope \nwith a constant demand for extra features and \nfunctionality, web maintainers usually make use of pre-\nProceedings of the 29th Annual International Computer Software and Applications Conference (COMPSAC\u201905) \n0730-3157\/05 $20.00 \u00a9 2005 IEEE \nexisting software modules to meet the new requirements. \nAccessible design in the pages produced by third party \nproducts is just as important as pages created by the \norganization itself. This scenario simulates the act of \ninstalling such a software module. The module was an \nopen source e-shop (phpShop) product and contains \ndynamic pages.  \n6.3. Scenario Three: Accessibility Repair work \nWhen accessibility problems are found, website \nmaintainers may choose may use an accessibility repair \ntool such as A-PROMPT[1]. Scenario three investigates \nwhether the visualisation accurately represents any \nimprovement after the pages contained within the \nundergraduate prospectus were repaired.  \n6.4. Scenario Four: Convert and publish \ndocuments from commercial software \nInternal documents are rarely created in HTML. \nOrganisations may wish to convert documents from their \noriginal format into HTML for publication on the \nInternet. Documents containing details of taught \npostgraduate courses were converted from Word format \nto HTML web pages. In this scenario all conversions will \nbe carried out using the software which created the \noriginal document.  \n7. Tree-Maps and Discussion \nOriginal Website Tree-Map \nFigure 1 shows the Tree-Map of the Department\u2019s \nwebsite before any modifications have been made.  There \nare two very interesting areas that appear to need \nattention. Firstly in the top half of the \u201cug\u201d \n(undergraduate section) there is a large \u201cbright\u201d section. \nIn this section there are three very large HTML files that \nhave been converted from word processor and desktop \npublishing formats. The second area that attracts the eye \nis in the bottom right hand corner of \u201cpeople\u201d. Upon \ncloser inspection they appear to be clones (copies). Each \nscript lists the staff members in each of the sub-divisions \nof the department. The developer has copied and pasted a \nsingle script and embedded a sub division variable within \neach copy. The remaining nodes in the \u201cpeople\u201d section \nare generated from \u201cget_info2.php\u201d and are staff \ninformation pages. They appear as one of two shades, \nbrighter nodes represent pages that have a photograph on \nthem. This is because Access Valet identifies all images \nas at least a low confidence potential accessibility \nproblem (i.e. any image may flicker).  \nScenario One Tree-Map \nIt is clear from Figure 2 that the accessibility metrics \nof the pages in the \u201cpeople\u201d section have changed. The \nshades of the nodes in this section are much brighter than \nin Figure 1. This indicates that the accessibility of these \npages has decreased. As all images within the page had \nthe \u201calt\u201d attribute removed even pages without staff \nphotographs were affected. \nScenario Two Tree-Map\nFigure 1. Tree-Map of Computer Science website before maintenance \nFigure 2. Tree-Map of Computer Science website after staff page \nmaintenance\nFigure 3. Tree-Map of Computer Science website after addition of \nphpShop (demo) module \nProceedings of the 29th Annual International Computer Software and Applications Conference (COMPSAC\u201905) \n0730-3157\/05 $20.00 \u00a9 2005 IEEE \nScenario Two has produced a Tree-Map significantly \ndifferent from that in Figure 1. The phpShop module \ncreated many web pages and so added a large number of \nnodes to the Tree-Map. Because Tree-Maps are \nconstrained within a fixed space the other nodes\u2019 \ndimensions have been altered to fit onto the screen. The \nsection labeled \u201cdemo\u201d contains the additional nodes \nbelonging to phpShop. According to the Tree-Map it is \nclear that the pages generated by phpShop have \naccessibility problems. There is a significant mass of \nbright and large nodes within the \u201cdemo\u201d section of the \nTree-Map. \nScenario Three Tree-Map \nIn Scenario Three there appears to be no difference in \nthe accessibility of the department\u2019s website. Figure 4 is \nidentical to Figure 1 and hence the \u201crepairs\u201d carried out \non the web pages had no noticeable effect according to \nthe Tree-Map. This could have been expected as the \nwebsite was recently updated with particular attention \npaid to the prospectus and accessibility.  \nScenario Four Tree-Map \nFigure  shows the effect of adding documents to a \nwebsite that have been converted from a bespoke format \ninto HTML without any treatment. The large areas of \nbright nodes in the postgraduate section correspond to the \nnewly converted web pages and their ancillary pages. For \nexample the slide show software created a new sub-\ndirectory and one web page per slide. In this case it also \ncreated a frameset to allow navigation. Frames are known \nto be potential barriers to accessibility. \n. Evaluation \n.1. Detection of Accessibility Errors  \nThe Tree-Map visualisation illustrates and draws \nattention to accessibility problems. Comparing Figure 1 \nto Figure 2 it is immediately obvious that there is an \naccessibility problem present in the people section of the \nwebsite after the modification to the script. The use of \npreattentive features such as colour saturation and \ndimension ensures that time is saved when looking for \naccessibility problems. In this instance the hue of the \nnodes remained constant with only the saturation was \nchanged. This allowed a mapping from the ordinal \naccessibility metric. As such the eye is drawn to the most \ninaccessible web pages. In the case of the departmental \nwebsite these were web pages converted from word \nprocessor documents. All the figures show that examples \nof these web pages are located in the undergraduate \n(\u201cug\u201d) section. It is also very clear that in Scenario Four \n(see Figure ) inaccessible web pages have been added to \nthe postgraduate section. \n.2.  Limitations of Tool \/ Visualisation \nOne important limitation to the use of a visualisation \nto manage accessibility is that it is not accessible itself. In \nits current form the tool could not be used by a blind \nuser. A text based equivalent therefore is proposed which \nwould take the form of a nested tree, similar to the XML \ndocument processed by the visualisation tool. Voice \nbased software readers could then navigate through the \nhierarchy with attributes read out loud to the user. \nAnother limitation is that it is impossible without \ncomparing previous visualisations to gauge whether \naccessibility has improved or decreased. A solution \nwould be to provide a comparative Tree-Map show the \ndifferences in accessibility between accessibility ratings \ntaken over a period of time. For example, an organisation \nmight wish to see if accessibility has been improved \nsince initiating a new IT strategy.  \n.3. Potential Usage Example \nFigure 4. Tree-Map of Computer Science website after \naccessibility repairs to prospectus section \nFigure 5. Tree-Map of Computer Science website after word processor \ndocuments have been converted to HTML in the postgraduate section \nProceedings of the 29th Annual International Computer Software and Applications Conference (COMPSAC\u201905) \n0730-3157\/05 $20.00 \u00a9 2005 IEEE \nThe high level view of accessibility enables \nmanagement to monitor the evolution of a website. If the \nsame sections of the website are constantly performing \nbadly, in terms of accessibility, the administration may \nwish to study the web practices and procedures and \nrecommend new tools and techniques used to create the \nweb content.  \n9. Related Work \nMacias[11] has developed a toolkit KAI which analyses \nweb pages, classifies and then presents them to a user in \nan appropriate form. Macias[11] introduces an XML \nbased Blind Mark-up Language (BML) which \n\u201cguarantees that the Web page constructed is \naccessible\u201d[11]. The KAI aims to automatically enhance \naccessibility from the web browsers point of view it does \nnot help organizations improve their web content creation \ntechniques. Access Valet\u2019s evaluation tool was used in \nthe creation of the Tree-Maps it also provides an entire \nreporting system. Reporting is text based and can be \ncustomised with the use of style sheets.  \n10. Conclusion \nThis paper has applied a Tree-Map visualisation to the \nmanagement of accessibility within a website. Such an \noverview will allow managers to observe the current state \nof a website\u2019s accessibility as well as monitoring its \nevolution. \nIt is clear from the results of the scenarios that problems \nand changes in the accessibility can be quickly and easily \nobserved. Visualisations are ideal for presentations and \nreports to non-technical audiences. The availability of \nthis additional information allows an organisation to \nresolve problems before they propagate throughout the \nwebsite. It also could be used to spot persistent offenders \nand identify if more training or better practices\/tools are \nrequired. Potential staff exchanges can also be identified. \nFor example, if one division produces accessible web \npages they may be asked to help other divisions that may \nbe struggling. \n11. Future Work \nFuture work will be carried out to reduce the number of \nfalse positives highlighted by the tool. This would \ninvolve a pilot scheme with feedback from website \nmaintainers used to tune the metrics used in Stage 3 of \nthe tool\u2019s visualisation process. The switch from a snap \nshot based visualisation to one that shows accessibility \nchanges over a period of time would be more useful for \nmonitoring the system\u2019s development and determining \nfuture maintenance.  \n12. References \n1. Adaptive Technology Resource Centre, U. o. T., A-\nPrompt Web Accessibility Verifier Website. 2004. \nhttp:\/\/aprompt.snow.utoronto.ca\/\n2. Athula Ginige, S. M., Guest Editors' Introduction: \nWeb Engineering - An Introduction. IEEE \nMultimedia, 2001. (1): p. 14-18.  \n3. Boldyreff, C., Determination and Evaluation of Web \nAccessibility. Proceedings of IEEE 11th Intl. \nWorkshops on Enabling Technologies: Infrastructure \nfor Collaborative Enterprises, 2002: p. 36 - 41.  \n4. Brian Johnson, B. S., Tree-Maps: A Space-Filling \nApproach to the Visualization of Hierarchical \nInformation Structures. Proceedings of IEEE \nVisualization 1, 1 1: p. 284 - 2 1.  \n. Christopher G. Healey, K. S. B., James T. Enns, \nHigh-speed visual estimation using preattentive \nprocessing. ACM Transactions on Computer-Human \nInteraction (TOCHI), 1 6. 3(2): p. 107 - 13 .  \n6. Consortium, W. W. W., Web Content Accessibility \nGuidelines 1.0. 1 . \nhttp:\/\/www.w3.org\/TR\/WCAG10\/\n7. Consortium, W. W. W., Evaluation and Report \nLanguage (EARL) 1.0. 2002. \nhttp:\/\/www.w3.org\/TR\/EARL10\/\n8. Government, B., Special Educational Needs and \nDisability Act 2001. 2001. \nhttp:\/\/www.hmso.gov.uk\/acts\/acts2001\/20010010.htm\n. Government, U., Section 508 Website. 2004. \nhttp:\/\/www.section 08.gov\/\n10. Lowe, D., Engineering the Web - Web Engineering or \nWeb Gardening  WebNet Journal, 1 . 1(1).  \n11. Mercedes Macias, F. S., Improving Web Accessibility \nfor Visually Handicapped People Using KAI.\nProceedings of the 3rd International Workshop on \nWeb Site Evolution, 2001: p. 4  - . \nhttp:\/\/csdl.computer.org\/comp\/proceedings\/wse\/2001\/\n13 \/00\/13 004 abs.htm\n12. Schneiderman, B., Tree visualization with tree-maps: \n2-d space-filling approach. ACM Transactions on \nGraphics (TOG), 1 2. 11 (1): p. 2 - .  \n13. Sharp, J. W., The Internet. Changing the Way Cancer \nSurvivors Obtain Information. Cancer Pract, 1 . \n7(8 September 01, 1 ): p. 266-26 .  \n14. Verbyla, J., The Seven Habits of Effective Web \nManagers, in 3rd Australian World Wide Web \nConference. 1 7: Lismore, Australia. \nhttp:\/\/ausweb.scu.edu.au\/proceedings\/verbyla\/\n1 . WebThing, Accessibility Valet. 2004. \nhttp:\/\/valet.webthing.com\/access\/\nProceedings of the 29th Annual International Computer Software and Applications Conference (COMPSAC\u201905) \n0730-3157\/05 $20.00 \u00a9 2005 IEEE \n"}