{"doi":"10.1007\/978-3-540-45187-7_6","coreId":"193695","oai":"oai:lra.le.ac.uk:2381\/3492","identifiers":["oai:lra.le.ac.uk:2381\/3492","10.1007\/978-3-540-45187-7_6"],"title":"Priority Rewrite Systems for OSOS Process Languages","authors":["Ulidowski, Irek"],"enrichments":{"references":[],"documentType":{"type":null}},"contributors":[],"datePublished":"2003","abstract":"We propose a procedure for generating a Priority Rewrite System (PRS) for an arbitrary process language in the OSOS format. Rewriting of process terms is sound for bisimulation and head normalising within the produced PRSs. For a subclass of process languages representing finite behaviours the generated PRSs are strongly normalising (terminating), confluent and complete for bisimulation for closed terms modulo associativity and commutativity of the choice operator. We illustrate the usefulness of our procedure with several examples","downloadUrl":"","fullTextIdentifier":null,"pdfHashValue":null,"publisher":null,"rawRecordXml":"<record><header><identifier>\n        \n            \n                oai:lra.le.ac.uk:2381\/3492<\/identifier><datestamp>\n                2015-12-22T12:24:38Z<\/datestamp><setSpec>\n                com_2381_316<\/setSpec><setSpec>\n                com_2381_9549<\/setSpec><setSpec>\n                col_2381_4072<\/setSpec>\n            <\/header><metadata><oai_dc:dc xmlns:oai_dc=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/\" xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:doc=\"http:\/\/www.lyncode.com\/xoai\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc\/ http:\/\/www.openarchives.org\/OAI\/2.0\/oai_dc.xsd\" ><dc:title>\n            \nPriority Rewrite Systems for OSOS Process Languages<\/dc:title><dc:creator>\nUlidowski, Irek<\/dc:creator><dc:description>\nWe propose a procedure for generating a Priority Rewrite System (PRS) for an arbitrary process language in the OSOS format. Rewriting of process terms is sound for bisimulation and head normalising within the produced PRSs. For a subclass of process languages representing finite behaviours the generated PRSs are strongly normalising (terminating), confluent and complete for bisimulation for closed terms modulo associativity and commutativity of the choice operator. We illustrate the usefulness of our procedure with several examples.<\/dc:description><dc:date>\n2009-12-08T16:13:53Z<\/dc:date><dc:date>\n2009-12-08T16:13:53Z<\/dc:date><dc:date>\n2003<\/dc:date><dc:type>\nConference paper<\/dc:type><dc:identifier>\nRoberto M. Amadio, Denis Lugiez (Eds.): CONCUR 2003 - Concurrency Theory, 14th International Conference, Marseille, France, September 3-5, 2003, Proceedings. Lecture Notes in Computer Science, 2003, 2761, pp. 87-102<\/dc:identifier><dc:identifier>\n9783540407539<\/dc:identifier><dc:identifier>\nhttp:\/\/link.springer.com\/chapter\/10.1007\/978-3-540-45187-7_6<\/dc:identifier><dc:identifier>\nhttp:\/\/hdl.handle.net\/2381\/3492<\/dc:identifier><dc:identifier>\n10.1007\/978-3-540-45187-7_6<\/dc:identifier><dc:language>\nen<\/dc:language><dc:relation>\nRAE 2007<\/dc:relation><dc:format>\nMetadata<\/dc:format>\n<\/oai_dc:dc>\n<\/metadata>\n        <\/record>","journals":null,"language":null,"relations":["RAE 2007"],"year":2003,"topics":[],"subject":["Conference paper"],"fullText":null}